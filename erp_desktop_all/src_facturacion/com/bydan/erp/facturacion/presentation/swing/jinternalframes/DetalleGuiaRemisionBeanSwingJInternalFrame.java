/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.facturacion.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.facturacion.util.DetalleGuiaRemisionConstantesFunciones;
import com.bydan.erp.facturacion.util.DetalleGuiaRemisionParameterReturnGeneral;
//import com.bydan.erp.facturacion.util.DetalleGuiaRemisionParameterGeneral;
//import com.bydan.erp.facturacion.presentation.report.source.DetalleGuiaRemisionBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.facturacion.resources.reportes.AuxiliarReportes;


import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.facturacion.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.facturacion.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class DetalleGuiaRemisionBeanSwingJInternalFrame extends DetalleGuiaRemisionJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(DetalleGuiaRemisionBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<DetalleGuiaRemision> detalleguiaremisionValidator = new ClassValidator<DetalleGuiaRemision>(DetalleGuiaRemision.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public DetalleGuiaRemision detalleguiaremision;	
	public DetalleGuiaRemision detalleguiaremisionAux;
	public DetalleGuiaRemision detalleguiaremisionAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public DetalleGuiaRemision detalleguiaremisionTotales;
	public Long idDetalleGuiaRemisionActual;
	public Long iIdNuevoDetalleGuiaRemision=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboGuiaRemision="";

	public List<GuiaRemision> guiaremisionsForeignKey;

	public List<GuiaRemision> getguiaremisionsForeignKey() {
		return guiaremisionsForeignKey;
	}

	public void setguiaremisionsForeignKey(List<GuiaRemision> guiaremisionsForeignKey) {
		this.guiaremisionsForeignKey = guiaremisionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public GuiaRemision guiaremisionForeignKey;

	public GuiaRemision getguiaremisionForeignKey() {
		return guiaremisionForeignKey;
	}

	public void setguiaremisionForeignKey(GuiaRemision guiaremisionForeignKey) {
		this.guiaremisionForeignKey = guiaremisionForeignKey;
	}

	public String sFinalQueryComboBodega="";

	public List<Bodega> bodegasForeignKey;

	public List<Bodega> getbodegasForeignKey() {
		return bodegasForeignKey;
	}

	public void setbodegasForeignKey(List<Bodega> bodegasForeignKey) {
		this.bodegasForeignKey = bodegasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Bodega bodegaForeignKey;

	public Bodega getbodegaForeignKey() {
		return bodegaForeignKey;
	}

	public void setbodegaForeignKey(Bodega bodegaForeignKey) {
		this.bodegaForeignKey = bodegaForeignKey;
	}

	public String sFinalQueryComboProducto="";

	public List<Producto> productosForeignKey;

	public List<Producto> getproductosForeignKey() {
		return productosForeignKey;
	}

	public void setproductosForeignKey(List<Producto> productosForeignKey) {
		this.productosForeignKey = productosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Producto productoForeignKey;

	public Producto getproductoForeignKey() {
		return productoForeignKey;
	}

	public void setproductoForeignKey(Producto productoForeignKey) {
		this.productoForeignKey = productoForeignKey;
	}

	public String sFinalQueryComboUnidad="";

	public List<Unidad> unidadsForeignKey;

	public List<Unidad> getunidadsForeignKey() {
		return unidadsForeignKey;
	}

	public void setunidadsForeignKey(List<Unidad> unidadsForeignKey) {
		this.unidadsForeignKey = unidadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Unidad unidadForeignKey;

	public Unidad getunidadForeignKey() {
		return unidadForeignKey;
	}

	public void setunidadForeignKey(Unidad unidadForeignKey) {
		this.unidadForeignKey = unidadForeignKey;
	}

	public String sFinalQueryComboCentroCosto="";

	public List<CentroCosto> centrocostosForeignKey;

	public List<CentroCosto> getcentrocostosForeignKey() {
		return centrocostosForeignKey;
	}

	public void setcentrocostosForeignKey(List<CentroCosto> centrocostosForeignKey) {
		this.centrocostosForeignKey = centrocostosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CentroCosto centrocostoForeignKey;

	public CentroCosto getcentrocostoForeignKey() {
		return centrocostoForeignKey;
	}

	public void setcentrocostoForeignKey(CentroCosto centrocostoForeignKey) {
		this.centrocostoForeignKey = centrocostoForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idProductoActual=0L;

	public Long getidProductoActual() {
		return idProductoActual;
	}

	public void setidProductoActual(Long idProductoActual) {
		this.idProductoActual= idProductoActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoDetalleGuiaRemision;
	public Boolean isPermisoNuevoDetalleGuiaRemision;
	public Boolean isPermisoActualizarDetalleGuiaRemision;
	public Boolean isPermisoActualizarOriginalDetalleGuiaRemision;
	public Boolean isPermisoEliminarDetalleGuiaRemision;
	public Boolean isPermisoGuardarCambiosDetalleGuiaRemision;
	public Boolean isPermisoConsultaDetalleGuiaRemision;
	public Boolean isPermisoBusquedaDetalleGuiaRemision;
	public Boolean isPermisoReporteDetalleGuiaRemision;
	public Boolean isPermisoPaginacionMedioDetalleGuiaRemision;
	public Boolean isPermisoPaginacionAltoDetalleGuiaRemision;
	public Boolean isPermisoPaginacionTodoDetalleGuiaRemision;
	public Boolean isPermisoCopiarDetalleGuiaRemision;
	public Boolean isPermisoVerFormDetalleGuiaRemision;
	public Boolean isPermisoDuplicarDetalleGuiaRemision;
	public Boolean isPermisoOrdenDetalleGuiaRemision;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public DetalleGuiaRemisionParameterReturnGeneral detalleguiaremisionReturnGeneral;
	public DetalleGuiaRemisionParameterReturnGeneral detalleguiaremisionParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoDetalleGuiaRemision=false;
	public Boolean esParaAccionDesdeFormularioDetalleGuiaRemision=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected DetalleGuiaRemisionSessionBeanAdditional detalleguiaremisionSessionBeanAdditional=null;
	
	public DetalleGuiaRemisionSessionBeanAdditional getDetalleGuiaRemisionSessionBeanAdditional() {
		return this.detalleguiaremisionSessionBeanAdditional;
	}
	
	public void setDetalleGuiaRemisionSessionBeanAdditional(DetalleGuiaRemisionSessionBeanAdditional detalleguiaremisionSessionBeanAdditional) {
		try {
			this.detalleguiaremisionSessionBeanAdditional=detalleguiaremisionSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected DetalleGuiaRemisionBeanSwingJInternalFrameAdditional detalleguiaremisionBeanSwingJInternalFrameAdditional=null;
	//public class DetalleGuiaRemisionBeanSwingJInternalFrame
	
	public DetalleGuiaRemisionBeanSwingJInternalFrameAdditional getDetalleGuiaRemisionBeanSwingJInternalFrameAdditional() {
		return this.detalleguiaremisionBeanSwingJInternalFrameAdditional;
	}
	
	public void setDetalleGuiaRemisionBeanSwingJInternalFrameAdditional(DetalleGuiaRemisionBeanSwingJInternalFrameAdditional detalleguiaremisionBeanSwingJInternalFrameAdditional) {
		try {
			this.detalleguiaremisionBeanSwingJInternalFrameAdditional=detalleguiaremisionBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public DetalleGuiaRemisionLogic detalleguiaremisionLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public DetalleGuiaRemision detalleguiaremisionBean;
	public DetalleGuiaRemisionConstantesFunciones detalleguiaremisionConstantesFunciones;
	//public DetalleGuiaRemisionParameterReturnGeneral detalleguiaremisionReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public GuiaRemisionLogic guiaremisionLogic;
	public BodegaLogic bodegaLogic;
	public ProductoLogic productoLogic;
	public UnidadLogic unidadLogic;
	public CentroCostoLogic centrocostoLogic;
	
	//PARAMETROS
	
	
	//public List<DetalleGuiaRemision> detalleguiaremisions;	
	//public List<DetalleGuiaRemision> detalleguiaremisionsEliminados;
	//public List<DetalleGuiaRemision> detalleguiaremisionsAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoDetalleGuiaRemision=false;
	public Boolean isVisibilidadCeldaDuplicarDetalleGuiaRemision=true;
	public Boolean isVisibilidadCeldaCopiarDetalleGuiaRemision=true;
	public Boolean isVisibilidadCeldaVerFormDetalleGuiaRemision=true;
	public Boolean isVisibilidadCeldaOrdenDetalleGuiaRemision=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision=false;
	public Boolean isVisibilidadCeldaModificarDetalleGuiaRemision=false;
	public Boolean isVisibilidadCeldaActualizarDetalleGuiaRemision=false;
	public Boolean isVisibilidadCeldaEliminarDetalleGuiaRemision=false;
	public Boolean isVisibilidadCeldaCancelarDetalleGuiaRemision=false;
	public Boolean isVisibilidadCeldaGuardarDetalleGuiaRemision=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosDetalleGuiaRemision=false;	
	
	
	public Boolean isVisibilidadFK_IdBodega=false;
	public Boolean isVisibilidadFK_IdCentroCosto=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdGuiaRemision=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdProducto=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdUnidad=false;
	
	public Long getiIdNuevoDetalleGuiaRemision() {
		return this.iIdNuevoDetalleGuiaRemision;
	}

	public void setiIdNuevoDetalleGuiaRemision(Long iIdNuevoDetalleGuiaRemision) {
		this.iIdNuevoDetalleGuiaRemision = iIdNuevoDetalleGuiaRemision;
	}
	
	public Long getidDetalleGuiaRemisionActual() {
		return this.idDetalleGuiaRemisionActual;
	}

	public void setidDetalleGuiaRemisionActual(Long idDetalleGuiaRemisionActual) {
		this.idDetalleGuiaRemisionActual = idDetalleGuiaRemisionActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public DetalleGuiaRemision getdetalleguiaremision() {
		return this.detalleguiaremision;
	}

	public void setdetalleguiaremision(DetalleGuiaRemision detalleguiaremision) {
		this.detalleguiaremision = detalleguiaremision;
	}
	
	public DetalleGuiaRemision getdetalleguiaremisionAux() {
		return this.detalleguiaremisionAux;
	}

	public void setdetalleguiaremisionAux(DetalleGuiaRemision detalleguiaremisionAux) {
		this.detalleguiaremisionAux = detalleguiaremisionAux;
	}				
	
	public DetalleGuiaRemision getdetalleguiaremisionAnterior() {
		return this.detalleguiaremisionAnterior;
	}

	public void setdetalleguiaremisionAnterior(DetalleGuiaRemision detalleguiaremisionAnterior) {
		this.detalleguiaremisionAnterior = detalleguiaremisionAnterior;
	}	
	
	public DetalleGuiaRemision getdetalleguiaremisionTotales() {
		return this.detalleguiaremisionTotales;
	}

	public void setdetalleguiaremisionTotales(DetalleGuiaRemision detalleguiaremisionTotales) {
		this.detalleguiaremisionTotales = detalleguiaremisionTotales;
	}	
	
	public DetalleGuiaRemision getdetalleguiaremisionBean() {
		return this.detalleguiaremisionBean;
	}

	public void setdetalleguiaremisionBean(DetalleGuiaRemision detalleguiaremisionBean) {
		this.detalleguiaremisionBean = detalleguiaremisionBean;
	}	
	
	public DetalleGuiaRemisionParameterReturnGeneral getdetalleguiaremisionReturnGeneral() {
		return this.detalleguiaremisionReturnGeneral;
	}

	public void setdetalleguiaremisionReturnGeneral(DetalleGuiaRemisionParameterReturnGeneral detalleguiaremisionReturnGeneral) {
		this.detalleguiaremisionReturnGeneral = detalleguiaremisionReturnGeneral;
	}	
	
	
	public Long id_bodegaFK_IdBodega=-1L;

	public Long getid_bodegaFK_IdBodega() {
		return this.id_bodegaFK_IdBodega;
	}

	public void setid_bodegaFK_IdBodega(Long id_bodegaFK_IdBodega) {
		this.id_bodegaFK_IdBodega = id_bodegaFK_IdBodega;
	}

	public Long id_centro_costoFK_IdCentroCosto=null;

	public Long getid_centro_costoFK_IdCentroCosto() {
		return this.id_centro_costoFK_IdCentroCosto;
	}

	public void setid_centro_costoFK_IdCentroCosto(Long id_centro_costoFK_IdCentroCosto) {
		this.id_centro_costoFK_IdCentroCosto = id_centro_costoFK_IdCentroCosto;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_guia_remisionFK_IdGuiaRemision=-1L;

	public Long getid_guia_remisionFK_IdGuiaRemision() {
		return this.id_guia_remisionFK_IdGuiaRemision;
	}

	public void setid_guia_remisionFK_IdGuiaRemision(Long id_guia_remisionFK_IdGuiaRemision) {
		this.id_guia_remisionFK_IdGuiaRemision = id_guia_remisionFK_IdGuiaRemision;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_productoFK_IdProducto=-1L;

	public Long getid_productoFK_IdProducto() {
		return this.id_productoFK_IdProducto;
	}

	public void setid_productoFK_IdProducto(Long id_productoFK_IdProducto) {
		this.id_productoFK_IdProducto = id_productoFK_IdProducto;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_unidadFK_IdUnidad=-1L;

	public Long getid_unidadFK_IdUnidad() {
		return this.id_unidadFK_IdUnidad;
	}

	public void setid_unidadFK_IdUnidad(Long id_unidadFK_IdUnidad) {
		this.id_unidadFK_IdUnidad = id_unidadFK_IdUnidad;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public DetalleGuiaRemisionLogic getDetalleGuiaRemisionLogic()	{		
		return detalleguiaremisionLogic;
	}

	public void setDetalleGuiaRemisionLogic(DetalleGuiaRemisionLogic detalleguiaremisionLogic) {
		this.detalleguiaremisionLogic = detalleguiaremisionLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoDetalleGuiaRemision() {
		return isEsNuevoDetalleGuiaRemision;
	}

	public void setIsEsNuevoDetalleGuiaRemision(Boolean isEsNuevoDetalleGuiaRemision) {
		this.isEsNuevoDetalleGuiaRemision = isEsNuevoDetalleGuiaRemision;
	}

	public Boolean getEsParaAccionDesdeFormularioDetalleGuiaRemision() {
		return esParaAccionDesdeFormularioDetalleGuiaRemision;
	}
	
	public void setEsParaAccionDesdeFormularioDetalleGuiaRemision(Boolean esParaAccionDesdeFormularioDetalleGuiaRemision) {
		this.esParaAccionDesdeFormularioDetalleGuiaRemision = esParaAccionDesdeFormularioDetalleGuiaRemision;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.detalleguiaremisionSessionBean==null) {
				this.detalleguiaremisionSessionBean=new DetalleGuiaRemisionSessionBean();
			}

			if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(detalleguiaremisionSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.detalleguiaremisionSessionBean==null) {
				this.detalleguiaremisionSessionBean=new DetalleGuiaRemisionSessionBean();
			}

			if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(detalleguiaremisionSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.detalleguiaremisionSessionBean==null) {
				this.detalleguiaremisionSessionBean=new DetalleGuiaRemisionSessionBean();
			}

			if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(detalleguiaremisionSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.detalleguiaremisionSessionBean==null) {
				this.detalleguiaremisionSessionBean=new DetalleGuiaRemisionSessionBean();
			}

			if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(detalleguiaremisionSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosGuiaRemisionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.guiaremisionsForeignKey=new ArrayList<GuiaRemision>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			GuiaRemisionLogic guiaremisionLogic=new GuiaRemisionLogic();

			//guiaremisionLogic.getGuiaRemisionDataAccess().setIsForForeingKeyData(true);

			if(this.detalleguiaremisionSessionBean==null) {
				this.detalleguiaremisionSessionBean=new DetalleGuiaRemisionSessionBean();
			}

			if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionGuiaRemision()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//guiaremisionLogic.getGuiaRemisionDataAccess().setIsForForeingKeyData(true);

					guiaremisionLogic.getTodosGuiaRemisionsWithConnection(sFinalQuery,new Pagination());

					this.guiaremisionsForeignKey=guiaremisionLogic.getGuiaRemisions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaGuiaRemision(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					guiaremisionLogic.getEntityWithConnection(detalleguiaremisionSessionBean.getlidGuiaRemisionActual());
					this.guiaremisionsForeignKey.add(guiaremisionLogic.getGuiaRemision());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBodegasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bodegasForeignKey=new ArrayList<Bodega>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			BodegaLogic bodegaLogic=new BodegaLogic();

			//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

			if(this.detalleguiaremisionSessionBean==null) {
				this.detalleguiaremisionSessionBean=new DetalleGuiaRemisionSessionBean();
			}

			if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

					bodegaLogic.getTodosBodegasWithConnection(sFinalQuery,new Pagination());

					this.bodegasForeignKey=bodegaLogic.getBodegas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBodega(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaLogic.getEntityWithConnection(detalleguiaremisionSessionBean.getlidBodegaActual());
					this.bodegasForeignKey.add(bodegaLogic.getBodega());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosProductosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.productosForeignKey=new ArrayList<Producto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ProductoLogic productoLogic=new ProductoLogic();

			//productoLogic.getProductoDataAccess().setIsForForeingKeyData(true);

			if(this.detalleguiaremisionSessionBean==null) {
				this.detalleguiaremisionSessionBean=new DetalleGuiaRemisionSessionBean();
			}

			if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//productoLogic.getProductoDataAccess().setIsForForeingKeyData(true);

					productoLogic.getTodosProductosWithConnection(sFinalQuery,new Pagination());

					this.productosForeignKey=productoLogic.getProductos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaProducto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getEntityWithConnection(detalleguiaremisionSessionBean.getlidProductoActual());
					this.productosForeignKey.add(productoLogic.getProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUnidadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.unidadsForeignKey=new ArrayList<Unidad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UnidadLogic unidadLogic=new UnidadLogic();

			//unidadLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

			if(this.detalleguiaremisionSessionBean==null) {
				this.detalleguiaremisionSessionBean=new DetalleGuiaRemisionSessionBean();
			}

			if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//unidadLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

					unidadLogic.getTodosUnidadsWithConnection(sFinalQuery,new Pagination());

					this.unidadsForeignKey=unidadLogic.getUnidads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUnidad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					unidadLogic.getEntityWithConnection(detalleguiaremisionSessionBean.getlidUnidadActual());
					this.unidadsForeignKey.add(unidadLogic.getUnidad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCentroCostosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.centrocostosForeignKey=new ArrayList<CentroCosto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CentroCosto centrocostoNulo = new CentroCosto();

			CentroCostoLogic centrocostoLogic=new CentroCostoLogic();

			//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

			if(this.detalleguiaremisionSessionBean==null) {
				this.detalleguiaremisionSessionBean=new DetalleGuiaRemisionSessionBean();
			}

			if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

					centrocostoLogic.getTodosCentroCostosWithConnection(sFinalQuery,new Pagination());

					this.centrocostosForeignKey=centrocostoLogic.getCentroCostos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.centrocostosForeignKey.add(0, centrocostoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCentroCosto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(detalleguiaremisionSessionBean.getlidCentroCostoActual());
					this.centrocostosForeignKey.add(centrocostoLogic.getCentroCosto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.detalleguiaremision!=null) {
						this.detalleguiaremision.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_empresaDetalleGuiaRemision.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaDetalleGuiaRemision.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_empresaDetalleGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_empresaDetalleGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaDetalleGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaDetalleGuiaRemisionGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaDetalleGuiaRemisionGenerico!=null && jComboBoxid_empresaDetalleGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_empresaDetalleGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.detalleguiaremision!=null) {
						this.detalleguiaremision.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_sucursalDetalleGuiaRemision.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalDetalleGuiaRemision.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_sucursalDetalleGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_sucursalDetalleGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalDetalleGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalDetalleGuiaRemisionGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalDetalleGuiaRemisionGenerico!=null && jComboBoxid_sucursalDetalleGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_sucursalDetalleGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.detalleguiaremision!=null) {
						this.detalleguiaremision.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_ejercicioDetalleGuiaRemision.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioDetalleGuiaRemision.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_ejercicioDetalleGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_ejercicioDetalleGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioDetalleGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioDetalleGuiaRemisionGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioDetalleGuiaRemisionGenerico!=null && jComboBoxid_ejercicioDetalleGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioDetalleGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.detalleguiaremision!=null) {
						this.detalleguiaremision.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_periodoDetalleGuiaRemision.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoDetalleGuiaRemision.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_periodoDetalleGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_periodoDetalleGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoDetalleGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoDetalleGuiaRemisionGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoDetalleGuiaRemisionGenerico!=null && jComboBoxid_periodoDetalleGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_periodoDetalleGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualGuiaRemisionForeignKey(Long idGuiaRemisionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			GuiaRemision  guiaremisionTemp=null;

			for(GuiaRemision guiaremisionAux:guiaremisionsForeignKey) {
				if(guiaremisionAux.getId()!=null && guiaremisionAux.getId().equals(idGuiaRemisionSeleccionado)) {
					guiaremisionTemp=guiaremisionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(guiaremisionTemp!=null) {

					if(this.detalleguiaremision!=null) {
						this.detalleguiaremision.setGuiaRemision(guiaremisionTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_guia_remisionDetalleGuiaRemision.setSelectedItem(guiaremisionTemp);
					}
				} else {
					//jComboBoxid_guia_remisionDetalleGuiaRemision.setSelectedItem(guiaremisionTemp);
					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_guia_remisionDetalleGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_guia_remisionDetalleGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdGuiaRemision") || sFormularioTipoBusqueda.equals("Todos")){
					if(guiaremisionTemp!=null && jComboBoxid_guia_remisionFK_IdGuiaRemisionDetalleGuiaRemision!=null) {
						jComboBoxid_guia_remisionFK_IdGuiaRemisionDetalleGuiaRemision.setSelectedItem(guiaremisionTemp);
					} else {
						if(jComboBoxid_guia_remisionFK_IdGuiaRemisionDetalleGuiaRemision!=null) {
							//jComboBoxid_guia_remisionFK_IdGuiaRemisionDetalleGuiaRemision.setSelectedItem(guiaremisionTemp);
							if(jComboBoxid_guia_remisionFK_IdGuiaRemisionDetalleGuiaRemision.getItemCount()>0) {
								jComboBoxid_guia_remisionFK_IdGuiaRemisionDetalleGuiaRemision.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualGuiaRemisionForeignKeyDescripcion(Long idGuiaRemisionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			GuiaRemision  guiaremisionTemp=null;

			for(GuiaRemision guiaremisionAux:guiaremisionsForeignKey) {
				if(guiaremisionAux.getId()!=null && guiaremisionAux.getId().equals(idGuiaRemisionSeleccionado)) {
					guiaremisionTemp=guiaremisionAux;
					break;
				}
			}


			sDescripcion=GuiaRemisionConstantesFunciones.getGuiaRemisionDescripcion(guiaremisionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualGuiaRemisionForeignKeyGenerico(Long idGuiaRemisionSeleccionado,JComboBox jComboBoxid_guia_remisionDetalleGuiaRemisionGenerico)throws Exception
	{
		try
		{
			GuiaRemision  guiaremisionTemp=null;

			for(GuiaRemision guiaremisionAux:guiaremisionsForeignKey) {
				if(guiaremisionAux.getId()!=null && guiaremisionAux.getId().equals(idGuiaRemisionSeleccionado)) {
					guiaremisionTemp=guiaremisionAux;
					break;
				}
			}

			if(guiaremisionTemp!=null) {
				jComboBoxid_guia_remisionDetalleGuiaRemisionGenerico.setSelectedItem(guiaremisionTemp);
			} else {
				if(jComboBoxid_guia_remisionDetalleGuiaRemisionGenerico!=null && jComboBoxid_guia_remisionDetalleGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_guia_remisionDetalleGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBodegaForeignKey(Long idBodegaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bodegaTemp!=null) {

					if(this.detalleguiaremision!=null) {
						this.detalleguiaremision.setBodega(bodegaTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision.setSelectedItem(bodegaTemp);
					}
				} else {
					//jComboBoxid_bodegaDetalleGuiaRemision.setSelectedItem(bodegaTemp);
					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){
					if(bodegaTemp!=null && jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision!=null) {
						jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision.setSelectedItem(bodegaTemp);
					} else {
						if(jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision!=null) {
							//jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision.setSelectedItem(bodegaTemp);
							if(jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision.getItemCount()>0) {
								jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBodegaForeignKeyDescripcion(Long idBodegaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}


			sDescripcion=BodegaConstantesFunciones.getBodegaDescripcion(bodegaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBodegaForeignKeyGenerico(Long idBodegaSeleccionado,JComboBox jComboBoxid_bodegaDetalleGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(bodegaTemp!=null) {
				jComboBoxid_bodegaDetalleGuiaRemisionGenerico.setSelectedItem(bodegaTemp);
			} else {
				if(jComboBoxid_bodegaDetalleGuiaRemisionGenerico!=null && jComboBoxid_bodegaDetalleGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_bodegaDetalleGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualProductoForeignKey(Long idProductoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(productoTemp!=null) {

					if(this.detalleguiaremision!=null) {
						this.detalleguiaremision.setProducto(productoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision.setSelectedItem(productoTemp);
					}
				} else {
					//jComboBoxid_productoDetalleGuiaRemision.setSelectedItem(productoTemp);
					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdProducto") || sFormularioTipoBusqueda.equals("Todos")){
					if(productoTemp!=null && jComboBoxid_productoFK_IdProductoDetalleGuiaRemision!=null) {
						jComboBoxid_productoFK_IdProductoDetalleGuiaRemision.setSelectedItem(productoTemp);
					} else {
						if(jComboBoxid_productoFK_IdProductoDetalleGuiaRemision!=null) {
							//jComboBoxid_productoFK_IdProductoDetalleGuiaRemision.setSelectedItem(productoTemp);
							if(jComboBoxid_productoFK_IdProductoDetalleGuiaRemision.getItemCount()>0) {
								jComboBoxid_productoFK_IdProductoDetalleGuiaRemision.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualProductoForeignKeyDescripcion(Long idProductoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}


			sDescripcion=ProductoConstantesFunciones.getProductoDescripcion(productoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualProductoForeignKeyGenerico(Long idProductoSeleccionado,JComboBox jComboBoxid_productoDetalleGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}

			if(productoTemp!=null) {
				jComboBoxid_productoDetalleGuiaRemisionGenerico.setSelectedItem(productoTemp);
			} else {
				if(jComboBoxid_productoDetalleGuiaRemisionGenerico!=null && jComboBoxid_productoDetalleGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_productoDetalleGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUnidadForeignKey(Long idUnidadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(unidadTemp!=null) {

					if(this.detalleguiaremision!=null) {
						this.detalleguiaremision.setUnidad(unidadTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_unidadDetalleGuiaRemision.setSelectedItem(unidadTemp);
					}
				} else {
					//jComboBoxid_unidadDetalleGuiaRemision.setSelectedItem(unidadTemp);
					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_unidadDetalleGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_unidadDetalleGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdUnidad") || sFormularioTipoBusqueda.equals("Todos")){
					if(unidadTemp!=null && jComboBoxid_unidadFK_IdUnidadDetalleGuiaRemision!=null) {
						jComboBoxid_unidadFK_IdUnidadDetalleGuiaRemision.setSelectedItem(unidadTemp);
					} else {
						if(jComboBoxid_unidadFK_IdUnidadDetalleGuiaRemision!=null) {
							//jComboBoxid_unidadFK_IdUnidadDetalleGuiaRemision.setSelectedItem(unidadTemp);
							if(jComboBoxid_unidadFK_IdUnidadDetalleGuiaRemision.getItemCount()>0) {
								jComboBoxid_unidadFK_IdUnidadDetalleGuiaRemision.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUnidadForeignKeyDescripcion(Long idUnidadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}


			sDescripcion=UnidadConstantesFunciones.getUnidadDescripcion(unidadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUnidadForeignKeyGenerico(Long idUnidadSeleccionado,JComboBox jComboBoxid_unidadDetalleGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}

			if(unidadTemp!=null) {
				jComboBoxid_unidadDetalleGuiaRemisionGenerico.setSelectedItem(unidadTemp);
			} else {
				if(jComboBoxid_unidadDetalleGuiaRemisionGenerico!=null && jComboBoxid_unidadDetalleGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_unidadDetalleGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCentroCostoForeignKey(Long idCentroCostoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(centrocostoTemp!=null) {

					if(this.detalleguiaremision!=null) {
						this.detalleguiaremision.setCentroCosto(centrocostoTemp);
					}

					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_centro_costoDetalleGuiaRemision.setSelectedItem(centrocostoTemp);
					}
				} else {
					//jComboBoxid_centro_costoDetalleGuiaRemision.setSelectedItem(centrocostoTemp);
					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_centro_costoDetalleGuiaRemision.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_centro_costoDetalleGuiaRemision.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){
					if(centrocostoTemp!=null && jComboBoxid_centro_costoFK_IdCentroCostoDetalleGuiaRemision!=null) {
						jComboBoxid_centro_costoFK_IdCentroCostoDetalleGuiaRemision.setSelectedItem(centrocostoTemp);
					} else {
						if(jComboBoxid_centro_costoFK_IdCentroCostoDetalleGuiaRemision!=null) {
							//jComboBoxid_centro_costoFK_IdCentroCostoDetalleGuiaRemision.setSelectedItem(centrocostoTemp);
							if(jComboBoxid_centro_costoFK_IdCentroCostoDetalleGuiaRemision.getItemCount()>0) {
								jComboBoxid_centro_costoFK_IdCentroCostoDetalleGuiaRemision.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCentroCostoForeignKeyDescripcion(Long idCentroCostoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}


			sDescripcion=CentroCostoConstantesFunciones.getCentroCostoDescripcion(centrocostoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCentroCostoForeignKeyGenerico(Long idCentroCostoSeleccionado,JComboBox jComboBoxid_centro_costoDetalleGuiaRemisionGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(centrocostoTemp!=null) {
				jComboBoxid_centro_costoDetalleGuiaRemisionGenerico.setSelectedItem(centrocostoTemp);
			} else {
				if(jComboBoxid_centro_costoDetalleGuiaRemisionGenerico!=null && jComboBoxid_centro_costoDetalleGuiaRemisionGenerico.getItemCount()>0) {
					jComboBoxid_centro_costoDetalleGuiaRemisionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(DetalleGuiaRemision detalleguiaremision,JComboBox jComboBoxid_empresaDetalleGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaDetalleGuiaRemisionGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_empresaDetalleGuiaRemision.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaDetalleGuiaRemisionGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				detalleguiaremision.setid_empresa(empresaAux.getId());
				detalleguiaremision.setempresa_descripcion(DetalleGuiaRemisionConstantesFunciones.getEmpresaDescripcion(empresaAux));
				detalleguiaremision.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(DetalleGuiaRemision detalleguiaremision,JComboBox jComboBoxid_sucursalDetalleGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalDetalleGuiaRemisionGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_sucursalDetalleGuiaRemision.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalDetalleGuiaRemisionGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				detalleguiaremision.setid_sucursal(sucursalAux.getId());
				detalleguiaremision.setsucursal_descripcion(DetalleGuiaRemisionConstantesFunciones.getSucursalDescripcion(sucursalAux));
				detalleguiaremision.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(DetalleGuiaRemision detalleguiaremision,JComboBox jComboBoxid_ejercicioDetalleGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioDetalleGuiaRemisionGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_ejercicioDetalleGuiaRemision.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioDetalleGuiaRemisionGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				detalleguiaremision.setid_ejercicio(ejercicioAux.getId());
				detalleguiaremision.setejercicio_descripcion(DetalleGuiaRemisionConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				detalleguiaremision.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(DetalleGuiaRemision detalleguiaremision,JComboBox jComboBoxid_periodoDetalleGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoDetalleGuiaRemisionGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_periodoDetalleGuiaRemision.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoDetalleGuiaRemisionGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				detalleguiaremision.setid_periodo(periodoAux.getId());
				detalleguiaremision.setperiodo_descripcion(DetalleGuiaRemisionConstantesFunciones.getPeriodoDescripcion(periodoAux));
				detalleguiaremision.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarGuiaRemisionForeignKey(DetalleGuiaRemision detalleguiaremision,JComboBox jComboBoxid_guia_remisionDetalleGuiaRemisionGenerico)throws Exception
	{
		try
		{
			GuiaRemision  guiaremisionAux=new GuiaRemision();

			if(jComboBoxid_guia_remisionDetalleGuiaRemisionGenerico==null) {
				guiaremisionAux=(GuiaRemision)this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_guia_remisionDetalleGuiaRemision.getSelectedItem();
			} else {
				guiaremisionAux=(GuiaRemision)jComboBoxid_guia_remisionDetalleGuiaRemisionGenerico.getSelectedItem();
			}

			if(guiaremisionAux!=null && guiaremisionAux.getId()!=null) {
				detalleguiaremision.setid_guia_remision(guiaremisionAux.getId());
				detalleguiaremision.setguiaremision_descripcion(DetalleGuiaRemisionConstantesFunciones.getGuiaRemisionDescripcion(guiaremisionAux));
				detalleguiaremision.setGuiaRemision(guiaremisionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBodegaForeignKey(DetalleGuiaRemision detalleguiaremision,JComboBox jComboBoxid_bodegaDetalleGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaAux=new Bodega();

			if(jComboBoxid_bodegaDetalleGuiaRemisionGenerico==null) {
				bodegaAux=(Bodega)this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision.getSelectedItem();
			} else {
				bodegaAux=(Bodega)jComboBoxid_bodegaDetalleGuiaRemisionGenerico.getSelectedItem();
			}

			if(bodegaAux!=null && bodegaAux.getId()!=null) {
				detalleguiaremision.setid_bodega(bodegaAux.getId());
				detalleguiaremision.setbodega_descripcion(DetalleGuiaRemisionConstantesFunciones.getBodegaDescripcion(bodegaAux));
				detalleguiaremision.setBodega(bodegaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarProductoForeignKey(DetalleGuiaRemision detalleguiaremision,JComboBox jComboBoxid_productoDetalleGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Producto  productoAux=new Producto();

			if(jComboBoxid_productoDetalleGuiaRemisionGenerico==null) {
				productoAux=(Producto)this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision.getSelectedItem();
			} else {
				productoAux=(Producto)jComboBoxid_productoDetalleGuiaRemisionGenerico.getSelectedItem();
			}

			if(productoAux!=null && productoAux.getId()!=null) {
				detalleguiaremision.setid_producto(productoAux.getId());
				detalleguiaremision.setproducto_descripcion(DetalleGuiaRemisionConstantesFunciones.getProductoDescripcion(productoAux));
				detalleguiaremision.setProducto(productoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUnidadForeignKey(DetalleGuiaRemision detalleguiaremision,JComboBox jComboBoxid_unidadDetalleGuiaRemisionGenerico)throws Exception
	{
		try
		{
			Unidad  unidadAux=new Unidad();

			if(jComboBoxid_unidadDetalleGuiaRemisionGenerico==null) {
				unidadAux=(Unidad)this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_unidadDetalleGuiaRemision.getSelectedItem();
			} else {
				unidadAux=(Unidad)jComboBoxid_unidadDetalleGuiaRemisionGenerico.getSelectedItem();
			}

			if(unidadAux!=null && unidadAux.getId()!=null) {
				detalleguiaremision.setid_unidad(unidadAux.getId());
				detalleguiaremision.setunidad_descripcion(DetalleGuiaRemisionConstantesFunciones.getUnidadDescripcion(unidadAux));
				detalleguiaremision.setUnidad(unidadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCentroCostoForeignKey(DetalleGuiaRemision detalleguiaremision,JComboBox jComboBoxid_centro_costoDetalleGuiaRemisionGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoAux=new CentroCosto();

			if(jComboBoxid_centro_costoDetalleGuiaRemisionGenerico==null) {
				centrocostoAux=(CentroCosto)this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_centro_costoDetalleGuiaRemision.getSelectedItem();
			} else {
				centrocostoAux=(CentroCosto)jComboBoxid_centro_costoDetalleGuiaRemisionGenerico.getSelectedItem();
			}

			if(centrocostoAux!=null) {
				detalleguiaremision.setid_centro_costo(centrocostoAux.getId());
				detalleguiaremision.setcentrocosto_descripcion(DetalleGuiaRemisionConstantesFunciones.getCentroCostoDescripcion(centrocostoAux));
				detalleguiaremision.setCentroCosto(centrocostoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_empresaDetalleGuiaRemision.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_empresaDetalleGuiaRemision.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { 
					}

					if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_sucursalDetalleGuiaRemision.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_sucursalDetalleGuiaRemision.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { 
					}

					if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_ejercicioDetalleGuiaRemision.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_ejercicioDetalleGuiaRemision.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { 
					}

					if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_periodoDetalleGuiaRemision.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_periodoDetalleGuiaRemision.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { 
					}

					if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameGuiaRemisionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingGuiaRemision=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_guia_remisionDetalleGuiaRemision.removeAllItems();

							for(GuiaRemision guiaremision:this.guiaremisionsForeignKey) {
								this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_guia_remisionDetalleGuiaRemision.addItem(guiaremision);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { 
					}

					if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdGuiaRemision") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_guia_remisionFK_IdGuiaRemisionDetalleGuiaRemision.removeAllItems();

							for(GuiaRemision guiaremision:this.guiaremisionsForeignKey) {
								this.jComboBoxid_guia_remisionFK_IdGuiaRemisionDetalleGuiaRemision.addItem(guiaremision);
							}
						}

						if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBodegasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBodega=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision.addItem(bodega);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { 
					}

					if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision.addItem(bodega);
							}
						}

						if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameProductosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingProducto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision.removeAllItems();

							for(Producto producto:this.productosForeignKey) {
								this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision.addItem(producto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { 
					}

					if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdProducto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_productoFK_IdProductoDetalleGuiaRemision.removeAllItems();

							for(Producto producto:this.productosForeignKey) {
								this.jComboBoxid_productoFK_IdProductoDetalleGuiaRemision.addItem(producto);
							}
						}

						if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUnidadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUnidad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_unidadDetalleGuiaRemision.removeAllItems();

							for(Unidad unidad:this.unidadsForeignKey) {
								this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_unidadDetalleGuiaRemision.addItem(unidad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { 
					}

					if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdUnidad") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_unidadFK_IdUnidadDetalleGuiaRemision.removeAllItems();

							for(Unidad unidad:this.unidadsForeignKey) {
								this.jComboBoxid_unidadFK_IdUnidadDetalleGuiaRemision.addItem(unidad);
							}
						}

						if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCentroCostosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCentroCosto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { 
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_centro_costoDetalleGuiaRemision.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_centro_costoDetalleGuiaRemision.addItem(centrocosto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { 
					}

					if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoDetalleGuiaRemision.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jComboBoxid_centro_costoFK_IdCentroCostoDetalleGuiaRemision.addItem(centrocosto);
							}
						}

						if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_empresaDetalleGuiaRemision.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_empresaDetalleGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_sucursalDetalleGuiaRemision.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_sucursalDetalleGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_ejercicioDetalleGuiaRemision.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_ejercicioDetalleGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_periodoDetalleGuiaRemision.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_periodoDetalleGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameGuiaRemisionForeignKey(GuiaRemision guiaremision,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_guia_remisionDetalleGuiaRemision.setSelectedItem(guiaremision);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_guia_remisionDetalleGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_guia_remisionFK_IdGuiaRemisionDetalleGuiaRemision.setSelectedItem(guiaremision);
						} else {
							this.jComboBoxid_guia_remisionFK_IdGuiaRemisionDetalleGuiaRemision.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBodegaForeignKey(Bodega bodega,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision.setSelectedItem(bodega);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision.setSelectedItem(bodega);
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameProductoForeignKey(Producto producto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision.setSelectedItem(producto);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_productoFK_IdProductoDetalleGuiaRemision.setSelectedItem(producto);
						} else {
							this.jComboBoxid_productoFK_IdProductoDetalleGuiaRemision.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUnidadForeignKey(Unidad unidad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_unidadDetalleGuiaRemision.setSelectedItem(unidad);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_unidadDetalleGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_unidadFK_IdUnidadDetalleGuiaRemision.setSelectedItem(unidad);
						} else {
							this.jComboBoxid_unidadFK_IdUnidadDetalleGuiaRemision.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCentroCostoForeignKey(CentroCosto centrocosto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_centro_costoDetalleGuiaRemision.setSelectedItem(centrocosto);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_centro_costoDetalleGuiaRemision.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_centro_costoFK_IdCentroCostoDetalleGuiaRemision.setSelectedItem(centrocosto);
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoDetalleGuiaRemision.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesDetalleGuiaRemision() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			DetalleGuiaRemisionConstantesFunciones.refrescarForeignKeysDescripcionesDetalleGuiaRemision(this.detalleguiaremisionLogic.getDetalleGuiaRemisions());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			DetalleGuiaRemisionConstantesFunciones.refrescarForeignKeysDescripcionesDetalleGuiaRemision(this.detalleguiaremisions);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(GuiaRemision.class));
		classes.add(new Classe(Bodega.class));
		classes.add(new Classe(Producto.class));
		classes.add(new Classe(Unidad.class));
		classes.add(new Classe(CentroCosto.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//detalleguiaremisionLogic.setDetalleGuiaRemisions(this.detalleguiaremisions);
			detalleguiaremisionLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public DetalleGuiaRemisionParameterReturnGeneral getDetalleGuiaRemisionParameterGeneral() {
		return this.detalleguiaremisionParameterGeneral;
	}
	
	public void setDetalleGuiaRemisionParameterGeneral(DetalleGuiaRemisionParameterReturnGeneral detalleguiaremisionParameterGeneral) {
		this.detalleguiaremisionParameterGeneral = detalleguiaremisionParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoDetalleGuiaRemision() {
		return isPermisoTodoDetalleGuiaRemision;
	}

	public void setIsPermisoTodoDetalleGuiaRemision(Boolean isPermisoTodoDetalleGuiaRemision) {
		this.isPermisoTodoDetalleGuiaRemision = isPermisoTodoDetalleGuiaRemision;
	}

	public Boolean getIsPermisoNuevoDetalleGuiaRemision() {
		return isPermisoNuevoDetalleGuiaRemision;
	}

	public void setIsPermisoNuevoDetalleGuiaRemision(Boolean isPermisoNuevoDetalleGuiaRemision) {
		this.isPermisoNuevoDetalleGuiaRemision = isPermisoNuevoDetalleGuiaRemision;
	}

	public Boolean getIsPermisoActualizarDetalleGuiaRemision() {
		return isPermisoActualizarDetalleGuiaRemision;
	}

	public void setIsPermisoActualizarDetalleGuiaRemision(Boolean isPermisoActualizarDetalleGuiaRemision) {
		this.isPermisoActualizarDetalleGuiaRemision = isPermisoActualizarDetalleGuiaRemision;
	}

	public Boolean getIsPermisoEliminarDetalleGuiaRemision() {
		return isPermisoEliminarDetalleGuiaRemision;
	}

	public void setIsPermisoEliminarDetalleGuiaRemision(Boolean isPermisoEliminarDetalleGuiaRemision) {
		this.isPermisoEliminarDetalleGuiaRemision = isPermisoEliminarDetalleGuiaRemision;
	}

	public Boolean getIsPermisoGuardarCambiosDetalleGuiaRemision() {
		return isPermisoGuardarCambiosDetalleGuiaRemision;
	}

	public void setIsPermisoGuardarCambiosDetalleGuiaRemision(Boolean isPermisoGuardarCambiosDetalleGuiaRemision) {
		this.isPermisoGuardarCambiosDetalleGuiaRemision = isPermisoGuardarCambiosDetalleGuiaRemision;
	}
	
	public Boolean getIsPermisoConsultaDetalleGuiaRemision() {
		return isPermisoConsultaDetalleGuiaRemision;
	}

	public void setIsPermisoConsultaDetalleGuiaRemision(Boolean isPermisoConsultaDetalleGuiaRemision) {
		this.isPermisoConsultaDetalleGuiaRemision = isPermisoConsultaDetalleGuiaRemision;
	}

	public Boolean getIsPermisoBusquedaDetalleGuiaRemision() {
		return isPermisoBusquedaDetalleGuiaRemision;
	}

	public void setIsPermisoBusquedaDetalleGuiaRemision(Boolean isPermisoBusquedaDetalleGuiaRemision) {
		this.isPermisoBusquedaDetalleGuiaRemision = isPermisoBusquedaDetalleGuiaRemision;
	}

	public Boolean getIsPermisoReporteDetalleGuiaRemision() {
		return isPermisoReporteDetalleGuiaRemision;
	}

	public void setIsPermisoReporteDetalleGuiaRemision(Boolean isPermisoReporteDetalleGuiaRemision) {
		this.isPermisoReporteDetalleGuiaRemision = isPermisoReporteDetalleGuiaRemision;
	}
	
	public Boolean getIsPermisoPaginacionMedioDetalleGuiaRemision() {
		return isPermisoPaginacionMedioDetalleGuiaRemision;
	}

	public void setIsPermisoPaginacionMedioDetalleGuiaRemision(Boolean isPermisoPaginacionMedioDetalleGuiaRemision) {
		this.isPermisoPaginacionMedioDetalleGuiaRemision = isPermisoPaginacionMedioDetalleGuiaRemision;
	}
	
	public Boolean getIsPermisoPaginacionTodoDetalleGuiaRemision() {
		return isPermisoPaginacionTodoDetalleGuiaRemision;
	}

	public void setIsPermisoPaginacionTodoDetalleGuiaRemision(Boolean isPermisoPaginacionTodoDetalleGuiaRemision) {
		this.isPermisoPaginacionTodoDetalleGuiaRemision = isPermisoPaginacionTodoDetalleGuiaRemision;
	}
	
	public Boolean getIsPermisoPaginacionAltoDetalleGuiaRemision() {
		return isPermisoPaginacionAltoDetalleGuiaRemision;
	}

	public void setIsPermisoPaginacionAltoDetalleGuiaRemision(Boolean isPermisoPaginacionAltoDetalleGuiaRemision) {
		this.isPermisoPaginacionAltoDetalleGuiaRemision = isPermisoPaginacionAltoDetalleGuiaRemision;
	}
	
	public Boolean getIsPermisoCopiarDetalleGuiaRemision() {
		return isPermisoCopiarDetalleGuiaRemision;
	}

	public void setIsPermisoCopiarDetalleGuiaRemision(Boolean isPermisoCopiarDetalleGuiaRemision) {
		this.isPermisoCopiarDetalleGuiaRemision = isPermisoCopiarDetalleGuiaRemision;
	}
	
	public Boolean getIsPermisoVerFormDetalleGuiaRemision() {
		return isPermisoVerFormDetalleGuiaRemision;
	}

	public void setIsPermisoVerFormDetalleGuiaRemision(Boolean isPermisoVerFormDetalleGuiaRemision) {
		this.isPermisoVerFormDetalleGuiaRemision = isPermisoVerFormDetalleGuiaRemision;
	}
	
	public Boolean getIsPermisoDuplicarDetalleGuiaRemision() {
		return isPermisoDuplicarDetalleGuiaRemision;
	}

	public void setIsPermisoDuplicarDetalleGuiaRemision(Boolean isPermisoDuplicarDetalleGuiaRemision) {
		this.isPermisoDuplicarDetalleGuiaRemision = isPermisoDuplicarDetalleGuiaRemision;
	}
	
	public Boolean getIsPermisoOrdenDetalleGuiaRemision() {
		return isPermisoOrdenDetalleGuiaRemision;
	}

	public void setIsPermisoOrdenDetalleGuiaRemision(Boolean isPermisoOrdenDetalleGuiaRemision) {
		this.isPermisoOrdenDetalleGuiaRemision = isPermisoOrdenDetalleGuiaRemision;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoDetalleGuiaRemision() {
		return isVisibilidadCeldaNuevoDetalleGuiaRemision;
	}

	public void setIsVisibilidadCeldaNuevoDetalleGuiaRemision(Boolean isVisibilidadCeldaNuevoDetalleGuiaRemision) {
		this.isVisibilidadCeldaNuevoDetalleGuiaRemision = isVisibilidadCeldaNuevoDetalleGuiaRemision;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarDetalleGuiaRemision() {
		return isVisibilidadCeldaDuplicarDetalleGuiaRemision;
	}

	public void setIsVisibilidadCeldaDuplicarDetalleGuiaRemision(Boolean isVisibilidadCeldaDuplicarDetalleGuiaRemision) {
		this.isVisibilidadCeldaDuplicarDetalleGuiaRemision = isVisibilidadCeldaDuplicarDetalleGuiaRemision;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarDetalleGuiaRemision() {
		return isVisibilidadCeldaCopiarDetalleGuiaRemision;
	}

	public void setIsVisibilidadCeldaCopiarDetalleGuiaRemision(Boolean isVisibilidadCeldaCopiarDetalleGuiaRemision) {
		this.isVisibilidadCeldaCopiarDetalleGuiaRemision = isVisibilidadCeldaCopiarDetalleGuiaRemision;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormDetalleGuiaRemision() {
		return isVisibilidadCeldaVerFormDetalleGuiaRemision;
	}

	public void setIsVisibilidadCeldaVerFormDetalleGuiaRemision(Boolean isVisibilidadCeldaVerFormDetalleGuiaRemision) {
		this.isVisibilidadCeldaVerFormDetalleGuiaRemision = isVisibilidadCeldaVerFormDetalleGuiaRemision;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenDetalleGuiaRemision() {
		return isVisibilidadCeldaOrdenDetalleGuiaRemision;
	}

	public void setIsVisibilidadCeldaOrdenDetalleGuiaRemision(Boolean isVisibilidadCeldaOrdenDetalleGuiaRemision) {
		this.isVisibilidadCeldaOrdenDetalleGuiaRemision = isVisibilidadCeldaOrdenDetalleGuiaRemision;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision() {
		return isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision(Boolean isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision) {
		this.isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision = isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision;
	}
	
	public Boolean getIsVisibilidadCeldaModificarDetalleGuiaRemision() {
		return isVisibilidadCeldaModificarDetalleGuiaRemision;
	}

	public void setIsVisibilidadCeldaModificarDetalleGuiaRemision(Boolean isVisibilidadCeldaModificarDetalleGuiaRemision) {
		this.isVisibilidadCeldaModificarDetalleGuiaRemision = isVisibilidadCeldaModificarDetalleGuiaRemision;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarDetalleGuiaRemision() {
		return isVisibilidadCeldaActualizarDetalleGuiaRemision;
	}

	public void setIsVisibilidadCeldaActualizarDetalleGuiaRemision(Boolean isVisibilidadCeldaActualizarDetalleGuiaRemision) {
		this.isVisibilidadCeldaActualizarDetalleGuiaRemision = isVisibilidadCeldaActualizarDetalleGuiaRemision;
	}

	public Boolean getIsVisibilidadCeldaEliminarDetalleGuiaRemision() {
		return isVisibilidadCeldaEliminarDetalleGuiaRemision;
	}

	public void setIsVisibilidadCeldaEliminarDetalleGuiaRemision(Boolean isVisibilidadCeldaEliminarDetalleGuiaRemision) {
		this.isVisibilidadCeldaEliminarDetalleGuiaRemision = isVisibilidadCeldaEliminarDetalleGuiaRemision;
	}

	public Boolean getIsVisibilidadCeldaCancelarDetalleGuiaRemision() {
		return isVisibilidadCeldaCancelarDetalleGuiaRemision;
	}

	public void setIsVisibilidadCeldaCancelarDetalleGuiaRemision(Boolean isVisibilidadCeldaCancelarDetalleGuiaRemision) {
		this.isVisibilidadCeldaCancelarDetalleGuiaRemision = isVisibilidadCeldaCancelarDetalleGuiaRemision;
	}

	public Boolean getIsVisibilidadCeldaGuardarDetalleGuiaRemision() {
		return isVisibilidadCeldaGuardarDetalleGuiaRemision;
	}

	public void setIsVisibilidadCeldaGuardarDetalleGuiaRemision(Boolean isVisibilidadCeldaGuardarDetalleGuiaRemision) {
		this.isVisibilidadCeldaGuardarDetalleGuiaRemision = isVisibilidadCeldaGuardarDetalleGuiaRemision;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosDetalleGuiaRemision() {
		return isVisibilidadCeldaGuardarCambiosDetalleGuiaRemision;
	}

	public void setIsVisibilidadCeldaGuardarCambiosDetalleGuiaRemision(Boolean isVisibilidadCeldaGuardarCambiosDetalleGuiaRemision) {
		this.isVisibilidadCeldaGuardarCambiosDetalleGuiaRemision = isVisibilidadCeldaGuardarCambiosDetalleGuiaRemision;
	}
		
	public DetalleGuiaRemisionSessionBean getdetalleguiaremisionSessionBean() {
		return this.detalleguiaremisionSessionBean;
	}
	
	public void setdetalleguiaremisionSessionBean(DetalleGuiaRemisionSessionBean detalleguiaremisionSessionBean) {
		this.detalleguiaremisionSessionBean=detalleguiaremisionSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdBodega() {
		return this.isVisibilidadFK_IdBodega;
	}

	public void setisVisibilidadFK_IdBodega(Boolean isVisibilidadFK_IdBodega) {
		this.isVisibilidadFK_IdBodega=isVisibilidadFK_IdBodega;
	}

	public Boolean getisVisibilidadFK_IdCentroCosto() {
		return this.isVisibilidadFK_IdCentroCosto;
	}

	public void setisVisibilidadFK_IdCentroCosto(Boolean isVisibilidadFK_IdCentroCosto) {
		this.isVisibilidadFK_IdCentroCosto=isVisibilidadFK_IdCentroCosto;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdGuiaRemision() {
		return this.isVisibilidadFK_IdGuiaRemision;
	}

	public void setisVisibilidadFK_IdGuiaRemision(Boolean isVisibilidadFK_IdGuiaRemision) {
		this.isVisibilidadFK_IdGuiaRemision=isVisibilidadFK_IdGuiaRemision;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdProducto() {
		return this.isVisibilidadFK_IdProducto;
	}

	public void setisVisibilidadFK_IdProducto(Boolean isVisibilidadFK_IdProducto) {
		this.isVisibilidadFK_IdProducto=isVisibilidadFK_IdProducto;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdUnidad() {
		return this.isVisibilidadFK_IdUnidad;
	}

	public void setisVisibilidadFK_IdUnidad(Boolean isVisibilidadFK_IdUnidad) {
		this.isVisibilidadFK_IdUnidad=isVisibilidadFK_IdUnidad;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(DetalleGuiaRemision detalleguiaremision)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(detalleguiaremision,null);
				this.setActualParaGuardarSucursalForeignKey(detalleguiaremision,null);
				this.setActualParaGuardarEjercicioForeignKey(detalleguiaremision,null);
				this.setActualParaGuardarPeriodoForeignKey(detalleguiaremision,null);
				this.setActualParaGuardarGuiaRemisionForeignKey(detalleguiaremision,null);
				this.setActualParaGuardarBodegaForeignKey(detalleguiaremision,null);
				this.setActualParaGuardarProductoForeignKey(detalleguiaremision,null);
				this.setActualParaGuardarUnidadForeignKey(detalleguiaremision,null);
				this.setActualParaGuardarCentroCostoForeignKey(detalleguiaremision,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(DetalleGuiaRemision detalleguiaremision,DetalleGuiaRemision detalleguiaremisionAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalDetalleGuiaRemision(detalleguiaremision);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		detalleguiaremisionAux.setId(detalleguiaremision.getId());
		detalleguiaremisionAux.setVersionRow(detalleguiaremision.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessDetalleGuiaRemision();
		
			int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = detalleguiaremisionValidator.getInvalidValues(this.detalleguiaremision);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			detalleguiaremisionLogic.setDatosCliente(datosCliente);
			detalleguiaremisionLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				detalleguiaremisionAux=new  DetalleGuiaRemision();
				
				detalleguiaremisionAux.setIsNew(true);
				detalleguiaremisionAux.setIsChanged(true);
				
				detalleguiaremisionAux.setDetalleGuiaRemisionOriginal(this.detalleguiaremision);
				
				detalleguiaremisionAux.setId(this.detalleguiaremision.getId());	
				detalleguiaremisionAux.setVersionRow(this.detalleguiaremision.getVersionRow());	
				detalleguiaremisionAux.setid_empresa(this.detalleguiaremision.getid_empresa());	
				detalleguiaremisionAux.setid_sucursal(this.detalleguiaremision.getid_sucursal());	
				detalleguiaremisionAux.setid_ejercicio(this.detalleguiaremision.getid_ejercicio());	
				detalleguiaremisionAux.setid_periodo(this.detalleguiaremision.getid_periodo());	
				detalleguiaremisionAux.setid_guia_remision(this.detalleguiaremision.getid_guia_remision());	
				detalleguiaremisionAux.setid_bodega(this.detalleguiaremision.getid_bodega());	
				detalleguiaremisionAux.setid_producto(this.detalleguiaremision.getid_producto());	
				detalleguiaremisionAux.setid_unidad(this.detalleguiaremision.getid_unidad());	
				
				if(this.detalleguiaremision.getid_centro_costo()!=null && this.detalleguiaremision.getid_centro_costo()>0L) {
					detalleguiaremisionAux.setid_centro_costo(this.detalleguiaremision.getid_centro_costo());
				} else {
					detalleguiaremisionAux.setid_centro_costo(null);
				}	
				detalleguiaremisionAux.setcantidad_envases(this.detalleguiaremision.getcantidad_envases());	
				detalleguiaremisionAux.setcantidad_auxiliar(this.detalleguiaremision.getcantidad_auxiliar());	
				detalleguiaremisionAux.setdescripcion(this.detalleguiaremision.getdescripcion());	
				detalleguiaremisionAux.setcantidad(this.detalleguiaremision.getcantidad());	
				detalleguiaremisionAux.setmonto(this.detalleguiaremision.getmonto());	
				detalleguiaremisionAux.setprecio(this.detalleguiaremision.getprecio());	
				detalleguiaremisionAux.setporcentaje_descuento(this.detalleguiaremision.getporcentaje_descuento());	
				detalleguiaremisionAux.setdescuento(this.detalleguiaremision.getdescuento());	
				detalleguiaremisionAux.setdescuento2(this.detalleguiaremision.getdescuento2());	
				detalleguiaremisionAux.setdescuento3(this.detalleguiaremision.getdescuento3());	
				detalleguiaremisionAux.setporcentaje_iva(this.detalleguiaremision.getporcentaje_iva());	
				detalleguiaremisionAux.setiva(this.detalleguiaremision.getiva());	
				detalleguiaremisionAux.settotal_descuento(this.detalleguiaremision.gettotal_descuento());	
				detalleguiaremisionAux.settotal_impuesto(this.detalleguiaremision.gettotal_impuesto());	
				detalleguiaremisionAux.setsub_total(this.detalleguiaremision.getsub_total());	
				detalleguiaremisionAux.settotal(this.detalleguiaremision.gettotal());	
				detalleguiaremisionAux.setlote(this.detalleguiaremision.getlote());	
				detalleguiaremisionAux.setlote_cliente(this.detalleguiaremision.getlote_cliente());	
				detalleguiaremisionAux.setorden_compra(this.detalleguiaremision.getorden_compra());	
				detalleguiaremisionAux.setarea(this.detalleguiaremision.getarea());	
				detalleguiaremisionAux.setmedidas(this.detalleguiaremision.getmedidas());	
				detalleguiaremisionAux.setacabado(this.detalleguiaremision.getacabado());	
				detalleguiaremisionAux.setacabado2(this.detalleguiaremision.getacabado2());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detalleguiaremisionSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detalleguiaremisionSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(detalleguiaremisionAux,detalleguiaremisionLogic.getDetalleGuiaRemisions());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detalleguiaremisionAux,detalleguiaremisions);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.detalleguiaremisionSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detalleguiaremisionSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionLogic.saveDetalleGuiaRemisions();//WithConnection
						//detalleguiaremisionLogic.getSetVersionRowDetalleGuiaRemisions();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detalleguiaremision,detalleguiaremisionAux);
					
					this.refrescarForeignKeysDescripcionesDetalleGuiaRemision();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detalleguiaremisionSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detalleguiaremisionLogic.saveDetalleGuiaRemisionRelaciones(detalleguiaremisionAux);//WithConnection
								//detalleguiaremisionLogic.getSetVersionRowDetalleGuiaRemisions();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detalleguiaremision,detalleguiaremisionAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detalleguiaremisionSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detalleguiaremisionSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detalleguiaremisionAux,detalleguiaremisionLogic.getDetalleGuiaRemisions());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detalleguiaremisionAux,detalleguiaremisions);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detalleguiaremision,detalleguiaremisionAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				detalleguiaremisionAux=new  DetalleGuiaRemision();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.detalleguiaremisionSessionBean.getEsGuardarRelacionado() 
					|| (this.detalleguiaremisionSessionBean.getEsGuardarRelacionado() && this.detalleguiaremision.getId()>=0)) {
						
					detalleguiaremisionAux.setIsNew(false);
				}
				
				detalleguiaremisionAux.setIsDeleted(false);
			
				detalleguiaremisionAux.setId(this.detalleguiaremision.getId());	
				detalleguiaremisionAux.setVersionRow(this.detalleguiaremision.getVersionRow());	
				detalleguiaremisionAux.setid_empresa(this.detalleguiaremision.getid_empresa());	
				detalleguiaremisionAux.setid_sucursal(this.detalleguiaremision.getid_sucursal());	
				detalleguiaremisionAux.setid_ejercicio(this.detalleguiaremision.getid_ejercicio());	
				detalleguiaremisionAux.setid_periodo(this.detalleguiaremision.getid_periodo());	
				detalleguiaremisionAux.setid_guia_remision(this.detalleguiaremision.getid_guia_remision());	
				detalleguiaremisionAux.setid_bodega(this.detalleguiaremision.getid_bodega());	
				detalleguiaremisionAux.setid_producto(this.detalleguiaremision.getid_producto());	
				detalleguiaremisionAux.setid_unidad(this.detalleguiaremision.getid_unidad());	
				
				if(this.detalleguiaremision.getid_centro_costo()!=null && this.detalleguiaremision.getid_centro_costo()>0L) {
					detalleguiaremisionAux.setid_centro_costo(this.detalleguiaremision.getid_centro_costo());
				} else {
					detalleguiaremisionAux.setid_centro_costo(null);
				}	
				detalleguiaremisionAux.setcantidad_envases(this.detalleguiaremision.getcantidad_envases());	
				detalleguiaremisionAux.setcantidad_auxiliar(this.detalleguiaremision.getcantidad_auxiliar());	
				detalleguiaremisionAux.setdescripcion(this.detalleguiaremision.getdescripcion());	
				detalleguiaremisionAux.setcantidad(this.detalleguiaremision.getcantidad());	
				detalleguiaremisionAux.setmonto(this.detalleguiaremision.getmonto());	
				detalleguiaremisionAux.setprecio(this.detalleguiaremision.getprecio());	
				detalleguiaremisionAux.setporcentaje_descuento(this.detalleguiaremision.getporcentaje_descuento());	
				detalleguiaremisionAux.setdescuento(this.detalleguiaremision.getdescuento());	
				detalleguiaremisionAux.setdescuento2(this.detalleguiaremision.getdescuento2());	
				detalleguiaremisionAux.setdescuento3(this.detalleguiaremision.getdescuento3());	
				detalleguiaremisionAux.setporcentaje_iva(this.detalleguiaremision.getporcentaje_iva());	
				detalleguiaremisionAux.setiva(this.detalleguiaremision.getiva());	
				detalleguiaremisionAux.settotal_descuento(this.detalleguiaremision.gettotal_descuento());	
				detalleguiaremisionAux.settotal_impuesto(this.detalleguiaremision.gettotal_impuesto());	
				detalleguiaremisionAux.setsub_total(this.detalleguiaremision.getsub_total());	
				detalleguiaremisionAux.settotal(this.detalleguiaremision.gettotal());	
				detalleguiaremisionAux.setlote(this.detalleguiaremision.getlote());	
				detalleguiaremisionAux.setlote_cliente(this.detalleguiaremision.getlote_cliente());	
				detalleguiaremisionAux.setorden_compra(this.detalleguiaremision.getorden_compra());	
				detalleguiaremisionAux.setarea(this.detalleguiaremision.getarea());	
				detalleguiaremisionAux.setmedidas(this.detalleguiaremision.getmedidas());	
				detalleguiaremisionAux.setacabado(this.detalleguiaremision.getacabado());	
				detalleguiaremisionAux.setacabado2(this.detalleguiaremision.getacabado2());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detalleguiaremisionAux,detalleguiaremisionLogic.getDetalleGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detalleguiaremisionAux,detalleguiaremisions);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.detalleguiaremisionSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detalleguiaremisionSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionLogic.saveDetalleGuiaRemisions();//WithConnection
						//detalleguiaremisionLogic.getSetVersionRowDetalleGuiaRemisions();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detalleguiaremision,detalleguiaremisionAux);
					
					this.refrescarForeignKeysDescripcionesDetalleGuiaRemision();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detalleguiaremisionSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detalleguiaremisionLogic.saveDetalleGuiaRemisionRelaciones(detalleguiaremisionAux);//WithConnection
								//detalleguiaremisionLogic.getSetVersionRowDetalleGuiaRemisions();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detalleguiaremision,detalleguiaremisionAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detalleguiaremisionSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detalleguiaremisionSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detalleguiaremisionAux,detalleguiaremisionLogic.getDetalleGuiaRemisions());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detalleguiaremisionAux,detalleguiaremisions);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detalleguiaremision,detalleguiaremisionAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				detalleguiaremisionAux=new  DetalleGuiaRemision();
				
				detalleguiaremisionAux.setIsNew(false);
				detalleguiaremisionAux.setIsChanged(false);
				
				detalleguiaremisionAux.setIsDeleted(true);
				
				detalleguiaremisionAux.setId(this.detalleguiaremision.getId());	
				detalleguiaremisionAux.setVersionRow(this.detalleguiaremision.getVersionRow());	
				detalleguiaremisionAux.setid_empresa(this.detalleguiaremision.getid_empresa());	
				detalleguiaremisionAux.setid_sucursal(this.detalleguiaremision.getid_sucursal());	
				detalleguiaremisionAux.setid_ejercicio(this.detalleguiaremision.getid_ejercicio());	
				detalleguiaremisionAux.setid_periodo(this.detalleguiaremision.getid_periodo());	
				detalleguiaremisionAux.setid_guia_remision(this.detalleguiaremision.getid_guia_remision());	
				detalleguiaremisionAux.setid_bodega(this.detalleguiaremision.getid_bodega());	
				detalleguiaremisionAux.setid_producto(this.detalleguiaremision.getid_producto());	
				detalleguiaremisionAux.setid_unidad(this.detalleguiaremision.getid_unidad());	
				
				if(this.detalleguiaremision.getid_centro_costo()!=null && this.detalleguiaremision.getid_centro_costo()>0L) {
					detalleguiaremisionAux.setid_centro_costo(this.detalleguiaremision.getid_centro_costo());
				} else {
					detalleguiaremisionAux.setid_centro_costo(null);
				}	
				detalleguiaremisionAux.setcantidad_envases(this.detalleguiaremision.getcantidad_envases());	
				detalleguiaremisionAux.setcantidad_auxiliar(this.detalleguiaremision.getcantidad_auxiliar());	
				detalleguiaremisionAux.setdescripcion(this.detalleguiaremision.getdescripcion());	
				detalleguiaremisionAux.setcantidad(this.detalleguiaremision.getcantidad());	
				detalleguiaremisionAux.setmonto(this.detalleguiaremision.getmonto());	
				detalleguiaremisionAux.setprecio(this.detalleguiaremision.getprecio());	
				detalleguiaremisionAux.setporcentaje_descuento(this.detalleguiaremision.getporcentaje_descuento());	
				detalleguiaremisionAux.setdescuento(this.detalleguiaremision.getdescuento());	
				detalleguiaremisionAux.setdescuento2(this.detalleguiaremision.getdescuento2());	
				detalleguiaremisionAux.setdescuento3(this.detalleguiaremision.getdescuento3());	
				detalleguiaremisionAux.setporcentaje_iva(this.detalleguiaremision.getporcentaje_iva());	
				detalleguiaremisionAux.setiva(this.detalleguiaremision.getiva());	
				detalleguiaremisionAux.settotal_descuento(this.detalleguiaremision.gettotal_descuento());	
				detalleguiaremisionAux.settotal_impuesto(this.detalleguiaremision.gettotal_impuesto());	
				detalleguiaremisionAux.setsub_total(this.detalleguiaremision.getsub_total());	
				detalleguiaremisionAux.settotal(this.detalleguiaremision.gettotal());	
				detalleguiaremisionAux.setlote(this.detalleguiaremision.getlote());	
				detalleguiaremisionAux.setlote_cliente(this.detalleguiaremision.getlote_cliente());	
				detalleguiaremisionAux.setorden_compra(this.detalleguiaremision.getorden_compra());	
				detalleguiaremisionAux.setarea(this.detalleguiaremision.getarea());	
				detalleguiaremisionAux.setmedidas(this.detalleguiaremision.getmedidas());	
				detalleguiaremisionAux.setacabado(this.detalleguiaremision.getacabado());	
				detalleguiaremisionAux.setacabado2(this.detalleguiaremision.getacabado2());	
				
				if(this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.detalleguiaremisionAux.getId()>=0) {	
						this.detalleguiaremisionsEliminados.add(detalleguiaremisionAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(detalleguiaremisionAux,detalleguiaremisionLogic.getDetalleGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detalleguiaremisionAux,detalleguiaremisions);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.detalleguiaremisionSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detalleguiaremisionSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionLogic.saveDetalleGuiaRemisions();//WithConnection
						//detalleguiaremisionLogic.getSetVersionRowDetalleGuiaRemisions();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detalleguiaremisionSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detalleguiaremisionLogic.saveDetalleGuiaRemisionRelaciones(detalleguiaremisionAux);//WithConnection
								//detalleguiaremisionLogic.getSetVersionRowDetalleGuiaRemisions();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.detalleguiaremisionSessionBean.getEstaModoGuardarRelaciones() 
								|| this.detalleguiaremisionSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(detalleguiaremisionAux,detalleguiaremisionLogic.getDetalleGuiaRemisions());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(detalleguiaremisionAux,detalleguiaremisions);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getDetalleGuiaRemisions().addAll(this.detalleguiaremisionsEliminados);
					
					detalleguiaremisionLogic.saveDetalleGuiaRemisions();//WithConnection
					//detalleguiaremisionLogic.getSetVersionRowDetalleGuiaRemisions();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesDetalleGuiaRemision();
				
				this.detalleguiaremisionsEliminados= new ArrayList<DetalleGuiaRemision>();		
			}
			
			if(this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Detalle Guia Remision GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Detalle Guia Remision",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.detalleguiaremision=detalleguiaremisionAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessDetalleGuiaRemision();
      	}
		
	}	
	
	public void actualizarRelaciones(DetalleGuiaRemision detalleguiaremisionLocal) throws Exception {
		
		if(this.detalleguiaremisionSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(DetalleGuiaRemision detalleguiaremisionLocal) throws Exception {	
		if(this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				detalleguiaremisionLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				detalleguiaremisionLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				detalleguiaremisionLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				detalleguiaremisionLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(GuiaRemisionDetalleFormJInternalFrame.class)) {
				GuiaRemisionBeanSwingJInternalFrame guiaremisionBeanSwingJInternalFrameLocal=(GuiaRemisionBeanSwingJInternalFrame) ((GuiaRemisionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				guiaremisionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoGuiaRemision(guiaremisionBeanSwingJInternalFrameLocal.getguiaremision(),true);
				guiaremisionBeanSwingJInternalFrameLocal.actualizarLista(guiaremisionBeanSwingJInternalFrameLocal.guiaremision,this.guiaremisionsForeignKey);

				guiaremisionBeanSwingJInternalFrameLocal.actualizarRelaciones(guiaremisionBeanSwingJInternalFrameLocal.guiaremision);

				detalleguiaremisionLocal.setGuiaRemision(guiaremisionBeanSwingJInternalFrameLocal.guiaremision);

				this.addItemDefectoCombosForeignKeyGuiaRemision();
				this.cargarCombosFrameGuiaRemisionsForeignKey("Formulario");
				this.setActualGuiaRemisionForeignKey(guiaremisionBeanSwingJInternalFrameLocal.guiaremision.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BodegaDetalleFormJInternalFrame.class)) {
				BodegaBeanSwingJInternalFrame bodegaBeanSwingJInternalFrameLocal=(BodegaBeanSwingJInternalFrame) ((BodegaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bodegaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBodega(bodegaBeanSwingJInternalFrameLocal.getbodega(),true);
				bodegaBeanSwingJInternalFrameLocal.actualizarLista(bodegaBeanSwingJInternalFrameLocal.bodega,this.bodegasForeignKey);

				bodegaBeanSwingJInternalFrameLocal.actualizarRelaciones(bodegaBeanSwingJInternalFrameLocal.bodega);

				detalleguiaremisionLocal.setBodega(bodegaBeanSwingJInternalFrameLocal.bodega);

				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey("Formulario");
				this.setActualBodegaForeignKey(bodegaBeanSwingJInternalFrameLocal.bodega.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ProductoDetalleFormJInternalFrame.class)) {
				ProductoBeanSwingJInternalFrame productoBeanSwingJInternalFrameLocal=(ProductoBeanSwingJInternalFrame) ((ProductoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				productoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoProducto(productoBeanSwingJInternalFrameLocal.getproducto(),true);
				productoBeanSwingJInternalFrameLocal.actualizarLista(productoBeanSwingJInternalFrameLocal.producto,this.productosForeignKey);

				productoBeanSwingJInternalFrameLocal.actualizarRelaciones(productoBeanSwingJInternalFrameLocal.producto);

				detalleguiaremisionLocal.setProducto(productoBeanSwingJInternalFrameLocal.producto);

				this.addItemDefectoCombosForeignKeyProducto();
				this.cargarCombosFrameProductosForeignKey("Formulario");
				this.setActualProductoForeignKey(productoBeanSwingJInternalFrameLocal.producto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UnidadDetalleFormJInternalFrame.class)) {
				UnidadBeanSwingJInternalFrame unidadBeanSwingJInternalFrameLocal=(UnidadBeanSwingJInternalFrame) ((UnidadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				unidadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUnidad(unidadBeanSwingJInternalFrameLocal.getunidad(),true);
				unidadBeanSwingJInternalFrameLocal.actualizarLista(unidadBeanSwingJInternalFrameLocal.unidad,this.unidadsForeignKey);

				unidadBeanSwingJInternalFrameLocal.actualizarRelaciones(unidadBeanSwingJInternalFrameLocal.unidad);

				detalleguiaremisionLocal.setUnidad(unidadBeanSwingJInternalFrameLocal.unidad);

				this.addItemDefectoCombosForeignKeyUnidad();
				this.cargarCombosFrameUnidadsForeignKey("Formulario");
				this.setActualUnidadForeignKey(unidadBeanSwingJInternalFrameLocal.unidad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CentroCostoDetalleFormJInternalFrame.class)) {
				CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrameLocal=(CentroCostoBeanSwingJInternalFrame) ((CentroCostoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				centrocostoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCentroCosto(centrocostoBeanSwingJInternalFrameLocal.getcentrocosto(),true);
				centrocostoBeanSwingJInternalFrameLocal.actualizarLista(centrocostoBeanSwingJInternalFrameLocal.centrocosto,this.centrocostosForeignKey);

				centrocostoBeanSwingJInternalFrameLocal.actualizarRelaciones(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				detalleguiaremisionLocal.setCentroCosto(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey("Formulario");
				this.setActualCentroCostoForeignKey(centrocostoBeanSwingJInternalFrameLocal.centrocosto.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarDetalleGuiaRemisionActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = detalleguiaremisionValidator.getInvalidValues(this.detalleguiaremision);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(DetalleGuiaRemision detalleguiaremision,List<DetalleGuiaRemision> detalleguiaremisions) throws Exception {
		try	{		
			DetalleGuiaRemisionConstantesFunciones.actualizarLista(detalleguiaremision,detalleguiaremisions,this.detalleguiaremisionSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(DetalleGuiaRemision detalleguiaremision,List<DetalleGuiaRemision> detalleguiaremisions) throws Exception {
		try	{			
			DetalleGuiaRemisionConstantesFunciones.actualizarSelectedLista(detalleguiaremision,detalleguiaremisions);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<DetalleGuiaRemision> detalleguiaremisionsLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				detalleguiaremisionsLocal=this.detalleguiaremisionLogic.getDetalleGuiaRemisions();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				detalleguiaremisionsLocal=this.detalleguiaremisions;
			}
			//ARCHITECTURE
		
			for(DetalleGuiaRemision detalleguiaremisionLocal:detalleguiaremisionsLocal) {
				if(this.permiteMantenimiento(detalleguiaremisionLocal) && detalleguiaremisionLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+DetalleGuiaRemisionConstantesFunciones.getDetalleGuiaRemisionLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelid_empresaDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelid_sucursalDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelid_ejercicioDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelid_periodoDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.IDGUIAREMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelid_guia_remisionDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.IDBODEGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelid_bodegaDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.IDPRODUCTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelid_productoDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.IDUNIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelid_unidadDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.IDCENTROCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelid_centro_costoDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.CANTIDADENVASES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelcantidad_envasesDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.CANTIDADAUXILIAR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelcantidad_auxiliarDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabeldescripcionDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.CANTIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelcantidadDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.MONTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelmontoDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.PRECIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelprecioDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.PORCENTAJEDESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelporcentaje_descuentoDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.DESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabeldescuentoDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.DESCUENTO2)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabeldescuento2DetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.DESCUENTO3)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabeldescuento3DetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.PORCENTAJEIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelporcentaje_ivaDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.IVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelivaDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.TOTALDESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabeltotal_descuentoDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.TOTALIMPUESTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabeltotal_impuestoDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.SUBTOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelsub_totalDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.TOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabeltotalDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.LOTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelloteDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.LOTECLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabellote_clienteDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.ORDENCOMPRA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelorden_compraDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.AREA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelareaDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.MEDIDAS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelmedidasDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.ACABADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelacabadoDetalleGuiaRemision,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetalleGuiaRemisionConstantesFunciones.ACABADO2)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelacabado2DetalleGuiaRemision,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelid_empresaDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelid_sucursalDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelid_ejercicioDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelid_periodoDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelid_guia_remisionDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelid_bodegaDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelid_productoDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelid_unidadDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelid_centro_costoDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelcantidad_envasesDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelcantidad_auxiliarDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabeldescripcionDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelcantidadDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelmontoDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelprecioDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelporcentaje_descuentoDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabeldescuentoDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabeldescuento2DetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabeldescuento3DetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelporcentaje_ivaDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelivaDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabeltotal_descuentoDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabeltotal_impuestoDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelsub_totalDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabeltotalDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelloteDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabellote_clienteDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelorden_compraDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelareaDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelmedidasDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelacabadoDetalleGuiaRemision,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelacabado2DetalleGuiaRemision,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoDetalleGuiaRemision--;	
		
		
		this.detalleguiaremisionAux=new DetalleGuiaRemision();
		
		this.detalleguiaremisionAux.setId(this.iIdNuevoDetalleGuiaRemision);
		this.detalleguiaremisionAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detalleguiaremisionLogic.getDetalleGuiaRemisions().add(this.detalleguiaremisionAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.detalleguiaremisions.add(this.detalleguiaremisionAux);
		}
		//ARCHITECTURE
		
		this.detalleguiaremision=this.detalleguiaremisionAux;
		
		if(DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioDetalleGuiaRemision(this.detalleguiaremision);
			this.setVariablesObjetoActualToFormularioForeignKeyDetalleGuiaRemision(this.detalleguiaremision);
		}
				
		//this.setDefaultControlesDetalleGuiaRemision();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyDetalleGuiaRemision();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyDetalleGuiaRemision();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleGuiaRemision();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetalleGuiaRemision(this.detalleguiaremisionBean,this.detalleguiaremision,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.detalleguiaremisionSessionBean.getConGuardarRelaciones()) {
			classes=DetalleGuiaRemisionConstantesFunciones.getClassesRelationshipsOfDetalleGuiaRemision(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.detalleguiaremisionReturnGeneral=detalleguiaremisionLogic.procesarEventosDetalleGuiaRemisionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detalleguiaremisionLogic.getDetalleGuiaRemisions(),this.detalleguiaremision,this.detalleguiaremisionParameterGeneral,this.isEsNuevoDetalleGuiaRemision,classes);//this.detalleguiaremisionLogic.getDetalleGuiaRemision()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanDetalleGuiaRemision(this.detalleguiaremisionReturnGeneral,this.detalleguiaremisionBean,false);
		
		if(this.detalleguiaremisionReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyDetalleGuiaRemision(this.detalleguiaremisionReturnGeneral.getDetalleGuiaRemision());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioDetalleGuiaRemision(this.detalleguiaremisionReturnGeneral.getDetalleGuiaRemision());
		}
		
		if(this.detalleguiaremisionReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioDetalleGuiaRemision(this.detalleguiaremisionReturnGeneral.getDetalleGuiaRemision(),classes);//this.detalleguiaremisionBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyDetalleGuiaRemision();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyDetalleGuiaRemision();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.RecargarFormDetalleGuiaRemision(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingDetalleGuiaRemision(false);
						
			if(detalleguiaremisionSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleGuiaRemision();
			}
			
			this.actualizarVisualTableDatosDetalleGuiaRemision();
			
			this.jTableDatosDetalleGuiaRemision.setRowSelectionInterval(this.getIndiceNuevoDetalleGuiaRemision(), this.getIndiceNuevoDetalleGuiaRemision());
			
			this.seleccionarFilaTablaDetalleGuiaRemisionActual();
						
			this.actualizarEstadoCeldasBotonesDetalleGuiaRemision("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesDetalleGuiaRemision(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidad_envasesDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarcantidad_envasesDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidad_auxiliarDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarcantidad_auxiliarDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextAreadescripcionDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activardescripcionDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidadDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarcantidadDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldmontoDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarmontoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldprecioDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarprecioDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldporcentaje_descuentoDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarporcentaje_descuentoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuentoDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activardescuentoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuento2DetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activardescuento2DetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuento3DetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activardescuento3DetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldporcentaje_ivaDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarporcentaje_ivaDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldivaDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarivaDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotal_descuentoDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activartotal_descuentoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotal_impuestoDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activartotal_impuestoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldsub_totalDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarsub_totalDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotalDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activartotalDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldloteDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarloteDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldlote_clienteDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarlote_clienteDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldorden_compraDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarorden_compraDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldareaDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarareaDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldmedidasDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarmedidasDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldacabadoDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activaracabadoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldacabado2DetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activaracabado2DetalleGuiaRemision);	
		//
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_empresaDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarid_empresaDetalleGuiaRemision);//
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_sucursalDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarid_sucursalDetalleGuiaRemision);//
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_ejercicioDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarid_ejercicioDetalleGuiaRemision);//
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_periodoDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarid_periodoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_guia_remisionDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarid_guia_remisionDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarid_bodegaDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarid_productoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_unidadDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarid_unidadDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_centro_costoDetalleGuiaRemision.setEnabled(isHabilitar && this.detalleguiaremisionConstantesFunciones.activarid_centro_costoDetalleGuiaRemision);
	};
	
	public void setDefaultControlesDetalleGuiaRemision() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoDetalleGuiaRemision(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.detalleguiaremisionSessionBean.setConGuardarRelaciones(true);			
			this.detalleguiaremisionSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTabbedPaneRelacionesDetalleGuiaRemision.setVisible(true);
			
					
		} else {
			//this.detalleguiaremisionSessionBean.setConGuardarRelaciones(false);			
			this.detalleguiaremisionSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTabbedPaneRelacionesDetalleGuiaRemision.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoDetalleGuiaRemision() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleGuiaRemision detalleguiaremisionAux:this.detalleguiaremisionLogic.getDetalleGuiaRemisions()) {
				if(detalleguiaremisionAux.getId().equals(this.iIdNuevoDetalleGuiaRemision)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleGuiaRemision detalleguiaremisionAux:this.detalleguiaremisions) {
				if(detalleguiaremisionAux.getId().equals(this.iIdNuevoDetalleGuiaRemision)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualDetalleGuiaRemision(DetalleGuiaRemision detalleguiaremision,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleGuiaRemision detalleguiaremisionAux:this.detalleguiaremisionLogic.getDetalleGuiaRemisions()) {
				if(detalleguiaremisionAux.getId().equals(detalleguiaremision.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleGuiaRemision detalleguiaremisionAux:this.detalleguiaremisions) {
				if(detalleguiaremisionAux.getId().equals(detalleguiaremision.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalDetalleGuiaRemision(DetalleGuiaRemision detalleguiaremisionOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleGuiaRemision detalleguiaremisionAux:this.detalleguiaremisionLogic.getDetalleGuiaRemisions()) {
				if(detalleguiaremisionAux.getDetalleGuiaRemisionOriginal().getId().equals(detalleguiaremisionOriginal.getId())) {
					existe=true;
					detalleguiaremisionOriginal.setId(detalleguiaremisionAux.getId());
					detalleguiaremisionOriginal.setVersionRow(detalleguiaremisionAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleGuiaRemision detalleguiaremisionAux:this.detalleguiaremisions) {
				if(detalleguiaremisionAux.getDetalleGuiaRemisionOriginal().getId().equals(detalleguiaremisionOriginal.getId())) {
					existe=true;
					detalleguiaremisionOriginal.setId(detalleguiaremisionAux.getId());
					detalleguiaremisionOriginal.setVersionRow(detalleguiaremisionAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosDetalleGuiaRemision(Boolean esParaCancelar) throws Exception {
		detalleguiaremisionsAux=new ArrayList<DetalleGuiaRemision>();
		detalleguiaremisionAux=new DetalleGuiaRemision();
		
		if(!this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetalleGuiaRemision detalleguiaremisionAux:this.detalleguiaremisionLogic.getDetalleGuiaRemisions()) {
					if(detalleguiaremisionAux.getId()<0) {
						detalleguiaremisionsAux.add(detalleguiaremisionAux);
					}		
				}
				this.iIdNuevoDetalleGuiaRemision=0L;
				this.detalleguiaremisionLogic.getDetalleGuiaRemisions().removeAll(detalleguiaremisionsAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleGuiaRemision detalleguiaremisionAux:this.detalleguiaremisions) {
					if(detalleguiaremisionAux.getId()<0) {
						detalleguiaremisionsAux.add(detalleguiaremisionAux);
					}		
				}
				this.iIdNuevoDetalleGuiaRemision=0L;
				this.detalleguiaremisions.removeAll(detalleguiaremisionsAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoDetalleGuiaRemision 
					&& this.detalleguiaremisionLogic.getDetalleGuiaRemisions().size()>0
					) {
					detalleguiaremisionAux=this.detalleguiaremisionLogic.getDetalleGuiaRemisions().get(this.detalleguiaremisionLogic.getDetalleGuiaRemisions().size() - 1);
				
					if(detalleguiaremisionAux.getId()<0) {
						this.detalleguiaremisionLogic.getDetalleGuiaRemisions().remove(detalleguiaremisionAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoDetalleGuiaRemision && this.detalleguiaremisions.size()>0) {
					detalleguiaremisionAux=this.detalleguiaremisions.get(this.detalleguiaremisions.size() - 1);
				
					if(detalleguiaremisionAux.getId()<0) {
						this.detalleguiaremisions.remove(detalleguiaremisionAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoDetalleGuiaRemision(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(detalleguiaremision.getId()<0) {
				this.detalleguiaremisionLogic.getDetalleGuiaRemisions().remove(this.detalleguiaremision);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(detalleguiaremision.getId()<0) {
				this.detalleguiaremisions.remove(this.detalleguiaremision);
			}
		}			
	}
	
	public void setEstadosInicialesDetalleGuiaRemision(List<DetalleGuiaRemision> detalleguiaremisionsAux) throws Exception {
		DetalleGuiaRemisionConstantesFunciones.setEstadosInicialesDetalleGuiaRemision(detalleguiaremisionsAux);
	}
	
	public void setEstadosInicialesDetalleGuiaRemision(DetalleGuiaRemision detalleguiaremisionAux) throws Exception {
		DetalleGuiaRemisionConstantesFunciones.setEstadosInicialesDetalleGuiaRemision(detalleguiaremisionAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarDetalleGuiaRemisionActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesDetalleGuiaRemision("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarDetalleGuiaRemisionActual()) {
				if(!this.isEsNuevoDetalleGuiaRemision) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesDetalleGuiaRemision("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoDetalleGuiaRemision=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarDetalleGuiaRemisionActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Detalle Guia Remision ?", "MANTENIMIENTO DE Detalle Guia Remision", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesDetalleGuiaRemision("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(DetalleGuiaRemision detalleguiaremision) throws Exception {
		DetalleGuiaRemisionConstantesFunciones.seleccionarAsignar(this.detalleguiaremision,detalleguiaremision);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarDetalleGuiaRemision=this.isPermisoActualizarOriginalDetalleGuiaRemision;
			
			
			this.seleccionarAsignar(detalleguiaremision);
			
			

			idProductoActual=detalleguiaremision.getid_producto();
			this.seleccionarProductoActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetalleGuiaRemisionConstantesFunciones.quitarEspaciosDetalleGuiaRemision(this.detalleguiaremision,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesDetalleGuiaRemision("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.detalleguiaremisionSessionBean.setsFuncionBusquedaRapida(this.detalleguiaremisionSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarProductoActual() throws Exception {
		try	{
			Producto productoAux=new Producto();

			if(this.idProductoActual != null && this.idProductoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getEntityWithConnection(this.idProductoActual);
					productoAux= productoLogic.getProducto();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				productosForeignKey=new ArrayList<Producto>();
				productosForeignKey.add(productoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoDetalleGuiaRemision) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosDetalleGuiaRemision(esParaCancelar);				
				this.cancelarNuevoDetalleGuiaRemision(esParaCancelar);								
			}
			
			this.detalleguiaremision=new DetalleGuiaRemision();
			
			this.inicializarDetalleGuiaRemision();
			
			this.actualizarEstadoCeldasBotonesDetalleGuiaRemision("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarDetalleGuiaRemision() throws Exception {
		try {
			DetalleGuiaRemisionConstantesFunciones.inicializarDetalleGuiaRemision(this.detalleguiaremision);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.detalleguiaremisionLogic.getDetalleGuiaRemisions().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteDetalleGuiaRemisions(String sAccionBusqueda,List<DetalleGuiaRemision> detalleguiaremisionsParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="DetalleGuiaRemision"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="DetalleGuiaRemisionMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("DetalleGuiaRemisionMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="DetalleGuiaRemision"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Detalle Guia Remisiones");		
		parameters.put("busquedapor", DetalleGuiaRemisionConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceDetalleGuiaRemision=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			DetalleGuiaRemisionConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			DetalleGuiaRemisionConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceDetalleGuiaRemision=new JRBeanArrayDataSource(DetalleGuiaRemisionJInternalFrame.TraerDetalleGuiaRemisionBeans(detalleguiaremisionsParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceDetalleGuiaRemision);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+DetalleGuiaRemisionConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+DetalleGuiaRemisionConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(DetalleGuiaRemisionBean.TraerDetalleGuiaRemisionBeans(detalleguiaremisionsParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteDetalleGuiaRemisions(sAccionBusqueda,sTipoArchivoReporte,detalleguiaremisionsParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalDetalleGuiaRemisions(sAccionBusqueda,sTipoArchivoReporte,detalleguiaremisionsParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoDetalleGuiaRemisionActionPerformed(null);
					//this.generarExcelReporteDetalleGuiaRemisions(sAccionBusqueda,sTipoArchivoReporte,detalleguiaremisionsParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalDetalleGuiaRemisions(sAccionBusqueda,sTipoArchivoReporte,detalleguiaremisionsParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesDetalleGuiaRemisions(sAccionBusqueda,sTipoArchivoReporte,detalleguiaremisionsParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesDetalleGuiaRemisions(sAccionBusqueda,sTipoArchivoReporte,detalleguiaremisionsParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteDetalleGuiaRemisions(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleGuiaRemision> detalleguiaremisionsParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleguiaremision";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleGuiaRemisions");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetalleGuiaRemision("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(DetalleGuiaRemision detalleguiaremision : detalleguiaremisionsParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			DetalleGuiaRemisionConstantesFunciones.generarExcelReporteDataDetalleGuiaRemision("NORMAL",row,workbook,detalleguiaremision,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Guia Remision",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderDetalleGuiaRemision(String sTipo,Row row,Workbook workbook) {
		
		DetalleGuiaRemisionConstantesFunciones.generarExcelReporteHeaderDetalleGuiaRemision(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalDetalleGuiaRemisions(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleGuiaRemision> detalleguiaremisionsParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleguiaremision_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleGuiaRemisions");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(DetalleGuiaRemision detalleguiaremision : detalleguiaremisionsParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.getDetalleGuiaRemisionDescripcion(detalleguiaremision));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_IDGUIAREMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDGUIAREMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getguiaremision_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_IDBODEGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDBODEGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getbodega_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_IDPRODUCTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDPRODUCTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getproducto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_IDUNIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDUNIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getunidad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_IDCENTROCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDCENTROCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getcentrocosto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADENVASES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADENVASES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getcantidad_envases());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADAUXILIAR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADAUXILIAR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getcantidad_auxiliar());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getcantidad());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_MONTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_MONTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getmonto());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_PRECIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_PRECIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getprecio());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEDESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEDESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getporcentaje_descuento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getdescuento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO2))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO2);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getdescuento2());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO3))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO3);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getdescuento3());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getporcentaje_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_IVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getiva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALDESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALDESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.gettotal_descuento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALIMPUESTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALIMPUESTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.gettotal_impuesto());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_SUBTOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_SUBTOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getsub_total());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_TOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_TOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.gettotal());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_LOTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_LOTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getlote());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_LOTECLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_LOTECLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getlote_cliente());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_ORDENCOMPRA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_ORDENCOMPRA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getorden_compra());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_AREA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_AREA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getarea());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_MEDIDAS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_MEDIDAS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getmedidas());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getacabado());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO2))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO2);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detalleguiaremision.getacabado2());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Guia Remision",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesDetalleGuiaRemisions(String sAccionBusqueda,String sTipoArchivoReporte,List<DetalleGuiaRemision> detalleguiaremisionsParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<DetalleGuiaRemision> detalleguiaremisionsRespaldo=null;
		
		classes=DetalleGuiaRemisionConstantesFunciones.getClassesRelationshipsOfDetalleGuiaRemision(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.detalleguiaremisionLogic.setDatosCliente(this.datosCliente);
		this.detalleguiaremisionLogic.setDatosDeep(this.datosDeep);
		this.detalleguiaremisionLogic.setIsConDeep(true);
		
		detalleguiaremisionsRespaldo=this.detalleguiaremisionLogic.getDetalleGuiaRemisions();
		
		this.detalleguiaremisionLogic.setDetalleGuiaRemisions(detalleguiaremisionsParaReportes);	
		this.detalleguiaremisionLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		detalleguiaremisionsParaReportes=this.detalleguiaremisionLogic.getDetalleGuiaRemisions();
		this.detalleguiaremisionLogic.setDetalleGuiaRemisions(detalleguiaremisionsRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleguiaremision_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetalleGuiaRemisions");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetalleGuiaRemision("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(DetalleGuiaRemision detalleguiaremision : detalleguiaremisionsParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderDetalleGuiaRemision("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			DetalleGuiaRemisionConstantesFunciones.generarExcelReporteDataDetalleGuiaRemision("NORMAL",row,workbook,detalleguiaremision,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.getDetalleGuiaRemisionDescripcion(detalleguiaremision));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Guia Remision",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessDetalleGuiaRemision() throws Exception {		
		this.startProcessDetalleGuiaRemision(true);
	}
	
	public void startProcessDetalleGuiaRemision(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasDetalleGuiaRemision ,this.jPanelParametrosReportesDetalleGuiaRemision, this.jScrollPanelDatosDetalleGuiaRemision,this.jPanelPaginacionDetalleGuiaRemision, this.jScrollPanelDatosEdicionDetalleGuiaRemision, this.jPanelAccionesDetalleGuiaRemision,this.jPanelAccionesFormularioDetalleGuiaRemision,this.jmenuBarDetalleGuiaRemision,this.jmenuBarDetalleDetalleGuiaRemision,this.jTtoolBarDetalleGuiaRemision,this.jTtoolBarDetalleDetalleGuiaRemision);		
		
		final JTabbedPane jTabbedPaneBusquedasDetalleGuiaRemision=this.jTabbedPaneBusquedasDetalleGuiaRemision; 
		
		final JPanel jPanelParametrosReportesDetalleGuiaRemision=this.jPanelParametrosReportesDetalleGuiaRemision;
		//final JScrollPane jScrollPanelDatosDetalleGuiaRemision=this.jScrollPanelDatosDetalleGuiaRemision;
		final JTable jTableDatosDetalleGuiaRemision=this.jTableDatosDetalleGuiaRemision;		
		final JPanel jPanelPaginacionDetalleGuiaRemision=this.jPanelPaginacionDetalleGuiaRemision;
		//final JScrollPane jScrollPanelDatosEdicionDetalleGuiaRemision=this.jScrollPanelDatosEdicionDetalleGuiaRemision;
		final JPanel jPanelAccionesDetalleGuiaRemision=this.jPanelAccionesDetalleGuiaRemision;
		
		JPanel jPanelCamposAuxiliarDetalleGuiaRemision=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarDetalleGuiaRemision=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
			jPanelCamposAuxiliarDetalleGuiaRemision=this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelCamposDetalleGuiaRemision;
			jPanelAccionesFormularioAuxiliarDetalleGuiaRemision=this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelAccionesFormularioDetalleGuiaRemision;
		}
		
		final JPanel jPanelCamposDetalleGuiaRemision=jPanelCamposAuxiliarDetalleGuiaRemision;
		final JPanel jPanelAccionesFormularioDetalleGuiaRemision=jPanelAccionesFormularioAuxiliarDetalleGuiaRemision;
		
		
		final JMenuBar jmenuBarDetalleGuiaRemision=this.jmenuBarDetalleGuiaRemision;
		final JToolBar jTtoolBarDetalleGuiaRemision=this.jTtoolBarDetalleGuiaRemision;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarDetalleGuiaRemision=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarDetalleGuiaRemision=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
			jmenuBarDetalleAuxiliarDetalleGuiaRemision=this.jInternalFrameDetalleFormDetalleGuiaRemision.jmenuBarDetalleDetalleGuiaRemision;
			jTtoolBarDetalleAuxiliarDetalleGuiaRemision=this.jInternalFrameDetalleFormDetalleGuiaRemision.jTtoolBarDetalleDetalleGuiaRemision;
		}
		
		final JMenuBar jmenuBarDetalleDetalleGuiaRemision=jmenuBarDetalleAuxiliarDetalleGuiaRemision;
		final JToolBar jTtoolBarDetalleDetalleGuiaRemision=jTtoolBarDetalleAuxiliarDetalleGuiaRemision;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetalleGuiaRemision;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetalleGuiaRemision;
			processRunnable.jTableDatos=jTableDatosDetalleGuiaRemision;
			processRunnable.jPanelCampos=jPanelCamposDetalleGuiaRemision;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetalleGuiaRemision;
			processRunnable.jPanelAcciones=jPanelAccionesDetalleGuiaRemision;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetalleGuiaRemision;
			
			
			processRunnable.jmenuBar=jmenuBarDetalleGuiaRemision;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetalleGuiaRemision;
			processRunnable.jTtoolBar=jTtoolBarDetalleGuiaRemision;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetalleGuiaRemision;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetalleGuiaRemision ,jPanelParametrosReportesDetalleGuiaRemision,jTableDatosDetalleGuiaRemision, /*jScrollPanelDatosDetalleGuiaRemision,*/jPanelCamposDetalleGuiaRemision,jPanelPaginacionDetalleGuiaRemision, /*jScrollPanelDatosEdicionDetalleGuiaRemision,*/ jPanelAccionesDetalleGuiaRemision,jPanelAccionesFormularioDetalleGuiaRemision,jmenuBarDetalleGuiaRemision,jmenuBarDetalleDetalleGuiaRemision,jTtoolBarDetalleGuiaRemision,jTtoolBarDetalleDetalleGuiaRemision);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetalleGuiaRemision ,jPanelParametrosReportesDetalleGuiaRemision, jScrollPanelDatosDetalleGuiaRemision,jPanelPaginacionDetalleGuiaRemision, jScrollPanelDatosEdicionDetalleGuiaRemision, jPanelAccionesDetalleGuiaRemision,jPanelAccionesFormularioDetalleGuiaRemision,jmenuBarDetalleGuiaRemision,jmenuBarDetalleDetalleGuiaRemision,jTtoolBarDetalleGuiaRemision,jTtoolBarDetalleDetalleGuiaRemision);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessDetalleGuiaRemision() {// throws Exception 
		this.finishProcessDetalleGuiaRemision(true);
	}
	
	public void finishProcessDetalleGuiaRemision(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasDetalleGuiaRemision ,this.jPanelParametrosReportesDetalleGuiaRemision, this.jScrollPanelDatosDetalleGuiaRemision,this.jPanelPaginacionDetalleGuiaRemision, this.jScrollPanelDatosEdicionDetalleGuiaRemision, this.jPanelAccionesDetalleGuiaRemision,this.jPanelAccionesFormularioDetalleGuiaRemision,this.jmenuBarDetalleGuiaRemision,this.jmenuBarDetalleDetalleGuiaRemision,this.jTtoolBarDetalleGuiaRemision,this.jTtoolBarDetalleDetalleGuiaRemision);		
		
		final JTabbedPane jTabbedPaneBusquedasDetalleGuiaRemision=this.jTabbedPaneBusquedasDetalleGuiaRemision; 
		
		final JPanel jPanelParametrosReportesDetalleGuiaRemision=this.jPanelParametrosReportesDetalleGuiaRemision;
		//final JScrollPane jScrollPanelDatosDetalleGuiaRemision=this.jScrollPanelDatosDetalleGuiaRemision;
		final JTable jTableDatosDetalleGuiaRemision=this.jTableDatosDetalleGuiaRemision;		
		final JPanel jPanelPaginacionDetalleGuiaRemision=this.jPanelPaginacionDetalleGuiaRemision;
		//final JScrollPane jScrollPanelDatosEdicionDetalleGuiaRemision=this.jScrollPanelDatosEdicionDetalleGuiaRemision;
		final JPanel jPanelAccionesDetalleGuiaRemision=this.jPanelAccionesDetalleGuiaRemision;
		
		JPanel jPanelCamposAuxiliarDetalleGuiaRemision=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarDetalleGuiaRemision=new JPanel();
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
			jPanelCamposAuxiliarDetalleGuiaRemision=this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelCamposDetalleGuiaRemision;
			jPanelAccionesFormularioAuxiliarDetalleGuiaRemision=this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelAccionesFormularioDetalleGuiaRemision;
		}
		
		final JPanel jPanelCamposDetalleGuiaRemision=jPanelCamposAuxiliarDetalleGuiaRemision;
		final JPanel jPanelAccionesFormularioDetalleGuiaRemision=jPanelAccionesFormularioAuxiliarDetalleGuiaRemision;
		
		
		final JMenuBar jmenuBarDetalleGuiaRemision=this.jmenuBarDetalleGuiaRemision;		
		final JToolBar jTtoolBarDetalleGuiaRemision=this.jTtoolBarDetalleGuiaRemision;
				
		JMenuBar jmenuBarDetalleAuxiliarDetalleGuiaRemision=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarDetalleGuiaRemision=new JToolBar();
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
			jmenuBarDetalleAuxiliarDetalleGuiaRemision=this.jInternalFrameDetalleFormDetalleGuiaRemision.jmenuBarDetalleDetalleGuiaRemision;
			jTtoolBarDetalleAuxiliarDetalleGuiaRemision=this.jInternalFrameDetalleFormDetalleGuiaRemision.jTtoolBarDetalleDetalleGuiaRemision;		
		}
		
		final JMenuBar jmenuBarDetalleDetalleGuiaRemision=jmenuBarDetalleAuxiliarDetalleGuiaRemision;
		final JToolBar jTtoolBarDetalleDetalleGuiaRemision=jTtoolBarDetalleAuxiliarDetalleGuiaRemision;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetalleGuiaRemision;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetalleGuiaRemision;
			processRunnable.jTableDatos=jTableDatosDetalleGuiaRemision;
			processRunnable.jPanelCampos=jPanelCamposDetalleGuiaRemision;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetalleGuiaRemision;
			processRunnable.jPanelAcciones=jPanelAccionesDetalleGuiaRemision;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetalleGuiaRemision;
			
			
			processRunnable.jmenuBar=jmenuBarDetalleGuiaRemision;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetalleGuiaRemision;
			processRunnable.jTtoolBar=jTtoolBarDetalleGuiaRemision;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetalleGuiaRemision;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasDetalleGuiaRemision ,jPanelParametrosReportesDetalleGuiaRemision, jTableDatosDetalleGuiaRemision,/*jScrollPanelDatosDetalleGuiaRemision,*/jPanelCamposDetalleGuiaRemision,jPanelPaginacionDetalleGuiaRemision, /*jScrollPanelDatosEdicionDetalleGuiaRemision,*/ jPanelAccionesDetalleGuiaRemision,jPanelAccionesFormularioDetalleGuiaRemision,jmenuBarDetalleGuiaRemision,jmenuBarDetalleDetalleGuiaRemision,jTtoolBarDetalleGuiaRemision,jTtoolBarDetalleDetalleGuiaRemision));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesDetalleGuiaRemision(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarDetalleGuiaRemision(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuDetalleGuiaRemision(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarDetalleGuiaRemision(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleGuiaRemision,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleDetalleGuiaRemision,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuDetalleGuiaRemision(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleGuiaRemision,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleDetalleGuiaRemision,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.detalleguiaremisionConstantesFunciones.getsFinalQueryDetalleGuiaRemision();
		String  finalQueryPaginacionTodos=this.detalleguiaremisionConstantesFunciones.getsFinalQueryDetalleGuiaRemision();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=DetalleGuiaRemisionConstantesFunciones.getArrayColumnasGlobalesNoDetalleGuiaRemision(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=DetalleGuiaRemisionConstantesFunciones.getArrayColumnasGlobalesDetalleGuiaRemision(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,DetalleGuiaRemisionConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.detalleguiaremisionsEliminados= new ArrayList<DetalleGuiaRemision>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessDetalleGuiaRemision();
		
				///*DetalleGuiaRemisionSessionBean*/this.detalleguiaremisionSessionBean=new DetalleGuiaRemisionSessionBean();
			
			if(this.detalleguiaremisionSessionBean==null) {
				this.detalleguiaremisionSessionBean=new DetalleGuiaRemisionSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=DetalleGuiaRemisionConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=DetalleGuiaRemisionConstantesFunciones.getClassesForeignKeysOfDetalleGuiaRemision(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/detalleguiaremision."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			detalleguiaremisionsAux= new ArrayList<DetalleGuiaRemision>();
			
				
			detalleguiaremisionLogic.setDatosCliente(this.datosCliente);
			detalleguiaremisionLogic.setDatosDeep(this.datosDeep);
			detalleguiaremisionLogic.setIsConDeep(true);
			
			
			detalleguiaremisionLogic.getDetalleGuiaRemisionDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					detalleguiaremisionLogic.getTodosDetalleGuiaRemisions(finalQueryGlobal,pagination);
					
					//detalleguiaremisionLogic.getTodosDetalleGuiaRemisionsWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(detalleguiaremisionLogic.getDetalleGuiaRemisions()==null|| detalleguiaremisionLogic.getDetalleGuiaRemisions().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detalleguiaremisionsAux= new ArrayList<DetalleGuiaRemision>();
							detalleguiaremisionsAux.addAll(detalleguiaremisionLogic.getDetalleGuiaRemisions());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleguiaremisionsAux= new ArrayList<DetalleGuiaRemision>();
							detalleguiaremisionsAux.addAll(detalleguiaremisions);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detalleguiaremisionLogic.getTodosDetalleGuiaRemisions(finalQueryGlobal+"",this.pagination);												
							
							//detalleguiaremisionLogic.getTodosDetalleGuiaRemisionsWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteDetalleGuiaRemisions("Todos",detalleguiaremisionLogic.getDetalleGuiaRemisions() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detalleguiaremisionLogic.setDetalleGuiaRemisions(new ArrayList<DetalleGuiaRemision>());					
							detalleguiaremisionLogic.getDetalleGuiaRemisions().addAll(detalleguiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleguiaremisions=new ArrayList<DetalleGuiaRemision>();
							detalleguiaremisions.addAll(detalleguiaremisionsAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idDetalleGuiaRemision=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idDetalleGuiaRemision=this.idActual;
				
				} else if(this.idDetalleGuiaRemisionActual!=null && this.idDetalleGuiaRemisionActual!=0L) {
					idDetalleGuiaRemision=idDetalleGuiaRemisionActual;
				}
				
					
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndicePorId(idDetalleGuiaRemision);
				
				this.detalleguiaremisions=new ArrayList<DetalleGuiaRemision>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					detalleguiaremisionLogic.getEntity(idDetalleGuiaRemision);
					
					//detalleguiaremisionLogic.getEntityWithConnection(idDetalleGuiaRemision);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleguiaremisionLogic.setDetalleGuiaRemisions(new ArrayList<DetalleGuiaRemision>());
					detalleguiaremisionLogic.getDetalleGuiaRemisions().add(detalleguiaremisionLogic.getDetalleGuiaRemision());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleguiaremisions=new ArrayList<DetalleGuiaRemision>();
					this.detalleguiaremisions.add(detalleguiaremision);
				}
				
				if(detalleguiaremisionLogic.getDetalleGuiaRemision()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdBodega")) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleguiaremisionLogic.getDetalleGuiaRemisions()==null||detalleguiaremisionLogic.getDetalleGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleguiaremisions==null|| detalleguiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionsAux=new ArrayList<DetalleGuiaRemision>();
						detalleguiaremisionsAux.addAll(detalleguiaremisionLogic.getDetalleGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleguiaremisionsAux=new ArrayList<DetalleGuiaRemision>();
							detalleguiaremisionsAux.addAll(detalleguiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleGuiaRemisions("FK_IdBodega",detalleguiaremisionLogic.getDetalleGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleGuiaRemisions("FK_IdBodega",detalleguiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionLogic.setDetalleGuiaRemisions(new ArrayList<DetalleGuiaRemision>());
						detalleguiaremisionLogic.getDetalleGuiaRemisions().addAll(detalleguiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleguiaremisions=new ArrayList<DetalleGuiaRemision>();
							detalleguiaremisions.addAll(detalleguiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCentroCosto")) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleguiaremisionLogic.getDetalleGuiaRemisions()==null||detalleguiaremisionLogic.getDetalleGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleguiaremisions==null|| detalleguiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionsAux=new ArrayList<DetalleGuiaRemision>();
						detalleguiaremisionsAux.addAll(detalleguiaremisionLogic.getDetalleGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleguiaremisionsAux=new ArrayList<DetalleGuiaRemision>();
							detalleguiaremisionsAux.addAll(detalleguiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleGuiaRemisions("FK_IdCentroCosto",detalleguiaremisionLogic.getDetalleGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleGuiaRemisions("FK_IdCentroCosto",detalleguiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionLogic.setDetalleGuiaRemisions(new ArrayList<DetalleGuiaRemision>());
						detalleguiaremisionLogic.getDetalleGuiaRemisions().addAll(detalleguiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleguiaremisions=new ArrayList<DetalleGuiaRemision>();
							detalleguiaremisions.addAll(detalleguiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleguiaremisionLogic.getDetalleGuiaRemisions()==null||detalleguiaremisionLogic.getDetalleGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleguiaremisions==null|| detalleguiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionsAux=new ArrayList<DetalleGuiaRemision>();
						detalleguiaremisionsAux.addAll(detalleguiaremisionLogic.getDetalleGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleguiaremisionsAux=new ArrayList<DetalleGuiaRemision>();
							detalleguiaremisionsAux.addAll(detalleguiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleGuiaRemisions("FK_IdEjercicio",detalleguiaremisionLogic.getDetalleGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleGuiaRemisions("FK_IdEjercicio",detalleguiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionLogic.setDetalleGuiaRemisions(new ArrayList<DetalleGuiaRemision>());
						detalleguiaremisionLogic.getDetalleGuiaRemisions().addAll(detalleguiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleguiaremisions=new ArrayList<DetalleGuiaRemision>();
							detalleguiaremisions.addAll(detalleguiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleguiaremisionLogic.getDetalleGuiaRemisions()==null||detalleguiaremisionLogic.getDetalleGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleguiaremisions==null|| detalleguiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionsAux=new ArrayList<DetalleGuiaRemision>();
						detalleguiaremisionsAux.addAll(detalleguiaremisionLogic.getDetalleGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleguiaremisionsAux=new ArrayList<DetalleGuiaRemision>();
							detalleguiaremisionsAux.addAll(detalleguiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleGuiaRemisions("FK_IdEmpresa",detalleguiaremisionLogic.getDetalleGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleGuiaRemisions("FK_IdEmpresa",detalleguiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionLogic.setDetalleGuiaRemisions(new ArrayList<DetalleGuiaRemision>());
						detalleguiaremisionLogic.getDetalleGuiaRemisions().addAll(detalleguiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleguiaremisions=new ArrayList<DetalleGuiaRemision>();
							detalleguiaremisions.addAll(detalleguiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdGuiaRemision")) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdGuiaRemision(id_guia_remisionFK_IdGuiaRemision);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdGuiaRemision(finalQueryGlobal,pagination,id_guia_remisionFK_IdGuiaRemision);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdGuiaRemision(id_guia_remisionFK_IdGuiaRemision);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdGuiaRemision(id_guia_remisionFK_IdGuiaRemision);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleguiaremisionLogic.getDetalleGuiaRemisions()==null||detalleguiaremisionLogic.getDetalleGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleguiaremisions==null|| detalleguiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionsAux=new ArrayList<DetalleGuiaRemision>();
						detalleguiaremisionsAux.addAll(detalleguiaremisionLogic.getDetalleGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleguiaremisionsAux=new ArrayList<DetalleGuiaRemision>();
							detalleguiaremisionsAux.addAll(detalleguiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdGuiaRemision(finalQueryGlobal,pagination,id_guia_remisionFK_IdGuiaRemision);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdGuiaRemision(id_guia_remisionFK_IdGuiaRemision);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdGuiaRemision(id_guia_remisionFK_IdGuiaRemision);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleGuiaRemisions("FK_IdGuiaRemision",detalleguiaremisionLogic.getDetalleGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleGuiaRemisions("FK_IdGuiaRemision",detalleguiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionLogic.setDetalleGuiaRemisions(new ArrayList<DetalleGuiaRemision>());
						detalleguiaremisionLogic.getDetalleGuiaRemisions().addAll(detalleguiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleguiaremisions=new ArrayList<DetalleGuiaRemision>();
							detalleguiaremisions.addAll(detalleguiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleguiaremisionLogic.getDetalleGuiaRemisions()==null||detalleguiaremisionLogic.getDetalleGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleguiaremisions==null|| detalleguiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionsAux=new ArrayList<DetalleGuiaRemision>();
						detalleguiaremisionsAux.addAll(detalleguiaremisionLogic.getDetalleGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleguiaremisionsAux=new ArrayList<DetalleGuiaRemision>();
							detalleguiaremisionsAux.addAll(detalleguiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleGuiaRemisions("FK_IdPeriodo",detalleguiaremisionLogic.getDetalleGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleGuiaRemisions("FK_IdPeriodo",detalleguiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionLogic.setDetalleGuiaRemisions(new ArrayList<DetalleGuiaRemision>());
						detalleguiaremisionLogic.getDetalleGuiaRemisions().addAll(detalleguiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleguiaremisions=new ArrayList<DetalleGuiaRemision>();
							detalleguiaremisions.addAll(detalleguiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdProducto")) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdProducto(finalQueryGlobal,pagination,id_productoFK_IdProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleguiaremisionLogic.getDetalleGuiaRemisions()==null||detalleguiaremisionLogic.getDetalleGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleguiaremisions==null|| detalleguiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionsAux=new ArrayList<DetalleGuiaRemision>();
						detalleguiaremisionsAux.addAll(detalleguiaremisionLogic.getDetalleGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleguiaremisionsAux=new ArrayList<DetalleGuiaRemision>();
							detalleguiaremisionsAux.addAll(detalleguiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdProducto(finalQueryGlobal,pagination,id_productoFK_IdProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleGuiaRemisions("FK_IdProducto",detalleguiaremisionLogic.getDetalleGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleGuiaRemisions("FK_IdProducto",detalleguiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionLogic.setDetalleGuiaRemisions(new ArrayList<DetalleGuiaRemision>());
						detalleguiaremisionLogic.getDetalleGuiaRemisions().addAll(detalleguiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleguiaremisions=new ArrayList<DetalleGuiaRemision>();
							detalleguiaremisions.addAll(detalleguiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleguiaremisionLogic.getDetalleGuiaRemisions()==null||detalleguiaremisionLogic.getDetalleGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleguiaremisions==null|| detalleguiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionsAux=new ArrayList<DetalleGuiaRemision>();
						detalleguiaremisionsAux.addAll(detalleguiaremisionLogic.getDetalleGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleguiaremisionsAux=new ArrayList<DetalleGuiaRemision>();
							detalleguiaremisionsAux.addAll(detalleguiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleGuiaRemisions("FK_IdSucursal",detalleguiaremisionLogic.getDetalleGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleGuiaRemisions("FK_IdSucursal",detalleguiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionLogic.setDetalleGuiaRemisions(new ArrayList<DetalleGuiaRemision>());
						detalleguiaremisionLogic.getDetalleGuiaRemisions().addAll(detalleguiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleguiaremisions=new ArrayList<DetalleGuiaRemision>();
							detalleguiaremisions.addAll(detalleguiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUnidad")) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdUnidad(finalQueryGlobal,pagination,id_unidadFK_IdUnidad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detalleguiaremisionLogic.getDetalleGuiaRemisions()==null||detalleguiaremisionLogic.getDetalleGuiaRemisions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detalleguiaremisions==null|| detalleguiaremisions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionsAux=new ArrayList<DetalleGuiaRemision>();
						detalleguiaremisionsAux.addAll(detalleguiaremisionLogic.getDetalleGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleguiaremisionsAux=new ArrayList<DetalleGuiaRemision>();
							detalleguiaremisionsAux.addAll(detalleguiaremisions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdUnidad(finalQueryGlobal,pagination,id_unidadFK_IdUnidad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetalleGuiaRemisionConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetalleGuiaRemisions("FK_IdUnidad",detalleguiaremisionLogic.getDetalleGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetalleGuiaRemisions("FK_IdUnidad",detalleguiaremisions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionLogic.setDetalleGuiaRemisions(new ArrayList<DetalleGuiaRemision>());
						detalleguiaremisionLogic.getDetalleGuiaRemisions().addAll(detalleguiaremisionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleguiaremisions=new ArrayList<DetalleGuiaRemision>();
							detalleguiaremisions.addAll(detalleguiaremisionsAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesDetalleGuiaRemision();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessDetalleGuiaRemision();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detalleguiaremisionLogic.getDetalleGuiaRemisions().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detalleguiaremisions.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detalleguiaremisionLogic.getDetalleGuiaRemisions().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detalleguiaremisions.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(DetalleGuiaRemision detalleguiaremision) {
		Boolean permite=true;
		
		if(this.detalleguiaremision.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=DetalleGuiaRemisionConstantesFunciones.getOrderByListaDetalleGuiaRemision();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=DetalleGuiaRemisionConstantesFunciones.getOrderByListaDetalleGuiaRemision();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionLogic.getDetalleGuiaRemisions()) {
				if(detalleguiaremision.getsType().equals(Constantes2.S_TOTALES)) {
					detalleguiaremisionTotales=detalleguiaremision;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleGuiaRemision detalleguiaremision:this.detalleguiaremisions) {
				if(detalleguiaremision.getsType().equals(Constantes2.S_TOTALES)) {
					detalleguiaremisionTotales=detalleguiaremision;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.detalleguiaremisionAux=new DetalleGuiaRemision();
			this.detalleguiaremisionAux.setsType(Constantes2.S_TOTALES);
			this.detalleguiaremisionAux.setIsNew(false);
			this.detalleguiaremisionAux.setIsChanged(false);
			this.detalleguiaremisionAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				DetalleGuiaRemisionConstantesFunciones.TotalizarValoresFilaDetalleGuiaRemision(this.detalleguiaremisionLogic.getDetalleGuiaRemisions(),this.detalleguiaremisionAux);
				
				this.detalleguiaremisionLogic.getDetalleGuiaRemisions().add(this.detalleguiaremisionAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				DetalleGuiaRemisionConstantesFunciones.TotalizarValoresFilaDetalleGuiaRemision(this.detalleguiaremisions,this.detalleguiaremisionAux);
				
				this.detalleguiaremisions.add(this.detalleguiaremisionAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		detalleguiaremisionTotales=new DetalleGuiaRemision();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detalleguiaremisionLogic.getDetalleGuiaRemisions().remove(detalleguiaremisionTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detalleguiaremisions.remove(detalleguiaremisionTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		detalleguiaremisionTotales=new DetalleGuiaRemision();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionLogic.getDetalleGuiaRemisions()) {
				if(detalleguiaremision.getsType().equals(Constantes2.S_TOTALES)) {
					detalleguiaremisionTotales=detalleguiaremision;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetalleGuiaRemisionConstantesFunciones.TotalizarValoresFilaDetalleGuiaRemision(this.detalleguiaremisionLogic.getDetalleGuiaRemisions(),detalleguiaremisionTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetalleGuiaRemision detalleguiaremision:this.detalleguiaremisions) {
				if(detalleguiaremision.getsType().equals(Constantes2.S_TOTALES)) {
					detalleguiaremisionTotales=detalleguiaremision;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetalleGuiaRemisionConstantesFunciones.TotalizarValoresFilaDetalleGuiaRemision(this.detalleguiaremisions,detalleguiaremisionTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getDetalleGuiaRemisionsFK_IdBodega()throws Exception {
		try {
			sAccionBusqueda="FK_IdBodega";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleGuiaRemisionsFK_IdCentroCosto()throws Exception {
		try {
			sAccionBusqueda="FK_IdCentroCosto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleGuiaRemisionsFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleGuiaRemisionsFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleGuiaRemisionsFK_IdGuiaRemision()throws Exception {
		try {
			sAccionBusqueda="FK_IdGuiaRemision";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleGuiaRemisionsFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleGuiaRemisionsFK_IdProducto()throws Exception {
		try {
			sAccionBusqueda="FK_IdProducto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleGuiaRemisionsFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetalleGuiaRemisionsFK_IdUnidad()throws Exception {
		try {
			sAccionBusqueda="FK_IdUnidad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getDetalleGuiaRemisionsFK_IdBodega(String sFinalQuery,Long id_bodega)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdBodega(sFinalQuery,this.pagination,id_bodega);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleGuiaRemisionsFK_IdCentroCosto(String sFinalQuery,Long id_centro_costo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdCentroCosto(sFinalQuery,this.pagination,id_centro_costo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleGuiaRemisionsFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleGuiaRemisionsFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleGuiaRemisionsFK_IdGuiaRemision(String sFinalQuery,Long id_guia_remision)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdGuiaRemision(sFinalQuery,this.pagination,id_guia_remision);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleGuiaRemisionsFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleGuiaRemisionsFK_IdProducto(String sFinalQuery,Long id_producto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdProducto(sFinalQuery,this.pagination,id_producto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleGuiaRemisionsFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetalleGuiaRemisionsFK_IdUnidad(String sFinalQuery,Long id_unidad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleguiaremisionLogic.getDetalleGuiaRemisionsFK_IdUnidad(sFinalQuery,this.pagination,id_unidad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosDetalleGuiaRemision() {
		this.isPermisoTodoDetalleGuiaRemision=false;
		this.isPermisoNuevoDetalleGuiaRemision=false;
		this.isPermisoActualizarDetalleGuiaRemision=false;
		this.isPermisoActualizarOriginalDetalleGuiaRemision=false;
		this.isPermisoEliminarDetalleGuiaRemision=false;
		this.isPermisoGuardarCambiosDetalleGuiaRemision=false;
		this.isPermisoConsultaDetalleGuiaRemision=false;
		this.isPermisoBusquedaDetalleGuiaRemision=false;
		this.isPermisoReporteDetalleGuiaRemision=false;		
		this.isPermisoOrdenDetalleGuiaRemision=false;		
		this.isPermisoPaginacionMedioDetalleGuiaRemision=false;		
		this.isPermisoPaginacionAltoDetalleGuiaRemision=false;
		this.isPermisoPaginacionTodoDetalleGuiaRemision=false;
		this.isPermisoCopiarDetalleGuiaRemision=false;		
		this.isPermisoVerFormDetalleGuiaRemision=false;		
		this.isPermisoDuplicarDetalleGuiaRemision=false;		
		this.isPermisoOrdenDetalleGuiaRemision=false;		
	}
	
	public void setPermisosUsuarioDetalleGuiaRemision(Boolean isPermiso) {
		this.isPermisoTodoDetalleGuiaRemision=isPermiso;
		this.isPermisoNuevoDetalleGuiaRemision=isPermiso;
		this.isPermisoActualizarDetalleGuiaRemision=isPermiso;
		this.isPermisoActualizarOriginalDetalleGuiaRemision=isPermiso;
		this.isPermisoEliminarDetalleGuiaRemision=isPermiso;
		this.isPermisoGuardarCambiosDetalleGuiaRemision=isPermiso;
		this.isPermisoConsultaDetalleGuiaRemision=isPermiso;
		this.isPermisoBusquedaDetalleGuiaRemision=isPermiso;
		this.isPermisoReporteDetalleGuiaRemision=isPermiso;
		this.isPermisoOrdenDetalleGuiaRemision=isPermiso;		
		this.isPermisoPaginacionMedioDetalleGuiaRemision=isPermiso;		
		this.isPermisoPaginacionAltoDetalleGuiaRemision=isPermiso;		
		this.isPermisoPaginacionTodoDetalleGuiaRemision=isPermiso;		
		this.isPermisoCopiarDetalleGuiaRemision=isPermiso;		
		this.isPermisoVerFormDetalleGuiaRemision=isPermiso;		
		this.isPermisoDuplicarDetalleGuiaRemision=isPermiso;
		this.isPermisoOrdenDetalleGuiaRemision=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioDetalleGuiaRemision(Boolean isPermiso) {
		//this.isPermisoTodoDetalleGuiaRemision=isPermiso;
		this.isPermisoNuevoDetalleGuiaRemision=isPermiso;
		this.isPermisoActualizarDetalleGuiaRemision=isPermiso;
		this.isPermisoActualizarOriginalDetalleGuiaRemision=isPermiso;
		this.isPermisoEliminarDetalleGuiaRemision=isPermiso;
		this.isPermisoGuardarCambiosDetalleGuiaRemision=isPermiso;
		//this.isPermisoConsultaDetalleGuiaRemision=isPermiso;
		//this.isPermisoBusquedaDetalleGuiaRemision=isPermiso;
		//this.isPermisoReporteDetalleGuiaRemision=isPermiso;
		//this.isPermisoOrdenDetalleGuiaRemision=isPermiso;		
		//this.isPermisoPaginacionMedioDetalleGuiaRemision=isPermiso;		
		//this.isPermisoPaginacionAltoDetalleGuiaRemision=isPermiso;		
		//this.isPermisoPaginacionTodoDetalleGuiaRemision=isPermiso;		
		//this.isPermisoCopiarDetalleGuiaRemision=isPermiso;		
		//this.isPermisoDuplicarDetalleGuiaRemision=isPermiso;
		//this.isPermisoOrdenDetalleGuiaRemision=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioDetalleGuiaRemisionClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(DetalleGuiaRemisionJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebDetalleGuiaRemision(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioDetalleGuiaRemisionClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioDetalleGuiaRemisionClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionDetalleGuiaRemisionClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioDetalleGuiaRemisionClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioDetalleGuiaRemision() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(DetalleGuiaRemisionJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, DetalleGuiaRemisionConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoDetalleGuiaRemision=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarDetalleGuiaRemision=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalDetalleGuiaRemision=this.isPermisoActualizarDetalleGuiaRemision;
			this.isPermisoEliminarDetalleGuiaRemision=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosDetalleGuiaRemision=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaDetalleGuiaRemision=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaDetalleGuiaRemision=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoDetalleGuiaRemision=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteDetalleGuiaRemision=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetalleGuiaRemision=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioDetalleGuiaRemision=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoDetalleGuiaRemision=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoDetalleGuiaRemision=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarDetalleGuiaRemision=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormDetalleGuiaRemision=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarDetalleGuiaRemision=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetalleGuiaRemision=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosDetalleGuiaRemision.setToolTipText(this.jTableDatosDetalleGuiaRemision.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioDetalleGuiaRemision(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioDetalleGuiaRemision(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(DetalleGuiaRemisionJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(DetalleGuiaRemisionJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioDetalleGuiaRemision() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyDetalleGuiaRemisionListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.guiaremisionsForeignKey=new ArrayList();
				this.bodegasForeignKey=new ArrayList();
				this.productosForeignKey=new ArrayList();
				this.unidadsForeignKey=new ArrayList();
				this.centrocostosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyDetalleGuiaRemisionListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(DetalleGuiaRemisionJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyDetalleGuiaRemisionListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyGuiaRemisionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUnidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyGuiaRemisionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.guiaremisionsForeignKey==null||this.guiaremisionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=GuiaRemisionConstantesFunciones.getArrayColumnasGlobalesGuiaRemision(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,GuiaRemisionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=GuiaRemisionConstantesFunciones.SFINALQUERY;

				this.cargarCombosGuiaRemisionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BodegaConstantesFunciones.SFINALQUERY;

				this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProductoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.productosForeignKey==null||this.productosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ProductoConstantesFunciones.getArrayColumnasGlobalesProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProductoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ProductoConstantesFunciones.SFINALQUERY;

				this.cargarCombosProductosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.unidadsForeignKey==null||this.unidadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UnidadConstantesFunciones.SFINALQUERY;

				this.cargarCombosUnidadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCostoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CentroCostoConstantesFunciones.SFINALQUERY;

				this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyDetalleGuiaRemisionListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			DetalleGuiaRemisionParameterReturnGeneral detalleguiaremisionReturnGeneral=new DetalleGuiaRemisionParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.detalleguiaremisionConstantesFunciones.cargarid_empresaDetalleGuiaRemision)
					 || (this.esRecargarFks && this.detalleguiaremisionConstantesFunciones.cargarid_empresaDetalleGuiaRemision)) {

					if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+detalleguiaremisionSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.detalleguiaremisionConstantesFunciones.cargarid_sucursalDetalleGuiaRemision)
					 || (this.esRecargarFks && this.detalleguiaremisionConstantesFunciones.cargarid_sucursalDetalleGuiaRemision)) {

					if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+detalleguiaremisionSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.detalleguiaremisionConstantesFunciones.cargarid_ejercicioDetalleGuiaRemision)
					 || (this.esRecargarFks && this.detalleguiaremisionConstantesFunciones.cargarid_ejercicioDetalleGuiaRemision)) {

					if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+detalleguiaremisionSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.detalleguiaremisionConstantesFunciones.cargarid_periodoDetalleGuiaRemision)
					 || (this.esRecargarFks && this.detalleguiaremisionConstantesFunciones.cargarid_periodoDetalleGuiaRemision)) {

					if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+detalleguiaremisionSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalGuiaRemision="";

				if(((this.guiaremisionsForeignKey==null||this.guiaremisionsForeignKey.size()<=0) && this.detalleguiaremisionConstantesFunciones.cargarid_guia_remisionDetalleGuiaRemision)
					 || (this.esRecargarFks && this.detalleguiaremisionConstantesFunciones.cargarid_guia_remisionDetalleGuiaRemision)) {

					if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionGuiaRemision()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=GuiaRemisionConstantesFunciones.getArrayColumnasGlobalesGuiaRemision(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalGuiaRemision=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,GuiaRemisionConstantesFunciones.TABLENAME);

						finalQueryGlobalGuiaRemision=Funciones.GetFinalQueryAppend(finalQueryGlobalGuiaRemision, "");
						finalQueryGlobalGuiaRemision+=GuiaRemisionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosGuiaRemisionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalGuiaRemision=" WHERE " + ConstantesSql.ID + "="+detalleguiaremisionSessionBean.getlidGuiaRemisionActual();
					}
				} else {
					finalQueryGlobalGuiaRemision="NONE";
				}


				String finalQueryGlobalBodega="";

				if(((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0) && this.detalleguiaremisionConstantesFunciones.cargarid_bodegaDetalleGuiaRemision)
					 || (this.esRecargarFks && this.detalleguiaremisionConstantesFunciones.cargarid_bodegaDetalleGuiaRemision)) {

					if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBodega=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

						finalQueryGlobalBodega=Funciones.GetFinalQueryAppend(finalQueryGlobalBodega, "");
						finalQueryGlobalBodega+=BodegaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBodega=" WHERE " + ConstantesSql.ID + "="+detalleguiaremisionSessionBean.getlidBodegaActual();
					}
				} else {
					finalQueryGlobalBodega="NONE";
				}


				String finalQueryGlobalProducto="";

				if(cargarCombosDependencia && ((this.productosForeignKey==null||this.productosForeignKey.size()<=0) && this.detalleguiaremisionConstantesFunciones.cargarid_productoDetalleGuiaRemision)
					 || (this.esRecargarFks && this.detalleguiaremisionConstantesFunciones.cargarid_productoDetalleGuiaRemision)) {

					if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ProductoConstantesFunciones.getArrayColumnasGlobalesProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalProducto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProductoConstantesFunciones.TABLENAME);

						finalQueryGlobalProducto=Funciones.GetFinalQueryAppend(finalQueryGlobalProducto, "");
						finalQueryGlobalProducto+=ProductoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosProductosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalProducto=" WHERE " + ConstantesSql.ID + "="+detalleguiaremisionSessionBean.getlidProductoActual();
					}
				} else {
					finalQueryGlobalProducto="NONE";
				}


				String finalQueryGlobalUnidad="";

				if(cargarCombosDependencia && ((this.unidadsForeignKey==null||this.unidadsForeignKey.size()<=0) && this.detalleguiaremisionConstantesFunciones.cargarid_unidadDetalleGuiaRemision)
					 || (this.esRecargarFks && this.detalleguiaremisionConstantesFunciones.cargarid_unidadDetalleGuiaRemision)) {

					if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUnidad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

						finalQueryGlobalUnidad=Funciones.GetFinalQueryAppend(finalQueryGlobalUnidad, "");
						finalQueryGlobalUnidad+=UnidadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUnidadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUnidad=" WHERE " + ConstantesSql.ID + "="+detalleguiaremisionSessionBean.getlidUnidadActual();
					}
				} else {
					finalQueryGlobalUnidad="NONE";
				}


				String finalQueryGlobalCentroCosto="";

				if(((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0) && this.detalleguiaremisionConstantesFunciones.cargarid_centro_costoDetalleGuiaRemision)
					 || (this.esRecargarFks && this.detalleguiaremisionConstantesFunciones.cargarid_centro_costoDetalleGuiaRemision)) {

					if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCentroCosto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

						finalQueryGlobalCentroCosto=Funciones.GetFinalQueryAppend(finalQueryGlobalCentroCosto, "");
						finalQueryGlobalCentroCosto+=CentroCostoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCentroCosto=" WHERE " + ConstantesSql.ID + "="+detalleguiaremisionSessionBean.getlidCentroCostoActual();
					}
				} else {
					finalQueryGlobalCentroCosto="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				detalleguiaremisionReturnGeneral=detalleguiaremisionLogic.cargarCombosLoteForeignKeyDetalleGuiaRemision(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalGuiaRemision,finalQueryGlobalBodega,finalQueryGlobalProducto,finalQueryGlobalUnidad,finalQueryGlobalCentroCosto);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=detalleguiaremisionReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=detalleguiaremisionReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=detalleguiaremisionReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=detalleguiaremisionReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalGuiaRemision.equals("NONE")) {
				this.guiaremisionsForeignKey=detalleguiaremisionReturnGeneral.getguiaremisionsForeignKey();
			}

			if(!finalQueryGlobalBodega.equals("NONE")) {
				this.bodegasForeignKey=detalleguiaremisionReturnGeneral.getbodegasForeignKey();
			}

			if(!finalQueryGlobalProducto.equals("NONE")) {
				this.productosForeignKey=detalleguiaremisionReturnGeneral.getproductosForeignKey();
			}

			if(!finalQueryGlobalUnidad.equals("NONE")) {
				this.unidadsForeignKey=detalleguiaremisionReturnGeneral.getunidadsForeignKey();
			}

			if(!finalQueryGlobalCentroCosto.equals("NONE")) {
				this.centrocostosForeignKey=detalleguiaremisionReturnGeneral.getcentrocostosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyDetalleGuiaRemision()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyGuiaRemision();
			this.addItemDefectoCombosForeignKeyBodega();
			this.addItemDefectoCombosForeignKeyProducto();
			this.addItemDefectoCombosForeignKeyUnidad();
			this.addItemDefectoCombosForeignKeyCentroCosto();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.detalleguiaremisionSessionBean==null) {
				this.detalleguiaremisionSessionBean=new DetalleGuiaRemisionSessionBean();
			}

			if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyGuiaRemision()throws Exception {
		try {

			if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionGuiaRemision()) {
				GuiaRemision guiaremision=new GuiaRemision();
				GuiaRemisionConstantesFunciones.setGuiaRemisionDescripcion(guiaremision,Constantes.SMENSAJE_ESCOJA_OPCION);
				guiaremision.setId(null);

				if(!GuiaRemisionConstantesFunciones.ExisteEnLista(this.guiaremisionsForeignKey,guiaremision,true)) {

					this.guiaremisionsForeignKey.add(0,guiaremision);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBodega()throws Exception {
		try {

			if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				Bodega bodega=new Bodega();
				BodegaConstantesFunciones.setBodegaDescripcion(bodega,Constantes.SMENSAJE_ESCOJA_OPCION);
				bodega.setId(null);

				if(!BodegaConstantesFunciones.ExisteEnLista(this.bodegasForeignKey,bodega,true)) {

					this.bodegasForeignKey.add(0,bodega);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyProducto()throws Exception {
		try {

			if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {
				Producto producto=new Producto();
				ProductoConstantesFunciones.setProductoDescripcion(producto,Constantes.SMENSAJE_ESCOJA_OPCION);
				producto.setId(null);

				if(!ProductoConstantesFunciones.ExisteEnLista(this.productosForeignKey,producto,true)) {

					this.productosForeignKey.add(0,producto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUnidad()throws Exception {
		try {

			if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {
				Unidad unidad=new Unidad();
				UnidadConstantesFunciones.setUnidadDescripcion(unidad,Constantes.SMENSAJE_ESCOJA_OPCION);
				unidad.setId(null);

				if(!UnidadConstantesFunciones.ExisteEnLista(this.unidadsForeignKey,unidad,true)) {

					this.unidadsForeignKey.add(0,unidad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCentroCosto()throws Exception {
		try {

			if(!this.detalleguiaremisionSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				CentroCosto centrocosto=new CentroCosto();
				CentroCostoConstantesFunciones.setCentroCostoDescripcion(centrocosto,Constantes.SMENSAJE_ESCOJA_OPCION);
				centrocosto.setId(null);

				if(!CentroCostoConstantesFunciones.ExisteEnLista(this.centrocostosForeignKey,centrocosto,true)) {

					this.centrocostosForeignKey.add(0,centrocosto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyDetalleGuiaRemision()throws Exception {
		try {
			
			this.initActionsCombosForeignKeyBodega("Todos");
			this.initActionsCombosForeignKeyProducto("Todos");
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyDetalleGuiaRemision(String sFormularioTipoBusqueda)throws Exception {
		try {
			
			this.initActionsCombosForeignKeyBodega(sFormularioTipoBusqueda);
			this.initActionsCombosForeignKeyProducto(sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyBodega(JComboBox jComboBoxBodegaGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Bodega bodegaLocal=(Bodega)jComboBoxBodegaGenerico.getSelectedItem();

			if(bodegaLocal!=null  && bodegaLocal.getId()!=null  && bodegaLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_bodega="+bodegaLocal.getId();
			}
			//REDEFINE
			sFinalQueryCombo=InventarioSql.GetQueryProductoFromBodega(bodegaLocal);

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboProducto=sFinalQueryCombo;

			this.productosForeignKey=new ArrayList<Producto>();
			this.cargarCombosForeignKeyProducto(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyProducto(JComboBox jComboBoxProductoGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Producto productoLocal=(Producto)jComboBoxProductoGenerico.getSelectedItem();

			if(productoLocal!=null  && productoLocal.getId()!=null  && productoLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_producto="+productoLocal.getId();
			}
			//REDEFINE
			sFinalQueryCombo=InventarioSql.GetQueryUnidadFromBodegaYProducto(productoLocal,this.detalleguiaremision.getid_bodega());

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboUnidad=sFinalQueryCombo;

			this.unidadsForeignKey=new ArrayList<Unidad>();
			this.cargarCombosForeignKeyUnidad(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}
	
	



	public void initActionsCombosForeignKeyBodega(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision.addItemListener(new ComboBoxItemListener(this,"id_bodegaDetalleGuiaRemision"));
						this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision.addFocusListener(new ComboBoxFocusListener(this,"id_bodegaDetalleGuiaRemision"));
					}
				} else {
					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision.addActionListener(new ComboBoxActionListener(this,"id_bodegaDetalleGuiaRemision"));
						this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision.addFocusListener(new ComboBoxFocusListener(this,"id_bodegaDetalleGuiaRemision"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision"));

						this.jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision"));

					} else {
						this.jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision"));

						this.jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void initActionsCombosForeignKeyProducto(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision.addItemListener(new ComboBoxItemListener(this,"id_productoDetalleGuiaRemision"));
						this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision.addFocusListener(new ComboBoxFocusListener(this,"id_productoDetalleGuiaRemision"));
					}
				} else {
					if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
						this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision.addActionListener(new ComboBoxActionListener(this,"id_productoDetalleGuiaRemision"));
						this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision.addFocusListener(new ComboBoxFocusListener(this,"id_productoDetalleGuiaRemision"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_productoFK_IdProductoDetalleGuiaRemision.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_productoFK_IdProductoDetalleGuiaRemision"));

						this.jComboBoxid_productoFK_IdProductoDetalleGuiaRemision.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_productoFK_IdProductoDetalleGuiaRemision"));

					} else {
						this.jComboBoxid_productoFK_IdProductoDetalleGuiaRemision.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_productoFK_IdProductoDetalleGuiaRemision"));

						this.jComboBoxid_productoFK_IdProductoDetalleGuiaRemision.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_productoFK_IdProductoDetalleGuiaRemision"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesGlobalesCombosForeignKeyDetalleGuiaRemision()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleGuiaRemision();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyDetalleGuiaRemision(DetalleGuiaRemision detalleguiaremision)throws Exception {	
		try {
			
			this.setActualGuiaRemisionForeignKey(detalleguiaremision.getid_guia_remision(),false,"Formulario");
			this.setActualBodegaForeignKey(detalleguiaremision.getid_bodega(),false,"Formulario");
			this.setActualProductoForeignKey(detalleguiaremision.getid_producto(),false,"Formulario");
			this.setActualUnidadForeignKey(detalleguiaremision.getid_unidad(),false,"Formulario");
			this.setActualCentroCostoForeignKey(detalleguiaremision.getid_centro_costo(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyDetalleGuiaRemision(DetalleGuiaRemision detalleguiaremision,String sTipoEvento)throws Exception {	
		try {
			
			

				if(detalleguiaremision.getProducto()!=null && !sTipoEvento.equals("id_productoDetalleGuiaRemision")) { //sTipoEvento Evita Bucle Infinito

					this.productosForeignKey=new ArrayList<Producto>();
					this.productosForeignKey.add(detalleguiaremision.getProducto());

					this.addItemDefectoCombosForeignKeyProducto();
					this.cargarCombosFrameProductosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyDetalleGuiaRemision()throws Exception {	
		try {
			
			this.setActualGuiaRemisionForeignKey(this.detalleguiaremisionConstantesFunciones.getid_guia_remision(),false,"Formulario");
			this.setActualBodegaForeignKey(this.detalleguiaremisionConstantesFunciones.getid_bodega(),false,"Formulario");
			this.setActualProductoForeignKey(this.detalleguiaremisionConstantesFunciones.getid_producto(),false,"Formulario");
			this.setActualUnidadForeignKey(this.detalleguiaremisionConstantesFunciones.getid_unidad(),false,"Formulario");
			this.setActualCentroCostoForeignKey(this.detalleguiaremisionConstantesFunciones.getid_centro_costo(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyDetalleGuiaRemision()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_ejercicioDetalleGuiaRemision.getSelectedItem();
				}

				if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_periodoDetalleGuiaRemision.getSelectedItem();
				}
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyDetalleGuiaRemision()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyDetalleGuiaRemision()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroDetalleGuiaRemision()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyDetalleGuiaRemision()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameGuiaRemisionsForeignKey("Todos");
			this.cargarCombosFrameBodegasForeignKey("Todos");
			this.cargarCombosFrameProductosForeignKey("Todos");
			this.cargarCombosFrameUnidadsForeignKey("Todos");
			this.cargarCombosFrameCentroCostosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyDetalleGuiaRemision(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameGuiaRemisionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyDetalleGuiaRemision()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_empresaDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_empresaDetalleGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_empresaDetalleGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_sucursalDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_sucursalDetalleGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_sucursalDetalleGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_ejercicioDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_ejercicioDetalleGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_ejercicioDetalleGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_periodoDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_periodoDetalleGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_periodoDetalleGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_guia_remisionDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_guia_remisionDetalleGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_guia_remisionDetalleGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_unidadDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_unidadDetalleGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_unidadDetalleGuiaRemision.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_centro_costoDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_centro_costoDetalleGuiaRemision.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_centro_costoDetalleGuiaRemision.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	











	public void recargarFormDetalleGuiaRemisionBodega(JComboBox<?> jComboBoxGenericoBodega,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormDetalleGuiaRemisionid_producto(jComboBoxGenericoBodega,sFormularioTipoBusqueda,"Bodega",false);
	}

	public void recargarFormDetalleGuiaRemisionProducto(JComboBox<?> jComboBoxGenericoProducto,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormDetalleGuiaRemisionid_unidad(jComboBoxGenericoProducto,sFormularioTipoBusqueda,"Producto",false);
	}




	
	



	public void recargarFormDetalleGuiaRemisionid_producto(JComboBox<?> jComboBoxGenericoProducto,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Bodega")){
				this.setActualParaGuardarBodegaForeignKey(this.detalleguiaremision,jComboBoxGenericoProducto);
			}

			if(this.detalleguiaremision.getid_bodega()!=null && this.detalleguiaremision.getid_bodega()!=0L) {
				sFinalQuery+="  WHERE  id_bodega="+this.detalleguiaremision.getid_bodega();
			} else {
				sFinalQuery+="  WHERE  id_bodega=-1";
			}



			//BUCLE RECURSIVO
			this.setActualProductoForeignKey(this.detalleguiaremision.getid_bodega(),true,sFormularioTipoBusqueda);

			this.cargarCombosProductosForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}



	public void recargarFormDetalleGuiaRemisionid_unidad(JComboBox<?> jComboBoxGenericoUnidad,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Producto")){
				this.setActualParaGuardarProductoForeignKey(this.detalleguiaremision,jComboBoxGenericoUnidad);
			}

			if(this.detalleguiaremision.getid_producto()!=null && this.detalleguiaremision.getid_producto()!=0L) {
				sFinalQuery+="  WHERE  id_producto="+this.detalleguiaremision.getid_producto();
			} else {
				sFinalQuery+="  WHERE  id_producto=-1";
			}



			//BUCLE RECURSIVO
			this.setActualUnidadForeignKey(this.detalleguiaremision.getid_producto(),true,sFormularioTipoBusqueda);

			this.cargarCombosUnidadsForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public DetalleGuiaRemisionBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public DetalleGuiaRemisionBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public DetalleGuiaRemisionBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.detalleguiaremisionSessionBean=new DetalleGuiaRemisionSessionBean(); 
		this.detalleguiaremisionConstantesFunciones=new DetalleGuiaRemisionConstantesFunciones(); 
		this.detalleguiaremisionBean=new DetalleGuiaRemision();//(this.detalleguiaremisionConstantesFunciones); 		
		this.detalleguiaremisionReturnGeneral=new DetalleGuiaRemisionParameterReturnGeneral(); 
		
		this.detalleguiaremisionSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.detalleguiaremisionSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public DetalleGuiaRemisionBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public DetalleGuiaRemisionBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public DetalleGuiaRemisionBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessDetalleGuiaRemision(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.detalleguiaremisionConstantesFunciones=new DetalleGuiaRemisionConstantesFunciones(); 
			this.detalleguiaremisionBean=new DetalleGuiaRemision();//this.detalleguiaremisionConstantesFunciones); 			
			this.detalleguiaremisionReturnGeneral=new DetalleGuiaRemisionParameterReturnGeneral(); 
		
			DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Detalle Guia Remision Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.detalleguiaremision=new DetalleGuiaRemision();
			this.detalleguiaremisions = new ArrayList<DetalleGuiaRemision>();
			this.detalleguiaremisionsAux = new ArrayList<DetalleGuiaRemision>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic=new DetalleGuiaRemisionLogic();
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}
			
			//this.detalleguiaremisionSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.detalleguiaremisionSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormDetalleGuiaRemision);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoDetalleGuiaRemision!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetalleGuiaRemision);	
					}
					
					if(this.jInternalFrameImportacionDetalleGuiaRemision!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetalleGuiaRemision);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByDetalleGuiaRemision!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByDetalleGuiaRemision);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormDetalleGuiaRemision);
				this.jInternalFrameDetalleFormDetalleGuiaRemision.setVisible(false);
				this.jInternalFrameDetalleFormDetalleGuiaRemision.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleGuiaRemision!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetalleGuiaRemision);
					this.jInternalFrameReporteDinamicoDetalleGuiaRemision.setVisible(false);
					this.jInternalFrameReporteDinamicoDetalleGuiaRemision.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionDetalleGuiaRemision!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionDetalleGuiaRemision);
					this.jInternalFrameImportacionDetalleGuiaRemision.setVisible(false);
					this.jInternalFrameImportacionDetalleGuiaRemision.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByDetalleGuiaRemision!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByDetalleGuiaRemision);
					this.jInternalFrameOrderByDetalleGuiaRemision.setVisible(false);
					this.jInternalFrameOrderByDetalleGuiaRemision.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idDetalleGuiaRemisionActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=DetalleGuiaRemisionConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.detalleguiaremisionReturnGeneral=new DetalleGuiaRemisionParameterReturnGeneral();
			
			this.detalleguiaremisionParameterGeneral=new DetalleGuiaRemisionParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.detalleguiaremisionLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(DetalleGuiaRemisionJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetalleGuiaRemisionConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detalleguiaremisionSessionBean.getEsGuardarRelacionado(),this.detalleguiaremisionSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetalleGuiaRemisionConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detalleguiaremisionSessionBean.getEsGuardarRelacionado(),this.detalleguiaremisionSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoDetalleGuiaRemision=false;
			this.isVisibilidadCeldaDuplicarDetalleGuiaRemision=true;
			this.isVisibilidadCeldaCopiarDetalleGuiaRemision=true;
			this.isVisibilidadCeldaVerFormDetalleGuiaRemision=true;
			this.isVisibilidadCeldaOrdenDetalleGuiaRemision=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision=false;
			this.isVisibilidadCeldaModificarDetalleGuiaRemision=false;
			this.isVisibilidadCeldaActualizarDetalleGuiaRemision=false;
			this.isVisibilidadCeldaEliminarDetalleGuiaRemision=false;
			this.isVisibilidadCeldaCancelarDetalleGuiaRemision=false;
			this.isVisibilidadCeldaGuardarDetalleGuiaRemision=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleGuiaRemision=false;
			
			
			this.isVisibilidadFK_IdBodega=true;
			this.isVisibilidadFK_IdCentroCosto=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdGuiaRemision=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdProducto=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdUnidad=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesDetalleGuiaRemision("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosDetalleGuiaRemision();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioDetalleGuiaRemision(false);
			
			this.setPermisosUsuarioDetalleGuiaRemision();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detalleguiaremisionSessionBean.getEsGuardarRelacionado() 
				|| (this.detalleguiaremisionSessionBean.getEsGuardarRelacionado() && this.detalleguiaremisionSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioDetalleGuiaRemisionClasesRelacionadas();
			}
			
			if(this.detalleguiaremisionSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioDetalleGuiaRemisionClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosDetalleGuiaRemision();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualDetalleGuiaRemision();
			}
			
			if(!this.isPermisoBusquedaDetalleGuiaRemision) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasDetalleGuiaRemision.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioDetalleGuiaRemision,this.isPermisoPaginacionMedioDetalleGuiaRemision,this.isPermisoPaginacionTodoDetalleGuiaRemision);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(DetalleGuiaRemisionConstantesFunciones.getTiposSeleccionarDetalleGuiaRemision());
				
				this.tiposColumnasSelect=DetalleGuiaRemisionConstantesFunciones.getTiposSeleccionarDetalleGuiaRemision(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioDetalleGuiaRemision();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioDetalleGuiaRemision(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioDetalleGuiaRemision(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleGuiaRemision() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.guiaremisionLogic=new GuiaRemisionLogic();
			this.bodegaLogic=new BodegaLogic();
			this.productoLogic=new ProductoLogic();
			this.unidadLogic=new UnidadLogic();
			this.centrocostoLogic=new CentroCostoLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				detalleguiaremisionImplementable= (DetalleGuiaRemisionImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetalleGuiaRemisionConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				detalleguiaremisionImplementableHome= (DetalleGuiaRemisionImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetalleGuiaRemisionConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.detalleguiaremisions= new ArrayList<DetalleGuiaRemision>();
			this.detalleguiaremisionsEliminados= new ArrayList<DetalleGuiaRemision>();
						
			this.isEsNuevoDetalleGuiaRemision=false;
			this.esParaAccionDesdeFormularioDetalleGuiaRemision=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idProductoActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.guiaremisionsForeignKey=new ArrayList<GuiaRemision>() ;
			this.bodegasForeignKey=new ArrayList<Bodega>() ;
			this.productosForeignKey=new ArrayList<Producto>() ;
			this.unidadsForeignKey=new ArrayList<Unidad>() ;
			this.centrocostosForeignKey=new ArrayList<CentroCosto>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyDetalleGuiaRemision(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroDetalleGuiaRemision();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=DetalleGuiaRemisionConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesDetalleGuiaRemision("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingDetalleGuiaRemision(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioDetalleGuiaRemision();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioDetalleGuiaRemision();
			}
			
			DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasDetalleGuiaRemision.getTabCount(); i++) {
					this.jTabbedPaneBusquedasDetalleGuiaRemision.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasDetalleGuiaRemision.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessDetalleGuiaRemision(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga DetalleGuiaRemision: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectDetalleGuiaRemision() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesDetalleGuiaRemision")) {
				iIndex=this.jInternalFrameDetalleFormDetalleGuiaRemision.jTabbedPaneRelacionesDetalleGuiaRemision.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormDetalleGuiaRemision.jTabbedPaneRelacionesDetalleGuiaRemision.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessDetalleGuiaRemision();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyDetalleGuiaRemision(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyDetalleGuiaRemision(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyDetalleGuiaRemision(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyDetalleGuiaRemisionListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyDetalleGuiaRemision();
		
		this.cargarCombosFrameForeignKeyDetalleGuiaRemision();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyDetalleGuiaRemision();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyDetalleGuiaRemision();
		}
	}
	
	

	public void cargarCombosForeignKeyGuiaRemision(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyGuiaRemisionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyGuiaRemision();
				this.cargarCombosFrameGuiaRemisionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaGuiaRemision(this.guiaremisionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodega(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyBodega("Todos");
				}

			this.recargarComboTablaBodega(this.bodegasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyProducto();
				this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaProducto(this.productosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyUnidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyUnidad();
				this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaUnidad(this.unidadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCosto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoDetalleGuiaRemisionActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.detalleguiaremisionSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormDetalleGuiaRemision==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
			
			
			if(jTableDatosDetalleGuiaRemision.getRowCount()>=1) {
				jTableDatosDetalleGuiaRemision.removeRowSelectionInterval(0, jTableDatosDetalleGuiaRemision.getRowCount()-1);						
			}
			
			this.isEsNuevoDetalleGuiaRemision=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoDetalleGuiaRemision(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesDetalleGuiaRemision(true);			
			//this.detalleguiaremision=new DetalleGuiaRemision();
			//this.detalleguiaremision.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleGuiaRemision(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleGuiaRemision() ;
			
			if(DetalleGuiaRemisionJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleGuiaRemision(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.detalleguiaremision);	
			this.actualizarInformacion("INFO_PADRE",false,this.detalleguiaremision);				
			
			DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
			
			if(this.detalleguiaremisionSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar DetalleGuiaRemision: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarDetalleGuiaRemisionActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<DetalleGuiaRemision> detalleguiaremisionsSeleccionados=new ArrayList<DetalleGuiaRemision>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosDetalleGuiaRemision.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosDetalleGuiaRemision.getSelectedRows().length;			
			}
			
			detalleguiaremisionsSeleccionados=this.getDetalleGuiaRemisionsSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoDetalleGuiaRemision--;			
				//DetalleGuiaRemision detalleguiaremisionAux= new DetalleGuiaRemision();			
				//detalleguiaremisionAux.setId(this.iIdNuevoDetalleGuiaRemision);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//DetalleGuiaRemision detalleguiaremisionOrigen=new DetalleGuiaRemision();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(DetalleGuiaRemision detalleguiaremisionOrigen : detalleguiaremisionsSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							detalleguiaremisionOrigen =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detalleguiaremisionOrigen =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaDetalleGuiaRemision();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.detalleguiaremision.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosDetalleGuiaRemision(detalleguiaremisionOrigen,this.detalleguiaremision,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detalleguiaremisionLogic.getDetalleGuiaRemisions().add(this.detalleguiaremisionAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detalleguiaremisions.add(this.detalleguiaremisionAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaDetalleGuiaRemision(false);
				
				this.jTableDatosDetalleGuiaRemision.setRowSelectionInterval(this.getIndiceNuevoDetalleGuiaRemision(), this.getIndiceNuevoDetalleGuiaRemision());
				
				int iLastRow =  this.jTableDatosDetalleGuiaRemision.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetalleGuiaRemision.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetalleGuiaRemision.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleGuiaRemision(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<DetalleGuiaRemision> detalleguiaremisionsSeleccionados=new ArrayList<DetalleGuiaRemision>();									
		
			DetalleGuiaRemision detalleguiaremisionOrigen=new DetalleGuiaRemision();
			DetalleGuiaRemision detalleguiaremisionDestino=new DetalleGuiaRemision();
				
			detalleguiaremisionsSeleccionados=this.getDetalleGuiaRemisionsSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosDetalleGuiaRemision.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || detalleguiaremisionsSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosDetalleGuiaRemision.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionOrigen =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detalleguiaremisionOrigen =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detalleguiaremisionDestino =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detalleguiaremisionDestino =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				detalleguiaremisionOrigen =detalleguiaremisionsSeleccionados.get(0);
				detalleguiaremisionDestino =detalleguiaremisionsSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosDetalleGuiaRemision(detalleguiaremisionOrigen,detalleguiaremisionDestino,true,false);
				
				detalleguiaremisionDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detalleguiaremisionDestino,detalleguiaremisionLogic.getDetalleGuiaRemisions());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detalleguiaremisionDestino,detalleguiaremisions);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaDetalleGuiaRemision(false);
				
				//this.jTableDatosDetalleGuiaRemision.setRowSelectionInterval(this.getIndiceNuevoDetalleGuiaRemision(), this.getIndiceNuevoDetalleGuiaRemision());
				
				int iLastRow =  this.jTableDatosDetalleGuiaRemision.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetalleGuiaRemision.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetalleGuiaRemision.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleGuiaRemision(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetalleGuiaRemision==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormDetalleGuiaRemision.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesDetalleGuiaRemision.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasDetalleGuiaRemision.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesDetalleGuiaRemision.setVisible(!isVisible);
			this.jPanelPaginacionDetalleGuiaRemision.setVisible(!isVisible);
			this.jPanelAccionesDetalleGuiaRemision.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameDetalleGuiaRemision();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoDetalleGuiaRemision();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionDetalleGuiaRemision();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByDetalleGuiaRemision();
			
			this.abrirFrameOrderByDetalleGuiaRemision();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByDetalleGuiaRemision();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleDetalleGuiaRemision(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetalleGuiaRemision);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormDetalleGuiaRemision.isMaximum()) {
					this.jInternalFrameDetalleFormDetalleGuiaRemision.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormDetalleGuiaRemision.setSize(this.jInternalFrameDetalleFormDetalleGuiaRemision.iWidthFormulario,this.jInternalFrameDetalleFormDetalleGuiaRemision.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormDetalleGuiaRemision.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormDetalleGuiaRemision.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormDetalleGuiaRemision.isMaximum()) {
						this.jInternalFrameDetalleFormDetalleGuiaRemision.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormDetalleGuiaRemision.jContentPaneDetalleDetalleGuiaRemision.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormDetalleGuiaRemision.jTabbedPaneRelacionesDetalleGuiaRemision.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormDetalleGuiaRemision.jContentPaneDetalleDetalleGuiaRemision.getWidth(),DetalleGuiaRemisionConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetalleGuiaRemision.jTabbedPaneRelacionesDetalleGuiaRemision.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormDetalleGuiaRemision.jContentPaneDetalleDetalleGuiaRemision.getWidth(),DetalleGuiaRemisionConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetalleGuiaRemision.jTabbedPaneRelacionesDetalleGuiaRemision.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormDetalleGuiaRemision.jContentPaneDetalleDetalleGuiaRemision.getWidth(),DetalleGuiaRemisionConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormDetalleGuiaRemision.setVisible(true);
	        this.jInternalFrameDetalleFormDetalleGuiaRemision.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByDetalleGuiaRemision() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByDetalleGuiaRemision==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByDetalleGuiaRemision=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetalleGuiaRemision,false,this);
				} else {
					this.jInternalFrameOrderByDetalleGuiaRemision=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetalleGuiaRemision,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByDetalleGuiaRemision);
				this.jInternalFrameOrderByDetalleGuiaRemision.setVisible(false);
				this.jInternalFrameOrderByDetalleGuiaRemision.setSelected(false);
				
				this.jInternalFrameOrderByDetalleGuiaRemision.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetalleGuiaRemision"));
				
				this.inicializarActualizarBindingTablaOrderByDetalleGuiaRemision();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionDetalleGuiaRemision() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionDetalleGuiaRemision==null) {
				
				this.jInternalFrameImportacionDetalleGuiaRemision=new ImportacionJInternalFrame(DetalleGuiaRemisionConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetalleGuiaRemision);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionDetalleGuiaRemision);
				this.jInternalFrameImportacionDetalleGuiaRemision.setVisible(false);
				this.jInternalFrameImportacionDetalleGuiaRemision.setSelected(false);


				this.jInternalFrameImportacionDetalleGuiaRemision.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetalleGuiaRemision"));
				this.jInternalFrameImportacionDetalleGuiaRemision.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetalleGuiaRemision"));
				this.jInternalFrameImportacionDetalleGuiaRemision.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetalleGuiaRemision"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoDetalleGuiaRemision() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoDetalleGuiaRemision==null) {
				this.jInternalFrameReporteDinamicoDetalleGuiaRemision=new ReporteDinamicoJInternalFrame(DetalleGuiaRemisionConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetalleGuiaRemision);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetalleGuiaRemision);
				this.jInternalFrameReporteDinamicoDetalleGuiaRemision.setVisible(false);
				this.jInternalFrameReporteDinamicoDetalleGuiaRemision.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleGuiaRemision"));
				this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleGuiaRemision"));
				this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleGuiaRemision"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleGuiaRemision();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		
					
	public void cerrarFrameDetalleDetalleGuiaRemision() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetalleGuiaRemision);
			
	       	this.jInternalFrameDetalleFormDetalleGuiaRemision.setVisible(false);
	        this.jInternalFrameDetalleFormDetalleGuiaRemision.setSelected(false);
			
			//this.jInternalFrameDetalleFormDetalleGuiaRemision.dispose();
			//this.jInternalFrameDetalleFormDetalleGuiaRemision=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoDetalleGuiaRemision() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoDetalleGuiaRemision.setVisible(true);
	        this.jInternalFrameReporteDinamicoDetalleGuiaRemision.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionDetalleGuiaRemision() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionDetalleGuiaRemision.setVisible(true);
	        this.jInternalFrameImportacionDetalleGuiaRemision.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByDetalleGuiaRemision() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByDetalleGuiaRemision.setVisible(true);
	        this.jInternalFrameOrderByDetalleGuiaRemision.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByDetalleGuiaRemision() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByDetalleGuiaRemision.setVisible(false);
	        this.jInternalFrameOrderByDetalleGuiaRemision.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoDetalleGuiaRemision() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoDetalleGuiaRemision.setVisible(false);
	        this.jInternalFrameReporteDinamicoDetalleGuiaRemision.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionDetalleGuiaRemision() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionDetalleGuiaRemision.setVisible(false);
	        this.jInternalFrameImportacionDetalleGuiaRemision.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCentroCosto(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCentroCosto);
						CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.sTipoBusqueda="CentroCosto";
						}

						centrocostoBeanSwingJInternalFrame.getTodosCentroCostoArbol();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setCentroCostos(centrocostoBeanSwingJInternalFrame.centrocostosArbol);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.CargarTreeCentroCosto();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setVisible(true);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.jInternalFrameParent=this;
						TitledBorder titledBorderDetalleGuiaRemision=(TitledBorder)this.jScrollPanelDatosDetalleGuiaRemision.getBorder();
						TitledBorder titledBorderCentroCosto=(TitledBorder)centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

						titledBorderCentroCosto.setTitle(titledBorderDetalleGuiaRemision.getTitle() + " -> Centro Costo");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,centrocostoBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(centrocostoBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCentroCosto(CentroCostoBeanSwingJInternalFrame jInternalFrameTreeCentroCosto) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCentroCosto);
						jInternalFrameTreeCentroCosto.setVisible(false);
						jInternalFrameTreeCentroCosto.setSelected(false);
						//jInternalFrameTreeCentroCosto.dispose();
						//jInternalFrameTreeCentroCosto=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarDetalleGuiaRemision(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarDetalleGuiaRemision(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesDetalleGuiaRemision(true);
			//this.isEsNuevoDetalleGuiaRemision=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesDetalleGuiaRemision("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleGuiaRemision(false) ;
			
			if(detalleguiaremisionSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(DetalleGuiaRemisionJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleGuiaRemision(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleGuiaRemision(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaDetalleGuiaRemisionActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarDetalleGuiaRemision(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetalleGuiaRemision==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesDetalleGuiaRemision(true);
			//this.isEsNuevoDetalleGuiaRemision=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.detalleguiaremision.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesDetalleGuiaRemision("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesDetalleGuiaRemision(false) ;
			
			if(DetalleGuiaRemisionJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetalleGuiaRemision(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleGuiaRemision(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Producto")) {
				if(!this.detalleguiaremisionConstantesFunciones.cargarid_productoDetalleGuiaRemision) {
					this.cargarCombosProductosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
					this.cargarCombosFrameProductosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_producto (id);

				this.recargarComboTablaProducto(this.productosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
					
	
	public void recargarComboTablaGuiaRemision(List<GuiaRemision> guiaremisionsForeignKey)throws Exception{
		TableColumn tableColumnGuiaRemision=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_IDGUIAREMISION));
		TableCellEditor tableCellEditorGuiaRemision =tableColumnGuiaRemision.getCellEditor();

		GuiaRemisionTableCell guiaremisionTableCellFk=(GuiaRemisionTableCell)tableCellEditorGuiaRemision;

		if(guiaremisionTableCellFk!=null) {
			guiaremisionTableCellFk.setguiaremisionsForeignKey(guiaremisionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleGuiaRemision.getSelectedRow();

		//if(intSelectedRow<=0) {
			//guiaremisionTableCellFk.setRowActual(intSelectedRow);
			//guiaremisionTableCellFk.setguiaremisionsForeignKeyActual(guiaremisionsForeignKey);
		//}


		if(guiaremisionTableCellFk!=null) {
			guiaremisionTableCellFk.RecargarGuiaRemisionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaBodega(List<Bodega> bodegasForeignKey)throws Exception{
		TableColumn tableColumnBodega=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_IDBODEGA));
		TableCellEditor tableCellEditorBodega =tableColumnBodega.getCellEditor();

		BodegaTableCell bodegaTableCellFk=(BodegaTableCell)tableCellEditorBodega;

		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.setbodegasForeignKey(bodegasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleGuiaRemision.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bodegaTableCellFk.setRowActual(intSelectedRow);
			//bodegaTableCellFk.setbodegasForeignKeyActual(bodegasForeignKey);
		//}


		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.RecargarBodegasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaProducto(List<Producto> productosForeignKey)throws Exception{
		TableColumn tableColumnProducto=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_IDPRODUCTO));
		TableCellEditor tableCellEditorProducto =tableColumnProducto.getCellEditor();

		ProductoTableCell productoTableCellFk=(ProductoTableCell)tableCellEditorProducto;

		if(productoTableCellFk!=null) {
			productoTableCellFk.setproductosForeignKey(productosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleGuiaRemision.getSelectedRow();

		//if(intSelectedRow<=0) {
			//productoTableCellFk.setRowActual(intSelectedRow);
			//productoTableCellFk.setproductosForeignKeyActual(productosForeignKey);
		//}


		if(productoTableCellFk!=null) {
			productoTableCellFk.RecargarProductosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaUnidad(List<Unidad> unidadsForeignKey)throws Exception{
		TableColumn tableColumnUnidad=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_IDUNIDAD));
		TableCellEditor tableCellEditorUnidad =tableColumnUnidad.getCellEditor();

		UnidadTableCell unidadTableCellFk=(UnidadTableCell)tableCellEditorUnidad;

		if(unidadTableCellFk!=null) {
			unidadTableCellFk.setunidadsForeignKey(unidadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleGuiaRemision.getSelectedRow();

		//if(intSelectedRow<=0) {
			//unidadTableCellFk.setRowActual(intSelectedRow);
			//unidadTableCellFk.setunidadsForeignKeyActual(unidadsForeignKey);
		//}


		if(unidadTableCellFk!=null) {
			unidadTableCellFk.RecargarUnidadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCentroCosto(List<CentroCosto> centrocostosForeignKey)throws Exception{
		TableColumn tableColumnCentroCosto=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_IDCENTROCOSTO));
		TableCellEditor tableCellEditorCentroCosto =tableColumnCentroCosto.getCellEditor();

		CentroCostoTableCell centrocostoTableCellFk=(CentroCostoTableCell)tableCellEditorCentroCosto;

		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.setcentrocostosForeignKey(centrocostosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetalleGuiaRemision.getSelectedRow();

		//if(intSelectedRow<=0) {
			//centrocostoTableCellFk.setRowActual(intSelectedRow);
			//centrocostoTableCellFk.setcentrocostosForeignKeyActual(centrocostosForeignKey);
		//}


		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.RecargarCentroCostosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_producto (Long id) throws Exception {
		this.setActualProductoForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesDetalleGuiaRemision(false);
			
			//if(!this.isEsNuevoDetalleGuiaRemision) {								
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				
			}
			
			if(this.permiteMantenimiento(this.detalleguiaremision)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoDetalleGuiaRemision=true;
					this.inicializarActualizarBindingTablaDetalleGuiaRemision(false);
					this.isEsNuevoDetalleGuiaRemision=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoDetalleGuiaRemision=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoDetalleGuiaRemision=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetalleGuiaRemision(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleGuiaRemision(false);
				
				this.habilitarDeshabilitarControlesDetalleGuiaRemision(false);
			
												
				
				if(DetalleGuiaRemisionJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleDetalleGuiaRemision();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoDetalleGuiaRemisionActionPerformed(evt,detalleguiaremisionSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualDetalleGuiaRemision(this.detalleguiaremision,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosDetalleGuiaRemision.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,detalleguiaremisionSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.detalleguiaremision.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(DetalleGuiaRemision.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleGuiaRemision.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				this.detalleguiaremision.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				this.detalleguiaremision.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.detalleguiaremision)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((DetalleGuiaRemisionModel) this.jTableDatosDetalleGuiaRemision.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoDetalleGuiaRemision=true;
				this.inicializarActualizarBindingTablaDetalleGuiaRemision(false);
				this.isEsNuevoDetalleGuiaRemision=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetalleGuiaRemision(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleGuiaRemision(false);
				
				this.habilitarDeshabilitarControlesDetalleGuiaRemision(false);
				
				
				
				if(DetalleGuiaRemisionJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleDetalleGuiaRemision();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosDetalleGuiaRemision.getRowCount()>=1) {
				jTableDatosDetalleGuiaRemision.removeRowSelectionInterval(0, jTableDatosDetalleGuiaRemision.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesDetalleGuiaRemision(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaDetalleGuiaRemision(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetalleGuiaRemision(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetalleGuiaRemision(false) ;
			
			this.isEsNuevoDetalleGuiaRemision=false;
			
			if(DetalleGuiaRemisionJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleDetalleGuiaRemision();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingDetalleGuiaRemision(false);
				
				//SI ES MANUAL
				if(DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualDetalleGuiaRemision();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoDetalleGuiaRemision--;			
			//DetalleGuiaRemision detalleguiaremisionAux= new DetalleGuiaRemision();			
			//detalleguiaremisionAux.setId(this.iIdNuevoDetalleGuiaRemision);
			
			if(this.jInternalFrameDetalleFormDetalleGuiaRemision==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaDetalleGuiaRemision();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
			
			this.detalleguiaremision.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.detalleguiaremisionLogic.getDetalleGuiaRemisions().add(this.detalleguiaremisionAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.detalleguiaremisions.add(this.detalleguiaremisionAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaDetalleGuiaRemision(false);
			
			this.jTableDatosDetalleGuiaRemision.setRowSelectionInterval(this.getIndiceNuevoDetalleGuiaRemision(), this.getIndiceNuevoDetalleGuiaRemision());
			
			int iLastRow =  this.jTableDatosDetalleGuiaRemision.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosDetalleGuiaRemision.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosDetalleGuiaRemision.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaDetalleGuiaRemision(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleGuiaRemision(false);
			
			//SI ES MANUAL
			if(DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleGuiaRemision();
			}
			
			//this.abrirFrameTreeDetalleGuiaRemision();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Detalle Guia RemisionES ?", "MANTENIMIENTO DE Detalle Guia Remision", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionDetalleGuiaRemision.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralDetalleGuiaRemision();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.detalleguiaremisionReturnGeneral=detalleguiaremisionLogic.procesarImportacionDetalleGuiaRemisionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.detalleguiaremisionParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarDetalleGuiaRemisionReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionDetalleGuiaRemision.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionDetalleGuiaRemision.setFileImportacion(this.jInternalFrameImportacionDetalleGuiaRemision.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionDetalleGuiaRemision.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionDetalleGuiaRemision.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionDetalleGuiaRemision.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionDetalleGuiaRemision.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<DetalleGuiaRemision> detalleguiaremisionsSeleccionados=new ArrayList<DetalleGuiaRemision>();		

		detalleguiaremisionsSeleccionados=this.getDetalleGuiaRemisionsSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("DetalleGuiaRemisionBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"DetalleGuiaRemisionBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteDetalleGuiaRemisions("Todos",detalleguiaremisionsSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Guia Remision",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDGUIAREMISION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_GuiaRemision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_GuiaRemision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_GuiaRemision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_GuiaRemision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDBODEGA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Bodega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Bodega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Bodega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Bodega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDPRODUCTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Producto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Producto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Producto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Producto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDUNIDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Unidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Unidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Unidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Unidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDCENTROCOSTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CentroCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CentroCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CentroCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CentroCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADENVASES:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadEnvases_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadEnvases_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadEnvases_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadEnvases_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADAUXILIAR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidadAuxiliar_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidadAuxiliar_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidadAuxiliar_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidadAuxiliar_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDAD:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_MONTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_PRECIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ecio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ecio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ecio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ecio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEDESCUENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcentajeDescuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcentajeDescuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcentajeDescuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcentajeDescuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO2:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuento2_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuento2_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuento2_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuento2_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO3:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuento3_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuento3_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuento3_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuento3_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcentajeIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcentajeIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcentajeIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcentajeIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_a_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_a_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_a_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_a_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALDESCUENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talDescuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talDescuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talDescuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talDescuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALIMPUESTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talImpuesto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talImpuesto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talImpuesto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talImpuesto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_SUBTOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_bTotal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_bTotal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_bTotal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_bTotal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_TOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_LOTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_te_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_te_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_te_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_te_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_LOTECLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_teCliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_teCliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_teCliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_teCliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_ORDENCOMPRA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_denCompra_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_denCompra_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_denCompra_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_denCompra_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_AREA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ea_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ea_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ea_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ea_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_MEDIDAS:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_didas_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_didas_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_didas_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_didas_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_abado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_abado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_abado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_abado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO2:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_abado2_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_abado2_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_abado2_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_abado2_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDGUIAREMISION:
					sNombreCampoCategoria="id_guia_remision";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoria="id_bodega";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDPRODUCTO:
					sNombreCampoCategoria="id_producto";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDUNIDAD:
					sNombreCampoCategoria="id_unidad";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoria="id_centro_costo";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADENVASES:
					sNombreCampoCategoria="cantidad_envases";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADAUXILIAR:
					sNombreCampoCategoria="cantidad_auxiliar";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDAD:
					sNombreCampoCategoria="cantidad";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_MONTO:
					sNombreCampoCategoria="monto";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_PRECIO:
					sNombreCampoCategoria="precio";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEDESCUENTO:
					sNombreCampoCategoria="porcentaje_descuento";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO:
					sNombreCampoCategoria="descuento";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO2:
					sNombreCampoCategoria="descuento2";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO3:
					sNombreCampoCategoria="descuento3";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEIVA:
					sNombreCampoCategoria="porcentaje_iva";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoria="iva";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALDESCUENTO:
					sNombreCampoCategoria="total_descuento";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALIMPUESTO:
					sNombreCampoCategoria="total_impuesto";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_SUBTOTAL:
					sNombreCampoCategoria="sub_total";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoria="total";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_LOTE:
					sNombreCampoCategoria="lote";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_LOTECLIENTE:
					sNombreCampoCategoria="lote_cliente";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_ORDENCOMPRA:
					sNombreCampoCategoria="orden_compra";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_AREA:
					sNombreCampoCategoria="area";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_MEDIDAS:
					sNombreCampoCategoria="medidas";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO:
					sNombreCampoCategoria="acabado";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO2:
					sNombreCampoCategoria="acabado2";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDGUIAREMISION:
					sNombreCampoCategoriaValor="id_guia_remision";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoriaValor="id_bodega";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDPRODUCTO:
					sNombreCampoCategoriaValor="id_producto";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDUNIDAD:
					sNombreCampoCategoriaValor="id_unidad";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoriaValor="id_centro_costo";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADENVASES:
					sNombreCampoCategoriaValor="cantidad_envases";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADAUXILIAR:
					sNombreCampoCategoriaValor="cantidad_auxiliar";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDAD:
					sNombreCampoCategoriaValor="cantidad";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_MONTO:
					sNombreCampoCategoriaValor="monto";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_PRECIO:
					sNombreCampoCategoriaValor="precio";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEDESCUENTO:
					sNombreCampoCategoriaValor="porcentaje_descuento";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO:
					sNombreCampoCategoriaValor="descuento";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO2:
					sNombreCampoCategoriaValor="descuento2";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO3:
					sNombreCampoCategoriaValor="descuento3";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEIVA:
					sNombreCampoCategoriaValor="porcentaje_iva";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoriaValor="iva";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALDESCUENTO:
					sNombreCampoCategoriaValor="total_descuento";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALIMPUESTO:
					sNombreCampoCategoriaValor="total_impuesto";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_SUBTOTAL:
					sNombreCampoCategoriaValor="sub_total";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoriaValor="total";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_LOTE:
					sNombreCampoCategoriaValor="lote";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_LOTECLIENTE:
					sNombreCampoCategoriaValor="lote_cliente";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_ORDENCOMPRA:
					sNombreCampoCategoriaValor="orden_compra";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_AREA:
					sNombreCampoCategoriaValor="area";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_MEDIDAS:
					sNombreCampoCategoriaValor="medidas";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO:
					sNombreCampoCategoriaValor="acabado";
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO2:
					sNombreCampoCategoriaValor="acabado2";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDGUIAREMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Guia Remision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_guia_remision");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDBODEGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bodega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_bodega");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDPRODUCTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Producto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_producto");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDUNIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Unidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_unidad");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDCENTROCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Centro Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_centro_costo");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADENVASES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad Envases",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_envases");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADAUXILIAR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad Auxiliar",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad_auxiliar");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_MONTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"monto");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_PRECIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Precio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"precio");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEDESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"% Descuento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcentaje_descuento");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descuento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO2:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descuento 2",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento2");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO3:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descuento 3",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento3");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"% Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcentaje_iva");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"iva");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALDESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Descuento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_descuento");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALIMPUESTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Impuesto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_impuesto");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_SUBTOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sub Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"sub_total");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_TOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_LOTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Lote",sNombreCampoCategoria,sNombreCampoCategoriaValor,"lote");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_LOTECLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Lote Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"lote_cliente");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_ORDENCOMPRA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Orden Compra",sNombreCampoCategoria,sNombreCampoCategoriaValor,"orden_compra");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_AREA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Area",sNombreCampoCategoria,sNombreCampoCategoriaValor,"area");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_MEDIDAS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Medidas",sNombreCampoCategoria,sNombreCampoCategoriaValor,"medidas");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Acabado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"acabado");
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO2:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Acabado 2",sNombreCampoCategoria,sNombreCampoCategoriaValor,"acabado2");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<DetalleGuiaRemision> detalleguiaremisionsSeleccionados=new ArrayList<DetalleGuiaRemision>();		
		
		detalleguiaremisionsSeleccionados=this.getDetalleGuiaRemisionsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleguiaremision";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("DetalleGuiaRemisions");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDGUIAREMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDGUIAREMISION);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getguiaremision_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDBODEGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDBODEGA);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getbodega_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDPRODUCTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDPRODUCTO);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getproducto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDUNIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDUNIDAD);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getunidad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IDCENTROCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDCENTROCOSTO);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getcentrocosto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADENVASES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADENVASES);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getcantidad_envases());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADAUXILIAR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADAUXILIAR);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getcantidad_auxiliar());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDAD);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getcantidad());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_MONTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_MONTO);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getmonto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_PRECIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_PRECIO);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getprecio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEDESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEDESCUENTO);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getporcentaje_descuento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getdescuento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO2:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO2);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getdescuento2());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO3:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO3);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getdescuento3());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEIVA);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getporcentaje_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_IVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IVA);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getiva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALDESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALDESCUENTO);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.gettotal_descuento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALIMPUESTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALIMPUESTO);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.gettotal_impuesto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_SUBTOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_SUBTOTAL);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getsub_total());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_TOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_TOTAL);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.gettotal());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_LOTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_LOTE);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getlote());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_LOTECLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_LOTECLIENTE);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getlote_cliente());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_ORDENCOMPRA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_ORDENCOMPRA);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getorden_compra());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_AREA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_AREA);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getarea());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_MEDIDAS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_MEDIDAS);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getmedidas());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getacabado());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO2:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO2);
					iRow++;

					for(DetalleGuiaRemision detalleguiaremision:detalleguiaremisionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detalleguiaremision.getacabado2());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelDetalleGuiaRemision(row);				
			//	iRow++;
			//}				
			
			//for(DetalleGuiaRemision detalleguiaremisionAux:detalleguiaremisionsSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelDetalleGuiaRemision(detalleguiaremisionAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Guia Remision",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleGuiaRemision(false);
			
			//SI ES MANUAL
			if(DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetalleGuiaRemision();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleGuiaRemision(false);
			
			//SI ES MANUAL
			if(DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetalleGuiaRemision();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetalleGuiaRemision(false);
			
			//SI ES MANUAL
			if(DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetalleGuiaRemision();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaDetalleGuiaRemision() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosDetalleGuiaRemision.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosDetalleGuiaRemision.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosDetalleGuiaRemision.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosDetalleGuiaRemision.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosDetalleGuiaRemision.setMinimumSize(dimensionMinimum);
		this.jTableDatosDetalleGuiaRemision.setMaximumSize(dimensionMaximum);
		this.jTableDatosDetalleGuiaRemision.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingDetalleGuiaRemision(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingDetalleGuiaRemision(esInicializar,true);
	}
	
	public void inicializarActualizarBindingDetalleGuiaRemision(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaDetalleGuiaRemision(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesDetalleGuiaRemision(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasDetalleGuiaRemision(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleGuiaRemision(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesDetalleGuiaRemision(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualDetalleGuiaRemision() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaDetalleGuiaRemision();
		
		this.inicializarActualizarBindingBotonesManualDetalleGuiaRemision(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualDetalleGuiaRemision();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetalleGuiaRemision() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleGuiaRemision(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleGuiaRemision(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosDetalleGuiaRemision.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosDetalleGuiaRemision.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteDetalleGuiaRemision.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormDetalleGuiaRemision.jCheckBoxPostAccionNuevoDetalleGuiaRemision.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormDetalleGuiaRemision.jCheckBoxPostAccionSinCerrarDetalleGuiaRemision.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormDetalleGuiaRemision.jCheckBoxPostAccionSinMensajeDetalleGuiaRemision.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosDetalleGuiaRemision.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosDetalleGuiaRemision.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteDetalleGuiaRemision.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
				this.jInternalFrameDetalleFormDetalleGuiaRemision.jCheckBoxPostAccionNuevoDetalleGuiaRemision.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormDetalleGuiaRemision.jCheckBoxPostAccionSinCerrarDetalleGuiaRemision.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormDetalleGuiaRemision.jCheckBoxPostAccionSinMensajeDetalleGuiaRemision.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionDetalleGuiaRemision.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionDetalleGuiaRemision.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxTiposAccionesFormularioDetalleGuiaRemision.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesDetalleGuiaRemision.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoDetalleGuiaRemision!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesDetalleGuiaRemision.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesDetalleGuiaRemision.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarDetalleGuiaRemision.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesDetalleGuiaRemision.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoDetalleGuiaRemision!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesDetalleGuiaRemision.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralDetalleGuiaRemision.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesDetalleGuiaRemision(Boolean esInicializar) throws Exception {
		try	{	
			if(DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualDetalleGuiaRemision(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesDetalleGuiaRemision() throws Exception {
		try	{
			if(DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualDetalleGuiaRemision();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetalleGuiaRemision() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxTiposAccionesFormularioDetalleGuiaRemision.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxTiposAccionesFormularioDetalleGuiaRemision.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualDetalleGuiaRemision() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesDetalleGuiaRemision.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesDetalleGuiaRemision.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesDetalleGuiaRemision.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesDetalleGuiaRemision.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesDetalleGuiaRemision.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesDetalleGuiaRemision.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionDetalleGuiaRemision.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionDetalleGuiaRemision.addItem(reporte);
			}
			
			
			if(!this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionDetalleGuiaRemision.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionDetalleGuiaRemision.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesDetalleGuiaRemision.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesDetalleGuiaRemision.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesDetalleGuiaRemision.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesDetalleGuiaRemision.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxTiposAccionesFormularioDetalleGuiaRemision.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxTiposAccionesFormularioDetalleGuiaRemision.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarDetalleGuiaRemision.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarDetalleGuiaRemision.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarDetalleGuiaRemision.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleGuiaRemision();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetalleGuiaRemision() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetalleGuiaRemision!=null) {
				this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetalleGuiaRemision!=null) {
				this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoDetalleGuiaRemision!=null) {
				
				if(this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=DetalleGuiaRemisionConstantesFunciones.getTiposSeleccionarDetalleGuiaRemision(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=DetalleGuiaRemisionConstantesFunciones.getTiposSeleccionarDetalleGuiaRemision(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=DetalleGuiaRemisionConstantesFunciones.getTiposSeleccionarDetalleGuiaRemision(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualDetalleGuiaRemision()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision.getSelectedItem()!=null){this.id_bodegaFK_IdBodega=((Bodega)this.jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision.getSelectedItem()).getId();}
		if(this.jComboBoxid_centro_costoFK_IdCentroCostoDetalleGuiaRemision.getSelectedItem()!=null){this.id_centro_costoFK_IdCentroCosto=((CentroCosto)this.jComboBoxid_centro_costoFK_IdCentroCostoDetalleGuiaRemision.getSelectedItem()).getId();}
		if(this.jComboBoxid_guia_remisionFK_IdGuiaRemisionDetalleGuiaRemision.getSelectedItem()!=null){this.id_guia_remisionFK_IdGuiaRemision=((GuiaRemision)this.jComboBoxid_guia_remisionFK_IdGuiaRemisionDetalleGuiaRemision.getSelectedItem()).getId();}
		if(this.jComboBoxid_productoFK_IdProductoDetalleGuiaRemision.getSelectedItem()!=null){this.id_productoFK_IdProducto=((Producto)this.jComboBoxid_productoFK_IdProductoDetalleGuiaRemision.getSelectedItem()).getId();}
		if(this.jComboBoxid_unidadFK_IdUnidadDetalleGuiaRemision.getSelectedItem()!=null){this.id_unidadFK_IdUnidad=((Unidad)this.jComboBoxid_unidadFK_IdUnidadDetalleGuiaRemision.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasDetalleGuiaRemision(Boolean esInicializar) throws Exception {				
		if(DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualDetalleGuiaRemision();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaDetalleGuiaRemision() throws Exception {
		this.inicializarActualizarBindingTablaDetalleGuiaRemision(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByDetalleGuiaRemision() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByDetalleGuiaRemision.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByDetalleGuiaRemision.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleGuiaRemision.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByDetalleGuiaRemision.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleGuiaRemision.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosDetalleGuiaRemisionOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemisionOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByDetalleGuiaRemision.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetalleGuiaRemision.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByDetalleGuiaRemision.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaDetalleGuiaRemision(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=detalleguiaremisionLogic.getDetalleGuiaRemisions().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=detalleguiaremisions.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosDetalleGuiaRemision.setModel(new DetalleGuiaRemisionModel(this.detalleguiaremisionLogic.getDetalleGuiaRemisions(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosDetalleGuiaRemision.setModel(new DetalleGuiaRemisionModel(this.detalleguiaremisions,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByDetalleGuiaRemision!=null && this.jInternalFrameOrderByDetalleGuiaRemision.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByDetalleGuiaRemision();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+DetalleGuiaRemisionConstantesFunciones.SCLASSWEBTITULO,detalleguiaremisionConstantesFunciones.resaltarSeleccionarDetalleGuiaRemision,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+DetalleGuiaRemisionConstantesFunciones.SCLASSWEBTITULO,detalleguiaremisionConstantesFunciones.resaltarSeleccionarDetalleGuiaRemision,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_ID));

		if(this.detalleguiaremisionConstantesFunciones.mostraridDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleguiaremisionConstantesFunciones.resaltaridDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activaridDetalleGuiaRemision,iSizeTabla,this,true,"idDetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltaridDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activaridDetalleGuiaRemision,this,true,"idDetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_IDEMPRESA));

		if(this.detalleguiaremisionConstantesFunciones.mostrarid_empresaDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.detalleguiaremisionConstantesFunciones.resaltarid_empresaDetalleGuiaRemision,this,this.detalleguiaremisionConstantesFunciones.activarid_empresaDetalleGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.detalleguiaremisionConstantesFunciones.resaltarid_empresaDetalleGuiaRemision,this,this.detalleguiaremisionConstantesFunciones.activarid_empresaDetalleGuiaRemision,false,"id_empresaDetalleGuiaRemision","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.detalleguiaremisionConstantesFunciones.mostrarid_sucursalDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.detalleguiaremisionConstantesFunciones.resaltarid_sucursalDetalleGuiaRemision,this,this.detalleguiaremisionConstantesFunciones.activarid_sucursalDetalleGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.detalleguiaremisionConstantesFunciones.resaltarid_sucursalDetalleGuiaRemision,this,this.detalleguiaremisionConstantesFunciones.activarid_sucursalDetalleGuiaRemision,false,"id_sucursalDetalleGuiaRemision","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.detalleguiaremisionConstantesFunciones.mostrarid_ejercicioDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.detalleguiaremisionConstantesFunciones.resaltarid_ejercicioDetalleGuiaRemision,this,this.detalleguiaremisionConstantesFunciones.activarid_ejercicioDetalleGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.detalleguiaremisionConstantesFunciones.resaltarid_ejercicioDetalleGuiaRemision,this,this.detalleguiaremisionConstantesFunciones.activarid_ejercicioDetalleGuiaRemision,false,"id_ejercicioDetalleGuiaRemision","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_IDPERIODO));

		if(this.detalleguiaremisionConstantesFunciones.mostrarid_periodoDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.detalleguiaremisionConstantesFunciones.resaltarid_periodoDetalleGuiaRemision,this,this.detalleguiaremisionConstantesFunciones.activarid_periodoDetalleGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.detalleguiaremisionConstantesFunciones.resaltarid_periodoDetalleGuiaRemision,this,this.detalleguiaremisionConstantesFunciones.activarid_periodoDetalleGuiaRemision,false,"id_periodoDetalleGuiaRemision","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_IDGUIAREMISION));

		if(this.detalleguiaremisionConstantesFunciones.mostrarid_guia_remisionDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_IDGUIAREMISION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new GuiaRemisionTableCell(this.guiaremisionsForeignKey,this.detalleguiaremisionConstantesFunciones.resaltarid_guia_remisionDetalleGuiaRemision,this,this.detalleguiaremisionConstantesFunciones.activarid_guia_remisionDetalleGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new GuiaRemisionTableCell(this.guiaremisionsForeignKey,this.detalleguiaremisionConstantesFunciones.resaltarid_guia_remisionDetalleGuiaRemision,this,this.detalleguiaremisionConstantesFunciones.activarid_guia_remisionDetalleGuiaRemision,true,"id_guia_remisionDetalleGuiaRemision","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_IDBODEGA));

		if(this.detalleguiaremisionConstantesFunciones.mostrarid_bodegaDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_IDBODEGA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BodegaTableCell(this.bodegasForeignKey,this.detalleguiaremisionConstantesFunciones.resaltarid_bodegaDetalleGuiaRemision,this,this.detalleguiaremisionConstantesFunciones.activarid_bodegaDetalleGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new BodegaTableCell(this.bodegasForeignKey,this.detalleguiaremisionConstantesFunciones.resaltarid_bodegaDetalleGuiaRemision,this,this.detalleguiaremisionConstantesFunciones.activarid_bodegaDetalleGuiaRemision,true,"id_bodegaDetalleGuiaRemision","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_IDPRODUCTO));

		if(this.detalleguiaremisionConstantesFunciones.mostrarid_productoDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_IDPRODUCTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ProductoTableCell(this.productosForeignKey,this.detalleguiaremisionConstantesFunciones.resaltarid_productoDetalleGuiaRemision,this,this.detalleguiaremisionConstantesFunciones.activarid_productoDetalleGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new ProductoTableCell(this.productosForeignKey,this.detalleguiaremisionConstantesFunciones.resaltarid_productoDetalleGuiaRemision,this,this.detalleguiaremisionConstantesFunciones.activarid_productoDetalleGuiaRemision,true,"id_productoDetalleGuiaRemision","CON_BUSQUEDA-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_IDUNIDAD));

		if(this.detalleguiaremisionConstantesFunciones.mostrarid_unidadDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_IDUNIDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new UnidadTableCell(this.unidadsForeignKey,this.detalleguiaremisionConstantesFunciones.resaltarid_unidadDetalleGuiaRemision,this,this.detalleguiaremisionConstantesFunciones.activarid_unidadDetalleGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new UnidadTableCell(this.unidadsForeignKey,this.detalleguiaremisionConstantesFunciones.resaltarid_unidadDetalleGuiaRemision,this,this.detalleguiaremisionConstantesFunciones.activarid_unidadDetalleGuiaRemision,true,"id_unidadDetalleGuiaRemision","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_IDCENTROCOSTO));

		if(this.detalleguiaremisionConstantesFunciones.mostrarid_centro_costoDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_IDCENTROCOSTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CentroCostoTableCell(this.centrocostosForeignKey,this.detalleguiaremisionConstantesFunciones.resaltarid_centro_costoDetalleGuiaRemision,this,this.detalleguiaremisionConstantesFunciones.activarid_centro_costoDetalleGuiaRemision,iSizeTabla));
			tableColumn.setCellEditor(new CentroCostoTableCell(this.centrocostosForeignKey,this.detalleguiaremisionConstantesFunciones.resaltarid_centro_costoDetalleGuiaRemision,this,this.detalleguiaremisionConstantesFunciones.activarid_centro_costoDetalleGuiaRemision,true,"id_centro_costoDetalleGuiaRemision","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADENVASES));

		if(this.detalleguiaremisionConstantesFunciones.mostrarcantidad_envasesDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADENVASES,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleguiaremisionConstantesFunciones.resaltarcantidad_envasesDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarcantidad_envasesDetalleGuiaRemision,iSizeTabla,this,true,"cantidad_envasesDetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltarcantidad_envasesDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarcantidad_envasesDetalleGuiaRemision,this,true,"cantidad_envasesDetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADAUXILIAR));

		if(this.detalleguiaremisionConstantesFunciones.mostrarcantidad_auxiliarDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADAUXILIAR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleguiaremisionConstantesFunciones.resaltarcantidad_auxiliarDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarcantidad_auxiliarDetalleGuiaRemision,iSizeTabla,this,true,"cantidad_auxiliarDetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltarcantidad_auxiliarDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarcantidad_auxiliarDetalleGuiaRemision,this,true,"cantidad_auxiliarDetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_DESCRIPCION));

		if(this.detalleguiaremisionConstantesFunciones.mostrardescripcionDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleguiaremisionConstantesFunciones.resaltardescripcionDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activardescripcionDetalleGuiaRemision,iSizeTabla,this,true,"descripcionDetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltardescripcionDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activardescripcionDetalleGuiaRemision,this,true,"descripcionDetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDAD));

		if(this.detalleguiaremisionConstantesFunciones.mostrarcantidadDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDAD,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleguiaremisionConstantesFunciones.resaltarcantidadDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarcantidadDetalleGuiaRemision,iSizeTabla,this,true,"cantidadDetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltarcantidadDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarcantidadDetalleGuiaRemision,this,true,"cantidadDetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_MONTO));

		if(this.detalleguiaremisionConstantesFunciones.mostrarmontoDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_MONTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleguiaremisionConstantesFunciones.resaltarmontoDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarmontoDetalleGuiaRemision,iSizeTabla,this,true,"montoDetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltarmontoDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarmontoDetalleGuiaRemision,this,true,"montoDetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_PRECIO));

		if(this.detalleguiaremisionConstantesFunciones.mostrarprecioDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_PRECIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleguiaremisionConstantesFunciones.resaltarprecioDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarprecioDetalleGuiaRemision,iSizeTabla,this,true,"precioDetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltarprecioDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarprecioDetalleGuiaRemision,this,true,"precioDetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEDESCUENTO));

		if(this.detalleguiaremisionConstantesFunciones.mostrarporcentaje_descuentoDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEDESCUENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleguiaremisionConstantesFunciones.resaltarporcentaje_descuentoDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarporcentaje_descuentoDetalleGuiaRemision,iSizeTabla,this,true,"porcentaje_descuentoDetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltarporcentaje_descuentoDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarporcentaje_descuentoDetalleGuiaRemision,this,true,"porcentaje_descuentoDetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO));

		if(this.detalleguiaremisionConstantesFunciones.mostrardescuentoDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleguiaremisionConstantesFunciones.resaltardescuentoDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activardescuentoDetalleGuiaRemision,iSizeTabla,this,true,"descuentoDetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltardescuentoDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activardescuentoDetalleGuiaRemision,this,true,"descuentoDetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO2));

		if(this.detalleguiaremisionConstantesFunciones.mostrardescuento2DetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO2,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleguiaremisionConstantesFunciones.resaltardescuento2DetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activardescuento2DetalleGuiaRemision,iSizeTabla,this,true,"descuento2DetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltardescuento2DetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activardescuento2DetalleGuiaRemision,this,true,"descuento2DetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO3));

		if(this.detalleguiaremisionConstantesFunciones.mostrardescuento3DetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO3,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleguiaremisionConstantesFunciones.resaltardescuento3DetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activardescuento3DetalleGuiaRemision,iSizeTabla,this,true,"descuento3DetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltardescuento3DetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activardescuento3DetalleGuiaRemision,this,true,"descuento3DetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEIVA));

		if(this.detalleguiaremisionConstantesFunciones.mostrarporcentaje_ivaDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleguiaremisionConstantesFunciones.resaltarporcentaje_ivaDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarporcentaje_ivaDetalleGuiaRemision,iSizeTabla,this,true,"porcentaje_ivaDetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltarporcentaje_ivaDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarporcentaje_ivaDetalleGuiaRemision,this,true,"porcentaje_ivaDetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_IVA));

		if(this.detalleguiaremisionConstantesFunciones.mostrarivaDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_IVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleguiaremisionConstantesFunciones.resaltarivaDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarivaDetalleGuiaRemision,iSizeTabla,this,true,"ivaDetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltarivaDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarivaDetalleGuiaRemision,this,true,"ivaDetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALDESCUENTO));

		if(this.detalleguiaremisionConstantesFunciones.mostrartotal_descuentoDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALDESCUENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleguiaremisionConstantesFunciones.resaltartotal_descuentoDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activartotal_descuentoDetalleGuiaRemision,iSizeTabla,this,true,"total_descuentoDetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltartotal_descuentoDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activartotal_descuentoDetalleGuiaRemision,this,true,"total_descuentoDetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALIMPUESTO));

		if(this.detalleguiaremisionConstantesFunciones.mostrartotal_impuestoDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALIMPUESTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleguiaremisionConstantesFunciones.resaltartotal_impuestoDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activartotal_impuestoDetalleGuiaRemision,iSizeTabla,this,true,"total_impuestoDetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltartotal_impuestoDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activartotal_impuestoDetalleGuiaRemision,this,true,"total_impuestoDetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_SUBTOTAL));

		if(this.detalleguiaremisionConstantesFunciones.mostrarsub_totalDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_SUBTOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleguiaremisionConstantesFunciones.resaltarsub_totalDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarsub_totalDetalleGuiaRemision,iSizeTabla,this,true,"sub_totalDetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltarsub_totalDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarsub_totalDetalleGuiaRemision,this,true,"sub_totalDetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_TOTAL));

		if(this.detalleguiaremisionConstantesFunciones.mostrartotalDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_TOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detalleguiaremisionConstantesFunciones.resaltartotalDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activartotalDetalleGuiaRemision,iSizeTabla,this,true,"totalDetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltartotalDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activartotalDetalleGuiaRemision,this,true,"totalDetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_LOTE));

		if(this.detalleguiaremisionConstantesFunciones.mostrarloteDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_LOTE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleguiaremisionConstantesFunciones.resaltarloteDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarloteDetalleGuiaRemision,iSizeTabla,this,true,"loteDetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltarloteDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarloteDetalleGuiaRemision,this,true,"loteDetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_LOTECLIENTE));

		if(this.detalleguiaremisionConstantesFunciones.mostrarlote_clienteDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_LOTECLIENTE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleguiaremisionConstantesFunciones.resaltarlote_clienteDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarlote_clienteDetalleGuiaRemision,iSizeTabla,this,true,"lote_clienteDetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltarlote_clienteDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarlote_clienteDetalleGuiaRemision,this,true,"lote_clienteDetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_ORDENCOMPRA));

		if(this.detalleguiaremisionConstantesFunciones.mostrarorden_compraDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_ORDENCOMPRA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleguiaremisionConstantesFunciones.resaltarorden_compraDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarorden_compraDetalleGuiaRemision,iSizeTabla,this,true,"orden_compraDetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltarorden_compraDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarorden_compraDetalleGuiaRemision,this,true,"orden_compraDetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_AREA));

		if(this.detalleguiaremisionConstantesFunciones.mostrarareaDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_AREA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleguiaremisionConstantesFunciones.resaltarareaDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarareaDetalleGuiaRemision,iSizeTabla,this,true,"areaDetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltarareaDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarareaDetalleGuiaRemision,this,true,"areaDetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_MEDIDAS));

		if(this.detalleguiaremisionConstantesFunciones.mostrarmedidasDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_MEDIDAS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleguiaremisionConstantesFunciones.resaltarmedidasDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarmedidasDetalleGuiaRemision,iSizeTabla,this,true,"medidasDetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltarmedidasDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activarmedidasDetalleGuiaRemision,this,true,"medidasDetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO));

		if(this.detalleguiaremisionConstantesFunciones.mostraracabadoDetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleguiaremisionConstantesFunciones.resaltaracabadoDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activaracabadoDetalleGuiaRemision,iSizeTabla,this,true,"acabadoDetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltaracabadoDetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activaracabadoDetalleGuiaRemision,this,true,"acabadoDetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO2));

		if(this.detalleguiaremisionConstantesFunciones.mostraracabado2DetalleGuiaRemision && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO2,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detalleguiaremisionConstantesFunciones.resaltaracabado2DetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activaracabado2DetalleGuiaRemision,iSizeTabla,this,true,"acabado2DetalleGuiaRemision","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detalleguiaremisionConstantesFunciones.resaltaracabado2DetalleGuiaRemision,this.detalleguiaremisionConstantesFunciones.activaracabado2DetalleGuiaRemision,this,true,"acabado2DetalleGuiaRemision","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetalleGuiaRemisionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detalleguiaremisionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detalleguiaremisionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetalleGuiaRemision.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detalleguiaremisionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detalleguiaremisionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetalleGuiaRemision.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarDetalleGuiaRemision && this.isPermisoGuardarCambiosDetalleGuiaRemision) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.detalleguiaremisionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.detalleguiaremisionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosDetalleGuiaRemision.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosDetalleGuiaRemision.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetalleGuiaRemision && this.isPermisoGuardarCambiosDetalleGuiaRemision) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetalleGuiaRemision && this.isPermisoGuardarCambiosDetalleGuiaRemision) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosDetalleGuiaRemision.moveColumn(this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosDetalleGuiaRemision.moveColumn(this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosDetalleGuiaRemision.moveColumn(this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosDetalleGuiaRemision.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosDetalleGuiaRemision.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosDetalleGuiaRemision,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosDetalleGuiaRemision.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosDetalleGuiaRemision.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosDetalleGuiaRemision.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=detalleguiaremisionLogic.getDetalleGuiaRemisions().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=detalleguiaremisions.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosDetalleGuiaRemision.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosDetalleGuiaRemision.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosDetalleGuiaRemision();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoDetalleGuiaRemision=false;
					
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
			
				if(this.detalleguiaremisionSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormDetalleGuiaRemision==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetalleGuiaRemision.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetalleGuiaRemision.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.detalleguiaremision.getsType().equals("DUPLICADO")
				   || this.detalleguiaremision.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoDetalleGuiaRemision=true;
				
				} else {
					this.isEsNuevoDetalleGuiaRemision=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
					if(this.detalleguiaremision.getId()>=0 && !this.detalleguiaremision.getIsNew()) {						
						this.isEsNuevoDetalleGuiaRemision=false;
						
					} else {
						this.isEsNuevoDetalleGuiaRemision=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoDetalleGuiaRemision(esRelaciones);						
				
				this.seleccionarDetalleGuiaRemision(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.detalleguiaremision.getId()<0) {
					this.isEsNuevoDetalleGuiaRemision=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarDetalleGuiaRemision(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarDetalleGuiaRemision(evt,rowIndex);
				}	
				
				if(this.detalleguiaremisionSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion DetalleGuiaRemision: " + this.dDif); 
					}
				}								
				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarDetalleGuiaRemision(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.detalleguiaremision)) {
					if(this.detalleguiaremision.getId()>0) {
						this.detalleguiaremision.setIsDeleted(true);
						
						this.detalleguiaremisionsEliminados.add(this.detalleguiaremision);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detalleguiaremisionLogic.getDetalleGuiaRemisions().remove(this.detalleguiaremision);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detalleguiaremisions.remove(this.detalleguiaremision);				
					}
					
					
					((DetalleGuiaRemisionModel) this.jTableDatosDetalleGuiaRemision.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaDetalleGuiaRemision(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarDetalleGuiaRemision(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoDetalleGuiaRemision) {
			
			if(this.jInternalFrameDetalleFormDetalleGuiaRemision==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetalleGuiaRemision.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetalleGuiaRemision.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioDetalleGuiaRemision(this.detalleguiaremision);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.detalleguiaremisionConstantesFunciones.cargarid_empresaDetalleGuiaRemision || this.detalleguiaremisionConstantesFunciones.event_dependid_empresaDetalleGuiaRemision) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.detalleguiaremision.getid_empresa());
									//this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(detalleguiaremision.getEmpresa()!=null) {
							this.empresasForeignKey.add(detalleguiaremision.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.detalleguiaremision.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.detalleguiaremisionConstantesFunciones.cargarid_sucursalDetalleGuiaRemision || this.detalleguiaremisionConstantesFunciones.event_dependid_sucursalDetalleGuiaRemision) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.detalleguiaremision.getid_sucursal());
									//this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(detalleguiaremision.getSucursal()!=null) {
							this.sucursalsForeignKey.add(detalleguiaremision.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.detalleguiaremision.getid_sucursal(),false,"Formulario");

					//Ejercicio
					if(!this.detalleguiaremisionConstantesFunciones.cargarid_ejercicioDetalleGuiaRemision || this.detalleguiaremisionConstantesFunciones.event_dependid_ejercicioDetalleGuiaRemision) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.detalleguiaremision.getid_ejercicio());
									//this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(detalleguiaremision.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(detalleguiaremision.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.detalleguiaremision.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.detalleguiaremisionConstantesFunciones.cargarid_periodoDetalleGuiaRemision || this.detalleguiaremisionConstantesFunciones.event_dependid_periodoDetalleGuiaRemision) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.detalleguiaremision.getid_periodo());
									//this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(detalleguiaremision.getPeriodo()!=null) {
							this.periodosForeignKey.add(detalleguiaremision.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.detalleguiaremision.getid_periodo(),false,"Formulario");

					//GuiaRemision
					if(!this.detalleguiaremisionConstantesFunciones.cargarid_guia_remisionDetalleGuiaRemision || this.detalleguiaremisionConstantesFunciones.event_dependid_guia_remisionDetalleGuiaRemision) {
						//this.cargarCombosGuiaRemisionsForeignKeyLista(" where id="+this.detalleguiaremision.getid_guia_remision());
									//this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
						this.guiaremisionsForeignKey=new ArrayList<GuiaRemision>();

						if(detalleguiaremision.getGuiaRemision()!=null) {
							this.guiaremisionsForeignKey.add(detalleguiaremision.getGuiaRemision());
						}

						this.addItemDefectoCombosForeignKeyGuiaRemision();
						this.cargarCombosFrameGuiaRemisionsForeignKey("Todos");
					}
					this.setActualGuiaRemisionForeignKey(this.detalleguiaremision.getid_guia_remision(),false,"Formulario");

					//Bodega
					if(!this.detalleguiaremisionConstantesFunciones.cargarid_bodegaDetalleGuiaRemision || this.detalleguiaremisionConstantesFunciones.event_dependid_bodegaDetalleGuiaRemision) {
						//this.cargarCombosBodegasForeignKeyLista(" where id="+this.detalleguiaremision.getid_bodega());
									//this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
						this.bodegasForeignKey=new ArrayList<Bodega>();

						if(detalleguiaremision.getBodega()!=null) {
							this.bodegasForeignKey.add(detalleguiaremision.getBodega());
						}

						this.addItemDefectoCombosForeignKeyBodega();
						this.cargarCombosFrameBodegasForeignKey("Todos");
					}
					this.setActualBodegaForeignKey(this.detalleguiaremision.getid_bodega(),false,"Formulario");

					//Producto
					if(!this.detalleguiaremisionConstantesFunciones.cargarid_productoDetalleGuiaRemision || this.detalleguiaremisionConstantesFunciones.event_dependid_productoDetalleGuiaRemision) {
						//this.cargarCombosProductosForeignKeyLista(" where id="+this.detalleguiaremision.getid_producto());
									//this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
						this.productosForeignKey=new ArrayList<Producto>();

						if(detalleguiaremision.getProducto()!=null) {
							this.productosForeignKey.add(detalleguiaremision.getProducto());
						}

						this.addItemDefectoCombosForeignKeyProducto();
						this.cargarCombosFrameProductosForeignKey("Todos");
					}
					this.setActualProductoForeignKey(this.detalleguiaremision.getid_producto(),false,"Formulario");

					//Unidad
					if(!this.detalleguiaremisionConstantesFunciones.cargarid_unidadDetalleGuiaRemision || this.detalleguiaremisionConstantesFunciones.event_dependid_unidadDetalleGuiaRemision) {
						//this.cargarCombosUnidadsForeignKeyLista(" where id="+this.detalleguiaremision.getid_unidad());
									//this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
						this.unidadsForeignKey=new ArrayList<Unidad>();

						if(detalleguiaremision.getUnidad()!=null) {
							this.unidadsForeignKey.add(detalleguiaremision.getUnidad());
						}

						this.addItemDefectoCombosForeignKeyUnidad();
						this.cargarCombosFrameUnidadsForeignKey("Todos");
					}
					this.setActualUnidadForeignKey(this.detalleguiaremision.getid_unidad(),false,"Formulario");

					//CentroCosto
					if(!this.detalleguiaremisionConstantesFunciones.cargarid_centro_costoDetalleGuiaRemision || this.detalleguiaremisionConstantesFunciones.event_dependid_centro_costoDetalleGuiaRemision) {
						//this.cargarCombosCentroCostosForeignKeyLista(" where id="+this.detalleguiaremision.getid_centro_costo());
									//this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
						this.centrocostosForeignKey=new ArrayList<CentroCosto>();

						if(detalleguiaremision.getCentroCosto()!=null) {
							this.centrocostosForeignKey.add(detalleguiaremision.getCentroCosto());
						}

						this.addItemDefectoCombosForeignKeyCentroCosto();
						this.cargarCombosFrameCentroCostosForeignKey("Todos");
					}
					this.setActualCentroCostoForeignKey(this.detalleguiaremision.getid_centro_costo(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesDetalleGuiaRemision("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesDetalleGuiaRemision(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetalleGuiaRemision() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetalleGuiaRemision(DetalleGuiaRemision detalleguiaremision) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoDetalleGuiaRemision(detalleguiaremision,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetalleGuiaRemision(DetalleGuiaRemision detalleguiaremision,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioDetalleGuiaRemision(detalleguiaremision);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyDetalleGuiaRemision(detalleguiaremision,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyDetalleGuiaRemision(detalleguiaremision);
	}
	
	public void setVariablesObjetoActualToFormularioDetalleGuiaRemision(DetalleGuiaRemision detalleguiaremision) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormDetalleGuiaRemision==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelidDetalleGuiaRemision.setText(detalleguiaremision.getId().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidad_envasesDetalleGuiaRemision.setText(detalleguiaremision.getcantidad_envases().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidad_auxiliarDetalleGuiaRemision.setText(detalleguiaremision.getcantidad_auxiliar().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextAreadescripcionDetalleGuiaRemision.setText(detalleguiaremision.getdescripcion());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidadDetalleGuiaRemision.setText(detalleguiaremision.getcantidad().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldmontoDetalleGuiaRemision.setText(detalleguiaremision.getmonto().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldprecioDetalleGuiaRemision.setText(detalleguiaremision.getprecio().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldporcentaje_descuentoDetalleGuiaRemision.setText(detalleguiaremision.getporcentaje_descuento().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuentoDetalleGuiaRemision.setText(detalleguiaremision.getdescuento().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuento2DetalleGuiaRemision.setText(detalleguiaremision.getdescuento2().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuento3DetalleGuiaRemision.setText(detalleguiaremision.getdescuento3().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldporcentaje_ivaDetalleGuiaRemision.setText(detalleguiaremision.getporcentaje_iva().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldivaDetalleGuiaRemision.setText(detalleguiaremision.getiva().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotal_descuentoDetalleGuiaRemision.setText(detalleguiaremision.gettotal_descuento().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotal_impuestoDetalleGuiaRemision.setText(detalleguiaremision.gettotal_impuesto().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldsub_totalDetalleGuiaRemision.setText(detalleguiaremision.getsub_total().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotalDetalleGuiaRemision.setText(detalleguiaremision.gettotal().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldloteDetalleGuiaRemision.setText(detalleguiaremision.getlote());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldlote_clienteDetalleGuiaRemision.setText(detalleguiaremision.getlote_cliente());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldorden_compraDetalleGuiaRemision.setText(detalleguiaremision.getorden_compra());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldareaDetalleGuiaRemision.setText(detalleguiaremision.getarea());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldmedidasDetalleGuiaRemision.setText(detalleguiaremision.getmedidas());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldacabadoDetalleGuiaRemision.setText(detalleguiaremision.getacabado());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldacabado2DetalleGuiaRemision.setText(detalleguiaremision.getacabado2());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,DetalleGuiaRemision detalleguiaremisionLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,detalleguiaremisionLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,DetalleGuiaRemision detalleguiaremisionLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				detalleguiaremisionLocal=this.detalleguiaremision;
			} else {
				detalleguiaremisionLocal=this.detalleguiaremisionAnterior;
			}
		}
		
		if(this.permiteMantenimiento(detalleguiaremisionLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoDetalleGuiaRemision(detalleguiaremisionLocal,true);
					
					if(detalleguiaremisionSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(detalleguiaremisionLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(detalleguiaremisionLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoDetalleGuiaRemision(DetalleGuiaRemision detalleguiaremision,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(detalleguiaremision,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(detalleguiaremision);
	}
	
	public void setVariablesFormularioToObjetoActualDetalleGuiaRemision(DetalleGuiaRemision detalleguiaremision,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(detalleguiaremision,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualDetalleGuiaRemision(DetalleGuiaRemision detalleguiaremision,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormDetalleGuiaRemision==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelidDetalleGuiaRemision.getText()==null || this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelidDetalleGuiaRemision.getText()=="" || this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelidDetalleGuiaRemision.getText()=="Id") {
				this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelidDetalleGuiaRemision.setText("0");
			}

			if(conColumnasBase) {detalleguiaremision.setId(Long.parseLong(this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelidDetalleGuiaRemision.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelIdDetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.setcantidad_envases(Integer.parseInt(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidad_envasesDetalleGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADENVASES+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelcantidad_envasesDetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.setcantidad_auxiliar(Integer.parseInt(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidad_auxiliarDetalleGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADAUXILIAR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelcantidad_auxiliarDetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.setdescripcion(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextAreadescripcionDetalleGuiaRemision.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabeldescripcionDetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.setcantidad(Integer.parseInt(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidadDetalleGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDAD+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelcantidadDetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.setmonto(Double.parseDouble(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldmontoDetalleGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_MONTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelmontoDetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.setprecio(Double.parseDouble(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldprecioDetalleGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_PRECIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelprecioDetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.setporcentaje_descuento(Double.parseDouble(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldporcentaje_descuentoDetalleGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEDESCUENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelporcentaje_descuentoDetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.setdescuento(Double.parseDouble(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuentoDetalleGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabeldescuentoDetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.setdescuento2(Double.parseDouble(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuento2DetalleGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO2+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabeldescuento2DetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.setdescuento3(Double.parseDouble(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuento3DetalleGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO3+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabeldescuento3DetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.setporcentaje_iva(Double.parseDouble(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldporcentaje_ivaDetalleGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelporcentaje_ivaDetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.setiva(Double.parseDouble(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldivaDetalleGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_IVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelivaDetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.settotal_descuento(Double.parseDouble(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotal_descuentoDetalleGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALDESCUENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabeltotal_descuentoDetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.settotal_impuesto(Double.parseDouble(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotal_impuestoDetalleGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALIMPUESTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabeltotal_impuestoDetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.setsub_total(Double.parseDouble(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldsub_totalDetalleGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_SUBTOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelsub_totalDetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.settotal(Double.parseDouble(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotalDetalleGuiaRemision.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_TOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabeltotalDetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.setlote(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldloteDetalleGuiaRemision.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_LOTE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelloteDetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.setlote_cliente(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldlote_clienteDetalleGuiaRemision.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_LOTECLIENTE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabellote_clienteDetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.setorden_compra(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldorden_compraDetalleGuiaRemision.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_ORDENCOMPRA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelorden_compraDetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.setarea(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldareaDetalleGuiaRemision.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_AREA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelareaDetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.setmedidas(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldmedidasDetalleGuiaRemision.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_MEDIDAS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelmedidasDetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.setacabado(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldacabadoDetalleGuiaRemision.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelacabadoDetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detalleguiaremision.setacabado2(this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldacabado2DetalleGuiaRemision.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO2+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelacabado2DetalleGuiaRemision,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetalleGuiaRemision(DetalleGuiaRemision detalleguiaremisionBean,DetalleGuiaRemision detalleguiaremision,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && detalleguiaremisionBean.getid_guia_remision()!=null && !detalleguiaremisionBean.getid_guia_remision().equals(-1L))) {detalleguiaremision.setid_guia_remision(detalleguiaremisionBean.getid_guia_remision());}
			if(conDefault || (!conDefault && detalleguiaremisionBean.getid_bodega()!=null && !detalleguiaremisionBean.getid_bodega().equals(-1L))) {detalleguiaremision.setid_bodega(detalleguiaremisionBean.getid_bodega());}
			if(conDefault || (!conDefault && detalleguiaremisionBean.getid_producto()!=null && !detalleguiaremisionBean.getid_producto().equals(-1L))) {detalleguiaremision.setid_producto(detalleguiaremisionBean.getid_producto());}
			if(conDefault || (!conDefault && detalleguiaremisionBean.getid_unidad()!=null && !detalleguiaremisionBean.getid_unidad().equals(-1L))) {detalleguiaremision.setid_unidad(detalleguiaremisionBean.getid_unidad());}
			if(conDefault || (!conDefault && detalleguiaremisionBean.getid_centro_costo()!=null && !detalleguiaremisionBean.getid_centro_costo().equals(null))) {detalleguiaremision.setid_centro_costo(detalleguiaremisionBean.getid_centro_costo());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosDetalleGuiaRemision(DetalleGuiaRemision detalleguiaremisionOrigen,DetalleGuiaRemision detalleguiaremision,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detalleguiaremisionOrigen.getId()!=null && !detalleguiaremisionOrigen.getId().equals(0L))) {detalleguiaremision.setId(detalleguiaremisionOrigen.getId());}}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getid_guia_remision()!=null && !detalleguiaremisionOrigen.getid_guia_remision().equals(-1L))) {detalleguiaremision.setid_guia_remision(detalleguiaremisionOrigen.getid_guia_remision());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getid_bodega()!=null && !detalleguiaremisionOrigen.getid_bodega().equals(-1L))) {detalleguiaremision.setid_bodega(detalleguiaremisionOrigen.getid_bodega());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getid_producto()!=null && !detalleguiaremisionOrigen.getid_producto().equals(-1L))) {detalleguiaremision.setid_producto(detalleguiaremisionOrigen.getid_producto());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getid_unidad()!=null && !detalleguiaremisionOrigen.getid_unidad().equals(-1L))) {detalleguiaremision.setid_unidad(detalleguiaremisionOrigen.getid_unidad());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getid_centro_costo()!=null && !detalleguiaremisionOrigen.getid_centro_costo().equals(null))) {detalleguiaremision.setid_centro_costo(detalleguiaremisionOrigen.getid_centro_costo());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getcantidad_envases()!=null && !detalleguiaremisionOrigen.getcantidad_envases().equals(0))) {detalleguiaremision.setcantidad_envases(detalleguiaremisionOrigen.getcantidad_envases());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getcantidad_auxiliar()!=null && !detalleguiaremisionOrigen.getcantidad_auxiliar().equals(0))) {detalleguiaremision.setcantidad_auxiliar(detalleguiaremisionOrigen.getcantidad_auxiliar());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getdescripcion()!=null && !detalleguiaremisionOrigen.getdescripcion().equals(""))) {detalleguiaremision.setdescripcion(detalleguiaremisionOrigen.getdescripcion());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getcantidad()!=null && !detalleguiaremisionOrigen.getcantidad().equals(0))) {detalleguiaremision.setcantidad(detalleguiaremisionOrigen.getcantidad());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getmonto()!=null && !detalleguiaremisionOrigen.getmonto().equals(0.0))) {detalleguiaremision.setmonto(detalleguiaremisionOrigen.getmonto());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getprecio()!=null && !detalleguiaremisionOrigen.getprecio().equals(0.0))) {detalleguiaremision.setprecio(detalleguiaremisionOrigen.getprecio());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getporcentaje_descuento()!=null && !detalleguiaremisionOrigen.getporcentaje_descuento().equals(0.0))) {detalleguiaremision.setporcentaje_descuento(detalleguiaremisionOrigen.getporcentaje_descuento());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getdescuento()!=null && !detalleguiaremisionOrigen.getdescuento().equals(0.0))) {detalleguiaremision.setdescuento(detalleguiaremisionOrigen.getdescuento());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getdescuento2()!=null && !detalleguiaremisionOrigen.getdescuento2().equals(0.0))) {detalleguiaremision.setdescuento2(detalleguiaremisionOrigen.getdescuento2());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getdescuento3()!=null && !detalleguiaremisionOrigen.getdescuento3().equals(0.0))) {detalleguiaremision.setdescuento3(detalleguiaremisionOrigen.getdescuento3());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getporcentaje_iva()!=null && !detalleguiaremisionOrigen.getporcentaje_iva().equals(0.0))) {detalleguiaremision.setporcentaje_iva(detalleguiaremisionOrigen.getporcentaje_iva());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getiva()!=null && !detalleguiaremisionOrigen.getiva().equals(0.0))) {detalleguiaremision.setiva(detalleguiaremisionOrigen.getiva());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.gettotal_descuento()!=null && !detalleguiaremisionOrigen.gettotal_descuento().equals(0.0))) {detalleguiaremision.settotal_descuento(detalleguiaremisionOrigen.gettotal_descuento());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.gettotal_impuesto()!=null && !detalleguiaremisionOrigen.gettotal_impuesto().equals(0.0))) {detalleguiaremision.settotal_impuesto(detalleguiaremisionOrigen.gettotal_impuesto());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getsub_total()!=null && !detalleguiaremisionOrigen.getsub_total().equals(0.0))) {detalleguiaremision.setsub_total(detalleguiaremisionOrigen.getsub_total());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.gettotal()!=null && !detalleguiaremisionOrigen.gettotal().equals(0.0))) {detalleguiaremision.settotal(detalleguiaremisionOrigen.gettotal());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getlote()!=null && !detalleguiaremisionOrigen.getlote().equals(""))) {detalleguiaremision.setlote(detalleguiaremisionOrigen.getlote());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getlote_cliente()!=null && !detalleguiaremisionOrigen.getlote_cliente().equals(""))) {detalleguiaremision.setlote_cliente(detalleguiaremisionOrigen.getlote_cliente());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getorden_compra()!=null && !detalleguiaremisionOrigen.getorden_compra().equals(""))) {detalleguiaremision.setorden_compra(detalleguiaremisionOrigen.getorden_compra());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getarea()!=null && !detalleguiaremisionOrigen.getarea().equals(""))) {detalleguiaremision.setarea(detalleguiaremisionOrigen.getarea());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getmedidas()!=null && !detalleguiaremisionOrigen.getmedidas().equals(""))) {detalleguiaremision.setmedidas(detalleguiaremisionOrigen.getmedidas());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getacabado()!=null && !detalleguiaremisionOrigen.getacabado().equals(""))) {detalleguiaremision.setacabado(detalleguiaremisionOrigen.getacabado());}
			if(conDefault || (!conDefault && detalleguiaremisionOrigen.getacabado2()!=null && !detalleguiaremisionOrigen.getacabado2().equals(""))) {detalleguiaremision.setacabado2(detalleguiaremisionOrigen.getacabado2());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetalleGuiaRemision(DetalleGuiaRemision detalleguiaremision) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelidDetalleGuiaRemision.setText(detalleguiaremision.getId().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidad_envasesDetalleGuiaRemision.setText(detalleguiaremision.getcantidad_envases().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidad_auxiliarDetalleGuiaRemision.setText(detalleguiaremision.getcantidad_auxiliar().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextAreadescripcionDetalleGuiaRemision.setText(detalleguiaremision.getdescripcion());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidadDetalleGuiaRemision.setText(detalleguiaremision.getcantidad().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldmontoDetalleGuiaRemision.setText(detalleguiaremision.getmonto().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldprecioDetalleGuiaRemision.setText(detalleguiaremision.getprecio().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldporcentaje_descuentoDetalleGuiaRemision.setText(detalleguiaremision.getporcentaje_descuento().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuentoDetalleGuiaRemision.setText(detalleguiaremision.getdescuento().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuento2DetalleGuiaRemision.setText(detalleguiaremision.getdescuento2().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuento3DetalleGuiaRemision.setText(detalleguiaremision.getdescuento3().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldporcentaje_ivaDetalleGuiaRemision.setText(detalleguiaremision.getporcentaje_iva().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldivaDetalleGuiaRemision.setText(detalleguiaremision.getiva().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotal_descuentoDetalleGuiaRemision.setText(detalleguiaremision.gettotal_descuento().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotal_impuestoDetalleGuiaRemision.setText(detalleguiaremision.gettotal_impuesto().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldsub_totalDetalleGuiaRemision.setText(detalleguiaremision.getsub_total().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotalDetalleGuiaRemision.setText(detalleguiaremision.gettotal().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldloteDetalleGuiaRemision.setText(detalleguiaremision.getlote());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldlote_clienteDetalleGuiaRemision.setText(detalleguiaremision.getlote_cliente());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldorden_compraDetalleGuiaRemision.setText(detalleguiaremision.getorden_compra());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldareaDetalleGuiaRemision.setText(detalleguiaremision.getarea());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldmedidasDetalleGuiaRemision.setText(detalleguiaremision.getmedidas());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldacabadoDetalleGuiaRemision.setText(detalleguiaremision.getacabado());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldacabado2DetalleGuiaRemision.setText(detalleguiaremision.getacabado2());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetalleGuiaRemision(DetalleGuiaRemisionBean detalleguiaremisionBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelidDetalleGuiaRemision.setText(detalleguiaremisionBean.getId().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidad_envasesDetalleGuiaRemision.setText(detalleguiaremisionBean.getcantidad_envases().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidad_auxiliarDetalleGuiaRemision.setText(detalleguiaremisionBean.getcantidad_auxiliar().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextAreadescripcionDetalleGuiaRemision.setText(detalleguiaremisionBean.getdescripcion());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidadDetalleGuiaRemision.setText(detalleguiaremisionBean.getcantidad().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldmontoDetalleGuiaRemision.setText(detalleguiaremisionBean.getmonto().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldprecioDetalleGuiaRemision.setText(detalleguiaremisionBean.getprecio().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldporcentaje_descuentoDetalleGuiaRemision.setText(detalleguiaremisionBean.getporcentaje_descuento().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuentoDetalleGuiaRemision.setText(detalleguiaremisionBean.getdescuento().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuento2DetalleGuiaRemision.setText(detalleguiaremisionBean.getdescuento2().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuento3DetalleGuiaRemision.setText(detalleguiaremisionBean.getdescuento3().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldporcentaje_ivaDetalleGuiaRemision.setText(detalleguiaremisionBean.getporcentaje_iva().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldivaDetalleGuiaRemision.setText(detalleguiaremisionBean.getiva().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotal_descuentoDetalleGuiaRemision.setText(detalleguiaremisionBean.gettotal_descuento().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotal_impuestoDetalleGuiaRemision.setText(detalleguiaremisionBean.gettotal_impuesto().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldsub_totalDetalleGuiaRemision.setText(detalleguiaremisionBean.getsub_total().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotalDetalleGuiaRemision.setText(detalleguiaremisionBean.gettotal().toString());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldloteDetalleGuiaRemision.setText(detalleguiaremisionBean.getlote());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldlote_clienteDetalleGuiaRemision.setText(detalleguiaremisionBean.getlote_cliente());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldorden_compraDetalleGuiaRemision.setText(detalleguiaremisionBean.getorden_compra());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldareaDetalleGuiaRemision.setText(detalleguiaremisionBean.getarea());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldmedidasDetalleGuiaRemision.setText(detalleguiaremisionBean.getmedidas());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldacabadoDetalleGuiaRemision.setText(detalleguiaremisionBean.getacabado());
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldacabado2DetalleGuiaRemision.setText(detalleguiaremisionBean.getacabado2());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanDetalleGuiaRemision(DetalleGuiaRemisionParameterReturnGeneral detalleguiaremisionReturnGeneral,DetalleGuiaRemisionBean detalleguiaremisionBean,Boolean conDefault) throws Exception { 
		try {
			DetalleGuiaRemision detalleguiaremisionLocal=new DetalleGuiaRemision();
			
			detalleguiaremisionLocal=detalleguiaremisionReturnGeneral.getDetalleGuiaRemision();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detalleguiaremisionLocal.getId()!=null && !detalleguiaremisionLocal.getId().equals(0L))) {detalleguiaremisionBean.setId(detalleguiaremisionLocal.getId());}}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getid_guia_remision()!=null && !detalleguiaremisionLocal.getid_guia_remision().equals(-1L))) {detalleguiaremisionBean.setid_guia_remision(detalleguiaremisionLocal.getid_guia_remision());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getid_bodega()!=null && !detalleguiaremisionLocal.getid_bodega().equals(-1L))) {detalleguiaremisionBean.setid_bodega(detalleguiaremisionLocal.getid_bodega());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getid_producto()!=null && !detalleguiaremisionLocal.getid_producto().equals(-1L))) {detalleguiaremisionBean.setid_producto(detalleguiaremisionLocal.getid_producto());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getid_unidad()!=null && !detalleguiaremisionLocal.getid_unidad().equals(-1L))) {detalleguiaremisionBean.setid_unidad(detalleguiaremisionLocal.getid_unidad());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getid_centro_costo()!=null && !detalleguiaremisionLocal.getid_centro_costo().equals(null))) {detalleguiaremisionBean.setid_centro_costo(detalleguiaremisionLocal.getid_centro_costo());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getcantidad_envases()!=null && !detalleguiaremisionLocal.getcantidad_envases().equals(0))) {detalleguiaremisionBean.setcantidad_envases(detalleguiaremisionLocal.getcantidad_envases());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getcantidad_auxiliar()!=null && !detalleguiaremisionLocal.getcantidad_auxiliar().equals(0))) {detalleguiaremisionBean.setcantidad_auxiliar(detalleguiaremisionLocal.getcantidad_auxiliar());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getdescripcion()!=null && !detalleguiaremisionLocal.getdescripcion().equals(""))) {detalleguiaremisionBean.setdescripcion(detalleguiaremisionLocal.getdescripcion());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getcantidad()!=null && !detalleguiaremisionLocal.getcantidad().equals(0))) {detalleguiaremisionBean.setcantidad(detalleguiaremisionLocal.getcantidad());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getmonto()!=null && !detalleguiaremisionLocal.getmonto().equals(0.0))) {detalleguiaremisionBean.setmonto(detalleguiaremisionLocal.getmonto());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getprecio()!=null && !detalleguiaremisionLocal.getprecio().equals(0.0))) {detalleguiaremisionBean.setprecio(detalleguiaremisionLocal.getprecio());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getporcentaje_descuento()!=null && !detalleguiaremisionLocal.getporcentaje_descuento().equals(0.0))) {detalleguiaremisionBean.setporcentaje_descuento(detalleguiaremisionLocal.getporcentaje_descuento());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getdescuento()!=null && !detalleguiaremisionLocal.getdescuento().equals(0.0))) {detalleguiaremisionBean.setdescuento(detalleguiaremisionLocal.getdescuento());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getdescuento2()!=null && !detalleguiaremisionLocal.getdescuento2().equals(0.0))) {detalleguiaremisionBean.setdescuento2(detalleguiaremisionLocal.getdescuento2());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getdescuento3()!=null && !detalleguiaremisionLocal.getdescuento3().equals(0.0))) {detalleguiaremisionBean.setdescuento3(detalleguiaremisionLocal.getdescuento3());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getporcentaje_iva()!=null && !detalleguiaremisionLocal.getporcentaje_iva().equals(0.0))) {detalleguiaremisionBean.setporcentaje_iva(detalleguiaremisionLocal.getporcentaje_iva());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getiva()!=null && !detalleguiaremisionLocal.getiva().equals(0.0))) {detalleguiaremisionBean.setiva(detalleguiaremisionLocal.getiva());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.gettotal_descuento()!=null && !detalleguiaremisionLocal.gettotal_descuento().equals(0.0))) {detalleguiaremisionBean.settotal_descuento(detalleguiaremisionLocal.gettotal_descuento());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.gettotal_impuesto()!=null && !detalleguiaremisionLocal.gettotal_impuesto().equals(0.0))) {detalleguiaremisionBean.settotal_impuesto(detalleguiaremisionLocal.gettotal_impuesto());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getsub_total()!=null && !detalleguiaremisionLocal.getsub_total().equals(0.0))) {detalleguiaremisionBean.setsub_total(detalleguiaremisionLocal.getsub_total());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.gettotal()!=null && !detalleguiaremisionLocal.gettotal().equals(0.0))) {detalleguiaremisionBean.settotal(detalleguiaremisionLocal.gettotal());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getlote()!=null && !detalleguiaremisionLocal.getlote().equals(""))) {detalleguiaremisionBean.setlote(detalleguiaremisionLocal.getlote());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getlote_cliente()!=null && !detalleguiaremisionLocal.getlote_cliente().equals(""))) {detalleguiaremisionBean.setlote_cliente(detalleguiaremisionLocal.getlote_cliente());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getorden_compra()!=null && !detalleguiaremisionLocal.getorden_compra().equals(""))) {detalleguiaremisionBean.setorden_compra(detalleguiaremisionLocal.getorden_compra());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getarea()!=null && !detalleguiaremisionLocal.getarea().equals(""))) {detalleguiaremisionBean.setarea(detalleguiaremisionLocal.getarea());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getmedidas()!=null && !detalleguiaremisionLocal.getmedidas().equals(""))) {detalleguiaremisionBean.setmedidas(detalleguiaremisionLocal.getmedidas());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getacabado()!=null && !detalleguiaremisionLocal.getacabado().equals(""))) {detalleguiaremisionBean.setacabado(detalleguiaremisionLocal.getacabado());}
			if(conDefault || (!conDefault && detalleguiaremisionLocal.getacabado2()!=null && !detalleguiaremisionLocal.getacabado2().equals(""))) {detalleguiaremisionBean.setacabado2(detalleguiaremisionLocal.getacabado2());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxDetalleGuiaRemisionGenerico(Long idDetalleGuiaRemisionSeleccionado,JComboBox jComboBoxDetalleGuiaRemision,List<DetalleGuiaRemision> detalleguiaremisionsLocal)throws Exception {
		try {
			DetalleGuiaRemision  detalleguiaremisionTemp=null;

			for(DetalleGuiaRemision detalleguiaremisionAux:detalleguiaremisionsLocal) {
				if(detalleguiaremisionAux.getId()!=null && detalleguiaremisionAux.getId().equals(idDetalleGuiaRemisionSeleccionado)) {
					detalleguiaremisionTemp=detalleguiaremisionAux;
					break;
				}
			}

			jComboBoxDetalleGuiaRemision.setSelectedItem(detalleguiaremisionTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxDetalleGuiaRemisionGenerico(JComboBox jComboBoxDetalleGuiaRemision,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxDetalleGuiaRemision.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetalleGuiaRemision.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxDetalleGuiaRemision.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetalleGuiaRemision.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetalleGuiaRemision.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxDetalleGuiaRemision.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetalleGuiaRemision.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxDetalleGuiaRemision.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxDetalleGuiaRemision.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxDetalleGuiaRemision.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detalleguiaremision=(DetalleGuiaRemision) detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detalleguiaremision =(DetalleGuiaRemision) detalleguiaremisions.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!detalleguiaremision.getIsNew() && !detalleguiaremision.getIsChanged() && !detalleguiaremision.getIsDeleted()) {
				sDescripcion=detalleguiaremision.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=detalleguiaremision.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!detalleguiaremision.getIsNew() && !detalleguiaremision.getIsChanged() && !detalleguiaremision.getIsDeleted()) {
				sDescripcion=detalleguiaremision.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=detalleguiaremision.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!detalleguiaremision.getIsNew() && !detalleguiaremision.getIsChanged() && !detalleguiaremision.getIsDeleted()) {
				sDescripcion=detalleguiaremision.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=detalleguiaremision.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!detalleguiaremision.getIsNew() && !detalleguiaremision.getIsChanged() && !detalleguiaremision.getIsDeleted()) {
				sDescripcion=detalleguiaremision.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=detalleguiaremision.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("GuiaRemision")) {
			//sDescripcion=this.getActualGuiaRemisionForeignKeyDescripcion((Long)value);
			if(!detalleguiaremision.getIsNew() && !detalleguiaremision.getIsChanged() && !detalleguiaremision.getIsDeleted()) {
				sDescripcion=detalleguiaremision.getguiaremision_descripcion();
			} else {
				//sDescripcion=this.getActualGuiaRemisionForeignKeyDescripcion((Long)value);
				sDescripcion=detalleguiaremision.getguiaremision_descripcion();
			}
		}

		if(sTipo.equals("Bodega")) {
			//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
			if(!detalleguiaremision.getIsNew() && !detalleguiaremision.getIsChanged() && !detalleguiaremision.getIsDeleted()) {
				sDescripcion=detalleguiaremision.getbodega_descripcion();
			} else {
				//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
				sDescripcion=detalleguiaremision.getbodega_descripcion();
			}
		}

		if(sTipo.equals("Producto")) {
			//sDescripcion=this.getActualProductoForeignKeyDescripcion((Long)value);
			if(!detalleguiaremision.getIsNew() && !detalleguiaremision.getIsChanged() && !detalleguiaremision.getIsDeleted()) {
				sDescripcion=detalleguiaremision.getproducto_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=detalleguiaremision.getproducto_descripcion();
			}
		}

		if(sTipo.equals("Unidad")) {
			//sDescripcion=this.getActualUnidadForeignKeyDescripcion((Long)value);
			if(!detalleguiaremision.getIsNew() && !detalleguiaremision.getIsChanged() && !detalleguiaremision.getIsDeleted()) {
				sDescripcion=detalleguiaremision.getunidad_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=detalleguiaremision.getunidad_descripcion();
			}
		}

		if(sTipo.equals("CentroCosto")) {
			//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
			if(!detalleguiaremision.getIsNew() && !detalleguiaremision.getIsChanged() && !detalleguiaremision.getIsDeleted()) {
				sDescripcion=detalleguiaremision.getcentrocosto_descripcion();
			} else {
				//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
				sDescripcion=detalleguiaremision.getcentrocosto_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		DetalleGuiaRemision detalleguiaremisionRow=new DetalleGuiaRemision();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detalleguiaremisionRow=(DetalleGuiaRemision) detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detalleguiaremisionRow=(DetalleGuiaRemision) detalleguiaremisions.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualDetalleGuiaRemision(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaNuevoDetalleGuiaRemision && this.isPermisoNuevoDetalleGuiaRemision));			
			this.jButtonDuplicarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaDuplicarDetalleGuiaRemision && this.isPermisoDuplicarDetalleGuiaRemision));			
			this.jButtonCopiarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaCopiarDetalleGuiaRemision && this.isPermisoCopiarDetalleGuiaRemision));
			this.jButtonVerFormDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaVerFormDetalleGuiaRemision && this.isPermisoVerFormDetalleGuiaRemision));
			
			this.jButtonAbrirOrderByDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaOrdenDetalleGuiaRemision && this.isPermisoOrdenDetalleGuiaRemision));			
			
			this.jButtonNuevoRelacionesDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision && this.isPermisoNuevoDetalleGuiaRemision));			
			this.jButtonNuevoGuardarCambiosDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaNuevoDetalleGuiaRemision && this.isPermisoNuevoDetalleGuiaRemision && this.isPermisoGuardarCambiosDetalleGuiaRemision));
			
			if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonModificarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaModificarDetalleGuiaRemision && this.isPermisoActualizarDetalleGuiaRemision));	
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonActualizarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaActualizarDetalleGuiaRemision && this.isPermisoActualizarDetalleGuiaRemision));	
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonEliminarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaEliminarDetalleGuiaRemision && this.isPermisoEliminarDetalleGuiaRemision));
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonCancelarDetalleGuiaRemision.setVisible(this.isVisibilidadCeldaCancelarDetalleGuiaRemision);							
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonGuardarCambiosDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaGuardarDetalleGuiaRemision && this.isPermisoGuardarCambiosDetalleGuiaRemision));			
			
			}
						
			this.jButtonGuardarCambiosTablaDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleGuiaRemision && this.isPermisoGuardarCambiosDetalleGuiaRemision));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaNuevoDetalleGuiaRemision && this.isPermisoNuevoDetalleGuiaRemision));						
			this.jButtonDuplicarToolBarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaDuplicarDetalleGuiaRemision && this.isPermisoDuplicarDetalleGuiaRemision));						
			this.jButtonCopiarToolBarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaCopiarDetalleGuiaRemision && this.isPermisoCopiarDetalleGuiaRemision));			
			this.jButtonVerFormToolBarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaVerFormDetalleGuiaRemision && this.isPermisoVerFormDetalleGuiaRemision));			
			this.jButtonAbrirOrderByToolBarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaOrdenDetalleGuiaRemision && this.isPermisoOrdenDetalleGuiaRemision));
			this.jButtonNuevoRelacionesToolBarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision && this.isPermisoNuevoDetalleGuiaRemision));			
			this.jButtonNuevoGuardarCambiosToolBarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaNuevoDetalleGuiaRemision && this.isPermisoNuevoDetalleGuiaRemision && this.isPermisoGuardarCambiosDetalleGuiaRemision));			
			
			if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonModificarToolBarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaModificarDetalleGuiaRemision && this.isPermisoActualizarDetalleGuiaRemision));	
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonActualizarToolBarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaActualizarDetalleGuiaRemision  && this.isPermisoActualizarDetalleGuiaRemision));	
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonEliminarToolBarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaEliminarDetalleGuiaRemision && this.isPermisoEliminarDetalleGuiaRemision));
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonCancelarToolBarDetalleGuiaRemision.setVisible(this.isVisibilidadCeldaCancelarDetalleGuiaRemision);				
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonGuardarCambiosToolBarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaGuardarDetalleGuiaRemision && this.isPermisoGuardarCambiosDetalleGuiaRemision));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleGuiaRemision && this.isPermisoGuardarCambiosDetalleGuiaRemision));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaNuevoDetalleGuiaRemision && this.isPermisoNuevoDetalleGuiaRemision));			
			this.jMenuItemDuplicarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaDuplicarDetalleGuiaRemision && this.isPermisoDuplicarDetalleGuiaRemision));			
			this.jMenuItemCopiarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaCopiarDetalleGuiaRemision && this.isPermisoCopiarDetalleGuiaRemision));			
			this.jMenuItemVerFormDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaVerFormDetalleGuiaRemision && this.isPermisoVerFormDetalleGuiaRemision));			
			this.jMenuItemAbrirOrderByDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaOrdenDetalleGuiaRemision && this.isPermisoOrdenDetalleGuiaRemision));			
			//this.jMenuItemMostrarOcultarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaOrdenDetalleGuiaRemision && this.isPermisoOrdenDetalleGuiaRemision));
			this.jMenuItemDetalleAbrirOrderByDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaOrdenDetalleGuiaRemision && this.isPermisoOrdenDetalleGuiaRemision));			
			//this.jMenuItemDetalleMostrarOcultarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaOrdenDetalleGuiaRemision && this.isPermisoOrdenDetalleGuiaRemision));			
			this.jMenuItemNuevoRelacionesDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision && this.isPermisoNuevoDetalleGuiaRemision));			
			this.jMenuItemNuevoGuardarCambiosDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaNuevoDetalleGuiaRemision && this.isPermisoNuevoDetalleGuiaRemision && this.isPermisoGuardarCambiosDetalleGuiaRemision));									
			
			if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jMenuItemModificarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaModificarDetalleGuiaRemision && this.isPermisoActualizarDetalleGuiaRemision));	
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jMenuItemActualizarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaActualizarDetalleGuiaRemision && this.isPermisoActualizarDetalleGuiaRemision));	
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jMenuItemEliminarDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaEliminarDetalleGuiaRemision && this.isPermisoEliminarDetalleGuiaRemision));
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jMenuItemCancelarDetalleGuiaRemision.setVisible(this.isVisibilidadCeldaCancelarDetalleGuiaRemision);				
			}
			
			this.jMenuItemGuardarCambiosDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaGuardarDetalleGuiaRemision && this.isPermisoGuardarCambiosDetalleGuiaRemision));						
			this.jMenuItemGuardarCambiosTablaDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaGuardarCambiosDetalleGuiaRemision && this.isPermisoGuardarCambiosDetalleGuiaRemision));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoDetalleGuiaRemision=this.jButtonNuevoDetalleGuiaRemision.isVisible();
			this.isVisibilidadCeldaDuplicarDetalleGuiaRemision=this.jButtonDuplicarDetalleGuiaRemision.isVisible();
			this.isVisibilidadCeldaCopiarDetalleGuiaRemision=this.jButtonCopiarDetalleGuiaRemision.isVisible();
			this.isVisibilidadCeldaVerFormDetalleGuiaRemision=this.jButtonVerFormDetalleGuiaRemision.isVisible();
			
			this.isVisibilidadCeldaOrdenDetalleGuiaRemision=this.jButtonAbrirOrderByDetalleGuiaRemision.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision=this.jButtonNuevoRelacionesDetalleGuiaRemision.isVisible();
			this.isVisibilidadCeldaModificarDetalleGuiaRemision=this.jButtonModificarDetalleGuiaRemision.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
			this.isVisibilidadCeldaActualizarDetalleGuiaRemision=this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonActualizarDetalleGuiaRemision.isVisible();
			this.isVisibilidadCeldaEliminarDetalleGuiaRemision=this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonEliminarDetalleGuiaRemision.isVisible();
			this.isVisibilidadCeldaCancelarDetalleGuiaRemision=this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonCancelarDetalleGuiaRemision.isVisible();
			this.isVisibilidadCeldaGuardarDetalleGuiaRemision=this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonGuardarCambiosDetalleGuiaRemision.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosDetalleGuiaRemision=this.jButtonGuardarCambiosTablaDetalleGuiaRemision.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoDetalleGuiaRemision=this.jButtonNuevoToolBarDetalleGuiaRemision.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision=this.jButtonNuevoRelacionesToolBarDetalleGuiaRemision.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
			this.isVisibilidadCeldaModificarDetalleGuiaRemision=this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonModificarToolBarDetalleGuiaRemision.isVisible();
			this.isVisibilidadCeldaActualizarDetalleGuiaRemision=this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonActualizarToolBarDetalleGuiaRemision.isVisible();
			this.isVisibilidadCeldaEliminarDetalleGuiaRemision=this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonEliminarToolBarDetalleGuiaRemision.isVisible();
			this.isVisibilidadCeldaCancelarDetalleGuiaRemision=this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonCancelarToolBarDetalleGuiaRemision.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetalleGuiaRemision=this.jButtonGuardarCambiosToolBarDetalleGuiaRemision.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetalleGuiaRemision=this.jButtonGuardarCambiosTablaToolBarDetalleGuiaRemision.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoDetalleGuiaRemision=this.jMenuItemNuevoDetalleGuiaRemision.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision=this.jMenuItemNuevoRelacionesDetalleGuiaRemision.isVisible();
			
			if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
			this.isVisibilidadCeldaModificarDetalleGuiaRemision=this.jInternalFrameDetalleFormDetalleGuiaRemision.jMenuItemModificarDetalleGuiaRemision.isVisible();
			this.isVisibilidadCeldaActualizarDetalleGuiaRemision=this.jInternalFrameDetalleFormDetalleGuiaRemision.jMenuItemActualizarDetalleGuiaRemision.isVisible();
			this.isVisibilidadCeldaEliminarDetalleGuiaRemision=this.jInternalFrameDetalleFormDetalleGuiaRemision.jMenuItemEliminarDetalleGuiaRemision.isVisible();
			this.isVisibilidadCeldaCancelarDetalleGuiaRemision=this.jInternalFrameDetalleFormDetalleGuiaRemision.jMenuItemCancelarDetalleGuiaRemision.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetalleGuiaRemision=this.jMenuItemGuardarCambiosDetalleGuiaRemision.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetalleGuiaRemision=this.jMenuItemGuardarCambiosTablaDetalleGuiaRemision.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesDetalleGuiaRemision(Boolean esInicializar) {
		if(DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {			
			if(this.detalleguiaremisionSessionBean.getConGuardarRelaciones()) {
				//if(this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesDetalleGuiaRemision();
			}
			
			this.inicializarActualizarBindingBotonesManualDetalleGuiaRemision(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualDetalleGuiaRemision() {
		this.jButtonNuevoDetalleGuiaRemision.setVisible(this.isPermisoNuevoDetalleGuiaRemision);			
		this.jButtonDuplicarDetalleGuiaRemision.setVisible(this.isPermisoDuplicarDetalleGuiaRemision);			
		this.jButtonCopiarDetalleGuiaRemision.setVisible(this.isPermisoCopiarDetalleGuiaRemision);			
		this.jButtonVerFormDetalleGuiaRemision.setVisible(this.isPermisoVerFormDetalleGuiaRemision);			
		
		this.jButtonAbrirOrderByDetalleGuiaRemision.setVisible(this.isPermisoOrdenDetalleGuiaRemision);					
		
		this.jButtonNuevoRelacionesDetalleGuiaRemision.setVisible(this.isPermisoNuevoDetalleGuiaRemision);			
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonModificarDetalleGuiaRemision.setVisible(this.isPermisoActualizarDetalleGuiaRemision);	
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonActualizarDetalleGuiaRemision.setVisible(this.isPermisoActualizarDetalleGuiaRemision);	
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonEliminarDetalleGuiaRemision.setVisible(this.isPermisoEliminarDetalleGuiaRemision);
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonCancelarDetalleGuiaRemision.setVisible(this.isVisibilidadCeldaCancelarDetalleGuiaRemision);						
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonGuardarCambiosDetalleGuiaRemision.setVisible(this.isPermisoGuardarCambiosDetalleGuiaRemision);							
		}
		
		this.jButtonGuardarCambiosTablaDetalleGuiaRemision.setVisible(this.isPermisoActualizarDetalleGuiaRemision);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleDetalleGuiaRemision() {
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonModificarDetalleGuiaRemision.setVisible(this.isPermisoActualizarDetalleGuiaRemision);	
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonActualizarDetalleGuiaRemision.setVisible(this.isPermisoActualizarDetalleGuiaRemision);	
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonEliminarDetalleGuiaRemision.setVisible(this.isPermisoEliminarDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonCancelarDetalleGuiaRemision.setVisible(this.isVisibilidadCeldaCancelarDetalleGuiaRemision);							
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonGuardarCambiosDetalleGuiaRemision.setVisible((this.isVisibilidadCeldaGuardarDetalleGuiaRemision && this.isPermisoGuardarCambiosDetalleGuiaRemision));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosDetalleGuiaRemision() {
		if(DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualDetalleGuiaRemision();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesDetalleGuiaRemision() {
	}
	
	public void jTableDatosDetalleGuiaRemisionListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarDetalleGuiaRemision(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.detalleguiaremision.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaDetalleGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebDetalleGuiaRemision(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.detalleguiaremisionLogic.getConnexion());

				if(this.detalleguiaremision.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.detalleguiaremision.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleGuiaRemision=(TitledBorder)this.jScrollPanelDatosDetalleGuiaRemision.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderDetalleGuiaRemision.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.detalleguiaremision.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalDetalleGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebDetalleGuiaRemision(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.detalleguiaremisionLogic.getConnexion());

				if(this.detalleguiaremision.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.detalleguiaremision.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleGuiaRemision=(TitledBorder)this.jScrollPanelDatosDetalleGuiaRemision.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderDetalleGuiaRemision.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.detalleguiaremision.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioDetalleGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebDetalleGuiaRemision(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.detalleguiaremisionLogic.getConnexion());

				if(this.detalleguiaremision.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.detalleguiaremision.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleGuiaRemision=(TitledBorder)this.jScrollPanelDatosDetalleGuiaRemision.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderDetalleGuiaRemision.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.detalleguiaremision.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoDetalleGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebDetalleGuiaRemision(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.detalleguiaremisionLogic.getConnexion());

				if(this.detalleguiaremision.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.detalleguiaremision.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleGuiaRemision=(TitledBorder)this.jScrollPanelDatosDetalleGuiaRemision.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderDetalleGuiaRemision.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.detalleguiaremision.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_guia_remisionDetalleGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoguiaremision=true;

			idTienePermisoguiaremision=this.tienePermisosUsuarioEnPaginaWebDetalleGuiaRemision(GuiaRemisionConstantesFunciones.CLASSNAME);

			if(idTienePermisoguiaremision) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);

				this.guiaremisionBeanSwingJInternalFrame=new GuiaRemisionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.guiaremisionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.guiaremisionBeanSwingJInternalFrame.getGuiaRemisionLogic().setConnexion(this.detalleguiaremisionLogic.getConnexion());

				if(this.detalleguiaremision.getid_guia_remision()!=null) {
					this.guiaremisionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.guiaremisionBeanSwingJInternalFrame.setIdActual(this.detalleguiaremision.getid_guia_remision());
					this.guiaremisionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.guiaremisionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.guiaremisionBeanSwingJInternalFrame.inicializarActualizarBindingTablaGuiaRemision();
				}

				JInternalFrameBase jinternalFrame =this.guiaremisionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleGuiaRemision=(TitledBorder)this.jScrollPanelDatosDetalleGuiaRemision.getBorder();
				TitledBorder titledBorderguiaremision=(TitledBorder)this.guiaremisionBeanSwingJInternalFrame.jScrollPanelDatosGuiaRemision.getBorder();

				titledBorderguiaremision.setTitle(titledBorderDetalleGuiaRemision.getTitle() + " -> Guia Remision");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_guia_remisionDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getid_guia_remision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_guia_remision = "+this.detalleguiaremision.getid_guia_remision().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bodegaDetalleGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobodega=true;

			idTienePermisobodega=this.tienePermisosUsuarioEnPaginaWebDetalleGuiaRemision(BodegaConstantesFunciones.CLASSNAME);

			if(idTienePermisobodega) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);

				this.bodegaBeanSwingJInternalFrame=new BodegaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bodegaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bodegaBeanSwingJInternalFrame.getBodegaLogic().setConnexion(this.detalleguiaremisionLogic.getConnexion());

				if(this.detalleguiaremision.getid_bodega()!=null) {
					this.bodegaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bodegaBeanSwingJInternalFrame.setIdActual(this.detalleguiaremision.getid_bodega());
					this.bodegaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodega();
				}

				JInternalFrameBase jinternalFrame =this.bodegaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleGuiaRemision=(TitledBorder)this.jScrollPanelDatosDetalleGuiaRemision.getBorder();
				TitledBorder titledBorderbodega=(TitledBorder)this.bodegaBeanSwingJInternalFrame.jScrollPanelDatosBodega.getBorder();

				titledBorderbodega.setTitle(titledBorderDetalleGuiaRemision.getTitle() + " -> Bodega");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bodegaDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getid_bodega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_bodega = "+this.detalleguiaremision.getid_bodega().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_productoDetalleGuiaRemisionActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.productoBeanSwingJInternalFrame=new ProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.productoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.productoBeanSwingJInternalFrame.sTipoBusqueda="Producto";

			if(!this.sFinalQueryGeneral_producto.equals("")) {
				this.productoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_producto);
				this.productoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.productoBeanSwingJInternalFrame.procesarBusqueda(this.productoBeanSwingJInternalFrame.sAccionBusqueda);
				this.productoBeanSwingJInternalFrame.inicializarActualizarBindingProducto(false);
			}

			if(!this.sFinalQueryComboProducto.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.productoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetalleGuiaRemision=null;
			TitledBorder titledBorderproducto=null;

			if(!this.jScrollPanelDatosDetalleGuiaRemision.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetalleGuiaRemision=(TitledBorder)this.jScrollPanelDatosDetalleGuiaRemision.getBorder();
				titledBorderproducto=(TitledBorder)this.productoBeanSwingJInternalFrame.jScrollPanelDatosProducto.getBorder();

				titledBorderproducto.setTitle(titledBorderDetalleGuiaRemision.getTitle() + " -> Producto");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_productoDetalleGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoproducto=true;

			idTienePermisoproducto=this.tienePermisosUsuarioEnPaginaWebDetalleGuiaRemision(ProductoConstantesFunciones.CLASSNAME);

			if(idTienePermisoproducto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);

				this.productoBeanSwingJInternalFrame=new ProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.productoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.productoBeanSwingJInternalFrame.getProductoLogic().setConnexion(this.detalleguiaremisionLogic.getConnexion());

				if(this.detalleguiaremision.getid_producto()!=null) {
					this.productoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.productoBeanSwingJInternalFrame.setIdActual(this.detalleguiaremision.getid_producto());
					this.productoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.productoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.productoBeanSwingJInternalFrame.inicializarActualizarBindingTablaProducto();
				}

				JInternalFrameBase jinternalFrame =this.productoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleGuiaRemision=(TitledBorder)this.jScrollPanelDatosDetalleGuiaRemision.getBorder();
				TitledBorder titledBorderproducto=(TitledBorder)this.productoBeanSwingJInternalFrame.jScrollPanelDatosProducto.getBorder();

				titledBorderproducto.setTitle(titledBorderDetalleGuiaRemision.getTitle() + " -> Producto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_productoDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getid_producto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_producto = "+this.detalleguiaremision.getid_producto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_unidadDetalleGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisounidad=true;

			idTienePermisounidad=this.tienePermisosUsuarioEnPaginaWebDetalleGuiaRemision(UnidadConstantesFunciones.CLASSNAME);

			if(idTienePermisounidad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);

				this.unidadBeanSwingJInternalFrame=new UnidadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.unidadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.unidadBeanSwingJInternalFrame.getUnidadLogic().setConnexion(this.detalleguiaremisionLogic.getConnexion());

				if(this.detalleguiaremision.getid_unidad()!=null) {
					this.unidadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.unidadBeanSwingJInternalFrame.setIdActual(this.detalleguiaremision.getid_unidad());
					this.unidadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.unidadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.unidadBeanSwingJInternalFrame.inicializarActualizarBindingTablaUnidad();
				}

				JInternalFrameBase jinternalFrame =this.unidadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleGuiaRemision=(TitledBorder)this.jScrollPanelDatosDetalleGuiaRemision.getBorder();
				TitledBorder titledBorderunidad=(TitledBorder)this.unidadBeanSwingJInternalFrame.jScrollPanelDatosUnidad.getBorder();

				titledBorderunidad.setTitle(titledBorderDetalleGuiaRemision.getTitle() + " -> Unidad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_unidadDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getid_unidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_unidad = "+this.detalleguiaremision.getid_unidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_centro_costoDetalleGuiaRemisionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocentrocosto=true;

			idTienePermisocentrocosto=this.tienePermisosUsuarioEnPaginaWebDetalleGuiaRemision(CentroCostoConstantesFunciones.CLASSNAME);

			if(idTienePermisocentrocosto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetalleGuiaRemision.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetalleGuiaRemision.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);

				this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.centrocostoBeanSwingJInternalFrame.getCentroCostoLogic().setConnexion(this.detalleguiaremisionLogic.getConnexion());

				if(this.detalleguiaremision.getid_centro_costo()!=null) {
					this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.centrocostoBeanSwingJInternalFrame.setIdActual(this.detalleguiaremision.getid_centro_costo());
					this.centrocostoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCentroCosto();
				}

				JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetalleGuiaRemision=(TitledBorder)this.jScrollPanelDatosDetalleGuiaRemision.getBorder();
				TitledBorder titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderDetalleGuiaRemision.getTitle() + " -> Centro Costo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_centro_costoDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getid_centro_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_centro_costo = "+this.detalleguiaremision.getid_centro_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_envasesDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getcantidad_envases()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_envases = "+this.detalleguiaremision.getcantidad_envases().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidad_auxiliarDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getcantidad_auxiliar()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad_auxiliar = "+this.detalleguiaremision.getcantidad_auxiliar().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.detalleguiaremision.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidadDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getcantidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad = "+this.detalleguiaremision.getcantidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmontoDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getmonto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where monto = "+this.detalleguiaremision.getmonto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonprecioDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getprecio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where precio = "+this.detalleguiaremision.getprecio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcentaje_descuentoDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getporcentaje_descuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcentaje_descuento = "+this.detalleguiaremision.getporcentaje_descuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuentoDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getdescuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento = "+this.detalleguiaremision.getdescuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuento2DetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getdescuento2()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento2 = "+this.detalleguiaremision.getdescuento2().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuento3DetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getdescuento3()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento3 = "+this.detalleguiaremision.getdescuento3().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcentaje_ivaDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getporcentaje_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcentaje_iva = "+this.detalleguiaremision.getporcentaje_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonivaDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getiva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where iva = "+this.detalleguiaremision.getiva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_descuentoDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.gettotal_descuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_descuento = "+this.detalleguiaremision.gettotal_descuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_impuestoDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.gettotal_impuesto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_impuesto = "+this.detalleguiaremision.gettotal_impuesto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsub_totalDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getsub_total()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where sub_total = "+this.detalleguiaremision.getsub_total().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotalDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.gettotal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total = "+this.detalleguiaremision.gettotal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonloteDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getlote()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where lote like '%"+this.detalleguiaremision.getlote()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonlote_clienteDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getlote_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where lote_cliente like '%"+this.detalleguiaremision.getlote_cliente()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonorden_compraDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getorden_compra()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where orden_compra like '%"+this.detalleguiaremision.getorden_compra()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonareaDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getarea()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where area like '%"+this.detalleguiaremision.getarea()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmedidasDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getmedidas()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where medidas like '%"+this.detalleguiaremision.getmedidas()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonacabadoDetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getacabado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where acabado like '%"+this.detalleguiaremision.getacabado()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonacabado2DetalleGuiaRemisionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.getdetalleguiaremision(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detalleguiaremision==null) {
						this.detalleguiaremision = new DetalleGuiaRemision();
					}

					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);
				}

				if(this.detalleguiaremision.getacabado2()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where acabado2 like '%"+this.detalleguiaremision.getacabado2()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetalleGuiaRemision(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdBodegaDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleGuiaRemision(false,false);

			this.getDetalleGuiaRemisionsFK_IdBodega();

			this.inicializarActualizarBindingDetalleGuiaRemision(false);

			//if(DetalleGuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCentroCostoDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleGuiaRemision(false,false);

			this.getDetalleGuiaRemisionsFK_IdCentroCosto();

			this.inicializarActualizarBindingDetalleGuiaRemision(false);

			//if(DetalleGuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleGuiaRemision(false,false);

			this.getDetalleGuiaRemisionsFK_IdEjercicio();

			this.inicializarActualizarBindingDetalleGuiaRemision(false);

			//if(DetalleGuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleGuiaRemision(false,false);

			this.getDetalleGuiaRemisionsFK_IdEmpresa();

			this.inicializarActualizarBindingDetalleGuiaRemision(false);

			//if(DetalleGuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdGuiaRemisionDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleGuiaRemision(false,false);

			this.getDetalleGuiaRemisionsFK_IdGuiaRemision();

			this.inicializarActualizarBindingDetalleGuiaRemision(false);

			//if(DetalleGuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleGuiaRemision(false,false);

			this.getDetalleGuiaRemisionsFK_IdPeriodo();

			this.inicializarActualizarBindingDetalleGuiaRemision(false);

			//if(DetalleGuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdProductoDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleGuiaRemision(false,false);

			this.getDetalleGuiaRemisionsFK_IdProducto();

			this.inicializarActualizarBindingDetalleGuiaRemision(false);

			//if(DetalleGuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleGuiaRemision(false,false);

			this.getDetalleGuiaRemisionsFK_IdSucursal();

			this.inicializarActualizarBindingDetalleGuiaRemision(false);

			//if(DetalleGuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUnidadDetalleGuiaRemisionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetalleGuiaRemision(false,false);

			this.getDetalleGuiaRemisionsFK_IdUnidad();

			this.inicializarActualizarBindingDetalleGuiaRemision(false);

			//if(DetalleGuiaRemisionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detalleguiaremisionLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameDetalleGuiaRemision() {
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
			this.jInternalFrameDetalleFormDetalleGuiaRemision.setVisible(false);	    			
			this.jInternalFrameDetalleFormDetalleGuiaRemision.dispose();
			this.jInternalFrameDetalleFormDetalleGuiaRemision=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoDetalleGuiaRemision!=null) {
			this.jInternalFrameReporteDinamicoDetalleGuiaRemision.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoDetalleGuiaRemision.dispose();
			this.jInternalFrameReporteDinamicoDetalleGuiaRemision=null;
		}
		
		if(this.jInternalFrameImportacionDetalleGuiaRemision!=null) {
			this.jInternalFrameImportacionDetalleGuiaRemision.setVisible(false);	    			
			this.jInternalFrameImportacionDetalleGuiaRemision.dispose();
			this.jInternalFrameImportacionDetalleGuiaRemision=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessDetalleGuiaRemision();
			
			DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
			
			
			if(sTipo.equals("NuevoDetalleGuiaRemision")) {
				jButtonNuevoDetalleGuiaRemisionActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarDetalleGuiaRemision")) {
				jButtonDuplicarDetalleGuiaRemisionActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarDetalleGuiaRemision")) {
				jButtonCopiarDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("VerFormDetalleGuiaRemision")) {
				jButtonVerFormDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarDetalleGuiaRemision")) {
				jButtonNuevoDetalleGuiaRemisionActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarDetalleGuiaRemision")) {
				jButtonDuplicarDetalleGuiaRemisionActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoDetalleGuiaRemision")) {
				jButtonNuevoDetalleGuiaRemisionActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarDetalleGuiaRemision")) {
				jButtonDuplicarDetalleGuiaRemisionActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesDetalleGuiaRemision")) {
				jButtonNuevoDetalleGuiaRemisionActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarDetalleGuiaRemision")) {
				jButtonNuevoDetalleGuiaRemisionActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesDetalleGuiaRemision")) {
				jButtonNuevoDetalleGuiaRemisionActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarDetalleGuiaRemision")) {
				jButtonModificarDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarDetalleGuiaRemision")) {
				jButtonModificarDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarDetalleGuiaRemision")) {
				jButtonModificarDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("ActualizarDetalleGuiaRemision")) {
				jButtonActualizarDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarDetalleGuiaRemision")) {
				jButtonActualizarDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarDetalleGuiaRemision")) {
				jButtonActualizarDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("EliminarDetalleGuiaRemision")) {
				jButtonEliminarDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarDetalleGuiaRemision")) {
				jButtonEliminarDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarDetalleGuiaRemision")) {
				jButtonEliminarDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("CancelarDetalleGuiaRemision")) {
				jButtonCancelarDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarDetalleGuiaRemision")) {
				jButtonCancelarDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarDetalleGuiaRemision")) {
				jButtonCancelarDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("CerrarDetalleGuiaRemision")) {
				jButtonCerrarDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarDetalleGuiaRemision")) {
				jButtonCerrarDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarDetalleGuiaRemision")) {
				jButtonCerrarDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarDetalleGuiaRemision")) {
				jButtonMostrarOcultarDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarDetalleGuiaRemision")) {
				jButtonCancelarDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosDetalleGuiaRemision")) {
				jButtonGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarDetalleGuiaRemision")) {
				jButtonGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarDetalleGuiaRemision")) {
				jButtonCopiarDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarDetalleGuiaRemision")) {
				jButtonVerFormDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosDetalleGuiaRemision")) {
				jButtonGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarDetalleGuiaRemision")) {
				jButtonCopiarDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormDetalleGuiaRemision")) {
				jButtonVerFormDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaDetalleGuiaRemision")) {
				jButtonGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarDetalleGuiaRemision")) {
				jButtonGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaDetalleGuiaRemision")) {
				jButtonGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionDetalleGuiaRemision")) {
				jButtonRecargarInformacionDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarDetalleGuiaRemision")) {
				jButtonRecargarInformacionDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionDetalleGuiaRemision")) {
				jButtonRecargarInformacionDetalleGuiaRemisionActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresDetalleGuiaRemision")) {
				jButtonAnterioresDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarDetalleGuiaRemision")) {
				jButtonAnterioresDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreDetalleGuiaRemision")) {
				jButtonAnterioresDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("SiguientesDetalleGuiaRemision")) {
				jButtonSiguientesDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarDetalleGuiaRemision")) {
				jButtonSiguientesDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesDetalleGuiaRemision")) {
				jButtonSiguientesDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByDetalleGuiaRemision") || sTipo.equals("MenuItemDetalleAbrirOrderByDetalleGuiaRemision")) {
				jButtonAbrirOrderByDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarDetalleGuiaRemision") || sTipo.equals("MenuItemDetalleMostrarOcultarDetalleGuiaRemision")) {
				jButtonMostrarOcultarDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosDetalleGuiaRemision")) {
				jButtonNuevoGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarDetalleGuiaRemision")) {
				jButtonNuevoGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosDetalleGuiaRemision")) {
				jButtonNuevoGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoDetalleGuiaRemision")) {
				jButtonCerrarReporteDinamicoDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoDetalleGuiaRemision")) {
				jButtonGenerarReporteDinamicoDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoDetalleGuiaRemision")) {
				
				jButtonGenerarExcelReporteDinamicoDetalleGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionDetalleGuiaRemision")) {
				jButtonCerrarImportacionDetalleGuiaRemisionActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionDetalleGuiaRemision")) {
				
				jButtonGenerarImportacionDetalleGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionDetalleGuiaRemision")) {
				
				jButtonAbrirImportacionDetalleGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesDetalleGuiaRemision")) {
				jComboBoxTiposAccionesDetalleGuiaRemisionActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesDetalleGuiaRemision")) {
				jComboBoxTiposRelacionesDetalleGuiaRemisionActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioDetalleGuiaRemision")) {
				jComboBoxTiposAccionesDetalleGuiaRemisionActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarDetalleGuiaRemision")) {
				
				jComboBoxTiposSeleccionarDetalleGuiaRemisionActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralDetalleGuiaRemision")) {
				jTextFieldValorCampoGeneralDetalleGuiaRemisionActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByDetalleGuiaRemision")) {
				jButtonAbrirOrderByDetalleGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarDetalleGuiaRemision")) {
				jButtonAbrirOrderByDetalleGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByDetalleGuiaRemision")) {
				jButtonCerrarOrderByDetalleGuiaRemisionActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetalleGuiaRemisionBusqueda")) {
				this.jButtonidDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetalleGuiaRemisionUpdate")) {
				this.jButtonid_empresaDetalleGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetalleGuiaRemisionBusqueda")) {
				this.jButtonid_empresaDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetalleGuiaRemisionUpdate")) {
				this.jButtonid_sucursalDetalleGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetalleGuiaRemisionBusqueda")) {
				this.jButtonid_sucursalDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioDetalleGuiaRemisionUpdate")) {
				this.jButtonid_ejercicioDetalleGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioDetalleGuiaRemisionBusqueda")) {
				this.jButtonid_ejercicioDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoDetalleGuiaRemisionUpdate")) {
				this.jButtonid_periodoDetalleGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoDetalleGuiaRemisionBusqueda")) {
				this.jButtonid_periodoDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_guia_remisionDetalleGuiaRemisionUpdate")) {
				this.jButtonid_guia_remisionDetalleGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_guia_remisionDetalleGuiaRemisionBusqueda")) {
				this.jButtonid_guia_remisionDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaDetalleGuiaRemisionUpdate")) {
				this.jButtonid_bodegaDetalleGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaDetalleGuiaRemisionBusqueda")) {
				this.jButtonid_bodegaDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_productoDetalleGuiaRemision")) {
				this.jButtonid_productoDetalleGuiaRemisionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_productoDetalleGuiaRemisionUpdate")) {
				this.jButtonid_productoDetalleGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_productoDetalleGuiaRemisionBusqueda")) {
				this.jButtonid_productoDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidadDetalleGuiaRemisionUpdate")) {
				this.jButtonid_unidadDetalleGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidadDetalleGuiaRemisionBusqueda")) {
				this.jButtonid_unidadDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoDetalleGuiaRemisionUpdate")) {
				this.jButtonid_centro_costoDetalleGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoDetalleGuiaRemisionBusqueda")) {
				this.jButtonid_centro_costoDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_envasesDetalleGuiaRemisionBusqueda")) {
				this.jButtoncantidad_envasesDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_auxiliarDetalleGuiaRemisionBusqueda")) {
				this.jButtoncantidad_auxiliarDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionDetalleGuiaRemisionBusqueda")) {
				this.jButtondescripcionDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidadDetalleGuiaRemisionBusqueda")) {
				this.jButtoncantidadDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("montoDetalleGuiaRemisionBusqueda")) {
				this.jButtonmontoDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precioDetalleGuiaRemisionBusqueda")) {
				this.jButtonprecioDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_descuentoDetalleGuiaRemisionBusqueda")) {
				this.jButtonporcentaje_descuentoDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuentoDetalleGuiaRemisionBusqueda")) {
				this.jButtondescuentoDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento2DetalleGuiaRemisionBusqueda")) {
				this.jButtondescuento2DetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento3DetalleGuiaRemisionBusqueda")) {
				this.jButtondescuento3DetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_ivaDetalleGuiaRemisionBusqueda")) {
				this.jButtonporcentaje_ivaDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaDetalleGuiaRemisionBusqueda")) {
				this.jButtonivaDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_descuentoDetalleGuiaRemisionBusqueda")) {
				this.jButtontotal_descuentoDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_impuestoDetalleGuiaRemisionBusqueda")) {
				this.jButtontotal_impuestoDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sub_totalDetalleGuiaRemisionBusqueda")) {
				this.jButtonsub_totalDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalDetalleGuiaRemisionBusqueda")) {
				this.jButtontotalDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("loteDetalleGuiaRemisionBusqueda")) {
				this.jButtonloteDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("lote_clienteDetalleGuiaRemisionBusqueda")) {
				this.jButtonlote_clienteDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("orden_compraDetalleGuiaRemisionBusqueda")) {
				this.jButtonorden_compraDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("areaDetalleGuiaRemisionBusqueda")) {
				this.jButtonareaDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("medidasDetalleGuiaRemisionBusqueda")) {
				this.jButtonmedidasDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("acabadoDetalleGuiaRemisionBusqueda")) {
				this.jButtonacabadoDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("acabado2DetalleGuiaRemisionBusqueda")) {
				this.jButtonacabado2DetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_productoDetalleGuiaRemision")) {
				this.jButtonid_productoDetalleGuiaRemisionActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdBodegaDetalleGuiaRemision")) {
				this.jButtonFK_IdBodegaDetalleGuiaRemisionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCentroCostoDetalleGuiaRemision")) {
				this.jButtonFK_IdCentroCostoDetalleGuiaRemisionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdGuiaRemisionDetalleGuiaRemision")) {
				this.jButtonFK_IdGuiaRemisionDetalleGuiaRemisionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdProductoDetalleGuiaRemision")) {
				this.jButtonFK_IdProductoDetalleGuiaRemisionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdUnidadDetalleGuiaRemision")) {
				this.jButtonFK_IdUnidadDetalleGuiaRemisionActionPerformed(evt);
			}
			
			;
			
			
			DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessDetalleGuiaRemision();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleGuiaRemisionActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleguiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleguiaremision);
				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
				
				


				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleGuiaRemision.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleGuiaRemision.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			DetalleGuiaRemision detalleguiaremisionLocal=null;
			
			if(!this.getEsControlTabla()) {
				detalleguiaremisionLocal=this.detalleguiaremision;
			} else {
				detalleguiaremisionLocal=this.detalleguiaremisionAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleguiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleguiaremision);
				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
							
				
				


				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleGuiaRemision.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleGuiaRemision.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleGuiaRemisionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionAnterior =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleguiaremisionAnterior =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleGuiaRemisionActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleguiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleguiaremision);
				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
								
						
				


				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleGuiaRemision.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleGuiaRemision.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleguiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleguiaremision);
				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
								
				
				


				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleGuiaRemision.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleGuiaRemision.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleGuiaRemisionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionAnterior =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleguiaremisionAnterior =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleguiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleguiaremision);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleGuiaRemisionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionAnterior =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleguiaremisionAnterior =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleGuiaRemisionActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleguiaremision);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detalleguiaremision);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleguiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleguiaremision);
				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
							
				
				


				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleGuiaRemision.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleGuiaRemision.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleGuiaRemisionActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremisionAnterior =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detalleguiaremisionAnterior =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleGuiaRemisionActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleguiaremision);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detalleguiaremision);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleguiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleguiaremision);
				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
								
				
				


				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleGuiaRemision.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleGuiaRemision.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleGuiaRemisionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionAnterior =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleguiaremisionAnterior =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleGuiaRemisionActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleguiaremision);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detalleguiaremision);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleGuiaRemisionActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleguiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleguiaremision);
				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosDetalleGuiaRemision")) {
					jCheckBoxSeleccionarTodosDetalleGuiaRemisionItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosDetalleGuiaRemision")) {
					jCheckBoxSeleccionadosDetalleGuiaRemisionItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarDetalleGuiaRemision")) {
					
				}
				
				


				
				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleGuiaRemision.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleGuiaRemision.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleguiaremision);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.detalleguiaremision);
				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
												
				
				


				
				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleGuiaRemision.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleGuiaRemision.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleGuiaRemisionActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detalleguiaremisionAnterior =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detalleguiaremisionAnterior =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleGuiaRemisionActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleguiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleguiaremision);
				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
				
				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			if(sTipo.equals("id_bodegaDetalleGuiaRemision")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision;
				}

				if(this.detalleguiaremisionSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleGuiaRemisionConstantesFunciones.getClassesRelationshipsOfDetalleGuiaRemision(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleGuiaRemision(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision,"FK_IdBodega");
				//recargarFormDetalleGuiaRemisionBodega(jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoDetalleGuiaRemision")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision;
				}

				if(this.detalleguiaremisionSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleGuiaRemisionConstantesFunciones.getClassesRelationshipsOfDetalleGuiaRemision(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleGuiaRemision(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetalleGuiaRemision")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetalleGuiaRemision,"FK_IdProducto");
				//recargarFormDetalleGuiaRemisionProducto(jComboBoxid_productoFK_IdProductoDetalleGuiaRemision,"FK_IdProducto");
			}
			
			DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetalleGuiaRemisionActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleguiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleguiaremision);
				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_bodegaDetalleGuiaRemision")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision;
				}

				if(this.detalleguiaremisionSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleGuiaRemisionConstantesFunciones.getClassesRelationshipsOfDetalleGuiaRemision(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleGuiaRemision(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision,"FK_IdBodega");
				//recargarFormDetalleGuiaRemisionBodega(jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoDetalleGuiaRemision")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision;
				}

				if(this.detalleguiaremisionSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleGuiaRemisionConstantesFunciones.getClassesRelationshipsOfDetalleGuiaRemision(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleGuiaRemision(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetalleGuiaRemision")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetalleGuiaRemision,"FK_IdProducto");
				//recargarFormDetalleGuiaRemisionProducto(jComboBoxid_productoFK_IdProductoDetalleGuiaRemision,"FK_IdProducto");
			}
				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleGuiaRemision.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleGuiaRemision.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detalleguiaremision);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detalleguiaremision);
				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_bodegaDetalleGuiaRemision")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision;
				}

				if(this.detalleguiaremisionSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleGuiaRemisionConstantesFunciones.getClassesRelationshipsOfDetalleGuiaRemision(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleGuiaRemision(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision,"FK_IdBodega");
				//recargarFormDetalleGuiaRemisionBodega(jComboBoxid_bodegaFK_IdBodegaDetalleGuiaRemision,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoDetalleGuiaRemision")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision;
				}

				if(this.detalleguiaremisionSessionBean.getConGuardarRelaciones()) {
					//classes=DetalleGuiaRemisionConstantesFunciones.getClassesRelationshipsOfDetalleGuiaRemision(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetalleGuiaRemision(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetalleGuiaRemision")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetalleGuiaRemision,"FK_IdProducto");
				//recargarFormDetalleGuiaRemisionProducto(jComboBoxid_productoFK_IdProductoDetalleGuiaRemision,"FK_IdProducto");
			}
				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetalleGuiaRemision.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetalleGuiaRemision.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetalleGuiaRemisionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detalleguiaremisionAnterior =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detalleguiaremisionAnterior =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarDetalleGuiaRemision")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosDetalleGuiaRemisionListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosDetalleGuiaRemision.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.detalleguiaremision =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.detalleguiaremision);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarDetalleGuiaRemision")) {
				
				}
				
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarDetalleGuiaRemision")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosDetalleGuiaRemision.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarDetalleGuiaRemision")) {
			
			}
			
			DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessDetalleGuiaRemision();
			
			DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
			
			if(sTipo.equals("NuevoDetalleGuiaRemision")) {
				jButtonNuevoDetalleGuiaRemisionActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarDetalleGuiaRemision")) {
				jButtonDuplicarDetalleGuiaRemisionActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarDetalleGuiaRemision")) {
				jButtonCopiarDetalleGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormDetalleGuiaRemision")) {
				jButtonVerFormDetalleGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesDetalleGuiaRemision")) {
				jButtonNuevoDetalleGuiaRemisionActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarDetalleGuiaRemision")) {
				jButtonModificarDetalleGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarDetalleGuiaRemision")) {
				jButtonActualizarDetalleGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarDetalleGuiaRemision")) {
				jButtonEliminarDetalleGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaDetalleGuiaRemision")) {
				jButtonGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarDetalleGuiaRemision")) {
				jButtonCancelarDetalleGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarDetalleGuiaRemision")) {
				jButtonCerrarDetalleGuiaRemisionActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosDetalleGuiaRemision")) {
				jButtonGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosDetalleGuiaRemision")) {
				jButtonNuevoGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByDetalleGuiaRemision")) {
				jButtonAbrirOrderByDetalleGuiaRemisionActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionDetalleGuiaRemision")) {
				jButtonRecargarInformacionDetalleGuiaRemisionActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresDetalleGuiaRemision")) {
				jButtonAnterioresDetalleGuiaRemisionActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesDetalleGuiaRemision")) {
				jButtonSiguientesDetalleGuiaRemisionActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetalleGuiaRemisionBusqueda")) {
				this.jButtonidDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetalleGuiaRemisionUpdate")) {
				this.jButtonid_empresaDetalleGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetalleGuiaRemisionBusqueda")) {
				this.jButtonid_empresaDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetalleGuiaRemisionUpdate")) {
				this.jButtonid_sucursalDetalleGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetalleGuiaRemisionBusqueda")) {
				this.jButtonid_sucursalDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioDetalleGuiaRemisionUpdate")) {
				this.jButtonid_ejercicioDetalleGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioDetalleGuiaRemisionBusqueda")) {
				this.jButtonid_ejercicioDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoDetalleGuiaRemisionUpdate")) {
				this.jButtonid_periodoDetalleGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoDetalleGuiaRemisionBusqueda")) {
				this.jButtonid_periodoDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_guia_remisionDetalleGuiaRemisionUpdate")) {
				this.jButtonid_guia_remisionDetalleGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_guia_remisionDetalleGuiaRemisionBusqueda")) {
				this.jButtonid_guia_remisionDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaDetalleGuiaRemisionUpdate")) {
				this.jButtonid_bodegaDetalleGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaDetalleGuiaRemisionBusqueda")) {
				this.jButtonid_bodegaDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_productoDetalleGuiaRemision")) {
				this.jButtonid_productoDetalleGuiaRemisionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_productoDetalleGuiaRemisionUpdate")) {
				this.jButtonid_productoDetalleGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_productoDetalleGuiaRemisionBusqueda")) {
				this.jButtonid_productoDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidadDetalleGuiaRemisionUpdate")) {
				this.jButtonid_unidadDetalleGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidadDetalleGuiaRemisionBusqueda")) {
				this.jButtonid_unidadDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoDetalleGuiaRemisionUpdate")) {
				this.jButtonid_centro_costoDetalleGuiaRemisionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoDetalleGuiaRemisionBusqueda")) {
				this.jButtonid_centro_costoDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_envasesDetalleGuiaRemisionBusqueda")) {
				this.jButtoncantidad_envasesDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidad_auxiliarDetalleGuiaRemisionBusqueda")) {
				this.jButtoncantidad_auxiliarDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionDetalleGuiaRemisionBusqueda")) {
				this.jButtondescripcionDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidadDetalleGuiaRemisionBusqueda")) {
				this.jButtoncantidadDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("montoDetalleGuiaRemisionBusqueda")) {
				this.jButtonmontoDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precioDetalleGuiaRemisionBusqueda")) {
				this.jButtonprecioDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_descuentoDetalleGuiaRemisionBusqueda")) {
				this.jButtonporcentaje_descuentoDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuentoDetalleGuiaRemisionBusqueda")) {
				this.jButtondescuentoDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento2DetalleGuiaRemisionBusqueda")) {
				this.jButtondescuento2DetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento3DetalleGuiaRemisionBusqueda")) {
				this.jButtondescuento3DetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcentaje_ivaDetalleGuiaRemisionBusqueda")) {
				this.jButtonporcentaje_ivaDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaDetalleGuiaRemisionBusqueda")) {
				this.jButtonivaDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_descuentoDetalleGuiaRemisionBusqueda")) {
				this.jButtontotal_descuentoDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_impuestoDetalleGuiaRemisionBusqueda")) {
				this.jButtontotal_impuestoDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sub_totalDetalleGuiaRemisionBusqueda")) {
				this.jButtonsub_totalDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalDetalleGuiaRemisionBusqueda")) {
				this.jButtontotalDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("loteDetalleGuiaRemisionBusqueda")) {
				this.jButtonloteDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("lote_clienteDetalleGuiaRemisionBusqueda")) {
				this.jButtonlote_clienteDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("orden_compraDetalleGuiaRemisionBusqueda")) {
				this.jButtonorden_compraDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("areaDetalleGuiaRemisionBusqueda")) {
				this.jButtonareaDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("medidasDetalleGuiaRemisionBusqueda")) {
				this.jButtonmedidasDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("acabadoDetalleGuiaRemisionBusqueda")) {
				this.jButtonacabadoDetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("acabado2DetalleGuiaRemisionBusqueda")) {
				this.jButtonacabado2DetalleGuiaRemisionBusquedaActionPerformed(evt);
			}
			
			DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessDetalleGuiaRemision();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameDetalleGuiaRemision")) {
				closingInternalFrameDetalleGuiaRemision();
				
			} else if(sTipo.equals("jButtonCancelarDetalleGuiaRemision")) {
				JInternalFrameBase jInternalFrameDetalleFormDetalleGuiaRemision = (JInternalFrameBase)evt.getSource();
	            	
	            DetalleGuiaRemisionBeanSwingJInternalFrame jInternalFrameParent=(DetalleGuiaRemisionBeanSwingJInternalFrame)jInternalFrameDetalleFormDetalleGuiaRemision.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarDetalleGuiaRemisionActionPerformed(null);
			}
			
			DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detalleguiaremision,new Object(),this.detalleguiaremisionParameterGeneral,this.detalleguiaremisionReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormDetalleGuiaRemision(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormDetalleGuiaRemision(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormDetalleGuiaRemision(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.detalleguiaremision)) {
			if(!esControlTabla) {
				if(DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);			
				}
				
				if(this.detalleguiaremisionSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detalleguiaremisionReturnGeneral=detalleguiaremisionLogic.procesarEventosDetalleGuiaRemisionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detalleguiaremisionLogic.getDetalleGuiaRemisions(),this.detalleguiaremision,this.detalleguiaremisionParameterGeneral,this.isEsNuevoDetalleGuiaRemision,classes);//this.detalleguiaremisionLogic.getDetalleGuiaRemision()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanDetalleGuiaRemision(this.detalleguiaremisionReturnGeneral,this.detalleguiaremisionBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.detalleguiaremisionSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanDetalleGuiaRemision(classes,this.detalleguiaremisionReturnGeneral,this.detalleguiaremisionBean,false);
					}
						
					if(this.detalleguiaremisionReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyDetalleGuiaRemision(this.detalleguiaremisionReturnGeneral.getDetalleGuiaRemision());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioDetalleGuiaRemision(this.detalleguiaremisionReturnGeneral.getDetalleGuiaRemision());	
					}
						
					if(this.detalleguiaremisionReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioDetalleGuiaRemision(this.detalleguiaremisionReturnGeneral.getDetalleGuiaRemision(),classes);//this.detalleguiaremisionBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioDetalleGuiaRemision(this.detalleguiaremision,classes);//this.detalleguiaremisionBean);									
				}
			
				if(DetalleGuiaRemisionJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualDetalleGuiaRemision(this.detalleguiaremision,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetalleGuiaRemision(this.detalleguiaremision);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.detalleguiaremisionAnterior!=null) {
						this.detalleguiaremision=this.detalleguiaremisionAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detalleguiaremisionReturnGeneral=detalleguiaremisionLogic.procesarEventosDetalleGuiaRemisionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detalleguiaremisionLogic.getDetalleGuiaRemisions(),this.detalleguiaremision,this.detalleguiaremisionParameterGeneral,this.isEsNuevoDetalleGuiaRemision,classes);//this.detalleguiaremisionLogic.getDetalleGuiaRemision()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detalleguiaremisionSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detalleguiaremisionSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.detalleguiaremisionReturnGeneral.getDetalleGuiaRemision(),detalleguiaremisionLogic.getDetalleGuiaRemisions());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.detalleguiaremisionReturnGeneral.getDetalleGuiaRemision(),this.detalleguiaremisions);
				}
				//ARCHITECTURE
				
				//this.jTableDatosDetalleGuiaRemision.repaint();
				
				//((AbstractTableModel) this.jTableDatosDetalleGuiaRemision.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosDetalleGuiaRemision();
			}
		}
	}
	
	public void actualizarVisualTableDatosDetalleGuiaRemision() throws Exception {
		
		DetalleGuiaRemisionModel detalleguiaremisionModel=(DetalleGuiaRemisionModel)this.jTableDatosDetalleGuiaRemision.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detalleguiaremisionModel.detalleguiaremisions=this.detalleguiaremisionLogic.getDetalleGuiaRemisions();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			detalleguiaremisionModel.detalleguiaremisions=this.detalleguiaremisions;
		}
		
		
		((DetalleGuiaRemisionModel) this.jTableDatosDetalleGuiaRemision.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaDetalleGuiaRemision() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getdetalleguiaremisionAnterior(),this.detalleguiaremisionLogic.getDetalleGuiaRemisions());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getdetalleguiaremisionAnterior(),this.detalleguiaremisions);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosDetalleGuiaRemision();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioDetalleGuiaRemision(DetalleGuiaRemision detalleguiaremision,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detalleguiaremision,new Object(),generalEntityParameterGeneral,this.detalleguiaremisionReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.detalleguiaremisionSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=DetalleGuiaRemisionConstantesFunciones.getClassesRelationshipsOfDetalleGuiaRemision(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=DetalleGuiaRemisionConstantesFunciones.getClassesRelationshipsFromStringsOfDetalleGuiaRemision(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormDetalleGuiaRemision(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detalleguiaremision,new Object(),generalEntityParameterGeneral,this.detalleguiaremisionReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioDetalleGuiaRemision(DetalleGuiaRemisionBean detalleguiaremisionBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanDetalleGuiaRemision(ArrayList<Classe> classes,DetalleGuiaRemisionReturnGeneral detalleguiaremisionReturnGeneral,DetalleGuiaRemisionBean detalleguiaremisionBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualDetalleGuiaRemision(DetalleGuiaRemision detalleguiaremision,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.detalleguiaremision)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormDetalleGuiaRemision = new DetalleGuiaRemisionDetalleFormJInternalFrame(jDesktopPane,this.detalleguiaremisionSessionBean.getConGuardarRelaciones(),this.detalleguiaremisionSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.setVisible(false);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.setSelected(false);						
		
		this.jInternalFrameDetalleFormDetalleGuiaRemision.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormDetalleGuiaRemision.detalleguiaremisionLogic=this.detalleguiaremisionLogic;
		
		this.cargarCombosFrameForeignKeyDetalleGuiaRemision("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleDetalleGuiaRemision();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetalleGuiaRemision();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyDetalleGuiaRemision("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyDetalleGuiaRemision();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormDetalleGuiaRemision.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetalleGuiaRemision"));
		
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonModificarDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"ModificarDetalleGuiaRemision"));

		
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonModificarToolBarDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetalleGuiaRemision"));
					
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jMenuItemModificarDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetalleGuiaRemision"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonActualizarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"ActualizarDetalleGuiaRemision"));
		
		
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonActualizarToolBarDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetalleGuiaRemision"));
						
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jMenuItemActualizarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetalleGuiaRemision"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonEliminarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"EliminarDetalleGuiaRemision"));
		
		
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonEliminarToolBarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetalleGuiaRemision"));
								
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jMenuItemEliminarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetalleGuiaRemision"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonCancelarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"CancelarDetalleGuiaRemision"));
		
		
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonCancelarToolBarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetalleGuiaRemision"));
					
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jMenuItemCancelarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetalleGuiaRemision"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jMenuItemDetalleCerrarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetalleGuiaRemision"));		
		
		
		
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonGuardarCambiosToolBarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleGuiaRemision"));
		
		
		
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonGuardarCambiosToolBarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleGuiaRemision"));
		
		
		
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxTiposAccionesFormularioDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetalleGuiaRemision"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonidDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_empresaDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_empresaDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_sucursalDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_sucursalDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_ejercicioDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_ejercicioDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_periodoDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_periodoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_guia_remisionDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_guia_remisionDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_guia_remisionDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_guia_remisionDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_bodegaDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_bodegaDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleGuiaRemisionBusqueda"));
		//jButtonid_productoDetalleGuiaRemision.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetalleGuiaRemisionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_productoDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"id_productoDetalleGuiaRemision"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_productoDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_productoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_unidadDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_unidadDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_centro_costoDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_centro_costoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtoncantidad_envasesDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_envasesDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtoncantidad_auxiliarDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_auxiliarDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtondescripcionDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtoncantidadDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"cantidadDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonmontoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"montoDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonprecioDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"precioDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonporcentaje_descuentoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_descuentoDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtondescuentoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"descuentoDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtondescuento2DetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"descuento2DetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtondescuento3DetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"descuento3DetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonporcentaje_ivaDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_ivaDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonivaDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"ivaDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtontotal_descuentoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"total_descuentoDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtontotal_impuestoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"total_impuestoDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonsub_totalDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"sub_totalDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtontotalDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"totalDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonloteDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"loteDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonlote_clienteDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"lote_clienteDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonorden_compraDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"orden_compraDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonareaDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"areaDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonmedidasDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"medidasDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonacabadoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"acabadoDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonacabado2DetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"acabado2DetalleGuiaRemisionBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTabbedPaneRelacionesDetalleGuiaRemision.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetalleGuiaRemision"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameDetalleGuiaRemision"));
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleGuiaRemision.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetalleGuiaRemision"));
		}
		
		this.jTableDatosDetalleGuiaRemision.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarDetalleGuiaRemision"));
		
		this.jTableDatosDetalleGuiaRemision.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarDetalleGuiaRemision"));
		
		this.jButtonNuevoDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"NuevoDetalleGuiaRemision"));
		
		this.jButtonDuplicarDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"DuplicarDetalleGuiaRemision"));
		
		this.jButtonCopiarDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"CopiarDetalleGuiaRemision"));
		
		this.jButtonVerFormDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"VerFormDetalleGuiaRemision"));
		
		
		this.jButtonNuevoToolBarDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"NuevoToolBarDetalleGuiaRemision"));
			
		this.jButtonDuplicarToolBarDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"DuplicarToolBarDetalleGuiaRemision"));
			
		this.jMenuItemNuevoDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemNuevoDetalleGuiaRemision"));
			
		this.jMenuItemDuplicarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarDetalleGuiaRemision"));		
		
		
		this.jButtonNuevoRelacionesDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"NuevoRelacionesDetalleGuiaRemision"));
		
		
		this.jButtonNuevoRelacionesToolBarDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarDetalleGuiaRemision"));
			
		this.jMenuItemNuevoRelacionesDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesDetalleGuiaRemision"));		
		
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonModificarDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"ModificarDetalleGuiaRemision"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonModificarToolBarDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetalleGuiaRemision"));
			
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jMenuItemModificarDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetalleGuiaRemision"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonActualizarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"ActualizarDetalleGuiaRemision"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonActualizarToolBarDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetalleGuiaRemision"));
				
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jMenuItemActualizarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetalleGuiaRemision"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonEliminarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"EliminarDetalleGuiaRemision"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonEliminarToolBarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetalleGuiaRemision"));
						
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jMenuItemEliminarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetalleGuiaRemision"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonCancelarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"CancelarDetalleGuiaRemision"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonCancelarToolBarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetalleGuiaRemision"));
			
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jMenuItemCancelarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetalleGuiaRemision"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarDetalleGuiaRemision"));		
		
		
		this.jButtonCerrarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"CerrarDetalleGuiaRemision"));
		
		
		this.jButtonCerrarToolBarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"CerrarToolBarDetalleGuiaRemision"));
			
		this.jMenuItemCerrarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemCerrarDetalleGuiaRemision"));
			
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jMenuItemDetalleCerrarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetalleGuiaRemision"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonGuardarCambiosDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"GuardarCambiosDetalleGuiaRemision"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonGuardarCambiosToolBarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetalleGuiaRemision"));
		}
		
		this.jButtonCopiarToolBarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"CopiarToolBarDetalleGuiaRemision"));
			
		this.jButtonVerFormToolBarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"VerFormToolBarDetalleGuiaRemision"));
		
		this.jMenuItemGuardarCambiosDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosDetalleGuiaRemision"));
			
		this.jMenuItemCopiarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemCopiarDetalleGuiaRemision"));		
		
		this.jMenuItemVerFormDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemVerFormDetalleGuiaRemision"));		
		
		
		this.jButtonGuardarCambiosTablaDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetalleGuiaRemision"));
		
		
		this.jButtonGuardarCambiosTablaToolBarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarDetalleGuiaRemision"));
			
		this.jMenuItemGuardarCambiosTablaDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetalleGuiaRemision"));		
		
		
		
		this.jButtonRecargarInformacionDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"RecargarInformacionDetalleGuiaRemision"));
					
		this.jButtonRecargarInformacionToolBarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarDetalleGuiaRemision"));
		
		this.jMenuItemRecargarInformacionDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionDetalleGuiaRemision"));		
		
		
		
		this.jButtonAnterioresDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"AnterioresDetalleGuiaRemision"));
		
		
		this.jButtonAnterioresToolBarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"AnterioresToolBarDetalleGuiaRemision"));
		
		this.jMenuItemAnterioresDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresDetalleGuiaRemision"));		
		
		
		this.jButtonSiguientesDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"SiguientesDetalleGuiaRemision"));
		
		
		this.jButtonSiguientesToolBarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"SiguientesToolBarDetalleGuiaRemision"));
			
		this.jMenuItemSiguientesDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesDetalleGuiaRemision"));
			
		this.jMenuItemAbrirOrderByDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByDetalleGuiaRemision"));
			
		this.jMenuItemMostrarOcultarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarDetalleGuiaRemision"));
			
		this.jMenuItemDetalleAbrirOrderByDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByDetalleGuiaRemision"));
			
		this.jMenuItemDetalleMostarOcultarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarDetalleGuiaRemision"));		
		
		
		this.jButtonNuevoGuardarCambiosDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosDetalleGuiaRemision"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarDetalleGuiaRemision"));
			
		this.jMenuItemNuevoGuardarCambiosDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosDetalleGuiaRemision"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosDetalleGuiaRemision.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosDetalleGuiaRemision"));

		this.jCheckBoxSeleccionadosDetalleGuiaRemision.addItemListener(new CheckBoxItemListener(this,"SeleccionadosDetalleGuiaRemision"));
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxTiposAccionesFormularioDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetalleGuiaRemision"));
		}
		
		
		this.jComboBoxTiposRelacionesDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"TiposRelacionesDetalleGuiaRemision"));
			
		this.jComboBoxTiposAccionesDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"TiposAccionesDetalleGuiaRemision"));
					
		this.jComboBoxTiposSeleccionarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"TiposSeleccionarDetalleGuiaRemision"));
			
		this.jTextFieldValorCampoGeneralDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralDetalleGuiaRemision"));		
		
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonidDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_empresaDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_empresaDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_sucursalDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_sucursalDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_ejercicioDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_ejercicioDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_periodoDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_periodoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_guia_remisionDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_guia_remisionDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_guia_remisionDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_guia_remisionDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_bodegaDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_bodegaDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleGuiaRemisionBusqueda"));
		//jButtonid_productoDetalleGuiaRemision.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetalleGuiaRemisionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_productoDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"id_productoDetalleGuiaRemision"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_productoDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_productoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_unidadDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_unidadDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_centro_costoDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_centro_costoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtoncantidad_envasesDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_envasesDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtoncantidad_auxiliarDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_auxiliarDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtondescripcionDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtoncantidadDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"cantidadDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonmontoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"montoDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonprecioDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"precioDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonporcentaje_descuentoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_descuentoDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtondescuentoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"descuentoDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtondescuento2DetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"descuento2DetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtondescuento3DetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"descuento3DetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonporcentaje_ivaDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_ivaDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonivaDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"ivaDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtontotal_descuentoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"total_descuentoDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtontotal_impuestoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"total_impuestoDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonsub_totalDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"sub_totalDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtontotalDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"totalDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonloteDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"loteDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonlote_clienteDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"lote_clienteDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonorden_compraDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"orden_compraDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonareaDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"areaDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonmedidasDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"medidasDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonacabadoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"acabadoDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonacabado2DetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"acabado2DetalleGuiaRemisionBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdBodegaDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdBodegaDetalleGuiaRemision"));

			this.jButtonFK_IdCentroCostoDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoDetalleGuiaRemision"));

			this.jButtonFK_IdGuiaRemisionDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdGuiaRemisionDetalleGuiaRemision"));

			this.jButtonFK_IdProductoDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdProductoDetalleGuiaRemision"));

			this.jButtonBuscarFK_IdProductoid_productoDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"id_productoDetalleGuiaRemision"));

			this.jButtonFK_IdUnidadDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdUnidadDetalleGuiaRemision"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoDetalleGuiaRemision!=null) {
				this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleGuiaRemision"));
				this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleGuiaRemision"));
				this.jInternalFrameReporteDinamicoDetalleGuiaRemision.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleGuiaRemision"));
			}
			
			//this.jButtonCerrarReporteDinamicoDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetalleGuiaRemision"));				
			//this.jButtonGenerarReporteDinamicoDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetalleGuiaRemision"));
			//this.jButtonGenerarExcelReporteDinamicoDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetalleGuiaRemision"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionDetalleGuiaRemision!=null) {
				this.jInternalFrameImportacionDetalleGuiaRemision.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetalleGuiaRemision"));
				this.jInternalFrameImportacionDetalleGuiaRemision.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetalleGuiaRemision"));
				this.jInternalFrameImportacionDetalleGuiaRemision.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetalleGuiaRemision"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"AbrirOrderByDetalleGuiaRemision"));
			
			this.jButtonAbrirOrderByToolBarDetalleGuiaRemision.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarDetalleGuiaRemision"));			
			
			if(this.jInternalFrameOrderByDetalleGuiaRemision!=null) {
				this.jInternalFrameOrderByDetalleGuiaRemision.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetalleGuiaRemision"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jTabbedPaneRelacionesDetalleGuiaRemision.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetalleGuiaRemision"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameDetalleGuiaRemision();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormDetalleGuiaRemision.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormDetalleGuiaRemision = (JInternalFrameBase)event.getSource();
	            	
	            DetalleGuiaRemisionBeanSwingJInternalFrame jInternalFrameParent=(DetalleGuiaRemisionBeanSwingJInternalFrame)jInternalFrameDetalleFormDetalleGuiaRemision.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarDetalleGuiaRemisionActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosDetalleGuiaRemision.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosDetalleGuiaRemisionListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosDetalleGuiaRemision.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosDetalleGuiaRemision.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleGuiaRemisionActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleGuiaRemisionActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleGuiaRemisionActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoDetalleGuiaRemision";
		inputMap = this.jButtonNuevoDetalleGuiaRemision.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoDetalleGuiaRemision.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetalleGuiaRemisionActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleGuiaRemisionActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleGuiaRemisionActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetalleGuiaRemisionActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesDetalleGuiaRemision";
		inputMap = this.jButtonNuevoRelacionesDetalleGuiaRemision.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesDetalleGuiaRemision.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetalleGuiaRemisionActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarDetalleGuiaRemision";
		inputMap = this.jButtonModificarDetalleGuiaRemision.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarDetalleGuiaRemision.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarDetalleGuiaRemisionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarDetalleGuiaRemision";
		inputMap = this.jButtonActualizarDetalleGuiaRemision.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarDetalleGuiaRemision.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarDetalleGuiaRemisionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarDetalleGuiaRemision";
		inputMap = this.jButtonEliminarDetalleGuiaRemision.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarDetalleGuiaRemision.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarDetalleGuiaRemisionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarDetalleGuiaRemision";
		inputMap = this.jButtonCancelarDetalleGuiaRemision.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarDetalleGuiaRemision.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarDetalleGuiaRemisionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarDetalleGuiaRemision";
		inputMap = this.jButtonCerrarDetalleGuiaRemision.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarDetalleGuiaRemision.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarDetalleGuiaRemisionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonGuardarCambiosDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosDetalleGuiaRemision";
		inputMap = this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonGuardarCambiosDetalleGuiaRemision.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonGuardarCambiosDetalleGuiaRemision.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosDetalleGuiaRemision.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosDetalleGuiaRemisionItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesDetalleGuiaRemision.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesDetalleGuiaRemisionActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarDetalleGuiaRemision.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarDetalleGuiaRemisionActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralDetalleGuiaRemision.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralDetalleGuiaRemisionActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonidDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"idDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_empresaDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_empresaDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_sucursalDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_sucursalDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_ejercicioDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_ejercicioDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_periodoDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_periodoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_guia_remisionDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_guia_remisionDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_guia_remisionDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_guia_remisionDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_bodegaDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_bodegaDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetalleGuiaRemisionBusqueda"));
		//jButtonid_productoDetalleGuiaRemision.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetalleGuiaRemisionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_productoDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"id_productoDetalleGuiaRemision"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_productoDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_productoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_unidadDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_unidadDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetalleGuiaRemisionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_centro_costoDetalleGuiaRemisionUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleGuiaRemisionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_centro_costoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtoncantidad_envasesDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_envasesDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtoncantidad_auxiliarDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"cantidad_auxiliarDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtondescripcionDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtoncantidadDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"cantidadDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonmontoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"montoDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonprecioDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"precioDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonporcentaje_descuentoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_descuentoDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtondescuentoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"descuentoDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtondescuento2DetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"descuento2DetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtondescuento3DetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"descuento3DetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonporcentaje_ivaDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"porcentaje_ivaDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonivaDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"ivaDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtontotal_descuentoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"total_descuentoDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtontotal_impuestoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"total_impuestoDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonsub_totalDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"sub_totalDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtontotalDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"totalDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonloteDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"loteDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonlote_clienteDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"lote_clienteDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonorden_compraDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"orden_compraDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonareaDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"areaDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonmedidasDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"medidasDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonacabadoDetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"acabadoDetalleGuiaRemisionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonacabado2DetalleGuiaRemisionBusqueda.addActionListener(new ButtonActionListener(this,"acabado2DetalleGuiaRemisionBusqueda"));
		
		
		this.jButtonFK_IdBodegaDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdBodegaDetalleGuiaRemision"));

		this.jButtonFK_IdCentroCostoDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoDetalleGuiaRemision"));

		this.jButtonFK_IdGuiaRemisionDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdGuiaRemisionDetalleGuiaRemision"));

		this.jButtonFK_IdProductoDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdProductoDetalleGuiaRemision"));

		this.jButtonBuscarFK_IdProductoid_productoDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"id_productoDetalleGuiaRemision"));

		this.jButtonFK_IdUnidadDetalleGuiaRemision.addActionListener(new ButtonActionListener(this,"FK_IdUnidadDetalleGuiaRemision"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionDetalleGuiaRemision.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionDetalleGuiaRemisionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarDetalleGuiaRemisionActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarDetalleGuiaRemision.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosDetalleGuiaRemision(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(DetalleGuiaRemision detalleguiaremisionAux:this.detalleguiaremisionLogic.getDetalleGuiaRemisions()) {
					detalleguiaremisionAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleGuiaRemision detalleguiaremisionAux:detalleguiaremisions) {
					detalleguiaremisionAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosDetalleGuiaRemisionItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetalleGuiaRemision detalleguiaremisionAux:this.detalleguiaremisionLogic.getDetalleGuiaRemisions()) {
						detalleguiaremisionAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleGuiaRemision detalleguiaremisionAux:detalleguiaremisions) {
						detalleguiaremisionAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(DetalleGuiaRemision detalleguiaremisionAux:this.detalleguiaremisionLogic.getDetalleGuiaRemisions()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleGuiaRemision detalleguiaremisionAux:detalleguiaremisions) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaDetalleGuiaRemision(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetalleGuiaRemision.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetalleGuiaRemision.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosDetalleGuiaRemisionItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosDetalleGuiaRemision.getSelectedRows();
			
			DetalleGuiaRemision detalleguiaremisionLocal=new DetalleGuiaRemision();
			
			//this.seleccionarTodosDetalleGuiaRemision(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detalleguiaremisionLocal =(DetalleGuiaRemision) this.detalleguiaremisionLogic.getDetalleGuiaRemisions().toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					detalleguiaremisionLocal =(DetalleGuiaRemision) this.detalleguiaremisions.toArray()[this.jTableDatosDetalleGuiaRemision.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				detalleguiaremisionLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetalleGuiaRemision detalleguiaremisionAux:this.detalleguiaremisionLogic.getDetalleGuiaRemisions()) {
						detalleguiaremisionAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetalleGuiaRemision detalleguiaremisionAux:detalleguiaremisions) {
						detalleguiaremisionAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaDetalleGuiaRemision(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetalleGuiaRemision.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetalleGuiaRemision.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetalleGuiaRemision,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualDetalleGuiaRemisionItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarDetalleGuiaRemisionParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralDetalleGuiaRemisionActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralDetalleGuiaRemision.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetalleGuiaRemision detalleguiaremisionAux:this.detalleguiaremisionLogic.getDetalleGuiaRemisions()) {
				
						if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADENVASES)) {
							existe=true;
							detalleguiaremisionAux.setcantidad_envases(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADAUXILIAR)) {
							existe=true;
							detalleguiaremisionAux.setcantidad_auxiliar(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							detalleguiaremisionAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDAD)) {
							existe=true;
							detalleguiaremisionAux.setcantidad(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_MONTO)) {
							existe=true;
							detalleguiaremisionAux.setmonto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_PRECIO)) {
							existe=true;
							detalleguiaremisionAux.setprecio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEDESCUENTO)) {
							existe=true;
							detalleguiaremisionAux.setporcentaje_descuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO)) {
							existe=true;
							detalleguiaremisionAux.setdescuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO2)) {
							existe=true;
							detalleguiaremisionAux.setdescuento2(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO3)) {
							existe=true;
							detalleguiaremisionAux.setdescuento3(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEIVA)) {
							existe=true;
							detalleguiaremisionAux.setporcentaje_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_IVA)) {
							existe=true;
							detalleguiaremisionAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALDESCUENTO)) {
							existe=true;
							detalleguiaremisionAux.settotal_descuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALIMPUESTO)) {
							existe=true;
							detalleguiaremisionAux.settotal_impuesto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_SUBTOTAL)) {
							existe=true;
							detalleguiaremisionAux.setsub_total(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							detalleguiaremisionAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_LOTE)) {
							existe=true;
							detalleguiaremisionAux.setlote(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_LOTECLIENTE)) {
							existe=true;
							detalleguiaremisionAux.setlote_cliente(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_ORDENCOMPRA)) {
							existe=true;
							detalleguiaremisionAux.setorden_compra(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_AREA)) {
							existe=true;
							detalleguiaremisionAux.setarea(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_MEDIDAS)) {
							existe=true;
							detalleguiaremisionAux.setmedidas(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO)) {
							existe=true;
							detalleguiaremisionAux.setacabado(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO2)) {
							existe=true;
							detalleguiaremisionAux.setacabado2(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleGuiaRemision detalleguiaremisionAux:detalleguiaremisions) {
					
						if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADENVASES)) {
							existe=true;
							detalleguiaremisionAux.setcantidad_envases(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADAUXILIAR)) {
							existe=true;
							detalleguiaremisionAux.setcantidad_auxiliar(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							detalleguiaremisionAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDAD)) {
							existe=true;
							detalleguiaremisionAux.setcantidad(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_MONTO)) {
							existe=true;
							detalleguiaremisionAux.setmonto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_PRECIO)) {
							existe=true;
							detalleguiaremisionAux.setprecio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEDESCUENTO)) {
							existe=true;
							detalleguiaremisionAux.setporcentaje_descuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO)) {
							existe=true;
							detalleguiaremisionAux.setdescuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO2)) {
							existe=true;
							detalleguiaremisionAux.setdescuento2(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO3)) {
							existe=true;
							detalleguiaremisionAux.setdescuento3(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEIVA)) {
							existe=true;
							detalleguiaremisionAux.setporcentaje_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_IVA)) {
							existe=true;
							detalleguiaremisionAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALDESCUENTO)) {
							existe=true;
							detalleguiaremisionAux.settotal_descuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALIMPUESTO)) {
							existe=true;
							detalleguiaremisionAux.settotal_impuesto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_SUBTOTAL)) {
							existe=true;
							detalleguiaremisionAux.setsub_total(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							detalleguiaremisionAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_LOTE)) {
							existe=true;
							detalleguiaremisionAux.setlote(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_LOTECLIENTE)) {
							existe=true;
							detalleguiaremisionAux.setlote_cliente(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_ORDENCOMPRA)) {
							existe=true;
							detalleguiaremisionAux.setorden_compra(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_AREA)) {
							existe=true;
							detalleguiaremisionAux.setarea(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_MEDIDAS)) {
							existe=true;
							detalleguiaremisionAux.setmedidas(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO)) {
							existe=true;
							detalleguiaremisionAux.setacabado(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO2)) {
							existe=true;
							detalleguiaremisionAux.setacabado2(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaDetalleGuiaRemision(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesDetalleGuiaRemisionActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioDetalleGuiaRemision=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesDetalleGuiaRemision.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxTiposAccionesFormularioDetalleGuiaRemision.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteDetalleGuiaRemision) {				
					conSplash=true;//false;										
					
					//this.startProcessDetalleGuiaRemision(conSplash);
				
					this.generarReporteDetalleGuiaRemisionsSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleGuiaRemision.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxTiposAccionesFormularioDetalleGuiaRemision.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoDetalleGuiaRemisionsSeleccionados();
				//this.jComboBoxTiposAccionesDetalleGuiaRemision.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetalleGuiaRemisionsSeleccionados(false);
				//this.jComboBoxTiposAccionesDetalleGuiaRemision.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetalleGuiaRemisionsSeleccionados(true);
				//this.jComboBoxTiposAccionesDetalleGuiaRemision.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetalleGuiaRemision();
				
				this.exportarDetalleGuiaRemisionsSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleGuiaRemision.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxTiposAccionesFormularioDetalleGuiaRemision.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionDetalleGuiaRemisions();
				//this.importarDetalleGuiaRemisions();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleGuiaRemision.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxTiposAccionesFormularioDetalleGuiaRemision.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetalleGuiaRemision();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelDetalleGuiaRemisionsSeleccionados();
				//this.jComboBoxTiposAccionesDetalleGuiaRemision.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Detalle Guia Remision", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessDetalleGuiaRemision();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoDetalleGuiaRemision)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyDetalleGuiaRemision(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Detalle Guia Remision",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetalleGuiaRemision.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxTiposAccionesFormularioDetalleGuiaRemision.setSelectedIndex(0);					
				}	
			} 			
			else if(DetalleGuiaRemisionBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteDetalleGuiaRemision) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessDetalleGuiaRemision(conSplash);
					
						//this.actualizarParametrosGeneralDetalleGuiaRemision();
						
						this.generarReporteProcesoAccionDetalleGuiaRemisionsSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesDetalleGuiaRemision.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxTiposAccionesFormularioDetalleGuiaRemision.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Detalle Guia RemisionES SELECCIONADOS?", "MANTENIMIENTO DE Detalle Guia Remision", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessDetalleGuiaRemision();
				
						this.actualizarParametrosGeneralDetalleGuiaRemision();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.detalleguiaremisionReturnGeneral=detalleguiaremisionLogic.procesarAccionDetalleGuiaRemisionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.detalleguiaremisionLogic.getDetalleGuiaRemisions(),this.detalleguiaremisionParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarDetalleGuiaRemisionReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesDetalleGuiaRemision.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxTiposAccionesFormularioDetalleGuiaRemision.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralDetalleGuiaRemision();
					
					DetalleGuiaRemisionBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarDetalleGuiaRemisionReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesDetalleGuiaRemision.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxTiposAccionesFormularioDetalleGuiaRemision.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessDetalleGuiaRemision(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesDetalleGuiaRemisionActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessDetalleGuiaRemision();
			
			if(this.jInternalFrameDetalleFormDetalleGuiaRemision==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<DetalleGuiaRemision> detalleguiaremisionsSeleccionados=new ArrayList<DetalleGuiaRemision>();		
			DetalleGuiaRemision detalleguiaremision=new DetalleGuiaRemision();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingDetalleGuiaRemision(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesDetalleGuiaRemision.getSelectedItem();
			
			
			
			
			detalleguiaremisionsSeleccionados=this.getDetalleGuiaRemisionsSeleccionados(true);
			//this.sTipoAccion;
			
			if(detalleguiaremisionsSeleccionados.size()==1) {
				for(DetalleGuiaRemision detalleguiaremisionAux:detalleguiaremisionsSeleccionados) {
					detalleguiaremision=detalleguiaremisionAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessDetalleGuiaRemision();
			
      		//this.finishProcessDetalleGuiaRemision(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarDetalleGuiaRemisionReturnGeneral() throws Exception {
		if(this.detalleguiaremisionReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.detalleguiaremisionReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.detalleguiaremisionReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.detalleguiaremisionReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.detalleguiaremisionReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.detalleguiaremisionReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingDetalleGuiaRemision(false);
		}
		
		if(this.detalleguiaremisionReturnGeneral.getConRetornoLista() || this.detalleguiaremisionReturnGeneral.getConRetornoObjeto()) {
			if(this.detalleguiaremisionReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detalleguiaremisionLogic.setDetalleGuiaRemisions(this.detalleguiaremisionReturnGeneral.getDetalleGuiaRemisions());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.detalleguiaremisionReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detalleguiaremisionLogic.setDetalleGuiaRemision(this.detalleguiaremisionReturnGeneral.getDetalleGuiaRemision());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingDetalleGuiaRemision(false);
		}
	}
	
	public void actualizarParametrosGeneralDetalleGuiaRemision() throws Exception {
		
		
	}
	
	public ArrayList<DetalleGuiaRemision> getDetalleGuiaRemisionsSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<DetalleGuiaRemision> detalleguiaremisionsSeleccionados=new ArrayList<DetalleGuiaRemision>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioDetalleGuiaRemision) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(DetalleGuiaRemision detalleguiaremisionAux:detalleguiaremisionLogic.getDetalleGuiaRemisions()) {
					if(detalleguiaremisionAux.getIsSelected()) {
						detalleguiaremisionsSeleccionados.add(detalleguiaremisionAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetalleGuiaRemision detalleguiaremisionAux:this.detalleguiaremisions) {
					if(detalleguiaremisionAux.getIsSelected()) {
						detalleguiaremisionsSeleccionados.add(detalleguiaremisionAux);				
					}
				}
			}
			
			if(detalleguiaremisionsSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						detalleguiaremisionsSeleccionados.addAll(this.detalleguiaremisionLogic.getDetalleGuiaRemisions());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						detalleguiaremisionsSeleccionados.addAll(this.detalleguiaremisions);				
					}
				}
			}
		} else {
			detalleguiaremisionsSeleccionados.add(this.detalleguiaremision);
		}
		
		return detalleguiaremisionsSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteDetalleGuiaRemisionsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalDetalleGuiaRemisionsSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoDetalleGuiaRemisionsSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetalleGuiaRemisionsSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetalleGuiaRemisionsSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Detalle Guia Remision",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesDetalleGuiaRemisionsSeleccionados() throws Exception {
		ArrayList<DetalleGuiaRemision> detalleguiaremisionsSeleccionados=new ArrayList<DetalleGuiaRemision>();		
		
		detalleguiaremisionsSeleccionados=this.getDetalleGuiaRemisionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteDetalleGuiaRemisions("Todos",detalleguiaremisionsSeleccionados);
		
	}	
	
	public void generarReporteNormalDetalleGuiaRemisionsSeleccionados() throws Exception {
		ArrayList<DetalleGuiaRemision> detalleguiaremisionsSeleccionados=new ArrayList<DetalleGuiaRemision>();		
		
		detalleguiaremisionsSeleccionados=this.getDetalleGuiaRemisionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteDetalleGuiaRemisions("Todos",detalleguiaremisionsSeleccionados);
	}		
	
	public void generarReporteProcesoAccionDetalleGuiaRemisionsSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<DetalleGuiaRemision> detalleguiaremisionsSeleccionados=new ArrayList<DetalleGuiaRemision>();
		
		detalleguiaremisionsSeleccionados=this.getDetalleGuiaRemisionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteDetalleGuiaRemisions("Todos",detalleguiaremisionsSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoDetalleGuiaRemisionsSeleccionados() throws Exception {
		ArrayList<DetalleGuiaRemision> detalleguiaremisionsSeleccionados=new ArrayList<DetalleGuiaRemision>();		
		
		
		this.abrirInicializarFrameReporteDinamicoDetalleGuiaRemision();
		
		
		detalleguiaremisionsSeleccionados=this.getDetalleGuiaRemisionsSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoDetalleGuiaRemision();
		
		
		//this.generarReporteDetalleGuiaRemisions("Todos",detalleguiaremisionsSeleccionados ,detalleguiaremisionImplementable,detalleguiaremisionImplementableHome);
	}
	
	public void mostrarImportacionDetalleGuiaRemisions() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionDetalleGuiaRemision();
		
		this.abrirFrameImportacionDetalleGuiaRemision();		
		
			
		//this.generarReporteDetalleGuiaRemisions("Todos",detalleguiaremisionsSeleccionados ,detalleguiaremisionImplementable,detalleguiaremisionImplementableHome);
	}
	
	public void importarDetalleGuiaRemisions() throws Exception {		
	
	}
	
	public void exportarDetalleGuiaRemisionsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelDetalleGuiaRemisionsSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoDetalleGuiaRemisionsSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlDetalleGuiaRemisionsSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Detalle Guia Remision",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoDetalleGuiaRemisionsSeleccionados() throws Exception {
		ArrayList<DetalleGuiaRemision> detalleguiaremisionsSeleccionados=new ArrayList<DetalleGuiaRemision>();		
		
		detalleguiaremisionsSeleccionados=this.getDetalleGuiaRemisionsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleguiaremision."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarDetalleGuiaRemision(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(DetalleGuiaRemision detalleguiaremisionAux:detalleguiaremisionsSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarDetalleGuiaRemision(detalleguiaremisionAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//detalleguiaremisionAux.setsDetalleGeneralEntityReporte(detalleguiaremisionAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Guia Remision",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarDetalleGuiaRemision(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_IDGUIAREMISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_IDBODEGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_IDPRODUCTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_IDUNIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_IDCENTROCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADENVASES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADAUXILIAR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_MONTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_PRECIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEDESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO2;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO3;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_IVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALDESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALIMPUESTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_SUBTOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_TOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_LOTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_LOTECLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_ORDENCOMPRA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_AREA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_MEDIDAS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO2;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarDetalleGuiaRemision(DetalleGuiaRemision detalleguiaremision,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=detalleguiaremision.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getguiaremision_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getbodega_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getproducto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getunidad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getcentrocosto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getcantidad_envases().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getcantidad_auxiliar().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getcantidad().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getmonto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getprecio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getporcentaje_descuento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getdescuento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getdescuento2().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getdescuento3().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getporcentaje_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getiva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.gettotal_descuento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.gettotal_impuesto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getsub_total().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.gettotal().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getlote();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getlote_cliente();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getorden_compra();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getarea();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getmedidas();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getacabado();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detalleguiaremision.getacabado2();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelDetalleGuiaRemisionsSeleccionados() throws Exception {
		ArrayList<DetalleGuiaRemision> detalleguiaremisionsSeleccionados=new ArrayList<DetalleGuiaRemision>();		
		
		detalleguiaremisionsSeleccionados=this.getDetalleGuiaRemisionsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleguiaremision.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("DetalleGuiaRemisions");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelDetalleGuiaRemision(row);				
				iRow++;
			}				
			
			for(DetalleGuiaRemision detalleguiaremisionAux:detalleguiaremisionsSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelDetalleGuiaRemision(detalleguiaremisionAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Guia Remision",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlDetalleGuiaRemisionsSeleccionados() throws Exception {
		ArrayList<DetalleGuiaRemision> detalleguiaremisionsSeleccionados=new ArrayList<DetalleGuiaRemision>();		
		
		detalleguiaremisionsSeleccionados=this.getDetalleGuiaRemisionsSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detalleguiaremision.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("detalleguiaremisions");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("detalleguiaremision");
			//elementRoot.appendChild(element);
		
			for(DetalleGuiaRemision detalleguiaremisionAux:detalleguiaremisionsSeleccionados) {
				element = document.createElement("detalleguiaremision");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlDetalleGuiaRemision(detalleguiaremisionAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle Guia Remision",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelDetalleGuiaRemision(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDGUIAREMISION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDBODEGA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDPRODUCTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDUNIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IDCENTROCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADENVASES);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADAUXILIAR);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_MONTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_PRECIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEDESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO2);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCUENTO3);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_PORCENTAJEIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_IVA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALDESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_TOTALIMPUESTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_SUBTOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_TOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_LOTE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_LOTECLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_ORDENCOMPRA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_AREA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_MEDIDAS);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO2);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelDetalleGuiaRemision(DetalleGuiaRemision detalleguiaremision,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getguiaremision_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getbodega_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getproducto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getunidad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getcentrocosto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getcantidad_envases());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getcantidad_auxiliar());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getcantidad());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getmonto());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getprecio());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getporcentaje_descuento());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getdescuento());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getdescuento2());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getdescuento3());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getporcentaje_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getiva());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.gettotal_descuento());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.gettotal_impuesto());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getsub_total());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.gettotal());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getlote());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getlote_cliente());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getorden_compra());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getarea());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getmedidas());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getacabado());
		cell = row.createCell(iColumn++);cell.setCellValue(detalleguiaremision.getacabado2());				
	}
	
	public void setFilaDatosExportarXmlDetalleGuiaRemision(DetalleGuiaRemision detalleguiaremision,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(DetalleGuiaRemisionConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(detalleguiaremision.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(DetalleGuiaRemisionConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(detalleguiaremision.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(DetalleGuiaRemisionConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(detalleguiaremision.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(DetalleGuiaRemisionConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(detalleguiaremision.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementejercicio_descripcion = document.createElement(DetalleGuiaRemisionConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(detalleguiaremision.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(DetalleGuiaRemisionConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(detalleguiaremision.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementguiaremision_descripcion = document.createElement(DetalleGuiaRemisionConstantesFunciones.IDGUIAREMISION);
		elementguiaremision_descripcion.appendChild(document.createTextNode(detalleguiaremision.getguiaremision_descripcion()));
		element.appendChild(elementguiaremision_descripcion);

		Element elementbodega_descripcion = document.createElement(DetalleGuiaRemisionConstantesFunciones.IDBODEGA);
		elementbodega_descripcion.appendChild(document.createTextNode(detalleguiaremision.getbodega_descripcion()));
		element.appendChild(elementbodega_descripcion);

		Element elementproducto_descripcion = document.createElement(DetalleGuiaRemisionConstantesFunciones.IDPRODUCTO);
		elementproducto_descripcion.appendChild(document.createTextNode(detalleguiaremision.getproducto_descripcion()));
		element.appendChild(elementproducto_descripcion);

		Element elementunidad_descripcion = document.createElement(DetalleGuiaRemisionConstantesFunciones.IDUNIDAD);
		elementunidad_descripcion.appendChild(document.createTextNode(detalleguiaremision.getunidad_descripcion()));
		element.appendChild(elementunidad_descripcion);

		Element elementcentrocosto_descripcion = document.createElement(DetalleGuiaRemisionConstantesFunciones.IDCENTROCOSTO);
		elementcentrocosto_descripcion.appendChild(document.createTextNode(detalleguiaremision.getcentrocosto_descripcion()));
		element.appendChild(elementcentrocosto_descripcion);

		Element elementcantidad_envases = document.createElement(DetalleGuiaRemisionConstantesFunciones.CANTIDADENVASES);
		elementcantidad_envases.appendChild(document.createTextNode(detalleguiaremision.getcantidad_envases().toString().trim()));
		element.appendChild(elementcantidad_envases);

		Element elementcantidad_auxiliar = document.createElement(DetalleGuiaRemisionConstantesFunciones.CANTIDADAUXILIAR);
		elementcantidad_auxiliar.appendChild(document.createTextNode(detalleguiaremision.getcantidad_auxiliar().toString().trim()));
		element.appendChild(elementcantidad_auxiliar);

		Element elementdescripcion = document.createElement(DetalleGuiaRemisionConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(detalleguiaremision.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementcantidad = document.createElement(DetalleGuiaRemisionConstantesFunciones.CANTIDAD);
		elementcantidad.appendChild(document.createTextNode(detalleguiaremision.getcantidad().toString().trim()));
		element.appendChild(elementcantidad);

		Element elementmonto = document.createElement(DetalleGuiaRemisionConstantesFunciones.MONTO);
		elementmonto.appendChild(document.createTextNode(detalleguiaremision.getmonto().toString().trim()));
		element.appendChild(elementmonto);

		Element elementprecio = document.createElement(DetalleGuiaRemisionConstantesFunciones.PRECIO);
		elementprecio.appendChild(document.createTextNode(detalleguiaremision.getprecio().toString().trim()));
		element.appendChild(elementprecio);

		Element elementporcentaje_descuento = document.createElement(DetalleGuiaRemisionConstantesFunciones.PORCENTAJEDESCUENTO);
		elementporcentaje_descuento.appendChild(document.createTextNode(detalleguiaremision.getporcentaje_descuento().toString().trim()));
		element.appendChild(elementporcentaje_descuento);

		Element elementdescuento = document.createElement(DetalleGuiaRemisionConstantesFunciones.DESCUENTO);
		elementdescuento.appendChild(document.createTextNode(detalleguiaremision.getdescuento().toString().trim()));
		element.appendChild(elementdescuento);

		Element elementdescuento2 = document.createElement(DetalleGuiaRemisionConstantesFunciones.DESCUENTO2);
		elementdescuento2.appendChild(document.createTextNode(detalleguiaremision.getdescuento2().toString().trim()));
		element.appendChild(elementdescuento2);

		Element elementdescuento3 = document.createElement(DetalleGuiaRemisionConstantesFunciones.DESCUENTO3);
		elementdescuento3.appendChild(document.createTextNode(detalleguiaremision.getdescuento3().toString().trim()));
		element.appendChild(elementdescuento3);

		Element elementporcentaje_iva = document.createElement(DetalleGuiaRemisionConstantesFunciones.PORCENTAJEIVA);
		elementporcentaje_iva.appendChild(document.createTextNode(detalleguiaremision.getporcentaje_iva().toString().trim()));
		element.appendChild(elementporcentaje_iva);

		Element elementiva = document.createElement(DetalleGuiaRemisionConstantesFunciones.IVA);
		elementiva.appendChild(document.createTextNode(detalleguiaremision.getiva().toString().trim()));
		element.appendChild(elementiva);

		Element elementtotal_descuento = document.createElement(DetalleGuiaRemisionConstantesFunciones.TOTALDESCUENTO);
		elementtotal_descuento.appendChild(document.createTextNode(detalleguiaremision.gettotal_descuento().toString().trim()));
		element.appendChild(elementtotal_descuento);

		Element elementtotal_impuesto = document.createElement(DetalleGuiaRemisionConstantesFunciones.TOTALIMPUESTO);
		elementtotal_impuesto.appendChild(document.createTextNode(detalleguiaremision.gettotal_impuesto().toString().trim()));
		element.appendChild(elementtotal_impuesto);

		Element elementsub_total = document.createElement(DetalleGuiaRemisionConstantesFunciones.SUBTOTAL);
		elementsub_total.appendChild(document.createTextNode(detalleguiaremision.getsub_total().toString().trim()));
		element.appendChild(elementsub_total);

		Element elementtotal = document.createElement(DetalleGuiaRemisionConstantesFunciones.TOTAL);
		elementtotal.appendChild(document.createTextNode(detalleguiaremision.gettotal().toString().trim()));
		element.appendChild(elementtotal);

		Element elementlote = document.createElement(DetalleGuiaRemisionConstantesFunciones.LOTE);
		elementlote.appendChild(document.createTextNode(detalleguiaremision.getlote().trim()));
		element.appendChild(elementlote);

		Element elementlote_cliente = document.createElement(DetalleGuiaRemisionConstantesFunciones.LOTECLIENTE);
		elementlote_cliente.appendChild(document.createTextNode(detalleguiaremision.getlote_cliente().trim()));
		element.appendChild(elementlote_cliente);

		Element elementorden_compra = document.createElement(DetalleGuiaRemisionConstantesFunciones.ORDENCOMPRA);
		elementorden_compra.appendChild(document.createTextNode(detalleguiaremision.getorden_compra().trim()));
		element.appendChild(elementorden_compra);

		Element elementarea = document.createElement(DetalleGuiaRemisionConstantesFunciones.AREA);
		elementarea.appendChild(document.createTextNode(detalleguiaremision.getarea().trim()));
		element.appendChild(elementarea);

		Element elementmedidas = document.createElement(DetalleGuiaRemisionConstantesFunciones.MEDIDAS);
		elementmedidas.appendChild(document.createTextNode(detalleguiaremision.getmedidas().trim()));
		element.appendChild(elementmedidas);

		Element elementacabado = document.createElement(DetalleGuiaRemisionConstantesFunciones.ACABADO);
		elementacabado.appendChild(document.createTextNode(detalleguiaremision.getacabado().trim()));
		element.appendChild(elementacabado);

		Element elementacabado2 = document.createElement(DetalleGuiaRemisionConstantesFunciones.ACABADO2);
		elementacabado2.appendChild(document.createTextNode(detalleguiaremision.getacabado2().trim()));
		element.appendChild(elementacabado2);
	}
	
	public void generarReporteGroupGenericoDetalleGuiaRemisionsSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<DetalleGuiaRemision> detalleguiaremisionsSeleccionados=new ArrayList<DetalleGuiaRemision>();
		
		detalleguiaremisionsSeleccionados=this.getDetalleGuiaRemisionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoDetalleGuiaRemision(detalleguiaremisionsSeleccionados);
		
		this.generarReporteDetalleGuiaRemisions("Todos",detalleguiaremisionsSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoDetalleGuiaRemision(ArrayList<DetalleGuiaRemision> detalleguiaremisionsSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(DetalleGuiaRemision detalleguiaremisionAux:detalleguiaremisionsSeleccionados) {
				detalleguiaremisionAux.setsDetalleGeneralEntityReporte(detalleguiaremisionAux.toString());
			
				if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					detalleguiaremisionAux.setsDescripcionGeneralEntityReporte1(detalleguiaremisionAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					detalleguiaremisionAux.setsDescripcionGeneralEntityReporte1(detalleguiaremisionAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					detalleguiaremisionAux.setsDescripcionGeneralEntityReporte1(detalleguiaremisionAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					detalleguiaremisionAux.setsDescripcionGeneralEntityReporte1(detalleguiaremisionAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_IDGUIAREMISION)) {
					existe=true;
					detalleguiaremisionAux.setsDescripcionGeneralEntityReporte1(detalleguiaremisionAux.getguiaremision_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_IDBODEGA)) {
					existe=true;
					detalleguiaremisionAux.setsDescripcionGeneralEntityReporte1(detalleguiaremisionAux.getbodega_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_IDPRODUCTO)) {
					existe=true;
					detalleguiaremisionAux.setsDescripcionGeneralEntityReporte1(detalleguiaremisionAux.getproducto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_IDUNIDAD)) {
					existe=true;
					detalleguiaremisionAux.setsDescripcionGeneralEntityReporte1(detalleguiaremisionAux.getunidad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_IDCENTROCOSTO)) {
					existe=true;
					detalleguiaremisionAux.setsDescripcionGeneralEntityReporte1(detalleguiaremisionAux.getcentrocosto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADENVASES)) {
					existe=true;
					detalleguiaremisionAux.setsDescripcionGeneralEntityReporte1(detalleguiaremisionAux.getcantidad_envases().toString());
				}
				 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDADAUXILIAR)) {
					existe=true;
					detalleguiaremisionAux.setsDescripcionGeneralEntityReporte1(detalleguiaremisionAux.getcantidad_auxiliar().toString());
				}
				 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					detalleguiaremisionAux.setsDescripcionGeneralEntityReporte1(detalleguiaremisionAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_CANTIDAD)) {
					existe=true;
					detalleguiaremisionAux.setsDescripcionGeneralEntityReporte1(detalleguiaremisionAux.getcantidad().toString());
				}
				 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_LOTE)) {
					existe=true;
					detalleguiaremisionAux.setsDescripcionGeneralEntityReporte1(detalleguiaremisionAux.getlote());
				}
				 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_LOTECLIENTE)) {
					existe=true;
					detalleguiaremisionAux.setsDescripcionGeneralEntityReporte1(detalleguiaremisionAux.getlote_cliente());
				}
				 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_ORDENCOMPRA)) {
					existe=true;
					detalleguiaremisionAux.setsDescripcionGeneralEntityReporte1(detalleguiaremisionAux.getorden_compra());
				}
				 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_AREA)) {
					existe=true;
					detalleguiaremisionAux.setsDescripcionGeneralEntityReporte1(detalleguiaremisionAux.getarea());
				}
				 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_MEDIDAS)) {
					existe=true;
					detalleguiaremisionAux.setsDescripcionGeneralEntityReporte1(detalleguiaremisionAux.getmedidas());
				}
				 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO)) {
					existe=true;
					detalleguiaremisionAux.setsDescripcionGeneralEntityReporte1(detalleguiaremisionAux.getacabado());
				}
				 else if(sTipoSeleccionar.equals(DetalleGuiaRemisionConstantesFunciones.LABEL_ACABADO2)) {
					existe=true;
					detalleguiaremisionAux.setsDescripcionGeneralEntityReporte1(detalleguiaremisionAux.getacabado2());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetalleGuiaRemisionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesDetalleGuiaRemision(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoDetalleGuiaRemision=true;
				this.isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision=true;
				this.isVisibilidadCeldaGuardarCambiosDetalleGuiaRemision=true;
			}
			
			this.isVisibilidadCeldaModificarDetalleGuiaRemision=false;
			this.isVisibilidadCeldaActualizarDetalleGuiaRemision=false;
			this.isVisibilidadCeldaEliminarDetalleGuiaRemision=false;
			this.isVisibilidadCeldaCancelarDetalleGuiaRemision=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleGuiaRemision=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleGuiaRemision=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoDetalleGuiaRemision=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleGuiaRemision=false;
			this.isVisibilidadCeldaModificarDetalleGuiaRemision=false;
			this.isVisibilidadCeldaActualizarDetalleGuiaRemision=true;
			this.isVisibilidadCeldaEliminarDetalleGuiaRemision=false;
			this.isVisibilidadCeldaCancelarDetalleGuiaRemision=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleGuiaRemision=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleGuiaRemision=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoDetalleGuiaRemision=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleGuiaRemision=false;
			this.isVisibilidadCeldaModificarDetalleGuiaRemision=false;
			this.isVisibilidadCeldaActualizarDetalleGuiaRemision=true;
			this.isVisibilidadCeldaEliminarDetalleGuiaRemision=true;
			this.isVisibilidadCeldaCancelarDetalleGuiaRemision=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleGuiaRemision=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleGuiaRemision=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoDetalleGuiaRemision=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleGuiaRemision=false;
			this.isVisibilidadCeldaModificarDetalleGuiaRemision=false;
			this.isVisibilidadCeldaActualizarDetalleGuiaRemision=true;
			this.isVisibilidadCeldaEliminarDetalleGuiaRemision=false;
			this.isVisibilidadCeldaCancelarDetalleGuiaRemision=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleGuiaRemision=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleGuiaRemision=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoDetalleGuiaRemision=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision=true;
			this.isVisibilidadCeldaGuardarCambiosDetalleGuiaRemision=true;
			this.isVisibilidadCeldaModificarDetalleGuiaRemision=false;
			this.isVisibilidadCeldaActualizarDetalleGuiaRemision=false;
			this.isVisibilidadCeldaEliminarDetalleGuiaRemision=false;
			this.isVisibilidadCeldaCancelarDetalleGuiaRemision=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleGuiaRemision=true;
				} else {
					this.isVisibilidadCeldaGuardarDetalleGuiaRemision=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoDetalleGuiaRemision=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleGuiaRemision=false;
			this.isVisibilidadCeldaActualizarDetalleGuiaRemision=false;
			this.isVisibilidadCeldaEliminarDetalleGuiaRemision=false;
			this.isVisibilidadCeldaCancelarDetalleGuiaRemision=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleGuiaRemision=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleGuiaRemision=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoDetalleGuiaRemision=false;
			this.isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleGuiaRemision=false;
			this.isVisibilidadCeldaModificarDetalleGuiaRemision=true;
			this.isVisibilidadCeldaActualizarDetalleGuiaRemision=false;
			this.isVisibilidadCeldaEliminarDetalleGuiaRemision=false;
			this.isVisibilidadCeldaCancelarDetalleGuiaRemision=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetalleGuiaRemision=false;
				} else {
					this.isVisibilidadCeldaGuardarDetalleGuiaRemision=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(DetalleGuiaRemisionJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoDetalleGuiaRemision=true;
			this.isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision=true;
			this.isVisibilidadCeldaGuardarCambiosDetalleGuiaRemision=true;
		} else {
			this.actualizarEstadoPanelsDetalleGuiaRemision(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarDetalleGuiaRemision=false;
			//this.isVisibilidadCeldaVerFormDetalleGuiaRemision=false;
			this.isVisibilidadCeldaDuplicarDetalleGuiaRemision=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!detalleguiaremisionSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision=false;
		} else {
			this.isVisibilidadCeldaNuevoDetalleGuiaRemision=false;
			this.isVisibilidadCeldaGuardarCambiosDetalleGuiaRemision=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
			if(!detalleguiaremisionSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision=false;												
			}
			
			this.jButtonCerrarDetalleGuiaRemision.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesDetalleGuiaRemision=false;
		}
		
		if(!this.permiteMantenimiento(this.detalleguiaremision)) {
			this.isVisibilidadCeldaActualizarDetalleGuiaRemision=false;
			this.isVisibilidadCeldaEliminarDetalleGuiaRemision=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesDetalleGuiaRemision() {
	}
	
	public void actualizarEstadoPanelsDetalleGuiaRemision(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionDetalleGuiaRemision!=null) {
				this.jScrollPanelDatosEdicionDetalleGuiaRemision.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleGuiaRemision!=null) {
				this.jTabbedPaneBusquedasDetalleGuiaRemision.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleGuiaRemision!=null) {
				this.jScrollPanelDatosDetalleGuiaRemision.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleGuiaRemision!=null) {
				this.jPanelPaginacionDetalleGuiaRemision.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleGuiaRemision!=null) {
				this.jPanelParametrosReportesDetalleGuiaRemision.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionDetalleGuiaRemision!=null) {
				this.jScrollPanelDatosEdicionDetalleGuiaRemision.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleGuiaRemision!=null) {
				this.jTabbedPaneBusquedasDetalleGuiaRemision.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosDetalleGuiaRemision!=null) {
				this.jScrollPanelDatosDetalleGuiaRemision.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleGuiaRemision!=null) {
				this.jPanelPaginacionDetalleGuiaRemision.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleGuiaRemision!=null) {
				this.jPanelParametrosReportesDetalleGuiaRemision.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionDetalleGuiaRemision!=null) {
				this.jScrollPanelDatosEdicionDetalleGuiaRemision.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleGuiaRemision!=null) {
				this.jTabbedPaneBusquedasDetalleGuiaRemision.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosDetalleGuiaRemision!=null) {
				this.jScrollPanelDatosDetalleGuiaRemision.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleGuiaRemision!=null) {
				this.jPanelPaginacionDetalleGuiaRemision.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleGuiaRemision!=null) {
				this.jPanelParametrosReportesDetalleGuiaRemision.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionDetalleGuiaRemision!=null) {
				this.jScrollPanelDatosEdicionDetalleGuiaRemision.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleGuiaRemision!=null) {
				this.jTabbedPaneBusquedasDetalleGuiaRemision.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosDetalleGuiaRemision!=null) {
				this.jScrollPanelDatosDetalleGuiaRemision.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetalleGuiaRemision!=null) {
				this.jPanelPaginacionDetalleGuiaRemision.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetalleGuiaRemision!=null) {
				this.jPanelParametrosReportesDetalleGuiaRemision.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionDetalleGuiaRemision!=null) {
				this.jScrollPanelDatosEdicionDetalleGuiaRemision.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleGuiaRemision!=null) {
				this.jTabbedPaneBusquedasDetalleGuiaRemision.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleGuiaRemision!=null) {
				this.jScrollPanelDatosDetalleGuiaRemision.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleGuiaRemision!=null) {
				this.jPanelPaginacionDetalleGuiaRemision.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleGuiaRemision!=null) {
				this.jPanelParametrosReportesDetalleGuiaRemision.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionDetalleGuiaRemision!=null) {
				this.jScrollPanelDatosEdicionDetalleGuiaRemision.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleGuiaRemision!=null) {
				this.jTabbedPaneBusquedasDetalleGuiaRemision.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleGuiaRemision!=null) {
				this.jScrollPanelDatosDetalleGuiaRemision.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleGuiaRemision!=null) {
				this.jPanelPaginacionDetalleGuiaRemision.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleGuiaRemision!=null) {
				this.jPanelParametrosReportesDetalleGuiaRemision.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionDetalleGuiaRemision!=null) {
				this.jScrollPanelDatosEdicionDetalleGuiaRemision.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleGuiaRemision!=null) {
				this.jTabbedPaneBusquedasDetalleGuiaRemision.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetalleGuiaRemision!=null) {
				this.jScrollPanelDatosDetalleGuiaRemision.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetalleGuiaRemision!=null) {
				this.jPanelPaginacionDetalleGuiaRemision.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetalleGuiaRemision!=null) {
				this.jPanelParametrosReportesDetalleGuiaRemision.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasDetalleGuiaRemision!=null) {
					this.jTabbedPaneBusquedasDetalleGuiaRemision.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesDetalleGuiaRemision!=null) {
				this.jPanelParametrosReportesDetalleGuiaRemision.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.detalleguiaremisionSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetalleGuiaRemision!=null) {
				this.jTabbedPaneBusquedasDetalleGuiaRemision.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesDetalleGuiaRemision!=null) {
				this.jPanelParametrosReportesDetalleGuiaRemision.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdBodega=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdBodegaDetalleGuiaRemision);}

			this.isVisibilidadFK_IdCentroCosto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdCentroCostoDetalleGuiaRemision);}

			this.isVisibilidadFK_IdGuiaRemision=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdGuiaRemision) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdGuiaRemisionDetalleGuiaRemision);}

			this.isVisibilidadFK_IdProducto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdProductoDetalleGuiaRemision);}

			this.isVisibilidadFK_IdUnidad=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdUnidadDetalleGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdBodega=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdBodegaDetalleGuiaRemision);}

			this.isVisibilidadFK_IdCentroCosto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdCentroCostoDetalleGuiaRemision);}

			this.isVisibilidadFK_IdGuiaRemision=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdGuiaRemision) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdGuiaRemisionDetalleGuiaRemision);}

			this.isVisibilidadFK_IdProducto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdProductoDetalleGuiaRemision);}

			this.isVisibilidadFK_IdUnidad=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdUnidadDetalleGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdBodega=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdBodegaDetalleGuiaRemision);}

			this.isVisibilidadFK_IdCentroCosto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdCentroCostoDetalleGuiaRemision);}

			this.isVisibilidadFK_IdGuiaRemision=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdGuiaRemision) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdGuiaRemisionDetalleGuiaRemision);}

			this.isVisibilidadFK_IdProducto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdProductoDetalleGuiaRemision);}

			this.isVisibilidadFK_IdUnidad=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdUnidadDetalleGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdBodega=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdBodegaDetalleGuiaRemision);}

			this.isVisibilidadFK_IdCentroCosto=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdCentroCostoDetalleGuiaRemision);}

			this.isVisibilidadFK_IdGuiaRemision=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdGuiaRemision) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdGuiaRemisionDetalleGuiaRemision);}

			this.isVisibilidadFK_IdProducto=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdProductoDetalleGuiaRemision);}

			this.isVisibilidadFK_IdUnidad=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdUnidadDetalleGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaGuiaRemision(Boolean isParaGuiaRemision){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaGuiaRemisionNegation=!isParaGuiaRemision;

			this.isVisibilidadFK_IdBodega=isParaGuiaRemisionNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdBodegaDetalleGuiaRemision);}

			this.isVisibilidadFK_IdCentroCosto=isParaGuiaRemisionNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdCentroCostoDetalleGuiaRemision);}

			this.isVisibilidadFK_IdGuiaRemision=isParaGuiaRemision;
			if(!this.isVisibilidadFK_IdGuiaRemision) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdGuiaRemisionDetalleGuiaRemision);}

			this.isVisibilidadFK_IdProducto=isParaGuiaRemisionNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdProductoDetalleGuiaRemision);}

			this.isVisibilidadFK_IdUnidad=isParaGuiaRemisionNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdUnidadDetalleGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaBodega(Boolean isParaBodega){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaBodegaNegation=!isParaBodega;

			this.isVisibilidadFK_IdBodega=isParaBodega;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdBodegaDetalleGuiaRemision);}

			this.isVisibilidadFK_IdCentroCosto=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdCentroCostoDetalleGuiaRemision);}

			this.isVisibilidadFK_IdGuiaRemision=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdGuiaRemision) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdGuiaRemisionDetalleGuiaRemision);}

			this.isVisibilidadFK_IdProducto=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdProductoDetalleGuiaRemision);}

			this.isVisibilidadFK_IdUnidad=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdUnidadDetalleGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaProducto(Boolean isParaProducto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaProductoNegation=!isParaProducto;

			this.isVisibilidadFK_IdBodega=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdBodegaDetalleGuiaRemision);}

			this.isVisibilidadFK_IdCentroCosto=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdCentroCostoDetalleGuiaRemision);}

			this.isVisibilidadFK_IdGuiaRemision=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdGuiaRemision) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdGuiaRemisionDetalleGuiaRemision);}

			this.isVisibilidadFK_IdProducto=isParaProducto;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdProductoDetalleGuiaRemision);}

			this.isVisibilidadFK_IdUnidad=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdUnidadDetalleGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaUnidad(Boolean isParaUnidad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUnidadNegation=!isParaUnidad;

			this.isVisibilidadFK_IdBodega=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdBodegaDetalleGuiaRemision);}

			this.isVisibilidadFK_IdCentroCosto=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdCentroCostoDetalleGuiaRemision);}

			this.isVisibilidadFK_IdGuiaRemision=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdGuiaRemision) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdGuiaRemisionDetalleGuiaRemision);}

			this.isVisibilidadFK_IdProducto=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdProductoDetalleGuiaRemision);}

			this.isVisibilidadFK_IdUnidad=isParaUnidad;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdUnidadDetalleGuiaRemision);}
		}
		
	}

	public void setVisibilidadBusquedasParaCentroCosto(Boolean isParaCentroCosto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCentroCostoNegation=!isParaCentroCosto;

			this.isVisibilidadFK_IdBodega=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdBodegaDetalleGuiaRemision);}

			this.isVisibilidadFK_IdCentroCosto=isParaCentroCosto;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdCentroCostoDetalleGuiaRemision);}

			this.isVisibilidadFK_IdGuiaRemision=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdGuiaRemision) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdGuiaRemisionDetalleGuiaRemision);}

			this.isVisibilidadFK_IdProducto=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdProductoDetalleGuiaRemision);}

			this.isVisibilidadFK_IdUnidad=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(jPanelFK_IdUnidadDetalleGuiaRemision);}
		}
		
	}
	
	
	
	

	public String registrarSesionDetalleGuiaRemisionParaBusquedaProductos() throws Exception {
		Boolean isPaginaPopupProducto=false;

		try {

			if(detalleguiaremisionSessionBean==null) {
				detalleguiaremisionSessionBean=new DetalleGuiaRemisionSessionBean();
			}

			if(productoSessionBean==null) {
				productoSessionBean=new ProductoSessionBean();
			}

			productoSessionBean.setsPathNavegacionActual(detalleguiaremisionSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProductoConstantesFunciones.SCLASSWEBTITULO);
			productoSessionBean.setisPermiteRecargarInformacion(false);
			productoSessionBean.setisPaginaPopup(true);
			isPaginaPopupProducto=productoSessionBean.getisPaginaPopup();
			productoSessionBean.setisPaginaPopup(false);
			productoSessionBean.setEstaModoBusqueda(true);
			productoSessionBean.setsFuncionBusquedaRapida("window.opener.detalleguiaremisionFuncionGeneral.setCombosCodigoDesdeBusquedaid_producto(TO_REPLACE);");
			productoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProducto(true);
			productoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProducto(DetalleGuiaRemisionConstantesFunciones.SNOMBREOPCION);
			//productoSessionBean.setisBusquedaDesdeForeignKeySesionDetalleGuiaRemision(true);
			//productoSessionBean.setlidDetalleGuiaRemisionActual(this.idDetalleGuiaRemisionActual);

			detalleguiaremisionSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetalleGuiaRemision(true);
			detalleguiaremisionSessionBean.setlIdDetalleGuiaRemisionActualForeignKey(this.idDetalleGuiaRemisionActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//DetalleGuiaRemisionSessionBean detalleguiaremisionSessionBean=new DetalleGuiaRemisionSessionBean();
		
		if(this.detalleguiaremisionSessionBean==null) {
			this.detalleguiaremisionSessionBean=new DetalleGuiaRemisionSessionBean();
		}
		
		this.detalleguiaremisionSessionBean.setsUltimaBusquedaDetalleGuiaRemision(this.getsAccionBusqueda());
		this.detalleguiaremisionSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.detalleguiaremisionSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
			detalleguiaremisionSessionBean.setid_bodega(this.getid_bodegaFK_IdBodega());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
			detalleguiaremisionSessionBean.setid_centro_costo(this.getid_centro_costoFK_IdCentroCosto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			detalleguiaremisionSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			detalleguiaremisionSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdGuiaRemision")) {
			detalleguiaremisionSessionBean.setid_guia_remision(this.getid_guia_remisionFK_IdGuiaRemision());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			detalleguiaremisionSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdProducto")) {
			detalleguiaremisionSessionBean.setid_producto(this.getid_productoFK_IdProducto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			detalleguiaremisionSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUnidad")) {
			detalleguiaremisionSessionBean.setid_unidad(this.getid_unidadFK_IdUnidad());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//DetalleGuiaRemisionSessionBean detalleguiaremisionSessionBean=new DetalleGuiaRemisionSessionBean();
		
		if(this.detalleguiaremisionSessionBean==null) {
			this.detalleguiaremisionSessionBean=new DetalleGuiaRemisionSessionBean();
		}
		
		if(this.detalleguiaremisionSessionBean.getsUltimaBusquedaDetalleGuiaRemision()!=null&&!this.detalleguiaremisionSessionBean.getsUltimaBusquedaDetalleGuiaRemision().equals("")) {
			this.setsAccionBusqueda(detalleguiaremisionSessionBean.getsUltimaBusquedaDetalleGuiaRemision());
			this.setiNumeroPaginacion(detalleguiaremisionSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(detalleguiaremisionSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
				this.setid_bodegaFK_IdBodega(detalleguiaremisionSessionBean.getid_bodega());
				detalleguiaremisionSessionBean.setid_bodega(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
				this.setid_centro_costoFK_IdCentroCosto(detalleguiaremisionSessionBean.getid_centro_costo());
				detalleguiaremisionSessionBean.setid_centro_costo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(detalleguiaremisionSessionBean.getid_ejercicio());
				detalleguiaremisionSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(detalleguiaremisionSessionBean.getid_empresa());
				detalleguiaremisionSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdGuiaRemision")) {
				this.setid_guia_remisionFK_IdGuiaRemision(detalleguiaremisionSessionBean.getid_guia_remision());
				detalleguiaremisionSessionBean.setid_guia_remision(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(detalleguiaremisionSessionBean.getid_periodo());
				detalleguiaremisionSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdProducto")) {
				this.setid_productoFK_IdProducto(detalleguiaremisionSessionBean.getid_producto());
				detalleguiaremisionSessionBean.setid_producto(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(detalleguiaremisionSessionBean.getid_sucursal());
				detalleguiaremisionSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUnidad")) {
				this.setid_unidadFK_IdUnidad(detalleguiaremisionSessionBean.getid_unidad());
				detalleguiaremisionSessionBean.setid_unidad(-1L);
			}
		}
		
		this.detalleguiaremisionSessionBean.setsUltimaBusquedaDetalleGuiaRemision("");
		this.detalleguiaremisionSessionBean.setiNumeroPaginacion(DetalleGuiaRemisionConstantesFunciones.INUMEROPAGINACION);
		this.detalleguiaremisionSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaDetalleGuiaRemision(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioDetalleGuiaRemision() {
		this.updateBorderResaltarBusquedasFormularioDetalleGuiaRemision();
		this.updateVisibilidadBusquedasFormularioDetalleGuiaRemision();
		this.updateHabilitarBusquedasFormularioDetalleGuiaRemision();
	}
	
	public void updateBorderResaltarBusquedasFormularioDetalleGuiaRemision() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponents().length>0) {
	

		if(this.detalleguiaremisionConstantesFunciones.resaltarFK_IdBodegaDetalleGuiaRemision!=null) {
			index= this.jTabbedPaneBusquedasDetalleGuiaRemision.indexOfComponent(this.jPanelFK_IdBodegaDetalleGuiaRemision);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponent(index);
				jPanel.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarFK_IdBodegaDetalleGuiaRemision);
			}
		}

		if(this.detalleguiaremisionConstantesFunciones.resaltarFK_IdCentroCostoDetalleGuiaRemision!=null) {
			index= this.jTabbedPaneBusquedasDetalleGuiaRemision.indexOfComponent(this.jPanelFK_IdCentroCostoDetalleGuiaRemision);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponent(index);
				jPanel.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarFK_IdCentroCostoDetalleGuiaRemision);
			}
		}

		if(this.detalleguiaremisionConstantesFunciones.resaltarFK_IdGuiaRemisionDetalleGuiaRemision!=null) {
			index= this.jTabbedPaneBusquedasDetalleGuiaRemision.indexOfComponent(this.jPanelFK_IdGuiaRemisionDetalleGuiaRemision);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponent(index);
				jPanel.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarFK_IdGuiaRemisionDetalleGuiaRemision);
			}
		}

		if(this.detalleguiaremisionConstantesFunciones.resaltarFK_IdProductoDetalleGuiaRemision!=null) {
			index= this.jTabbedPaneBusquedasDetalleGuiaRemision.indexOfComponent(this.jPanelFK_IdProductoDetalleGuiaRemision);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponent(index);
				jPanel.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarFK_IdProductoDetalleGuiaRemision);
			}
		}

		if(this.detalleguiaremisionConstantesFunciones.resaltarFK_IdUnidadDetalleGuiaRemision!=null) {
			index= this.jTabbedPaneBusquedasDetalleGuiaRemision.indexOfComponent(this.jPanelFK_IdUnidadDetalleGuiaRemision);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponent(index);
				jPanel.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarFK_IdUnidadDetalleGuiaRemision);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioDetalleGuiaRemision() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetalleGuiaRemision.indexOfComponent(this.jPanelFK_IdBodegaDetalleGuiaRemision);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarFK_IdBodegaDetalleGuiaRemision);
			if(!this.detalleguiaremisionConstantesFunciones.mostrarFK_IdBodegaDetalleGuiaRemision && index>-1) {
				this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleGuiaRemision.indexOfComponent(this.jPanelFK_IdCentroCostoDetalleGuiaRemision);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarFK_IdCentroCostoDetalleGuiaRemision);
			if(!this.detalleguiaremisionConstantesFunciones.mostrarFK_IdCentroCostoDetalleGuiaRemision && index>-1) {
				this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleGuiaRemision.indexOfComponent(this.jPanelFK_IdGuiaRemisionDetalleGuiaRemision);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarFK_IdGuiaRemisionDetalleGuiaRemision);
			if(!this.detalleguiaremisionConstantesFunciones.mostrarFK_IdGuiaRemisionDetalleGuiaRemision && index>-1) {
				this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleGuiaRemision.indexOfComponent(this.jPanelFK_IdProductoDetalleGuiaRemision);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarFK_IdProductoDetalleGuiaRemision);
			if(!this.detalleguiaremisionConstantesFunciones.mostrarFK_IdProductoDetalleGuiaRemision && index>-1) {
				this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetalleGuiaRemision.indexOfComponent(this.jPanelFK_IdUnidadDetalleGuiaRemision);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarFK_IdUnidadDetalleGuiaRemision);
			if(!this.detalleguiaremisionConstantesFunciones.mostrarFK_IdUnidadDetalleGuiaRemision && index>-1) {
				this.jTabbedPaneBusquedasDetalleGuiaRemision.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioDetalleGuiaRemision() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetalleGuiaRemision.indexOfComponent(this.jPanelFK_IdBodegaDetalleGuiaRemision);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleguiaremisionConstantesFunciones.activarFK_IdBodegaDetalleGuiaRemision);
				this.jTabbedPaneBusquedasDetalleGuiaRemision.setEnabledAt(index,this.detalleguiaremisionConstantesFunciones.activarFK_IdBodegaDetalleGuiaRemision);
			}

			index= this.jTabbedPaneBusquedasDetalleGuiaRemision.indexOfComponent(this.jPanelFK_IdCentroCostoDetalleGuiaRemision);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleguiaremisionConstantesFunciones.activarFK_IdCentroCostoDetalleGuiaRemision);
				this.jTabbedPaneBusquedasDetalleGuiaRemision.setEnabledAt(index,this.detalleguiaremisionConstantesFunciones.activarFK_IdCentroCostoDetalleGuiaRemision);
			}

			index= this.jTabbedPaneBusquedasDetalleGuiaRemision.indexOfComponent(this.jPanelFK_IdGuiaRemisionDetalleGuiaRemision);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleguiaremisionConstantesFunciones.activarFK_IdGuiaRemisionDetalleGuiaRemision);
				this.jTabbedPaneBusquedasDetalleGuiaRemision.setEnabledAt(index,this.detalleguiaremisionConstantesFunciones.activarFK_IdGuiaRemisionDetalleGuiaRemision);
			}

			index= this.jTabbedPaneBusquedasDetalleGuiaRemision.indexOfComponent(this.jPanelFK_IdProductoDetalleGuiaRemision);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleguiaremisionConstantesFunciones.activarFK_IdProductoDetalleGuiaRemision);
				this.jTabbedPaneBusquedasDetalleGuiaRemision.setEnabledAt(index,this.detalleguiaremisionConstantesFunciones.activarFK_IdProductoDetalleGuiaRemision);
			}

			index= this.jTabbedPaneBusquedasDetalleGuiaRemision.indexOfComponent(this.jPanelFK_IdUnidadDetalleGuiaRemision);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detalleguiaremisionConstantesFunciones.activarFK_IdUnidadDetalleGuiaRemision);
				this.jTabbedPaneBusquedasDetalleGuiaRemision.setEnabledAt(index,this.detalleguiaremisionConstantesFunciones.activarFK_IdUnidadDetalleGuiaRemision);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaDetalleGuiaRemision(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdBodega")) {
			index= this.jTabbedPaneBusquedasDetalleGuiaRemision.indexOfComponent(this.jPanelFK_IdBodegaDetalleGuiaRemision);

			this.jTabbedPaneBusquedasDetalleGuiaRemision.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponent(index);

			this.detalleguiaremisionConstantesFunciones.setResaltarFK_IdBodegaDetalleGuiaRemision(resaltar);

			jPanel.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarFK_IdBodegaDetalleGuiaRemision);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCentroCosto")) {
			index= this.jTabbedPaneBusquedasDetalleGuiaRemision.indexOfComponent(this.jPanelFK_IdCentroCostoDetalleGuiaRemision);

			this.jTabbedPaneBusquedasDetalleGuiaRemision.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponent(index);

			this.detalleguiaremisionConstantesFunciones.setResaltarFK_IdCentroCostoDetalleGuiaRemision(resaltar);

			jPanel.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarFK_IdCentroCostoDetalleGuiaRemision);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdGuiaRemision")) {
			index= this.jTabbedPaneBusquedasDetalleGuiaRemision.indexOfComponent(this.jPanelFK_IdGuiaRemisionDetalleGuiaRemision);

			this.jTabbedPaneBusquedasDetalleGuiaRemision.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponent(index);

			this.detalleguiaremisionConstantesFunciones.setResaltarFK_IdGuiaRemisionDetalleGuiaRemision(resaltar);

			jPanel.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarFK_IdGuiaRemisionDetalleGuiaRemision);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdProducto")) {
			index= this.jTabbedPaneBusquedasDetalleGuiaRemision.indexOfComponent(this.jPanelFK_IdProductoDetalleGuiaRemision);

			this.jTabbedPaneBusquedasDetalleGuiaRemision.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponent(index);

			this.detalleguiaremisionConstantesFunciones.setResaltarFK_IdProductoDetalleGuiaRemision(resaltar);

			jPanel.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarFK_IdProductoDetalleGuiaRemision);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdUnidad")) {
			index= this.jTabbedPaneBusquedasDetalleGuiaRemision.indexOfComponent(this.jPanelFK_IdUnidadDetalleGuiaRemision);

			this.jTabbedPaneBusquedasDetalleGuiaRemision.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetalleGuiaRemision.getComponent(index);

			this.detalleguiaremisionConstantesFunciones.setResaltarFK_IdUnidadDetalleGuiaRemision(resaltar);

			jPanel.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarFK_IdUnidadDetalleGuiaRemision);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarDetalleGuiaRemision.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioDetalleGuiaRemision() throws Exception {

		if(this.jInternalFrameDetalleFormDetalleGuiaRemision==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioDetalleGuiaRemision();
		this.updateVisibilidadResaltarControlesFormularioDetalleGuiaRemision();
		this.updateHabilitarResaltarControlesFormularioDetalleGuiaRemision();
		
	}
	
	public void updateBorderResaltarControlesFormularioDetalleGuiaRemision() throws Exception {
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.detalleguiaremisionConstantesFunciones.resaltaridDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelidDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltaridDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarid_empresaDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_empresaDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarid_empresaDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarid_sucursalDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_sucursalDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarid_sucursalDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarid_ejercicioDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_ejercicioDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarid_ejercicioDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarid_periodoDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_periodoDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarid_periodoDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarid_guia_remisionDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_guia_remisionDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarid_guia_remisionDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarid_bodegaDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarid_bodegaDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarid_productoDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarid_productoDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarid_unidadDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_unidadDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarid_unidadDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarid_centro_costoDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_centro_costoDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarid_centro_costoDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarcantidad_envasesDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidad_envasesDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarcantidad_envasesDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarcantidad_auxiliarDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidad_auxiliarDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarcantidad_auxiliarDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltardescripcionDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextAreadescripcionDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltardescripcionDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarcantidadDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidadDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarcantidadDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarmontoDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldmontoDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarmontoDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarprecioDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldprecioDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarprecioDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarporcentaje_descuentoDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldporcentaje_descuentoDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarporcentaje_descuentoDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltardescuentoDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuentoDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltardescuentoDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltardescuento2DetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuento2DetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltardescuento2DetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltardescuento3DetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuento3DetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltardescuento3DetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarporcentaje_ivaDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldporcentaje_ivaDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarporcentaje_ivaDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarivaDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldivaDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarivaDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltartotal_descuentoDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotal_descuentoDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltartotal_descuentoDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltartotal_impuestoDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotal_impuestoDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltartotal_impuestoDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarsub_totalDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldsub_totalDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarsub_totalDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltartotalDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotalDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltartotalDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarloteDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldloteDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarloteDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarlote_clienteDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldlote_clienteDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarlote_clienteDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarorden_compraDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldorden_compraDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarorden_compraDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarareaDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldareaDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarareaDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltarmedidasDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldmedidasDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltarmedidasDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltaracabadoDetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldacabadoDetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltaracabadoDetalleGuiaRemision);}
		if(this.detalleguiaremisionConstantesFunciones.resaltaracabado2DetalleGuiaRemision!=null && this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldacabado2DetalleGuiaRemision.setBorder(this.detalleguiaremisionConstantesFunciones.resaltaracabado2DetalleGuiaRemision);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioDetalleGuiaRemision() throws Exception {		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
	
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelidDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostraridDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelidDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostraridDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_empresaDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarid_empresaDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelid_empresaDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarid_empresaDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_sucursalDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarid_sucursalDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelid_sucursalDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarid_sucursalDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_ejercicioDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarid_ejercicioDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelid_ejercicioDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarid_ejercicioDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_periodoDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarid_periodoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelid_periodoDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarid_periodoDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_guia_remisionDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarid_guia_remisionDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelid_guia_remisionDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarid_guia_remisionDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarid_bodegaDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelid_bodegaDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarid_bodegaDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarid_productoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelid_productoDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarid_productoDetalleGuiaRemision);
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_productoDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarid_productoDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_unidadDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarid_unidadDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelid_unidadDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarid_unidadDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_centro_costoDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarid_centro_costoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelid_centro_costoDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarid_centro_costoDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidad_envasesDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarcantidad_envasesDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelcantidad_envasesDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarcantidad_envasesDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidad_auxiliarDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarcantidad_auxiliarDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelcantidad_auxiliarDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarcantidad_auxiliarDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextAreadescripcionDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrardescripcionDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPaneldescripcionDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrardescripcionDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidadDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarcantidadDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelcantidadDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarcantidadDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldmontoDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarmontoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelmontoDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarmontoDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldprecioDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarprecioDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelprecioDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarprecioDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldporcentaje_descuentoDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarporcentaje_descuentoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelporcentaje_descuentoDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarporcentaje_descuentoDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuentoDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrardescuentoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPaneldescuentoDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrardescuentoDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuento2DetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrardescuento2DetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPaneldescuento2DetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrardescuento2DetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuento3DetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrardescuento3DetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPaneldescuento3DetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrardescuento3DetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldporcentaje_ivaDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarporcentaje_ivaDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelporcentaje_ivaDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarporcentaje_ivaDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldivaDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarivaDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelivaDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarivaDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotal_descuentoDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrartotal_descuentoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPaneltotal_descuentoDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrartotal_descuentoDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotal_impuestoDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrartotal_impuestoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPaneltotal_impuestoDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrartotal_impuestoDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldsub_totalDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarsub_totalDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelsub_totalDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarsub_totalDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotalDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrartotalDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPaneltotalDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrartotalDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldloteDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarloteDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelloteDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarloteDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldlote_clienteDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarlote_clienteDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanellote_clienteDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarlote_clienteDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldorden_compraDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarorden_compraDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelorden_compraDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarorden_compraDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldareaDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarareaDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelareaDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarareaDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldmedidasDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarmedidasDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelmedidasDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostrarmedidasDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldacabadoDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostraracabadoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelacabadoDetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostraracabadoDetalleGuiaRemision);
		//this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldacabado2DetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostraracabado2DetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jPanelacabado2DetalleGuiaRemision.setVisible(this.detalleguiaremisionConstantesFunciones.mostraracabado2DetalleGuiaRemision);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioDetalleGuiaRemision() throws Exception {
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetalleGuiaRemision!=null) {
	
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jLabelidDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activaridDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_empresaDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarid_empresaDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_sucursalDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarid_sucursalDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_ejercicioDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarid_ejercicioDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_periodoDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarid_periodoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_guia_remisionDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarid_guia_remisionDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_bodegaDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarid_bodegaDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_productoDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarid_productoDetalleGuiaRemision);
			this.jInternalFrameDetalleFormDetalleGuiaRemision.jButtonid_productoDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarid_productoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_unidadDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarid_unidadDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jComboBoxid_centro_costoDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarid_centro_costoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidad_envasesDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarcantidad_envasesDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidad_auxiliarDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarcantidad_auxiliarDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextAreadescripcionDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activardescripcionDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldcantidadDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarcantidadDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldmontoDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarmontoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldprecioDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarprecioDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldporcentaje_descuentoDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarporcentaje_descuentoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuentoDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activardescuentoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuento2DetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activardescuento2DetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFielddescuento3DetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activardescuento3DetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldporcentaje_ivaDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarporcentaje_ivaDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldivaDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarivaDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotal_descuentoDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activartotal_descuentoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotal_impuestoDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activartotal_impuestoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldsub_totalDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarsub_totalDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldtotalDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activartotalDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldloteDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarloteDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldlote_clienteDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarlote_clienteDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldorden_compraDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarorden_compraDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldareaDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarareaDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldmedidasDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activarmedidasDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldacabadoDetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activaracabadoDetalleGuiaRemision);
		this.jInternalFrameDetalleFormDetalleGuiaRemision.jTextFieldacabado2DetalleGuiaRemision.setEnabled(this.detalleguiaremisionConstantesFunciones.activaracabado2DetalleGuiaRemision);
		}
	}
	
		
}