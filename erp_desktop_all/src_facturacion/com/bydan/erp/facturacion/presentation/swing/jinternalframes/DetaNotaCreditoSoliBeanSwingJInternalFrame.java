/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.facturacion.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.facturacion.util.DetaNotaCreditoSoliConstantesFunciones;
import com.bydan.erp.facturacion.util.DetaNotaCreditoSoliParameterReturnGeneral;
//import com.bydan.erp.facturacion.util.DetaNotaCreditoSoliParameterGeneral;
//import com.bydan.erp.facturacion.presentation.report.source.DetaNotaCreditoSoliBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.facturacion.resources.reportes.AuxiliarReportes;


import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.facturacion.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.facturacion.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class DetaNotaCreditoSoliBeanSwingJInternalFrame extends DetaNotaCreditoSoliJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(DetaNotaCreditoSoliBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<DetaNotaCreditoSoli> detanotacreditosoliValidator = new ClassValidator<DetaNotaCreditoSoli>(DetaNotaCreditoSoli.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public DetaNotaCreditoSoli detanotacreditosoli;	
	public DetaNotaCreditoSoli detanotacreditosoliAux;
	public DetaNotaCreditoSoli detanotacreditosoliAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public DetaNotaCreditoSoli detanotacreditosoliTotales;
	public Long idDetaNotaCreditoSoliActual;
	public Long iIdNuevoDetaNotaCreditoSoli=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

	public String sFinalQueryComboNotaCreditoSoli="";

	public List<NotaCreditoSoli> notacreditosolisForeignKey;

	public List<NotaCreditoSoli> getnotacreditosolisForeignKey() {
		return notacreditosolisForeignKey;
	}

	public void setnotacreditosolisForeignKey(List<NotaCreditoSoli> notacreditosolisForeignKey) {
		this.notacreditosolisForeignKey = notacreditosolisForeignKey;
	}

	//OBJETO FK ACTUAL
	public NotaCreditoSoli notacreditosoliForeignKey;

	public NotaCreditoSoli getnotacreditosoliForeignKey() {
		return notacreditosoliForeignKey;
	}

	public void setnotacreditosoliForeignKey(NotaCreditoSoli notacreditosoliForeignKey) {
		this.notacreditosoliForeignKey = notacreditosoliForeignKey;
	}

	public String sFinalQueryComboBodega="";

	public List<Bodega> bodegasForeignKey;

	public List<Bodega> getbodegasForeignKey() {
		return bodegasForeignKey;
	}

	public void setbodegasForeignKey(List<Bodega> bodegasForeignKey) {
		this.bodegasForeignKey = bodegasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Bodega bodegaForeignKey;

	public Bodega getbodegaForeignKey() {
		return bodegaForeignKey;
	}

	public void setbodegaForeignKey(Bodega bodegaForeignKey) {
		this.bodegaForeignKey = bodegaForeignKey;
	}

	public String sFinalQueryComboProducto="";

	public List<Producto> productosForeignKey;

	public List<Producto> getproductosForeignKey() {
		return productosForeignKey;
	}

	public void setproductosForeignKey(List<Producto> productosForeignKey) {
		this.productosForeignKey = productosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Producto productoForeignKey;

	public Producto getproductoForeignKey() {
		return productoForeignKey;
	}

	public void setproductoForeignKey(Producto productoForeignKey) {
		this.productoForeignKey = productoForeignKey;
	}

	public String sFinalQueryComboUnidad="";

	public List<Unidad> unidadsForeignKey;

	public List<Unidad> getunidadsForeignKey() {
		return unidadsForeignKey;
	}

	public void setunidadsForeignKey(List<Unidad> unidadsForeignKey) {
		this.unidadsForeignKey = unidadsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Unidad unidadForeignKey;

	public Unidad getunidadForeignKey() {
		return unidadForeignKey;
	}

	public void setunidadForeignKey(Unidad unidadForeignKey) {
		this.unidadForeignKey = unidadForeignKey;
	}

	public String sFinalQueryComboEmpaque="";

	public List<Empaque> empaquesForeignKey;

	public List<Empaque> getempaquesForeignKey() {
		return empaquesForeignKey;
	}

	public void setempaquesForeignKey(List<Empaque> empaquesForeignKey) {
		this.empaquesForeignKey = empaquesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empaque empaqueForeignKey;

	public Empaque getempaqueForeignKey() {
		return empaqueForeignKey;
	}

	public void setempaqueForeignKey(Empaque empaqueForeignKey) {
		this.empaqueForeignKey = empaqueForeignKey;
	}

	public String sFinalQueryComboTipoDevolucionEmpresa="";

	public List<TipoDevolucionEmpresa> tipodevolucionempresasForeignKey;

	public List<TipoDevolucionEmpresa> gettipodevolucionempresasForeignKey() {
		return tipodevolucionempresasForeignKey;
	}

	public void settipodevolucionempresasForeignKey(List<TipoDevolucionEmpresa> tipodevolucionempresasForeignKey) {
		this.tipodevolucionempresasForeignKey = tipodevolucionempresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoDevolucionEmpresa tipodevolucionempresaForeignKey;

	public TipoDevolucionEmpresa gettipodevolucionempresaForeignKey() {
		return tipodevolucionempresaForeignKey;
	}

	public void settipodevolucionempresaForeignKey(TipoDevolucionEmpresa tipodevolucionempresaForeignKey) {
		this.tipodevolucionempresaForeignKey = tipodevolucionempresaForeignKey;
	}

	public String sFinalQueryComboCentroCosto="";

	public List<CentroCosto> centrocostosForeignKey;

	public List<CentroCosto> getcentrocostosForeignKey() {
		return centrocostosForeignKey;
	}

	public void setcentrocostosForeignKey(List<CentroCosto> centrocostosForeignKey) {
		this.centrocostosForeignKey = centrocostosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CentroCosto centrocostoForeignKey;

	public CentroCosto getcentrocostoForeignKey() {
		return centrocostoForeignKey;
	}

	public void setcentrocostoForeignKey(CentroCosto centrocostoForeignKey) {
		this.centrocostoForeignKey = centrocostoForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idProductoActual=0L;

	public Long getidProductoActual() {
		return idProductoActual;
	}

	public void setidProductoActual(Long idProductoActual) {
		this.idProductoActual= idProductoActual;
	}
	public Long idCentroCostoActual=0L;

	public Long getidCentroCostoActual() {
		return idCentroCostoActual;
	}

	public void setidCentroCostoActual(Long idCentroCostoActual) {
		this.idCentroCostoActual= idCentroCostoActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoDetaNotaCreditoSoli;
	public Boolean isPermisoNuevoDetaNotaCreditoSoli;
	public Boolean isPermisoActualizarDetaNotaCreditoSoli;
	public Boolean isPermisoActualizarOriginalDetaNotaCreditoSoli;
	public Boolean isPermisoEliminarDetaNotaCreditoSoli;
	public Boolean isPermisoGuardarCambiosDetaNotaCreditoSoli;
	public Boolean isPermisoConsultaDetaNotaCreditoSoli;
	public Boolean isPermisoBusquedaDetaNotaCreditoSoli;
	public Boolean isPermisoReporteDetaNotaCreditoSoli;
	public Boolean isPermisoPaginacionMedioDetaNotaCreditoSoli;
	public Boolean isPermisoPaginacionAltoDetaNotaCreditoSoli;
	public Boolean isPermisoPaginacionTodoDetaNotaCreditoSoli;
	public Boolean isPermisoCopiarDetaNotaCreditoSoli;
	public Boolean isPermisoVerFormDetaNotaCreditoSoli;
	public Boolean isPermisoDuplicarDetaNotaCreditoSoli;
	public Boolean isPermisoOrdenDetaNotaCreditoSoli;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public DetaNotaCreditoSoliParameterReturnGeneral detanotacreditosoliReturnGeneral;
	public DetaNotaCreditoSoliParameterReturnGeneral detanotacreditosoliParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoDetaNotaCreditoSoli=false;
	public Boolean esParaAccionDesdeFormularioDetaNotaCreditoSoli=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected DetaNotaCreditoSoliSessionBeanAdditional detanotacreditosoliSessionBeanAdditional=null;
	
	public DetaNotaCreditoSoliSessionBeanAdditional getDetaNotaCreditoSoliSessionBeanAdditional() {
		return this.detanotacreditosoliSessionBeanAdditional;
	}
	
	public void setDetaNotaCreditoSoliSessionBeanAdditional(DetaNotaCreditoSoliSessionBeanAdditional detanotacreditosoliSessionBeanAdditional) {
		try {
			this.detanotacreditosoliSessionBeanAdditional=detanotacreditosoliSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional detanotacreditosoliBeanSwingJInternalFrameAdditional=null;
	//public class DetaNotaCreditoSoliBeanSwingJInternalFrame
	
	public DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional getDetaNotaCreditoSoliBeanSwingJInternalFrameAdditional() {
		return this.detanotacreditosoliBeanSwingJInternalFrameAdditional;
	}
	
	public void setDetaNotaCreditoSoliBeanSwingJInternalFrameAdditional(DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional detanotacreditosoliBeanSwingJInternalFrameAdditional) {
		try {
			this.detanotacreditosoliBeanSwingJInternalFrameAdditional=detanotacreditosoliBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public DetaNotaCreditoSoliLogic detanotacreditosoliLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public DetaNotaCreditoSoli detanotacreditosoliBean;
	public DetaNotaCreditoSoliConstantesFunciones detanotacreditosoliConstantesFunciones;
	//public DetaNotaCreditoSoliParameterReturnGeneral detanotacreditosoliReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	public NotaCreditoSoliLogic notacreditosoliLogic;
	public BodegaLogic bodegaLogic;
	public ProductoLogic productoLogic;
	public UnidadLogic unidadLogic;
	public EmpaqueLogic empaqueLogic;
	public TipoDevolucionEmpresaLogic tipodevolucionempresaLogic;
	public CentroCostoLogic centrocostoLogic;
	
	//PARAMETROS
	
	
	//public List<DetaNotaCreditoSoli> detanotacreditosolis;	
	//public List<DetaNotaCreditoSoli> detanotacreditosolisEliminados;
	//public List<DetaNotaCreditoSoli> detanotacreditosolisAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoDetaNotaCreditoSoli=false;
	public Boolean isVisibilidadCeldaDuplicarDetaNotaCreditoSoli=true;
	public Boolean isVisibilidadCeldaCopiarDetaNotaCreditoSoli=true;
	public Boolean isVisibilidadCeldaVerFormDetaNotaCreditoSoli=true;
	public Boolean isVisibilidadCeldaOrdenDetaNotaCreditoSoli=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli=false;
	public Boolean isVisibilidadCeldaModificarDetaNotaCreditoSoli=false;
	public Boolean isVisibilidadCeldaActualizarDetaNotaCreditoSoli=false;
	public Boolean isVisibilidadCeldaEliminarDetaNotaCreditoSoli=false;
	public Boolean isVisibilidadCeldaCancelarDetaNotaCreditoSoli=false;
	public Boolean isVisibilidadCeldaGuardarDetaNotaCreditoSoli=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdBodega=false;
	public Boolean isVisibilidadFK_IdCentroCosto=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpaque=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdNotaCreditoSoli=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdProducto=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoDevolucionEmpresa=false;
	public Boolean isVisibilidadFK_IdUnidad=false;
	
	public Long getiIdNuevoDetaNotaCreditoSoli() {
		return this.iIdNuevoDetaNotaCreditoSoli;
	}

	public void setiIdNuevoDetaNotaCreditoSoli(Long iIdNuevoDetaNotaCreditoSoli) {
		this.iIdNuevoDetaNotaCreditoSoli = iIdNuevoDetaNotaCreditoSoli;
	}
	
	public Long getidDetaNotaCreditoSoliActual() {
		return this.idDetaNotaCreditoSoliActual;
	}

	public void setidDetaNotaCreditoSoliActual(Long idDetaNotaCreditoSoliActual) {
		this.idDetaNotaCreditoSoliActual = idDetaNotaCreditoSoliActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public DetaNotaCreditoSoli getdetanotacreditosoli() {
		return this.detanotacreditosoli;
	}

	public void setdetanotacreditosoli(DetaNotaCreditoSoli detanotacreditosoli) {
		this.detanotacreditosoli = detanotacreditosoli;
	}
	
	public DetaNotaCreditoSoli getdetanotacreditosoliAux() {
		return this.detanotacreditosoliAux;
	}

	public void setdetanotacreditosoliAux(DetaNotaCreditoSoli detanotacreditosoliAux) {
		this.detanotacreditosoliAux = detanotacreditosoliAux;
	}				
	
	public DetaNotaCreditoSoli getdetanotacreditosoliAnterior() {
		return this.detanotacreditosoliAnterior;
	}

	public void setdetanotacreditosoliAnterior(DetaNotaCreditoSoli detanotacreditosoliAnterior) {
		this.detanotacreditosoliAnterior = detanotacreditosoliAnterior;
	}	
	
	public DetaNotaCreditoSoli getdetanotacreditosoliTotales() {
		return this.detanotacreditosoliTotales;
	}

	public void setdetanotacreditosoliTotales(DetaNotaCreditoSoli detanotacreditosoliTotales) {
		this.detanotacreditosoliTotales = detanotacreditosoliTotales;
	}	
	
	public DetaNotaCreditoSoli getdetanotacreditosoliBean() {
		return this.detanotacreditosoliBean;
	}

	public void setdetanotacreditosoliBean(DetaNotaCreditoSoli detanotacreditosoliBean) {
		this.detanotacreditosoliBean = detanotacreditosoliBean;
	}	
	
	public DetaNotaCreditoSoliParameterReturnGeneral getdetanotacreditosoliReturnGeneral() {
		return this.detanotacreditosoliReturnGeneral;
	}

	public void setdetanotacreditosoliReturnGeneral(DetaNotaCreditoSoliParameterReturnGeneral detanotacreditosoliReturnGeneral) {
		this.detanotacreditosoliReturnGeneral = detanotacreditosoliReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_bodegaFK_IdBodega=-1L;

	public Long getid_bodegaFK_IdBodega() {
		return this.id_bodegaFK_IdBodega;
	}

	public void setid_bodegaFK_IdBodega(Long id_bodegaFK_IdBodega) {
		this.id_bodegaFK_IdBodega = id_bodegaFK_IdBodega;
	}

	public Long id_centro_costoFK_IdCentroCosto=null;

	public Long getid_centro_costoFK_IdCentroCosto() {
		return this.id_centro_costoFK_IdCentroCosto;
	}

	public void setid_centro_costoFK_IdCentroCosto(Long id_centro_costoFK_IdCentroCosto) {
		this.id_centro_costoFK_IdCentroCosto = id_centro_costoFK_IdCentroCosto;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empaqueFK_IdEmpaque=null;

	public Long getid_empaqueFK_IdEmpaque() {
		return this.id_empaqueFK_IdEmpaque;
	}

	public void setid_empaqueFK_IdEmpaque(Long id_empaqueFK_IdEmpaque) {
		this.id_empaqueFK_IdEmpaque = id_empaqueFK_IdEmpaque;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_nota_credito_soliFK_IdNotaCreditoSoli=-1L;

	public Long getid_nota_credito_soliFK_IdNotaCreditoSoli() {
		return this.id_nota_credito_soliFK_IdNotaCreditoSoli;
	}

	public void setid_nota_credito_soliFK_IdNotaCreditoSoli(Long id_nota_credito_soliFK_IdNotaCreditoSoli) {
		this.id_nota_credito_soliFK_IdNotaCreditoSoli = id_nota_credito_soliFK_IdNotaCreditoSoli;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_productoFK_IdProducto=-1L;

	public Long getid_productoFK_IdProducto() {
		return this.id_productoFK_IdProducto;
	}

	public void setid_productoFK_IdProducto(Long id_productoFK_IdProducto) {
		this.id_productoFK_IdProducto = id_productoFK_IdProducto;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa=-1L;

	public Long getid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa() {
		return this.id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa;
	}

	public void setid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa(Long id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa) {
		this.id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa = id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa;
	}

	public Long id_unidadFK_IdUnidad=-1L;

	public Long getid_unidadFK_IdUnidad() {
		return this.id_unidadFK_IdUnidad;
	}

	public void setid_unidadFK_IdUnidad(Long id_unidadFK_IdUnidad) {
		this.id_unidadFK_IdUnidad = id_unidadFK_IdUnidad;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public DetaNotaCreditoSoliLogic getDetaNotaCreditoSoliLogic()	{		
		return detanotacreditosoliLogic;
	}

	public void setDetaNotaCreditoSoliLogic(DetaNotaCreditoSoliLogic detanotacreditosoliLogic) {
		this.detanotacreditosoliLogic = detanotacreditosoliLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoDetaNotaCreditoSoli() {
		return isEsNuevoDetaNotaCreditoSoli;
	}

	public void setIsEsNuevoDetaNotaCreditoSoli(Boolean isEsNuevoDetaNotaCreditoSoli) {
		this.isEsNuevoDetaNotaCreditoSoli = isEsNuevoDetaNotaCreditoSoli;
	}

	public Boolean getEsParaAccionDesdeFormularioDetaNotaCreditoSoli() {
		return esParaAccionDesdeFormularioDetaNotaCreditoSoli;
	}
	
	public void setEsParaAccionDesdeFormularioDetaNotaCreditoSoli(Boolean esParaAccionDesdeFormularioDetaNotaCreditoSoli) {
		this.esParaAccionDesdeFormularioDetaNotaCreditoSoli = esParaAccionDesdeFormularioDetaNotaCreditoSoli;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditosoliSessionBean==null) {
				this.detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
			}

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(detanotacreditosoliSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditosoliSessionBean==null) {
				this.detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
			}

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(detanotacreditosoliSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditosoliSessionBean==null) {
				this.detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
			}

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(detanotacreditosoliSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditosoliSessionBean==null) {
				this.detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
			}

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(detanotacreditosoliSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditosoliSessionBean==null) {
				this.detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
			}

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(detanotacreditosoliSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditosoliSessionBean==null) {
				this.detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
			}

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(detanotacreditosoliSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosNotaCreditoSolisForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.notacreditosolisForeignKey=new ArrayList<NotaCreditoSoli>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			NotaCreditoSoliLogic notacreditosoliLogic=new NotaCreditoSoliLogic();

			//notacreditosoliLogic.getNotaCreditoSoliDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditosoliSessionBean==null) {
				this.detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
			}

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionNotaCreditoSoli()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//notacreditosoliLogic.getNotaCreditoSoliDataAccess().setIsForForeingKeyData(true);

					notacreditosoliLogic.getTodosNotaCreditoSolisWithConnection(sFinalQuery,new Pagination());

					this.notacreditosolisForeignKey=notacreditosoliLogic.getNotaCreditoSolis();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaNotaCreditoSoli(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					notacreditosoliLogic.getEntityWithConnection(detanotacreditosoliSessionBean.getlidNotaCreditoSoliActual());
					this.notacreditosolisForeignKey.add(notacreditosoliLogic.getNotaCreditoSoli());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosBodegasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.bodegasForeignKey=new ArrayList<Bodega>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			BodegaLogic bodegaLogic=new BodegaLogic();

			//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditosoliSessionBean==null) {
				this.detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
			}

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//bodegaLogic.getBodegaDataAccess().setIsForForeingKeyData(true);

					bodegaLogic.getTodosBodegasWithConnection(sFinalQuery,new Pagination());

					this.bodegasForeignKey=bodegaLogic.getBodegas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaBodega(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					bodegaLogic.getEntityWithConnection(detanotacreditosoliSessionBean.getlidBodegaActual());
					this.bodegasForeignKey.add(bodegaLogic.getBodega());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosProductosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.productosForeignKey=new ArrayList<Producto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ProductoLogic productoLogic=new ProductoLogic();

			//productoLogic.getProductoDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditosoliSessionBean==null) {
				this.detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
			}

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//productoLogic.getProductoDataAccess().setIsForForeingKeyData(true);

					productoLogic.getTodosProductosWithConnection(sFinalQuery,new Pagination());

					this.productosForeignKey=productoLogic.getProductos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaProducto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getEntityWithConnection(detanotacreditosoliSessionBean.getlidProductoActual());
					this.productosForeignKey.add(productoLogic.getProducto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUnidadsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.unidadsForeignKey=new ArrayList<Unidad>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UnidadLogic unidadLogic=new UnidadLogic();

			//unidadLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditosoliSessionBean==null) {
				this.detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
			}

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//unidadLogic.getUnidadDataAccess().setIsForForeingKeyData(true);

					unidadLogic.getTodosUnidadsWithConnection(sFinalQuery,new Pagination());

					this.unidadsForeignKey=unidadLogic.getUnidads();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUnidad(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					unidadLogic.getEntityWithConnection(detanotacreditosoliSessionBean.getlidUnidadActual());
					this.unidadsForeignKey.add(unidadLogic.getUnidad());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpaquesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empaquesForeignKey=new ArrayList<Empaque>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Empaque empaqueNulo = new Empaque();

			EmpaqueLogic empaqueLogic=new EmpaqueLogic();

			//empaqueLogic.getEmpaqueDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditosoliSessionBean==null) {
				this.detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
			}

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionEmpaque()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empaqueLogic.getEmpaqueDataAccess().setIsForForeingKeyData(true);

					empaqueLogic.getTodosEmpaquesWithConnection(sFinalQuery,new Pagination());

					this.empaquesForeignKey=empaqueLogic.getEmpaques();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.empaquesForeignKey.add(0, empaqueNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpaque(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empaqueLogic.getEntityWithConnection(detanotacreditosoliSessionBean.getlidEmpaqueActual());
					this.empaquesForeignKey.add(empaqueLogic.getEmpaque());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoDevolucionEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipodevolucionempresasForeignKey=new ArrayList<TipoDevolucionEmpresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoDevolucionEmpresaLogic tipodevolucionempresaLogic=new TipoDevolucionEmpresaLogic();

			//tipodevolucionempresaLogic.getTipoDevolucionEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditosoliSessionBean==null) {
				this.detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
			}

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionTipoDevolucionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipodevolucionempresaLogic.getTipoDevolucionEmpresaDataAccess().setIsForForeingKeyData(true);

					tipodevolucionempresaLogic.getTodosTipoDevolucionEmpresasWithConnection(sFinalQuery,new Pagination());

					this.tipodevolucionempresasForeignKey=tipodevolucionempresaLogic.getTipoDevolucionEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoDevolucionEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipodevolucionempresaLogic.getEntityWithConnection(detanotacreditosoliSessionBean.getlidTipoDevolucionEmpresaActual());
					this.tipodevolucionempresasForeignKey.add(tipodevolucionempresaLogic.getTipoDevolucionEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCentroCostosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.centrocostosForeignKey=new ArrayList<CentroCosto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CentroCosto centrocostoNulo = new CentroCosto();

			CentroCostoLogic centrocostoLogic=new CentroCostoLogic();

			//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

			if(this.detanotacreditosoliSessionBean==null) {
				this.detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
			}

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

					centrocostoLogic.getTodosCentroCostosWithConnection(sFinalQuery,new Pagination());

					this.centrocostosForeignKey=centrocostoLogic.getCentroCostos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.centrocostosForeignKey.add(0, centrocostoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCentroCosto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(detanotacreditosoliSessionBean.getlidCentroCostoActual());
					this.centrocostosForeignKey.add(centrocostoLogic.getCentroCosto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.detanotacreditosoli!=null) {
						this.detanotacreditosoli.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empresaDetaNotaCreditoSoli.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaDetaNotaCreditoSoli.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empresaDetaNotaCreditoSoli.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empresaDetaNotaCreditoSoli.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaDetaNotaCreditoSoliGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaDetaNotaCreditoSoliGenerico!=null && jComboBoxid_empresaDetaNotaCreditoSoliGenerico.getItemCount()>0) {
					jComboBoxid_empresaDetaNotaCreditoSoliGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.detanotacreditosoli!=null) {
						this.detanotacreditosoli.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_sucursalDetaNotaCreditoSoli.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalDetaNotaCreditoSoli.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_sucursalDetaNotaCreditoSoli.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_sucursalDetaNotaCreditoSoli.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalDetaNotaCreditoSoliGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalDetaNotaCreditoSoliGenerico!=null && jComboBoxid_sucursalDetaNotaCreditoSoliGenerico.getItemCount()>0) {
					jComboBoxid_sucursalDetaNotaCreditoSoliGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.detanotacreditosoli!=null) {
						this.detanotacreditosoli.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_ejercicioDetaNotaCreditoSoli.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioDetaNotaCreditoSoli.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_ejercicioDetaNotaCreditoSoli.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_ejercicioDetaNotaCreditoSoli.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioDetaNotaCreditoSoliGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioDetaNotaCreditoSoliGenerico!=null && jComboBoxid_ejercicioDetaNotaCreditoSoliGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioDetaNotaCreditoSoliGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.detanotacreditosoli!=null) {
						this.detanotacreditosoli.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_periodoDetaNotaCreditoSoli.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoDetaNotaCreditoSoli.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_periodoDetaNotaCreditoSoli.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_periodoDetaNotaCreditoSoli.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoDetaNotaCreditoSoliGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoDetaNotaCreditoSoliGenerico!=null && jComboBoxid_periodoDetaNotaCreditoSoliGenerico.getItemCount()>0) {
					jComboBoxid_periodoDetaNotaCreditoSoliGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.detanotacreditosoli!=null) {
						this.detanotacreditosoli.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_anioDetaNotaCreditoSoli.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioDetaNotaCreditoSoli.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_anioDetaNotaCreditoSoli.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_anioDetaNotaCreditoSoli.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioDetaNotaCreditoSoliGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioDetaNotaCreditoSoliGenerico!=null && jComboBoxid_anioDetaNotaCreditoSoliGenerico.getItemCount()>0) {
					jComboBoxid_anioDetaNotaCreditoSoliGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.detanotacreditosoli!=null) {
						this.detanotacreditosoli.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_mesDetaNotaCreditoSoli.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesDetaNotaCreditoSoli.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_mesDetaNotaCreditoSoli.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_mesDetaNotaCreditoSoli.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesDetaNotaCreditoSoliGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesDetaNotaCreditoSoliGenerico!=null && jComboBoxid_mesDetaNotaCreditoSoliGenerico.getItemCount()>0) {
					jComboBoxid_mesDetaNotaCreditoSoliGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualNotaCreditoSoliForeignKey(Long idNotaCreditoSoliSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			NotaCreditoSoli  notacreditosoliTemp=null;

			for(NotaCreditoSoli notacreditosoliAux:notacreditosolisForeignKey) {
				if(notacreditosoliAux.getId()!=null && notacreditosoliAux.getId().equals(idNotaCreditoSoliSeleccionado)) {
					notacreditosoliTemp=notacreditosoliAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(notacreditosoliTemp!=null) {

					if(this.detanotacreditosoli!=null) {
						this.detanotacreditosoli.setNotaCreditoSoli(notacreditosoliTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_nota_credito_soliDetaNotaCreditoSoli.setSelectedItem(notacreditosoliTemp);
					}
				} else {
					//jComboBoxid_nota_credito_soliDetaNotaCreditoSoli.setSelectedItem(notacreditosoliTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_nota_credito_soliDetaNotaCreditoSoli.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_nota_credito_soliDetaNotaCreditoSoli.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdNotaCreditoSoli") || sFormularioTipoBusqueda.equals("Todos")){
					if(notacreditosoliTemp!=null && jComboBoxid_nota_credito_soliFK_IdNotaCreditoSoliDetaNotaCreditoSoli!=null) {
						jComboBoxid_nota_credito_soliFK_IdNotaCreditoSoliDetaNotaCreditoSoli.setSelectedItem(notacreditosoliTemp);
					} else {
						if(jComboBoxid_nota_credito_soliFK_IdNotaCreditoSoliDetaNotaCreditoSoli!=null) {
							//jComboBoxid_nota_credito_soliFK_IdNotaCreditoSoliDetaNotaCreditoSoli.setSelectedItem(notacreditosoliTemp);
							if(jComboBoxid_nota_credito_soliFK_IdNotaCreditoSoliDetaNotaCreditoSoli.getItemCount()>0) {
								jComboBoxid_nota_credito_soliFK_IdNotaCreditoSoliDetaNotaCreditoSoli.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualNotaCreditoSoliForeignKeyDescripcion(Long idNotaCreditoSoliSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			NotaCreditoSoli  notacreditosoliTemp=null;

			for(NotaCreditoSoli notacreditosoliAux:notacreditosolisForeignKey) {
				if(notacreditosoliAux.getId()!=null && notacreditosoliAux.getId().equals(idNotaCreditoSoliSeleccionado)) {
					notacreditosoliTemp=notacreditosoliAux;
					break;
				}
			}


			sDescripcion=NotaCreditoSoliConstantesFunciones.getNotaCreditoSoliDescripcion(notacreditosoliTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualNotaCreditoSoliForeignKeyGenerico(Long idNotaCreditoSoliSeleccionado,JComboBox jComboBoxid_nota_credito_soliDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			NotaCreditoSoli  notacreditosoliTemp=null;

			for(NotaCreditoSoli notacreditosoliAux:notacreditosolisForeignKey) {
				if(notacreditosoliAux.getId()!=null && notacreditosoliAux.getId().equals(idNotaCreditoSoliSeleccionado)) {
					notacreditosoliTemp=notacreditosoliAux;
					break;
				}
			}

			if(notacreditosoliTemp!=null) {
				jComboBoxid_nota_credito_soliDetaNotaCreditoSoliGenerico.setSelectedItem(notacreditosoliTemp);
			} else {
				if(jComboBoxid_nota_credito_soliDetaNotaCreditoSoliGenerico!=null && jComboBoxid_nota_credito_soliDetaNotaCreditoSoliGenerico.getItemCount()>0) {
					jComboBoxid_nota_credito_soliDetaNotaCreditoSoliGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualBodegaForeignKey(Long idBodegaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(bodegaTemp!=null) {

					if(this.detanotacreditosoli!=null) {
						this.detanotacreditosoli.setBodega(bodegaTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli.setSelectedItem(bodegaTemp);
					}
				} else {
					//jComboBoxid_bodegaDetaNotaCreditoSoli.setSelectedItem(bodegaTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){
					if(bodegaTemp!=null && jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli!=null) {
						jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli.setSelectedItem(bodegaTemp);
					} else {
						if(jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli!=null) {
							//jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli.setSelectedItem(bodegaTemp);
							if(jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli.getItemCount()>0) {
								jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualBodegaForeignKeyDescripcion(Long idBodegaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}


			sDescripcion=BodegaConstantesFunciones.getBodegaDescripcion(bodegaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualBodegaForeignKeyGenerico(Long idBodegaSeleccionado,JComboBox jComboBoxid_bodegaDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaTemp=null;

			for(Bodega bodegaAux:bodegasForeignKey) {
				if(bodegaAux.getId()!=null && bodegaAux.getId().equals(idBodegaSeleccionado)) {
					bodegaTemp=bodegaAux;
					break;
				}
			}

			if(bodegaTemp!=null) {
				jComboBoxid_bodegaDetaNotaCreditoSoliGenerico.setSelectedItem(bodegaTemp);
			} else {
				if(jComboBoxid_bodegaDetaNotaCreditoSoliGenerico!=null && jComboBoxid_bodegaDetaNotaCreditoSoliGenerico.getItemCount()>0) {
					jComboBoxid_bodegaDetaNotaCreditoSoliGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualProductoForeignKey(Long idProductoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(productoTemp!=null) {

					if(this.detanotacreditosoli!=null) {
						this.detanotacreditosoli.setProducto(productoTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli.setSelectedItem(productoTemp);
					}
				} else {
					//jComboBoxid_productoDetaNotaCreditoSoli.setSelectedItem(productoTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdProducto") || sFormularioTipoBusqueda.equals("Todos")){
					if(productoTemp!=null && jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli!=null) {
						jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli.setSelectedItem(productoTemp);
					} else {
						if(jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli!=null) {
							//jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli.setSelectedItem(productoTemp);
							if(jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli.getItemCount()>0) {
								jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualProductoForeignKeyDescripcion(Long idProductoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}


			sDescripcion=ProductoConstantesFunciones.getProductoDescripcion(productoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualProductoForeignKeyGenerico(Long idProductoSeleccionado,JComboBox jComboBoxid_productoDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			Producto  productoTemp=null;

			for(Producto productoAux:productosForeignKey) {
				if(productoAux.getId()!=null && productoAux.getId().equals(idProductoSeleccionado)) {
					productoTemp=productoAux;
					break;
				}
			}

			if(productoTemp!=null) {
				jComboBoxid_productoDetaNotaCreditoSoliGenerico.setSelectedItem(productoTemp);
			} else {
				if(jComboBoxid_productoDetaNotaCreditoSoliGenerico!=null && jComboBoxid_productoDetaNotaCreditoSoliGenerico.getItemCount()>0) {
					jComboBoxid_productoDetaNotaCreditoSoliGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUnidadForeignKey(Long idUnidadSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(unidadTemp!=null) {

					if(this.detanotacreditosoli!=null) {
						this.detanotacreditosoli.setUnidad(unidadTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_unidadDetaNotaCreditoSoli.setSelectedItem(unidadTemp);
					}
				} else {
					//jComboBoxid_unidadDetaNotaCreditoSoli.setSelectedItem(unidadTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_unidadDetaNotaCreditoSoli.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_unidadDetaNotaCreditoSoli.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdUnidad") || sFormularioTipoBusqueda.equals("Todos")){
					if(unidadTemp!=null && jComboBoxid_unidadFK_IdUnidadDetaNotaCreditoSoli!=null) {
						jComboBoxid_unidadFK_IdUnidadDetaNotaCreditoSoli.setSelectedItem(unidadTemp);
					} else {
						if(jComboBoxid_unidadFK_IdUnidadDetaNotaCreditoSoli!=null) {
							//jComboBoxid_unidadFK_IdUnidadDetaNotaCreditoSoli.setSelectedItem(unidadTemp);
							if(jComboBoxid_unidadFK_IdUnidadDetaNotaCreditoSoli.getItemCount()>0) {
								jComboBoxid_unidadFK_IdUnidadDetaNotaCreditoSoli.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUnidadForeignKeyDescripcion(Long idUnidadSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}


			sDescripcion=UnidadConstantesFunciones.getUnidadDescripcion(unidadTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUnidadForeignKeyGenerico(Long idUnidadSeleccionado,JComboBox jComboBoxid_unidadDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			Unidad  unidadTemp=null;

			for(Unidad unidadAux:unidadsForeignKey) {
				if(unidadAux.getId()!=null && unidadAux.getId().equals(idUnidadSeleccionado)) {
					unidadTemp=unidadAux;
					break;
				}
			}

			if(unidadTemp!=null) {
				jComboBoxid_unidadDetaNotaCreditoSoliGenerico.setSelectedItem(unidadTemp);
			} else {
				if(jComboBoxid_unidadDetaNotaCreditoSoliGenerico!=null && jComboBoxid_unidadDetaNotaCreditoSoliGenerico.getItemCount()>0) {
					jComboBoxid_unidadDetaNotaCreditoSoliGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpaqueForeignKey(Long idEmpaqueSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empaque  empaqueTemp=null;

			for(Empaque empaqueAux:empaquesForeignKey) {
				if(empaqueAux.getId()!=null && empaqueAux.getId().equals(idEmpaqueSeleccionado)) {
					empaqueTemp=empaqueAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empaqueTemp!=null) {

					if(this.detanotacreditosoli!=null) {
						this.detanotacreditosoli.setEmpaque(empaqueTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empaqueDetaNotaCreditoSoli.setSelectedItem(empaqueTemp);
					}
				} else {
					//jComboBoxid_empaqueDetaNotaCreditoSoli.setSelectedItem(empaqueTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empaqueDetaNotaCreditoSoli.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empaqueDetaNotaCreditoSoli.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmpaque") || sFormularioTipoBusqueda.equals("Todos")){
					if(empaqueTemp!=null && jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCreditoSoli!=null) {
						jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCreditoSoli.setSelectedItem(empaqueTemp);
					} else {
						if(jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCreditoSoli!=null) {
							//jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCreditoSoli.setSelectedItem(empaqueTemp);
							if(jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCreditoSoli.getItemCount()>0) {
								jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCreditoSoli.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpaqueForeignKeyDescripcion(Long idEmpaqueSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empaque  empaqueTemp=null;

			for(Empaque empaqueAux:empaquesForeignKey) {
				if(empaqueAux.getId()!=null && empaqueAux.getId().equals(idEmpaqueSeleccionado)) {
					empaqueTemp=empaqueAux;
					break;
				}
			}


			sDescripcion=EmpaqueConstantesFunciones.getEmpaqueDescripcion(empaqueTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpaqueForeignKeyGenerico(Long idEmpaqueSeleccionado,JComboBox jComboBoxid_empaqueDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			Empaque  empaqueTemp=null;

			for(Empaque empaqueAux:empaquesForeignKey) {
				if(empaqueAux.getId()!=null && empaqueAux.getId().equals(idEmpaqueSeleccionado)) {
					empaqueTemp=empaqueAux;
					break;
				}
			}

			if(empaqueTemp!=null) {
				jComboBoxid_empaqueDetaNotaCreditoSoliGenerico.setSelectedItem(empaqueTemp);
			} else {
				if(jComboBoxid_empaqueDetaNotaCreditoSoliGenerico!=null && jComboBoxid_empaqueDetaNotaCreditoSoliGenerico.getItemCount()>0) {
					jComboBoxid_empaqueDetaNotaCreditoSoliGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoDevolucionEmpresaForeignKey(Long idTipoDevolucionEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoDevolucionEmpresa  tipodevolucionempresaTemp=null;

			for(TipoDevolucionEmpresa tipodevolucionempresaAux:tipodevolucionempresasForeignKey) {
				if(tipodevolucionempresaAux.getId()!=null && tipodevolucionempresaAux.getId().equals(idTipoDevolucionEmpresaSeleccionado)) {
					tipodevolucionempresaTemp=tipodevolucionempresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipodevolucionempresaTemp!=null) {

					if(this.detanotacreditosoli!=null) {
						this.detanotacreditosoli.setTipoDevolucionEmpresa(tipodevolucionempresaTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoli.setSelectedItem(tipodevolucionempresaTemp);
					}
				} else {
					//jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoli.setSelectedItem(tipodevolucionempresaTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoli.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoli.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoDevolucionEmpresa") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipodevolucionempresaTemp!=null && jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli!=null) {
						jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli.setSelectedItem(tipodevolucionempresaTemp);
					} else {
						if(jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli!=null) {
							//jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli.setSelectedItem(tipodevolucionempresaTemp);
							if(jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli.getItemCount()>0) {
								jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoDevolucionEmpresaForeignKeyDescripcion(Long idTipoDevolucionEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoDevolucionEmpresa  tipodevolucionempresaTemp=null;

			for(TipoDevolucionEmpresa tipodevolucionempresaAux:tipodevolucionempresasForeignKey) {
				if(tipodevolucionempresaAux.getId()!=null && tipodevolucionempresaAux.getId().equals(idTipoDevolucionEmpresaSeleccionado)) {
					tipodevolucionempresaTemp=tipodevolucionempresaAux;
					break;
				}
			}


			sDescripcion=TipoDevolucionEmpresaConstantesFunciones.getTipoDevolucionEmpresaDescripcion(tipodevolucionempresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoDevolucionEmpresaForeignKeyGenerico(Long idTipoDevolucionEmpresaSeleccionado,JComboBox jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			TipoDevolucionEmpresa  tipodevolucionempresaTemp=null;

			for(TipoDevolucionEmpresa tipodevolucionempresaAux:tipodevolucionempresasForeignKey) {
				if(tipodevolucionempresaAux.getId()!=null && tipodevolucionempresaAux.getId().equals(idTipoDevolucionEmpresaSeleccionado)) {
					tipodevolucionempresaTemp=tipodevolucionempresaAux;
					break;
				}
			}

			if(tipodevolucionempresaTemp!=null) {
				jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoliGenerico.setSelectedItem(tipodevolucionempresaTemp);
			} else {
				if(jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoliGenerico!=null && jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoliGenerico.getItemCount()>0) {
					jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoliGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCentroCostoForeignKey(Long idCentroCostoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(centrocostoTemp!=null) {

					if(this.detanotacreditosoli!=null) {
						this.detanotacreditosoli.setCentroCosto(centrocostoTemp);
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_centro_costoDetaNotaCreditoSoli.setSelectedItem(centrocostoTemp);
					}
				} else {
					//jComboBoxid_centro_costoDetaNotaCreditoSoli.setSelectedItem(centrocostoTemp);
					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_centro_costoDetaNotaCreditoSoli.getItemCount()>0) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_centro_costoDetaNotaCreditoSoli.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){
					if(centrocostoTemp!=null && jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCreditoSoli!=null) {
						jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCreditoSoli.setSelectedItem(centrocostoTemp);
					} else {
						if(jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCreditoSoli!=null) {
							//jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCreditoSoli.setSelectedItem(centrocostoTemp);
							if(jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCreditoSoli.getItemCount()>0) {
								jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCreditoSoli.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCentroCostoForeignKeyDescripcion(Long idCentroCostoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}


			sDescripcion=CentroCostoConstantesFunciones.getCentroCostoDescripcion(centrocostoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCentroCostoForeignKeyGenerico(Long idCentroCostoSeleccionado,JComboBox jComboBoxid_centro_costoDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(centrocostoTemp!=null) {
				jComboBoxid_centro_costoDetaNotaCreditoSoliGenerico.setSelectedItem(centrocostoTemp);
			} else {
				if(jComboBoxid_centro_costoDetaNotaCreditoSoliGenerico!=null && jComboBoxid_centro_costoDetaNotaCreditoSoliGenerico.getItemCount()>0) {
					jComboBoxid_centro_costoDetaNotaCreditoSoliGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(DetaNotaCreditoSoli detanotacreditosoli,JComboBox jComboBoxid_empresaDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaDetaNotaCreditoSoliGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empresaDetaNotaCreditoSoli.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaDetaNotaCreditoSoliGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				detanotacreditosoli.setid_empresa(empresaAux.getId());
				detanotacreditosoli.setempresa_descripcion(DetaNotaCreditoSoliConstantesFunciones.getEmpresaDescripcion(empresaAux));
				detanotacreditosoli.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(DetaNotaCreditoSoli detanotacreditosoli,JComboBox jComboBoxid_sucursalDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalDetaNotaCreditoSoliGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_sucursalDetaNotaCreditoSoli.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalDetaNotaCreditoSoliGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				detanotacreditosoli.setid_sucursal(sucursalAux.getId());
				detanotacreditosoli.setsucursal_descripcion(DetaNotaCreditoSoliConstantesFunciones.getSucursalDescripcion(sucursalAux));
				detanotacreditosoli.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(DetaNotaCreditoSoli detanotacreditosoli,JComboBox jComboBoxid_ejercicioDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioDetaNotaCreditoSoliGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_ejercicioDetaNotaCreditoSoli.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioDetaNotaCreditoSoliGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				detanotacreditosoli.setid_ejercicio(ejercicioAux.getId());
				detanotacreditosoli.setejercicio_descripcion(DetaNotaCreditoSoliConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				detanotacreditosoli.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(DetaNotaCreditoSoli detanotacreditosoli,JComboBox jComboBoxid_periodoDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoDetaNotaCreditoSoliGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_periodoDetaNotaCreditoSoli.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoDetaNotaCreditoSoliGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				detanotacreditosoli.setid_periodo(periodoAux.getId());
				detanotacreditosoli.setperiodo_descripcion(DetaNotaCreditoSoliConstantesFunciones.getPeriodoDescripcion(periodoAux));
				detanotacreditosoli.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(DetaNotaCreditoSoli detanotacreditosoli,JComboBox jComboBoxid_anioDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioDetaNotaCreditoSoliGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_anioDetaNotaCreditoSoli.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioDetaNotaCreditoSoliGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				detanotacreditosoli.setid_anio(anioAux.getId());
				detanotacreditosoli.setanio_descripcion(DetaNotaCreditoSoliConstantesFunciones.getAnioDescripcion(anioAux));
				detanotacreditosoli.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(DetaNotaCreditoSoli detanotacreditosoli,JComboBox jComboBoxid_mesDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesDetaNotaCreditoSoliGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_mesDetaNotaCreditoSoli.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesDetaNotaCreditoSoliGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				detanotacreditosoli.setid_mes(mesAux.getId());
				detanotacreditosoli.setmes_descripcion(DetaNotaCreditoSoliConstantesFunciones.getMesDescripcion(mesAux));
				detanotacreditosoli.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarNotaCreditoSoliForeignKey(DetaNotaCreditoSoli detanotacreditosoli,JComboBox jComboBoxid_nota_credito_soliDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			NotaCreditoSoli  notacreditosoliAux=new NotaCreditoSoli();

			if(jComboBoxid_nota_credito_soliDetaNotaCreditoSoliGenerico==null) {
				notacreditosoliAux=(NotaCreditoSoli)this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_nota_credito_soliDetaNotaCreditoSoli.getSelectedItem();
			} else {
				notacreditosoliAux=(NotaCreditoSoli)jComboBoxid_nota_credito_soliDetaNotaCreditoSoliGenerico.getSelectedItem();
			}

			if(notacreditosoliAux!=null && notacreditosoliAux.getId()!=null) {
				detanotacreditosoli.setid_nota_credito_soli(notacreditosoliAux.getId());
				detanotacreditosoli.setnotacreditosoli_descripcion(DetaNotaCreditoSoliConstantesFunciones.getNotaCreditoSoliDescripcion(notacreditosoliAux));
				detanotacreditosoli.setNotaCreditoSoli(notacreditosoliAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarBodegaForeignKey(DetaNotaCreditoSoli detanotacreditosoli,JComboBox jComboBoxid_bodegaDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			Bodega  bodegaAux=new Bodega();

			if(jComboBoxid_bodegaDetaNotaCreditoSoliGenerico==null) {
				bodegaAux=(Bodega)this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli.getSelectedItem();
			} else {
				bodegaAux=(Bodega)jComboBoxid_bodegaDetaNotaCreditoSoliGenerico.getSelectedItem();
			}

			if(bodegaAux!=null && bodegaAux.getId()!=null) {
				detanotacreditosoli.setid_bodega(bodegaAux.getId());
				detanotacreditosoli.setbodega_descripcion(DetaNotaCreditoSoliConstantesFunciones.getBodegaDescripcion(bodegaAux));
				detanotacreditosoli.setBodega(bodegaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarProductoForeignKey(DetaNotaCreditoSoli detanotacreditosoli,JComboBox jComboBoxid_productoDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			Producto  productoAux=new Producto();

			if(jComboBoxid_productoDetaNotaCreditoSoliGenerico==null) {
				productoAux=(Producto)this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli.getSelectedItem();
			} else {
				productoAux=(Producto)jComboBoxid_productoDetaNotaCreditoSoliGenerico.getSelectedItem();
			}

			if(productoAux!=null && productoAux.getId()!=null) {
				detanotacreditosoli.setid_producto(productoAux.getId());
				detanotacreditosoli.setproducto_descripcion(DetaNotaCreditoSoliConstantesFunciones.getProductoDescripcion(productoAux));
				detanotacreditosoli.setProducto(productoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUnidadForeignKey(DetaNotaCreditoSoli detanotacreditosoli,JComboBox jComboBoxid_unidadDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			Unidad  unidadAux=new Unidad();

			if(jComboBoxid_unidadDetaNotaCreditoSoliGenerico==null) {
				unidadAux=(Unidad)this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_unidadDetaNotaCreditoSoli.getSelectedItem();
			} else {
				unidadAux=(Unidad)jComboBoxid_unidadDetaNotaCreditoSoliGenerico.getSelectedItem();
			}

			if(unidadAux!=null && unidadAux.getId()!=null) {
				detanotacreditosoli.setid_unidad(unidadAux.getId());
				detanotacreditosoli.setunidad_descripcion(DetaNotaCreditoSoliConstantesFunciones.getUnidadDescripcion(unidadAux));
				detanotacreditosoli.setUnidad(unidadAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpaqueForeignKey(DetaNotaCreditoSoli detanotacreditosoli,JComboBox jComboBoxid_empaqueDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			Empaque  empaqueAux=new Empaque();

			if(jComboBoxid_empaqueDetaNotaCreditoSoliGenerico==null) {
				empaqueAux=(Empaque)this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empaqueDetaNotaCreditoSoli.getSelectedItem();
			} else {
				empaqueAux=(Empaque)jComboBoxid_empaqueDetaNotaCreditoSoliGenerico.getSelectedItem();
			}

			if(empaqueAux!=null) {
				detanotacreditosoli.setid_empaque(empaqueAux.getId());
				detanotacreditosoli.setempaque_descripcion(DetaNotaCreditoSoliConstantesFunciones.getEmpaqueDescripcion(empaqueAux));
				detanotacreditosoli.setEmpaque(empaqueAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoDevolucionEmpresaForeignKey(DetaNotaCreditoSoli detanotacreditosoli,JComboBox jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			TipoDevolucionEmpresa  tipodevolucionempresaAux=new TipoDevolucionEmpresa();

			if(jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoliGenerico==null) {
				tipodevolucionempresaAux=(TipoDevolucionEmpresa)this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoli.getSelectedItem();
			} else {
				tipodevolucionempresaAux=(TipoDevolucionEmpresa)jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoliGenerico.getSelectedItem();
			}

			if(tipodevolucionempresaAux!=null && tipodevolucionempresaAux.getId()!=null) {
				detanotacreditosoli.setid_tipo_devolucion_empresa(tipodevolucionempresaAux.getId());
				detanotacreditosoli.settipodevolucionempresa_descripcion(DetaNotaCreditoSoliConstantesFunciones.getTipoDevolucionEmpresaDescripcion(tipodevolucionempresaAux));
				detanotacreditosoli.setTipoDevolucionEmpresa(tipodevolucionempresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCentroCostoForeignKey(DetaNotaCreditoSoli detanotacreditosoli,JComboBox jComboBoxid_centro_costoDetaNotaCreditoSoliGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoAux=new CentroCosto();

			if(jComboBoxid_centro_costoDetaNotaCreditoSoliGenerico==null) {
				centrocostoAux=(CentroCosto)this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_centro_costoDetaNotaCreditoSoli.getSelectedItem();
			} else {
				centrocostoAux=(CentroCosto)jComboBoxid_centro_costoDetaNotaCreditoSoliGenerico.getSelectedItem();
			}

			if(centrocostoAux!=null) {
				detanotacreditosoli.setid_centro_costo(centrocostoAux.getId());
				detanotacreditosoli.setcentrocosto_descripcion(DetaNotaCreditoSoliConstantesFunciones.getCentroCostoDescripcion(centrocostoAux));
				detanotacreditosoli.setCentroCosto(centrocostoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empresaDetaNotaCreditoSoli.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empresaDetaNotaCreditoSoli.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
					}

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_sucursalDetaNotaCreditoSoli.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_sucursalDetaNotaCreditoSoli.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
					}

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_ejercicioDetaNotaCreditoSoli.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_ejercicioDetaNotaCreditoSoli.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
					}

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_periodoDetaNotaCreditoSoli.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_periodoDetaNotaCreditoSoli.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
					}

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_anioDetaNotaCreditoSoli.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_anioDetaNotaCreditoSoli.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
					}

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_mesDetaNotaCreditoSoli.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_mesDetaNotaCreditoSoli.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
					}

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameNotaCreditoSolisForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingNotaCreditoSoli=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_nota_credito_soliDetaNotaCreditoSoli.removeAllItems();

							for(NotaCreditoSoli notacreditosoli:this.notacreditosolisForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_nota_credito_soliDetaNotaCreditoSoli.addItem(notacreditosoli);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
					}

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdNotaCreditoSoli") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_nota_credito_soliFK_IdNotaCreditoSoliDetaNotaCreditoSoli.removeAllItems();

							for(NotaCreditoSoli notacreditosoli:this.notacreditosolisForeignKey) {
								this.jComboBoxid_nota_credito_soliFK_IdNotaCreditoSoliDetaNotaCreditoSoli.addItem(notacreditosoli);
							}
						}

						if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameBodegasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingBodega=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli.addItem(bodega);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
					}

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdBodega") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli.removeAllItems();

							for(Bodega bodega:this.bodegasForeignKey) {
								this.jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli.addItem(bodega);
							}
						}

						if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameProductosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingProducto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli.removeAllItems();

							for(Producto producto:this.productosForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli.addItem(producto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
					}

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdProducto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli.removeAllItems();

							for(Producto producto:this.productosForeignKey) {
								this.jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli.addItem(producto);
							}
						}

						if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUnidadsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUnidad=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_unidadDetaNotaCreditoSoli.removeAllItems();

							for(Unidad unidad:this.unidadsForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_unidadDetaNotaCreditoSoli.addItem(unidad);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
					}

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdUnidad") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_unidadFK_IdUnidadDetaNotaCreditoSoli.removeAllItems();

							for(Unidad unidad:this.unidadsForeignKey) {
								this.jComboBoxid_unidadFK_IdUnidadDetaNotaCreditoSoli.addItem(unidad);
							}
						}

						if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpaquesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpaque=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empaqueDetaNotaCreditoSoli.removeAllItems();

							for(Empaque empaque:this.empaquesForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empaqueDetaNotaCreditoSoli.addItem(empaque);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
					}

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmpaque") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCreditoSoli.removeAllItems();

							for(Empaque empaque:this.empaquesForeignKey) {
								this.jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCreditoSoli.addItem(empaque);
							}
						}

						if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoDevolucionEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoDevolucionEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoli.removeAllItems();

							for(TipoDevolucionEmpresa tipodevolucionempresa:this.tipodevolucionempresasForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoli.addItem(tipodevolucionempresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
					}

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoDevolucionEmpresa") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli.removeAllItems();

							for(TipoDevolucionEmpresa tipodevolucionempresa:this.tipodevolucionempresasForeignKey) {
								this.jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli.addItem(tipodevolucionempresa);
							}
						}

						if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCentroCostosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCentroCosto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_centro_costoDetaNotaCreditoSoli.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_centro_costoDetaNotaCreditoSoli.addItem(centrocosto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { 
					}

					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCreditoSoli.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCreditoSoli.addItem(centrocosto);
							}
						}

						if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empresaDetaNotaCreditoSoli.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empresaDetaNotaCreditoSoli.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_sucursalDetaNotaCreditoSoli.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_sucursalDetaNotaCreditoSoli.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_ejercicioDetaNotaCreditoSoli.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_ejercicioDetaNotaCreditoSoli.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_periodoDetaNotaCreditoSoli.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_periodoDetaNotaCreditoSoli.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_anioDetaNotaCreditoSoli.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_anioDetaNotaCreditoSoli.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_mesDetaNotaCreditoSoli.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_mesDetaNotaCreditoSoli.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameNotaCreditoSoliForeignKey(NotaCreditoSoli notacreditosoli,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_nota_credito_soliDetaNotaCreditoSoli.setSelectedItem(notacreditosoli);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_nota_credito_soliDetaNotaCreditoSoli.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_nota_credito_soliFK_IdNotaCreditoSoliDetaNotaCreditoSoli.setSelectedItem(notacreditosoli);
						} else {
							this.jComboBoxid_nota_credito_soliFK_IdNotaCreditoSoliDetaNotaCreditoSoli.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameBodegaForeignKey(Bodega bodega,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli.setSelectedItem(bodega);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli.setSelectedItem(bodega);
						} else {
							this.jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameProductoForeignKey(Producto producto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli.setSelectedItem(producto);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli.setSelectedItem(producto);
						} else {
							this.jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUnidadForeignKey(Unidad unidad,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_unidadDetaNotaCreditoSoli.setSelectedItem(unidad);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_unidadDetaNotaCreditoSoli.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_unidadFK_IdUnidadDetaNotaCreditoSoli.setSelectedItem(unidad);
						} else {
							this.jComboBoxid_unidadFK_IdUnidadDetaNotaCreditoSoli.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpaqueForeignKey(Empaque empaque,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empaqueDetaNotaCreditoSoli.setSelectedItem(empaque);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empaqueDetaNotaCreditoSoli.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCreditoSoli.setSelectedItem(empaque);
						} else {
							this.jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCreditoSoli.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoDevolucionEmpresaForeignKey(TipoDevolucionEmpresa tipodevolucionempresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoli.setSelectedItem(tipodevolucionempresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoli.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli.setSelectedItem(tipodevolucionempresa);
						} else {
							this.jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCentroCostoForeignKey(CentroCosto centrocosto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_centro_costoDetaNotaCreditoSoli.setSelectedItem(centrocosto);
						}
					} else {
						if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_centro_costoDetaNotaCreditoSoli.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCreditoSoli.setSelectedItem(centrocosto);
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCreditoSoli.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesDetaNotaCreditoSoli() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			DetaNotaCreditoSoliConstantesFunciones.refrescarForeignKeysDescripcionesDetaNotaCreditoSoli(this.detanotacreditosoliLogic.getDetaNotaCreditoSolis());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			DetaNotaCreditoSoliConstantesFunciones.refrescarForeignKeysDescripcionesDetaNotaCreditoSoli(this.detanotacreditosolis);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
		classes.add(new Classe(NotaCreditoSoli.class));
		classes.add(new Classe(Bodega.class));
		classes.add(new Classe(Producto.class));
		classes.add(new Classe(Unidad.class));
		classes.add(new Classe(Empaque.class));
		classes.add(new Classe(TipoDevolucionEmpresa.class));
		classes.add(new Classe(CentroCosto.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//detanotacreditosoliLogic.setDetaNotaCreditoSolis(this.detanotacreditosolis);
			detanotacreditosoliLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public DetaNotaCreditoSoliParameterReturnGeneral getDetaNotaCreditoSoliParameterGeneral() {
		return this.detanotacreditosoliParameterGeneral;
	}
	
	public void setDetaNotaCreditoSoliParameterGeneral(DetaNotaCreditoSoliParameterReturnGeneral detanotacreditosoliParameterGeneral) {
		this.detanotacreditosoliParameterGeneral = detanotacreditosoliParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoDetaNotaCreditoSoli() {
		return isPermisoTodoDetaNotaCreditoSoli;
	}

	public void setIsPermisoTodoDetaNotaCreditoSoli(Boolean isPermisoTodoDetaNotaCreditoSoli) {
		this.isPermisoTodoDetaNotaCreditoSoli = isPermisoTodoDetaNotaCreditoSoli;
	}

	public Boolean getIsPermisoNuevoDetaNotaCreditoSoli() {
		return isPermisoNuevoDetaNotaCreditoSoli;
	}

	public void setIsPermisoNuevoDetaNotaCreditoSoli(Boolean isPermisoNuevoDetaNotaCreditoSoli) {
		this.isPermisoNuevoDetaNotaCreditoSoli = isPermisoNuevoDetaNotaCreditoSoli;
	}

	public Boolean getIsPermisoActualizarDetaNotaCreditoSoli() {
		return isPermisoActualizarDetaNotaCreditoSoli;
	}

	public void setIsPermisoActualizarDetaNotaCreditoSoli(Boolean isPermisoActualizarDetaNotaCreditoSoli) {
		this.isPermisoActualizarDetaNotaCreditoSoli = isPermisoActualizarDetaNotaCreditoSoli;
	}

	public Boolean getIsPermisoEliminarDetaNotaCreditoSoli() {
		return isPermisoEliminarDetaNotaCreditoSoli;
	}

	public void setIsPermisoEliminarDetaNotaCreditoSoli(Boolean isPermisoEliminarDetaNotaCreditoSoli) {
		this.isPermisoEliminarDetaNotaCreditoSoli = isPermisoEliminarDetaNotaCreditoSoli;
	}

	public Boolean getIsPermisoGuardarCambiosDetaNotaCreditoSoli() {
		return isPermisoGuardarCambiosDetaNotaCreditoSoli;
	}

	public void setIsPermisoGuardarCambiosDetaNotaCreditoSoli(Boolean isPermisoGuardarCambiosDetaNotaCreditoSoli) {
		this.isPermisoGuardarCambiosDetaNotaCreditoSoli = isPermisoGuardarCambiosDetaNotaCreditoSoli;
	}
	
	public Boolean getIsPermisoConsultaDetaNotaCreditoSoli() {
		return isPermisoConsultaDetaNotaCreditoSoli;
	}

	public void setIsPermisoConsultaDetaNotaCreditoSoli(Boolean isPermisoConsultaDetaNotaCreditoSoli) {
		this.isPermisoConsultaDetaNotaCreditoSoli = isPermisoConsultaDetaNotaCreditoSoli;
	}

	public Boolean getIsPermisoBusquedaDetaNotaCreditoSoli() {
		return isPermisoBusquedaDetaNotaCreditoSoli;
	}

	public void setIsPermisoBusquedaDetaNotaCreditoSoli(Boolean isPermisoBusquedaDetaNotaCreditoSoli) {
		this.isPermisoBusquedaDetaNotaCreditoSoli = isPermisoBusquedaDetaNotaCreditoSoli;
	}

	public Boolean getIsPermisoReporteDetaNotaCreditoSoli() {
		return isPermisoReporteDetaNotaCreditoSoli;
	}

	public void setIsPermisoReporteDetaNotaCreditoSoli(Boolean isPermisoReporteDetaNotaCreditoSoli) {
		this.isPermisoReporteDetaNotaCreditoSoli = isPermisoReporteDetaNotaCreditoSoli;
	}
	
	public Boolean getIsPermisoPaginacionMedioDetaNotaCreditoSoli() {
		return isPermisoPaginacionMedioDetaNotaCreditoSoli;
	}

	public void setIsPermisoPaginacionMedioDetaNotaCreditoSoli(Boolean isPermisoPaginacionMedioDetaNotaCreditoSoli) {
		this.isPermisoPaginacionMedioDetaNotaCreditoSoli = isPermisoPaginacionMedioDetaNotaCreditoSoli;
	}
	
	public Boolean getIsPermisoPaginacionTodoDetaNotaCreditoSoli() {
		return isPermisoPaginacionTodoDetaNotaCreditoSoli;
	}

	public void setIsPermisoPaginacionTodoDetaNotaCreditoSoli(Boolean isPermisoPaginacionTodoDetaNotaCreditoSoli) {
		this.isPermisoPaginacionTodoDetaNotaCreditoSoli = isPermisoPaginacionTodoDetaNotaCreditoSoli;
	}
	
	public Boolean getIsPermisoPaginacionAltoDetaNotaCreditoSoli() {
		return isPermisoPaginacionAltoDetaNotaCreditoSoli;
	}

	public void setIsPermisoPaginacionAltoDetaNotaCreditoSoli(Boolean isPermisoPaginacionAltoDetaNotaCreditoSoli) {
		this.isPermisoPaginacionAltoDetaNotaCreditoSoli = isPermisoPaginacionAltoDetaNotaCreditoSoli;
	}
	
	public Boolean getIsPermisoCopiarDetaNotaCreditoSoli() {
		return isPermisoCopiarDetaNotaCreditoSoli;
	}

	public void setIsPermisoCopiarDetaNotaCreditoSoli(Boolean isPermisoCopiarDetaNotaCreditoSoli) {
		this.isPermisoCopiarDetaNotaCreditoSoli = isPermisoCopiarDetaNotaCreditoSoli;
	}
	
	public Boolean getIsPermisoVerFormDetaNotaCreditoSoli() {
		return isPermisoVerFormDetaNotaCreditoSoli;
	}

	public void setIsPermisoVerFormDetaNotaCreditoSoli(Boolean isPermisoVerFormDetaNotaCreditoSoli) {
		this.isPermisoVerFormDetaNotaCreditoSoli = isPermisoVerFormDetaNotaCreditoSoli;
	}
	
	public Boolean getIsPermisoDuplicarDetaNotaCreditoSoli() {
		return isPermisoDuplicarDetaNotaCreditoSoli;
	}

	public void setIsPermisoDuplicarDetaNotaCreditoSoli(Boolean isPermisoDuplicarDetaNotaCreditoSoli) {
		this.isPermisoDuplicarDetaNotaCreditoSoli = isPermisoDuplicarDetaNotaCreditoSoli;
	}
	
	public Boolean getIsPermisoOrdenDetaNotaCreditoSoli() {
		return isPermisoOrdenDetaNotaCreditoSoli;
	}

	public void setIsPermisoOrdenDetaNotaCreditoSoli(Boolean isPermisoOrdenDetaNotaCreditoSoli) {
		this.isPermisoOrdenDetaNotaCreditoSoli = isPermisoOrdenDetaNotaCreditoSoli;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoDetaNotaCreditoSoli() {
		return isVisibilidadCeldaNuevoDetaNotaCreditoSoli;
	}

	public void setIsVisibilidadCeldaNuevoDetaNotaCreditoSoli(Boolean isVisibilidadCeldaNuevoDetaNotaCreditoSoli) {
		this.isVisibilidadCeldaNuevoDetaNotaCreditoSoli = isVisibilidadCeldaNuevoDetaNotaCreditoSoli;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarDetaNotaCreditoSoli() {
		return isVisibilidadCeldaDuplicarDetaNotaCreditoSoli;
	}

	public void setIsVisibilidadCeldaDuplicarDetaNotaCreditoSoli(Boolean isVisibilidadCeldaDuplicarDetaNotaCreditoSoli) {
		this.isVisibilidadCeldaDuplicarDetaNotaCreditoSoli = isVisibilidadCeldaDuplicarDetaNotaCreditoSoli;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarDetaNotaCreditoSoli() {
		return isVisibilidadCeldaCopiarDetaNotaCreditoSoli;
	}

	public void setIsVisibilidadCeldaCopiarDetaNotaCreditoSoli(Boolean isVisibilidadCeldaCopiarDetaNotaCreditoSoli) {
		this.isVisibilidadCeldaCopiarDetaNotaCreditoSoli = isVisibilidadCeldaCopiarDetaNotaCreditoSoli;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormDetaNotaCreditoSoli() {
		return isVisibilidadCeldaVerFormDetaNotaCreditoSoli;
	}

	public void setIsVisibilidadCeldaVerFormDetaNotaCreditoSoli(Boolean isVisibilidadCeldaVerFormDetaNotaCreditoSoli) {
		this.isVisibilidadCeldaVerFormDetaNotaCreditoSoli = isVisibilidadCeldaVerFormDetaNotaCreditoSoli;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenDetaNotaCreditoSoli() {
		return isVisibilidadCeldaOrdenDetaNotaCreditoSoli;
	}

	public void setIsVisibilidadCeldaOrdenDetaNotaCreditoSoli(Boolean isVisibilidadCeldaOrdenDetaNotaCreditoSoli) {
		this.isVisibilidadCeldaOrdenDetaNotaCreditoSoli = isVisibilidadCeldaOrdenDetaNotaCreditoSoli;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli() {
		return isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli(Boolean isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli) {
		this.isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli = isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli;
	}
	
	public Boolean getIsVisibilidadCeldaModificarDetaNotaCreditoSoli() {
		return isVisibilidadCeldaModificarDetaNotaCreditoSoli;
	}

	public void setIsVisibilidadCeldaModificarDetaNotaCreditoSoli(Boolean isVisibilidadCeldaModificarDetaNotaCreditoSoli) {
		this.isVisibilidadCeldaModificarDetaNotaCreditoSoli = isVisibilidadCeldaModificarDetaNotaCreditoSoli;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarDetaNotaCreditoSoli() {
		return isVisibilidadCeldaActualizarDetaNotaCreditoSoli;
	}

	public void setIsVisibilidadCeldaActualizarDetaNotaCreditoSoli(Boolean isVisibilidadCeldaActualizarDetaNotaCreditoSoli) {
		this.isVisibilidadCeldaActualizarDetaNotaCreditoSoli = isVisibilidadCeldaActualizarDetaNotaCreditoSoli;
	}

	public Boolean getIsVisibilidadCeldaEliminarDetaNotaCreditoSoli() {
		return isVisibilidadCeldaEliminarDetaNotaCreditoSoli;
	}

	public void setIsVisibilidadCeldaEliminarDetaNotaCreditoSoli(Boolean isVisibilidadCeldaEliminarDetaNotaCreditoSoli) {
		this.isVisibilidadCeldaEliminarDetaNotaCreditoSoli = isVisibilidadCeldaEliminarDetaNotaCreditoSoli;
	}

	public Boolean getIsVisibilidadCeldaCancelarDetaNotaCreditoSoli() {
		return isVisibilidadCeldaCancelarDetaNotaCreditoSoli;
	}

	public void setIsVisibilidadCeldaCancelarDetaNotaCreditoSoli(Boolean isVisibilidadCeldaCancelarDetaNotaCreditoSoli) {
		this.isVisibilidadCeldaCancelarDetaNotaCreditoSoli = isVisibilidadCeldaCancelarDetaNotaCreditoSoli;
	}

	public Boolean getIsVisibilidadCeldaGuardarDetaNotaCreditoSoli() {
		return isVisibilidadCeldaGuardarDetaNotaCreditoSoli;
	}

	public void setIsVisibilidadCeldaGuardarDetaNotaCreditoSoli(Boolean isVisibilidadCeldaGuardarDetaNotaCreditoSoli) {
		this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli = isVisibilidadCeldaGuardarDetaNotaCreditoSoli;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli() {
		return isVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli;
	}

	public void setIsVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli(Boolean isVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli) {
		this.isVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli = isVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli;
	}
		
	public DetaNotaCreditoSoliSessionBean getdetanotacreditosoliSessionBean() {
		return this.detanotacreditosoliSessionBean;
	}
	
	public void setdetanotacreditosoliSessionBean(DetaNotaCreditoSoliSessionBean detanotacreditosoliSessionBean) {
		this.detanotacreditosoliSessionBean=detanotacreditosoliSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdBodega() {
		return this.isVisibilidadFK_IdBodega;
	}

	public void setisVisibilidadFK_IdBodega(Boolean isVisibilidadFK_IdBodega) {
		this.isVisibilidadFK_IdBodega=isVisibilidadFK_IdBodega;
	}

	public Boolean getisVisibilidadFK_IdCentroCosto() {
		return this.isVisibilidadFK_IdCentroCosto;
	}

	public void setisVisibilidadFK_IdCentroCosto(Boolean isVisibilidadFK_IdCentroCosto) {
		this.isVisibilidadFK_IdCentroCosto=isVisibilidadFK_IdCentroCosto;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpaque() {
		return this.isVisibilidadFK_IdEmpaque;
	}

	public void setisVisibilidadFK_IdEmpaque(Boolean isVisibilidadFK_IdEmpaque) {
		this.isVisibilidadFK_IdEmpaque=isVisibilidadFK_IdEmpaque;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdNotaCreditoSoli() {
		return this.isVisibilidadFK_IdNotaCreditoSoli;
	}

	public void setisVisibilidadFK_IdNotaCreditoSoli(Boolean isVisibilidadFK_IdNotaCreditoSoli) {
		this.isVisibilidadFK_IdNotaCreditoSoli=isVisibilidadFK_IdNotaCreditoSoli;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdProducto() {
		return this.isVisibilidadFK_IdProducto;
	}

	public void setisVisibilidadFK_IdProducto(Boolean isVisibilidadFK_IdProducto) {
		this.isVisibilidadFK_IdProducto=isVisibilidadFK_IdProducto;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoDevolucionEmpresa() {
		return this.isVisibilidadFK_IdTipoDevolucionEmpresa;
	}

	public void setisVisibilidadFK_IdTipoDevolucionEmpresa(Boolean isVisibilidadFK_IdTipoDevolucionEmpresa) {
		this.isVisibilidadFK_IdTipoDevolucionEmpresa=isVisibilidadFK_IdTipoDevolucionEmpresa;
	}

	public Boolean getisVisibilidadFK_IdUnidad() {
		return this.isVisibilidadFK_IdUnidad;
	}

	public void setisVisibilidadFK_IdUnidad(Boolean isVisibilidadFK_IdUnidad) {
		this.isVisibilidadFK_IdUnidad=isVisibilidadFK_IdUnidad;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(DetaNotaCreditoSoli detanotacreditosoli)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(detanotacreditosoli,null);
				this.setActualParaGuardarSucursalForeignKey(detanotacreditosoli,null);
				this.setActualParaGuardarEjercicioForeignKey(detanotacreditosoli,null);
				this.setActualParaGuardarPeriodoForeignKey(detanotacreditosoli,null);
				this.setActualParaGuardarAnioForeignKey(detanotacreditosoli,null);
				this.setActualParaGuardarMesForeignKey(detanotacreditosoli,null);
				this.setActualParaGuardarNotaCreditoSoliForeignKey(detanotacreditosoli,null);
				this.setActualParaGuardarBodegaForeignKey(detanotacreditosoli,null);
				this.setActualParaGuardarProductoForeignKey(detanotacreditosoli,null);
				this.setActualParaGuardarUnidadForeignKey(detanotacreditosoli,null);
				this.setActualParaGuardarEmpaqueForeignKey(detanotacreditosoli,null);
				this.setActualParaGuardarTipoDevolucionEmpresaForeignKey(detanotacreditosoli,null);
				this.setActualParaGuardarCentroCostoForeignKey(detanotacreditosoli,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(DetaNotaCreditoSoli detanotacreditosoli,DetaNotaCreditoSoli detanotacreditosoliAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalDetaNotaCreditoSoli(detanotacreditosoli);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		detanotacreditosoliAux.setId(detanotacreditosoli.getId());
		detanotacreditosoliAux.setVersionRow(detanotacreditosoli.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessDetaNotaCreditoSoli();
		
			int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = detanotacreditosoliValidator.getInvalidValues(this.detanotacreditosoli);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			detanotacreditosoliLogic.setDatosCliente(datosCliente);
			detanotacreditosoliLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				detanotacreditosoliAux=new  DetaNotaCreditoSoli();
				
				detanotacreditosoliAux.setIsNew(true);
				detanotacreditosoliAux.setIsChanged(true);
				
				detanotacreditosoliAux.setDetaNotaCreditoSoliOriginal(this.detanotacreditosoli);
				
				detanotacreditosoliAux.setId(this.detanotacreditosoli.getId());	
				detanotacreditosoliAux.setVersionRow(this.detanotacreditosoli.getVersionRow());	
				detanotacreditosoliAux.setid_empresa(this.detanotacreditosoli.getid_empresa());	
				detanotacreditosoliAux.setid_sucursal(this.detanotacreditosoli.getid_sucursal());	
				detanotacreditosoliAux.setid_ejercicio(this.detanotacreditosoli.getid_ejercicio());	
				detanotacreditosoliAux.setid_periodo(this.detanotacreditosoli.getid_periodo());	
				detanotacreditosoliAux.setid_anio(this.detanotacreditosoli.getid_anio());	
				detanotacreditosoliAux.setid_mes(this.detanotacreditosoli.getid_mes());	
				detanotacreditosoliAux.setid_nota_credito_soli(this.detanotacreditosoli.getid_nota_credito_soli());	
				detanotacreditosoliAux.setid_bodega(this.detanotacreditosoli.getid_bodega());	
				detanotacreditosoliAux.setid_producto(this.detanotacreditosoli.getid_producto());	
				detanotacreditosoliAux.setid_unidad(this.detanotacreditosoli.getid_unidad());	
				
				if(this.detanotacreditosoli.getid_empaque()!=null && this.detanotacreditosoli.getid_empaque()>0L) {
					detanotacreditosoliAux.setid_empaque(this.detanotacreditosoli.getid_empaque());
				} else {
					detanotacreditosoliAux.setid_empaque(null);
				}	
				detanotacreditosoliAux.setid_tipo_devolucion_empresa(this.detanotacreditosoli.getid_tipo_devolucion_empresa());	
				
				if(this.detanotacreditosoli.getid_centro_costo()!=null && this.detanotacreditosoli.getid_centro_costo()>0L) {
					detanotacreditosoliAux.setid_centro_costo(this.detanotacreditosoli.getid_centro_costo());
				} else {
					detanotacreditosoliAux.setid_centro_costo(null);
				}	
				detanotacreditosoliAux.setcantidad(this.detanotacreditosoli.getcantidad());	
				detanotacreditosoliAux.setprecio(this.detanotacreditosoli.getprecio());	
				detanotacreditosoliAux.setporcen_descuen(this.detanotacreditosoli.getporcen_descuen());	
				detanotacreditosoliAux.setdescuento(this.detanotacreditosoli.getdescuento());	
				detanotacreditosoliAux.setimpuesto(this.detanotacreditosoli.getimpuesto());	
				detanotacreditosoliAux.setporcen_iva(this.detanotacreditosoli.getporcen_iva());	
				detanotacreditosoliAux.settotal(this.detanotacreditosoli.gettotal());	
				detanotacreditosoliAux.setdescripcion(this.detanotacreditosoli.getdescripcion());	
				detanotacreditosoliAux.setcodigo_lote(this.detanotacreditosoli.getcodigo_lote());	
				detanotacreditosoliAux.setnumero_caja(this.detanotacreditosoli.getnumero_caja());	
				detanotacreditosoliAux.setdescuento2(this.detanotacreditosoli.getdescuento2());	
				detanotacreditosoliAux.setcosto(this.detanotacreditosoli.getcosto());	
				detanotacreditosoliAux.setincluye_impuesto(this.detanotacreditosoli.getincluye_impuesto());	
				detanotacreditosoliAux.setporcen_ice(this.detanotacreditosoli.getporcen_ice());	
				detanotacreditosoliAux.setfecha_emision(this.detanotacreditosoli.getfecha_emision());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detanotacreditosoliSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detanotacreditosoliSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(detanotacreditosoliAux,detanotacreditosoliLogic.getDetaNotaCreditoSolis());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detanotacreditosoliAux,detanotacreditosolis);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.detanotacreditosoliSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detanotacreditosoliSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosoliLogic.saveDetaNotaCreditoSolis();//WithConnection
						//detanotacreditosoliLogic.getSetVersionRowDetaNotaCreditoSolis();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detanotacreditosoli,detanotacreditosoliAux);
					
					this.refrescarForeignKeysDescripcionesDetaNotaCreditoSoli();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detanotacreditosoliSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detanotacreditosoliLogic.saveDetaNotaCreditoSoliRelaciones(detanotacreditosoliAux);//WithConnection
								//detanotacreditosoliLogic.getSetVersionRowDetaNotaCreditoSolis();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detanotacreditosoli,detanotacreditosoliAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detanotacreditosoliSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detanotacreditosoliSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detanotacreditosoliAux,detanotacreditosoliLogic.getDetaNotaCreditoSolis());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detanotacreditosoliAux,detanotacreditosolis);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detanotacreditosoli,detanotacreditosoliAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				detanotacreditosoliAux=new  DetaNotaCreditoSoli();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.detanotacreditosoliSessionBean.getEsGuardarRelacionado() 
					|| (this.detanotacreditosoliSessionBean.getEsGuardarRelacionado() && this.detanotacreditosoli.getId()>=0)) {
						
					detanotacreditosoliAux.setIsNew(false);
				}
				
				detanotacreditosoliAux.setIsDeleted(false);
			
				detanotacreditosoliAux.setId(this.detanotacreditosoli.getId());	
				detanotacreditosoliAux.setVersionRow(this.detanotacreditosoli.getVersionRow());	
				detanotacreditosoliAux.setid_empresa(this.detanotacreditosoli.getid_empresa());	
				detanotacreditosoliAux.setid_sucursal(this.detanotacreditosoli.getid_sucursal());	
				detanotacreditosoliAux.setid_ejercicio(this.detanotacreditosoli.getid_ejercicio());	
				detanotacreditosoliAux.setid_periodo(this.detanotacreditosoli.getid_periodo());	
				detanotacreditosoliAux.setid_anio(this.detanotacreditosoli.getid_anio());	
				detanotacreditosoliAux.setid_mes(this.detanotacreditosoli.getid_mes());	
				detanotacreditosoliAux.setid_nota_credito_soli(this.detanotacreditosoli.getid_nota_credito_soli());	
				detanotacreditosoliAux.setid_bodega(this.detanotacreditosoli.getid_bodega());	
				detanotacreditosoliAux.setid_producto(this.detanotacreditosoli.getid_producto());	
				detanotacreditosoliAux.setid_unidad(this.detanotacreditosoli.getid_unidad());	
				
				if(this.detanotacreditosoli.getid_empaque()!=null && this.detanotacreditosoli.getid_empaque()>0L) {
					detanotacreditosoliAux.setid_empaque(this.detanotacreditosoli.getid_empaque());
				} else {
					detanotacreditosoliAux.setid_empaque(null);
				}	
				detanotacreditosoliAux.setid_tipo_devolucion_empresa(this.detanotacreditosoli.getid_tipo_devolucion_empresa());	
				
				if(this.detanotacreditosoli.getid_centro_costo()!=null && this.detanotacreditosoli.getid_centro_costo()>0L) {
					detanotacreditosoliAux.setid_centro_costo(this.detanotacreditosoli.getid_centro_costo());
				} else {
					detanotacreditosoliAux.setid_centro_costo(null);
				}	
				detanotacreditosoliAux.setcantidad(this.detanotacreditosoli.getcantidad());	
				detanotacreditosoliAux.setprecio(this.detanotacreditosoli.getprecio());	
				detanotacreditosoliAux.setporcen_descuen(this.detanotacreditosoli.getporcen_descuen());	
				detanotacreditosoliAux.setdescuento(this.detanotacreditosoli.getdescuento());	
				detanotacreditosoliAux.setimpuesto(this.detanotacreditosoli.getimpuesto());	
				detanotacreditosoliAux.setporcen_iva(this.detanotacreditosoli.getporcen_iva());	
				detanotacreditosoliAux.settotal(this.detanotacreditosoli.gettotal());	
				detanotacreditosoliAux.setdescripcion(this.detanotacreditosoli.getdescripcion());	
				detanotacreditosoliAux.setcodigo_lote(this.detanotacreditosoli.getcodigo_lote());	
				detanotacreditosoliAux.setnumero_caja(this.detanotacreditosoli.getnumero_caja());	
				detanotacreditosoliAux.setdescuento2(this.detanotacreditosoli.getdescuento2());	
				detanotacreditosoliAux.setcosto(this.detanotacreditosoli.getcosto());	
				detanotacreditosoliAux.setincluye_impuesto(this.detanotacreditosoli.getincluye_impuesto());	
				detanotacreditosoliAux.setporcen_ice(this.detanotacreditosoli.getporcen_ice());	
				detanotacreditosoliAux.setfecha_emision(this.detanotacreditosoli.getfecha_emision());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detanotacreditosoliAux,detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detanotacreditosoliAux,detanotacreditosolis);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.detanotacreditosoliSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detanotacreditosoliSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosoliLogic.saveDetaNotaCreditoSolis();//WithConnection
						//detanotacreditosoliLogic.getSetVersionRowDetaNotaCreditoSolis();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.detanotacreditosoli,detanotacreditosoliAux);
					
					this.refrescarForeignKeysDescripcionesDetaNotaCreditoSoli();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detanotacreditosoliSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detanotacreditosoliLogic.saveDetaNotaCreditoSoliRelaciones(detanotacreditosoliAux);//WithConnection
								//detanotacreditosoliLogic.getSetVersionRowDetaNotaCreditoSolis();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.detanotacreditosoli,detanotacreditosoliAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.detanotacreditosoliSessionBean.getEstaModoGuardarRelaciones() 
									|| this.detanotacreditosoliSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(detanotacreditosoliAux,detanotacreditosoliLogic.getDetaNotaCreditoSolis());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(detanotacreditosoliAux,detanotacreditosolis);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.detanotacreditosoli,detanotacreditosoliAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				detanotacreditosoliAux=new  DetaNotaCreditoSoli();
				
				detanotacreditosoliAux.setIsNew(false);
				detanotacreditosoliAux.setIsChanged(false);
				
				detanotacreditosoliAux.setIsDeleted(true);
				
				detanotacreditosoliAux.setId(this.detanotacreditosoli.getId());	
				detanotacreditosoliAux.setVersionRow(this.detanotacreditosoli.getVersionRow());	
				detanotacreditosoliAux.setid_empresa(this.detanotacreditosoli.getid_empresa());	
				detanotacreditosoliAux.setid_sucursal(this.detanotacreditosoli.getid_sucursal());	
				detanotacreditosoliAux.setid_ejercicio(this.detanotacreditosoli.getid_ejercicio());	
				detanotacreditosoliAux.setid_periodo(this.detanotacreditosoli.getid_periodo());	
				detanotacreditosoliAux.setid_anio(this.detanotacreditosoli.getid_anio());	
				detanotacreditosoliAux.setid_mes(this.detanotacreditosoli.getid_mes());	
				detanotacreditosoliAux.setid_nota_credito_soli(this.detanotacreditosoli.getid_nota_credito_soli());	
				detanotacreditosoliAux.setid_bodega(this.detanotacreditosoli.getid_bodega());	
				detanotacreditosoliAux.setid_producto(this.detanotacreditosoli.getid_producto());	
				detanotacreditosoliAux.setid_unidad(this.detanotacreditosoli.getid_unidad());	
				
				if(this.detanotacreditosoli.getid_empaque()!=null && this.detanotacreditosoli.getid_empaque()>0L) {
					detanotacreditosoliAux.setid_empaque(this.detanotacreditosoli.getid_empaque());
				} else {
					detanotacreditosoliAux.setid_empaque(null);
				}	
				detanotacreditosoliAux.setid_tipo_devolucion_empresa(this.detanotacreditosoli.getid_tipo_devolucion_empresa());	
				
				if(this.detanotacreditosoli.getid_centro_costo()!=null && this.detanotacreditosoli.getid_centro_costo()>0L) {
					detanotacreditosoliAux.setid_centro_costo(this.detanotacreditosoli.getid_centro_costo());
				} else {
					detanotacreditosoliAux.setid_centro_costo(null);
				}	
				detanotacreditosoliAux.setcantidad(this.detanotacreditosoli.getcantidad());	
				detanotacreditosoliAux.setprecio(this.detanotacreditosoli.getprecio());	
				detanotacreditosoliAux.setporcen_descuen(this.detanotacreditosoli.getporcen_descuen());	
				detanotacreditosoliAux.setdescuento(this.detanotacreditosoli.getdescuento());	
				detanotacreditosoliAux.setimpuesto(this.detanotacreditosoli.getimpuesto());	
				detanotacreditosoliAux.setporcen_iva(this.detanotacreditosoli.getporcen_iva());	
				detanotacreditosoliAux.settotal(this.detanotacreditosoli.gettotal());	
				detanotacreditosoliAux.setdescripcion(this.detanotacreditosoli.getdescripcion());	
				detanotacreditosoliAux.setcodigo_lote(this.detanotacreditosoli.getcodigo_lote());	
				detanotacreditosoliAux.setnumero_caja(this.detanotacreditosoli.getnumero_caja());	
				detanotacreditosoliAux.setdescuento2(this.detanotacreditosoli.getdescuento2());	
				detanotacreditosoliAux.setcosto(this.detanotacreditosoli.getcosto());	
				detanotacreditosoliAux.setincluye_impuesto(this.detanotacreditosoli.getincluye_impuesto());	
				detanotacreditosoliAux.setporcen_ice(this.detanotacreditosoli.getporcen_ice());	
				detanotacreditosoliAux.setfecha_emision(this.detanotacreditosoli.getfecha_emision());	
				
				if(this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.detanotacreditosoliAux.getId()>=0) {	
						this.detanotacreditosolisEliminados.add(detanotacreditosoliAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(detanotacreditosoliAux,detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detanotacreditosoliAux,detanotacreditosolis);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.detanotacreditosoliSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.detanotacreditosoliSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosoliLogic.saveDetaNotaCreditoSolis();//WithConnection
						//detanotacreditosoliLogic.getSetVersionRowDetaNotaCreditoSolis();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.detanotacreditosoliSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								detanotacreditosoliLogic.saveDetaNotaCreditoSoliRelaciones(detanotacreditosoliAux);//WithConnection
								//detanotacreditosoliLogic.getSetVersionRowDetaNotaCreditoSolis();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.detanotacreditosoliSessionBean.getEstaModoGuardarRelaciones() 
								|| this.detanotacreditosoliSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(detanotacreditosoliAux,detanotacreditosoliLogic.getDetaNotaCreditoSolis());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(detanotacreditosoliAux,detanotacreditosolis);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().addAll(this.detanotacreditosolisEliminados);
					
					detanotacreditosoliLogic.saveDetaNotaCreditoSolis();//WithConnection
					//detanotacreditosoliLogic.getSetVersionRowDetaNotaCreditoSolis();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesDetaNotaCreditoSoli();
				
				this.detanotacreditosolisEliminados= new ArrayList<DetaNotaCreditoSoli>();		
			}
			
			if(this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.arrDatoGeneralTotales=DetaNotaCreditoSoliConstantesFunciones.getTotalesListaDetaNotaCreditoSoli(detanotacreditosoliLogic.getDetaNotaCreditoSolis());							
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				this.arrDatoGeneralTotales=DetaNotaCreditoSoliConstantesFunciones.getTotalesListaDetaNotaCreditoSoli(this.detanotacreditosolis);
			}
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Detalle  Solicitud Nota Credit GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Detalle  Solicitud Nota Credit",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.detanotacreditosoli=detanotacreditosoliAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessDetaNotaCreditoSoli();
      	}
		
	}	
	
	public void actualizarRelaciones(DetaNotaCreditoSoli detanotacreditosoliLocal) throws Exception {
		
		if(this.detanotacreditosoliSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(DetaNotaCreditoSoli detanotacreditosoliLocal) throws Exception {	
		if(this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				detanotacreditosoliLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				detanotacreditosoliLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				detanotacreditosoliLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				detanotacreditosoliLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				detanotacreditosoliLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				detanotacreditosoliLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(NotaCreditoSoliDetalleFormJInternalFrame.class)) {
				NotaCreditoSoliBeanSwingJInternalFrame notacreditosoliBeanSwingJInternalFrameLocal=(NotaCreditoSoliBeanSwingJInternalFrame) ((NotaCreditoSoliDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				notacreditosoliBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoNotaCreditoSoli(notacreditosoliBeanSwingJInternalFrameLocal.getnotacreditosoli(),true);
				notacreditosoliBeanSwingJInternalFrameLocal.actualizarLista(notacreditosoliBeanSwingJInternalFrameLocal.notacreditosoli,this.notacreditosolisForeignKey);

				notacreditosoliBeanSwingJInternalFrameLocal.actualizarRelaciones(notacreditosoliBeanSwingJInternalFrameLocal.notacreditosoli);

				detanotacreditosoliLocal.setNotaCreditoSoli(notacreditosoliBeanSwingJInternalFrameLocal.notacreditosoli);

				this.addItemDefectoCombosForeignKeyNotaCreditoSoli();
				this.cargarCombosFrameNotaCreditoSolisForeignKey("Formulario");
				this.setActualNotaCreditoSoliForeignKey(notacreditosoliBeanSwingJInternalFrameLocal.notacreditosoli.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(BodegaDetalleFormJInternalFrame.class)) {
				BodegaBeanSwingJInternalFrame bodegaBeanSwingJInternalFrameLocal=(BodegaBeanSwingJInternalFrame) ((BodegaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				bodegaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoBodega(bodegaBeanSwingJInternalFrameLocal.getbodega(),true);
				bodegaBeanSwingJInternalFrameLocal.actualizarLista(bodegaBeanSwingJInternalFrameLocal.bodega,this.bodegasForeignKey);

				bodegaBeanSwingJInternalFrameLocal.actualizarRelaciones(bodegaBeanSwingJInternalFrameLocal.bodega);

				detanotacreditosoliLocal.setBodega(bodegaBeanSwingJInternalFrameLocal.bodega);

				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey("Formulario");
				this.setActualBodegaForeignKey(bodegaBeanSwingJInternalFrameLocal.bodega.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ProductoDetalleFormJInternalFrame.class)) {
				ProductoBeanSwingJInternalFrame productoBeanSwingJInternalFrameLocal=(ProductoBeanSwingJInternalFrame) ((ProductoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				productoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoProducto(productoBeanSwingJInternalFrameLocal.getproducto(),true);
				productoBeanSwingJInternalFrameLocal.actualizarLista(productoBeanSwingJInternalFrameLocal.producto,this.productosForeignKey);

				productoBeanSwingJInternalFrameLocal.actualizarRelaciones(productoBeanSwingJInternalFrameLocal.producto);

				detanotacreditosoliLocal.setProducto(productoBeanSwingJInternalFrameLocal.producto);

				this.addItemDefectoCombosForeignKeyProducto();
				this.cargarCombosFrameProductosForeignKey("Formulario");
				this.setActualProductoForeignKey(productoBeanSwingJInternalFrameLocal.producto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UnidadDetalleFormJInternalFrame.class)) {
				UnidadBeanSwingJInternalFrame unidadBeanSwingJInternalFrameLocal=(UnidadBeanSwingJInternalFrame) ((UnidadDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				unidadBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUnidad(unidadBeanSwingJInternalFrameLocal.getunidad(),true);
				unidadBeanSwingJInternalFrameLocal.actualizarLista(unidadBeanSwingJInternalFrameLocal.unidad,this.unidadsForeignKey);

				unidadBeanSwingJInternalFrameLocal.actualizarRelaciones(unidadBeanSwingJInternalFrameLocal.unidad);

				detanotacreditosoliLocal.setUnidad(unidadBeanSwingJInternalFrameLocal.unidad);

				this.addItemDefectoCombosForeignKeyUnidad();
				this.cargarCombosFrameUnidadsForeignKey("Formulario");
				this.setActualUnidadForeignKey(unidadBeanSwingJInternalFrameLocal.unidad.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpaqueDetalleFormJInternalFrame.class)) {
				EmpaqueBeanSwingJInternalFrame empaqueBeanSwingJInternalFrameLocal=(EmpaqueBeanSwingJInternalFrame) ((EmpaqueDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empaqueBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpaque(empaqueBeanSwingJInternalFrameLocal.getempaque(),true);
				empaqueBeanSwingJInternalFrameLocal.actualizarLista(empaqueBeanSwingJInternalFrameLocal.empaque,this.empaquesForeignKey);

				empaqueBeanSwingJInternalFrameLocal.actualizarRelaciones(empaqueBeanSwingJInternalFrameLocal.empaque);

				detanotacreditosoliLocal.setEmpaque(empaqueBeanSwingJInternalFrameLocal.empaque);

				this.addItemDefectoCombosForeignKeyEmpaque();
				this.cargarCombosFrameEmpaquesForeignKey("Formulario");
				this.setActualEmpaqueForeignKey(empaqueBeanSwingJInternalFrameLocal.empaque.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoDevolucionEmpresaDetalleFormJInternalFrame.class)) {
				TipoDevolucionEmpresaBeanSwingJInternalFrame tipodevolucionempresaBeanSwingJInternalFrameLocal=(TipoDevolucionEmpresaBeanSwingJInternalFrame) ((TipoDevolucionEmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipodevolucionempresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoDevolucionEmpresa(tipodevolucionempresaBeanSwingJInternalFrameLocal.gettipodevolucionempresa(),true);
				tipodevolucionempresaBeanSwingJInternalFrameLocal.actualizarLista(tipodevolucionempresaBeanSwingJInternalFrameLocal.tipodevolucionempresa,this.tipodevolucionempresasForeignKey);

				tipodevolucionempresaBeanSwingJInternalFrameLocal.actualizarRelaciones(tipodevolucionempresaBeanSwingJInternalFrameLocal.tipodevolucionempresa);

				detanotacreditosoliLocal.setTipoDevolucionEmpresa(tipodevolucionempresaBeanSwingJInternalFrameLocal.tipodevolucionempresa);

				this.addItemDefectoCombosForeignKeyTipoDevolucionEmpresa();
				this.cargarCombosFrameTipoDevolucionEmpresasForeignKey("Formulario");
				this.setActualTipoDevolucionEmpresaForeignKey(tipodevolucionempresaBeanSwingJInternalFrameLocal.tipodevolucionempresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CentroCostoDetalleFormJInternalFrame.class)) {
				CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrameLocal=(CentroCostoBeanSwingJInternalFrame) ((CentroCostoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				centrocostoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCentroCosto(centrocostoBeanSwingJInternalFrameLocal.getcentrocosto(),true);
				centrocostoBeanSwingJInternalFrameLocal.actualizarLista(centrocostoBeanSwingJInternalFrameLocal.centrocosto,this.centrocostosForeignKey);

				centrocostoBeanSwingJInternalFrameLocal.actualizarRelaciones(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				detanotacreditosoliLocal.setCentroCosto(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey("Formulario");
				this.setActualCentroCostoForeignKey(centrocostoBeanSwingJInternalFrameLocal.centrocosto.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarDetaNotaCreditoSoliActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = detanotacreditosoliValidator.getInvalidValues(this.detanotacreditosoli);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(DetaNotaCreditoSoli detanotacreditosoli,List<DetaNotaCreditoSoli> detanotacreditosolis) throws Exception {
		try	{		
			DetaNotaCreditoSoliConstantesFunciones.actualizarLista(detanotacreditosoli,detanotacreditosolis,this.detanotacreditosoliSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(DetaNotaCreditoSoli detanotacreditosoli,List<DetaNotaCreditoSoli> detanotacreditosolis) throws Exception {
		try	{			
			DetaNotaCreditoSoliConstantesFunciones.actualizarSelectedLista(detanotacreditosoli,detanotacreditosolis);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<DetaNotaCreditoSoli> detanotacreditosolisLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				detanotacreditosolisLocal=this.detanotacreditosoliLogic.getDetaNotaCreditoSolis();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				detanotacreditosolisLocal=this.detanotacreditosolis;
			}
			//ARCHITECTURE
		
			for(DetaNotaCreditoSoli detanotacreditosoliLocal:detanotacreditosolisLocal) {
				if(this.permiteMantenimiento(detanotacreditosoliLocal) && detanotacreditosoliLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+DetaNotaCreditoSoliConstantesFunciones.getDetaNotaCreditoSoliLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_empresaDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_sucursalDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_ejercicioDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_periodoDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_anioDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_mesDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.IDNOTACREDITOSOLI)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_nota_credito_soliDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.IDBODEGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_bodegaDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.IDPRODUCTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_productoDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.IDUNIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_unidadDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.IDEMPAQUE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_empaqueDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.IDTIPODEVOLUCIONEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_tipo_devolucion_empresaDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.IDCENTROCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_centro_costoDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.CANTIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelcantidadDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.PRECIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelprecioDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.PORCENDESCUEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelporcen_descuenDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.DESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabeldescuentoDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.IMPUESTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelimpuestoDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.PORCENIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelporcen_ivaDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.TOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabeltotalDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabeldescripcionDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.CODIGOLOTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelcodigo_loteDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.NUMEROCAJA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelnumero_cajaDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.DESCUENTO2)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabeldescuento2DetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.COSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelcostoDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.INCLUYEIMPUESTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelincluye_impuestoDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.PORCENICE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelporcen_iceDetaNotaCreditoSoli,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(DetaNotaCreditoSoliConstantesFunciones.FECHAEMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelfecha_emisionDetaNotaCreditoSoli,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_empresaDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_sucursalDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_ejercicioDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_periodoDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_anioDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_mesDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_nota_credito_soliDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_bodegaDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_productoDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_unidadDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_empaqueDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_tipo_devolucion_empresaDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelid_centro_costoDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelcantidadDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelprecioDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelporcen_descuenDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabeldescuentoDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelimpuestoDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelporcen_ivaDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabeltotalDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabeldescripcionDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelcodigo_loteDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelnumero_cajaDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabeldescuento2DetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelcostoDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelincluye_impuestoDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelporcen_iceDetaNotaCreditoSoli,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelfecha_emisionDetaNotaCreditoSoli,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoDetaNotaCreditoSoli--;	
		
		
		this.detanotacreditosoliAux=new DetaNotaCreditoSoli();
		
		this.detanotacreditosoliAux.setId(this.iIdNuevoDetaNotaCreditoSoli);
		this.detanotacreditosoliAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().add(this.detanotacreditosoliAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.detanotacreditosolis.add(this.detanotacreditosoliAux);
		}
		//ARCHITECTURE
		
		this.detanotacreditosoli=this.detanotacreditosoliAux;
		
		if(DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioDetaNotaCreditoSoli(this.detanotacreditosoli);
			this.setVariablesObjetoActualToFormularioForeignKeyDetaNotaCreditoSoli(this.detanotacreditosoli);
		}
				
		//this.setDefaultControlesDetaNotaCreditoSoli();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyDetaNotaCreditoSoli();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyDetaNotaCreditoSoli();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetaNotaCreditoSoli();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoliBean,this.detanotacreditosoli,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.detanotacreditosoliSessionBean.getConGuardarRelaciones()) {
			classes=DetaNotaCreditoSoliConstantesFunciones.getClassesRelationshipsOfDetaNotaCreditoSoli(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.detanotacreditosoliReturnGeneral=detanotacreditosoliLogic.procesarEventosDetaNotaCreditoSolisWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detanotacreditosoliLogic.getDetaNotaCreditoSolis(),this.detanotacreditosoli,this.detanotacreditosoliParameterGeneral,this.isEsNuevoDetaNotaCreditoSoli,classes);//this.detanotacreditosoliLogic.getDetaNotaCreditoSoli()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanDetaNotaCreditoSoli(this.detanotacreditosoliReturnGeneral,this.detanotacreditosoliBean,false);
		
		if(this.detanotacreditosoliReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyDetaNotaCreditoSoli(this.detanotacreditosoliReturnGeneral.getDetaNotaCreditoSoli());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioDetaNotaCreditoSoli(this.detanotacreditosoliReturnGeneral.getDetaNotaCreditoSoli());
		}
		
		if(this.detanotacreditosoliReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioDetaNotaCreditoSoli(this.detanotacreditosoliReturnGeneral.getDetaNotaCreditoSoli(),classes);//this.detanotacreditosoliBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyDetaNotaCreditoSoli();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyDetaNotaCreditoSoli();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.RecargarFormDetaNotaCreditoSoli(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
						
			if(detanotacreditosoliSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetaNotaCreditoSoli();
			}
			
			this.actualizarVisualTableDatosDetaNotaCreditoSoli();
			
			this.jTableDatosDetaNotaCreditoSoli.setRowSelectionInterval(this.getIndiceNuevoDetaNotaCreditoSoli(), this.getIndiceNuevoDetaNotaCreditoSoli());
			
			this.seleccionarFilaTablaDetaNotaCreditoSoliActual();
						
			this.actualizarEstadoCeldasBotonesDetaNotaCreditoSoli("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesDetaNotaCreditoSoli(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldcantidadDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarcantidadDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldprecioDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarprecioDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldporcen_descuenDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarporcen_descuenDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFielddescuentoDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activardescuentoDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldimpuestoDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarimpuestoDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldporcen_ivaDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarporcen_ivaDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldtotalDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activartotalDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextAreadescripcionDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activardescripcionDetaNotaCreditoSoli);//
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldcodigo_loteDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarcodigo_loteDetaNotaCreditoSoli);//
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldnumero_cajaDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarnumero_cajaDetaNotaCreditoSoli);//
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFielddescuento2DetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activardescuento2DetaNotaCreditoSoli);//
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldcostoDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarcostoDetaNotaCreditoSoli);//
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jCheckBoxincluye_impuestoDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarincluye_impuestoDetaNotaCreditoSoli);//
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldporcen_iceDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarporcen_iceDetaNotaCreditoSoli);//
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jDateChooserfecha_emisionDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarfecha_emisionDetaNotaCreditoSoli);	
		//
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empresaDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarid_empresaDetaNotaCreditoSoli);//
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_sucursalDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarid_sucursalDetaNotaCreditoSoli);//
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_ejercicioDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarid_ejercicioDetaNotaCreditoSoli);//
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_periodoDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarid_periodoDetaNotaCreditoSoli);//
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_anioDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarid_anioDetaNotaCreditoSoli);//
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_mesDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarid_mesDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_nota_credito_soliDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarid_nota_credito_soliDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarid_bodegaDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarid_productoDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_unidadDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarid_unidadDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empaqueDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarid_empaqueDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarid_tipo_devolucion_empresaDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_centro_costoDetaNotaCreditoSoli.setEnabled(isHabilitar && this.detanotacreditosoliConstantesFunciones.activarid_centro_costoDetaNotaCreditoSoli);
	};
	
	public void setDefaultControlesDetaNotaCreditoSoli() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoDetaNotaCreditoSoli(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.detanotacreditosoliSessionBean.setConGuardarRelaciones(true);			
			this.detanotacreditosoliSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTabbedPaneRelacionesDetaNotaCreditoSoli.setVisible(true);
			
					
		} else {
			//this.detanotacreditosoliSessionBean.setConGuardarRelaciones(false);			
			this.detanotacreditosoliSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTabbedPaneRelacionesDetaNotaCreditoSoli.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoDetaNotaCreditoSoli() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetaNotaCreditoSoli detanotacreditosoliAux:this.detanotacreditosoliLogic.getDetaNotaCreditoSolis()) {
				if(detanotacreditosoliAux.getId().equals(this.iIdNuevoDetaNotaCreditoSoli)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetaNotaCreditoSoli detanotacreditosoliAux:this.detanotacreditosolis) {
				if(detanotacreditosoliAux.getId().equals(this.iIdNuevoDetaNotaCreditoSoli)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualDetaNotaCreditoSoli(DetaNotaCreditoSoli detanotacreditosoli,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetaNotaCreditoSoli detanotacreditosoliAux:this.detanotacreditosoliLogic.getDetaNotaCreditoSolis()) {
				if(detanotacreditosoliAux.getId().equals(detanotacreditosoli.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetaNotaCreditoSoli detanotacreditosoliAux:this.detanotacreditosolis) {
				if(detanotacreditosoliAux.getId().equals(detanotacreditosoli.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalDetaNotaCreditoSoli(DetaNotaCreditoSoli detanotacreditosoliOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetaNotaCreditoSoli detanotacreditosoliAux:this.detanotacreditosoliLogic.getDetaNotaCreditoSolis()) {
				if(detanotacreditosoliAux.getDetaNotaCreditoSoliOriginal().getId().equals(detanotacreditosoliOriginal.getId())) {
					existe=true;
					detanotacreditosoliOriginal.setId(detanotacreditosoliAux.getId());
					detanotacreditosoliOriginal.setVersionRow(detanotacreditosoliAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetaNotaCreditoSoli detanotacreditosoliAux:this.detanotacreditosolis) {
				if(detanotacreditosoliAux.getDetaNotaCreditoSoliOriginal().getId().equals(detanotacreditosoliOriginal.getId())) {
					existe=true;
					detanotacreditosoliOriginal.setId(detanotacreditosoliAux.getId());
					detanotacreditosoliOriginal.setVersionRow(detanotacreditosoliAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosDetaNotaCreditoSoli(Boolean esParaCancelar) throws Exception {
		detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
		detanotacreditosoliAux=new DetaNotaCreditoSoli();
		
		if(!this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetaNotaCreditoSoli detanotacreditosoliAux:this.detanotacreditosoliLogic.getDetaNotaCreditoSolis()) {
					if(detanotacreditosoliAux.getId()<0) {
						detanotacreditosolisAux.add(detanotacreditosoliAux);
					}		
				}
				this.iIdNuevoDetaNotaCreditoSoli=0L;
				this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().removeAll(detanotacreditosolisAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetaNotaCreditoSoli detanotacreditosoliAux:this.detanotacreditosolis) {
					if(detanotacreditosoliAux.getId()<0) {
						detanotacreditosolisAux.add(detanotacreditosoliAux);
					}		
				}
				this.iIdNuevoDetaNotaCreditoSoli=0L;
				this.detanotacreditosolis.removeAll(detanotacreditosolisAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoDetaNotaCreditoSoli 
					&& this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().size()>0
					) {
					detanotacreditosoliAux=this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().get(this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().size() - 1);
				
					if(detanotacreditosoliAux.getId()<0) {
						this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().remove(detanotacreditosoliAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoDetaNotaCreditoSoli && this.detanotacreditosolis.size()>0) {
					detanotacreditosoliAux=this.detanotacreditosolis.get(this.detanotacreditosolis.size() - 1);
				
					if(detanotacreditosoliAux.getId()<0) {
						this.detanotacreditosolis.remove(detanotacreditosoliAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoDetaNotaCreditoSoli(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(detanotacreditosoli.getId()<0) {
				this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().remove(this.detanotacreditosoli);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(detanotacreditosoli.getId()<0) {
				this.detanotacreditosolis.remove(this.detanotacreditosoli);
			}
		}			
	}
	
	public void setEstadosInicialesDetaNotaCreditoSoli(List<DetaNotaCreditoSoli> detanotacreditosolisAux) throws Exception {
		DetaNotaCreditoSoliConstantesFunciones.setEstadosInicialesDetaNotaCreditoSoli(detanotacreditosolisAux);
	}
	
	public void setEstadosInicialesDetaNotaCreditoSoli(DetaNotaCreditoSoli detanotacreditosoliAux) throws Exception {
		DetaNotaCreditoSoliConstantesFunciones.setEstadosInicialesDetaNotaCreditoSoli(detanotacreditosoliAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarDetaNotaCreditoSoliActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesDetaNotaCreditoSoli("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarDetaNotaCreditoSoliActual()) {
				if(!this.isEsNuevoDetaNotaCreditoSoli) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesDetaNotaCreditoSoli("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoDetaNotaCreditoSoli=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarDetaNotaCreditoSoliActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Detalle  Solicitud Nota Credit ?", "MANTENIMIENTO DE Detalle  Solicitud Nota Credit", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesDetaNotaCreditoSoli("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(DetaNotaCreditoSoli detanotacreditosoli) throws Exception {
		DetaNotaCreditoSoliConstantesFunciones.seleccionarAsignar(this.detanotacreditosoli,detanotacreditosoli);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarDetaNotaCreditoSoli=this.isPermisoActualizarOriginalDetaNotaCreditoSoli;
			
			
			this.seleccionarAsignar(detanotacreditosoli);
			
			

			idProductoActual=detanotacreditosoli.getid_producto();
			this.seleccionarProductoActual();

			idCentroCostoActual=detanotacreditosoli.getid_centro_costo();
			this.seleccionarCentroCostoActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			DetaNotaCreditoSoliConstantesFunciones.quitarEspaciosDetaNotaCreditoSoli(this.detanotacreditosoli,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesDetaNotaCreditoSoli("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.detanotacreditosoliSessionBean.setsFuncionBusquedaRapida(this.detanotacreditosoliSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarProductoActual() throws Exception {
		try	{
			Producto productoAux=new Producto();

			if(this.idProductoActual != null && this.idProductoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					productoLogic.getEntityWithConnection(this.idProductoActual);
					productoAux= productoLogic.getProducto();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				productosForeignKey=new ArrayList<Producto>();
				productosForeignKey.add(productoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCentroCostoActual() throws Exception {
		try	{
			CentroCosto centrocostoAux=new CentroCosto();

			if(this.idCentroCostoActual != null && this.idCentroCostoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(this.idCentroCostoActual);
					centrocostoAux= centrocostoLogic.getCentroCosto();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				centrocostosForeignKey=new ArrayList<CentroCosto>();
				centrocostosForeignKey.add(centrocostoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoDetaNotaCreditoSoli) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosDetaNotaCreditoSoli(esParaCancelar);				
				this.cancelarNuevoDetaNotaCreditoSoli(esParaCancelar);								
			}
			
			this.detanotacreditosoli=new DetaNotaCreditoSoli();
			
			this.inicializarDetaNotaCreditoSoli();
			
			this.actualizarEstadoCeldasBotonesDetaNotaCreditoSoli("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarDetaNotaCreditoSoli() throws Exception {
		try {
			DetaNotaCreditoSoliConstantesFunciones.inicializarDetaNotaCreditoSoli(this.detanotacreditosoli);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteDetaNotaCreditoSolis(String sAccionBusqueda,List<DetaNotaCreditoSoli> detanotacreditosolisParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="DetaNotaCreditoSoli"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="DetaNotaCreditoSoliMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("DetaNotaCreditoSoliMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="DetaNotaCreditoSoli"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Detalle  Solicitud Nota Credits");		
		parameters.put("busquedapor", DetaNotaCreditoSoliConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceDetaNotaCreditoSoli=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			DetaNotaCreditoSoliConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			DetaNotaCreditoSoliConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceDetaNotaCreditoSoli=new JRBeanArrayDataSource(DetaNotaCreditoSoliJInternalFrame.TraerDetaNotaCreditoSoliBeans(detanotacreditosolisParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceDetaNotaCreditoSoli);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+DetaNotaCreditoSoliConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+DetaNotaCreditoSoliConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(DetaNotaCreditoSoliBean.TraerDetaNotaCreditoSoliBeans(detanotacreditosolisParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteDetaNotaCreditoSolis(sAccionBusqueda,sTipoArchivoReporte,detanotacreditosolisParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalDetaNotaCreditoSolis(sAccionBusqueda,sTipoArchivoReporte,detanotacreditosolisParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoDetaNotaCreditoSoliActionPerformed(null);
					//this.generarExcelReporteDetaNotaCreditoSolis(sAccionBusqueda,sTipoArchivoReporte,detanotacreditosolisParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalDetaNotaCreditoSolis(sAccionBusqueda,sTipoArchivoReporte,detanotacreditosolisParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesDetaNotaCreditoSolis(sAccionBusqueda,sTipoArchivoReporte,detanotacreditosolisParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesDetaNotaCreditoSolis(sAccionBusqueda,sTipoArchivoReporte,detanotacreditosolisParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteDetaNotaCreditoSolis(String sAccionBusqueda,String sTipoArchivoReporte,List<DetaNotaCreditoSoli> detanotacreditosolisParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detanotacreditosoli";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetaNotaCreditoSolis");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetaNotaCreditoSoli("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(DetaNotaCreditoSoli detanotacreditosoli : detanotacreditosolisParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			DetaNotaCreditoSoliConstantesFunciones.generarExcelReporteDataDetaNotaCreditoSoli("NORMAL",row,workbook,detanotacreditosoli,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle  Solicitud Nota Credit",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderDetaNotaCreditoSoli(String sTipo,Row row,Workbook workbook) {
		
		DetaNotaCreditoSoliConstantesFunciones.generarExcelReporteHeaderDetaNotaCreditoSoli(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalDetaNotaCreditoSolis(String sAccionBusqueda,String sTipoArchivoReporte,List<DetaNotaCreditoSoli> detanotacreditosolisParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detanotacreditosoli_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetaNotaCreditoSolis");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(DetaNotaCreditoSoli detanotacreditosoli : detanotacreditosolisParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.getDetaNotaCreditoSoliDescripcion(detanotacreditosoli));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDNOTACREDITOSOLI))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDNOTACREDITOSOLI);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getnotacreditosoli_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDBODEGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDBODEGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getbodega_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPRODUCTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPRODUCTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getproducto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDUNIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDUNIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getunidad_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPAQUE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPAQUE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getempaque_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.gettipodevolucionempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDCENTROCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDCENTROCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getcentrocosto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_CANTIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_CANTIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getcantidad());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_PRECIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_PRECIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getprecio());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENDESCUEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENDESCUEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getporcen_descuen());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getdescuento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_IMPUESTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IMPUESTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getimpuesto());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getporcen_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_TOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_TOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.gettotal());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_CODIGOLOTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_CODIGOLOTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getcodigo_lote());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_NUMEROCAJA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_NUMEROCAJA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getnumero_caja());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO2))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO2);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getdescuento2());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_COSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_COSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getcosto());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_INCLUYEIMPUESTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_INCLUYEIMPUESTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(detanotacreditosoli.getincluye_impuesto()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENICE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENICE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getporcen_ice());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(DetaNotaCreditoSoliConstantesFunciones.LABEL_FECHAEMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_FECHAEMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(detanotacreditosoli.getfecha_emision());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle  Solicitud Nota Credit",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesDetaNotaCreditoSolis(String sAccionBusqueda,String sTipoArchivoReporte,List<DetaNotaCreditoSoli> detanotacreditosolisParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<DetaNotaCreditoSoli> detanotacreditosolisRespaldo=null;
		
		classes=DetaNotaCreditoSoliConstantesFunciones.getClassesRelationshipsOfDetaNotaCreditoSoli(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.detanotacreditosoliLogic.setDatosCliente(this.datosCliente);
		this.detanotacreditosoliLogic.setDatosDeep(this.datosDeep);
		this.detanotacreditosoliLogic.setIsConDeep(true);
		
		detanotacreditosolisRespaldo=this.detanotacreditosoliLogic.getDetaNotaCreditoSolis();
		
		this.detanotacreditosoliLogic.setDetaNotaCreditoSolis(detanotacreditosolisParaReportes);	
		this.detanotacreditosoliLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		detanotacreditosolisParaReportes=this.detanotacreditosoliLogic.getDetaNotaCreditoSolis();
		this.detanotacreditosoliLogic.setDetaNotaCreditoSolis(detanotacreditosolisRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detanotacreditosoli_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("DetaNotaCreditoSolis");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderDetaNotaCreditoSoli("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(DetaNotaCreditoSoli detanotacreditosoli : detanotacreditosolisParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderDetaNotaCreditoSoli("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			DetaNotaCreditoSoliConstantesFunciones.generarExcelReporteDataDetaNotaCreditoSoli("NORMAL",row,workbook,detanotacreditosoli,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.getDetaNotaCreditoSoliDescripcion(detanotacreditosoli));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle  Solicitud Nota Credit",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessDetaNotaCreditoSoli() throws Exception {		
		this.startProcessDetaNotaCreditoSoli(true);
	}
	
	public void startProcessDetaNotaCreditoSoli(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasDetaNotaCreditoSoli ,this.jPanelParametrosReportesDetaNotaCreditoSoli, this.jScrollPanelDatosDetaNotaCreditoSoli,this.jPanelPaginacionDetaNotaCreditoSoli, this.jScrollPanelDatosEdicionDetaNotaCreditoSoli, this.jPanelAccionesDetaNotaCreditoSoli,this.jPanelAccionesFormularioDetaNotaCreditoSoli,this.jmenuBarDetaNotaCreditoSoli,this.jmenuBarDetalleDetaNotaCreditoSoli,this.jTtoolBarDetaNotaCreditoSoli,this.jTtoolBarDetalleDetaNotaCreditoSoli);		
		
		final JTabbedPane jTabbedPaneBusquedasDetaNotaCreditoSoli=this.jTabbedPaneBusquedasDetaNotaCreditoSoli; 
		
		final JPanel jPanelParametrosReportesDetaNotaCreditoSoli=this.jPanelParametrosReportesDetaNotaCreditoSoli;
		//final JScrollPane jScrollPanelDatosDetaNotaCreditoSoli=this.jScrollPanelDatosDetaNotaCreditoSoli;
		final JTable jTableDatosDetaNotaCreditoSoli=this.jTableDatosDetaNotaCreditoSoli;		
		final JPanel jPanelPaginacionDetaNotaCreditoSoli=this.jPanelPaginacionDetaNotaCreditoSoli;
		//final JScrollPane jScrollPanelDatosEdicionDetaNotaCreditoSoli=this.jScrollPanelDatosEdicionDetaNotaCreditoSoli;
		final JPanel jPanelAccionesDetaNotaCreditoSoli=this.jPanelAccionesDetaNotaCreditoSoli;
		
		JPanel jPanelCamposAuxiliarDetaNotaCreditoSoli=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarDetaNotaCreditoSoli=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
			jPanelCamposAuxiliarDetaNotaCreditoSoli=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelCamposDetaNotaCreditoSoli;
			jPanelAccionesFormularioAuxiliarDetaNotaCreditoSoli=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelAccionesFormularioDetaNotaCreditoSoli;
		}
		
		final JPanel jPanelCamposDetaNotaCreditoSoli=jPanelCamposAuxiliarDetaNotaCreditoSoli;
		final JPanel jPanelAccionesFormularioDetaNotaCreditoSoli=jPanelAccionesFormularioAuxiliarDetaNotaCreditoSoli;
		
		
		final JMenuBar jmenuBarDetaNotaCreditoSoli=this.jmenuBarDetaNotaCreditoSoli;
		final JToolBar jTtoolBarDetaNotaCreditoSoli=this.jTtoolBarDetaNotaCreditoSoli;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarDetaNotaCreditoSoli=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarDetaNotaCreditoSoli=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
			jmenuBarDetalleAuxiliarDetaNotaCreditoSoli=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jmenuBarDetalleDetaNotaCreditoSoli;
			jTtoolBarDetalleAuxiliarDetaNotaCreditoSoli=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTtoolBarDetalleDetaNotaCreditoSoli;
		}
		
		final JMenuBar jmenuBarDetalleDetaNotaCreditoSoli=jmenuBarDetalleAuxiliarDetaNotaCreditoSoli;
		final JToolBar jTtoolBarDetalleDetaNotaCreditoSoli=jTtoolBarDetalleAuxiliarDetaNotaCreditoSoli;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetaNotaCreditoSoli;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetaNotaCreditoSoli;
			processRunnable.jTableDatos=jTableDatosDetaNotaCreditoSoli;
			processRunnable.jPanelCampos=jPanelCamposDetaNotaCreditoSoli;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetaNotaCreditoSoli;
			processRunnable.jPanelAcciones=jPanelAccionesDetaNotaCreditoSoli;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetaNotaCreditoSoli;
			
			
			processRunnable.jmenuBar=jmenuBarDetaNotaCreditoSoli;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetaNotaCreditoSoli;
			processRunnable.jTtoolBar=jTtoolBarDetaNotaCreditoSoli;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetaNotaCreditoSoli;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetaNotaCreditoSoli ,jPanelParametrosReportesDetaNotaCreditoSoli,jTableDatosDetaNotaCreditoSoli, /*jScrollPanelDatosDetaNotaCreditoSoli,*/jPanelCamposDetaNotaCreditoSoli,jPanelPaginacionDetaNotaCreditoSoli, /*jScrollPanelDatosEdicionDetaNotaCreditoSoli,*/ jPanelAccionesDetaNotaCreditoSoli,jPanelAccionesFormularioDetaNotaCreditoSoli,jmenuBarDetaNotaCreditoSoli,jmenuBarDetalleDetaNotaCreditoSoli,jTtoolBarDetaNotaCreditoSoli,jTtoolBarDetalleDetaNotaCreditoSoli);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasDetaNotaCreditoSoli ,jPanelParametrosReportesDetaNotaCreditoSoli, jScrollPanelDatosDetaNotaCreditoSoli,jPanelPaginacionDetaNotaCreditoSoli, jScrollPanelDatosEdicionDetaNotaCreditoSoli, jPanelAccionesDetaNotaCreditoSoli,jPanelAccionesFormularioDetaNotaCreditoSoli,jmenuBarDetaNotaCreditoSoli,jmenuBarDetalleDetaNotaCreditoSoli,jTtoolBarDetaNotaCreditoSoli,jTtoolBarDetalleDetaNotaCreditoSoli);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessDetaNotaCreditoSoli() {// throws Exception 
		this.finishProcessDetaNotaCreditoSoli(true);
	}
	
	public void finishProcessDetaNotaCreditoSoli(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasDetaNotaCreditoSoli ,this.jPanelParametrosReportesDetaNotaCreditoSoli, this.jScrollPanelDatosDetaNotaCreditoSoli,this.jPanelPaginacionDetaNotaCreditoSoli, this.jScrollPanelDatosEdicionDetaNotaCreditoSoli, this.jPanelAccionesDetaNotaCreditoSoli,this.jPanelAccionesFormularioDetaNotaCreditoSoli,this.jmenuBarDetaNotaCreditoSoli,this.jmenuBarDetalleDetaNotaCreditoSoli,this.jTtoolBarDetaNotaCreditoSoli,this.jTtoolBarDetalleDetaNotaCreditoSoli);		
		
		final JTabbedPane jTabbedPaneBusquedasDetaNotaCreditoSoli=this.jTabbedPaneBusquedasDetaNotaCreditoSoli; 
		
		final JPanel jPanelParametrosReportesDetaNotaCreditoSoli=this.jPanelParametrosReportesDetaNotaCreditoSoli;
		//final JScrollPane jScrollPanelDatosDetaNotaCreditoSoli=this.jScrollPanelDatosDetaNotaCreditoSoli;
		final JTable jTableDatosDetaNotaCreditoSoli=this.jTableDatosDetaNotaCreditoSoli;		
		final JPanel jPanelPaginacionDetaNotaCreditoSoli=this.jPanelPaginacionDetaNotaCreditoSoli;
		//final JScrollPane jScrollPanelDatosEdicionDetaNotaCreditoSoli=this.jScrollPanelDatosEdicionDetaNotaCreditoSoli;
		final JPanel jPanelAccionesDetaNotaCreditoSoli=this.jPanelAccionesDetaNotaCreditoSoli;
		
		JPanel jPanelCamposAuxiliarDetaNotaCreditoSoli=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarDetaNotaCreditoSoli=new JPanel();
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
			jPanelCamposAuxiliarDetaNotaCreditoSoli=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelCamposDetaNotaCreditoSoli;
			jPanelAccionesFormularioAuxiliarDetaNotaCreditoSoli=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelAccionesFormularioDetaNotaCreditoSoli;
		}
		
		final JPanel jPanelCamposDetaNotaCreditoSoli=jPanelCamposAuxiliarDetaNotaCreditoSoli;
		final JPanel jPanelAccionesFormularioDetaNotaCreditoSoli=jPanelAccionesFormularioAuxiliarDetaNotaCreditoSoli;
		
		
		final JMenuBar jmenuBarDetaNotaCreditoSoli=this.jmenuBarDetaNotaCreditoSoli;		
		final JToolBar jTtoolBarDetaNotaCreditoSoli=this.jTtoolBarDetaNotaCreditoSoli;
				
		JMenuBar jmenuBarDetalleAuxiliarDetaNotaCreditoSoli=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarDetaNotaCreditoSoli=new JToolBar();
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
			jmenuBarDetalleAuxiliarDetaNotaCreditoSoli=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jmenuBarDetalleDetaNotaCreditoSoli;
			jTtoolBarDetalleAuxiliarDetaNotaCreditoSoli=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTtoolBarDetalleDetaNotaCreditoSoli;		
		}
		
		final JMenuBar jmenuBarDetalleDetaNotaCreditoSoli=jmenuBarDetalleAuxiliarDetaNotaCreditoSoli;
		final JToolBar jTtoolBarDetalleDetaNotaCreditoSoli=jTtoolBarDetalleAuxiliarDetaNotaCreditoSoli;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasDetaNotaCreditoSoli;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesDetaNotaCreditoSoli;
			processRunnable.jTableDatos=jTableDatosDetaNotaCreditoSoli;
			processRunnable.jPanelCampos=jPanelCamposDetaNotaCreditoSoli;
			processRunnable.jPanelPaginacion=jPanelPaginacionDetaNotaCreditoSoli;
			processRunnable.jPanelAcciones=jPanelAccionesDetaNotaCreditoSoli;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioDetaNotaCreditoSoli;
			
			
			processRunnable.jmenuBar=jmenuBarDetaNotaCreditoSoli;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleDetaNotaCreditoSoli;
			processRunnable.jTtoolBar=jTtoolBarDetaNotaCreditoSoli;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleDetaNotaCreditoSoli;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasDetaNotaCreditoSoli ,jPanelParametrosReportesDetaNotaCreditoSoli, jTableDatosDetaNotaCreditoSoli,/*jScrollPanelDatosDetaNotaCreditoSoli,*/jPanelCamposDetaNotaCreditoSoli,jPanelPaginacionDetaNotaCreditoSoli, /*jScrollPanelDatosEdicionDetaNotaCreditoSoli,*/ jPanelAccionesDetaNotaCreditoSoli,jPanelAccionesFormularioDetaNotaCreditoSoli,jmenuBarDetaNotaCreditoSoli,jmenuBarDetalleDetaNotaCreditoSoli,jTtoolBarDetaNotaCreditoSoli,jTtoolBarDetalleDetaNotaCreditoSoli));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesDetaNotaCreditoSoli(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarDetaNotaCreditoSoli(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuDetaNotaCreditoSoli(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarDetaNotaCreditoSoli(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarDetaNotaCreditoSoli,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleDetaNotaCreditoSoli,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuDetaNotaCreditoSoli(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarDetaNotaCreditoSoli,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleDetaNotaCreditoSoli,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.detanotacreditosoliConstantesFunciones.getsFinalQueryDetaNotaCreditoSoli();
		String  finalQueryPaginacionTodos=this.detanotacreditosoliConstantesFunciones.getsFinalQueryDetaNotaCreditoSoli();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=DetaNotaCreditoSoliConstantesFunciones.getArrayColumnasGlobalesNoDetaNotaCreditoSoli(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=DetaNotaCreditoSoliConstantesFunciones.getArrayColumnasGlobalesDetaNotaCreditoSoli(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,DetaNotaCreditoSoliConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.detanotacreditosolisEliminados= new ArrayList<DetaNotaCreditoSoli>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessDetaNotaCreditoSoli();
		
				///*DetaNotaCreditoSoliSessionBean*/this.detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
			
			if(this.detanotacreditosoliSessionBean==null) {
				this.detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=DetaNotaCreditoSoliConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=DetaNotaCreditoSoliConstantesFunciones.getClassesForeignKeysOfDetaNotaCreditoSoli(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/detanotacreditosoli."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			detanotacreditosolisAux= new ArrayList<DetaNotaCreditoSoli>();
			
				
			detanotacreditosoliLogic.setDatosCliente(this.datosCliente);
			detanotacreditosoliLogic.setDatosDeep(this.datosDeep);
			detanotacreditosoliLogic.setIsConDeep(true);
			
			
			detanotacreditosoliLogic.getDetaNotaCreditoSoliDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					detanotacreditosoliLogic.getTodosDetaNotaCreditoSolis(finalQueryGlobal,pagination);
					
					//detanotacreditosoliLogic.getTodosDetaNotaCreditoSolisWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(detanotacreditosoliLogic.getDetaNotaCreditoSolis()==null|| detanotacreditosoliLogic.getDetaNotaCreditoSolis().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detanotacreditosolisAux= new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolisAux.addAll(detanotacreditosoliLogic.getDetaNotaCreditoSolis());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolisAux= new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolisAux.addAll(detanotacreditosolis);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detanotacreditosoliLogic.getTodosDetaNotaCreditoSolis(finalQueryGlobal+"",this.pagination);												
							
							//detanotacreditosoliLogic.getTodosDetaNotaCreditoSolisWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteDetaNotaCreditoSolis("Todos",detanotacreditosoliLogic.getDetaNotaCreditoSolis() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							detanotacreditosoliLogic.setDetaNotaCreditoSolis(new ArrayList<DetaNotaCreditoSoli>());					
							detanotacreditosoliLogic.getDetaNotaCreditoSolis().addAll(detanotacreditosolisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolis=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolis.addAll(detanotacreditosolisAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idDetaNotaCreditoSoli=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idDetaNotaCreditoSoli=this.idActual;
				
				} else if(this.idDetaNotaCreditoSoliActual!=null && this.idDetaNotaCreditoSoliActual!=0L) {
					idDetaNotaCreditoSoli=idDetaNotaCreditoSoliActual;
				}
				
					
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndicePorId(idDetaNotaCreditoSoli);
				
				this.detanotacreditosolis=new ArrayList<DetaNotaCreditoSoli>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					detanotacreditosoliLogic.getEntity(idDetaNotaCreditoSoli);
					
					//detanotacreditosoliLogic.getEntityWithConnection(idDetaNotaCreditoSoli);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditosoliLogic.setDetaNotaCreditoSolis(new ArrayList<DetaNotaCreditoSoli>());
					detanotacreditosoliLogic.getDetaNotaCreditoSolis().add(detanotacreditosoliLogic.getDetaNotaCreditoSoli());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacreditosolis=new ArrayList<DetaNotaCreditoSoli>();
					this.detanotacreditosolis.add(detanotacreditosoli);
				}
				
				if(detanotacreditosoliLogic.getDetaNotaCreditoSoli()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdBodega")) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditosoliLogic.getDetaNotaCreditoSolis()==null||detanotacreditosoliLogic.getDetaNotaCreditoSolis().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditosolis==null|| detanotacreditosolis.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
						detanotacreditosolisAux.addAll(detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolisAux.addAll(detanotacreditosolis);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdBodega(finalQueryGlobal,pagination,id_bodegaFK_IdBodega);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdBodega(id_bodegaFK_IdBodega);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditoSolis("FK_IdBodega",detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditoSolis("FK_IdBodega",detanotacreditosolis);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosoliLogic.setDetaNotaCreditoSolis(new ArrayList<DetaNotaCreditoSoli>());
						detanotacreditosoliLogic.getDetaNotaCreditoSolis().addAll(detanotacreditosolisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolis=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolis.addAll(detanotacreditosolisAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCentroCosto")) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditosoliLogic.getDetaNotaCreditoSolis()==null||detanotacreditosoliLogic.getDetaNotaCreditoSolis().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditosolis==null|| detanotacreditosolis.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
						detanotacreditosolisAux.addAll(detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolisAux.addAll(detanotacreditosolis);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditoSolis("FK_IdCentroCosto",detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditoSolis("FK_IdCentroCosto",detanotacreditosolis);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosoliLogic.setDetaNotaCreditoSolis(new ArrayList<DetaNotaCreditoSoli>());
						detanotacreditosoliLogic.getDetaNotaCreditoSolis().addAll(detanotacreditosolisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolis=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolis.addAll(detanotacreditosolisAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditosoliLogic.getDetaNotaCreditoSolis()==null||detanotacreditosoliLogic.getDetaNotaCreditoSolis().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditosolis==null|| detanotacreditosolis.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
						detanotacreditosolisAux.addAll(detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolisAux.addAll(detanotacreditosolis);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditoSolis("FK_IdEjercicio",detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditoSolis("FK_IdEjercicio",detanotacreditosolis);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosoliLogic.setDetaNotaCreditoSolis(new ArrayList<DetaNotaCreditoSoli>());
						detanotacreditosoliLogic.getDetaNotaCreditoSolis().addAll(detanotacreditosolisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolis=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolis.addAll(detanotacreditosolisAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpaque")) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdEmpaque(id_empaqueFK_IdEmpaque);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdEmpaque(finalQueryGlobal,pagination,id_empaqueFK_IdEmpaque);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdEmpaque(id_empaqueFK_IdEmpaque);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdEmpaque(id_empaqueFK_IdEmpaque);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditosoliLogic.getDetaNotaCreditoSolis()==null||detanotacreditosoliLogic.getDetaNotaCreditoSolis().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditosolis==null|| detanotacreditosolis.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
						detanotacreditosolisAux.addAll(detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolisAux.addAll(detanotacreditosolis);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdEmpaque(finalQueryGlobal,pagination,id_empaqueFK_IdEmpaque);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdEmpaque(id_empaqueFK_IdEmpaque);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdEmpaque(id_empaqueFK_IdEmpaque);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditoSolis("FK_IdEmpaque",detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditoSolis("FK_IdEmpaque",detanotacreditosolis);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosoliLogic.setDetaNotaCreditoSolis(new ArrayList<DetaNotaCreditoSoli>());
						detanotacreditosoliLogic.getDetaNotaCreditoSolis().addAll(detanotacreditosolisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolis=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolis.addAll(detanotacreditosolisAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditosoliLogic.getDetaNotaCreditoSolis()==null||detanotacreditosoliLogic.getDetaNotaCreditoSolis().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditosolis==null|| detanotacreditosolis.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
						detanotacreditosolisAux.addAll(detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolisAux.addAll(detanotacreditosolis);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditoSolis("FK_IdEmpresa",detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditoSolis("FK_IdEmpresa",detanotacreditosolis);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosoliLogic.setDetaNotaCreditoSolis(new ArrayList<DetaNotaCreditoSoli>());
						detanotacreditosoliLogic.getDetaNotaCreditoSolis().addAll(detanotacreditosolisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolis=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolis.addAll(detanotacreditosolisAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdNotaCreditoSoli")) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdNotaCreditoSoli(id_nota_credito_soliFK_IdNotaCreditoSoli);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdNotaCreditoSoli(finalQueryGlobal,pagination,id_nota_credito_soliFK_IdNotaCreditoSoli);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdNotaCreditoSoli(id_nota_credito_soliFK_IdNotaCreditoSoli);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdNotaCreditoSoli(id_nota_credito_soliFK_IdNotaCreditoSoli);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditosoliLogic.getDetaNotaCreditoSolis()==null||detanotacreditosoliLogic.getDetaNotaCreditoSolis().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditosolis==null|| detanotacreditosolis.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
						detanotacreditosolisAux.addAll(detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolisAux.addAll(detanotacreditosolis);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdNotaCreditoSoli(finalQueryGlobal,pagination,id_nota_credito_soliFK_IdNotaCreditoSoli);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdNotaCreditoSoli(id_nota_credito_soliFK_IdNotaCreditoSoli);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdNotaCreditoSoli(id_nota_credito_soliFK_IdNotaCreditoSoli);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditoSolis("FK_IdNotaCreditoSoli",detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditoSolis("FK_IdNotaCreditoSoli",detanotacreditosolis);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosoliLogic.setDetaNotaCreditoSolis(new ArrayList<DetaNotaCreditoSoli>());
						detanotacreditosoliLogic.getDetaNotaCreditoSolis().addAll(detanotacreditosolisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolis=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolis.addAll(detanotacreditosolisAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditosoliLogic.getDetaNotaCreditoSolis()==null||detanotacreditosoliLogic.getDetaNotaCreditoSolis().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditosolis==null|| detanotacreditosolis.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
						detanotacreditosolisAux.addAll(detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolisAux.addAll(detanotacreditosolis);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditoSolis("FK_IdPeriodo",detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditoSolis("FK_IdPeriodo",detanotacreditosolis);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosoliLogic.setDetaNotaCreditoSolis(new ArrayList<DetaNotaCreditoSoli>());
						detanotacreditosoliLogic.getDetaNotaCreditoSolis().addAll(detanotacreditosolisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolis=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolis.addAll(detanotacreditosolisAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdProducto")) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdProducto(finalQueryGlobal,pagination,id_productoFK_IdProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditosoliLogic.getDetaNotaCreditoSolis()==null||detanotacreditosoliLogic.getDetaNotaCreditoSolis().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditosolis==null|| detanotacreditosolis.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
						detanotacreditosolisAux.addAll(detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolisAux.addAll(detanotacreditosolis);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdProducto(finalQueryGlobal,pagination,id_productoFK_IdProducto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdProducto(id_productoFK_IdProducto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditoSolis("FK_IdProducto",detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditoSolis("FK_IdProducto",detanotacreditosolis);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosoliLogic.setDetaNotaCreditoSolis(new ArrayList<DetaNotaCreditoSoli>());
						detanotacreditosoliLogic.getDetaNotaCreditoSolis().addAll(detanotacreditosolisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolis=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolis.addAll(detanotacreditosolisAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditosoliLogic.getDetaNotaCreditoSolis()==null||detanotacreditosoliLogic.getDetaNotaCreditoSolis().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditosolis==null|| detanotacreditosolis.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
						detanotacreditosolisAux.addAll(detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolisAux.addAll(detanotacreditosolis);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditoSolis("FK_IdSucursal",detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditoSolis("FK_IdSucursal",detanotacreditosolis);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosoliLogic.setDetaNotaCreditoSolis(new ArrayList<DetaNotaCreditoSoli>());
						detanotacreditosoliLogic.getDetaNotaCreditoSolis().addAll(detanotacreditosolisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolis=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolis.addAll(detanotacreditosolisAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoDevolucionEmpresa")) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdTipoDevolucionEmpresa(id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdTipoDevolucionEmpresa(finalQueryGlobal,pagination,id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdTipoDevolucionEmpresa(id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdTipoDevolucionEmpresa(id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditosoliLogic.getDetaNotaCreditoSolis()==null||detanotacreditosoliLogic.getDetaNotaCreditoSolis().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditosolis==null|| detanotacreditosolis.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
						detanotacreditosolisAux.addAll(detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolisAux.addAll(detanotacreditosolis);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdTipoDevolucionEmpresa(finalQueryGlobal,pagination,id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdTipoDevolucionEmpresa(id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdTipoDevolucionEmpresa(id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditoSolis("FK_IdTipoDevolucionEmpresa",detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditoSolis("FK_IdTipoDevolucionEmpresa",detanotacreditosolis);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosoliLogic.setDetaNotaCreditoSolis(new ArrayList<DetaNotaCreditoSoli>());
						detanotacreditosoliLogic.getDetaNotaCreditoSolis().addAll(detanotacreditosolisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolis=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolis.addAll(detanotacreditosolisAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUnidad")) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdUnidad(finalQueryGlobal,pagination,id_unidadFK_IdUnidad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=detanotacreditosoliLogic.getDetaNotaCreditoSolis()==null||detanotacreditosoliLogic.getDetaNotaCreditoSolis().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=detanotacreditosolis==null|| detanotacreditosolis.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
						detanotacreditosolisAux.addAll(detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolisAux=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolisAux.addAll(detanotacreditosolis);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdUnidad(finalQueryGlobal,pagination,id_unidadFK_IdUnidad);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=DetaNotaCreditoSoliConstantesFunciones.getDetalleIndiceFK_IdUnidad(id_unidadFK_IdUnidad);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteDetaNotaCreditoSolis("FK_IdUnidad",detanotacreditosoliLogic.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteDetaNotaCreditoSolis("FK_IdUnidad",detanotacreditosolis);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosoliLogic.setDetaNotaCreditoSolis(new ArrayList<DetaNotaCreditoSoli>());
						detanotacreditosoliLogic.getDetaNotaCreditoSolis().addAll(detanotacreditosolisAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosolis=new ArrayList<DetaNotaCreditoSoli>();
							detanotacreditosolis.addAll(detanotacreditosolisAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesDetaNotaCreditoSoli();
		
		this.traerValoresTablaTotales();	
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrDatoGeneralTotales=DetaNotaCreditoSoliConstantesFunciones.getTotalesListaDetaNotaCreditoSoli(detanotacreditosoliLogic.getDetaNotaCreditoSolis());							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrDatoGeneralTotales=DetaNotaCreditoSoliConstantesFunciones.getTotalesListaDetaNotaCreditoSoli(this.detanotacreditosolis);
		}
		*/
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessDetaNotaCreditoSoli();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detanotacreditosoliLogic.getDetaNotaCreditoSolis().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detanotacreditosolis.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=detanotacreditosoliLogic.getDetaNotaCreditoSolis().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=detanotacreditosolis.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(DetaNotaCreditoSoli detanotacreditosoli) {
		Boolean permite=true;
		
		if(this.detanotacreditosoli.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrDatoGeneralTotales=DetaNotaCreditoSoliConstantesFunciones.getTotalesListaDetaNotaCreditoSoli(detanotacreditosoliLogic.getDetaNotaCreditoSolis());							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrDatoGeneralTotales=DetaNotaCreditoSoliConstantesFunciones.getTotalesListaDetaNotaCreditoSoli(this.detanotacreditosolis);
		}
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=DetaNotaCreditoSoliConstantesFunciones.getOrderByListaDetaNotaCreditoSoli();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=DetaNotaCreditoSoliConstantesFunciones.getOrderByListaDetaNotaCreditoSoli();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosoliLogic.getDetaNotaCreditoSolis()) {
				if(detanotacreditosoli.getsType().equals(Constantes2.S_TOTALES)) {
					detanotacreditosoliTotales=detanotacreditosoli;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetaNotaCreditoSoli detanotacreditosoli:this.detanotacreditosolis) {
				if(detanotacreditosoli.getsType().equals(Constantes2.S_TOTALES)) {
					detanotacreditosoliTotales=detanotacreditosoli;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.detanotacreditosoliAux=new DetaNotaCreditoSoli();
			this.detanotacreditosoliAux.setsType(Constantes2.S_TOTALES);
			this.detanotacreditosoliAux.setIsNew(false);
			this.detanotacreditosoliAux.setIsChanged(false);
			this.detanotacreditosoliAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				DetaNotaCreditoSoliConstantesFunciones.TotalizarValoresFilaDetaNotaCreditoSoli(this.detanotacreditosoliLogic.getDetaNotaCreditoSolis(),this.detanotacreditosoliAux);
				
				this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().add(this.detanotacreditosoliAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				DetaNotaCreditoSoliConstantesFunciones.TotalizarValoresFilaDetaNotaCreditoSoli(this.detanotacreditosolis,this.detanotacreditosoliAux);
				
				this.detanotacreditosolis.add(this.detanotacreditosoliAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		detanotacreditosoliTotales=new DetaNotaCreditoSoli();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().remove(detanotacreditosoliTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.detanotacreditosolis.remove(detanotacreditosoliTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		detanotacreditosoliTotales=new DetaNotaCreditoSoli();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosoliLogic.getDetaNotaCreditoSolis()) {
				if(detanotacreditosoli.getsType().equals(Constantes2.S_TOTALES)) {
					detanotacreditosoliTotales=detanotacreditosoli;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetaNotaCreditoSoliConstantesFunciones.TotalizarValoresFilaDetaNotaCreditoSoli(this.detanotacreditosoliLogic.getDetaNotaCreditoSolis(),detanotacreditosoliTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(DetaNotaCreditoSoli detanotacreditosoli:this.detanotacreditosolis) {
				if(detanotacreditosoli.getsType().equals(Constantes2.S_TOTALES)) {
					detanotacreditosoliTotales=detanotacreditosoli;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				DetaNotaCreditoSoliConstantesFunciones.TotalizarValoresFilaDetaNotaCreditoSoli(this.detanotacreditosolis,detanotacreditosoliTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getDetaNotaCreditoSolisFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditoSolisFK_IdBodega()throws Exception {
		try {
			sAccionBusqueda="FK_IdBodega";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditoSolisFK_IdCentroCosto()throws Exception {
		try {
			sAccionBusqueda="FK_IdCentroCosto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditoSolisFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditoSolisFK_IdEmpaque()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpaque";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditoSolisFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditoSolisFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditoSolisFK_IdNotaCreditoSoli()throws Exception {
		try {
			sAccionBusqueda="FK_IdNotaCreditoSoli";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditoSolisFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditoSolisFK_IdProducto()throws Exception {
		try {
			sAccionBusqueda="FK_IdProducto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditoSolisFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditoSolisFK_IdTipoDevolucionEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoDevolucionEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getDetaNotaCreditoSolisFK_IdUnidad()throws Exception {
		try {
			sAccionBusqueda="FK_IdUnidad";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getDetaNotaCreditoSolisFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditoSolisFK_IdBodega(String sFinalQuery,Long id_bodega)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdBodega(sFinalQuery,this.pagination,id_bodega);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditoSolisFK_IdCentroCosto(String sFinalQuery,Long id_centro_costo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdCentroCosto(sFinalQuery,this.pagination,id_centro_costo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditoSolisFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditoSolisFK_IdEmpaque(String sFinalQuery,Long id_empaque)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdEmpaque(sFinalQuery,this.pagination,id_empaque);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditoSolisFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditoSolisFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditoSolisFK_IdNotaCreditoSoli(String sFinalQuery,Long id_nota_credito_soli)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdNotaCreditoSoli(sFinalQuery,this.pagination,id_nota_credito_soli);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditoSolisFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditoSolisFK_IdProducto(String sFinalQuery,Long id_producto)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdProducto(sFinalQuery,this.pagination,id_producto);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditoSolisFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditoSolisFK_IdTipoDevolucionEmpresa(String sFinalQuery,Long id_tipo_devolucion_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdTipoDevolucionEmpresa(sFinalQuery,this.pagination,id_tipo_devolucion_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getDetaNotaCreditoSolisFK_IdUnidad(String sFinalQuery,Long id_unidad)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditosoliLogic.getDetaNotaCreditoSolisFK_IdUnidad(sFinalQuery,this.pagination,id_unidad);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosDetaNotaCreditoSoli() {
		this.isPermisoTodoDetaNotaCreditoSoli=false;
		this.isPermisoNuevoDetaNotaCreditoSoli=false;
		this.isPermisoActualizarDetaNotaCreditoSoli=false;
		this.isPermisoActualizarOriginalDetaNotaCreditoSoli=false;
		this.isPermisoEliminarDetaNotaCreditoSoli=false;
		this.isPermisoGuardarCambiosDetaNotaCreditoSoli=false;
		this.isPermisoConsultaDetaNotaCreditoSoli=false;
		this.isPermisoBusquedaDetaNotaCreditoSoli=false;
		this.isPermisoReporteDetaNotaCreditoSoli=false;		
		this.isPermisoOrdenDetaNotaCreditoSoli=false;		
		this.isPermisoPaginacionMedioDetaNotaCreditoSoli=false;		
		this.isPermisoPaginacionAltoDetaNotaCreditoSoli=false;
		this.isPermisoPaginacionTodoDetaNotaCreditoSoli=false;
		this.isPermisoCopiarDetaNotaCreditoSoli=false;		
		this.isPermisoVerFormDetaNotaCreditoSoli=false;		
		this.isPermisoDuplicarDetaNotaCreditoSoli=false;		
		this.isPermisoOrdenDetaNotaCreditoSoli=false;		
	}
	
	public void setPermisosUsuarioDetaNotaCreditoSoli(Boolean isPermiso) {
		this.isPermisoTodoDetaNotaCreditoSoli=isPermiso;
		this.isPermisoNuevoDetaNotaCreditoSoli=isPermiso;
		this.isPermisoActualizarDetaNotaCreditoSoli=isPermiso;
		this.isPermisoActualizarOriginalDetaNotaCreditoSoli=isPermiso;
		this.isPermisoEliminarDetaNotaCreditoSoli=isPermiso;
		this.isPermisoGuardarCambiosDetaNotaCreditoSoli=isPermiso;
		this.isPermisoConsultaDetaNotaCreditoSoli=isPermiso;
		this.isPermisoBusquedaDetaNotaCreditoSoli=isPermiso;
		this.isPermisoReporteDetaNotaCreditoSoli=isPermiso;
		this.isPermisoOrdenDetaNotaCreditoSoli=isPermiso;		
		this.isPermisoPaginacionMedioDetaNotaCreditoSoli=isPermiso;		
		this.isPermisoPaginacionAltoDetaNotaCreditoSoli=isPermiso;		
		this.isPermisoPaginacionTodoDetaNotaCreditoSoli=isPermiso;		
		this.isPermisoCopiarDetaNotaCreditoSoli=isPermiso;		
		this.isPermisoVerFormDetaNotaCreditoSoli=isPermiso;		
		this.isPermisoDuplicarDetaNotaCreditoSoli=isPermiso;
		this.isPermisoOrdenDetaNotaCreditoSoli=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioDetaNotaCreditoSoli(Boolean isPermiso) {
		//this.isPermisoTodoDetaNotaCreditoSoli=isPermiso;
		this.isPermisoNuevoDetaNotaCreditoSoli=isPermiso;
		this.isPermisoActualizarDetaNotaCreditoSoli=isPermiso;
		this.isPermisoActualizarOriginalDetaNotaCreditoSoli=isPermiso;
		this.isPermisoEliminarDetaNotaCreditoSoli=isPermiso;
		this.isPermisoGuardarCambiosDetaNotaCreditoSoli=isPermiso;
		//this.isPermisoConsultaDetaNotaCreditoSoli=isPermiso;
		//this.isPermisoBusquedaDetaNotaCreditoSoli=isPermiso;
		//this.isPermisoReporteDetaNotaCreditoSoli=isPermiso;
		//this.isPermisoOrdenDetaNotaCreditoSoli=isPermiso;		
		//this.isPermisoPaginacionMedioDetaNotaCreditoSoli=isPermiso;		
		//this.isPermisoPaginacionAltoDetaNotaCreditoSoli=isPermiso;		
		//this.isPermisoPaginacionTodoDetaNotaCreditoSoli=isPermiso;		
		//this.isPermisoCopiarDetaNotaCreditoSoli=isPermiso;		
		//this.isPermisoDuplicarDetaNotaCreditoSoli=isPermiso;
		//this.isPermisoOrdenDetaNotaCreditoSoli=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioDetaNotaCreditoSoliClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(DetaNotaCreditoSoliJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebDetaNotaCreditoSoli(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioDetaNotaCreditoSoliClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioDetaNotaCreditoSoliClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionDetaNotaCreditoSoliClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioDetaNotaCreditoSoliClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioDetaNotaCreditoSoli() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(DetaNotaCreditoSoliJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, DetaNotaCreditoSoliConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoDetaNotaCreditoSoli=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarDetaNotaCreditoSoli=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalDetaNotaCreditoSoli=this.isPermisoActualizarDetaNotaCreditoSoli;
			this.isPermisoEliminarDetaNotaCreditoSoli=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosDetaNotaCreditoSoli=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaDetaNotaCreditoSoli=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaDetaNotaCreditoSoli=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoDetaNotaCreditoSoli=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteDetaNotaCreditoSoli=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetaNotaCreditoSoli=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioDetaNotaCreditoSoli=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoDetaNotaCreditoSoli=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoDetaNotaCreditoSoli=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarDetaNotaCreditoSoli=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormDetaNotaCreditoSoli=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarDetaNotaCreditoSoli=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenDetaNotaCreditoSoli=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosDetaNotaCreditoSoli.setToolTipText(this.jTableDatosDetaNotaCreditoSoli.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioDetaNotaCreditoSoli(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioDetaNotaCreditoSoli(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(DetaNotaCreditoSoliJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(DetaNotaCreditoSoliJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioDetaNotaCreditoSoli() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyDetaNotaCreditoSoliListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
				this.notacreditosolisForeignKey=new ArrayList();
				this.bodegasForeignKey=new ArrayList();
				this.productosForeignKey=new ArrayList();
				this.unidadsForeignKey=new ArrayList();
				this.empaquesForeignKey=new ArrayList();
				this.tipodevolucionempresasForeignKey=new ArrayList();
				this.centrocostosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyDetaNotaCreditoSoliListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(DetaNotaCreditoSoliJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyDetaNotaCreditoSoliListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyNotaCreditoSoliListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUnidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpaqueListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoDevolucionEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyNotaCreditoSoliListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.notacreditosolisForeignKey==null||this.notacreditosolisForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=NotaCreditoSoliConstantesFunciones.getArrayColumnasGlobalesNotaCreditoSoli(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,NotaCreditoSoliConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=NotaCreditoSoliConstantesFunciones.SFINALQUERY;

				this.cargarCombosNotaCreditoSolisForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodegaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=BodegaConstantesFunciones.SFINALQUERY;

				this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProductoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.productosForeignKey==null||this.productosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ProductoConstantesFunciones.getArrayColumnasGlobalesProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProductoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ProductoConstantesFunciones.SFINALQUERY;

				this.cargarCombosProductosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidadListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if(cargarCombosDependencia && (this.unidadsForeignKey==null||this.unidadsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UnidadConstantesFunciones.SFINALQUERY;

				this.cargarCombosUnidadsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpaqueListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empaquesForeignKey==null||this.empaquesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpaqueConstantesFunciones.getArrayColumnasGlobalesEmpaque(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpaqueConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpaqueConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpaquesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDevolucionEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipodevolucionempresasForeignKey==null||this.tipodevolucionempresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoDevolucionEmpresaConstantesFunciones.getArrayColumnasGlobalesTipoDevolucionEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDevolucionEmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoDevolucionEmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoDevolucionEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCostoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CentroCostoConstantesFunciones.SFINALQUERY;

				this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyDetaNotaCreditoSoliListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			DetaNotaCreditoSoliParameterReturnGeneral detanotacreditosoliReturnGeneral=new DetaNotaCreditoSoliParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.detanotacreditosoliConstantesFunciones.cargarid_empresaDetaNotaCreditoSoli)
					 || (this.esRecargarFks && this.detanotacreditosoliConstantesFunciones.cargarid_empresaDetaNotaCreditoSoli)) {

					if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+detanotacreditosoliSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.detanotacreditosoliConstantesFunciones.cargarid_sucursalDetaNotaCreditoSoli)
					 || (this.esRecargarFks && this.detanotacreditosoliConstantesFunciones.cargarid_sucursalDetaNotaCreditoSoli)) {

					if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+detanotacreditosoliSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.detanotacreditosoliConstantesFunciones.cargarid_ejercicioDetaNotaCreditoSoli)
					 || (this.esRecargarFks && this.detanotacreditosoliConstantesFunciones.cargarid_ejercicioDetaNotaCreditoSoli)) {

					if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+detanotacreditosoliSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.detanotacreditosoliConstantesFunciones.cargarid_periodoDetaNotaCreditoSoli)
					 || (this.esRecargarFks && this.detanotacreditosoliConstantesFunciones.cargarid_periodoDetaNotaCreditoSoli)) {

					if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+detanotacreditosoliSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.detanotacreditosoliConstantesFunciones.cargarid_anioDetaNotaCreditoSoli)
					 || (this.esRecargarFks && this.detanotacreditosoliConstantesFunciones.cargarid_anioDetaNotaCreditoSoli)) {

					if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+detanotacreditosoliSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.detanotacreditosoliConstantesFunciones.cargarid_mesDetaNotaCreditoSoli)
					 || (this.esRecargarFks && this.detanotacreditosoliConstantesFunciones.cargarid_mesDetaNotaCreditoSoli)) {

					if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+detanotacreditosoliSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}


				String finalQueryGlobalNotaCreditoSoli="";

				if(((this.notacreditosolisForeignKey==null||this.notacreditosolisForeignKey.size()<=0) && this.detanotacreditosoliConstantesFunciones.cargarid_nota_credito_soliDetaNotaCreditoSoli)
					 || (this.esRecargarFks && this.detanotacreditosoliConstantesFunciones.cargarid_nota_credito_soliDetaNotaCreditoSoli)) {

					if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionNotaCreditoSoli()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=NotaCreditoSoliConstantesFunciones.getArrayColumnasGlobalesNotaCreditoSoli(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalNotaCreditoSoli=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,NotaCreditoSoliConstantesFunciones.TABLENAME);

						finalQueryGlobalNotaCreditoSoli=Funciones.GetFinalQueryAppend(finalQueryGlobalNotaCreditoSoli, "");
						finalQueryGlobalNotaCreditoSoli+=NotaCreditoSoliConstantesFunciones.SFINALQUERY;

						//this.cargarCombosNotaCreditoSolisForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalNotaCreditoSoli=" WHERE " + ConstantesSql.ID + "="+detanotacreditosoliSessionBean.getlidNotaCreditoSoliActual();
					}
				} else {
					finalQueryGlobalNotaCreditoSoli="NONE";
				}


				String finalQueryGlobalBodega="";

				if(((this.bodegasForeignKey==null||this.bodegasForeignKey.size()<=0) && this.detanotacreditosoliConstantesFunciones.cargarid_bodegaDetaNotaCreditoSoli)
					 || (this.esRecargarFks && this.detanotacreditosoliConstantesFunciones.cargarid_bodegaDetaNotaCreditoSoli)) {

					if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=BodegaConstantesFunciones.getArrayColumnasGlobalesBodega(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalBodega=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,BodegaConstantesFunciones.TABLENAME);

						finalQueryGlobalBodega=Funciones.GetFinalQueryAppend(finalQueryGlobalBodega, "");
						finalQueryGlobalBodega+=BodegaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosBodegasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalBodega=" WHERE " + ConstantesSql.ID + "="+detanotacreditosoliSessionBean.getlidBodegaActual();
					}
				} else {
					finalQueryGlobalBodega="NONE";
				}


				String finalQueryGlobalProducto="";

				if(cargarCombosDependencia && ((this.productosForeignKey==null||this.productosForeignKey.size()<=0) && this.detanotacreditosoliConstantesFunciones.cargarid_productoDetaNotaCreditoSoli)
					 || (this.esRecargarFks && this.detanotacreditosoliConstantesFunciones.cargarid_productoDetaNotaCreditoSoli)) {

					if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ProductoConstantesFunciones.getArrayColumnasGlobalesProducto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalProducto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ProductoConstantesFunciones.TABLENAME);

						finalQueryGlobalProducto=Funciones.GetFinalQueryAppend(finalQueryGlobalProducto, "");
						finalQueryGlobalProducto+=ProductoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosProductosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalProducto=" WHERE " + ConstantesSql.ID + "="+detanotacreditosoliSessionBean.getlidProductoActual();
					}
				} else {
					finalQueryGlobalProducto="NONE";
				}


				String finalQueryGlobalUnidad="";

				if(cargarCombosDependencia && ((this.unidadsForeignKey==null||this.unidadsForeignKey.size()<=0) && this.detanotacreditosoliConstantesFunciones.cargarid_unidadDetaNotaCreditoSoli)
					 || (this.esRecargarFks && this.detanotacreditosoliConstantesFunciones.cargarid_unidadDetaNotaCreditoSoli)) {

					if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UnidadConstantesFunciones.getArrayColumnasGlobalesUnidad(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUnidad=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UnidadConstantesFunciones.TABLENAME);

						finalQueryGlobalUnidad=Funciones.GetFinalQueryAppend(finalQueryGlobalUnidad, "");
						finalQueryGlobalUnidad+=UnidadConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUnidadsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUnidad=" WHERE " + ConstantesSql.ID + "="+detanotacreditosoliSessionBean.getlidUnidadActual();
					}
				} else {
					finalQueryGlobalUnidad="NONE";
				}


				String finalQueryGlobalEmpaque="";

				if(((this.empaquesForeignKey==null||this.empaquesForeignKey.size()<=0) && this.detanotacreditosoliConstantesFunciones.cargarid_empaqueDetaNotaCreditoSoli)
					 || (this.esRecargarFks && this.detanotacreditosoliConstantesFunciones.cargarid_empaqueDetaNotaCreditoSoli)) {

					if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionEmpaque()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpaqueConstantesFunciones.getArrayColumnasGlobalesEmpaque(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpaque=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpaqueConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpaque=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpaque, "");
						finalQueryGlobalEmpaque+=EmpaqueConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpaquesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpaque=" WHERE " + ConstantesSql.ID + "="+detanotacreditosoliSessionBean.getlidEmpaqueActual();
					}
				} else {
					finalQueryGlobalEmpaque="NONE";
				}


				String finalQueryGlobalTipoDevolucionEmpresa="";

				if(((this.tipodevolucionempresasForeignKey==null||this.tipodevolucionempresasForeignKey.size()<=0) && this.detanotacreditosoliConstantesFunciones.cargarid_tipo_devolucion_empresaDetaNotaCreditoSoli)
					 || (this.esRecargarFks && this.detanotacreditosoliConstantesFunciones.cargarid_tipo_devolucion_empresaDetaNotaCreditoSoli)) {

					if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionTipoDevolucionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoDevolucionEmpresaConstantesFunciones.getArrayColumnasGlobalesTipoDevolucionEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoDevolucionEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDevolucionEmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoDevolucionEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoDevolucionEmpresa, "");
						finalQueryGlobalTipoDevolucionEmpresa+=TipoDevolucionEmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoDevolucionEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoDevolucionEmpresa=" WHERE " + ConstantesSql.ID + "="+detanotacreditosoliSessionBean.getlidTipoDevolucionEmpresaActual();
					}
				} else {
					finalQueryGlobalTipoDevolucionEmpresa="NONE";
				}


				String finalQueryGlobalCentroCosto="";

				if(((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0) && this.detanotacreditosoliConstantesFunciones.cargarid_centro_costoDetaNotaCreditoSoli)
					 || (this.esRecargarFks && this.detanotacreditosoliConstantesFunciones.cargarid_centro_costoDetaNotaCreditoSoli)) {

					if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCentroCosto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

						finalQueryGlobalCentroCosto=Funciones.GetFinalQueryAppend(finalQueryGlobalCentroCosto, "");
						finalQueryGlobalCentroCosto+=CentroCostoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCentroCosto=" WHERE " + ConstantesSql.ID + "="+detanotacreditosoliSessionBean.getlidCentroCostoActual();
					}
				} else {
					finalQueryGlobalCentroCosto="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				detanotacreditosoliReturnGeneral=detanotacreditosoliLogic.cargarCombosLoteForeignKeyDetaNotaCreditoSoli(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalAnio,finalQueryGlobalMes,finalQueryGlobalNotaCreditoSoli,finalQueryGlobalBodega,finalQueryGlobalProducto,finalQueryGlobalUnidad,finalQueryGlobalEmpaque,finalQueryGlobalTipoDevolucionEmpresa,finalQueryGlobalCentroCosto);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=detanotacreditosoliReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=detanotacreditosoliReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=detanotacreditosoliReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=detanotacreditosoliReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=detanotacreditosoliReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=detanotacreditosoliReturnGeneral.getmessForeignKey();
			}

			if(!finalQueryGlobalNotaCreditoSoli.equals("NONE")) {
				this.notacreditosolisForeignKey=detanotacreditosoliReturnGeneral.getnotacreditosolisForeignKey();
			}

			if(!finalQueryGlobalBodega.equals("NONE")) {
				this.bodegasForeignKey=detanotacreditosoliReturnGeneral.getbodegasForeignKey();
			}

			if(!finalQueryGlobalProducto.equals("NONE")) {
				this.productosForeignKey=detanotacreditosoliReturnGeneral.getproductosForeignKey();
			}

			if(!finalQueryGlobalUnidad.equals("NONE")) {
				this.unidadsForeignKey=detanotacreditosoliReturnGeneral.getunidadsForeignKey();
			}

			if(!finalQueryGlobalEmpaque.equals("NONE")) {
				this.empaquesForeignKey=detanotacreditosoliReturnGeneral.getempaquesForeignKey();
			}

			if(!finalQueryGlobalTipoDevolucionEmpresa.equals("NONE")) {
				this.tipodevolucionempresasForeignKey=detanotacreditosoliReturnGeneral.gettipodevolucionempresasForeignKey();
			}

			if(!finalQueryGlobalCentroCosto.equals("NONE")) {
				this.centrocostosForeignKey=detanotacreditosoliReturnGeneral.getcentrocostosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyDetaNotaCreditoSoli()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
			this.addItemDefectoCombosForeignKeyNotaCreditoSoli();
			this.addItemDefectoCombosForeignKeyBodega();
			this.addItemDefectoCombosForeignKeyProducto();
			this.addItemDefectoCombosForeignKeyUnidad();
			this.addItemDefectoCombosForeignKeyEmpaque();
			this.addItemDefectoCombosForeignKeyTipoDevolucionEmpresa();
			this.addItemDefectoCombosForeignKeyCentroCosto();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.detanotacreditosoliSessionBean==null) {
				this.detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
			}

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyNotaCreditoSoli()throws Exception {
		try {

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionNotaCreditoSoli()) {
				NotaCreditoSoli notacreditosoli=new NotaCreditoSoli();
				NotaCreditoSoliConstantesFunciones.setNotaCreditoSoliDescripcion(notacreditosoli,Constantes.SMENSAJE_ESCOJA_OPCION);
				notacreditosoli.setId(null);

				if(!NotaCreditoSoliConstantesFunciones.ExisteEnLista(this.notacreditosolisForeignKey,notacreditosoli,true)) {

					this.notacreditosolisForeignKey.add(0,notacreditosoli);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyBodega()throws Exception {
		try {

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionBodega()) {
				Bodega bodega=new Bodega();
				BodegaConstantesFunciones.setBodegaDescripcion(bodega,Constantes.SMENSAJE_ESCOJA_OPCION);
				bodega.setId(null);

				if(!BodegaConstantesFunciones.ExisteEnLista(this.bodegasForeignKey,bodega,true)) {

					this.bodegasForeignKey.add(0,bodega);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyProducto()throws Exception {
		try {

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionProducto()) {
				Producto producto=new Producto();
				ProductoConstantesFunciones.setProductoDescripcion(producto,Constantes.SMENSAJE_ESCOJA_OPCION);
				producto.setId(null);

				if(!ProductoConstantesFunciones.ExisteEnLista(this.productosForeignKey,producto,true)) {

					this.productosForeignKey.add(0,producto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUnidad()throws Exception {
		try {

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionUnidad()) {
				Unidad unidad=new Unidad();
				UnidadConstantesFunciones.setUnidadDescripcion(unidad,Constantes.SMENSAJE_ESCOJA_OPCION);
				unidad.setId(null);

				if(!UnidadConstantesFunciones.ExisteEnLista(this.unidadsForeignKey,unidad,true)) {

					this.unidadsForeignKey.add(0,unidad);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpaque()throws Exception {
		try {

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionEmpaque()) {
				Empaque empaque=new Empaque();
				EmpaqueConstantesFunciones.setEmpaqueDescripcion(empaque,Constantes.SMENSAJE_ESCOJA_OPCION);
				empaque.setId(null);

				if(!EmpaqueConstantesFunciones.ExisteEnLista(this.empaquesForeignKey,empaque,true)) {

					this.empaquesForeignKey.add(0,empaque);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoDevolucionEmpresa()throws Exception {
		try {

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionTipoDevolucionEmpresa()) {
				TipoDevolucionEmpresa tipodevolucionempresa=new TipoDevolucionEmpresa();
				TipoDevolucionEmpresaConstantesFunciones.setTipoDevolucionEmpresaDescripcion(tipodevolucionempresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipodevolucionempresa.setId(null);

				if(!TipoDevolucionEmpresaConstantesFunciones.ExisteEnLista(this.tipodevolucionempresasForeignKey,tipodevolucionempresa,true)) {

					this.tipodevolucionempresasForeignKey.add(0,tipodevolucionempresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCentroCosto()throws Exception {
		try {

			if(!this.detanotacreditosoliSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				CentroCosto centrocosto=new CentroCosto();
				CentroCostoConstantesFunciones.setCentroCostoDescripcion(centrocosto,Constantes.SMENSAJE_ESCOJA_OPCION);
				centrocosto.setId(null);

				if(!CentroCostoConstantesFunciones.ExisteEnLista(this.centrocostosForeignKey,centrocosto,true)) {

					this.centrocostosForeignKey.add(0,centrocosto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyDetaNotaCreditoSoli()throws Exception {
		try {
			
			this.initActionsCombosForeignKeyBodega("Todos");
			this.initActionsCombosForeignKeyProducto("Todos");
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyDetaNotaCreditoSoli(String sFormularioTipoBusqueda)throws Exception {
		try {
			
			this.initActionsCombosForeignKeyBodega(sFormularioTipoBusqueda);
			this.initActionsCombosForeignKeyProducto(sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyBodega(JComboBox jComboBoxBodegaGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Bodega bodegaLocal=(Bodega)jComboBoxBodegaGenerico.getSelectedItem();

			if(bodegaLocal!=null  && bodegaLocal.getId()!=null  && bodegaLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_bodega="+bodegaLocal.getId();
			}
			//REDEFINE
			sFinalQueryCombo=InventarioSql.GetQueryProductoFromBodega(bodegaLocal);

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboProducto=sFinalQueryCombo;

			this.productosForeignKey=new ArrayList<Producto>();
			this.cargarCombosForeignKeyProducto(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void procesarActionsCombosForeignKeyProducto(JComboBox jComboBoxProductoGenerico,String sFormularioTipoBusqueda)throws Exception {
		try {
			String sFinalQueryCombo="";
			Producto productoLocal=(Producto)jComboBoxProductoGenerico.getSelectedItem();

			if(productoLocal!=null  && productoLocal.getId()!=null  && productoLocal.getId()>0) {
				sFinalQueryCombo="  WHERE  id_producto="+productoLocal.getId();
			}
			//REDEFINE
			sFinalQueryCombo=InventarioSql.GetQueryUnidadFromBodegaYProducto(productoLocal,this.detanotacreditosoli.getid_bodega());

			//COPIA PARA VENTANA BUSQUEDA
			this.sFinalQueryComboUnidad=sFinalQueryCombo;

			this.unidadsForeignKey=new ArrayList<Unidad>();
			this.cargarCombosForeignKeyUnidad(true,false,false,sFinalQueryCombo,sFormularioTipoBusqueda);
		} catch(Exception e) {
			throw e;
		}
	}
	
	



	public void initActionsCombosForeignKeyBodega(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli.addItemListener(new ComboBoxItemListener(this,"id_bodegaDetaNotaCreditoSoli"));
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli.addFocusListener(new ComboBoxFocusListener(this,"id_bodegaDetaNotaCreditoSoli"));
					}
				} else {
					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli.addActionListener(new ComboBoxActionListener(this,"id_bodegaDetaNotaCreditoSoli"));
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli.addFocusListener(new ComboBoxFocusListener(this,"id_bodegaDetaNotaCreditoSoli"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli"));

						this.jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli"));

					} else {
						this.jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli"));

						this.jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void initActionsCombosForeignKeyProducto(String sFormularioTipoBusqueda)throws Exception {
		try {
			if(sFormularioTipoBusqueda.equals("Todos") || sFormularioTipoBusqueda.equals("Formulario")) {
				if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli.addItemListener(new ComboBoxItemListener(this,"id_productoDetaNotaCreditoSoli"));
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli.addFocusListener(new ComboBoxFocusListener(this,"id_productoDetaNotaCreditoSoli"));
					}
				} else {
					if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli.addActionListener(new ComboBoxActionListener(this,"id_productoDetaNotaCreditoSoli"));
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli.addFocusListener(new ComboBoxFocusListener(this,"id_productoDetaNotaCreditoSoli"));
					}
				}
			}

			if(sFormularioTipoBusqueda.equals("Todos")) {

				if(!this.conCargarMinimo) {
				
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						this.jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli.addItemListener(new ComboBoxItemListener(this,"jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli"));

						this.jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli"));

					} else {
						this.jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli.addActionListener(new ComboBoxActionListener(this,"jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli"));

						this.jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli.addFocusListener(new ComboBoxFocusListener(this,"jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli"));

					}
			
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesGlobalesCombosForeignKeyDetaNotaCreditoSoli()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
			
			
				this.detanotacreditosoli.setfecha_emision(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyDetaNotaCreditoSoli();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyDetaNotaCreditoSoli(DetaNotaCreditoSoli detanotacreditosoli)throws Exception {	
		try {
			
			this.setActualNotaCreditoSoliForeignKey(detanotacreditosoli.getid_nota_credito_soli(),false,"Formulario");
			this.setActualBodegaForeignKey(detanotacreditosoli.getid_bodega(),false,"Formulario");
			this.setActualProductoForeignKey(detanotacreditosoli.getid_producto(),false,"Formulario");
			this.setActualUnidadForeignKey(detanotacreditosoli.getid_unidad(),false,"Formulario");
			this.setActualEmpaqueForeignKey(detanotacreditosoli.getid_empaque(),false,"Formulario");
			this.setActualTipoDevolucionEmpresaForeignKey(detanotacreditosoli.getid_tipo_devolucion_empresa(),false,"Formulario");
			this.setActualCentroCostoForeignKey(detanotacreditosoli.getid_centro_costo(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyDetaNotaCreditoSoli(DetaNotaCreditoSoli detanotacreditosoli,String sTipoEvento)throws Exception {	
		try {
			
			

				if(detanotacreditosoli.getProducto()!=null && !sTipoEvento.equals("id_productoDetaNotaCreditoSoli")) { //sTipoEvento Evita Bucle Infinito

					this.productosForeignKey=new ArrayList<Producto>();
					this.productosForeignKey.add(detanotacreditosoli.getProducto());

					this.addItemDefectoCombosForeignKeyProducto();
					this.cargarCombosFrameProductosForeignKey("Todos");
				}

				if(detanotacreditosoli.getCentroCosto()!=null && !sTipoEvento.equals("id_centro_costoDetaNotaCreditoSoli")) { //sTipoEvento Evita Bucle Infinito

					this.centrocostosForeignKey=new ArrayList<CentroCosto>();
					this.centrocostosForeignKey.add(detanotacreditosoli.getCentroCosto());

					this.addItemDefectoCombosForeignKeyCentroCosto();
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyDetaNotaCreditoSoli()throws Exception {	
		try {
			
			this.setActualNotaCreditoSoliForeignKey(this.detanotacreditosoliConstantesFunciones.getid_nota_credito_soli(),false,"Formulario");
			this.setActualBodegaForeignKey(this.detanotacreditosoliConstantesFunciones.getid_bodega(),false,"Formulario");
			this.setActualProductoForeignKey(this.detanotacreditosoliConstantesFunciones.getid_producto(),false,"Formulario");
			this.setActualUnidadForeignKey(this.detanotacreditosoliConstantesFunciones.getid_unidad(),false,"Formulario");
			this.setActualEmpaqueForeignKey(this.detanotacreditosoliConstantesFunciones.getid_empaque(),false,"Formulario");
			this.setActualTipoDevolucionEmpresaForeignKey(this.detanotacreditosoliConstantesFunciones.getid_tipo_devolucion_empresa(),false,"Formulario");
			this.setActualCentroCostoForeignKey(this.detanotacreditosoliConstantesFunciones.getid_centro_costo(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyDetaNotaCreditoSoli()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_ejercicioDetaNotaCreditoSoli.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_periodoDetaNotaCreditoSoli.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyDetaNotaCreditoSoli()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyDetaNotaCreditoSoli()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroDetaNotaCreditoSoli()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyDetaNotaCreditoSoli()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");
			this.cargarCombosFrameNotaCreditoSolisForeignKey("Todos");
			this.cargarCombosFrameBodegasForeignKey("Todos");
			this.cargarCombosFrameProductosForeignKey("Todos");
			this.cargarCombosFrameUnidadsForeignKey("Todos");
			this.cargarCombosFrameEmpaquesForeignKey("Todos");
			this.cargarCombosFrameTipoDevolucionEmpresasForeignKey("Todos");
			this.cargarCombosFrameCentroCostosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyDetaNotaCreditoSoli(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameNotaCreditoSolisForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpaquesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoDevolucionEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyDetaNotaCreditoSoli()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empresaDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empresaDetaNotaCreditoSoli.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empresaDetaNotaCreditoSoli.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_sucursalDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_sucursalDetaNotaCreditoSoli.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_sucursalDetaNotaCreditoSoli.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_ejercicioDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_ejercicioDetaNotaCreditoSoli.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_ejercicioDetaNotaCreditoSoli.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_periodoDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_periodoDetaNotaCreditoSoli.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_periodoDetaNotaCreditoSoli.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_anioDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_anioDetaNotaCreditoSoli.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_anioDetaNotaCreditoSoli.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_mesDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_mesDetaNotaCreditoSoli.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_mesDetaNotaCreditoSoli.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_nota_credito_soliDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_nota_credito_soliDetaNotaCreditoSoli.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_nota_credito_soliDetaNotaCreditoSoli.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_unidadDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_unidadDetaNotaCreditoSoli.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_unidadDetaNotaCreditoSoli.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empaqueDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empaqueDetaNotaCreditoSoli.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empaqueDetaNotaCreditoSoli.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoli.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoli.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_centro_costoDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_centro_costoDetaNotaCreditoSoli.getItemCount()>0) {
				this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_centro_costoDetaNotaCreditoSoli.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	















	public void recargarFormDetaNotaCreditoSoliBodega(JComboBox<?> jComboBoxGenericoBodega,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormDetaNotaCreditoSoliid_producto(jComboBoxGenericoBodega,sFormularioTipoBusqueda,"Bodega",false);
	}

	public void recargarFormDetaNotaCreditoSoliProducto(JComboBox<?> jComboBoxGenericoProducto,String sFormularioTipoBusqueda) throws Exception {

		this.recargarFormDetaNotaCreditoSoliid_unidad(jComboBoxGenericoProducto,sFormularioTipoBusqueda,"Producto",false);
	}








	
	



	public void recargarFormDetaNotaCreditoSoliid_producto(JComboBox<?> jComboBoxGenericoProducto,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Bodega")){
				this.setActualParaGuardarBodegaForeignKey(this.detanotacreditosoli,jComboBoxGenericoProducto);
			}

			if(this.detanotacreditosoli.getid_bodega()!=null && this.detanotacreditosoli.getid_bodega()!=0L) {
				sFinalQuery+="  WHERE  id_bodega="+this.detanotacreditosoli.getid_bodega();
			} else {
				sFinalQuery+="  WHERE  id_bodega=-1";
			}



			//BUCLE RECURSIVO
			this.setActualProductoForeignKey(this.detanotacreditosoli.getid_bodega(),true,sFormularioTipoBusqueda);

			this.cargarCombosProductosForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}



	public void recargarFormDetaNotaCreditoSoliid_unidad(JComboBox<?> jComboBoxGenericoUnidad,String sFormularioTipoBusqueda,String sTipoComboOrigen,Boolean conIrServidorAplicacion) throws Exception {
		try {

			String sFinalQuery="";

			if(sTipoComboOrigen.equals("Producto")){
				this.setActualParaGuardarProductoForeignKey(this.detanotacreditosoli,jComboBoxGenericoUnidad);
			}

			if(this.detanotacreditosoli.getid_producto()!=null && this.detanotacreditosoli.getid_producto()!=0L) {
				sFinalQuery+="  WHERE  id_producto="+this.detanotacreditosoli.getid_producto();
			} else {
				sFinalQuery+="  WHERE  id_producto=-1";
			}



			//BUCLE RECURSIVO
			this.setActualUnidadForeignKey(this.detanotacreditosoli.getid_producto(),true,sFormularioTipoBusqueda);

			this.cargarCombosUnidadsForeignKeyLista(sFinalQuery);

			this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public DetaNotaCreditoSoliBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public DetaNotaCreditoSoliBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public DetaNotaCreditoSoliBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean(); 
		this.detanotacreditosoliConstantesFunciones=new DetaNotaCreditoSoliConstantesFunciones(); 
		this.detanotacreditosoliBean=new DetaNotaCreditoSoli();//(this.detanotacreditosoliConstantesFunciones); 		
		this.detanotacreditosoliReturnGeneral=new DetaNotaCreditoSoliParameterReturnGeneral(); 
		
		this.detanotacreditosoliSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.detanotacreditosoliSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public DetaNotaCreditoSoliBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public DetaNotaCreditoSoliBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public DetaNotaCreditoSoliBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessDetaNotaCreditoSoli(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.detanotacreditosoliConstantesFunciones=new DetaNotaCreditoSoliConstantesFunciones(); 
			this.detanotacreditosoliBean=new DetaNotaCreditoSoli();//this.detanotacreditosoliConstantesFunciones); 			
			this.detanotacreditosoliReturnGeneral=new DetaNotaCreditoSoliParameterReturnGeneral(); 
		
			DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Detalle  Solicitud Nota Credit Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.detanotacreditosoli=new DetaNotaCreditoSoli();
			this.detanotacreditosolis = new ArrayList<DetaNotaCreditoSoli>();
			this.detanotacreditosolisAux = new ArrayList<DetaNotaCreditoSoli>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic=new DetaNotaCreditoSoliLogic();
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}
			
			//this.detanotacreditosoliSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.detanotacreditosoliSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormDetaNotaCreditoSoli);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli);	
					}
					
					if(this.jInternalFrameImportacionDetaNotaCreditoSoli!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetaNotaCreditoSoli);							
					}
					
				}
				
				if(this.jInternalFrameTotalesDetaNotaCreditoSoli!=null) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameTotalesDetaNotaCreditoSoli);
				}
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByDetaNotaCreditoSoli!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByDetaNotaCreditoSoli);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormDetaNotaCreditoSoli);
				this.jInternalFrameDetalleFormDetaNotaCreditoSoli.setVisible(false);
				this.jInternalFrameDetalleFormDetaNotaCreditoSoli.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli);
					this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.setVisible(false);
					this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionDetaNotaCreditoSoli!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionDetaNotaCreditoSoli);
					this.jInternalFrameImportacionDetaNotaCreditoSoli.setVisible(false);
					this.jInternalFrameImportacionDetaNotaCreditoSoli.setSelected(false);
				}
				
				
			}
			
			if(this.jInternalFrameTotalesDetaNotaCreditoSoli!=null) {
				//TOTALES
				this.jDesktopPane.add(this.jInternalFrameTotalesDetaNotaCreditoSoli);
				this.jInternalFrameTotalesDetaNotaCreditoSoli.setVisible(false);
				this.jInternalFrameTotalesDetaNotaCreditoSoli.setSelected(false);
			}
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByDetaNotaCreditoSoli!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByDetaNotaCreditoSoli);
					this.jInternalFrameOrderByDetaNotaCreditoSoli.setVisible(false);
					this.jInternalFrameOrderByDetaNotaCreditoSoli.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idDetaNotaCreditoSoliActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=DetaNotaCreditoSoliConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.detanotacreditosoliReturnGeneral=new DetaNotaCreditoSoliParameterReturnGeneral();
			
			this.detanotacreditosoliParameterGeneral=new DetaNotaCreditoSoliParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.detanotacreditosoliLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(DetaNotaCreditoSoliJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetaNotaCreditoSoliConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detanotacreditosoliSessionBean.getEsGuardarRelacionado(),this.detanotacreditosoliSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,DetaNotaCreditoSoliConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.detanotacreditosoliSessionBean.getEsGuardarRelacionado(),this.detanotacreditosoliSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaDuplicarDetaNotaCreditoSoli=true;
			this.isVisibilidadCeldaCopiarDetaNotaCreditoSoli=true;
			this.isVisibilidadCeldaVerFormDetaNotaCreditoSoli=true;
			this.isVisibilidadCeldaOrdenDetaNotaCreditoSoli=true;
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaModificarDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaActualizarDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaEliminarDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaCancelarDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdBodega=true;
			this.isVisibilidadFK_IdCentroCosto=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpaque=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdNotaCreditoSoli=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdProducto=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoDevolucionEmpresa=true;
			this.isVisibilidadFK_IdUnidad=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesDetaNotaCreditoSoli("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosDetaNotaCreditoSoli();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioDetaNotaCreditoSoli(false);
			
			this.setPermisosUsuarioDetaNotaCreditoSoli();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detanotacreditosoliSessionBean.getEsGuardarRelacionado() 
				|| (this.detanotacreditosoliSessionBean.getEsGuardarRelacionado() && this.detanotacreditosoliSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioDetaNotaCreditoSoliClasesRelacionadas();
			}
			
			if(this.detanotacreditosoliSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioDetaNotaCreditoSoliClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosDetaNotaCreditoSoli();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualDetaNotaCreditoSoli();
			}
			
			if(!this.isPermisoBusquedaDetaNotaCreditoSoli) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioDetaNotaCreditoSoli,this.isPermisoPaginacionMedioDetaNotaCreditoSoli,this.isPermisoPaginacionTodoDetaNotaCreditoSoli);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(DetaNotaCreditoSoliConstantesFunciones.getTiposSeleccionarDetaNotaCreditoSoli());
				
				this.tiposColumnasSelect=DetaNotaCreditoSoliConstantesFunciones.getTiposSeleccionarDetaNotaCreditoSoli(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioDetaNotaCreditoSoli();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioDetaNotaCreditoSoli(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioDetaNotaCreditoSoli(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesDetaNotaCreditoSoli() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			this.arrDatoGeneralTotales= new  ArrayList<DatoGeneral>();
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			this.notacreditosoliLogic=new NotaCreditoSoliLogic();
			this.bodegaLogic=new BodegaLogic();
			this.productoLogic=new ProductoLogic();
			this.unidadLogic=new UnidadLogic();
			this.empaqueLogic=new EmpaqueLogic();
			this.tipodevolucionempresaLogic=new TipoDevolucionEmpresaLogic();
			this.centrocostoLogic=new CentroCostoLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				detanotacreditosoliImplementable= (DetaNotaCreditoSoliImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetaNotaCreditoSoliConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				detanotacreditosoliImplementableHome= (DetaNotaCreditoSoliImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+DetaNotaCreditoSoliConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.detanotacreditosolis= new ArrayList<DetaNotaCreditoSoli>();
			this.detanotacreditosolisEliminados= new ArrayList<DetaNotaCreditoSoli>();
						
			this.isEsNuevoDetaNotaCreditoSoli=false;
			this.esParaAccionDesdeFormularioDetaNotaCreditoSoli=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idProductoActual=0L;
			this.idCentroCostoActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			this.notacreditosolisForeignKey=new ArrayList<NotaCreditoSoli>() ;
			this.bodegasForeignKey=new ArrayList<Bodega>() ;
			this.productosForeignKey=new ArrayList<Producto>() ;
			this.unidadsForeignKey=new ArrayList<Unidad>() ;
			this.empaquesForeignKey=new ArrayList<Empaque>() ;
			this.tipodevolucionempresasForeignKey=new ArrayList<TipoDevolucionEmpresa>() ;
			this.centrocostosForeignKey=new ArrayList<CentroCosto>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyDetaNotaCreditoSoli(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroDetaNotaCreditoSoli();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=DetaNotaCreditoSoliConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesDetaNotaCreditoSoli("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingDetaNotaCreditoSoli(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioDetaNotaCreditoSoli();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioDetaNotaCreditoSoli();
			}
			
			DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getTabCount(); i++) {
					this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessDetaNotaCreditoSoli(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga DetaNotaCreditoSoli: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectDetaNotaCreditoSoli() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesDetaNotaCreditoSoli")) {
				iIndex=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTabbedPaneRelacionesDetaNotaCreditoSoli.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTabbedPaneRelacionesDetaNotaCreditoSoli.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessDetaNotaCreditoSoli();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyDetaNotaCreditoSoli(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyDetaNotaCreditoSoli(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyDetaNotaCreditoSoli(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyDetaNotaCreditoSoliListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyDetaNotaCreditoSoli();
		
		this.cargarCombosFrameForeignKeyDetaNotaCreditoSoli();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyDetaNotaCreditoSoli();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyDetaNotaCreditoSoli();
		}
	}
	
	

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyNotaCreditoSoli(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyNotaCreditoSoliListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyNotaCreditoSoli();
				this.cargarCombosFrameNotaCreditoSolisForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaNotaCreditoSoli(this.notacreditosolisForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyBodega(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyBodegaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyBodega();
				this.cargarCombosFrameBodegasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyBodega("Todos");
				}

			this.recargarComboTablaBodega(this.bodegasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyProducto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyProductoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyProducto();
				this.cargarCombosFrameProductosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaProducto(this.productosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUnidad(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyUnidadListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyUnidad();
				this.cargarCombosFrameUnidadsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaUnidad(this.unidadsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpaque(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpaqueListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpaque();
				this.cargarCombosFrameEmpaquesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaEmpaque(this.empaquesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDevolucionEmpresa(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoDevolucionEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoDevolucionEmpresa();
				this.cargarCombosFrameTipoDevolucionEmpresasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaTipoDevolucionEmpresa(this.tipodevolucionempresasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCosto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
					this.initActionsCombosForeignKeyProducto("Todos");
				}

			this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoDetaNotaCreditoSoliActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.detanotacreditosoliSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
			
			
			if(jTableDatosDetaNotaCreditoSoli.getRowCount()>=1) {
				jTableDatosDetaNotaCreditoSoli.removeRowSelectionInterval(0, jTableDatosDetaNotaCreditoSoli.getRowCount()-1);						
			}
			
			this.isEsNuevoDetaNotaCreditoSoli=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoDetaNotaCreditoSoli(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesDetaNotaCreditoSoli(true);			
			//this.detanotacreditosoli=new DetaNotaCreditoSoli();
			//this.detanotacreditosoli.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetaNotaCreditoSoli(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetaNotaCreditoSoli() ;
			
			if(DetaNotaCreditoSoliJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetaNotaCreditoSoli(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.detanotacreditosoli);	
			this.actualizarInformacion("INFO_PADRE",false,this.detanotacreditosoli);				
			
			DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
			
			if(this.detanotacreditosoliSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar DetaNotaCreditoSoli: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarDetaNotaCreditoSoliActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<DetaNotaCreditoSoli> detanotacreditosolisSeleccionados=new ArrayList<DetaNotaCreditoSoli>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosDetaNotaCreditoSoli.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosDetaNotaCreditoSoli.getSelectedRows().length;			
			}
			
			detanotacreditosolisSeleccionados=this.getDetaNotaCreditoSolisSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoDetaNotaCreditoSoli--;			
				//DetaNotaCreditoSoli detanotacreditosoliAux= new DetaNotaCreditoSoli();			
				//detanotacreditosoliAux.setId(this.iIdNuevoDetaNotaCreditoSoli);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//DetaNotaCreditoSoli detanotacreditosoliOrigen=new DetaNotaCreditoSoli();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(DetaNotaCreditoSoli detanotacreditosoliOrigen : detanotacreditosolisSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							detanotacreditosoliOrigen =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							detanotacreditosoliOrigen =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaDetaNotaCreditoSoli();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.detanotacreditosoli.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosDetaNotaCreditoSoli(detanotacreditosoliOrigen,this.detanotacreditosoli,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().add(this.detanotacreditosoliAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detanotacreditosolis.add(this.detanotacreditosoliAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaDetaNotaCreditoSoli(false);
				
				this.jTableDatosDetaNotaCreditoSoli.setRowSelectionInterval(this.getIndiceNuevoDetaNotaCreditoSoli(), this.getIndiceNuevoDetaNotaCreditoSoli());
				
				int iLastRow =  this.jTableDatosDetaNotaCreditoSoli.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetaNotaCreditoSoli.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetaNotaCreditoSoli.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetaNotaCreditoSoli(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<DetaNotaCreditoSoli> detanotacreditosolisSeleccionados=new ArrayList<DetaNotaCreditoSoli>();									
		
			DetaNotaCreditoSoli detanotacreditosoliOrigen=new DetaNotaCreditoSoli();
			DetaNotaCreditoSoli detanotacreditosoliDestino=new DetaNotaCreditoSoli();
				
			detanotacreditosolisSeleccionados=this.getDetaNotaCreditoSolisSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosDetaNotaCreditoSoli.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || detanotacreditosolisSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosDetaNotaCreditoSoli.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosoliOrigen =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detanotacreditosoliOrigen =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						detanotacreditosoliDestino =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						detanotacreditosoliDestino =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				detanotacreditosoliOrigen =detanotacreditosolisSeleccionados.get(0);
				detanotacreditosoliDestino =detanotacreditosolisSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosDetaNotaCreditoSoli(detanotacreditosoliOrigen,detanotacreditosoliDestino,true,false);
				
				detanotacreditosoliDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(detanotacreditosoliDestino,detanotacreditosoliLogic.getDetaNotaCreditoSolis());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(detanotacreditosoliDestino,detanotacreditosolis);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaDetaNotaCreditoSoli(false);
				
				//this.jTableDatosDetaNotaCreditoSoli.setRowSelectionInterval(this.getIndiceNuevoDetaNotaCreditoSoli(), this.getIndiceNuevoDetaNotaCreditoSoli());
				
				int iLastRow =  this.jTableDatosDetaNotaCreditoSoli.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosDetaNotaCreditoSoli.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosDetaNotaCreditoSoli.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaDetaNotaCreditoSoli(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesDetaNotaCreditoSoli.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesDetaNotaCreditoSoli.setVisible(!isVisible);
			this.jPanelPaginacionDetaNotaCreditoSoli.setVisible(!isVisible);
			this.jPanelAccionesDetaNotaCreditoSoli.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameDetaNotaCreditoSoli();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoDetaNotaCreditoSoli();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionDetaNotaCreditoSoli();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonAbrirTotalesDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.abrirInicializarFrameTotalesDetaNotaCreditoSoli();
			
			this.abrirFrameTotalesDetaNotaCreditoSoli();
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarTotalesDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.cerrarFrameTotalesDetaNotaCreditoSoli();
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonAbrirOrderByDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByDetaNotaCreditoSoli();
			
			this.abrirFrameOrderByDetaNotaCreditoSoli();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByDetaNotaCreditoSoli();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleDetaNotaCreditoSoli(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetaNotaCreditoSoli);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.isMaximum()) {
					this.jInternalFrameDetalleFormDetaNotaCreditoSoli.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.setSize(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.iWidthFormulario,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormDetaNotaCreditoSoli.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormDetaNotaCreditoSoli.isMaximum()) {
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jContentPaneDetalleDetaNotaCreditoSoli.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTabbedPaneRelacionesDetaNotaCreditoSoli.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jContentPaneDetalleDetaNotaCreditoSoli.getWidth(),DetaNotaCreditoSoliConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTabbedPaneRelacionesDetaNotaCreditoSoli.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jContentPaneDetalleDetaNotaCreditoSoli.getWidth(),DetaNotaCreditoSoliConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTabbedPaneRelacionesDetaNotaCreditoSoli.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jContentPaneDetalleDetaNotaCreditoSoli.getWidth(),DetaNotaCreditoSoliConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormDetaNotaCreditoSoli.setVisible(true);
	        this.jInternalFrameDetalleFormDetaNotaCreditoSoli.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByDetaNotaCreditoSoli() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByDetaNotaCreditoSoli==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByDetaNotaCreditoSoli=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetaNotaCreditoSoli,false,this);
				} else {
					this.jInternalFrameOrderByDetaNotaCreditoSoli=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByDetaNotaCreditoSoli,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByDetaNotaCreditoSoli);
				this.jInternalFrameOrderByDetaNotaCreditoSoli.setVisible(false);
				this.jInternalFrameOrderByDetaNotaCreditoSoli.setSelected(false);
				
				this.jInternalFrameOrderByDetaNotaCreditoSoli.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetaNotaCreditoSoli"));
				
				this.inicializarActualizarBindingTablaOrderByDetaNotaCreditoSoli();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionDetaNotaCreditoSoli() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionDetaNotaCreditoSoli==null) {
				
				this.jInternalFrameImportacionDetaNotaCreditoSoli=new ImportacionJInternalFrame(DetaNotaCreditoSoliConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionDetaNotaCreditoSoli);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionDetaNotaCreditoSoli);
				this.jInternalFrameImportacionDetaNotaCreditoSoli.setVisible(false);
				this.jInternalFrameImportacionDetaNotaCreditoSoli.setSelected(false);


				this.jInternalFrameImportacionDetaNotaCreditoSoli.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetaNotaCreditoSoli"));
				this.jInternalFrameImportacionDetaNotaCreditoSoli.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetaNotaCreditoSoli"));
				this.jInternalFrameImportacionDetaNotaCreditoSoli.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetaNotaCreditoSoli"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoDetaNotaCreditoSoli() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli==null) {
				this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli=new ReporteDinamicoJInternalFrame(DetaNotaCreditoSoliConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli);
				this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.setVisible(false);
				this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetaNotaCreditoSoli"));
				this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetaNotaCreditoSoli"));
				this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetaNotaCreditoSoli"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetaNotaCreditoSoli();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	public void abrirInicializarFrameTotalesDetaNotaCreditoSoli() throws Exception {	    	        
	    try {			
			if(this.jInternalFrameTotalesDetaNotaCreditoSoli==null) {
				this.jInternalFrameTotalesDetaNotaCreditoSoli=new TotalesJInternalFrame(this.jButtonAbrirTotalesDetaNotaCreditoSoli,STIPO_TAMANIO_GENERAL,this);
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameTotalesDetaNotaCreditoSoli);

				//TOTALES
				this.jDesktopPane.add(this.jInternalFrameTotalesDetaNotaCreditoSoli);
				this.jInternalFrameTotalesDetaNotaCreditoSoli.setVisible(false);
				this.jInternalFrameTotalesDetaNotaCreditoSoli.setSelected(false);


				this.jInternalFrameTotalesDetaNotaCreditoSoli.getjButtonCerrarTotales().addActionListener (new ButtonActionListener(this,"CerrarTotalesDetaNotaCreditoSoli"));
								
				this.inicializarActualizarBindingTablaTotalesDetaNotaCreditoSoli();
				
				this.redimensionarTablaTotales();
			}			
		} catch (final Exception e) {
			
		}
	}	
	
		
					
	public void cerrarFrameDetalleDetaNotaCreditoSoli() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormDetaNotaCreditoSoli);
			
	       	this.jInternalFrameDetalleFormDetaNotaCreditoSoli.setVisible(false);
	        this.jInternalFrameDetalleFormDetaNotaCreditoSoli.setSelected(false);
			
			//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.dispose();
			//this.jInternalFrameDetalleFormDetaNotaCreditoSoli=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoDetaNotaCreditoSoli() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.setVisible(true);
	        this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionDetaNotaCreditoSoli() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionDetaNotaCreditoSoli.setVisible(true);
	        this.jInternalFrameImportacionDetaNotaCreditoSoli.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	public void abrirFrameTotalesDetaNotaCreditoSoli() throws Exception {	    	        
	    try {
			this.jInternalFrameTotalesDetaNotaCreditoSoli.setVisible(true);
	        this.jInternalFrameTotalesDetaNotaCreditoSoli.setSelected(true);
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
	    }
	}
	
	public void cerrarFrameTotalesDetaNotaCreditoSoli() throws Exception {	    	        
	    try {
			this.jInternalFrameTotalesDetaNotaCreditoSoli.setVisible(false);
	        this.jInternalFrameTotalesDetaNotaCreditoSoli.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	
	public void abrirFrameOrderByDetaNotaCreditoSoli() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByDetaNotaCreditoSoli.setVisible(true);
	        this.jInternalFrameOrderByDetaNotaCreditoSoli.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByDetaNotaCreditoSoli() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByDetaNotaCreditoSoli.setVisible(false);
	        this.jInternalFrameOrderByDetaNotaCreditoSoli.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoDetaNotaCreditoSoli() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.setVisible(false);
	        this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionDetaNotaCreditoSoli() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionDetaNotaCreditoSoli.setVisible(false);
	        this.jInternalFrameImportacionDetaNotaCreditoSoli.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCentroCosto(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCentroCosto);
						CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.sTipoBusqueda="CentroCosto";
						}

						centrocostoBeanSwingJInternalFrame.getTodosCentroCostoArbol();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setCentroCostos(centrocostoBeanSwingJInternalFrame.centrocostosArbol);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.CargarTreeCentroCosto();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setVisible(true);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.jInternalFrameParent=this;
						TitledBorder titledBorderDetaNotaCreditoSoli=(TitledBorder)this.jScrollPanelDatosDetaNotaCreditoSoli.getBorder();
						TitledBorder titledBorderCentroCosto=(TitledBorder)centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

						titledBorderCentroCosto.setTitle(titledBorderDetaNotaCreditoSoli.getTitle() + " -> Centro Costo");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,centrocostoBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(centrocostoBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCentroCosto(CentroCostoBeanSwingJInternalFrame jInternalFrameTreeCentroCosto) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCentroCosto);
						jInternalFrameTreeCentroCosto.setVisible(false);
						jInternalFrameTreeCentroCosto.setSelected(false);
						//jInternalFrameTreeCentroCosto.dispose();
						//jInternalFrameTreeCentroCosto=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarDetaNotaCreditoSoli(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarDetaNotaCreditoSoli(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesDetaNotaCreditoSoli(true);
			//this.isEsNuevoDetaNotaCreditoSoli=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesDetaNotaCreditoSoli("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetaNotaCreditoSoli(false) ;
			
			if(detanotacreditosoliSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(DetaNotaCreditoSoliJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetaNotaCreditoSoli(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetaNotaCreditoSoli(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaDetaNotaCreditoSoliActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarDetaNotaCreditoSoli(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesDetaNotaCreditoSoli(true);
			//this.isEsNuevoDetaNotaCreditoSoli=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.detanotacreditosoli.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesDetaNotaCreditoSoli("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesDetaNotaCreditoSoli(false) ;
			
			if(DetaNotaCreditoSoliJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleDetaNotaCreditoSoli(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetaNotaCreditoSoli(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Producto")) {
				if(!this.detanotacreditosoliConstantesFunciones.cargarid_productoDetaNotaCreditoSoli) {
					this.cargarCombosProductosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
					this.cargarCombosFrameProductosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_producto (id);

				this.recargarComboTablaProducto(this.productosForeignKey);

			}
			
			if(sType.equals("CentroCosto")) {
				if(!this.detanotacreditosoliConstantesFunciones.cargarid_centro_costoDetaNotaCreditoSoli) {
					this.cargarCombosCentroCostosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_centro_costo (id);

				this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
					
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaNotaCreditoSoli(List<NotaCreditoSoli> notacreditosolisForeignKey)throws Exception{
		TableColumn tableColumnNotaCreditoSoli=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDNOTACREDITOSOLI));
		TableCellEditor tableCellEditorNotaCreditoSoli =tableColumnNotaCreditoSoli.getCellEditor();

		NotaCreditoSoliTableCell notacreditosoliTableCellFk=(NotaCreditoSoliTableCell)tableCellEditorNotaCreditoSoli;

		if(notacreditosoliTableCellFk!=null) {
			notacreditosoliTableCellFk.setnotacreditosolisForeignKey(notacreditosolisForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

		//if(intSelectedRow<=0) {
			//notacreditosoliTableCellFk.setRowActual(intSelectedRow);
			//notacreditosoliTableCellFk.setnotacreditosolisForeignKeyActual(notacreditosolisForeignKey);
		//}


		if(notacreditosoliTableCellFk!=null) {
			notacreditosoliTableCellFk.RecargarNotaCreditoSolisForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaBodega(List<Bodega> bodegasForeignKey)throws Exception{
		TableColumn tableColumnBodega=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDBODEGA));
		TableCellEditor tableCellEditorBodega =tableColumnBodega.getCellEditor();

		BodegaTableCell bodegaTableCellFk=(BodegaTableCell)tableCellEditorBodega;

		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.setbodegasForeignKey(bodegasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

		//if(intSelectedRow<=0) {
			//bodegaTableCellFk.setRowActual(intSelectedRow);
			//bodegaTableCellFk.setbodegasForeignKeyActual(bodegasForeignKey);
		//}


		if(bodegaTableCellFk!=null) {
			bodegaTableCellFk.RecargarBodegasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaProducto(List<Producto> productosForeignKey)throws Exception{
		TableColumn tableColumnProducto=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPRODUCTO));
		TableCellEditor tableCellEditorProducto =tableColumnProducto.getCellEditor();

		ProductoTableCell productoTableCellFk=(ProductoTableCell)tableCellEditorProducto;

		if(productoTableCellFk!=null) {
			productoTableCellFk.setproductosForeignKey(productosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

		//if(intSelectedRow<=0) {
			//productoTableCellFk.setRowActual(intSelectedRow);
			//productoTableCellFk.setproductosForeignKeyActual(productosForeignKey);
		//}


		if(productoTableCellFk!=null) {
			productoTableCellFk.RecargarProductosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaUnidad(List<Unidad> unidadsForeignKey)throws Exception{
		TableColumn tableColumnUnidad=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDUNIDAD));
		TableCellEditor tableCellEditorUnidad =tableColumnUnidad.getCellEditor();

		UnidadTableCell unidadTableCellFk=(UnidadTableCell)tableCellEditorUnidad;

		if(unidadTableCellFk!=null) {
			unidadTableCellFk.setunidadsForeignKey(unidadsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

		//if(intSelectedRow<=0) {
			//unidadTableCellFk.setRowActual(intSelectedRow);
			//unidadTableCellFk.setunidadsForeignKeyActual(unidadsForeignKey);
		//}


		if(unidadTableCellFk!=null) {
			unidadTableCellFk.RecargarUnidadsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEmpaque(List<Empaque> empaquesForeignKey)throws Exception{
		TableColumn tableColumnEmpaque=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPAQUE));
		TableCellEditor tableCellEditorEmpaque =tableColumnEmpaque.getCellEditor();

		EmpaqueTableCell empaqueTableCellFk=(EmpaqueTableCell)tableCellEditorEmpaque;

		if(empaqueTableCellFk!=null) {
			empaqueTableCellFk.setempaquesForeignKey(empaquesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empaqueTableCellFk.setRowActual(intSelectedRow);
			//empaqueTableCellFk.setempaquesForeignKeyActual(empaquesForeignKey);
		//}


		if(empaqueTableCellFk!=null) {
			empaqueTableCellFk.RecargarEmpaquesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoDevolucionEmpresa(List<TipoDevolucionEmpresa> tipodevolucionempresasForeignKey)throws Exception{
		TableColumn tableColumnTipoDevolucionEmpresa=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA));
		TableCellEditor tableCellEditorTipoDevolucionEmpresa =tableColumnTipoDevolucionEmpresa.getCellEditor();

		TipoDevolucionEmpresaTableCell tipodevolucionempresaTableCellFk=(TipoDevolucionEmpresaTableCell)tableCellEditorTipoDevolucionEmpresa;

		if(tipodevolucionempresaTableCellFk!=null) {
			tipodevolucionempresaTableCellFk.settipodevolucionempresasForeignKey(tipodevolucionempresasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipodevolucionempresaTableCellFk.setRowActual(intSelectedRow);
			//tipodevolucionempresaTableCellFk.settipodevolucionempresasForeignKeyActual(tipodevolucionempresasForeignKey);
		//}


		if(tipodevolucionempresaTableCellFk!=null) {
			tipodevolucionempresaTableCellFk.RecargarTipoDevolucionEmpresasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCentroCosto(List<CentroCosto> centrocostosForeignKey)throws Exception{
		TableColumn tableColumnCentroCosto=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDCENTROCOSTO));
		TableCellEditor tableCellEditorCentroCosto =tableColumnCentroCosto.getCellEditor();

		CentroCostoTableCell centrocostoTableCellFk=(CentroCostoTableCell)tableCellEditorCentroCosto;

		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.setcentrocostosForeignKey(centrocostosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

		//if(intSelectedRow<=0) {
			//centrocostoTableCellFk.setRowActual(intSelectedRow);
			//centrocostoTableCellFk.setcentrocostosForeignKeyActual(centrocostosForeignKey);
		//}


		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.RecargarCentroCostosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_producto (Long id) throws Exception {
		this.setActualProductoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_centro_costo (Long id) throws Exception {
		this.setActualCentroCostoForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesDetaNotaCreditoSoli(false);
			
			//if(!this.isEsNuevoDetaNotaCreditoSoli) {								
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				
			}
			
			if(this.permiteMantenimiento(this.detanotacreditosoli)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoDetaNotaCreditoSoli=true;
					this.inicializarActualizarBindingTablaDetaNotaCreditoSoli(false);
					this.isEsNuevoDetaNotaCreditoSoli=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoDetaNotaCreditoSoli=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoDetaNotaCreditoSoli=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetaNotaCreditoSoli(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetaNotaCreditoSoli(false);
				
				this.habilitarDeshabilitarControlesDetaNotaCreditoSoli(false);
			
												
				
				if(DetaNotaCreditoSoliJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleDetaNotaCreditoSoli();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoDetaNotaCreditoSoliActionPerformed(evt,detanotacreditosoliSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualDetaNotaCreditoSoli(this.detanotacreditosoli,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosDetaNotaCreditoSoli.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,detanotacreditosoliSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.detanotacreditosoli.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(DetaNotaCreditoSoli.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCreditoSoli.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				this.detanotacreditosoli.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				this.detanotacreditosoli.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.detanotacreditosoli)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((DetaNotaCreditoSoliModel) this.jTableDatosDetaNotaCreditoSoli.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoDetaNotaCreditoSoli=true;
				this.inicializarActualizarBindingTablaDetaNotaCreditoSoli(false);
				this.isEsNuevoDetaNotaCreditoSoli=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesDetaNotaCreditoSoli(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetaNotaCreditoSoli(false);
				
				this.habilitarDeshabilitarControlesDetaNotaCreditoSoli(false);
				
				
				
				if(DetaNotaCreditoSoliJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleDetaNotaCreditoSoli();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosDetaNotaCreditoSoli.getRowCount()>=1) {
				jTableDatosDetaNotaCreditoSoli.removeRowSelectionInterval(0, jTableDatosDetaNotaCreditoSoli.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesDetaNotaCreditoSoli(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaDetaNotaCreditoSoli(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesDetaNotaCreditoSoli(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualDetaNotaCreditoSoli(false) ;
			
			this.isEsNuevoDetaNotaCreditoSoli=false;
			
			if(DetaNotaCreditoSoliJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleDetaNotaCreditoSoli();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				
				//SI ES MANUAL
				if(DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualDetaNotaCreditoSoli();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoDetaNotaCreditoSoli--;			
			//DetaNotaCreditoSoli detanotacreditosoliAux= new DetaNotaCreditoSoli();			
			//detanotacreditosoliAux.setId(this.iIdNuevoDetaNotaCreditoSoli);
			
			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaDetaNotaCreditoSoli();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
			
			this.detanotacreditosoli.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().add(this.detanotacreditosoliAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.detanotacreditosolis.add(this.detanotacreditosoliAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaDetaNotaCreditoSoli(false);
			
			this.jTableDatosDetaNotaCreditoSoli.setRowSelectionInterval(this.getIndiceNuevoDetaNotaCreditoSoli(), this.getIndiceNuevoDetaNotaCreditoSoli());
			
			int iLastRow =  this.jTableDatosDetaNotaCreditoSoli.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosDetaNotaCreditoSoli.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosDetaNotaCreditoSoli.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaDetaNotaCreditoSoli(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
			
			//SI ES MANUAL
			if(DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetaNotaCreditoSoli();
			}
			
			//this.abrirFrameTreeDetaNotaCreditoSoli();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Detalle  Solicitud Nota CreditS ?", "MANTENIMIENTO DE Detalle  Solicitud Nota Credit", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionDetaNotaCreditoSoli.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralDetaNotaCreditoSoli();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.detanotacreditosoliReturnGeneral=detanotacreditosoliLogic.procesarImportacionDetaNotaCreditoSolisWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.detanotacreditosoliParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarDetaNotaCreditoSoliReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionDetaNotaCreditoSoli.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionDetaNotaCreditoSoli.setFileImportacion(this.jInternalFrameImportacionDetaNotaCreditoSoli.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionDetaNotaCreditoSoli.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionDetaNotaCreditoSoli.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionDetaNotaCreditoSoli.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionDetaNotaCreditoSoli.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<DetaNotaCreditoSoli> detanotacreditosolisSeleccionados=new ArrayList<DetaNotaCreditoSoli>();		

		detanotacreditosolisSeleccionados=this.getDetaNotaCreditoSolisSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("DetaNotaCreditoSoliBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"DetaNotaCreditoSoliBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteDetaNotaCreditoSolis("Todos",detanotacreditosolisSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle  Solicitud Nota Credit",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDNOTACREDITOSOLI:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_NotaCreditoSoli_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_NotaCreditoSoli_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_NotaCreditoSoli_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_NotaCreditoSoli_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDBODEGA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Bodega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Bodega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Bodega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Bodega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPRODUCTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Producto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Producto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Producto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Producto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDUNIDAD:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Unidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Unidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Unidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Unidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPAQUE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empaque_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empaque_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empaque_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empaque_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoDevolucionEmpresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoDevolucionEmpresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoDevolucionEmpresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoDevolucionEmpresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDCENTROCOSTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CentroCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CentroCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CentroCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CentroCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_CANTIDAD:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_PRECIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ecio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ecio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ecio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ecio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENDESCUEN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcenDescuen_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcenDescuen_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcenDescuen_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcenDescuen_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IMPUESTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_puesto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_puesto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_puesto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_puesto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcenIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcenIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcenIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcenIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_TOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_CODIGOLOTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_digoLote_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_digoLote_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_digoLote_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_digoLote_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_NUMEROCAJA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroCaja_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroCaja_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroCaja_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroCaja_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO2:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuento2_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuento2_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuento2_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuento2_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_COSTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_sto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_sto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_sto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_sto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_INCLUYEIMPUESTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cluyeImpuesto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cluyeImpuesto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cluyeImpuesto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cluyeImpuesto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENICE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rcenIce_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rcenIce_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rcenIce_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rcenIce_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_FECHAEMISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEmision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEmision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEmision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEmision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDNOTACREDITOSOLI:
					sNombreCampoCategoria="id_nota_credito_soli";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoria="id_bodega";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPRODUCTO:
					sNombreCampoCategoria="id_producto";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDUNIDAD:
					sNombreCampoCategoria="id_unidad";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPAQUE:
					sNombreCampoCategoria="id_empaque";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA:
					sNombreCampoCategoria="id_tipo_devolucion_empresa";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoria="id_centro_costo";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_CANTIDAD:
					sNombreCampoCategoria="cantidad";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_PRECIO:
					sNombreCampoCategoria="precio";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENDESCUEN:
					sNombreCampoCategoria="porcen_descuen";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO:
					sNombreCampoCategoria="descuento";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IMPUESTO:
					sNombreCampoCategoria="impuesto";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENIVA:
					sNombreCampoCategoria="porcen_iva";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoria="total";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_CODIGOLOTE:
					sNombreCampoCategoria="codigo_lote";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_NUMEROCAJA:
					sNombreCampoCategoria="numero_caja";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO2:
					sNombreCampoCategoria="descuento2";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_COSTO:
					sNombreCampoCategoria="costo";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_INCLUYEIMPUESTO:
					sNombreCampoCategoria="incluye_impuesto";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENICE:
					sNombreCampoCategoria="porcen_ice";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoria="fecha_emision";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDNOTACREDITOSOLI:
					sNombreCampoCategoriaValor="id_nota_credito_soli";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDBODEGA:
					sNombreCampoCategoriaValor="id_bodega";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPRODUCTO:
					sNombreCampoCategoriaValor="id_producto";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDUNIDAD:
					sNombreCampoCategoriaValor="id_unidad";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPAQUE:
					sNombreCampoCategoriaValor="id_empaque";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA:
					sNombreCampoCategoriaValor="id_tipo_devolucion_empresa";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoriaValor="id_centro_costo";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_CANTIDAD:
					sNombreCampoCategoriaValor="cantidad";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_PRECIO:
					sNombreCampoCategoriaValor="precio";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENDESCUEN:
					sNombreCampoCategoriaValor="porcen_descuen";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO:
					sNombreCampoCategoriaValor="descuento";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IMPUESTO:
					sNombreCampoCategoriaValor="impuesto";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENIVA:
					sNombreCampoCategoriaValor="porcen_iva";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoriaValor="total";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_CODIGOLOTE:
					sNombreCampoCategoriaValor="codigo_lote";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_NUMEROCAJA:
					sNombreCampoCategoriaValor="numero_caja";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO2:
					sNombreCampoCategoriaValor="descuento2";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_COSTO:
					sNombreCampoCategoriaValor="costo";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_INCLUYEIMPUESTO:
					sNombreCampoCategoriaValor="incluye_impuesto";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENICE:
					sNombreCampoCategoriaValor="porcen_ice";
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoriaValor="fecha_emision";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDNOTACREDITOSOLI:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Solicitud Nota Credito",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_nota_credito_soli");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDBODEGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bodega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_bodega");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPRODUCTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Producto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_producto");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDUNIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Unidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_unidad");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPAQUE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empaque",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empaque");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Devolucion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_devolucion_empresa");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDCENTROCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Centro Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_centro_costo");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_CANTIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cantidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cantidad");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_PRECIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Precio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"precio");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENDESCUEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"% Descuen",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcen_descuen");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descuento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IMPUESTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Impuesto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"impuesto");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"% Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcen_iva");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_TOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_CODIGOLOTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Codigo Lote",sNombreCampoCategoria,sNombreCampoCategoriaValor,"codigo_lote");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_NUMEROCAJA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Caja",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_caja");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO2:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descuento2",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento2");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_COSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"costo");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_INCLUYEIMPUESTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Incluye Impuesto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"incluye_impuesto");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENICE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"% Ice",sNombreCampoCategoria,sNombreCampoCategoriaValor,"porcen_ice");
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_FECHAEMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Emision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_emision");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<DetaNotaCreditoSoli> detanotacreditosolisSeleccionados=new ArrayList<DetaNotaCreditoSoli>();		
		
		detanotacreditosolisSeleccionados=this.getDetaNotaCreditoSolisSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detanotacreditosoli";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("DetaNotaCreditoSolis");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDNOTACREDITOSOLI:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDNOTACREDITOSOLI);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getnotacreditosoli_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDBODEGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDBODEGA);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getbodega_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPRODUCTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPRODUCTO);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getproducto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDUNIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDUNIDAD);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getunidad_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPAQUE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPAQUE);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getempaque_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.gettipodevolucionempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IDCENTROCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDCENTROCOSTO);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getcentrocosto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_CANTIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_CANTIDAD);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getcantidad());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_PRECIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_PRECIO);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getprecio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENDESCUEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENDESCUEN);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getporcen_descuen());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getdescuento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_IMPUESTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IMPUESTO);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getimpuesto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENIVA);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getporcen_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_TOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_TOTAL);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.gettotal());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_CODIGOLOTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_CODIGOLOTE);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getcodigo_lote());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_NUMEROCAJA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_NUMEROCAJA);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getnumero_caja());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO2:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO2);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getdescuento2());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_COSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_COSTO);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getcosto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_INCLUYEIMPUESTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_INCLUYEIMPUESTO);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getincluye_impuesto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENICE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENICE);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getporcen_ice());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case DetaNotaCreditoSoliConstantesFunciones.LABEL_FECHAEMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_FECHAEMISION);
					iRow++;

					for(DetaNotaCreditoSoli detanotacreditosoli:detanotacreditosolisSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(detanotacreditosoli.getfecha_emision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelDetaNotaCreditoSoli(row);				
			//	iRow++;
			//}				
			
			//for(DetaNotaCreditoSoli detanotacreditosoliAux:detanotacreditosolisSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelDetaNotaCreditoSoli(detanotacreditosoliAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle  Solicitud Nota Credit",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
			
			//SI ES MANUAL
			if(DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualDetaNotaCreditoSoli();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
			
			//SI ES MANUAL
			if(DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetaNotaCreditoSoli();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
			
			//SI ES MANUAL
			if(DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualDetaNotaCreditoSoli();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaDetaNotaCreditoSoli() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosDetaNotaCreditoSoli.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosDetaNotaCreditoSoli.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosDetaNotaCreditoSoli.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosDetaNotaCreditoSoli.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosDetaNotaCreditoSoli.setMinimumSize(dimensionMinimum);
		this.jTableDatosDetaNotaCreditoSoli.setMaximumSize(dimensionMaximum);
		this.jTableDatosDetaNotaCreditoSoli.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingDetaNotaCreditoSoli(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingDetaNotaCreditoSoli(esInicializar,true);
	}
	
	public void inicializarActualizarBindingDetaNotaCreditoSoli(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaDetaNotaCreditoSoli(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesDetaNotaCreditoSoli(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasDetaNotaCreditoSoli(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetaNotaCreditoSoli(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesDetaNotaCreditoSoli(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualDetaNotaCreditoSoli() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaDetaNotaCreditoSoli();
		
		this.inicializarActualizarBindingBotonesManualDetaNotaCreditoSoli(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualDetaNotaCreditoSoli();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesDetaNotaCreditoSoli() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualDetaNotaCreditoSoli(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualDetaNotaCreditoSoli(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosDetaNotaCreditoSoli.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosDetaNotaCreditoSoli.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteDetaNotaCreditoSoli.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jCheckBoxPostAccionNuevoDetaNotaCreditoSoli.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jCheckBoxPostAccionSinCerrarDetaNotaCreditoSoli.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jCheckBoxPostAccionSinMensajeDetaNotaCreditoSoli.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosDetaNotaCreditoSoli.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosDetaNotaCreditoSoli.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteDetaNotaCreditoSoli.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
				this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jCheckBoxPostAccionNuevoDetaNotaCreditoSoli.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jCheckBoxPostAccionSinCerrarDetaNotaCreditoSoli.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jCheckBoxPostAccionSinMensajeDetaNotaCreditoSoli.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionDetaNotaCreditoSoli.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionDetaNotaCreditoSoli.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxTiposAccionesFormularioDetaNotaCreditoSoli.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesDetaNotaCreditoSoli.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesDetaNotaCreditoSoli.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesDetaNotaCreditoSoli.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarDetaNotaCreditoSoli.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesDetaNotaCreditoSoli.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesDetaNotaCreditoSoli.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralDetaNotaCreditoSoli.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesDetaNotaCreditoSoli(Boolean esInicializar) throws Exception {
		try	{	
			if(DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualDetaNotaCreditoSoli(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesDetaNotaCreditoSoli() throws Exception {
		try	{
			if(DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualDetaNotaCreditoSoli();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetaNotaCreditoSoli() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxTiposAccionesFormularioDetaNotaCreditoSoli.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxTiposAccionesFormularioDetaNotaCreditoSoli.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualDetaNotaCreditoSoli() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesDetaNotaCreditoSoli.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesDetaNotaCreditoSoli.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesDetaNotaCreditoSoli.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesDetaNotaCreditoSoli.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesDetaNotaCreditoSoli.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesDetaNotaCreditoSoli.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionDetaNotaCreditoSoli.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionDetaNotaCreditoSoli.addItem(reporte);
			}
			
			
			if(!this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionDetaNotaCreditoSoli.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionDetaNotaCreditoSoli.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesDetaNotaCreditoSoli.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesDetaNotaCreditoSoli.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesDetaNotaCreditoSoli.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesDetaNotaCreditoSoli.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxTiposAccionesFormularioDetaNotaCreditoSoli.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxTiposAccionesFormularioDetaNotaCreditoSoli.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarDetaNotaCreditoSoli.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarDetaNotaCreditoSoli.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarDetaNotaCreditoSoli.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetaNotaCreditoSoli();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualDetaNotaCreditoSoli() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli!=null) {
				this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli!=null) {
				this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli!=null) {
				
				if(this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=DetaNotaCreditoSoliConstantesFunciones.getTiposSeleccionarDetaNotaCreditoSoli(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=DetaNotaCreditoSoliConstantesFunciones.getTiposSeleccionarDetaNotaCreditoSoli(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=DetaNotaCreditoSoliConstantesFunciones.getTiposSeleccionarDetaNotaCreditoSoli(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualDetaNotaCreditoSoli()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli.getSelectedItem()!=null){this.id_bodegaFK_IdBodega=((Bodega)this.jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli.getSelectedItem()).getId();}
		if(this.jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCreditoSoli.getSelectedItem()!=null){this.id_centro_costoFK_IdCentroCosto=((CentroCosto)this.jComboBoxid_centro_costoFK_IdCentroCostoDetaNotaCreditoSoli.getSelectedItem()).getId();}
		if(this.jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCreditoSoli.getSelectedItem()!=null){this.id_empaqueFK_IdEmpaque=((Empaque)this.jComboBoxid_empaqueFK_IdEmpaqueDetaNotaCreditoSoli.getSelectedItem()).getId();}
		if(this.jComboBoxid_nota_credito_soliFK_IdNotaCreditoSoliDetaNotaCreditoSoli.getSelectedItem()!=null){this.id_nota_credito_soliFK_IdNotaCreditoSoli=((NotaCreditoSoli)this.jComboBoxid_nota_credito_soliFK_IdNotaCreditoSoliDetaNotaCreditoSoli.getSelectedItem()).getId();}
		if(this.jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli.getSelectedItem()!=null){this.id_productoFK_IdProducto=((Producto)this.jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli.getSelectedItem()!=null){this.id_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa=((TipoDevolucionEmpresa)this.jComboBoxid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli.getSelectedItem()).getId();}
		if(this.jComboBoxid_unidadFK_IdUnidadDetaNotaCreditoSoli.getSelectedItem()!=null){this.id_unidadFK_IdUnidad=((Unidad)this.jComboBoxid_unidadFK_IdUnidadDetaNotaCreditoSoli.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasDetaNotaCreditoSoli(Boolean esInicializar) throws Exception {				
		if(DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualDetaNotaCreditoSoli();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaDetaNotaCreditoSoli() throws Exception {
		this.inicializarActualizarBindingTablaDetaNotaCreditoSoli(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByDetaNotaCreditoSoli() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByDetaNotaCreditoSoli.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByDetaNotaCreditoSoli.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetaNotaCreditoSoli.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByDetaNotaCreditoSoli.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetaNotaCreditoSoli.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosDetaNotaCreditoSoliOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoliOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByDetaNotaCreditoSoli.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByDetaNotaCreditoSoli.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByDetaNotaCreditoSoli.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	public void inicializarActualizarBindingTablaTotalesDetaNotaCreditoSoli() {		
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		
		//TABLA TOTALES
		this.jInternalFrameTotalesDetaNotaCreditoSoli.getjTableDatosTotales().setModel(new TablaGeneralTotalModel(this.arrDatoGeneralTotales));
				
		//DEFINIR RENDERERS TOTALES
		tableColumn=this.jInternalFrameTotalesDetaNotaCreditoSoli.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetaNotaCreditoSoli.getjTableDatosTotales(),Constantes2.S_TIPO));			
		//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
				
				
		tableColumn=this.jInternalFrameTotalesDetaNotaCreditoSoli.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetaNotaCreditoSoli.getjTableDatosTotales(),Constantes2.S_TOTAL));
		//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());		
	}
	
	public void inicializarActualizarBindingTablaDetaNotaCreditoSoli(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=detanotacreditosoliLogic.getDetaNotaCreditoSolis().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=detanotacreditosolis.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosDetaNotaCreditoSoli.setModel(new DetaNotaCreditoSoliModel(this.detanotacreditosoliLogic.getDetaNotaCreditoSolis(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosDetaNotaCreditoSoli.setModel(new DetaNotaCreditoSoliModel(this.detanotacreditosolis,this));
			}
			//ARCHITECTURE
			
			if(this.jInternalFrameTotalesDetaNotaCreditoSoli!=null) {
				//TABLA TOTALES
				this.jInternalFrameTotalesDetaNotaCreditoSoli.getjTableDatosTotales().setModel(new TablaGeneralTotalModel(this.arrDatoGeneralTotales));
				
				//DEFINIR RENDERERS TOTALES
				tableColumn=this.jInternalFrameTotalesDetaNotaCreditoSoli.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetaNotaCreditoSoli.getjTableDatosTotales(),Constantes2.S_TIPO));			
				//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
				
				
				tableColumn=this.jInternalFrameTotalesDetaNotaCreditoSoli.getjTableDatosTotales().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameTotalesDetaNotaCreditoSoli.getjTableDatosTotales(),Constantes2.S_TOTAL));
				//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
			}
							
			
			
			if(this.jInternalFrameOrderByDetaNotaCreditoSoli!=null && this.jInternalFrameOrderByDetaNotaCreditoSoli.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByDetaNotaCreditoSoli();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+DetaNotaCreditoSoliConstantesFunciones.SCLASSWEBTITULO,detanotacreditosoliConstantesFunciones.resaltarSeleccionarDetaNotaCreditoSoli,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+DetaNotaCreditoSoliConstantesFunciones.SCLASSWEBTITULO,detanotacreditosoliConstantesFunciones.resaltarSeleccionarDetaNotaCreditoSoli,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_ID));

		if(this.detanotacreditosoliConstantesFunciones.mostraridDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detanotacreditosoliConstantesFunciones.resaltaridDetaNotaCreditoSoli,this.detanotacreditosoliConstantesFunciones.activaridDetaNotaCreditoSoli,iSizeTabla,this,true,"idDetaNotaCreditoSoli","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditosoliConstantesFunciones.resaltaridDetaNotaCreditoSoli,this.detanotacreditosoliConstantesFunciones.activaridDetaNotaCreditoSoli,this,true,"idDetaNotaCreditoSoli","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPRESA));

		if(this.detanotacreditosoliConstantesFunciones.mostrarid_empresaDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_empresaDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_empresaDetaNotaCreditoSoli,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_empresaDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_empresaDetaNotaCreditoSoli,false,"id_empresaDetaNotaCreditoSoli","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.detanotacreditosoliConstantesFunciones.mostrarid_sucursalDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_sucursalDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_sucursalDetaNotaCreditoSoli,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_sucursalDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_sucursalDetaNotaCreditoSoli,false,"id_sucursalDetaNotaCreditoSoli","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.detanotacreditosoliConstantesFunciones.mostrarid_ejercicioDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_ejercicioDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_ejercicioDetaNotaCreditoSoli,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_ejercicioDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_ejercicioDetaNotaCreditoSoli,false,"id_ejercicioDetaNotaCreditoSoli","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPERIODO));

		if(this.detanotacreditosoliConstantesFunciones.mostrarid_periodoDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_periodoDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_periodoDetaNotaCreditoSoli,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_periodoDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_periodoDetaNotaCreditoSoli,false,"id_periodoDetaNotaCreditoSoli","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDANIO));

		if(this.detanotacreditosoliConstantesFunciones.mostrarid_anioDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_anioDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_anioDetaNotaCreditoSoli,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_anioDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_anioDetaNotaCreditoSoli,true,"id_anioDetaNotaCreditoSoli","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDMES));

		if(this.detanotacreditosoliConstantesFunciones.mostrarid_mesDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_mesDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_mesDetaNotaCreditoSoli,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_mesDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_mesDetaNotaCreditoSoli,true,"id_mesDetaNotaCreditoSoli","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDNOTACREDITOSOLI));

		if(this.detanotacreditosoliConstantesFunciones.mostrarid_nota_credito_soliDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDNOTACREDITOSOLI,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new NotaCreditoSoliTableCell(this.notacreditosolisForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_nota_credito_soliDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_nota_credito_soliDetaNotaCreditoSoli,iSizeTabla));
			tableColumn.setCellEditor(new NotaCreditoSoliTableCell(this.notacreditosolisForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_nota_credito_soliDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_nota_credito_soliDetaNotaCreditoSoli,true,"id_nota_credito_soliDetaNotaCreditoSoli","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDBODEGA));

		if(this.detanotacreditosoliConstantesFunciones.mostrarid_bodegaDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDBODEGA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new BodegaTableCell(this.bodegasForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_bodegaDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_bodegaDetaNotaCreditoSoli,iSizeTabla));
			tableColumn.setCellEditor(new BodegaTableCell(this.bodegasForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_bodegaDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_bodegaDetaNotaCreditoSoli,true,"id_bodegaDetaNotaCreditoSoli","BASICO-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPRODUCTO));

		if(this.detanotacreditosoliConstantesFunciones.mostrarid_productoDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPRODUCTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ProductoTableCell(this.productosForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_productoDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_productoDetaNotaCreditoSoli,iSizeTabla));
			tableColumn.setCellEditor(new ProductoTableCell(this.productosForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_productoDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_productoDetaNotaCreditoSoli,true,"id_productoDetaNotaCreditoSoli","CON_BUSQUEDA-CON_EVENT_CHANGE"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDUNIDAD));

		if(this.detanotacreditosoliConstantesFunciones.mostrarid_unidadDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDUNIDAD,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new UnidadTableCell(this.unidadsForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_unidadDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_unidadDetaNotaCreditoSoli,iSizeTabla));
			tableColumn.setCellEditor(new UnidadTableCell(this.unidadsForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_unidadDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_unidadDetaNotaCreditoSoli,true,"id_unidadDetaNotaCreditoSoli","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPAQUE));

		if(this.detanotacreditosoliConstantesFunciones.mostrarid_empaqueDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPAQUE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpaqueTableCell(this.empaquesForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_empaqueDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_empaqueDetaNotaCreditoSoli,iSizeTabla));
			tableColumn.setCellEditor(new EmpaqueTableCell(this.empaquesForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_empaqueDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_empaqueDetaNotaCreditoSoli,true,"id_empaqueDetaNotaCreditoSoli","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA));

		if(this.detanotacreditosoliConstantesFunciones.mostrarid_tipo_devolucion_empresaDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoDevolucionEmpresaTableCell(this.tipodevolucionempresasForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_tipo_devolucion_empresaDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_tipo_devolucion_empresaDetaNotaCreditoSoli,iSizeTabla));
			tableColumn.setCellEditor(new TipoDevolucionEmpresaTableCell(this.tipodevolucionempresasForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_tipo_devolucion_empresaDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_tipo_devolucion_empresaDetaNotaCreditoSoli,true,"id_tipo_devolucion_empresaDetaNotaCreditoSoli","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDCENTROCOSTO));

		if(this.detanotacreditosoliConstantesFunciones.mostrarid_centro_costoDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_IDCENTROCOSTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CentroCostoTableCell(this.centrocostosForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_centro_costoDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_centro_costoDetaNotaCreditoSoli,iSizeTabla));
			tableColumn.setCellEditor(new CentroCostoTableCell(this.centrocostosForeignKey,this.detanotacreditosoliConstantesFunciones.resaltarid_centro_costoDetaNotaCreditoSoli,this,this.detanotacreditosoliConstantesFunciones.activarid_centro_costoDetaNotaCreditoSoli,true,"id_centro_costoDetaNotaCreditoSoli","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_CANTIDAD));

		if(this.detanotacreditosoliConstantesFunciones.mostrarcantidadDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_CANTIDAD,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detanotacreditosoliConstantesFunciones.resaltarcantidadDetaNotaCreditoSoli,this.detanotacreditosoliConstantesFunciones.activarcantidadDetaNotaCreditoSoli,iSizeTabla,this,true,"cantidadDetaNotaCreditoSoli","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditosoliConstantesFunciones.resaltarcantidadDetaNotaCreditoSoli,this.detanotacreditosoliConstantesFunciones.activarcantidadDetaNotaCreditoSoli,this,true,"cantidadDetaNotaCreditoSoli","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_PRECIO));

		if(this.detanotacreditosoliConstantesFunciones.mostrarprecioDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_PRECIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detanotacreditosoliConstantesFunciones.resaltarprecioDetaNotaCreditoSoli,this.detanotacreditosoliConstantesFunciones.activarprecioDetaNotaCreditoSoli,iSizeTabla,this,true,"precioDetaNotaCreditoSoli","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditosoliConstantesFunciones.resaltarprecioDetaNotaCreditoSoli,this.detanotacreditosoliConstantesFunciones.activarprecioDetaNotaCreditoSoli,this,true,"precioDetaNotaCreditoSoli","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENDESCUEN));

		if(this.detanotacreditosoliConstantesFunciones.mostrarporcen_descuenDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENDESCUEN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detanotacreditosoliConstantesFunciones.resaltarporcen_descuenDetaNotaCreditoSoli,this.detanotacreditosoliConstantesFunciones.activarporcen_descuenDetaNotaCreditoSoli,iSizeTabla,this,true,"porcen_descuenDetaNotaCreditoSoli","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditosoliConstantesFunciones.resaltarporcen_descuenDetaNotaCreditoSoli,this.detanotacreditosoliConstantesFunciones.activarporcen_descuenDetaNotaCreditoSoli,this,true,"porcen_descuenDetaNotaCreditoSoli","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO));

		if(this.detanotacreditosoliConstantesFunciones.mostrardescuentoDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detanotacreditosoliConstantesFunciones.resaltardescuentoDetaNotaCreditoSoli,this.detanotacreditosoliConstantesFunciones.activardescuentoDetaNotaCreditoSoli,iSizeTabla,this,true,"descuentoDetaNotaCreditoSoli","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditosoliConstantesFunciones.resaltardescuentoDetaNotaCreditoSoli,this.detanotacreditosoliConstantesFunciones.activardescuentoDetaNotaCreditoSoli,this,true,"descuentoDetaNotaCreditoSoli","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_IMPUESTO));

		if(this.detanotacreditosoliConstantesFunciones.mostrarimpuestoDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_IMPUESTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detanotacreditosoliConstantesFunciones.resaltarimpuestoDetaNotaCreditoSoli,this.detanotacreditosoliConstantesFunciones.activarimpuestoDetaNotaCreditoSoli,iSizeTabla,this,true,"impuestoDetaNotaCreditoSoli","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditosoliConstantesFunciones.resaltarimpuestoDetaNotaCreditoSoli,this.detanotacreditosoliConstantesFunciones.activarimpuestoDetaNotaCreditoSoli,this,true,"impuestoDetaNotaCreditoSoli","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENIVA));

		if(this.detanotacreditosoliConstantesFunciones.mostrarporcen_ivaDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detanotacreditosoliConstantesFunciones.resaltarporcen_ivaDetaNotaCreditoSoli,this.detanotacreditosoliConstantesFunciones.activarporcen_ivaDetaNotaCreditoSoli,iSizeTabla,this,true,"porcen_ivaDetaNotaCreditoSoli","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditosoliConstantesFunciones.resaltarporcen_ivaDetaNotaCreditoSoli,this.detanotacreditosoliConstantesFunciones.activarporcen_ivaDetaNotaCreditoSoli,this,true,"porcen_ivaDetaNotaCreditoSoli","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_TOTAL));

		if(this.detanotacreditosoliConstantesFunciones.mostrartotalDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_TOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.detanotacreditosoliConstantesFunciones.resaltartotalDetaNotaCreditoSoli,this.detanotacreditosoliConstantesFunciones.activartotalDetaNotaCreditoSoli,iSizeTabla,this,true,"totalDetaNotaCreditoSoli","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditosoliConstantesFunciones.resaltartotalDetaNotaCreditoSoli,this.detanotacreditosoliConstantesFunciones.activartotalDetaNotaCreditoSoli,this,true,"totalDetaNotaCreditoSoli","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCRIPCION));

		if(this.detanotacreditosoliConstantesFunciones.mostrardescripcionDetaNotaCreditoSoli && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.detanotacreditosoliConstantesFunciones.resaltardescripcionDetaNotaCreditoSoli,this.detanotacreditosoliConstantesFunciones.activardescripcionDetaNotaCreditoSoli,iSizeTabla,this,true,"descripcionDetaNotaCreditoSoli","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.detanotacreditosoliConstantesFunciones.resaltardescripcionDetaNotaCreditoSoli,this.detanotacreditosoliConstantesFunciones.activardescripcionDetaNotaCreditoSoli,this,true,"descripcionDetaNotaCreditoSoli","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new DetaNotaCreditoSoliPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detanotacreditosoliSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detanotacreditosoliSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetaNotaCreditoSoli.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.detanotacreditosoliSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.detanotacreditosoliSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosDetaNotaCreditoSoli.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarDetaNotaCreditoSoli && this.isPermisoGuardarCambiosDetaNotaCreditoSoli) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.detanotacreditosoliSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.detanotacreditosoliSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosDetaNotaCreditoSoli.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosDetaNotaCreditoSoli.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetaNotaCreditoSoli && this.isPermisoGuardarCambiosDetaNotaCreditoSoli) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarDetaNotaCreditoSoli && this.isPermisoGuardarCambiosDetaNotaCreditoSoli) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosDetaNotaCreditoSoli.moveColumn(this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosDetaNotaCreditoSoli.moveColumn(this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosDetaNotaCreditoSoli.moveColumn(this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosDetaNotaCreditoSoli.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosDetaNotaCreditoSoli.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosDetaNotaCreditoSoli,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosDetaNotaCreditoSoli.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosDetaNotaCreditoSoli.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosDetaNotaCreditoSoli.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=detanotacreditosoliLogic.getDetaNotaCreditoSolis().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=detanotacreditosolis.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosDetaNotaCreditoSoli.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosDetaNotaCreditoSoli.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosDetaNotaCreditoSoli();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoDetaNotaCreditoSoli=false;
					
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
			
				if(this.detanotacreditosoliSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetaNotaCreditoSoli.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.detanotacreditosoli.getsType().equals("DUPLICADO")
				   || this.detanotacreditosoli.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoDetaNotaCreditoSoli=true;
				
				} else {
					this.isEsNuevoDetaNotaCreditoSoli=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
					if(this.detanotacreditosoli.getId()>=0 && !this.detanotacreditosoli.getIsNew()) {						
						this.isEsNuevoDetaNotaCreditoSoli=false;
						
					} else {
						this.isEsNuevoDetaNotaCreditoSoli=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoDetaNotaCreditoSoli(esRelaciones);						
				
				this.seleccionarDetaNotaCreditoSoli(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.detanotacreditosoli.getId()<0) {
					this.isEsNuevoDetaNotaCreditoSoli=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarDetaNotaCreditoSoli(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarDetaNotaCreditoSoli(evt,rowIndex);
				}	
				
				if(this.detanotacreditosoliSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion DetaNotaCreditoSoli: " + this.dDif); 
					}
				}								
				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarDetaNotaCreditoSoli(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.detanotacreditosoli)) {
					if(this.detanotacreditosoli.getId()>0) {
						this.detanotacreditosoli.setIsDeleted(true);
						
						this.detanotacreditosolisEliminados.add(this.detanotacreditosoli);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().remove(this.detanotacreditosoli);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.detanotacreditosolis.remove(this.detanotacreditosoli);				
					}
					
					
					((DetaNotaCreditoSoliModel) this.jTableDatosDetaNotaCreditoSoli.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaDetaNotaCreditoSoli(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarDetaNotaCreditoSoli(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoDetaNotaCreditoSoli) {
			
			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosDetaNotaCreditoSoli.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioDetaNotaCreditoSoli(this.detanotacreditosoli);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.detanotacreditosoliConstantesFunciones.cargarid_empresaDetaNotaCreditoSoli || this.detanotacreditosoliConstantesFunciones.event_dependid_empresaDetaNotaCreditoSoli) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.detanotacreditosoli.getid_empresa());
									//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(detanotacreditosoli.getEmpresa()!=null) {
							this.empresasForeignKey.add(detanotacreditosoli.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.detanotacreditosoli.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.detanotacreditosoliConstantesFunciones.cargarid_sucursalDetaNotaCreditoSoli || this.detanotacreditosoliConstantesFunciones.event_dependid_sucursalDetaNotaCreditoSoli) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.detanotacreditosoli.getid_sucursal());
									//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(detanotacreditosoli.getSucursal()!=null) {
							this.sucursalsForeignKey.add(detanotacreditosoli.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.detanotacreditosoli.getid_sucursal(),false,"Formulario");

					//Ejercicio
					if(!this.detanotacreditosoliConstantesFunciones.cargarid_ejercicioDetaNotaCreditoSoli || this.detanotacreditosoliConstantesFunciones.event_dependid_ejercicioDetaNotaCreditoSoli) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.detanotacreditosoli.getid_ejercicio());
									//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(detanotacreditosoli.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(detanotacreditosoli.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.detanotacreditosoli.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.detanotacreditosoliConstantesFunciones.cargarid_periodoDetaNotaCreditoSoli || this.detanotacreditosoliConstantesFunciones.event_dependid_periodoDetaNotaCreditoSoli) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.detanotacreditosoli.getid_periodo());
									//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(detanotacreditosoli.getPeriodo()!=null) {
							this.periodosForeignKey.add(detanotacreditosoli.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.detanotacreditosoli.getid_periodo(),false,"Formulario");

					//Anio
					if(!this.detanotacreditosoliConstantesFunciones.cargarid_anioDetaNotaCreditoSoli || this.detanotacreditosoliConstantesFunciones.event_dependid_anioDetaNotaCreditoSoli) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.detanotacreditosoli.getid_anio());
									//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(detanotacreditosoli.getAnio()!=null) {
							this.aniosForeignKey.add(detanotacreditosoli.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.detanotacreditosoli.getid_anio(),false,"Formulario");

					//Mes
					if(!this.detanotacreditosoliConstantesFunciones.cargarid_mesDetaNotaCreditoSoli || this.detanotacreditosoliConstantesFunciones.event_dependid_mesDetaNotaCreditoSoli) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.detanotacreditosoli.getid_mes());
									//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(detanotacreditosoli.getMes()!=null) {
							this.messForeignKey.add(detanotacreditosoli.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.detanotacreditosoli.getid_mes(),false,"Formulario");

					//NotaCreditoSoli
					if(!this.detanotacreditosoliConstantesFunciones.cargarid_nota_credito_soliDetaNotaCreditoSoli || this.detanotacreditosoliConstantesFunciones.event_dependid_nota_credito_soliDetaNotaCreditoSoli) {
						//this.cargarCombosNotaCreditoSolisForeignKeyLista(" where id="+this.detanotacreditosoli.getid_nota_credito_soli());
									//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
						this.notacreditosolisForeignKey=new ArrayList<NotaCreditoSoli>();

						if(detanotacreditosoli.getNotaCreditoSoli()!=null) {
							this.notacreditosolisForeignKey.add(detanotacreditosoli.getNotaCreditoSoli());
						}

						this.addItemDefectoCombosForeignKeyNotaCreditoSoli();
						this.cargarCombosFrameNotaCreditoSolisForeignKey("Todos");
					}
					this.setActualNotaCreditoSoliForeignKey(this.detanotacreditosoli.getid_nota_credito_soli(),false,"Formulario");

					//Bodega
					if(!this.detanotacreditosoliConstantesFunciones.cargarid_bodegaDetaNotaCreditoSoli || this.detanotacreditosoliConstantesFunciones.event_dependid_bodegaDetaNotaCreditoSoli) {
						//this.cargarCombosBodegasForeignKeyLista(" where id="+this.detanotacreditosoli.getid_bodega());
									//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
						this.bodegasForeignKey=new ArrayList<Bodega>();

						if(detanotacreditosoli.getBodega()!=null) {
							this.bodegasForeignKey.add(detanotacreditosoli.getBodega());
						}

						this.addItemDefectoCombosForeignKeyBodega();
						this.cargarCombosFrameBodegasForeignKey("Todos");
					}
					this.setActualBodegaForeignKey(this.detanotacreditosoli.getid_bodega(),false,"Formulario");

					//Producto
					if(!this.detanotacreditosoliConstantesFunciones.cargarid_productoDetaNotaCreditoSoli || this.detanotacreditosoliConstantesFunciones.event_dependid_productoDetaNotaCreditoSoli) {
						//this.cargarCombosProductosForeignKeyLista(" where id="+this.detanotacreditosoli.getid_producto());
									//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
						this.productosForeignKey=new ArrayList<Producto>();

						if(detanotacreditosoli.getProducto()!=null) {
							this.productosForeignKey.add(detanotacreditosoli.getProducto());
						}

						this.addItemDefectoCombosForeignKeyProducto();
						this.cargarCombosFrameProductosForeignKey("Todos");
					}
					this.setActualProductoForeignKey(this.detanotacreditosoli.getid_producto(),false,"Formulario");

					//Unidad
					if(!this.detanotacreditosoliConstantesFunciones.cargarid_unidadDetaNotaCreditoSoli || this.detanotacreditosoliConstantesFunciones.event_dependid_unidadDetaNotaCreditoSoli) {
						//this.cargarCombosUnidadsForeignKeyLista(" where id="+this.detanotacreditosoli.getid_unidad());
									//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
						this.unidadsForeignKey=new ArrayList<Unidad>();

						if(detanotacreditosoli.getUnidad()!=null) {
							this.unidadsForeignKey.add(detanotacreditosoli.getUnidad());
						}

						this.addItemDefectoCombosForeignKeyUnidad();
						this.cargarCombosFrameUnidadsForeignKey("Todos");
					}
					this.setActualUnidadForeignKey(this.detanotacreditosoli.getid_unidad(),false,"Formulario");

					//Empaque
					if(!this.detanotacreditosoliConstantesFunciones.cargarid_empaqueDetaNotaCreditoSoli || this.detanotacreditosoliConstantesFunciones.event_dependid_empaqueDetaNotaCreditoSoli) {
						//this.cargarCombosEmpaquesForeignKeyLista(" where id="+this.detanotacreditosoli.getid_empaque());
									//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
						this.empaquesForeignKey=new ArrayList<Empaque>();

						if(detanotacreditosoli.getEmpaque()!=null) {
							this.empaquesForeignKey.add(detanotacreditosoli.getEmpaque());
						}

						this.addItemDefectoCombosForeignKeyEmpaque();
						this.cargarCombosFrameEmpaquesForeignKey("Todos");
					}
					this.setActualEmpaqueForeignKey(this.detanotacreditosoli.getid_empaque(),false,"Formulario");

					//TipoDevolucionEmpresa
					if(!this.detanotacreditosoliConstantesFunciones.cargarid_tipo_devolucion_empresaDetaNotaCreditoSoli || this.detanotacreditosoliConstantesFunciones.event_dependid_tipo_devolucion_empresaDetaNotaCreditoSoli) {
						//this.cargarCombosTipoDevolucionEmpresasForeignKeyLista(" where id="+this.detanotacreditosoli.getid_tipo_devolucion_empresa());
									//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
						this.tipodevolucionempresasForeignKey=new ArrayList<TipoDevolucionEmpresa>();

						if(detanotacreditosoli.getTipoDevolucionEmpresa()!=null) {
							this.tipodevolucionempresasForeignKey.add(detanotacreditosoli.getTipoDevolucionEmpresa());
						}

						this.addItemDefectoCombosForeignKeyTipoDevolucionEmpresa();
						this.cargarCombosFrameTipoDevolucionEmpresasForeignKey("Todos");
					}
					this.setActualTipoDevolucionEmpresaForeignKey(this.detanotacreditosoli.getid_tipo_devolucion_empresa(),false,"Formulario");

					//CentroCosto
					if(!this.detanotacreditosoliConstantesFunciones.cargarid_centro_costoDetaNotaCreditoSoli || this.detanotacreditosoliConstantesFunciones.event_dependid_centro_costoDetaNotaCreditoSoli) {
						//this.cargarCombosCentroCostosForeignKeyLista(" where id="+this.detanotacreditosoli.getid_centro_costo());
									//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
						this.centrocostosForeignKey=new ArrayList<CentroCosto>();

						if(detanotacreditosoli.getCentroCosto()!=null) {
							this.centrocostosForeignKey.add(detanotacreditosoli.getCentroCosto());
						}

						this.addItemDefectoCombosForeignKeyCentroCosto();
						this.cargarCombosFrameCentroCostosForeignKey("Todos");
					}
					this.setActualCentroCostoForeignKey(this.detanotacreditosoli.getid_centro_costo(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesDetaNotaCreditoSoli("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesDetaNotaCreditoSoli(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualDetaNotaCreditoSoli() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetaNotaCreditoSoli(DetaNotaCreditoSoli detanotacreditosoli) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoDetaNotaCreditoSoli(detanotacreditosoli,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoDetaNotaCreditoSoli(DetaNotaCreditoSoli detanotacreditosoli,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioDetaNotaCreditoSoli(detanotacreditosoli);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyDetaNotaCreditoSoli(detanotacreditosoli,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyDetaNotaCreditoSoli(detanotacreditosoli);
	}
	
	public void setVariablesObjetoActualToFormularioDetaNotaCreditoSoli(DetaNotaCreditoSoli detanotacreditosoli) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelidDetaNotaCreditoSoli.setText(detanotacreditosoli.getId().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldcantidadDetaNotaCreditoSoli.setText(detanotacreditosoli.getcantidad().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldprecioDetaNotaCreditoSoli.setText(detanotacreditosoli.getprecio().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldporcen_descuenDetaNotaCreditoSoli.setText(detanotacreditosoli.getporcen_descuen().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFielddescuentoDetaNotaCreditoSoli.setText(detanotacreditosoli.getdescuento().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldimpuestoDetaNotaCreditoSoli.setText(detanotacreditosoli.getimpuesto().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldporcen_ivaDetaNotaCreditoSoli.setText(detanotacreditosoli.getporcen_iva().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldtotalDetaNotaCreditoSoli.setText(detanotacreditosoli.gettotal().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextAreadescripcionDetaNotaCreditoSoli.setText(detanotacreditosoli.getdescripcion());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,DetaNotaCreditoSoli detanotacreditosoliLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,detanotacreditosoliLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,DetaNotaCreditoSoli detanotacreditosoliLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				detanotacreditosoliLocal=this.detanotacreditosoli;
			} else {
				detanotacreditosoliLocal=this.detanotacreditosoliAnterior;
			}
		}
		
		if(this.permiteMantenimiento(detanotacreditosoliLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoDetaNotaCreditoSoli(detanotacreditosoliLocal,true);
					
					if(detanotacreditosoliSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(detanotacreditosoliLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(detanotacreditosoliLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoDetaNotaCreditoSoli(DetaNotaCreditoSoli detanotacreditosoli,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(detanotacreditosoli,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(detanotacreditosoli);
	}
	
	public void setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(DetaNotaCreditoSoli detanotacreditosoli,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(detanotacreditosoli,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(DetaNotaCreditoSoli detanotacreditosoli,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelidDetaNotaCreditoSoli.getText()==null || this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelidDetaNotaCreditoSoli.getText()=="" || this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelidDetaNotaCreditoSoli.getText()=="Id") {
				this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelidDetaNotaCreditoSoli.setText("0");
			}

			if(conColumnasBase) {detanotacreditosoli.setId(Long.parseLong(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelidDetaNotaCreditoSoli.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoSoliConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelIdDetaNotaCreditoSoli,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacreditosoli.setcantidad(Integer.parseInt(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldcantidadDetaNotaCreditoSoli.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoSoliConstantesFunciones.LABEL_CANTIDAD+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelcantidadDetaNotaCreditoSoli,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacreditosoli.setprecio(Double.parseDouble(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldprecioDetaNotaCreditoSoli.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoSoliConstantesFunciones.LABEL_PRECIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelprecioDetaNotaCreditoSoli,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacreditosoli.setporcen_descuen(Double.parseDouble(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldporcen_descuenDetaNotaCreditoSoli.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENDESCUEN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelporcen_descuenDetaNotaCreditoSoli,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacreditosoli.setdescuento(Double.parseDouble(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFielddescuentoDetaNotaCreditoSoli.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabeldescuentoDetaNotaCreditoSoli,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacreditosoli.setimpuesto(Double.parseDouble(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldimpuestoDetaNotaCreditoSoli.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoSoliConstantesFunciones.LABEL_IMPUESTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelimpuestoDetaNotaCreditoSoli,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacreditosoli.setporcen_iva(Double.parseDouble(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldporcen_ivaDetaNotaCreditoSoli.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelporcen_ivaDetaNotaCreditoSoli,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacreditosoli.settotal(Double.parseDouble(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldtotalDetaNotaCreditoSoli.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoSoliConstantesFunciones.LABEL_TOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabeltotalDetaNotaCreditoSoli,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			detanotacreditosoli.setdescripcion(this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextAreadescripcionDetaNotaCreditoSoli.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabeldescripcionDetaNotaCreditoSoli,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualDetaNotaCreditoSoli(DetaNotaCreditoSoli detanotacreditosoliBean,DetaNotaCreditoSoli detanotacreditosoli,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosDetaNotaCreditoSoli(DetaNotaCreditoSoli detanotacreditosoliOrigen,DetaNotaCreditoSoli detanotacreditosoli,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detanotacreditosoliOrigen.getId()!=null && !detanotacreditosoliOrigen.getId().equals(0L))) {detanotacreditosoli.setId(detanotacreditosoliOrigen.getId());}}
			if(conDefault || (!conDefault && detanotacreditosoliOrigen.getcantidad()!=null && !detanotacreditosoliOrigen.getcantidad().equals(0))) {detanotacreditosoli.setcantidad(detanotacreditosoliOrigen.getcantidad());}
			if(conDefault || (!conDefault && detanotacreditosoliOrigen.getprecio()!=null && !detanotacreditosoliOrigen.getprecio().equals(0.0))) {detanotacreditosoli.setprecio(detanotacreditosoliOrigen.getprecio());}
			if(conDefault || (!conDefault && detanotacreditosoliOrigen.getporcen_descuen()!=null && !detanotacreditosoliOrigen.getporcen_descuen().equals(0.0))) {detanotacreditosoli.setporcen_descuen(detanotacreditosoliOrigen.getporcen_descuen());}
			if(conDefault || (!conDefault && detanotacreditosoliOrigen.getdescuento()!=null && !detanotacreditosoliOrigen.getdescuento().equals(0.0))) {detanotacreditosoli.setdescuento(detanotacreditosoliOrigen.getdescuento());}
			if(conDefault || (!conDefault && detanotacreditosoliOrigen.getimpuesto()!=null && !detanotacreditosoliOrigen.getimpuesto().equals(0.0))) {detanotacreditosoli.setimpuesto(detanotacreditosoliOrigen.getimpuesto());}
			if(conDefault || (!conDefault && detanotacreditosoliOrigen.getporcen_iva()!=null && !detanotacreditosoliOrigen.getporcen_iva().equals(0.0))) {detanotacreditosoli.setporcen_iva(detanotacreditosoliOrigen.getporcen_iva());}
			if(conDefault || (!conDefault && detanotacreditosoliOrigen.gettotal()!=null && !detanotacreditosoliOrigen.gettotal().equals(0.0))) {detanotacreditosoli.settotal(detanotacreditosoliOrigen.gettotal());}
			if(conDefault || (!conDefault && detanotacreditosoliOrigen.getdescripcion()!=null && !detanotacreditosoliOrigen.getdescripcion().equals(""))) {detanotacreditosoli.setdescripcion(detanotacreditosoliOrigen.getdescripcion());}
			if(conDefault || (!conDefault && detanotacreditosoliOrigen.getcodigo_lote()!=null && !detanotacreditosoliOrigen.getcodigo_lote().equals(""))) {detanotacreditosoli.setcodigo_lote(detanotacreditosoliOrigen.getcodigo_lote());}
			if(conDefault || (!conDefault && detanotacreditosoliOrigen.getnumero_caja()!=null && !detanotacreditosoliOrigen.getnumero_caja().equals(""))) {detanotacreditosoli.setnumero_caja(detanotacreditosoliOrigen.getnumero_caja());}
			if(conDefault || (!conDefault && detanotacreditosoliOrigen.getdescuento2()!=null && !detanotacreditosoliOrigen.getdescuento2().equals(0.0))) {detanotacreditosoli.setdescuento2(detanotacreditosoliOrigen.getdescuento2());}
			if(conDefault || (!conDefault && detanotacreditosoliOrigen.getcosto()!=null && !detanotacreditosoliOrigen.getcosto().equals(0.0))) {detanotacreditosoli.setcosto(detanotacreditosoliOrigen.getcosto());}
			if(conDefault || (!conDefault && detanotacreditosoliOrigen.getincluye_impuesto()!=null && !detanotacreditosoliOrigen.getincluye_impuesto().equals(false))) {detanotacreditosoli.setincluye_impuesto(detanotacreditosoliOrigen.getincluye_impuesto());}
			if(conDefault || (!conDefault && detanotacreditosoliOrigen.getporcen_ice()!=null && !detanotacreditosoliOrigen.getporcen_ice().equals(0.0))) {detanotacreditosoli.setporcen_ice(detanotacreditosoliOrigen.getporcen_ice());}
			if(conDefault || (!conDefault && detanotacreditosoliOrigen.getfecha_emision()!=null && !detanotacreditosoliOrigen.getfecha_emision().equals(new Date()))) {detanotacreditosoli.setfecha_emision(detanotacreditosoliOrigen.getfecha_emision());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetaNotaCreditoSoli(DetaNotaCreditoSoli detanotacreditosoli) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelidDetaNotaCreditoSoli.setText(detanotacreditosoli.getId().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldcantidadDetaNotaCreditoSoli.setText(detanotacreditosoli.getcantidad().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldprecioDetaNotaCreditoSoli.setText(detanotacreditosoli.getprecio().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldporcen_descuenDetaNotaCreditoSoli.setText(detanotacreditosoli.getporcen_descuen().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFielddescuentoDetaNotaCreditoSoli.setText(detanotacreditosoli.getdescuento().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldimpuestoDetaNotaCreditoSoli.setText(detanotacreditosoli.getimpuesto().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldporcen_ivaDetaNotaCreditoSoli.setText(detanotacreditosoli.getporcen_iva().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldtotalDetaNotaCreditoSoli.setText(detanotacreditosoli.gettotal().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextAreadescripcionDetaNotaCreditoSoli.setText(detanotacreditosoli.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioDetaNotaCreditoSoli(DetaNotaCreditoSoliBean detanotacreditosoliBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelidDetaNotaCreditoSoli.setText(detanotacreditosoliBean.getId().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldcantidadDetaNotaCreditoSoli.setText(detanotacreditosoliBean.getcantidad().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldprecioDetaNotaCreditoSoli.setText(detanotacreditosoliBean.getprecio().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldporcen_descuenDetaNotaCreditoSoli.setText(detanotacreditosoliBean.getporcen_descuen().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFielddescuentoDetaNotaCreditoSoli.setText(detanotacreditosoliBean.getdescuento().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldimpuestoDetaNotaCreditoSoli.setText(detanotacreditosoliBean.getimpuesto().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldporcen_ivaDetaNotaCreditoSoli.setText(detanotacreditosoliBean.getporcen_iva().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldtotalDetaNotaCreditoSoli.setText(detanotacreditosoliBean.gettotal().toString());
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextAreadescripcionDetaNotaCreditoSoli.setText(detanotacreditosoliBean.getdescripcion());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanDetaNotaCreditoSoli(DetaNotaCreditoSoliParameterReturnGeneral detanotacreditosoliReturnGeneral,DetaNotaCreditoSoliBean detanotacreditosoliBean,Boolean conDefault) throws Exception { 
		try {
			DetaNotaCreditoSoli detanotacreditosoliLocal=new DetaNotaCreditoSoli();
			
			detanotacreditosoliLocal=detanotacreditosoliReturnGeneral.getDetaNotaCreditoSoli();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && detanotacreditosoliLocal.getId()!=null && !detanotacreditosoliLocal.getId().equals(0L))) {detanotacreditosoliBean.setId(detanotacreditosoliLocal.getId());}}
			if(conDefault || (!conDefault && detanotacreditosoliLocal.getcantidad()!=null && !detanotacreditosoliLocal.getcantidad().equals(0))) {detanotacreditosoliBean.setcantidad(detanotacreditosoliLocal.getcantidad());}
			if(conDefault || (!conDefault && detanotacreditosoliLocal.getprecio()!=null && !detanotacreditosoliLocal.getprecio().equals(0.0))) {detanotacreditosoliBean.setprecio(detanotacreditosoliLocal.getprecio());}
			if(conDefault || (!conDefault && detanotacreditosoliLocal.getporcen_descuen()!=null && !detanotacreditosoliLocal.getporcen_descuen().equals(0.0))) {detanotacreditosoliBean.setporcen_descuen(detanotacreditosoliLocal.getporcen_descuen());}
			if(conDefault || (!conDefault && detanotacreditosoliLocal.getdescuento()!=null && !detanotacreditosoliLocal.getdescuento().equals(0.0))) {detanotacreditosoliBean.setdescuento(detanotacreditosoliLocal.getdescuento());}
			if(conDefault || (!conDefault && detanotacreditosoliLocal.getimpuesto()!=null && !detanotacreditosoliLocal.getimpuesto().equals(0.0))) {detanotacreditosoliBean.setimpuesto(detanotacreditosoliLocal.getimpuesto());}
			if(conDefault || (!conDefault && detanotacreditosoliLocal.getporcen_iva()!=null && !detanotacreditosoliLocal.getporcen_iva().equals(0.0))) {detanotacreditosoliBean.setporcen_iva(detanotacreditosoliLocal.getporcen_iva());}
			if(conDefault || (!conDefault && detanotacreditosoliLocal.gettotal()!=null && !detanotacreditosoliLocal.gettotal().equals(0.0))) {detanotacreditosoliBean.settotal(detanotacreditosoliLocal.gettotal());}
			if(conDefault || (!conDefault && detanotacreditosoliLocal.getdescripcion()!=null && !detanotacreditosoliLocal.getdescripcion().equals(""))) {detanotacreditosoliBean.setdescripcion(detanotacreditosoliLocal.getdescripcion());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxDetaNotaCreditoSoliGenerico(Long idDetaNotaCreditoSoliSeleccionado,JComboBox jComboBoxDetaNotaCreditoSoli,List<DetaNotaCreditoSoli> detanotacreditosolisLocal)throws Exception {
		try {
			DetaNotaCreditoSoli  detanotacreditosoliTemp=null;

			for(DetaNotaCreditoSoli detanotacreditosoliAux:detanotacreditosolisLocal) {
				if(detanotacreditosoliAux.getId()!=null && detanotacreditosoliAux.getId().equals(idDetaNotaCreditoSoliSeleccionado)) {
					detanotacreditosoliTemp=detanotacreditosoliAux;
					break;
				}
			}

			jComboBoxDetaNotaCreditoSoli.setSelectedItem(detanotacreditosoliTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxDetaNotaCreditoSoliGenerico(JComboBox jComboBoxDetaNotaCreditoSoli,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxDetaNotaCreditoSoli.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetaNotaCreditoSoli.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxDetaNotaCreditoSoli.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxDetaNotaCreditoSoli.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetaNotaCreditoSoli.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxDetaNotaCreditoSoli.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxDetaNotaCreditoSoli.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxDetaNotaCreditoSoli.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxDetaNotaCreditoSoli.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxDetaNotaCreditoSoli.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detanotacreditosoli=(DetaNotaCreditoSoli) detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detanotacreditosoli =(DetaNotaCreditoSoli) detanotacreditosolis.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!detanotacreditosoli.getIsNew() && !detanotacreditosoli.getIsChanged() && !detanotacreditosoli.getIsDeleted()) {
				sDescripcion=detanotacreditosoli.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacreditosoli.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!detanotacreditosoli.getIsNew() && !detanotacreditosoli.getIsChanged() && !detanotacreditosoli.getIsDeleted()) {
				sDescripcion=detanotacreditosoli.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacreditosoli.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!detanotacreditosoli.getIsNew() && !detanotacreditosoli.getIsChanged() && !detanotacreditosoli.getIsDeleted()) {
				sDescripcion=detanotacreditosoli.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacreditosoli.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!detanotacreditosoli.getIsNew() && !detanotacreditosoli.getIsChanged() && !detanotacreditosoli.getIsDeleted()) {
				sDescripcion=detanotacreditosoli.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacreditosoli.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!detanotacreditosoli.getIsNew() && !detanotacreditosoli.getIsChanged() && !detanotacreditosoli.getIsDeleted()) {
				sDescripcion=detanotacreditosoli.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacreditosoli.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!detanotacreditosoli.getIsNew() && !detanotacreditosoli.getIsChanged() && !detanotacreditosoli.getIsDeleted()) {
				sDescripcion=detanotacreditosoli.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacreditosoli.getmes_descripcion();
			}
		}

		if(sTipo.equals("NotaCreditoSoli")) {
			//sDescripcion=this.getActualNotaCreditoSoliForeignKeyDescripcion((Long)value);
			if(!detanotacreditosoli.getIsNew() && !detanotacreditosoli.getIsChanged() && !detanotacreditosoli.getIsDeleted()) {
				sDescripcion=detanotacreditosoli.getnotacreditosoli_descripcion();
			} else {
				//sDescripcion=this.getActualNotaCreditoSoliForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacreditosoli.getnotacreditosoli_descripcion();
			}
		}

		if(sTipo.equals("Bodega")) {
			//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
			if(!detanotacreditosoli.getIsNew() && !detanotacreditosoli.getIsChanged() && !detanotacreditosoli.getIsDeleted()) {
				sDescripcion=detanotacreditosoli.getbodega_descripcion();
			} else {
				//sDescripcion=this.getActualBodegaForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacreditosoli.getbodega_descripcion();
			}
		}

		if(sTipo.equals("Producto")) {
			//sDescripcion=this.getActualProductoForeignKeyDescripcion((Long)value);
			if(!detanotacreditosoli.getIsNew() && !detanotacreditosoli.getIsChanged() && !detanotacreditosoli.getIsDeleted()) {
				sDescripcion=detanotacreditosoli.getproducto_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=detanotacreditosoli.getproducto_descripcion();
			}
		}

		if(sTipo.equals("Unidad")) {
			//sDescripcion=this.getActualUnidadForeignKeyDescripcion((Long)value);
			if(!detanotacreditosoli.getIsNew() && !detanotacreditosoli.getIsChanged() && !detanotacreditosoli.getIsDeleted()) {
				sDescripcion=detanotacreditosoli.getunidad_descripcion();
			} else {
				//ES DEPENDIENTE, SE FORZA DESDE DESCRIPCION
				sDescripcion=detanotacreditosoli.getunidad_descripcion();
			}
		}

		if(sTipo.equals("Empaque")) {
			//sDescripcion=this.getActualEmpaqueForeignKeyDescripcion((Long)value);
			if(!detanotacreditosoli.getIsNew() && !detanotacreditosoli.getIsChanged() && !detanotacreditosoli.getIsDeleted()) {
				sDescripcion=detanotacreditosoli.getempaque_descripcion();
			} else {
				//sDescripcion=this.getActualEmpaqueForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacreditosoli.getempaque_descripcion();
			}
		}

		if(sTipo.equals("TipoDevolucionEmpresa")) {
			//sDescripcion=this.getActualTipoDevolucionEmpresaForeignKeyDescripcion((Long)value);
			if(!detanotacreditosoli.getIsNew() && !detanotacreditosoli.getIsChanged() && !detanotacreditosoli.getIsDeleted()) {
				sDescripcion=detanotacreditosoli.gettipodevolucionempresa_descripcion();
			} else {
				//sDescripcion=this.getActualTipoDevolucionEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacreditosoli.gettipodevolucionempresa_descripcion();
			}
		}

		if(sTipo.equals("CentroCosto")) {
			//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
			if(!detanotacreditosoli.getIsNew() && !detanotacreditosoli.getIsChanged() && !detanotacreditosoli.getIsDeleted()) {
				sDescripcion=detanotacreditosoli.getcentrocosto_descripcion();
			} else {
				//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
				sDescripcion=detanotacreditosoli.getcentrocosto_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		DetaNotaCreditoSoli detanotacreditosoliRow=new DetaNotaCreditoSoli();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detanotacreditosoliRow=(DetaNotaCreditoSoli) detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			detanotacreditosoliRow=(DetaNotaCreditoSoli) detanotacreditosolis.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualDetaNotaCreditoSoli(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaNuevoDetaNotaCreditoSoli && this.isPermisoNuevoDetaNotaCreditoSoli));			
			this.jButtonDuplicarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaDuplicarDetaNotaCreditoSoli && this.isPermisoDuplicarDetaNotaCreditoSoli));			
			this.jButtonCopiarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaCopiarDetaNotaCreditoSoli && this.isPermisoCopiarDetaNotaCreditoSoli));
			this.jButtonVerFormDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaVerFormDetaNotaCreditoSoli && this.isPermisoVerFormDetaNotaCreditoSoli));
			
			this.jButtonAbrirOrderByDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaOrdenDetaNotaCreditoSoli && this.isPermisoOrdenDetaNotaCreditoSoli));			
			
			this.jButtonNuevoRelacionesDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli && this.isPermisoNuevoDetaNotaCreditoSoli));			
			this.jButtonNuevoGuardarCambiosDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaNuevoDetaNotaCreditoSoli && this.isPermisoNuevoDetaNotaCreditoSoli && this.isPermisoGuardarCambiosDetaNotaCreditoSoli));
			
			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonModificarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaModificarDetaNotaCreditoSoli && this.isPermisoActualizarDetaNotaCreditoSoli));	
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonActualizarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaActualizarDetaNotaCreditoSoli && this.isPermisoActualizarDetaNotaCreditoSoli));	
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonEliminarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaEliminarDetaNotaCreditoSoli && this.isPermisoEliminarDetaNotaCreditoSoli));
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonCancelarDetaNotaCreditoSoli.setVisible(this.isVisibilidadCeldaCancelarDetaNotaCreditoSoli);							
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonGuardarCambiosDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli && this.isPermisoGuardarCambiosDetaNotaCreditoSoli));			
			
			}
						
			this.jButtonGuardarCambiosTablaDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli && this.isPermisoGuardarCambiosDetaNotaCreditoSoli));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaNuevoDetaNotaCreditoSoli && this.isPermisoNuevoDetaNotaCreditoSoli));						
			this.jButtonDuplicarToolBarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaDuplicarDetaNotaCreditoSoli && this.isPermisoDuplicarDetaNotaCreditoSoli));						
			this.jButtonCopiarToolBarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaCopiarDetaNotaCreditoSoli && this.isPermisoCopiarDetaNotaCreditoSoli));			
			this.jButtonVerFormToolBarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaVerFormDetaNotaCreditoSoli && this.isPermisoVerFormDetaNotaCreditoSoli));			
			this.jButtonAbrirOrderByToolBarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaOrdenDetaNotaCreditoSoli && this.isPermisoOrdenDetaNotaCreditoSoli));
			this.jButtonNuevoRelacionesToolBarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli && this.isPermisoNuevoDetaNotaCreditoSoli));			
			this.jButtonNuevoGuardarCambiosToolBarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaNuevoDetaNotaCreditoSoli && this.isPermisoNuevoDetaNotaCreditoSoli && this.isPermisoGuardarCambiosDetaNotaCreditoSoli));			
			
			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonModificarToolBarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaModificarDetaNotaCreditoSoli && this.isPermisoActualizarDetaNotaCreditoSoli));	
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonActualizarToolBarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaActualizarDetaNotaCreditoSoli  && this.isPermisoActualizarDetaNotaCreditoSoli));	
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonEliminarToolBarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaEliminarDetaNotaCreditoSoli && this.isPermisoEliminarDetaNotaCreditoSoli));
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonCancelarToolBarDetaNotaCreditoSoli.setVisible(this.isVisibilidadCeldaCancelarDetaNotaCreditoSoli);				
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonGuardarCambiosToolBarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli && this.isPermisoGuardarCambiosDetaNotaCreditoSoli));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli && this.isPermisoGuardarCambiosDetaNotaCreditoSoli));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaNuevoDetaNotaCreditoSoli && this.isPermisoNuevoDetaNotaCreditoSoli));			
			this.jMenuItemDuplicarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaDuplicarDetaNotaCreditoSoli && this.isPermisoDuplicarDetaNotaCreditoSoli));			
			this.jMenuItemCopiarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaCopiarDetaNotaCreditoSoli && this.isPermisoCopiarDetaNotaCreditoSoli));			
			this.jMenuItemVerFormDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaVerFormDetaNotaCreditoSoli && this.isPermisoVerFormDetaNotaCreditoSoli));			
			this.jMenuItemAbrirOrderByDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaOrdenDetaNotaCreditoSoli && this.isPermisoOrdenDetaNotaCreditoSoli));			
			//this.jMenuItemMostrarOcultarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaOrdenDetaNotaCreditoSoli && this.isPermisoOrdenDetaNotaCreditoSoli));
			this.jMenuItemDetalleAbrirOrderByDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaOrdenDetaNotaCreditoSoli && this.isPermisoOrdenDetaNotaCreditoSoli));			
			//this.jMenuItemDetalleMostrarOcultarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaOrdenDetaNotaCreditoSoli && this.isPermisoOrdenDetaNotaCreditoSoli));			
			this.jMenuItemNuevoRelacionesDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli && this.isPermisoNuevoDetaNotaCreditoSoli));			
			this.jMenuItemNuevoGuardarCambiosDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaNuevoDetaNotaCreditoSoli && this.isPermisoNuevoDetaNotaCreditoSoli && this.isPermisoGuardarCambiosDetaNotaCreditoSoli));									
			
			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jMenuItemModificarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaModificarDetaNotaCreditoSoli && this.isPermisoActualizarDetaNotaCreditoSoli));	
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jMenuItemActualizarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaActualizarDetaNotaCreditoSoli && this.isPermisoActualizarDetaNotaCreditoSoli));	
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jMenuItemEliminarDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaEliminarDetaNotaCreditoSoli && this.isPermisoEliminarDetaNotaCreditoSoli));
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jMenuItemCancelarDetaNotaCreditoSoli.setVisible(this.isVisibilidadCeldaCancelarDetaNotaCreditoSoli);				
			}
			
			this.jMenuItemGuardarCambiosDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli && this.isPermisoGuardarCambiosDetaNotaCreditoSoli));						
			this.jMenuItemGuardarCambiosTablaDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli && this.isPermisoGuardarCambiosDetaNotaCreditoSoli));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoDetaNotaCreditoSoli=this.jButtonNuevoDetaNotaCreditoSoli.isVisible();
			this.isVisibilidadCeldaDuplicarDetaNotaCreditoSoli=this.jButtonDuplicarDetaNotaCreditoSoli.isVisible();
			this.isVisibilidadCeldaCopiarDetaNotaCreditoSoli=this.jButtonCopiarDetaNotaCreditoSoli.isVisible();
			this.isVisibilidadCeldaVerFormDetaNotaCreditoSoli=this.jButtonVerFormDetaNotaCreditoSoli.isVisible();
			
			this.isVisibilidadCeldaOrdenDetaNotaCreditoSoli=this.jButtonAbrirOrderByDetaNotaCreditoSoli.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli=this.jButtonNuevoRelacionesDetaNotaCreditoSoli.isVisible();
			this.isVisibilidadCeldaModificarDetaNotaCreditoSoli=this.jButtonModificarDetaNotaCreditoSoli.isVisible();
			
			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
			this.isVisibilidadCeldaActualizarDetaNotaCreditoSoli=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonActualizarDetaNotaCreditoSoli.isVisible();
			this.isVisibilidadCeldaEliminarDetaNotaCreditoSoli=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonEliminarDetaNotaCreditoSoli.isVisible();
			this.isVisibilidadCeldaCancelarDetaNotaCreditoSoli=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonCancelarDetaNotaCreditoSoli.isVisible();
			this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonGuardarCambiosDetaNotaCreditoSoli.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli=this.jButtonGuardarCambiosTablaDetaNotaCreditoSoli.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoDetaNotaCreditoSoli=this.jButtonNuevoToolBarDetaNotaCreditoSoli.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli=this.jButtonNuevoRelacionesToolBarDetaNotaCreditoSoli.isVisible();
			
			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
			this.isVisibilidadCeldaModificarDetaNotaCreditoSoli=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonModificarToolBarDetaNotaCreditoSoli.isVisible();
			this.isVisibilidadCeldaActualizarDetaNotaCreditoSoli=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonActualizarToolBarDetaNotaCreditoSoli.isVisible();
			this.isVisibilidadCeldaEliminarDetaNotaCreditoSoli=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonEliminarToolBarDetaNotaCreditoSoli.isVisible();
			this.isVisibilidadCeldaCancelarDetaNotaCreditoSoli=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonCancelarToolBarDetaNotaCreditoSoli.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli=this.jButtonGuardarCambiosToolBarDetaNotaCreditoSoli.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli=this.jButtonGuardarCambiosTablaToolBarDetaNotaCreditoSoli.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoDetaNotaCreditoSoli=this.jMenuItemNuevoDetaNotaCreditoSoli.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli=this.jMenuItemNuevoRelacionesDetaNotaCreditoSoli.isVisible();
			
			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
			this.isVisibilidadCeldaModificarDetaNotaCreditoSoli=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jMenuItemModificarDetaNotaCreditoSoli.isVisible();
			this.isVisibilidadCeldaActualizarDetaNotaCreditoSoli=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jMenuItemActualizarDetaNotaCreditoSoli.isVisible();
			this.isVisibilidadCeldaEliminarDetaNotaCreditoSoli=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jMenuItemEliminarDetaNotaCreditoSoli.isVisible();
			this.isVisibilidadCeldaCancelarDetaNotaCreditoSoli=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jMenuItemCancelarDetaNotaCreditoSoli.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli=this.jMenuItemGuardarCambiosDetaNotaCreditoSoli.isVisible();
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli=this.jMenuItemGuardarCambiosTablaDetaNotaCreditoSoli.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesDetaNotaCreditoSoli(Boolean esInicializar) {
		if(DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {			
			if(this.detanotacreditosoliSessionBean.getConGuardarRelaciones()) {
				//if(this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesDetaNotaCreditoSoli();
			}
			
			this.inicializarActualizarBindingBotonesManualDetaNotaCreditoSoli(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualDetaNotaCreditoSoli() {
		this.jButtonNuevoDetaNotaCreditoSoli.setVisible(this.isPermisoNuevoDetaNotaCreditoSoli);			
		this.jButtonDuplicarDetaNotaCreditoSoli.setVisible(this.isPermisoDuplicarDetaNotaCreditoSoli);			
		this.jButtonCopiarDetaNotaCreditoSoli.setVisible(this.isPermisoCopiarDetaNotaCreditoSoli);			
		this.jButtonVerFormDetaNotaCreditoSoli.setVisible(this.isPermisoVerFormDetaNotaCreditoSoli);			
		
		this.jButtonAbrirOrderByDetaNotaCreditoSoli.setVisible(this.isPermisoOrdenDetaNotaCreditoSoli);					
		
		this.jButtonNuevoRelacionesDetaNotaCreditoSoli.setVisible(this.isPermisoNuevoDetaNotaCreditoSoli);			
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonModificarDetaNotaCreditoSoli.setVisible(this.isPermisoActualizarDetaNotaCreditoSoli);	
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonActualizarDetaNotaCreditoSoli.setVisible(this.isPermisoActualizarDetaNotaCreditoSoli);	
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonEliminarDetaNotaCreditoSoli.setVisible(this.isPermisoEliminarDetaNotaCreditoSoli);
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonCancelarDetaNotaCreditoSoli.setVisible(this.isVisibilidadCeldaCancelarDetaNotaCreditoSoli);						
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonGuardarCambiosDetaNotaCreditoSoli.setVisible(this.isPermisoGuardarCambiosDetaNotaCreditoSoli);							
		}
		
		this.jButtonGuardarCambiosTablaDetaNotaCreditoSoli.setVisible(this.isPermisoActualizarDetaNotaCreditoSoli);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleDetaNotaCreditoSoli() {
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonModificarDetaNotaCreditoSoli.setVisible(this.isPermisoActualizarDetaNotaCreditoSoli);	
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonActualizarDetaNotaCreditoSoli.setVisible(this.isPermisoActualizarDetaNotaCreditoSoli);	
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonEliminarDetaNotaCreditoSoli.setVisible(this.isPermisoEliminarDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonCancelarDetaNotaCreditoSoli.setVisible(this.isVisibilidadCeldaCancelarDetaNotaCreditoSoli);							
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonGuardarCambiosDetaNotaCreditoSoli.setVisible((this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli && this.isPermisoGuardarCambiosDetaNotaCreditoSoli));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosDetaNotaCreditoSoli() {
		if(DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualDetaNotaCreditoSoli();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesDetaNotaCreditoSoli() {
	}
	
	public void jTableDatosDetaNotaCreditoSoliListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarDetaNotaCreditoSoli(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.detanotacreditosoli.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaDetaNotaCreditoSoliUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebDetaNotaCreditoSoli(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCreditoSoli.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCreditoSoli.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.detanotacreditosoliLogic.getConnexion());

				if(this.detanotacreditosoli.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.detanotacreditosoli.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCreditoSoli=(TitledBorder)this.jScrollPanelDatosDetaNotaCreditoSoli.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderDetaNotaCreditoSoli.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.detanotacreditosoli.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalDetaNotaCreditoSoliUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebDetaNotaCreditoSoli(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCreditoSoli.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCreditoSoli.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.detanotacreditosoliLogic.getConnexion());

				if(this.detanotacreditosoli.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.detanotacreditosoli.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCreditoSoli=(TitledBorder)this.jScrollPanelDatosDetaNotaCreditoSoli.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderDetaNotaCreditoSoli.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.detanotacreditosoli.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioDetaNotaCreditoSoliUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebDetaNotaCreditoSoli(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCreditoSoli.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCreditoSoli.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.detanotacreditosoliLogic.getConnexion());

				if(this.detanotacreditosoli.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.detanotacreditosoli.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCreditoSoli=(TitledBorder)this.jScrollPanelDatosDetaNotaCreditoSoli.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderDetaNotaCreditoSoli.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.detanotacreditosoli.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoDetaNotaCreditoSoliUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebDetaNotaCreditoSoli(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCreditoSoli.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCreditoSoli.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.detanotacreditosoliLogic.getConnexion());

				if(this.detanotacreditosoli.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.detanotacreditosoli.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCreditoSoli=(TitledBorder)this.jScrollPanelDatosDetaNotaCreditoSoli.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderDetaNotaCreditoSoli.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.detanotacreditosoli.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioDetaNotaCreditoSoliUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebDetaNotaCreditoSoli(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCreditoSoli.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCreditoSoli.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.detanotacreditosoliLogic.getConnexion());

				if(this.detanotacreditosoli.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.detanotacreditosoli.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCreditoSoli=(TitledBorder)this.jScrollPanelDatosDetaNotaCreditoSoli.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderDetaNotaCreditoSoli.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.detanotacreditosoli.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesDetaNotaCreditoSoliUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebDetaNotaCreditoSoli(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCreditoSoli.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCreditoSoli.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.detanotacreditosoliLogic.getConnexion());

				if(this.detanotacreditosoli.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.detanotacreditosoli.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCreditoSoli=(TitledBorder)this.jScrollPanelDatosDetaNotaCreditoSoli.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderDetaNotaCreditoSoli.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.detanotacreditosoli.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_nota_credito_soliDetaNotaCreditoSoliUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisonotacreditosoli=true;

			idTienePermisonotacreditosoli=this.tienePermisosUsuarioEnPaginaWebDetaNotaCreditoSoli(NotaCreditoSoliConstantesFunciones.CLASSNAME);

			if(idTienePermisonotacreditosoli) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCreditoSoli.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCreditoSoli.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);

				this.notacreditosoliBeanSwingJInternalFrame=new NotaCreditoSoliBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.notacreditosoliBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.notacreditosoliBeanSwingJInternalFrame.getNotaCreditoSoliLogic().setConnexion(this.detanotacreditosoliLogic.getConnexion());

				if(this.detanotacreditosoli.getid_nota_credito_soli()!=null) {
					this.notacreditosoliBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.notacreditosoliBeanSwingJInternalFrame.setIdActual(this.detanotacreditosoli.getid_nota_credito_soli());
					this.notacreditosoliBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.notacreditosoliBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.notacreditosoliBeanSwingJInternalFrame.inicializarActualizarBindingTablaNotaCreditoSoli();
				}

				JInternalFrameBase jinternalFrame =this.notacreditosoliBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCreditoSoli=(TitledBorder)this.jScrollPanelDatosDetaNotaCreditoSoli.getBorder();
				TitledBorder titledBordernotacreditosoli=(TitledBorder)this.notacreditosoliBeanSwingJInternalFrame.jScrollPanelDatosNotaCreditoSoli.getBorder();

				titledBordernotacreditosoli.setTitle(titledBorderDetaNotaCreditoSoli.getTitle() + " -> Solicitud Nota Credito");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_nota_credito_soliDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getid_nota_credito_soli()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_nota_credito_soli = "+this.detanotacreditosoli.getid_nota_credito_soli().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_bodegaDetaNotaCreditoSoliUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisobodega=true;

			idTienePermisobodega=this.tienePermisosUsuarioEnPaginaWebDetaNotaCreditoSoli(BodegaConstantesFunciones.CLASSNAME);

			if(idTienePermisobodega) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCreditoSoli.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCreditoSoli.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);

				this.bodegaBeanSwingJInternalFrame=new BodegaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.bodegaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.bodegaBeanSwingJInternalFrame.getBodegaLogic().setConnexion(this.detanotacreditosoliLogic.getConnexion());

				if(this.detanotacreditosoli.getid_bodega()!=null) {
					this.bodegaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.bodegaBeanSwingJInternalFrame.setIdActual(this.detanotacreditosoli.getid_bodega());
					this.bodegaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.bodegaBeanSwingJInternalFrame.inicializarActualizarBindingTablaBodega();
				}

				JInternalFrameBase jinternalFrame =this.bodegaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCreditoSoli=(TitledBorder)this.jScrollPanelDatosDetaNotaCreditoSoli.getBorder();
				TitledBorder titledBorderbodega=(TitledBorder)this.bodegaBeanSwingJInternalFrame.jScrollPanelDatosBodega.getBorder();

				titledBorderbodega.setTitle(titledBorderDetaNotaCreditoSoli.getTitle() + " -> Bodega");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_bodegaDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getid_bodega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_bodega = "+this.detanotacreditosoli.getid_bodega().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_productoDetaNotaCreditoSoliActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.productoBeanSwingJInternalFrame=new ProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.productoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.productoBeanSwingJInternalFrame.sTipoBusqueda="Producto";

			if(!this.sFinalQueryGeneral_producto.equals("")) {
				this.productoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_producto);
				this.productoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.productoBeanSwingJInternalFrame.procesarBusqueda(this.productoBeanSwingJInternalFrame.sAccionBusqueda);
				this.productoBeanSwingJInternalFrame.inicializarActualizarBindingProducto(false);
			}

			if(!this.sFinalQueryComboProducto.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.productoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetaNotaCreditoSoli=null;
			TitledBorder titledBorderproducto=null;

			if(!this.jScrollPanelDatosDetaNotaCreditoSoli.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetaNotaCreditoSoli=(TitledBorder)this.jScrollPanelDatosDetaNotaCreditoSoli.getBorder();
				titledBorderproducto=(TitledBorder)this.productoBeanSwingJInternalFrame.jScrollPanelDatosProducto.getBorder();

				titledBorderproducto.setTitle(titledBorderDetaNotaCreditoSoli.getTitle() + " -> Producto");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_productoDetaNotaCreditoSoliUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoproducto=true;

			idTienePermisoproducto=this.tienePermisosUsuarioEnPaginaWebDetaNotaCreditoSoli(ProductoConstantesFunciones.CLASSNAME);

			if(idTienePermisoproducto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCreditoSoli.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCreditoSoli.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);

				this.productoBeanSwingJInternalFrame=new ProductoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.productoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.productoBeanSwingJInternalFrame.getProductoLogic().setConnexion(this.detanotacreditosoliLogic.getConnexion());

				if(this.detanotacreditosoli.getid_producto()!=null) {
					this.productoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.productoBeanSwingJInternalFrame.setIdActual(this.detanotacreditosoli.getid_producto());
					this.productoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.productoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.productoBeanSwingJInternalFrame.inicializarActualizarBindingTablaProducto();
				}

				JInternalFrameBase jinternalFrame =this.productoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCreditoSoli=(TitledBorder)this.jScrollPanelDatosDetaNotaCreditoSoli.getBorder();
				TitledBorder titledBorderproducto=(TitledBorder)this.productoBeanSwingJInternalFrame.jScrollPanelDatosProducto.getBorder();

				titledBorderproducto.setTitle(titledBorderDetaNotaCreditoSoli.getTitle() + " -> Producto");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_productoDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getid_producto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_producto = "+this.detanotacreditosoli.getid_producto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_unidadDetaNotaCreditoSoliUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisounidad=true;

			idTienePermisounidad=this.tienePermisosUsuarioEnPaginaWebDetaNotaCreditoSoli(UnidadConstantesFunciones.CLASSNAME);

			if(idTienePermisounidad) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCreditoSoli.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCreditoSoli.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);

				this.unidadBeanSwingJInternalFrame=new UnidadBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.unidadBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.unidadBeanSwingJInternalFrame.getUnidadLogic().setConnexion(this.detanotacreditosoliLogic.getConnexion());

				if(this.detanotacreditosoli.getid_unidad()!=null) {
					this.unidadBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.unidadBeanSwingJInternalFrame.setIdActual(this.detanotacreditosoli.getid_unidad());
					this.unidadBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.unidadBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.unidadBeanSwingJInternalFrame.inicializarActualizarBindingTablaUnidad();
				}

				JInternalFrameBase jinternalFrame =this.unidadBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCreditoSoli=(TitledBorder)this.jScrollPanelDatosDetaNotaCreditoSoli.getBorder();
				TitledBorder titledBorderunidad=(TitledBorder)this.unidadBeanSwingJInternalFrame.jScrollPanelDatosUnidad.getBorder();

				titledBorderunidad.setTitle(titledBorderDetaNotaCreditoSoli.getTitle() + " -> Unidad");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_unidadDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getid_unidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_unidad = "+this.detanotacreditosoli.getid_unidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empaqueDetaNotaCreditoSoliUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempaque=true;

			idTienePermisoempaque=this.tienePermisosUsuarioEnPaginaWebDetaNotaCreditoSoli(EmpaqueConstantesFunciones.CLASSNAME);

			if(idTienePermisoempaque) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCreditoSoli.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCreditoSoli.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);

				this.empaqueBeanSwingJInternalFrame=new EmpaqueBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empaqueBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empaqueBeanSwingJInternalFrame.getEmpaqueLogic().setConnexion(this.detanotacreditosoliLogic.getConnexion());

				if(this.detanotacreditosoli.getid_empaque()!=null) {
					this.empaqueBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empaqueBeanSwingJInternalFrame.setIdActual(this.detanotacreditosoli.getid_empaque());
					this.empaqueBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empaqueBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empaqueBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpaque();
				}

				JInternalFrameBase jinternalFrame =this.empaqueBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCreditoSoli=(TitledBorder)this.jScrollPanelDatosDetaNotaCreditoSoli.getBorder();
				TitledBorder titledBorderempaque=(TitledBorder)this.empaqueBeanSwingJInternalFrame.jScrollPanelDatosEmpaque.getBorder();

				titledBorderempaque.setTitle(titledBorderDetaNotaCreditoSoli.getTitle() + " -> Empaque");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empaqueDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getid_empaque()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empaque = "+this.detanotacreditosoli.getid_empaque().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_devolucion_empresaDetaNotaCreditoSoliUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipodevolucionempresa=true;

			idTienePermisotipodevolucionempresa=this.tienePermisosUsuarioEnPaginaWebDetaNotaCreditoSoli(TipoDevolucionEmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisotipodevolucionempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCreditoSoli.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCreditoSoli.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);

				this.tipodevolucionempresaBeanSwingJInternalFrame=new TipoDevolucionEmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipodevolucionempresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipodevolucionempresaBeanSwingJInternalFrame.getTipoDevolucionEmpresaLogic().setConnexion(this.detanotacreditosoliLogic.getConnexion());

				if(this.detanotacreditosoli.getid_tipo_devolucion_empresa()!=null) {
					this.tipodevolucionempresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipodevolucionempresaBeanSwingJInternalFrame.setIdActual(this.detanotacreditosoli.getid_tipo_devolucion_empresa());
					this.tipodevolucionempresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipodevolucionempresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipodevolucionempresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoDevolucionEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.tipodevolucionempresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCreditoSoli=(TitledBorder)this.jScrollPanelDatosDetaNotaCreditoSoli.getBorder();
				TitledBorder titledBordertipodevolucionempresa=(TitledBorder)this.tipodevolucionempresaBeanSwingJInternalFrame.jScrollPanelDatosTipoDevolucionEmpresa.getBorder();

				titledBordertipodevolucionempresa.setTitle(titledBorderDetaNotaCreditoSoli.getTitle() + " -> Tipo Devolucion Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_devolucion_empresaDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getid_tipo_devolucion_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_devolucion_empresa = "+this.detanotacreditosoli.getid_tipo_devolucion_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_centro_costoDetaNotaCreditoSoliActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="CentroCosto";

			if(!this.sFinalQueryGeneral_centrocosto.equals("")) {
				this.centrocostoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_centrocosto);
				this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.centrocostoBeanSwingJInternalFrame.procesarBusqueda(this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda);
				this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingCentroCosto(false);
			}

			if(!this.sFinalQueryComboCentroCosto.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderDetaNotaCreditoSoli=null;
			TitledBorder titledBordercentrocosto=null;

			if(!this.jScrollPanelDatosDetaNotaCreditoSoli.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderDetaNotaCreditoSoli=(TitledBorder)this.jScrollPanelDatosDetaNotaCreditoSoli.getBorder();
				titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderDetaNotaCreditoSoli.getTitle() + " -> Centro Costo");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_centro_costoDetaNotaCreditoSoliUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocentrocosto=true;

			idTienePermisocentrocosto=this.tienePermisosUsuarioEnPaginaWebDetaNotaCreditoSoli(CentroCostoConstantesFunciones.CLASSNAME);

			if(idTienePermisocentrocosto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosDetaNotaCreditoSoli.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosDetaNotaCreditoSoli.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);

				this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.centrocostoBeanSwingJInternalFrame.getCentroCostoLogic().setConnexion(this.detanotacreditosoliLogic.getConnexion());

				if(this.detanotacreditosoli.getid_centro_costo()!=null) {
					this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.centrocostoBeanSwingJInternalFrame.setIdActual(this.detanotacreditosoli.getid_centro_costo());
					this.centrocostoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCentroCosto();
				}

				JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderDetaNotaCreditoSoli=(TitledBorder)this.jScrollPanelDatosDetaNotaCreditoSoli.getBorder();
				TitledBorder titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderDetaNotaCreditoSoli.getTitle() + " -> Centro Costo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_centro_costoDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getid_centro_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_centro_costo = "+this.detanotacreditosoli.getid_centro_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncantidadDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getcantidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cantidad = "+this.detanotacreditosoli.getcantidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonprecioDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getprecio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where precio = "+this.detanotacreditosoli.getprecio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcen_descuenDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getporcen_descuen()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcen_descuen = "+this.detanotacreditosoli.getporcen_descuen().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuentoDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getdescuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento = "+this.detanotacreditosoli.getdescuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonimpuestoDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getimpuesto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where impuesto = "+this.detanotacreditosoli.getimpuesto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcen_ivaDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getporcen_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcen_iva = "+this.detanotacreditosoli.getporcen_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotalDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.gettotal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total = "+this.detanotacreditosoli.gettotal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.detanotacreditosoli.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncodigo_loteDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getcodigo_lote()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where codigo_lote like '%"+this.detanotacreditosoli.getcodigo_lote()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_cajaDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getnumero_caja()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_caja like '%"+this.detanotacreditosoli.getnumero_caja()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuento2DetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getdescuento2()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento2 = "+this.detanotacreditosoli.getdescuento2().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncostoDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getcosto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where costo = "+this.detanotacreditosoli.getcosto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonincluye_impuestoDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getincluye_impuesto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where incluye_impuesto = "+this.detanotacreditosoli.getincluye_impuesto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonporcen_iceDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getporcen_ice()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where porcen_ice = "+this.detanotacreditosoli.getporcen_ice().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_emisionDetaNotaCreditoSoliBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.getdetanotacreditosoli(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.detanotacreditosoli==null) {
						this.detanotacreditosoli = new DetaNotaCreditoSoli();
					}

					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);
				}

				if(this.detanotacreditosoli.getfecha_emision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_emision = '"+Funciones2.getStringPostgresDate(this.detanotacreditosoli.getfecha_emision())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAnioDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);

			this.getDetaNotaCreditoSolisFK_IdAnio();

			this.inicializarActualizarBindingDetaNotaCreditoSoli(false);

			//if(DetaNotaCreditoSoliBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdBodegaDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);

			this.getDetaNotaCreditoSolisFK_IdBodega();

			this.inicializarActualizarBindingDetaNotaCreditoSoli(false);

			//if(DetaNotaCreditoSoliBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCentroCostoDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);

			this.getDetaNotaCreditoSolisFK_IdCentroCosto();

			this.inicializarActualizarBindingDetaNotaCreditoSoli(false);

			//if(DetaNotaCreditoSoliBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);

			this.getDetaNotaCreditoSolisFK_IdEjercicio();

			this.inicializarActualizarBindingDetaNotaCreditoSoli(false);

			//if(DetaNotaCreditoSoliBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpaqueDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);

			this.getDetaNotaCreditoSolisFK_IdEmpaque();

			this.inicializarActualizarBindingDetaNotaCreditoSoli(false);

			//if(DetaNotaCreditoSoliBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);

			this.getDetaNotaCreditoSolisFK_IdEmpresa();

			this.inicializarActualizarBindingDetaNotaCreditoSoli(false);

			//if(DetaNotaCreditoSoliBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);

			this.getDetaNotaCreditoSolisFK_IdMes();

			this.inicializarActualizarBindingDetaNotaCreditoSoli(false);

			//if(DetaNotaCreditoSoliBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdNotaCreditoSoliDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);

			this.getDetaNotaCreditoSolisFK_IdNotaCreditoSoli();

			this.inicializarActualizarBindingDetaNotaCreditoSoli(false);

			//if(DetaNotaCreditoSoliBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);

			this.getDetaNotaCreditoSolisFK_IdPeriodo();

			this.inicializarActualizarBindingDetaNotaCreditoSoli(false);

			//if(DetaNotaCreditoSoliBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdProductoDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);

			this.getDetaNotaCreditoSolisFK_IdProducto();

			this.inicializarActualizarBindingDetaNotaCreditoSoli(false);

			//if(DetaNotaCreditoSoliBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);

			this.getDetaNotaCreditoSolisFK_IdSucursal();

			this.inicializarActualizarBindingDetaNotaCreditoSoli(false);

			//if(DetaNotaCreditoSoliBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);

			this.getDetaNotaCreditoSolisFK_IdTipoDevolucionEmpresa();

			this.inicializarActualizarBindingDetaNotaCreditoSoli(false);

			//if(DetaNotaCreditoSoliBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUnidadDetaNotaCreditoSoliActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);

			this.getDetaNotaCreditoSolisFK_IdUnidad();

			this.inicializarActualizarBindingDetaNotaCreditoSoli(false);

			//if(DetaNotaCreditoSoliBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.detanotacreditosoliLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameDetaNotaCreditoSoli() {
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.setVisible(false);	    			
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.dispose();
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli!=null) {
			this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.dispose();
			this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli=null;
		}
		
		if(this.jInternalFrameImportacionDetaNotaCreditoSoli!=null) {
			this.jInternalFrameImportacionDetaNotaCreditoSoli.setVisible(false);	    			
			this.jInternalFrameImportacionDetaNotaCreditoSoli.dispose();
			this.jInternalFrameImportacionDetaNotaCreditoSoli=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessDetaNotaCreditoSoli();
			
			DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
			
			
			if(sTipo.equals("NuevoDetaNotaCreditoSoli")) {
				jButtonNuevoDetaNotaCreditoSoliActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarDetaNotaCreditoSoli")) {
				jButtonDuplicarDetaNotaCreditoSoliActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarDetaNotaCreditoSoli")) {
				jButtonCopiarDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("VerFormDetaNotaCreditoSoli")) {
				jButtonVerFormDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarDetaNotaCreditoSoli")) {
				jButtonNuevoDetaNotaCreditoSoliActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarDetaNotaCreditoSoli")) {
				jButtonDuplicarDetaNotaCreditoSoliActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoDetaNotaCreditoSoli")) {
				jButtonNuevoDetaNotaCreditoSoliActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarDetaNotaCreditoSoli")) {
				jButtonDuplicarDetaNotaCreditoSoliActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesDetaNotaCreditoSoli")) {
				jButtonNuevoDetaNotaCreditoSoliActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarDetaNotaCreditoSoli")) {
				jButtonNuevoDetaNotaCreditoSoliActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesDetaNotaCreditoSoli")) {
				jButtonNuevoDetaNotaCreditoSoliActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarDetaNotaCreditoSoli")) {
				jButtonModificarDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarDetaNotaCreditoSoli")) {
				jButtonModificarDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarDetaNotaCreditoSoli")) {
				jButtonModificarDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("ActualizarDetaNotaCreditoSoli")) {
				jButtonActualizarDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarDetaNotaCreditoSoli")) {
				jButtonActualizarDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarDetaNotaCreditoSoli")) {
				jButtonActualizarDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("EliminarDetaNotaCreditoSoli")) {
				jButtonEliminarDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarDetaNotaCreditoSoli")) {
				jButtonEliminarDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarDetaNotaCreditoSoli")) {
				jButtonEliminarDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("CancelarDetaNotaCreditoSoli")) {
				jButtonCancelarDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarDetaNotaCreditoSoli")) {
				jButtonCancelarDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarDetaNotaCreditoSoli")) {
				jButtonCancelarDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("CerrarDetaNotaCreditoSoli")) {
				jButtonCerrarDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarDetaNotaCreditoSoli")) {
				jButtonCerrarDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarDetaNotaCreditoSoli")) {
				jButtonCerrarDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarDetaNotaCreditoSoli")) {
				jButtonMostrarOcultarDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarDetaNotaCreditoSoli")) {
				jButtonCancelarDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosDetaNotaCreditoSoli")) {
				jButtonGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarDetaNotaCreditoSoli")) {
				jButtonGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarDetaNotaCreditoSoli")) {
				jButtonCopiarDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarDetaNotaCreditoSoli")) {
				jButtonVerFormDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosDetaNotaCreditoSoli")) {
				jButtonGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarDetaNotaCreditoSoli")) {
				jButtonCopiarDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormDetaNotaCreditoSoli")) {
				jButtonVerFormDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaDetaNotaCreditoSoli")) {
				jButtonGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarDetaNotaCreditoSoli")) {
				jButtonGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaDetaNotaCreditoSoli")) {
				jButtonGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionDetaNotaCreditoSoli")) {
				jButtonRecargarInformacionDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarDetaNotaCreditoSoli")) {
				jButtonRecargarInformacionDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionDetaNotaCreditoSoli")) {
				jButtonRecargarInformacionDetaNotaCreditoSoliActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresDetaNotaCreditoSoli")) {
				jButtonAnterioresDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarDetaNotaCreditoSoli")) {
				jButtonAnterioresDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreDetaNotaCreditoSoli")) {
				jButtonAnterioresDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("SiguientesDetaNotaCreditoSoli")) {
				jButtonSiguientesDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarDetaNotaCreditoSoli")) {
				jButtonSiguientesDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesDetaNotaCreditoSoli")) {
				jButtonSiguientesDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByDetaNotaCreditoSoli") || sTipo.equals("MenuItemDetalleAbrirOrderByDetaNotaCreditoSoli")) {
				jButtonAbrirOrderByDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarDetaNotaCreditoSoli") || sTipo.equals("MenuItemDetalleMostrarOcultarDetaNotaCreditoSoli")) {
				jButtonMostrarOcultarDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosDetaNotaCreditoSoli")) {
				jButtonNuevoGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarDetaNotaCreditoSoli")) {
				jButtonNuevoGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosDetaNotaCreditoSoli")) {
				jButtonNuevoGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoDetaNotaCreditoSoli")) {
				jButtonCerrarReporteDinamicoDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoDetaNotaCreditoSoli")) {
				jButtonGenerarReporteDinamicoDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoDetaNotaCreditoSoli")) {
				
				jButtonGenerarExcelReporteDinamicoDetaNotaCreditoSoliActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionDetaNotaCreditoSoli")) {
				jButtonCerrarImportacionDetaNotaCreditoSoliActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionDetaNotaCreditoSoli")) {
				
				jButtonGenerarImportacionDetaNotaCreditoSoliActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionDetaNotaCreditoSoli")) {
				
				jButtonAbrirImportacionDetaNotaCreditoSoliActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesDetaNotaCreditoSoli")) {
				jComboBoxTiposAccionesDetaNotaCreditoSoliActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesDetaNotaCreditoSoli")) {
				jComboBoxTiposRelacionesDetaNotaCreditoSoliActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioDetaNotaCreditoSoli")) {
				jComboBoxTiposAccionesDetaNotaCreditoSoliActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarDetaNotaCreditoSoli")) {
				
				jComboBoxTiposSeleccionarDetaNotaCreditoSoliActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralDetaNotaCreditoSoli")) {
				jTextFieldValorCampoGeneralDetaNotaCreditoSoliActionListener(evt);
			}
			
			else if(sTipo.equals("AbrirTotalesDetaNotaCreditoSoli")) {
				jButtonAbrirTotalesDetaNotaCreditoSoliActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarTotalesDetaNotaCreditoSoli")) {
				jButtonCerrarTotalesDetaNotaCreditoSoliActionPerformed(evt);
			} 
			
			else if(sTipo.equals("AbrirOrderByDetaNotaCreditoSoli")) {
				jButtonAbrirOrderByDetaNotaCreditoSoliActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarDetaNotaCreditoSoli")) {
				jButtonAbrirOrderByDetaNotaCreditoSoliActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByDetaNotaCreditoSoli")) {
				jButtonCerrarOrderByDetaNotaCreditoSoliActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetaNotaCreditoSoliBusqueda")) {
				this.jButtonidDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_empresaDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_empresaDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_sucursalDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_sucursalDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_ejercicioDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_ejercicioDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_periodoDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_periodoDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_anioDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_anioDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_mesDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_mesDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_nota_credito_soliDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_nota_credito_soliDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_nota_credito_soliDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_nota_credito_soliDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_bodegaDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_bodegaDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_productoDetaNotaCreditoSoli")) {
				this.jButtonid_productoDetaNotaCreditoSoliActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_productoDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_productoDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_productoDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_productoDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidadDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_unidadDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidadDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_unidadDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empaqueDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_empaqueDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empaqueDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_empaqueDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_devolucion_empresaDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_tipo_devolucion_empresaDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_devolucion_empresaDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_tipo_devolucion_empresaDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoDetaNotaCreditoSoli")) {
				this.jButtonid_centro_costoDetaNotaCreditoSoliActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoDetaNotaCreditoSoliArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_centro_costoDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_centro_costoDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidadDetaNotaCreditoSoliBusqueda")) {
				this.jButtoncantidadDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precioDetaNotaCreditoSoliBusqueda")) {
				this.jButtonprecioDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcen_descuenDetaNotaCreditoSoliBusqueda")) {
				this.jButtonporcen_descuenDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuentoDetaNotaCreditoSoliBusqueda")) {
				this.jButtondescuentoDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("impuestoDetaNotaCreditoSoliBusqueda")) {
				this.jButtonimpuestoDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcen_ivaDetaNotaCreditoSoliBusqueda")) {
				this.jButtonporcen_ivaDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalDetaNotaCreditoSoliBusqueda")) {
				this.jButtontotalDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionDetaNotaCreditoSoliBusqueda")) {
				this.jButtondescripcionDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigo_loteDetaNotaCreditoSoliBusqueda")) {
				this.jButtoncodigo_loteDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_cajaDetaNotaCreditoSoliBusqueda")) {
				this.jButtonnumero_cajaDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento2DetaNotaCreditoSoliBusqueda")) {
				this.jButtondescuento2DetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costoDetaNotaCreditoSoliBusqueda")) {
				this.jButtoncostoDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("incluye_impuestoDetaNotaCreditoSoliBusqueda")) {
				this.jButtonincluye_impuestoDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcen_iceDetaNotaCreditoSoliBusqueda")) {
				this.jButtonporcen_iceDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionDetaNotaCreditoSoliBusqueda")) {
				this.jButtonfecha_emisionDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_centro_costoDetaNotaCreditoSoli")) {
				this.jButtonid_centro_costoDetaNotaCreditoSoliActionPerformed(evt);
			}
			else if(sTipo.equals("id_productoDetaNotaCreditoSoli")) {
				this.jButtonid_productoDetaNotaCreditoSoliActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdBodegaDetaNotaCreditoSoli")) {
				this.jButtonFK_IdBodegaDetaNotaCreditoSoliActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCentroCostoDetaNotaCreditoSoli")) {
				this.jButtonFK_IdCentroCostoDetaNotaCreditoSoliActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmpaqueDetaNotaCreditoSoli")) {
				this.jButtonFK_IdEmpaqueDetaNotaCreditoSoliActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdNotaCreditoSoliDetaNotaCreditoSoli")) {
				this.jButtonFK_IdNotaCreditoSoliDetaNotaCreditoSoliActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdProductoDetaNotaCreditoSoli")) {
				this.jButtonFK_IdProductoDetaNotaCreditoSoliActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli")) {
				this.jButtonFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoliActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdUnidadDetaNotaCreditoSoli")) {
				this.jButtonFK_IdUnidadDetaNotaCreditoSoliActionPerformed(evt);
			}
			
			;
			
			
			DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessDetaNotaCreditoSoli();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetaNotaCreditoSoliActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacreditosoli);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacreditosoli);
				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
				
				


				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaNotaCreditoSoli.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCreditoSoli.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			DetaNotaCreditoSoli detanotacreditosoliLocal=null;
			
			if(!this.getEsControlTabla()) {
				detanotacreditosoliLocal=this.detanotacreditosoli;
			} else {
				detanotacreditosoliLocal=this.detanotacreditosoliAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacreditosoli);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacreditosoli);
				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
							
				
				


				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaNotaCreditoSoli.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCreditoSoli.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaNotaCreditoSoliActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliAnterior =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detanotacreditosoliAnterior =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetaNotaCreditoSoliActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacreditosoli);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacreditosoli);
				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
								
						
				


				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaNotaCreditoSoli.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCreditoSoli.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacreditosoli);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacreditosoli);
				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
								
				
				


				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaNotaCreditoSoli.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCreditoSoli.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaNotaCreditoSoliActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliAnterior =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detanotacreditosoliAnterior =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacreditosoli);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacreditosoli);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaNotaCreditoSoliActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliAnterior =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detanotacreditosoliAnterior =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaNotaCreditoSoliActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacreditosoli);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detanotacreditosoli);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacreditosoli);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacreditosoli);
				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
							
				
				


				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaNotaCreditoSoli.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCreditoSoli.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetaNotaCreditoSoliActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoliAnterior =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detanotacreditosoliAnterior =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaNotaCreditoSoliActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacreditosoli);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detanotacreditosoli);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacreditosoli);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacreditosoli);
				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
								
				
				


				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaNotaCreditoSoli.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCreditoSoli.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaNotaCreditoSoliActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliAnterior =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detanotacreditosoliAnterior =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaNotaCreditoSoliActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacreditosoli);
			
			this.actualizarInformacion("INFO_PADRE",false,this.detanotacreditosoli);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetaNotaCreditoSoliActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacreditosoli);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacreditosoli);
				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosDetaNotaCreditoSoli")) {
					jCheckBoxSeleccionarTodosDetaNotaCreditoSoliItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosDetaNotaCreditoSoli")) {
					jCheckBoxSeleccionadosDetaNotaCreditoSoliItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarDetaNotaCreditoSoli")) {
					
				}
				
				


				
				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaNotaCreditoSoli.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCreditoSoli.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacreditosoli);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.detanotacreditosoli);
				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
												
				
				


				
				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaNotaCreditoSoli.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCreditoSoli.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetaNotaCreditoSoliActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.detanotacreditosoliAnterior =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.detanotacreditosoliAnterior =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetaNotaCreditoSoliActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacreditosoli);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacreditosoli);
				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
				
				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			if(sTipo.equals("id_bodegaDetaNotaCreditoSoli")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli;
				}

				if(this.detanotacreditosoliSessionBean.getConGuardarRelaciones()) {
					//classes=DetaNotaCreditoSoliConstantesFunciones.getClassesRelationshipsOfDetaNotaCreditoSoli(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetaNotaCreditoSoli(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli,"FK_IdBodega");
				//recargarFormDetaNotaCreditoSoliBodega(jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoDetaNotaCreditoSoli")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli;
				}

				if(this.detanotacreditosoliSessionBean.getConGuardarRelaciones()) {
					//classes=DetaNotaCreditoSoliConstantesFunciones.getClassesRelationshipsOfDetaNotaCreditoSoli(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetaNotaCreditoSoli(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli,"FK_IdProducto");
				//recargarFormDetaNotaCreditoSoliProducto(jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli,"FK_IdProducto");
			}
			
			DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaDetaNotaCreditoSoliActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacreditosoli);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacreditosoli);
				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_bodegaDetaNotaCreditoSoli")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli;
				}

				if(this.detanotacreditosoliSessionBean.getConGuardarRelaciones()) {
					//classes=DetaNotaCreditoSoliConstantesFunciones.getClassesRelationshipsOfDetaNotaCreditoSoli(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetaNotaCreditoSoli(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli,"FK_IdBodega");
				//recargarFormDetaNotaCreditoSoliBodega(jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoDetaNotaCreditoSoli")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli;
				}

				if(this.detanotacreditosoliSessionBean.getConGuardarRelaciones()) {
					//classes=DetaNotaCreditoSoliConstantesFunciones.getClassesRelationshipsOfDetaNotaCreditoSoli(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetaNotaCreditoSoli(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli,"FK_IdProducto");
				//recargarFormDetaNotaCreditoSoliProducto(jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli,"FK_IdProducto");
			}
				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaNotaCreditoSoli.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCreditoSoli.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.detanotacreditosoli);
				
				this.actualizarInformacion("INFO_PADRE",false,this.detanotacreditosoli);
				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


			if(sTipo.equals("id_bodegaDetaNotaCreditoSoli")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli;
				}

				if(this.detanotacreditosoliSessionBean.getConGuardarRelaciones()) {
					//classes=DetaNotaCreditoSoliConstantesFunciones.getClassesRelationshipsOfDetaNotaCreditoSoli(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyBodega(jComboBoxGenerico,"Formulario");

				this.recargarFormDetaNotaCreditoSoli(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli")) {
				this.procesarActionsCombosForeignKeyBodega(jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli,"FK_IdBodega");
				//recargarFormDetaNotaCreditoSoliBodega(jComboBoxid_bodegaFK_IdBodegaDetaNotaCreditoSoli,"FK_IdBodega");
			}
			 else if(sTipo.equals("id_productoDetaNotaCreditoSoli")) {
				if(jComboBoxGenerico==null) {
					jComboBoxGenerico=this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli;
				}

				if(this.detanotacreditosoliSessionBean.getConGuardarRelaciones()) {
					//classes=DetaNotaCreditoSoliConstantesFunciones.getClassesRelationshipsOfDetaNotaCreditoSoli(new ArrayList<Classe>(),DeepLoadType.NONE);
				}


				this.procesarActionsCombosForeignKeyProducto(jComboBoxGenerico,"Formulario");

				this.recargarFormDetaNotaCreditoSoli(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"COMBOBOX",classes,false,esControlTabla);
			}
			 else if(sTipo.equals("jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli")) {
				this.procesarActionsCombosForeignKeyProducto(jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli,"FK_IdProducto");
				//recargarFormDetaNotaCreditoSoliProducto(jComboBoxid_productoFK_IdProductoDetaNotaCreditoSoli,"FK_IdProducto");
			}
				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(DetaNotaCreditoSoli.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",DetaNotaCreditoSoli.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaDetaNotaCreditoSoliActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.detanotacreditosoliAnterior =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.detanotacreditosoliAnterior =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarDetaNotaCreditoSoli")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosDetaNotaCreditoSoliListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosDetaNotaCreditoSoli.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.detanotacreditosoli =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.detanotacreditosoli);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarDetaNotaCreditoSoli")) {
				
				}
				
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarDetaNotaCreditoSoli")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosDetaNotaCreditoSoli.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarDetaNotaCreditoSoli")) {
			
			}
			
			DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessDetaNotaCreditoSoli();
			
			DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
			
			if(sTipo.equals("NuevoDetaNotaCreditoSoli")) {
				jButtonNuevoDetaNotaCreditoSoliActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarDetaNotaCreditoSoli")) {
				jButtonDuplicarDetaNotaCreditoSoliActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarDetaNotaCreditoSoli")) {
				jButtonCopiarDetaNotaCreditoSoliActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormDetaNotaCreditoSoli")) {
				jButtonVerFormDetaNotaCreditoSoliActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesDetaNotaCreditoSoli")) {
				jButtonNuevoDetaNotaCreditoSoliActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarDetaNotaCreditoSoli")) {
				jButtonModificarDetaNotaCreditoSoliActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarDetaNotaCreditoSoli")) {
				jButtonActualizarDetaNotaCreditoSoliActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarDetaNotaCreditoSoli")) {
				jButtonEliminarDetaNotaCreditoSoliActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaDetaNotaCreditoSoli")) {
				jButtonGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarDetaNotaCreditoSoli")) {
				jButtonCancelarDetaNotaCreditoSoliActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarDetaNotaCreditoSoli")) {
				jButtonCerrarDetaNotaCreditoSoliActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosDetaNotaCreditoSoli")) {
				jButtonGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosDetaNotaCreditoSoli")) {
				jButtonNuevoGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByDetaNotaCreditoSoli")) {
				jButtonAbrirOrderByDetaNotaCreditoSoliActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionDetaNotaCreditoSoli")) {
				jButtonRecargarInformacionDetaNotaCreditoSoliActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresDetaNotaCreditoSoli")) {
				jButtonAnterioresDetaNotaCreditoSoliActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesDetaNotaCreditoSoli")) {
				jButtonSiguientesDetaNotaCreditoSoliActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idDetaNotaCreditoSoliBusqueda")) {
				this.jButtonidDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_empresaDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_empresaDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_sucursalDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_sucursalDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_ejercicioDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_ejercicioDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_periodoDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_periodoDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_anioDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_anioDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_mesDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_mesDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_nota_credito_soliDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_nota_credito_soliDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_nota_credito_soliDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_nota_credito_soliDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_bodegaDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_bodegaDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_bodegaDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_bodegaDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_productoDetaNotaCreditoSoli")) {
				this.jButtonid_productoDetaNotaCreditoSoliActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_productoDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_productoDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_productoDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_productoDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_unidadDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_unidadDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_unidadDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_unidadDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empaqueDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_empaqueDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empaqueDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_empaqueDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_devolucion_empresaDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_tipo_devolucion_empresaDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_devolucion_empresaDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_tipo_devolucion_empresaDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoDetaNotaCreditoSoli")) {
				this.jButtonid_centro_costoDetaNotaCreditoSoliActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoDetaNotaCreditoSoliArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoDetaNotaCreditoSoliUpdate")) {
				this.jButtonid_centro_costoDetaNotaCreditoSoliUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoDetaNotaCreditoSoliBusqueda")) {
				this.jButtonid_centro_costoDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cantidadDetaNotaCreditoSoliBusqueda")) {
				this.jButtoncantidadDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("precioDetaNotaCreditoSoliBusqueda")) {
				this.jButtonprecioDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcen_descuenDetaNotaCreditoSoliBusqueda")) {
				this.jButtonporcen_descuenDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuentoDetaNotaCreditoSoliBusqueda")) {
				this.jButtondescuentoDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("impuestoDetaNotaCreditoSoliBusqueda")) {
				this.jButtonimpuestoDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcen_ivaDetaNotaCreditoSoliBusqueda")) {
				this.jButtonporcen_ivaDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalDetaNotaCreditoSoliBusqueda")) {
				this.jButtontotalDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionDetaNotaCreditoSoliBusqueda")) {
				this.jButtondescripcionDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("codigo_loteDetaNotaCreditoSoliBusqueda")) {
				this.jButtoncodigo_loteDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_cajaDetaNotaCreditoSoliBusqueda")) {
				this.jButtonnumero_cajaDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento2DetaNotaCreditoSoliBusqueda")) {
				this.jButtondescuento2DetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("costoDetaNotaCreditoSoliBusqueda")) {
				this.jButtoncostoDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("incluye_impuestoDetaNotaCreditoSoliBusqueda")) {
				this.jButtonincluye_impuestoDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("porcen_iceDetaNotaCreditoSoliBusqueda")) {
				this.jButtonporcen_iceDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionDetaNotaCreditoSoliBusqueda")) {
				this.jButtonfecha_emisionDetaNotaCreditoSoliBusquedaActionPerformed(evt);
			}
			
			DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessDetaNotaCreditoSoli();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameDetaNotaCreditoSoli")) {
				closingInternalFrameDetaNotaCreditoSoli();
				
			} else if(sTipo.equals("jButtonCancelarDetaNotaCreditoSoli")) {
				JInternalFrameBase jInternalFrameDetalleFormDetaNotaCreditoSoli = (JInternalFrameBase)evt.getSource();
	            	
	            DetaNotaCreditoSoliBeanSwingJInternalFrame jInternalFrameParent=(DetaNotaCreditoSoliBeanSwingJInternalFrame)jInternalFrameDetalleFormDetaNotaCreditoSoli.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarDetaNotaCreditoSoliActionPerformed(null);
			}
			
			DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.detanotacreditosoli,new Object(),this.detanotacreditosoliParameterGeneral,this.detanotacreditosoliReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormDetaNotaCreditoSoli(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormDetaNotaCreditoSoli(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormDetaNotaCreditoSoli(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.detanotacreditosoli)) {
			if(!esControlTabla) {
				if(DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);			
				}
				
				if(this.detanotacreditosoliSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detanotacreditosoliReturnGeneral=detanotacreditosoliLogic.procesarEventosDetaNotaCreditoSolisWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detanotacreditosoliLogic.getDetaNotaCreditoSolis(),this.detanotacreditosoli,this.detanotacreditosoliParameterGeneral,this.isEsNuevoDetaNotaCreditoSoli,classes);//this.detanotacreditosoliLogic.getDetaNotaCreditoSoli()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanDetaNotaCreditoSoli(this.detanotacreditosoliReturnGeneral,this.detanotacreditosoliBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.detanotacreditosoliSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanDetaNotaCreditoSoli(classes,this.detanotacreditosoliReturnGeneral,this.detanotacreditosoliBean,false);
					}
						
					if(this.detanotacreditosoliReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyDetaNotaCreditoSoli(this.detanotacreditosoliReturnGeneral.getDetaNotaCreditoSoli());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioDetaNotaCreditoSoli(this.detanotacreditosoliReturnGeneral.getDetaNotaCreditoSoli());	
					}
						
					if(this.detanotacreditosoliReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioDetaNotaCreditoSoli(this.detanotacreditosoliReturnGeneral.getDetaNotaCreditoSoli(),classes);//this.detanotacreditosoliBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioDetaNotaCreditoSoli(this.detanotacreditosoli,classes);//this.detanotacreditosoliBean);									
				}
			
				if(DetaNotaCreditoSoliJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualDetaNotaCreditoSoli(this.detanotacreditosoli,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysDetaNotaCreditoSoli(this.detanotacreditosoli);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.detanotacreditosoliAnterior!=null) {
						this.detanotacreditosoli=this.detanotacreditosoliAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.detanotacreditosoliReturnGeneral=detanotacreditosoliLogic.procesarEventosDetaNotaCreditoSolisWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detanotacreditosoliLogic.getDetaNotaCreditoSolis(),this.detanotacreditosoli,this.detanotacreditosoliParameterGeneral,this.isEsNuevoDetaNotaCreditoSoli,classes);//this.detanotacreditosoliLogic.getDetaNotaCreditoSoli()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.detanotacreditosoliSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.detanotacreditosoliSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.detanotacreditosoliReturnGeneral.getDetaNotaCreditoSoli(),detanotacreditosoliLogic.getDetaNotaCreditoSolis());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.detanotacreditosoliReturnGeneral.getDetaNotaCreditoSoli(),this.detanotacreditosolis);
				}
				//ARCHITECTURE
				
				//this.jTableDatosDetaNotaCreditoSoli.repaint();
				
				//((AbstractTableModel) this.jTableDatosDetaNotaCreditoSoli.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosDetaNotaCreditoSoli();
			}
		}
	}
	
	public void actualizarVisualTableDatosDetaNotaCreditoSoli() throws Exception {
		
		DetaNotaCreditoSoliModel detanotacreditosoliModel=(DetaNotaCreditoSoliModel)this.jTableDatosDetaNotaCreditoSoli.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			detanotacreditosoliModel.detanotacreditosolis=this.detanotacreditosoliLogic.getDetaNotaCreditoSolis();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			detanotacreditosoliModel.detanotacreditosolis=this.detanotacreditosolis;
		}
		
		
		((DetaNotaCreditoSoliModel) this.jTableDatosDetaNotaCreditoSoli.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaDetaNotaCreditoSoli() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getdetanotacreditosoliAnterior(),this.detanotacreditosoliLogic.getDetaNotaCreditoSolis());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getdetanotacreditosoliAnterior(),this.detanotacreditosolis);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosDetaNotaCreditoSoli();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioDetaNotaCreditoSoli(DetaNotaCreditoSoli detanotacreditosoli,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detanotacreditosoli,new Object(),generalEntityParameterGeneral,this.detanotacreditosoliReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.detanotacreditosoliSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=DetaNotaCreditoSoliConstantesFunciones.getClassesRelationshipsOfDetaNotaCreditoSoli(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=DetaNotaCreditoSoliConstantesFunciones.getClassesRelationshipsFromStringsOfDetaNotaCreditoSoli(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormDetaNotaCreditoSoli(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.detanotacreditosoli,new Object(),generalEntityParameterGeneral,this.detanotacreditosoliReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioDetaNotaCreditoSoli(DetaNotaCreditoSoliBean detanotacreditosoliBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanDetaNotaCreditoSoli(ArrayList<Classe> classes,DetaNotaCreditoSoliReturnGeneral detanotacreditosoliReturnGeneral,DetaNotaCreditoSoliBean detanotacreditosoliBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualDetaNotaCreditoSoli(DetaNotaCreditoSoli detanotacreditosoli,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.detanotacreditosoli)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli = new DetaNotaCreditoSoliDetalleFormJInternalFrame(jDesktopPane,this.detanotacreditosoliSessionBean.getConGuardarRelaciones(),this.detanotacreditosoliSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.setVisible(false);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.setSelected(false);						
		
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.detanotacreditosoliLogic=this.detanotacreditosoliLogic;
		
		this.cargarCombosFrameForeignKeyDetaNotaCreditoSoli("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleDetaNotaCreditoSoli();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleDetaNotaCreditoSoli();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyDetaNotaCreditoSoli("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyDetaNotaCreditoSoli();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetaNotaCreditoSoli"));
		
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonModificarDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"ModificarDetaNotaCreditoSoli"));

		
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonModificarToolBarDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetaNotaCreditoSoli"));
					
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jMenuItemModificarDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetaNotaCreditoSoli"));		
		
		
		
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonActualizarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"ActualizarDetaNotaCreditoSoli"));
		
		
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonActualizarToolBarDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetaNotaCreditoSoli"));
						
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jMenuItemActualizarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetaNotaCreditoSoli"));		
		
		
		
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonEliminarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"EliminarDetaNotaCreditoSoli"));
		
		
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonEliminarToolBarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetaNotaCreditoSoli"));
								
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jMenuItemEliminarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetaNotaCreditoSoli"));		
		
		
		
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonCancelarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"CancelarDetaNotaCreditoSoli"));
		
		
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonCancelarToolBarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetaNotaCreditoSoli"));
					
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jMenuItemCancelarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetaNotaCreditoSoli"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jMenuItemDetalleCerrarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetaNotaCreditoSoli"));		
		
		
		
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonGuardarCambiosToolBarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetaNotaCreditoSoli"));
		
		
		
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonGuardarCambiosToolBarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetaNotaCreditoSoli"));
		
		
		
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxTiposAccionesFormularioDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetaNotaCreditoSoli"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonidDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"idDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_empresaDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_empresaDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_sucursalDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_sucursalDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_ejercicioDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_ejercicioDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_periodoDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_periodoDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_anioDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_anioDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_mesDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_mesDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_nota_credito_soliDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_nota_credito_soliDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_nota_credito_soliDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_nota_credito_soliDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_bodegaDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_bodegaDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetaNotaCreditoSoliBusqueda"));
		//jButtonid_productoDetaNotaCreditoSoli.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetaNotaCreditoSoliActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_productoDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCreditoSoli"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_productoDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_productoDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_unidadDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_unidadDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_empaqueDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_empaqueDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_empaqueDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_empaqueDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_tipo_devolucion_empresaDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_devolucion_empresaDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_tipo_devolucion_empresaDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_devolucion_empresaDetaNotaCreditoSoliBusqueda"));
		//jButtonid_centro_costoDetaNotaCreditoSoli.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoDetaNotaCreditoSoliActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_centro_costoDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoSoli"));
		//jButtonid_centro_costoDetaNotaCreditoSoliArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_centro_costoDetaNotaCreditoSoliArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoSoliArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_centro_costoDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_centro_costoDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtoncantidadDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"cantidadDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonprecioDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"precioDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonporcen_descuenDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"porcen_descuenDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtondescuentoDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"descuentoDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonimpuestoDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"impuestoDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonporcen_ivaDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"porcen_ivaDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtontotalDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"totalDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtondescripcionDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtoncodigo_loteDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"codigo_loteDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonnumero_cajaDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"numero_cajaDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtondescuento2DetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"descuento2DetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtoncostoDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"costoDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonincluye_impuestoDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"incluye_impuestoDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonporcen_iceDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"porcen_iceDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonfecha_emisionDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionDetaNotaCreditoSoliBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTabbedPaneRelacionesDetaNotaCreditoSoli.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetaNotaCreditoSoli"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameDetaNotaCreditoSoli"));
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarDetaNotaCreditoSoli"));
		}
		
		this.jTableDatosDetaNotaCreditoSoli.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarDetaNotaCreditoSoli"));
		
		this.jTableDatosDetaNotaCreditoSoli.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarDetaNotaCreditoSoli"));
		
		this.jButtonNuevoDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"NuevoDetaNotaCreditoSoli"));
		
		this.jButtonDuplicarDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"DuplicarDetaNotaCreditoSoli"));
		
		this.jButtonCopiarDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"CopiarDetaNotaCreditoSoli"));
		
		this.jButtonVerFormDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"VerFormDetaNotaCreditoSoli"));
		
		
		this.jButtonNuevoToolBarDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"NuevoToolBarDetaNotaCreditoSoli"));
			
		this.jButtonDuplicarToolBarDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"DuplicarToolBarDetaNotaCreditoSoli"));
			
		this.jMenuItemNuevoDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemNuevoDetaNotaCreditoSoli"));
			
		this.jMenuItemDuplicarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarDetaNotaCreditoSoli"));		
		
		
		this.jButtonNuevoRelacionesDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"NuevoRelacionesDetaNotaCreditoSoli"));
		
		
		this.jButtonNuevoRelacionesToolBarDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarDetaNotaCreditoSoli"));
			
		this.jMenuItemNuevoRelacionesDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesDetaNotaCreditoSoli"));		
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonModificarDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"ModificarDetaNotaCreditoSoli"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonModificarToolBarDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"ModificarToolBarDetaNotaCreditoSoli"));
			
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jMenuItemModificarDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"MenuItemModificarDetaNotaCreditoSoli"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonActualizarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"ActualizarDetaNotaCreditoSoli"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonActualizarToolBarDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"ActualizarToolBarDetaNotaCreditoSoli"));
				
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jMenuItemActualizarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemActualizarDetaNotaCreditoSoli"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonEliminarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"EliminarDetaNotaCreditoSoli"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonEliminarToolBarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"EliminarToolBarDetaNotaCreditoSoli"));
						
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jMenuItemEliminarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemEliminarDetaNotaCreditoSoli"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonCancelarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"CancelarDetaNotaCreditoSoli"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonCancelarToolBarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"CancelarToolBarDetaNotaCreditoSoli"));
			
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jMenuItemCancelarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemCancelarDetaNotaCreditoSoli"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarDetaNotaCreditoSoli"));		
		
		
		this.jButtonCerrarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"CerrarDetaNotaCreditoSoli"));
		
		
		this.jButtonCerrarToolBarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"CerrarToolBarDetaNotaCreditoSoli"));
			
		this.jMenuItemCerrarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemCerrarDetaNotaCreditoSoli"));
			
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jMenuItemDetalleCerrarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarDetaNotaCreditoSoli"));		
		}
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonGuardarCambiosDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"GuardarCambiosDetaNotaCreditoSoli"));
		}
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonGuardarCambiosToolBarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarDetaNotaCreditoSoli"));
		}
		
		this.jButtonCopiarToolBarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"CopiarToolBarDetaNotaCreditoSoli"));
			
		this.jButtonVerFormToolBarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"VerFormToolBarDetaNotaCreditoSoli"));
		
		this.jMenuItemGuardarCambiosDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosDetaNotaCreditoSoli"));
			
		this.jMenuItemCopiarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemCopiarDetaNotaCreditoSoli"));		
		
		this.jMenuItemVerFormDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemVerFormDetaNotaCreditoSoli"));		
		
		
		this.jButtonGuardarCambiosTablaDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetaNotaCreditoSoli"));
		
		
		this.jButtonGuardarCambiosTablaToolBarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarDetaNotaCreditoSoli"));
			
		this.jMenuItemGuardarCambiosTablaDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaDetaNotaCreditoSoli"));		
		
		
		
		this.jButtonRecargarInformacionDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"RecargarInformacionDetaNotaCreditoSoli"));
					
		this.jButtonRecargarInformacionToolBarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarDetaNotaCreditoSoli"));
		
		this.jMenuItemRecargarInformacionDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionDetaNotaCreditoSoli"));		
		
		
		
		this.jButtonAnterioresDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"AnterioresDetaNotaCreditoSoli"));
		
		
		this.jButtonAnterioresToolBarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"AnterioresToolBarDetaNotaCreditoSoli"));
		
		this.jMenuItemAnterioresDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresDetaNotaCreditoSoli"));		
		
		
		this.jButtonSiguientesDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"SiguientesDetaNotaCreditoSoli"));
		
		
		this.jButtonSiguientesToolBarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"SiguientesToolBarDetaNotaCreditoSoli"));
			
		this.jMenuItemSiguientesDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesDetaNotaCreditoSoli"));
			
		this.jMenuItemAbrirOrderByDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByDetaNotaCreditoSoli"));
			
		this.jMenuItemMostrarOcultarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarDetaNotaCreditoSoli"));
			
		this.jMenuItemDetalleAbrirOrderByDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByDetaNotaCreditoSoli"));
			
		this.jMenuItemDetalleMostarOcultarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarDetaNotaCreditoSoli"));		
		
		
		this.jButtonNuevoGuardarCambiosDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosDetaNotaCreditoSoli"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarDetaNotaCreditoSoli"));
			
		this.jMenuItemNuevoGuardarCambiosDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosDetaNotaCreditoSoli"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosDetaNotaCreditoSoli.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosDetaNotaCreditoSoli"));

		this.jCheckBoxSeleccionadosDetaNotaCreditoSoli.addItemListener(new CheckBoxItemListener(this,"SeleccionadosDetaNotaCreditoSoli"));
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxTiposAccionesFormularioDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioDetaNotaCreditoSoli"));
		}
		
		
		this.jComboBoxTiposRelacionesDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"TiposRelacionesDetaNotaCreditoSoli"));
			
		this.jComboBoxTiposAccionesDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"TiposAccionesDetaNotaCreditoSoli"));
					
		this.jComboBoxTiposSeleccionarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"TiposSeleccionarDetaNotaCreditoSoli"));
			
		this.jTextFieldValorCampoGeneralDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralDetaNotaCreditoSoli"));		
		
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonidDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"idDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_empresaDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_empresaDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_sucursalDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_sucursalDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_ejercicioDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_ejercicioDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_periodoDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_periodoDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_anioDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_anioDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_mesDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_mesDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_nota_credito_soliDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_nota_credito_soliDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_nota_credito_soliDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_nota_credito_soliDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_bodegaDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_bodegaDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetaNotaCreditoSoliBusqueda"));
		//jButtonid_productoDetaNotaCreditoSoli.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetaNotaCreditoSoliActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_productoDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCreditoSoli"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_productoDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_productoDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_unidadDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_unidadDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_empaqueDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_empaqueDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_empaqueDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_empaqueDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_tipo_devolucion_empresaDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_devolucion_empresaDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_tipo_devolucion_empresaDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_devolucion_empresaDetaNotaCreditoSoliBusqueda"));
		//jButtonid_centro_costoDetaNotaCreditoSoli.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoDetaNotaCreditoSoliActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_centro_costoDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoSoli"));
		//jButtonid_centro_costoDetaNotaCreditoSoliArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_centro_costoDetaNotaCreditoSoliArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoSoliArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_centro_costoDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_centro_costoDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtoncantidadDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"cantidadDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonprecioDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"precioDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonporcen_descuenDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"porcen_descuenDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtondescuentoDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"descuentoDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonimpuestoDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"impuestoDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonporcen_ivaDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"porcen_ivaDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtontotalDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"totalDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtondescripcionDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtoncodigo_loteDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"codigo_loteDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonnumero_cajaDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"numero_cajaDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtondescuento2DetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"descuento2DetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtoncostoDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"costoDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonincluye_impuestoDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"incluye_impuestoDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonporcen_iceDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"porcen_iceDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonfecha_emisionDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionDetaNotaCreditoSoliBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdBodegaDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"FK_IdBodegaDetaNotaCreditoSoli"));

			this.jButtonFK_IdCentroCostoDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoDetaNotaCreditoSoli"));

			this.jButtonBuscarFK_IdCentroCostoid_centro_costoDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoSoli"));

			this.jButtonFK_IdEmpaqueDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"FK_IdEmpaqueDetaNotaCreditoSoli"));

			this.jButtonFK_IdNotaCreditoSoliDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"FK_IdNotaCreditoSoliDetaNotaCreditoSoli"));

			this.jButtonFK_IdProductoDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"FK_IdProductoDetaNotaCreditoSoli"));

			this.jButtonBuscarFK_IdProductoid_productoDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCreditoSoli"));

			this.jButtonFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"FK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli"));

			this.jButtonFK_IdUnidadDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"FK_IdUnidadDetaNotaCreditoSoli"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli!=null) {
				this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetaNotaCreditoSoli"));
				this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetaNotaCreditoSoli"));
				this.jInternalFrameReporteDinamicoDetaNotaCreditoSoli.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetaNotaCreditoSoli"));
			}
			
			//this.jButtonCerrarReporteDinamicoDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoDetaNotaCreditoSoli"));				
			//this.jButtonGenerarReporteDinamicoDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoDetaNotaCreditoSoli"));
			//this.jButtonGenerarExcelReporteDinamicoDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoDetaNotaCreditoSoli"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionDetaNotaCreditoSoli!=null) {
				this.jInternalFrameImportacionDetaNotaCreditoSoli.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionDetaNotaCreditoSoli"));
				this.jInternalFrameImportacionDetaNotaCreditoSoli.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionDetaNotaCreditoSoli"));
				this.jInternalFrameImportacionDetaNotaCreditoSoli.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionDetaNotaCreditoSoli"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"AbrirOrderByDetaNotaCreditoSoli"));
			
			this.jButtonAbrirOrderByToolBarDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarDetaNotaCreditoSoli"));			
			
			if(this.jInternalFrameOrderByDetaNotaCreditoSoli!=null) {
				this.jInternalFrameOrderByDetaNotaCreditoSoli.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByDetaNotaCreditoSoli"));				
			}
			
			
		}
		
		this.jButtonAbrirTotalesDetaNotaCreditoSoli.addActionListener (new ButtonActionListener(this,"AbrirTotalesDetaNotaCreditoSoli"));
		
		if(this.jInternalFrameTotalesDetaNotaCreditoSoli!=null) {
			this.jInternalFrameTotalesDetaNotaCreditoSoli.getjButtonCerrarTotales().addActionListener (new ButtonActionListener(this,"CerrarTotalesDetaNotaCreditoSoli"));
		}
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTabbedPaneRelacionesDetaNotaCreditoSoli.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesDetaNotaCreditoSoli"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameDetaNotaCreditoSoli();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormDetaNotaCreditoSoli = (JInternalFrameBase)event.getSource();
	            	
	            DetaNotaCreditoSoliBeanSwingJInternalFrame jInternalFrameParent=(DetaNotaCreditoSoliBeanSwingJInternalFrame)jInternalFrameDetalleFormDetaNotaCreditoSoli.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarDetaNotaCreditoSoliActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosDetaNotaCreditoSoli.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosDetaNotaCreditoSoliListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosDetaNotaCreditoSoli.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosDetaNotaCreditoSoli.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetaNotaCreditoSoliActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetaNotaCreditoSoliActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetaNotaCreditoSoliActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoDetaNotaCreditoSoli";
		inputMap = this.jButtonNuevoDetaNotaCreditoSoli.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoDetaNotaCreditoSoli.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetaNotaCreditoSoliActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetaNotaCreditoSoliActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetaNotaCreditoSoliActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoDetaNotaCreditoSoliActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesDetaNotaCreditoSoli";
		inputMap = this.jButtonNuevoRelacionesDetaNotaCreditoSoli.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesDetaNotaCreditoSoli.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoDetaNotaCreditoSoliActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarDetaNotaCreditoSoli";
		inputMap = this.jButtonModificarDetaNotaCreditoSoli.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarDetaNotaCreditoSoli.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarDetaNotaCreditoSoliActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarDetaNotaCreditoSoli";
		inputMap = this.jButtonActualizarDetaNotaCreditoSoli.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarDetaNotaCreditoSoli.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarDetaNotaCreditoSoliActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarDetaNotaCreditoSoli";
		inputMap = this.jButtonEliminarDetaNotaCreditoSoli.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarDetaNotaCreditoSoli.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarDetaNotaCreditoSoliActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarDetaNotaCreditoSoli";
		inputMap = this.jButtonCancelarDetaNotaCreditoSoli.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarDetaNotaCreditoSoli.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarDetaNotaCreditoSoliActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarDetaNotaCreditoSoli";
		inputMap = this.jButtonCerrarDetaNotaCreditoSoli.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarDetaNotaCreditoSoli.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarDetaNotaCreditoSoliActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonGuardarCambiosDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosDetaNotaCreditoSoli";
		inputMap = this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonGuardarCambiosDetaNotaCreditoSoli.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonGuardarCambiosDetaNotaCreditoSoli.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosDetaNotaCreditoSoli.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosDetaNotaCreditoSoliItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesDetaNotaCreditoSoli.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesDetaNotaCreditoSoliActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarDetaNotaCreditoSoli.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarDetaNotaCreditoSoliActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralDetaNotaCreditoSoli.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralDetaNotaCreditoSoliActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonidDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"idDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_empresaDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_empresaDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_empresaDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_sucursalDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_sucursalDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_ejercicioDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_ejercicioDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_periodoDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_periodoDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_periodoDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_anioDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_anioDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_anioDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_anioDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_mesDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_mesDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_mesDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_mesDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_nota_credito_soliDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_nota_credito_soliDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_nota_credito_soliDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_nota_credito_soliDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_bodegaDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_bodegaDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_bodegaDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_bodegaDetaNotaCreditoSoliBusqueda"));
		//jButtonid_productoDetaNotaCreditoSoli.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_productoDetaNotaCreditoSoliActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_productoDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCreditoSoli"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_productoDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_productoDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_unidadDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_unidadDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_unidadDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_unidadDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_empaqueDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_empaqueDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_empaqueDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_empaqueDetaNotaCreditoSoliBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_tipo_devolucion_empresaDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_devolucion_empresaDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_tipo_devolucion_empresaDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_devolucion_empresaDetaNotaCreditoSoliBusqueda"));
		//jButtonid_centro_costoDetaNotaCreditoSoli.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoDetaNotaCreditoSoliActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_centro_costoDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoSoli"));
		//jButtonid_centro_costoDetaNotaCreditoSoliArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_centro_costoDetaNotaCreditoSoliArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoSoliArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_centro_costoDetaNotaCreditoSoliUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoSoliUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_centro_costoDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtoncantidadDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"cantidadDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonprecioDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"precioDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonporcen_descuenDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"porcen_descuenDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtondescuentoDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"descuentoDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonimpuestoDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"impuestoDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonporcen_ivaDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"porcen_ivaDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtontotalDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"totalDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtondescripcionDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"descripcionDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtoncodigo_loteDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"codigo_loteDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonnumero_cajaDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"numero_cajaDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtondescuento2DetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"descuento2DetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtoncostoDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"costoDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonincluye_impuestoDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"incluye_impuestoDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonporcen_iceDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"porcen_iceDetaNotaCreditoSoliBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonfecha_emisionDetaNotaCreditoSoliBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionDetaNotaCreditoSoliBusqueda"));
		
		
		this.jButtonFK_IdBodegaDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"FK_IdBodegaDetaNotaCreditoSoli"));

		this.jButtonFK_IdCentroCostoDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoDetaNotaCreditoSoli"));

		this.jButtonBuscarFK_IdCentroCostoid_centro_costoDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"id_centro_costoDetaNotaCreditoSoli"));

		this.jButtonFK_IdEmpaqueDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"FK_IdEmpaqueDetaNotaCreditoSoli"));

		this.jButtonFK_IdNotaCreditoSoliDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"FK_IdNotaCreditoSoliDetaNotaCreditoSoli"));

		this.jButtonFK_IdProductoDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"FK_IdProductoDetaNotaCreditoSoli"));

		this.jButtonBuscarFK_IdProductoid_productoDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"id_productoDetaNotaCreditoSoli"));

		this.jButtonFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"FK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli"));

		this.jButtonFK_IdUnidadDetaNotaCreditoSoli.addActionListener(new ButtonActionListener(this,"FK_IdUnidadDetaNotaCreditoSoli"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionDetaNotaCreditoSoli.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionDetaNotaCreditoSoliActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarDetaNotaCreditoSoliActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarDetaNotaCreditoSoli.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosDetaNotaCreditoSoli(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(DetaNotaCreditoSoli detanotacreditosoliAux:this.detanotacreditosoliLogic.getDetaNotaCreditoSolis()) {
					detanotacreditosoliAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetaNotaCreditoSoli detanotacreditosoliAux:detanotacreditosolis) {
					detanotacreditosoliAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosDetaNotaCreditoSoliItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetaNotaCreditoSoli detanotacreditosoliAux:this.detanotacreditosoliLogic.getDetaNotaCreditoSolis()) {
						detanotacreditosoliAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetaNotaCreditoSoli detanotacreditosoliAux:detanotacreditosolis) {
						detanotacreditosoliAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(DetaNotaCreditoSoli detanotacreditosoliAux:this.detanotacreditosoliLogic.getDetaNotaCreditoSolis()) {
					
						if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_INCLUYEIMPUESTO)) {
							existe=true;
							detanotacreditosoliAux.setincluye_impuesto(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetaNotaCreditoSoli detanotacreditosoliAux:detanotacreditosolis) {
						
						if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_INCLUYEIMPUESTO)) {
							existe=true;
							detanotacreditosoliAux.setincluye_impuesto(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaDetaNotaCreditoSoli(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetaNotaCreditoSoli.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetaNotaCreditoSoli.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosDetaNotaCreditoSoliItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosDetaNotaCreditoSoli.getSelectedRows();
			
			DetaNotaCreditoSoli detanotacreditosoliLocal=new DetaNotaCreditoSoli();
			
			//this.seleccionarTodosDetaNotaCreditoSoli(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					detanotacreditosoliLocal =(DetaNotaCreditoSoli) this.detanotacreditosoliLogic.getDetaNotaCreditoSolis().toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					detanotacreditosoliLocal =(DetaNotaCreditoSoli) this.detanotacreditosolis.toArray()[this.jTableDatosDetaNotaCreditoSoli.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				detanotacreditosoliLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(DetaNotaCreditoSoli detanotacreditosoliAux:this.detanotacreditosoliLogic.getDetaNotaCreditoSolis()) {
						detanotacreditosoliAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(DetaNotaCreditoSoli detanotacreditosoliAux:detanotacreditosolis) {
						detanotacreditosoliAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaDetaNotaCreditoSoli(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosDetaNotaCreditoSoli.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosDetaNotaCreditoSoli.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosDetaNotaCreditoSoli,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualDetaNotaCreditoSoliItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarDetaNotaCreditoSoliParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralDetaNotaCreditoSoliActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralDetaNotaCreditoSoli.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(DetaNotaCreditoSoli detanotacreditosoliAux:this.detanotacreditosoliLogic.getDetaNotaCreditoSolis()) {
				
						if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_CANTIDAD)) {
							existe=true;
							detanotacreditosoliAux.setcantidad(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_PRECIO)) {
							existe=true;
							detanotacreditosoliAux.setprecio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENDESCUEN)) {
							existe=true;
							detanotacreditosoliAux.setporcen_descuen(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO)) {
							existe=true;
							detanotacreditosoliAux.setdescuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_IMPUESTO)) {
							existe=true;
							detanotacreditosoliAux.setimpuesto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENIVA)) {
							existe=true;
							detanotacreditosoliAux.setporcen_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							detanotacreditosoliAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							detanotacreditosoliAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_CODIGOLOTE)) {
							existe=true;
							detanotacreditosoliAux.setcodigo_lote(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_NUMEROCAJA)) {
							existe=true;
							detanotacreditosoliAux.setnumero_caja(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO2)) {
							existe=true;
							detanotacreditosoliAux.setdescuento2(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_COSTO)) {
							existe=true;
							detanotacreditosoliAux.setcosto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENICE)) {
							existe=true;
							detanotacreditosoliAux.setporcen_ice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							detanotacreditosoliAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetaNotaCreditoSoli detanotacreditosoliAux:detanotacreditosolis) {
					
						if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_CANTIDAD)) {
							existe=true;
							detanotacreditosoliAux.setcantidad(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_PRECIO)) {
							existe=true;
							detanotacreditosoliAux.setprecio(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENDESCUEN)) {
							existe=true;
							detanotacreditosoliAux.setporcen_descuen(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO)) {
							existe=true;
							detanotacreditosoliAux.setdescuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_IMPUESTO)) {
							existe=true;
							detanotacreditosoliAux.setimpuesto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENIVA)) {
							existe=true;
							detanotacreditosoliAux.setporcen_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							detanotacreditosoliAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							detanotacreditosoliAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_CODIGOLOTE)) {
							existe=true;
							detanotacreditosoliAux.setcodigo_lote(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_NUMEROCAJA)) {
							existe=true;
							detanotacreditosoliAux.setnumero_caja(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO2)) {
							existe=true;
							detanotacreditosoliAux.setdescuento2(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_COSTO)) {
							existe=true;
							detanotacreditosoliAux.setcosto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENICE)) {
							existe=true;
							detanotacreditosoliAux.setporcen_ice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							detanotacreditosoliAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaDetaNotaCreditoSoli(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesDetaNotaCreditoSoliActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioDetaNotaCreditoSoli=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesDetaNotaCreditoSoli.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxTiposAccionesFormularioDetaNotaCreditoSoli.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteDetaNotaCreditoSoli) {				
					conSplash=true;//false;										
					
					//this.startProcessDetaNotaCreditoSoli(conSplash);
				
					this.generarReporteDetaNotaCreditoSolisSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetaNotaCreditoSoli.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxTiposAccionesFormularioDetaNotaCreditoSoli.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoDetaNotaCreditoSolisSeleccionados();
				//this.jComboBoxTiposAccionesDetaNotaCreditoSoli.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetaNotaCreditoSolisSeleccionados(false);
				//this.jComboBoxTiposAccionesDetaNotaCreditoSoli.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoDetaNotaCreditoSolisSeleccionados(true);
				//this.jComboBoxTiposAccionesDetaNotaCreditoSoli.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetaNotaCreditoSoli();
				
				this.exportarDetaNotaCreditoSolisSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetaNotaCreditoSoli.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxTiposAccionesFormularioDetaNotaCreditoSoli.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionDetaNotaCreditoSolis();
				//this.importarDetaNotaCreditoSolis();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetaNotaCreditoSoli.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxTiposAccionesFormularioDetaNotaCreditoSoli.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessDetaNotaCreditoSoli();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelDetaNotaCreditoSolisSeleccionados();
				//this.jComboBoxTiposAccionesDetaNotaCreditoSoli.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Detalle  Solicitud Nota Credit", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessDetaNotaCreditoSoli();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoDetaNotaCreditoSoli)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyDetaNotaCreditoSoli(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Detalle  Solicitud Nota Credit",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesDetaNotaCreditoSoli.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxTiposAccionesFormularioDetaNotaCreditoSoli.setSelectedIndex(0);					
				}	
			} 			
			else if(DetaNotaCreditoSoliBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteDetaNotaCreditoSoli) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessDetaNotaCreditoSoli(conSplash);
					
						//this.actualizarParametrosGeneralDetaNotaCreditoSoli();
						
						this.generarReporteProcesoAccionDetaNotaCreditoSolisSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesDetaNotaCreditoSoli.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxTiposAccionesFormularioDetaNotaCreditoSoli.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Detalle  Solicitud Nota CreditS SELECCIONADOS?", "MANTENIMIENTO DE Detalle  Solicitud Nota Credit", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessDetaNotaCreditoSoli();
				
						this.actualizarParametrosGeneralDetaNotaCreditoSoli();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.detanotacreditosoliReturnGeneral=detanotacreditosoliLogic.procesarAccionDetaNotaCreditoSolisWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.detanotacreditosoliLogic.getDetaNotaCreditoSolis(),this.detanotacreditosoliParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarDetaNotaCreditoSoliReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesDetaNotaCreditoSoli.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxTiposAccionesFormularioDetaNotaCreditoSoli.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralDetaNotaCreditoSoli();
					
					DetaNotaCreditoSoliBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarDetaNotaCreditoSoliReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesDetaNotaCreditoSoli.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxTiposAccionesFormularioDetaNotaCreditoSoli.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessDetaNotaCreditoSoli(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesDetaNotaCreditoSoliActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessDetaNotaCreditoSoli();
			
			if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<DetaNotaCreditoSoli> detanotacreditosolisSeleccionados=new ArrayList<DetaNotaCreditoSoli>();		
			DetaNotaCreditoSoli detanotacreditosoli=new DetaNotaCreditoSoli();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesDetaNotaCreditoSoli.getSelectedItem();
			
			
			
			
			detanotacreditosolisSeleccionados=this.getDetaNotaCreditoSolisSeleccionados(true);
			//this.sTipoAccion;
			
			if(detanotacreditosolisSeleccionados.size()==1) {
				for(DetaNotaCreditoSoli detanotacreditosoliAux:detanotacreditosolisSeleccionados) {
					detanotacreditosoli=detanotacreditosoliAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessDetaNotaCreditoSoli();
			
      		//this.finishProcessDetaNotaCreditoSoli(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarDetaNotaCreditoSoliReturnGeneral() throws Exception {
		if(this.detanotacreditosoliReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.detanotacreditosoliReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.detanotacreditosoliReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.detanotacreditosoliReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.detanotacreditosoliReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.detanotacreditosoliReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
		}
		
		if(this.detanotacreditosoliReturnGeneral.getConRetornoLista() || this.detanotacreditosoliReturnGeneral.getConRetornoObjeto()) {
			if(this.detanotacreditosoliReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detanotacreditosoliLogic.setDetaNotaCreditoSolis(this.detanotacreditosoliReturnGeneral.getDetaNotaCreditoSolis());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.detanotacreditosoliReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.detanotacreditosoliLogic.setDetaNotaCreditoSoli(this.detanotacreditosoliReturnGeneral.getDetaNotaCreditoSoli());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingDetaNotaCreditoSoli(false);
		}
	}
	
	public void actualizarParametrosGeneralDetaNotaCreditoSoli() throws Exception {
		
		
	}
	
	public ArrayList<DetaNotaCreditoSoli> getDetaNotaCreditoSolisSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<DetaNotaCreditoSoli> detanotacreditosolisSeleccionados=new ArrayList<DetaNotaCreditoSoli>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioDetaNotaCreditoSoli) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(DetaNotaCreditoSoli detanotacreditosoliAux:detanotacreditosoliLogic.getDetaNotaCreditoSolis()) {
					if(detanotacreditosoliAux.getIsSelected()) {
						detanotacreditosolisSeleccionados.add(detanotacreditosoliAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(DetaNotaCreditoSoli detanotacreditosoliAux:this.detanotacreditosolis) {
					if(detanotacreditosoliAux.getIsSelected()) {
						detanotacreditosolisSeleccionados.add(detanotacreditosoliAux);				
					}
				}
			}
			
			if(detanotacreditosolisSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						detanotacreditosolisSeleccionados.addAll(this.detanotacreditosoliLogic.getDetaNotaCreditoSolis());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						detanotacreditosolisSeleccionados.addAll(this.detanotacreditosolis);				
					}
				}
			}
		} else {
			detanotacreditosolisSeleccionados.add(this.detanotacreditosoli);
		}
		
		return detanotacreditosolisSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteDetaNotaCreditoSolisSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalDetaNotaCreditoSolisSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoDetaNotaCreditoSolisSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetaNotaCreditoSolisSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoDetaNotaCreditoSolisSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Detalle  Solicitud Nota Credit",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesDetaNotaCreditoSolisSeleccionados() throws Exception {
		ArrayList<DetaNotaCreditoSoli> detanotacreditosolisSeleccionados=new ArrayList<DetaNotaCreditoSoli>();		
		
		detanotacreditosolisSeleccionados=this.getDetaNotaCreditoSolisSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteDetaNotaCreditoSolis("Todos",detanotacreditosolisSeleccionados);
		
	}	
	
	public void generarReporteNormalDetaNotaCreditoSolisSeleccionados() throws Exception {
		ArrayList<DetaNotaCreditoSoli> detanotacreditosolisSeleccionados=new ArrayList<DetaNotaCreditoSoli>();		
		
		detanotacreditosolisSeleccionados=this.getDetaNotaCreditoSolisSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteDetaNotaCreditoSolis("Todos",detanotacreditosolisSeleccionados);
	}		
	
	public void generarReporteProcesoAccionDetaNotaCreditoSolisSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<DetaNotaCreditoSoli> detanotacreditosolisSeleccionados=new ArrayList<DetaNotaCreditoSoli>();
		
		detanotacreditosolisSeleccionados=this.getDetaNotaCreditoSolisSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteDetaNotaCreditoSolis("Todos",detanotacreditosolisSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoDetaNotaCreditoSolisSeleccionados() throws Exception {
		ArrayList<DetaNotaCreditoSoli> detanotacreditosolisSeleccionados=new ArrayList<DetaNotaCreditoSoli>();		
		
		
		this.abrirInicializarFrameReporteDinamicoDetaNotaCreditoSoli();
		
		
		detanotacreditosolisSeleccionados=this.getDetaNotaCreditoSolisSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoDetaNotaCreditoSoli();
		
		
		//this.generarReporteDetaNotaCreditoSolis("Todos",detanotacreditosolisSeleccionados ,detanotacreditosoliImplementable,detanotacreditosoliImplementableHome);
	}
	
	public void mostrarImportacionDetaNotaCreditoSolis() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionDetaNotaCreditoSoli();
		
		this.abrirFrameImportacionDetaNotaCreditoSoli();		
		
			
		//this.generarReporteDetaNotaCreditoSolis("Todos",detanotacreditosolisSeleccionados ,detanotacreditosoliImplementable,detanotacreditosoliImplementableHome);
	}
	
	public void importarDetaNotaCreditoSolis() throws Exception {		
	
	}
	
	public void exportarDetaNotaCreditoSolisSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelDetaNotaCreditoSolisSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoDetaNotaCreditoSolisSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlDetaNotaCreditoSolisSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Detalle  Solicitud Nota Credit",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoDetaNotaCreditoSolisSeleccionados() throws Exception {
		ArrayList<DetaNotaCreditoSoli> detanotacreditosolisSeleccionados=new ArrayList<DetaNotaCreditoSoli>();		
		
		detanotacreditosolisSeleccionados=this.getDetaNotaCreditoSolisSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detanotacreditosoli."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarDetaNotaCreditoSoli(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(DetaNotaCreditoSoli detanotacreditosoliAux:detanotacreditosolisSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarDetaNotaCreditoSoli(detanotacreditosoliAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//detanotacreditosoliAux.setsDetalleGeneralEntityReporte(detanotacreditosoliAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle  Solicitud Nota Credit",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarDetaNotaCreditoSoli(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_IDNOTACREDITOSOLI;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_IDBODEGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPRODUCTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_IDUNIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPAQUE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_IDCENTROCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_CANTIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_PRECIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENDESCUEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_IMPUESTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_TOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_CODIGOLOTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_NUMEROCAJA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO2;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_COSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_INCLUYEIMPUESTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENICE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=DetaNotaCreditoSoliConstantesFunciones.LABEL_FECHAEMISION;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarDetaNotaCreditoSoli(DetaNotaCreditoSoli detanotacreditosoli,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=detanotacreditosoli.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getnotacreditosoli_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getbodega_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getproducto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getunidad_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getempaque_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.gettipodevolucionempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getcentrocosto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getcantidad().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getprecio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getporcen_descuen().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getdescuento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getimpuesto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getporcen_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.gettotal().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getcodigo_lote();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getnumero_caja();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getdescuento2().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getcosto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getincluye_impuesto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getporcen_ice().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=detanotacreditosoli.getfecha_emision().toString();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelDetaNotaCreditoSolisSeleccionados() throws Exception {
		ArrayList<DetaNotaCreditoSoli> detanotacreditosolisSeleccionados=new ArrayList<DetaNotaCreditoSoli>();		
		
		detanotacreditosolisSeleccionados=this.getDetaNotaCreditoSolisSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detanotacreditosoli.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("DetaNotaCreditoSolis");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelDetaNotaCreditoSoli(row);				
				iRow++;
			}				
			
			for(DetaNotaCreditoSoli detanotacreditosoliAux:detanotacreditosolisSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelDetaNotaCreditoSoli(detanotacreditosoliAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle  Solicitud Nota Credit",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlDetaNotaCreditoSolisSeleccionados() throws Exception {
		ArrayList<DetaNotaCreditoSoli> detanotacreditosolisSeleccionados=new ArrayList<DetaNotaCreditoSoli>();		
		
		detanotacreditosolisSeleccionados=this.getDetaNotaCreditoSolisSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"detanotacreditosoli.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("detanotacreditosolis");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("detanotacreditosoli");
			//elementRoot.appendChild(element);
		
			for(DetaNotaCreditoSoli detanotacreditosoliAux:detanotacreditosolisSeleccionados) {
				element = document.createElement("detanotacreditosoli");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlDetaNotaCreditoSoli(detanotacreditosoliAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Detalle  Solicitud Nota Credit",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelDetaNotaCreditoSoli(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDNOTACREDITOSOLI);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDBODEGA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPRODUCTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDUNIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPAQUE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDCENTROCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_CANTIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_PRECIO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENDESCUEN);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_IMPUESTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_TOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_CODIGOLOTE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_NUMEROCAJA);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCUENTO2);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_COSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_INCLUYEIMPUESTO);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_PORCENICE);
		cell = row.createCell(iColumn++);cell.setCellValue(DetaNotaCreditoSoliConstantesFunciones.LABEL_FECHAEMISION);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelDetaNotaCreditoSoli(DetaNotaCreditoSoli detanotacreditosoli,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getnotacreditosoli_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getbodega_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getproducto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getunidad_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getempaque_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.gettipodevolucionempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getcentrocosto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getcantidad());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getprecio());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getporcen_descuen());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getdescuento());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getimpuesto());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getporcen_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.gettotal());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getcodigo_lote());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getnumero_caja());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getdescuento2());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getcosto());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getincluye_impuesto());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getporcen_ice());
		cell = row.createCell(iColumn++);cell.setCellValue(detanotacreditosoli.getfecha_emision());				
	}
	
	public void setFilaDatosExportarXmlDetaNotaCreditoSoli(DetaNotaCreditoSoli detanotacreditosoli,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(DetaNotaCreditoSoliConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(detanotacreditosoli.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(DetaNotaCreditoSoliConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(detanotacreditosoli.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(DetaNotaCreditoSoliConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(detanotacreditosoli.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(DetaNotaCreditoSoliConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(detanotacreditosoli.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementejercicio_descripcion = document.createElement(DetaNotaCreditoSoliConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(detanotacreditosoli.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(DetaNotaCreditoSoliConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(detanotacreditosoli.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementanio_descripcion = document.createElement(DetaNotaCreditoSoliConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(detanotacreditosoli.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(DetaNotaCreditoSoliConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(detanotacreditosoli.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementnotacreditosoli_descripcion = document.createElement(DetaNotaCreditoSoliConstantesFunciones.IDNOTACREDITOSOLI);
		elementnotacreditosoli_descripcion.appendChild(document.createTextNode(detanotacreditosoli.getnotacreditosoli_descripcion()));
		element.appendChild(elementnotacreditosoli_descripcion);

		Element elementbodega_descripcion = document.createElement(DetaNotaCreditoSoliConstantesFunciones.IDBODEGA);
		elementbodega_descripcion.appendChild(document.createTextNode(detanotacreditosoli.getbodega_descripcion()));
		element.appendChild(elementbodega_descripcion);

		Element elementproducto_descripcion = document.createElement(DetaNotaCreditoSoliConstantesFunciones.IDPRODUCTO);
		elementproducto_descripcion.appendChild(document.createTextNode(detanotacreditosoli.getproducto_descripcion()));
		element.appendChild(elementproducto_descripcion);

		Element elementunidad_descripcion = document.createElement(DetaNotaCreditoSoliConstantesFunciones.IDUNIDAD);
		elementunidad_descripcion.appendChild(document.createTextNode(detanotacreditosoli.getunidad_descripcion()));
		element.appendChild(elementunidad_descripcion);

		Element elementempaque_descripcion = document.createElement(DetaNotaCreditoSoliConstantesFunciones.IDEMPAQUE);
		elementempaque_descripcion.appendChild(document.createTextNode(detanotacreditosoli.getempaque_descripcion()));
		element.appendChild(elementempaque_descripcion);

		Element elementtipodevolucionempresa_descripcion = document.createElement(DetaNotaCreditoSoliConstantesFunciones.IDTIPODEVOLUCIONEMPRESA);
		elementtipodevolucionempresa_descripcion.appendChild(document.createTextNode(detanotacreditosoli.gettipodevolucionempresa_descripcion()));
		element.appendChild(elementtipodevolucionempresa_descripcion);

		Element elementcentrocosto_descripcion = document.createElement(DetaNotaCreditoSoliConstantesFunciones.IDCENTROCOSTO);
		elementcentrocosto_descripcion.appendChild(document.createTextNode(detanotacreditosoli.getcentrocosto_descripcion()));
		element.appendChild(elementcentrocosto_descripcion);

		Element elementcantidad = document.createElement(DetaNotaCreditoSoliConstantesFunciones.CANTIDAD);
		elementcantidad.appendChild(document.createTextNode(detanotacreditosoli.getcantidad().toString().trim()));
		element.appendChild(elementcantidad);

		Element elementprecio = document.createElement(DetaNotaCreditoSoliConstantesFunciones.PRECIO);
		elementprecio.appendChild(document.createTextNode(detanotacreditosoli.getprecio().toString().trim()));
		element.appendChild(elementprecio);

		Element elementporcen_descuen = document.createElement(DetaNotaCreditoSoliConstantesFunciones.PORCENDESCUEN);
		elementporcen_descuen.appendChild(document.createTextNode(detanotacreditosoli.getporcen_descuen().toString().trim()));
		element.appendChild(elementporcen_descuen);

		Element elementdescuento = document.createElement(DetaNotaCreditoSoliConstantesFunciones.DESCUENTO);
		elementdescuento.appendChild(document.createTextNode(detanotacreditosoli.getdescuento().toString().trim()));
		element.appendChild(elementdescuento);

		Element elementimpuesto = document.createElement(DetaNotaCreditoSoliConstantesFunciones.IMPUESTO);
		elementimpuesto.appendChild(document.createTextNode(detanotacreditosoli.getimpuesto().toString().trim()));
		element.appendChild(elementimpuesto);

		Element elementporcen_iva = document.createElement(DetaNotaCreditoSoliConstantesFunciones.PORCENIVA);
		elementporcen_iva.appendChild(document.createTextNode(detanotacreditosoli.getporcen_iva().toString().trim()));
		element.appendChild(elementporcen_iva);

		Element elementtotal = document.createElement(DetaNotaCreditoSoliConstantesFunciones.TOTAL);
		elementtotal.appendChild(document.createTextNode(detanotacreditosoli.gettotal().toString().trim()));
		element.appendChild(elementtotal);

		Element elementdescripcion = document.createElement(DetaNotaCreditoSoliConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(detanotacreditosoli.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementcodigo_lote = document.createElement(DetaNotaCreditoSoliConstantesFunciones.CODIGOLOTE);
		elementcodigo_lote.appendChild(document.createTextNode(detanotacreditosoli.getcodigo_lote().trim()));
		element.appendChild(elementcodigo_lote);

		Element elementnumero_caja = document.createElement(DetaNotaCreditoSoliConstantesFunciones.NUMEROCAJA);
		elementnumero_caja.appendChild(document.createTextNode(detanotacreditosoli.getnumero_caja().trim()));
		element.appendChild(elementnumero_caja);

		Element elementdescuento2 = document.createElement(DetaNotaCreditoSoliConstantesFunciones.DESCUENTO2);
		elementdescuento2.appendChild(document.createTextNode(detanotacreditosoli.getdescuento2().toString().trim()));
		element.appendChild(elementdescuento2);

		Element elementcosto = document.createElement(DetaNotaCreditoSoliConstantesFunciones.COSTO);
		elementcosto.appendChild(document.createTextNode(detanotacreditosoli.getcosto().toString().trim()));
		element.appendChild(elementcosto);

		Element elementincluye_impuesto = document.createElement(DetaNotaCreditoSoliConstantesFunciones.INCLUYEIMPUESTO);
		elementincluye_impuesto.appendChild(document.createTextNode(detanotacreditosoli.getincluye_impuesto().toString().trim()));
		element.appendChild(elementincluye_impuesto);

		Element elementporcen_ice = document.createElement(DetaNotaCreditoSoliConstantesFunciones.PORCENICE);
		elementporcen_ice.appendChild(document.createTextNode(detanotacreditosoli.getporcen_ice().toString().trim()));
		element.appendChild(elementporcen_ice);

		Element elementfecha_emision = document.createElement(DetaNotaCreditoSoliConstantesFunciones.FECHAEMISION);
		elementfecha_emision.appendChild(document.createTextNode(detanotacreditosoli.getfecha_emision().toString().trim()));
		element.appendChild(elementfecha_emision);
	}
	
	public void generarReporteGroupGenericoDetaNotaCreditoSolisSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<DetaNotaCreditoSoli> detanotacreditosolisSeleccionados=new ArrayList<DetaNotaCreditoSoli>();
		
		detanotacreditosolisSeleccionados=this.getDetaNotaCreditoSolisSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoDetaNotaCreditoSoli(detanotacreditosolisSeleccionados);
		
		this.generarReporteDetaNotaCreditoSolis("Todos",detanotacreditosolisSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoDetaNotaCreditoSoli(ArrayList<DetaNotaCreditoSoli> detanotacreditosolisSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(DetaNotaCreditoSoli detanotacreditosoliAux:detanotacreditosolisSeleccionados) {
				detanotacreditosoliAux.setsDetalleGeneralEntityReporte(detanotacreditosoliAux.toString());
			
				if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					detanotacreditosoliAux.setsDescripcionGeneralEntityReporte1(detanotacreditosoliAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					detanotacreditosoliAux.setsDescripcionGeneralEntityReporte1(detanotacreditosoliAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					detanotacreditosoliAux.setsDescripcionGeneralEntityReporte1(detanotacreditosoliAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					detanotacreditosoliAux.setsDescripcionGeneralEntityReporte1(detanotacreditosoliAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					detanotacreditosoliAux.setsDescripcionGeneralEntityReporte1(detanotacreditosoliAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					detanotacreditosoliAux.setsDescripcionGeneralEntityReporte1(detanotacreditosoliAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDNOTACREDITOSOLI)) {
					existe=true;
					detanotacreditosoliAux.setsDescripcionGeneralEntityReporte1(detanotacreditosoliAux.getnotacreditosoli_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDBODEGA)) {
					existe=true;
					detanotacreditosoliAux.setsDescripcionGeneralEntityReporte1(detanotacreditosoliAux.getbodega_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDPRODUCTO)) {
					existe=true;
					detanotacreditosoliAux.setsDescripcionGeneralEntityReporte1(detanotacreditosoliAux.getproducto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDUNIDAD)) {
					existe=true;
					detanotacreditosoliAux.setsDescripcionGeneralEntityReporte1(detanotacreditosoliAux.getunidad_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDEMPAQUE)) {
					existe=true;
					detanotacreditosoliAux.setsDescripcionGeneralEntityReporte1(detanotacreditosoliAux.getempaque_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDTIPODEVOLUCIONEMPRESA)) {
					existe=true;
					detanotacreditosoliAux.setsDescripcionGeneralEntityReporte1(detanotacreditosoliAux.gettipodevolucionempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_IDCENTROCOSTO)) {
					existe=true;
					detanotacreditosoliAux.setsDescripcionGeneralEntityReporte1(detanotacreditosoliAux.getcentrocosto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_CANTIDAD)) {
					existe=true;
					detanotacreditosoliAux.setsDescripcionGeneralEntityReporte1(detanotacreditosoliAux.getcantidad().toString());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					detanotacreditosoliAux.setsDescripcionGeneralEntityReporte1(detanotacreditosoliAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_CODIGOLOTE)) {
					existe=true;
					detanotacreditosoliAux.setsDescripcionGeneralEntityReporte1(detanotacreditosoliAux.getcodigo_lote());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_NUMEROCAJA)) {
					existe=true;
					detanotacreditosoliAux.setsDescripcionGeneralEntityReporte1(detanotacreditosoliAux.getnumero_caja());
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_INCLUYEIMPUESTO)) {
					existe=true;
					detanotacreditosoliAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(detanotacreditosoliAux.getincluye_impuesto()));
				}
				 else if(sTipoSeleccionar.equals(DetaNotaCreditoSoliConstantesFunciones.LABEL_FECHAEMISION)) {
					existe=true;
					detanotacreditosoliAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(detanotacreditosoliAux.getfecha_emision()));
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,DetaNotaCreditoSoliConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesDetaNotaCreditoSoli(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoDetaNotaCreditoSoli=true;
				this.isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli=true;
				this.isVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli=true;
			}
			
			this.isVisibilidadCeldaModificarDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaActualizarDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaEliminarDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaCancelarDetaNotaCreditoSoli=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli=true;
				} else {
					this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaModificarDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaActualizarDetaNotaCreditoSoli=true;
			this.isVisibilidadCeldaEliminarDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaCancelarDetaNotaCreditoSoli=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli=true;
				} else {
					this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaModificarDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaActualizarDetaNotaCreditoSoli=true;
			this.isVisibilidadCeldaEliminarDetaNotaCreditoSoli=true;
			this.isVisibilidadCeldaCancelarDetaNotaCreditoSoli=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli=true;
				} else {
					this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaModificarDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaActualizarDetaNotaCreditoSoli=true;
			this.isVisibilidadCeldaEliminarDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaCancelarDetaNotaCreditoSoli=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli=false;
				} else {
					this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoDetaNotaCreditoSoli=true;
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli=true;
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli=true;
			this.isVisibilidadCeldaModificarDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaActualizarDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaEliminarDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaCancelarDetaNotaCreditoSoli=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli=true;
				} else {
					this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaActualizarDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaEliminarDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaCancelarDetaNotaCreditoSoli=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli=false;
				} else {
					this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaModificarDetaNotaCreditoSoli=true;
			this.isVisibilidadCeldaActualizarDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaEliminarDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaCancelarDetaNotaCreditoSoli=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli=false;
				} else {
					this.isVisibilidadCeldaGuardarDetaNotaCreditoSoli=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(DetaNotaCreditoSoliJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoDetaNotaCreditoSoli=true;
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli=true;
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli=true;
		} else {
			this.actualizarEstadoPanelsDetaNotaCreditoSoli(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarDetaNotaCreditoSoli=false;
			//this.isVisibilidadCeldaVerFormDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaDuplicarDetaNotaCreditoSoli=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!detanotacreditosoliSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli=false;
		} else {
			this.isVisibilidadCeldaNuevoDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaGuardarCambiosDetaNotaCreditoSoli=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
			if(!detanotacreditosoliSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli=false;												
			}
			
			this.jButtonCerrarDetaNotaCreditoSoli.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesDetaNotaCreditoSoli=false;
		}
		
		if(!this.permiteMantenimiento(this.detanotacreditosoli)) {
			this.isVisibilidadCeldaActualizarDetaNotaCreditoSoli=false;
			this.isVisibilidadCeldaEliminarDetaNotaCreditoSoli=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesDetaNotaCreditoSoli() {
	}
	
	public void actualizarEstadoPanelsDetaNotaCreditoSoli(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionDetaNotaCreditoSoli!=null) {
				this.jScrollPanelDatosEdicionDetaNotaCreditoSoli.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaNotaCreditoSoli!=null) {
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetaNotaCreditoSoli!=null) {
				this.jScrollPanelDatosDetaNotaCreditoSoli.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetaNotaCreditoSoli!=null) {
				this.jPanelPaginacionDetaNotaCreditoSoli.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetaNotaCreditoSoli!=null) {
				this.jPanelParametrosReportesDetaNotaCreditoSoli.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionDetaNotaCreditoSoli!=null) {
				this.jScrollPanelDatosEdicionDetaNotaCreditoSoli.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaNotaCreditoSoli!=null) {
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosDetaNotaCreditoSoli!=null) {
				this.jScrollPanelDatosDetaNotaCreditoSoli.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetaNotaCreditoSoli!=null) {
				this.jPanelPaginacionDetaNotaCreditoSoli.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetaNotaCreditoSoli!=null) {
				this.jPanelParametrosReportesDetaNotaCreditoSoli.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionDetaNotaCreditoSoli!=null) {
				this.jScrollPanelDatosEdicionDetaNotaCreditoSoli.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaNotaCreditoSoli!=null) {
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosDetaNotaCreditoSoli!=null) {
				this.jScrollPanelDatosDetaNotaCreditoSoli.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetaNotaCreditoSoli!=null) {
				this.jPanelPaginacionDetaNotaCreditoSoli.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetaNotaCreditoSoli!=null) {
				this.jPanelParametrosReportesDetaNotaCreditoSoli.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionDetaNotaCreditoSoli!=null) {
				this.jScrollPanelDatosEdicionDetaNotaCreditoSoli.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaNotaCreditoSoli!=null) {
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosDetaNotaCreditoSoli!=null) {
				this.jScrollPanelDatosDetaNotaCreditoSoli.setVisible(false);
			}
			
			if(this.jPanelPaginacionDetaNotaCreditoSoli!=null) {
				this.jPanelPaginacionDetaNotaCreditoSoli.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesDetaNotaCreditoSoli!=null) {
				this.jPanelParametrosReportesDetaNotaCreditoSoli.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionDetaNotaCreditoSoli!=null) {
				this.jScrollPanelDatosEdicionDetaNotaCreditoSoli.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaNotaCreditoSoli!=null) {
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetaNotaCreditoSoli!=null) {
				this.jScrollPanelDatosDetaNotaCreditoSoli.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetaNotaCreditoSoli!=null) {
				this.jPanelPaginacionDetaNotaCreditoSoli.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetaNotaCreditoSoli!=null) {
				this.jPanelParametrosReportesDetaNotaCreditoSoli.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionDetaNotaCreditoSoli!=null) {
				this.jScrollPanelDatosEdicionDetaNotaCreditoSoli.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaNotaCreditoSoli!=null) {
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetaNotaCreditoSoli!=null) {
				this.jScrollPanelDatosDetaNotaCreditoSoli.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetaNotaCreditoSoli!=null) {
				this.jPanelPaginacionDetaNotaCreditoSoli.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetaNotaCreditoSoli!=null) {
				this.jPanelParametrosReportesDetaNotaCreditoSoli.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionDetaNotaCreditoSoli!=null) {
				this.jScrollPanelDatosEdicionDetaNotaCreditoSoli.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaNotaCreditoSoli!=null) {
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosDetaNotaCreditoSoli!=null) {
				this.jScrollPanelDatosDetaNotaCreditoSoli.setVisible(true);
			}
			
			if(this.jPanelPaginacionDetaNotaCreditoSoli!=null) {
				this.jPanelPaginacionDetaNotaCreditoSoli.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesDetaNotaCreditoSoli!=null) {
				this.jPanelParametrosReportesDetaNotaCreditoSoli.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasDetaNotaCreditoSoli!=null) {
					this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesDetaNotaCreditoSoli!=null) {
				this.jPanelParametrosReportesDetaNotaCreditoSoli.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.detanotacreditosoliSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasDetaNotaCreditoSoli!=null) {
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesDetaNotaCreditoSoli!=null) {
				this.jPanelParametrosReportesDetaNotaCreditoSoli.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdBodega=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdBodegaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdCentroCosto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdCentroCostoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdEmpaque=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdEmpaqueDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdNotaCreditoSoli=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdNotaCreditoSoli) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdNotaCreditoSoliDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdProducto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdProductoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdUnidad=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdUnidadDetaNotaCreditoSoli);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdBodega=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdBodegaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdCentroCosto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdCentroCostoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdEmpaque=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdEmpaqueDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdNotaCreditoSoli=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdNotaCreditoSoli) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdNotaCreditoSoliDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdProducto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdProductoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdUnidad=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdUnidadDetaNotaCreditoSoli);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdBodega=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdBodegaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdCentroCosto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdCentroCostoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdEmpaque=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdEmpaqueDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdNotaCreditoSoli=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdNotaCreditoSoli) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdNotaCreditoSoliDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdProducto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdProductoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdUnidad=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdUnidadDetaNotaCreditoSoli);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdBodega=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdBodegaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdCentroCosto=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdCentroCostoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdEmpaque=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdEmpaqueDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdNotaCreditoSoli=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdNotaCreditoSoli) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdNotaCreditoSoliDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdProducto=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdProductoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdUnidad=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdUnidadDetaNotaCreditoSoli);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdBodega=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdBodegaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdCentroCosto=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdCentroCostoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdEmpaque=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdEmpaqueDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdNotaCreditoSoli=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdNotaCreditoSoli) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdNotaCreditoSoliDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdProducto=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdProductoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdUnidad=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdUnidadDetaNotaCreditoSoli);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdBodega=isParaMesNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdBodegaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdCentroCosto=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdCentroCostoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdEmpaque=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdEmpaqueDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdNotaCreditoSoli=isParaMesNegation;
			if(!this.isVisibilidadFK_IdNotaCreditoSoli) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdNotaCreditoSoliDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdProducto=isParaMesNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdProductoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdUnidad=isParaMesNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdUnidadDetaNotaCreditoSoli);}
		}
		
	}

	public void setVisibilidadBusquedasParaNotaCreditoSoli(Boolean isParaNotaCreditoSoli){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaNotaCreditoSoliNegation=!isParaNotaCreditoSoli;

			this.isVisibilidadFK_IdBodega=isParaNotaCreditoSoliNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdBodegaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdCentroCosto=isParaNotaCreditoSoliNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdCentroCostoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdEmpaque=isParaNotaCreditoSoliNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdEmpaqueDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdNotaCreditoSoli=isParaNotaCreditoSoli;
			if(!this.isVisibilidadFK_IdNotaCreditoSoli) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdNotaCreditoSoliDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdProducto=isParaNotaCreditoSoliNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdProductoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaNotaCreditoSoliNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdUnidad=isParaNotaCreditoSoliNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdUnidadDetaNotaCreditoSoli);}
		}
		
	}

	public void setVisibilidadBusquedasParaBodega(Boolean isParaBodega){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaBodegaNegation=!isParaBodega;

			this.isVisibilidadFK_IdBodega=isParaBodega;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdBodegaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdCentroCosto=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdCentroCostoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdEmpaque=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdEmpaqueDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdNotaCreditoSoli=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdNotaCreditoSoli) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdNotaCreditoSoliDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdProducto=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdProductoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdUnidad=isParaBodegaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdUnidadDetaNotaCreditoSoli);}
		}
		
	}

	public void setVisibilidadBusquedasParaProducto(Boolean isParaProducto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaProductoNegation=!isParaProducto;

			this.isVisibilidadFK_IdBodega=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdBodegaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdCentroCosto=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdCentroCostoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdEmpaque=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdEmpaqueDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdNotaCreditoSoli=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdNotaCreditoSoli) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdNotaCreditoSoliDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdProducto=isParaProducto;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdProductoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdUnidad=isParaProductoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdUnidadDetaNotaCreditoSoli);}
		}
		
	}

	public void setVisibilidadBusquedasParaUnidad(Boolean isParaUnidad){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUnidadNegation=!isParaUnidad;

			this.isVisibilidadFK_IdBodega=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdBodegaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdCentroCosto=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdCentroCostoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdEmpaque=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdEmpaqueDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdNotaCreditoSoli=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdNotaCreditoSoli) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdNotaCreditoSoliDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdProducto=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdProductoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaUnidadNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdUnidad=isParaUnidad;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdUnidadDetaNotaCreditoSoli);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpaque(Boolean isParaEmpaque){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpaqueNegation=!isParaEmpaque;

			this.isVisibilidadFK_IdBodega=isParaEmpaqueNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdBodegaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdCentroCosto=isParaEmpaqueNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdCentroCostoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdEmpaque=isParaEmpaque;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdEmpaqueDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdNotaCreditoSoli=isParaEmpaqueNegation;
			if(!this.isVisibilidadFK_IdNotaCreditoSoli) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdNotaCreditoSoliDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdProducto=isParaEmpaqueNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdProductoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaEmpaqueNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdUnidad=isParaEmpaqueNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdUnidadDetaNotaCreditoSoli);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoDevolucionEmpresa(Boolean isParaTipoDevolucionEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoDevolucionEmpresaNegation=!isParaTipoDevolucionEmpresa;

			this.isVisibilidadFK_IdBodega=isParaTipoDevolucionEmpresaNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdBodegaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdCentroCosto=isParaTipoDevolucionEmpresaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdCentroCostoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdEmpaque=isParaTipoDevolucionEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdEmpaqueDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdNotaCreditoSoli=isParaTipoDevolucionEmpresaNegation;
			if(!this.isVisibilidadFK_IdNotaCreditoSoli) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdNotaCreditoSoliDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdProducto=isParaTipoDevolucionEmpresaNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdProductoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaTipoDevolucionEmpresa;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdUnidad=isParaTipoDevolucionEmpresaNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdUnidadDetaNotaCreditoSoli);}
		}
		
	}

	public void setVisibilidadBusquedasParaCentroCosto(Boolean isParaCentroCosto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCentroCostoNegation=!isParaCentroCosto;

			this.isVisibilidadFK_IdBodega=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdBodega) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdBodegaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdCentroCosto=isParaCentroCosto;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdCentroCostoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdEmpaque=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdEmpaque) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdEmpaqueDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdNotaCreditoSoli=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdNotaCreditoSoli) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdNotaCreditoSoliDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdProducto=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdProducto) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdProductoDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdTipoDevolucionEmpresa=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoDevolucionEmpresa) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);}

			this.isVisibilidadFK_IdUnidad=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdUnidad) {this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(jPanelFK_IdUnidadDetaNotaCreditoSoli);}
		}
		
	}
	
	
	
	

	public String registrarSesionDetaNotaCreditoSoliParaBusquedaProductos() throws Exception {
		Boolean isPaginaPopupProducto=false;

		try {

			if(detanotacreditosoliSessionBean==null) {
				detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
			}

			if(productoSessionBean==null) {
				productoSessionBean=new ProductoSessionBean();
			}

			productoSessionBean.setsPathNavegacionActual(detanotacreditosoliSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ProductoConstantesFunciones.SCLASSWEBTITULO);
			productoSessionBean.setisPermiteRecargarInformacion(false);
			productoSessionBean.setisPaginaPopup(true);
			isPaginaPopupProducto=productoSessionBean.getisPaginaPopup();
			productoSessionBean.setisPaginaPopup(false);
			productoSessionBean.setEstaModoBusqueda(true);
			productoSessionBean.setsFuncionBusquedaRapida("window.opener.detanotacreditosoliFuncionGeneral.setCombosCodigoDesdeBusquedaid_producto(TO_REPLACE);");
			productoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeProducto(true);
			productoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeProducto(DetaNotaCreditoSoliConstantesFunciones.SNOMBREOPCION);
			//productoSessionBean.setisBusquedaDesdeForeignKeySesionDetaNotaCreditoSoli(true);
			//productoSessionBean.setlidDetaNotaCreditoSoliActual(this.idDetaNotaCreditoSoliActual);

			detanotacreditosoliSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetaNotaCreditoSoli(true);
			detanotacreditosoliSessionBean.setlIdDetaNotaCreditoSoliActualForeignKey(this.idDetaNotaCreditoSoliActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionDetaNotaCreditoSoliParaBusquedaCentroCostos() throws Exception {
		Boolean isPaginaPopupCentroCosto=false;

		try {

			if(detanotacreditosoliSessionBean==null) {
				detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
			}

			if(centrocostoSessionBean==null) {
				centrocostoSessionBean=new CentroCostoSessionBean();
			}

			centrocostoSessionBean.setsPathNavegacionActual(detanotacreditosoliSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CentroCostoConstantesFunciones.SCLASSWEBTITULO);
			centrocostoSessionBean.setisPermiteRecargarInformacion(false);
			centrocostoSessionBean.setisPaginaPopup(true);
			isPaginaPopupCentroCosto=centrocostoSessionBean.getisPaginaPopup();
			centrocostoSessionBean.setisPaginaPopup(false);
			centrocostoSessionBean.setEstaModoBusqueda(true);
			centrocostoSessionBean.setsFuncionBusquedaRapida("window.opener.detanotacreditosoliFuncionGeneral.setCombosCodigoDesdeBusquedaid_centro_costo(TO_REPLACE);");
			centrocostoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCentroCosto(true);
			centrocostoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCentroCosto(DetaNotaCreditoSoliConstantesFunciones.SNOMBREOPCION);
			//centrocostoSessionBean.setisBusquedaDesdeForeignKeySesionDetaNotaCreditoSoli(true);
			//centrocostoSessionBean.setlidDetaNotaCreditoSoliActual(this.idDetaNotaCreditoSoliActual);

			detanotacreditosoliSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyDetaNotaCreditoSoli(true);
			detanotacreditosoliSessionBean.setlIdDetaNotaCreditoSoliActualForeignKey(this.idDetaNotaCreditoSoliActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//DetaNotaCreditoSoliSessionBean detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
		
		if(this.detanotacreditosoliSessionBean==null) {
			this.detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
		}
		
		this.detanotacreditosoliSessionBean.setsUltimaBusquedaDetaNotaCreditoSoli(this.getsAccionBusqueda());
		this.detanotacreditosoliSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.detanotacreditosoliSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
			detanotacreditosoliSessionBean.setid_bodega(this.getid_bodegaFK_IdBodega());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
			detanotacreditosoliSessionBean.setid_centro_costo(this.getid_centro_costoFK_IdCentroCosto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			detanotacreditosoliSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpaque")) {
			detanotacreditosoliSessionBean.setid_empaque(this.getid_empaqueFK_IdEmpaque());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			detanotacreditosoliSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdNotaCreditoSoli")) {
			detanotacreditosoliSessionBean.setid_nota_credito_soli(this.getid_nota_credito_soliFK_IdNotaCreditoSoli());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			detanotacreditosoliSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdProducto")) {
			detanotacreditosoliSessionBean.setid_producto(this.getid_productoFK_IdProducto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			detanotacreditosoliSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoDevolucionEmpresa")) {
			detanotacreditosoliSessionBean.setid_tipo_devolucion_empresa(this.getid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUnidad")) {
			detanotacreditosoliSessionBean.setid_unidad(this.getid_unidadFK_IdUnidad());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//DetaNotaCreditoSoliSessionBean detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
		
		if(this.detanotacreditosoliSessionBean==null) {
			this.detanotacreditosoliSessionBean=new DetaNotaCreditoSoliSessionBean();
		}
		
		if(this.detanotacreditosoliSessionBean.getsUltimaBusquedaDetaNotaCreditoSoli()!=null&&!this.detanotacreditosoliSessionBean.getsUltimaBusquedaDetaNotaCreditoSoli().equals("")) {
			this.setsAccionBusqueda(detanotacreditosoliSessionBean.getsUltimaBusquedaDetaNotaCreditoSoli());
			this.setiNumeroPaginacion(detanotacreditosoliSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(detanotacreditosoliSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdBodega")) {
				this.setid_bodegaFK_IdBodega(detanotacreditosoliSessionBean.getid_bodega());
				detanotacreditosoliSessionBean.setid_bodega(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
				this.setid_centro_costoFK_IdCentroCosto(detanotacreditosoliSessionBean.getid_centro_costo());
				detanotacreditosoliSessionBean.setid_centro_costo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(detanotacreditosoliSessionBean.getid_ejercicio());
				detanotacreditosoliSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpaque")) {
				this.setid_empaqueFK_IdEmpaque(detanotacreditosoliSessionBean.getid_empaque());
				detanotacreditosoliSessionBean.setid_empaque(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(detanotacreditosoliSessionBean.getid_empresa());
				detanotacreditosoliSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdNotaCreditoSoli")) {
				this.setid_nota_credito_soliFK_IdNotaCreditoSoli(detanotacreditosoliSessionBean.getid_nota_credito_soli());
				detanotacreditosoliSessionBean.setid_nota_credito_soli(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(detanotacreditosoliSessionBean.getid_periodo());
				detanotacreditosoliSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdProducto")) {
				this.setid_productoFK_IdProducto(detanotacreditosoliSessionBean.getid_producto());
				detanotacreditosoliSessionBean.setid_producto(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(detanotacreditosoliSessionBean.getid_sucursal());
				detanotacreditosoliSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoDevolucionEmpresa")) {
				this.setid_tipo_devolucion_empresaFK_IdTipoDevolucionEmpresa(detanotacreditosoliSessionBean.getid_tipo_devolucion_empresa());
				detanotacreditosoliSessionBean.setid_tipo_devolucion_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUnidad")) {
				this.setid_unidadFK_IdUnidad(detanotacreditosoliSessionBean.getid_unidad());
				detanotacreditosoliSessionBean.setid_unidad(-1L);
			}
		}
		
		this.detanotacreditosoliSessionBean.setsUltimaBusquedaDetaNotaCreditoSoli("");
		this.detanotacreditosoliSessionBean.setiNumeroPaginacion(DetaNotaCreditoSoliConstantesFunciones.INUMEROPAGINACION);
		this.detanotacreditosoliSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaDetaNotaCreditoSoli(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioDetaNotaCreditoSoli() {
		this.updateBorderResaltarBusquedasFormularioDetaNotaCreditoSoli();
		this.updateVisibilidadBusquedasFormularioDetaNotaCreditoSoli();
		this.updateHabilitarBusquedasFormularioDetaNotaCreditoSoli();
	}
	
	public void updateBorderResaltarBusquedasFormularioDetaNotaCreditoSoli() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponents().length>0) {
	

		if(this.detanotacreditosoliConstantesFunciones.resaltarFK_IdBodegaDetaNotaCreditoSoli!=null) {
			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdBodegaDetaNotaCreditoSoli);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);
				jPanel.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarFK_IdBodegaDetaNotaCreditoSoli);
			}
		}

		if(this.detanotacreditosoliConstantesFunciones.resaltarFK_IdCentroCostoDetaNotaCreditoSoli!=null) {
			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdCentroCostoDetaNotaCreditoSoli);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);
				jPanel.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarFK_IdCentroCostoDetaNotaCreditoSoli);
			}
		}

		if(this.detanotacreditosoliConstantesFunciones.resaltarFK_IdEmpaqueDetaNotaCreditoSoli!=null) {
			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdEmpaqueDetaNotaCreditoSoli);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);
				jPanel.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarFK_IdEmpaqueDetaNotaCreditoSoli);
			}
		}

		if(this.detanotacreditosoliConstantesFunciones.resaltarFK_IdNotaCreditoSoliDetaNotaCreditoSoli!=null) {
			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdNotaCreditoSoliDetaNotaCreditoSoli);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);
				jPanel.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarFK_IdNotaCreditoSoliDetaNotaCreditoSoli);
			}
		}

		if(this.detanotacreditosoliConstantesFunciones.resaltarFK_IdProductoDetaNotaCreditoSoli!=null) {
			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdProductoDetaNotaCreditoSoli);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);
				jPanel.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarFK_IdProductoDetaNotaCreditoSoli);
			}
		}

		if(this.detanotacreditosoliConstantesFunciones.resaltarFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli!=null) {
			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);
				jPanel.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);
			}
		}

		if(this.detanotacreditosoliConstantesFunciones.resaltarFK_IdUnidadDetaNotaCreditoSoli!=null) {
			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdUnidadDetaNotaCreditoSoli);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);
				jPanel.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarFK_IdUnidadDetaNotaCreditoSoli);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioDetaNotaCreditoSoli() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdBodegaDetaNotaCreditoSoli);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarFK_IdBodegaDetaNotaCreditoSoli);
			if(!this.detanotacreditosoliConstantesFunciones.mostrarFK_IdBodegaDetaNotaCreditoSoli && index>-1) {
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdCentroCostoDetaNotaCreditoSoli);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarFK_IdCentroCostoDetaNotaCreditoSoli);
			if(!this.detanotacreditosoliConstantesFunciones.mostrarFK_IdCentroCostoDetaNotaCreditoSoli && index>-1) {
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdEmpaqueDetaNotaCreditoSoli);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarFK_IdEmpaqueDetaNotaCreditoSoli);
			if(!this.detanotacreditosoliConstantesFunciones.mostrarFK_IdEmpaqueDetaNotaCreditoSoli && index>-1) {
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdNotaCreditoSoliDetaNotaCreditoSoli);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarFK_IdNotaCreditoSoliDetaNotaCreditoSoli);
			if(!this.detanotacreditosoliConstantesFunciones.mostrarFK_IdNotaCreditoSoliDetaNotaCreditoSoli && index>-1) {
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdProductoDetaNotaCreditoSoli);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarFK_IdProductoDetaNotaCreditoSoli);
			if(!this.detanotacreditosoliConstantesFunciones.mostrarFK_IdProductoDetaNotaCreditoSoli && index>-1) {
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);
			if(!this.detanotacreditosoliConstantesFunciones.mostrarFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli && index>-1) {
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(index);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdUnidadDetaNotaCreditoSoli);
			jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarFK_IdUnidadDetaNotaCreditoSoli);
			if(!this.detanotacreditosoliConstantesFunciones.mostrarFK_IdUnidadDetaNotaCreditoSoli && index>-1) {
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioDetaNotaCreditoSoli() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdBodegaDetaNotaCreditoSoli);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detanotacreditosoliConstantesFunciones.activarFK_IdBodegaDetaNotaCreditoSoli);
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setEnabledAt(index,this.detanotacreditosoliConstantesFunciones.activarFK_IdBodegaDetaNotaCreditoSoli);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdCentroCostoDetaNotaCreditoSoli);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detanotacreditosoliConstantesFunciones.activarFK_IdCentroCostoDetaNotaCreditoSoli);
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setEnabledAt(index,this.detanotacreditosoliConstantesFunciones.activarFK_IdCentroCostoDetaNotaCreditoSoli);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdEmpaqueDetaNotaCreditoSoli);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detanotacreditosoliConstantesFunciones.activarFK_IdEmpaqueDetaNotaCreditoSoli);
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setEnabledAt(index,this.detanotacreditosoliConstantesFunciones.activarFK_IdEmpaqueDetaNotaCreditoSoli);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdNotaCreditoSoliDetaNotaCreditoSoli);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detanotacreditosoliConstantesFunciones.activarFK_IdNotaCreditoSoliDetaNotaCreditoSoli);
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setEnabledAt(index,this.detanotacreditosoliConstantesFunciones.activarFK_IdNotaCreditoSoliDetaNotaCreditoSoli);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdProductoDetaNotaCreditoSoli);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detanotacreditosoliConstantesFunciones.activarFK_IdProductoDetaNotaCreditoSoli);
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setEnabledAt(index,this.detanotacreditosoliConstantesFunciones.activarFK_IdProductoDetaNotaCreditoSoli);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detanotacreditosoliConstantesFunciones.activarFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setEnabledAt(index,this.detanotacreditosoliConstantesFunciones.activarFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);
			}

			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdUnidadDetaNotaCreditoSoli);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.detanotacreditosoliConstantesFunciones.activarFK_IdUnidadDetaNotaCreditoSoli);
				this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setEnabledAt(index,this.detanotacreditosoliConstantesFunciones.activarFK_IdUnidadDetaNotaCreditoSoli);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaDetaNotaCreditoSoli(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdBodega")) {
			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdBodegaDetaNotaCreditoSoli);

			this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);

			this.detanotacreditosoliConstantesFunciones.setResaltarFK_IdBodegaDetaNotaCreditoSoli(resaltar);

			jPanel.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarFK_IdBodegaDetaNotaCreditoSoli);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCentroCosto")) {
			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdCentroCostoDetaNotaCreditoSoli);

			this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);

			this.detanotacreditosoliConstantesFunciones.setResaltarFK_IdCentroCostoDetaNotaCreditoSoli(resaltar);

			jPanel.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarFK_IdCentroCostoDetaNotaCreditoSoli);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmpaque")) {
			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdEmpaqueDetaNotaCreditoSoli);

			this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);

			this.detanotacreditosoliConstantesFunciones.setResaltarFK_IdEmpaqueDetaNotaCreditoSoli(resaltar);

			jPanel.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarFK_IdEmpaqueDetaNotaCreditoSoli);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdNotaCreditoSoli")) {
			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdNotaCreditoSoliDetaNotaCreditoSoli);

			this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);

			this.detanotacreditosoliConstantesFunciones.setResaltarFK_IdNotaCreditoSoliDetaNotaCreditoSoli(resaltar);

			jPanel.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarFK_IdNotaCreditoSoliDetaNotaCreditoSoli);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdProducto")) {
			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdProductoDetaNotaCreditoSoli);

			this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);

			this.detanotacreditosoliConstantesFunciones.setResaltarFK_IdProductoDetaNotaCreditoSoli(resaltar);

			jPanel.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarFK_IdProductoDetaNotaCreditoSoli);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoDevolucionEmpresa")) {
			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);

			this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);

			this.detanotacreditosoliConstantesFunciones.setResaltarFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli(resaltar);

			jPanel.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarFK_IdTipoDevolucionEmpresaDetaNotaCreditoSoli);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdUnidad")) {
			index= this.jTabbedPaneBusquedasDetaNotaCreditoSoli.indexOfComponent(this.jPanelFK_IdUnidadDetaNotaCreditoSoli);

			this.jTabbedPaneBusquedasDetaNotaCreditoSoli.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasDetaNotaCreditoSoli.getComponent(index);

			this.detanotacreditosoliConstantesFunciones.setResaltarFK_IdUnidadDetaNotaCreditoSoli(resaltar);

			jPanel.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarFK_IdUnidadDetaNotaCreditoSoli);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarDetaNotaCreditoSoli.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioDetaNotaCreditoSoli() throws Exception {

		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioDetaNotaCreditoSoli();
		this.updateVisibilidadResaltarControlesFormularioDetaNotaCreditoSoli();
		this.updateHabilitarResaltarControlesFormularioDetaNotaCreditoSoli();
		
	}
	
	public void updateBorderResaltarControlesFormularioDetaNotaCreditoSoli() throws Exception {
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.detanotacreditosoliConstantesFunciones.resaltaridDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelidDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltaridDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarid_empresaDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empresaDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarid_empresaDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarid_sucursalDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_sucursalDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarid_sucursalDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarid_ejercicioDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_ejercicioDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarid_ejercicioDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarid_periodoDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_periodoDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarid_periodoDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarid_anioDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_anioDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarid_anioDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarid_mesDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_mesDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarid_mesDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarid_nota_credito_soliDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_nota_credito_soliDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarid_nota_credito_soliDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarid_bodegaDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarid_bodegaDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarid_productoDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarid_productoDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarid_unidadDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_unidadDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarid_unidadDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarid_empaqueDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empaqueDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarid_empaqueDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarid_tipo_devolucion_empresaDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarid_tipo_devolucion_empresaDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarid_centro_costoDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_centro_costoDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarid_centro_costoDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarcantidadDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldcantidadDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarcantidadDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarprecioDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldprecioDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarprecioDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarporcen_descuenDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldporcen_descuenDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarporcen_descuenDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltardescuentoDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFielddescuentoDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltardescuentoDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarimpuestoDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldimpuestoDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarimpuestoDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarporcen_ivaDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldporcen_ivaDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarporcen_ivaDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltartotalDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldtotalDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltartotalDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltardescripcionDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextAreadescripcionDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltardescripcionDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarcodigo_loteDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldcodigo_loteDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarcodigo_loteDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarnumero_cajaDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldnumero_cajaDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarnumero_cajaDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltardescuento2DetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFielddescuento2DetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltardescuento2DetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarcostoDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldcostoDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarcostoDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarincluye_impuestoDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jCheckBoxincluye_impuestoDetaNotaCreditoSoli.setBorderPainted(true);this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jCheckBoxincluye_impuestoDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarincluye_impuestoDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarporcen_iceDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldporcen_iceDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarporcen_iceDetaNotaCreditoSoli);}
		if(this.detanotacreditosoliConstantesFunciones.resaltarfecha_emisionDetaNotaCreditoSoli!=null && this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jDateChooserfecha_emisionDetaNotaCreditoSoli.setBorder(this.detanotacreditosoliConstantesFunciones.resaltarfecha_emisionDetaNotaCreditoSoli);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioDetaNotaCreditoSoli() throws Exception {		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
	
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelidDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostraridDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelidDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostraridDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empresaDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_empresaDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelid_empresaDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_empresaDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_sucursalDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_sucursalDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelid_sucursalDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_sucursalDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_ejercicioDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_ejercicioDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelid_ejercicioDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_ejercicioDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_periodoDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_periodoDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelid_periodoDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_periodoDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_anioDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_anioDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelid_anioDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_anioDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_mesDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_mesDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelid_mesDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_mesDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_nota_credito_soliDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_nota_credito_soliDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelid_nota_credito_soliDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_nota_credito_soliDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_bodegaDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelid_bodegaDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_bodegaDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_productoDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelid_productoDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_productoDetaNotaCreditoSoli);
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_productoDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_productoDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_unidadDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_unidadDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelid_unidadDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_unidadDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empaqueDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_empaqueDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelid_empaqueDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_empaqueDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_tipo_devolucion_empresaDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelid_tipo_devolucion_empresaDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_tipo_devolucion_empresaDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_centro_costoDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_centro_costoDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelid_centro_costoDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_centro_costoDetaNotaCreditoSoli);
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_centro_costoDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarid_centro_costoDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldcantidadDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarcantidadDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelcantidadDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarcantidadDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldprecioDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarprecioDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelprecioDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarprecioDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldporcen_descuenDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarporcen_descuenDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelporcen_descuenDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarporcen_descuenDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFielddescuentoDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrardescuentoDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPaneldescuentoDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrardescuentoDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldimpuestoDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarimpuestoDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelimpuestoDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarimpuestoDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldporcen_ivaDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarporcen_ivaDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelporcen_ivaDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarporcen_ivaDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldtotalDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrartotalDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPaneltotalDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrartotalDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextAreadescripcionDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrardescripcionDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPaneldescripcionDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrardescripcionDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldcodigo_loteDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarcodigo_loteDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelcodigo_loteDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarcodigo_loteDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldnumero_cajaDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarnumero_cajaDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelnumero_cajaDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarnumero_cajaDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFielddescuento2DetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrardescuento2DetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPaneldescuento2DetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrardescuento2DetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldcostoDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarcostoDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelcostoDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarcostoDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jCheckBoxincluye_impuestoDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarincluye_impuestoDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelincluye_impuestoDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarincluye_impuestoDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldporcen_iceDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarporcen_iceDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelporcen_iceDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarporcen_iceDetaNotaCreditoSoli);
		//this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jDateChooserfecha_emisionDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarfecha_emisionDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jPanelfecha_emisionDetaNotaCreditoSoli.setVisible(this.detanotacreditosoliConstantesFunciones.mostrarfecha_emisionDetaNotaCreditoSoli);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioDetaNotaCreditoSoli() throws Exception {
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormDetaNotaCreditoSoli!=null) {
	
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jLabelidDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activaridDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empresaDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarid_empresaDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_sucursalDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarid_sucursalDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_ejercicioDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarid_ejercicioDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_periodoDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarid_periodoDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_anioDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarid_anioDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_mesDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarid_mesDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_nota_credito_soliDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarid_nota_credito_soliDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_bodegaDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarid_bodegaDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_productoDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarid_productoDetaNotaCreditoSoli);
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_productoDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarid_productoDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_unidadDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarid_unidadDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_empaqueDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarid_empaqueDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_tipo_devolucion_empresaDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarid_tipo_devolucion_empresaDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jComboBoxid_centro_costoDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarid_centro_costoDetaNotaCreditoSoli);
			this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jButtonid_centro_costoDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarid_centro_costoDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldcantidadDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarcantidadDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldprecioDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarprecioDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldporcen_descuenDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarporcen_descuenDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFielddescuentoDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activardescuentoDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldimpuestoDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarimpuestoDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldporcen_ivaDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarporcen_ivaDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldtotalDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activartotalDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextAreadescripcionDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activardescripcionDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldcodigo_loteDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarcodigo_loteDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldnumero_cajaDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarnumero_cajaDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFielddescuento2DetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activardescuento2DetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldcostoDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarcostoDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jCheckBoxincluye_impuestoDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarincluye_impuestoDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jTextFieldporcen_iceDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarporcen_iceDetaNotaCreditoSoli);
		this.jInternalFrameDetalleFormDetaNotaCreditoSoli.jDateChooserfecha_emisionDetaNotaCreditoSoli.setEnabled(this.detanotacreditosoliConstantesFunciones.activarfecha_emisionDetaNotaCreditoSoli);
		}
	}
	
		
}