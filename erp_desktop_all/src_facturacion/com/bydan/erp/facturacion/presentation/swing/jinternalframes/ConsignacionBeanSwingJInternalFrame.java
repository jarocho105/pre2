/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.facturacion.presentation.swing.jinternalframes;


import java.sql.Time;


import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.facturacion.util.ConsignacionConstantesFunciones;
import com.bydan.erp.facturacion.util.ConsignacionParameterReturnGeneral;
//import com.bydan.erp.facturacion.util.ConsignacionParameterGeneral;
//import com.bydan.erp.facturacion.presentation.report.source.ConsignacionBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.facturacion.resources.reportes.AuxiliarReportes;


import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.facturacion.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.nomina.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;
import com.bydan.erp.comisiones.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.facturacion.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;
import com.bydan.erp.comisiones.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.comisiones.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.nomina.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.comisiones.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.nomina.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.comisiones.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.nomina.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.comisiones.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class ConsignacionBeanSwingJInternalFrame extends ConsignacionJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(ConsignacionBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<Consignacion> consignacionValidator = new ClassValidator<Consignacion>(Consignacion.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public Consignacion consignacion;	
	public Consignacion consignacionAux;
	public Consignacion consignacionAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public Consignacion consignacionTotales;
	public Long idConsignacionActual;
	public Long iIdNuevoConsignacion=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

	public String sFinalQueryComboUsuario="";

	public List<Usuario> usuariosForeignKey;

	public List<Usuario> getusuariosForeignKey() {
		return usuariosForeignKey;
	}

	public void setusuariosForeignKey(List<Usuario> usuariosForeignKey) {
		this.usuariosForeignKey = usuariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Usuario usuarioForeignKey;

	public Usuario getusuarioForeignKey() {
		return usuarioForeignKey;
	}

	public void setusuarioForeignKey(Usuario usuarioForeignKey) {
		this.usuarioForeignKey = usuarioForeignKey;
	}

	public String sFinalQueryComboMoneda="";

	public List<Moneda> monedasForeignKey;

	public List<Moneda> getmonedasForeignKey() {
		return monedasForeignKey;
	}

	public void setmonedasForeignKey(List<Moneda> monedasForeignKey) {
		this.monedasForeignKey = monedasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Moneda monedaForeignKey;

	public Moneda getmonedaForeignKey() {
		return monedaForeignKey;
	}

	public void setmonedaForeignKey(Moneda monedaForeignKey) {
		this.monedaForeignKey = monedaForeignKey;
	}

	public String sFinalQueryComboEmpleado="";

	public List<Empleado> empleadosForeignKey;

	public List<Empleado> getempleadosForeignKey() {
		return empleadosForeignKey;
	}

	public void setempleadosForeignKey(List<Empleado> empleadosForeignKey) {
		this.empleadosForeignKey = empleadosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empleado empleadoForeignKey;

	public Empleado getempleadoForeignKey() {
		return empleadoForeignKey;
	}

	public void setempleadoForeignKey(Empleado empleadoForeignKey) {
		this.empleadoForeignKey = empleadoForeignKey;
	}

	public String sFinalQueryComboTipoPrecio="";

	public List<TipoPrecio> tipopreciosForeignKey;

	public List<TipoPrecio> gettipopreciosForeignKey() {
		return tipopreciosForeignKey;
	}

	public void settipopreciosForeignKey(List<TipoPrecio> tipopreciosForeignKey) {
		this.tipopreciosForeignKey = tipopreciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoPrecio tipoprecioForeignKey;

	public TipoPrecio gettipoprecioForeignKey() {
		return tipoprecioForeignKey;
	}

	public void settipoprecioForeignKey(TipoPrecio tipoprecioForeignKey) {
		this.tipoprecioForeignKey = tipoprecioForeignKey;
	}

	public String sFinalQueryComboFormato="";

	public List<Formato> formatosForeignKey;

	public List<Formato> getformatosForeignKey() {
		return formatosForeignKey;
	}

	public void setformatosForeignKey(List<Formato> formatosForeignKey) {
		this.formatosForeignKey = formatosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Formato formatoForeignKey;

	public Formato getformatoForeignKey() {
		return formatoForeignKey;
	}

	public void setformatoForeignKey(Formato formatoForeignKey) {
		this.formatoForeignKey = formatoForeignKey;
	}

	public String sFinalQueryComboCliente="";

	public List<Cliente> clientesForeignKey;

	public List<Cliente> getclientesForeignKey() {
		return clientesForeignKey;
	}

	public void setclientesForeignKey(List<Cliente> clientesForeignKey) {
		this.clientesForeignKey = clientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteForeignKey;

	public Cliente getclienteForeignKey() {
		return clienteForeignKey;
	}

	public void setclienteForeignKey(Cliente clienteForeignKey) {
		this.clienteForeignKey = clienteForeignKey;
	}

	public String sFinalQueryComboSubCliente="";

	public List<SubCliente> subclientesForeignKey;

	public List<SubCliente> getsubclientesForeignKey() {
		return subclientesForeignKey;
	}

	public void setsubclientesForeignKey(List<SubCliente> subclientesForeignKey) {
		this.subclientesForeignKey = subclientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public SubCliente subclienteForeignKey;

	public SubCliente getsubclienteForeignKey() {
		return subclienteForeignKey;
	}

	public void setsubclienteForeignKey(SubCliente subclienteForeignKey) {
		this.subclienteForeignKey = subclienteForeignKey;
	}

	public String sFinalQueryComboConsignatario="";

	public List<Consignatario> consignatariosForeignKey;

	public List<Consignatario> getconsignatariosForeignKey() {
		return consignatariosForeignKey;
	}

	public void setconsignatariosForeignKey(List<Consignatario> consignatariosForeignKey) {
		this.consignatariosForeignKey = consignatariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Consignatario consignatarioForeignKey;

	public Consignatario getconsignatarioForeignKey() {
		return consignatarioForeignKey;
	}

	public void setconsignatarioForeignKey(Consignatario consignatarioForeignKey) {
		this.consignatarioForeignKey = consignatarioForeignKey;
	}

	public String sFinalQueryComboVendedor="";

	public List<Vendedor> vendedorsForeignKey;

	public List<Vendedor> getvendedorsForeignKey() {
		return vendedorsForeignKey;
	}

	public void setvendedorsForeignKey(List<Vendedor> vendedorsForeignKey) {
		this.vendedorsForeignKey = vendedorsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Vendedor vendedorForeignKey;

	public Vendedor getvendedorForeignKey() {
		return vendedorForeignKey;
	}

	public void setvendedorForeignKey(Vendedor vendedorForeignKey) {
		this.vendedorForeignKey = vendedorForeignKey;
	}

	public String sFinalQueryComboEstadoPedido="";

	public List<EstadoPedido> estadopedidosForeignKey;

	public List<EstadoPedido> getestadopedidosForeignKey() {
		return estadopedidosForeignKey;
	}

	public void setestadopedidosForeignKey(List<EstadoPedido> estadopedidosForeignKey) {
		this.estadopedidosForeignKey = estadopedidosForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoPedido estadopedidoForeignKey;

	public EstadoPedido getestadopedidoForeignKey() {
		return estadopedidoForeignKey;
	}

	public void setestadopedidoForeignKey(EstadoPedido estadopedidoForeignKey) {
		this.estadopedidoForeignKey = estadopedidoForeignKey;
	}

	public String sFinalQueryComboTipoCambio="";

	public List<TipoCambio> tipocambiosForeignKey;

	public List<TipoCambio> gettipocambiosForeignKey() {
		return tipocambiosForeignKey;
	}

	public void settipocambiosForeignKey(List<TipoCambio> tipocambiosForeignKey) {
		this.tipocambiosForeignKey = tipocambiosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoCambio tipocambioForeignKey;

	public TipoCambio gettipocambioForeignKey() {
		return tipocambioForeignKey;
	}

	public void settipocambioForeignKey(TipoCambio tipocambioForeignKey) {
		this.tipocambioForeignKey = tipocambioForeignKey;
	}

	public String sFinalQueryComboZona="";

	public List<Zona> zonasForeignKey;

	public List<Zona> getzonasForeignKey() {
		return zonasForeignKey;
	}

	public void setzonasForeignKey(List<Zona> zonasForeignKey) {
		this.zonasForeignKey = zonasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Zona zonaForeignKey;

	public Zona getzonaForeignKey() {
		return zonaForeignKey;
	}

	public void setzonaForeignKey(Zona zonaForeignKey) {
		this.zonaForeignKey = zonaForeignKey;
	}

	public String sFinalQueryComboCentroCosto="";

	public List<CentroCosto> centrocostosForeignKey;

	public List<CentroCosto> getcentrocostosForeignKey() {
		return centrocostosForeignKey;
	}

	public void setcentrocostosForeignKey(List<CentroCosto> centrocostosForeignKey) {
		this.centrocostosForeignKey = centrocostosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CentroCosto centrocostoForeignKey;

	public CentroCosto getcentrocostoForeignKey() {
		return centrocostoForeignKey;
	}

	public void setcentrocostoForeignKey(CentroCosto centrocostoForeignKey) {
		this.centrocostoForeignKey = centrocostoForeignKey;
	}

	public String sFinalQueryComboResponsable="";

	public List<Responsable> responsablesForeignKey;

	public List<Responsable> getresponsablesForeignKey() {
		return responsablesForeignKey;
	}

	public void setresponsablesForeignKey(List<Responsable> responsablesForeignKey) {
		this.responsablesForeignKey = responsablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Responsable responsableForeignKey;

	public Responsable getresponsableForeignKey() {
		return responsableForeignKey;
	}

	public void setresponsableForeignKey(Responsable responsableForeignKey) {
		this.responsableForeignKey = responsableForeignKey;
	}

	public String sFinalQueryComboTransportista="";

	public List<Transportista> transportistasForeignKey;

	public List<Transportista> gettransportistasForeignKey() {
		return transportistasForeignKey;
	}

	public void settransportistasForeignKey(List<Transportista> transportistasForeignKey) {
		this.transportistasForeignKey = transportistasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transportista transportistaForeignKey;

	public Transportista gettransportistaForeignKey() {
		return transportistaForeignKey;
	}

	public void settransportistaForeignKey(Transportista transportistaForeignKey) {
		this.transportistaForeignKey = transportistaForeignKey;
	}

	public String sFinalQueryComboTransporte="";

	public List<Transporte> transportesForeignKey;

	public List<Transporte> gettransportesForeignKey() {
		return transportesForeignKey;
	}

	public void settransportesForeignKey(List<Transporte> transportesForeignKey) {
		this.transportesForeignKey = transportesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transporte transporteForeignKey;

	public Transporte gettransporteForeignKey() {
		return transporteForeignKey;
	}

	public void settransporteForeignKey(Transporte transporteForeignKey) {
		this.transporteForeignKey = transporteForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idEmpleadoActual=0L;

	public Long getidEmpleadoActual() {
		return idEmpleadoActual;
	}

	public void setidEmpleadoActual(Long idEmpleadoActual) {
		this.idEmpleadoActual= idEmpleadoActual;
	}
	public Long idClienteActual=0L;

	public Long getidClienteActual() {
		return idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual= idClienteActual;
	}
	public Long idVendedorActual=0L;

	public Long getidVendedorActual() {
		return idVendedorActual;
	}

	public void setidVendedorActual(Long idVendedorActual) {
		this.idVendedorActual= idVendedorActual;
	}
	public Long idTipoCambioActual=0L;

	public Long getidTipoCambioActual() {
		return idTipoCambioActual;
	}

	public void setidTipoCambioActual(Long idTipoCambioActual) {
		this.idTipoCambioActual= idTipoCambioActual;
	}
	public Long idCentroCostoActual=0L;

	public Long getidCentroCostoActual() {
		return idCentroCostoActual;
	}

	public void setidCentroCostoActual(Long idCentroCostoActual) {
		this.idCentroCostoActual= idCentroCostoActual;
	}
	
	

	public Boolean isTienePermisosDetalleConsignacion=false;

	public Boolean getIsTienePermisosDetalleConsignacion() {
		return isTienePermisosDetalleConsignacion;
	}

	public void setIsTienePermisosDetalleConsignacion(Boolean isTienePermisosDetalleConsignacion) {
		this.isTienePermisosDetalleConsignacion= isTienePermisosDetalleConsignacion;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoConsignacion;
	public Boolean isPermisoNuevoConsignacion;
	public Boolean isPermisoActualizarConsignacion;
	public Boolean isPermisoActualizarOriginalConsignacion;
	public Boolean isPermisoEliminarConsignacion;
	public Boolean isPermisoGuardarCambiosConsignacion;
	public Boolean isPermisoConsultaConsignacion;
	public Boolean isPermisoBusquedaConsignacion;
	public Boolean isPermisoReporteConsignacion;
	public Boolean isPermisoPaginacionMedioConsignacion;
	public Boolean isPermisoPaginacionAltoConsignacion;
	public Boolean isPermisoPaginacionTodoConsignacion;
	public Boolean isPermisoCopiarConsignacion;
	public Boolean isPermisoVerFormConsignacion;
	public Boolean isPermisoDuplicarConsignacion;
	public Boolean isPermisoOrdenConsignacion;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public ConsignacionParameterReturnGeneral consignacionReturnGeneral;
	public ConsignacionParameterReturnGeneral consignacionParameterGeneral;
	
	

	public DetalleConsignacionLogic detalleconsignacionLogic=null;

	public DetalleConsignacionLogic getDetalleConsignacionLogic() {
		return detalleconsignacionLogic;
	}

	public void setDetalleConsignacionLogic(DetalleConsignacionLogic detalleconsignacionLogic) {
		this.detalleconsignacionLogic = detalleconsignacionLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoConsignacion=false;
	public Boolean esParaAccionDesdeFormularioConsignacion=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected ConsignacionSessionBeanAdditional consignacionSessionBeanAdditional=null;
	
	public ConsignacionSessionBeanAdditional getConsignacionSessionBeanAdditional() {
		return this.consignacionSessionBeanAdditional;
	}
	
	public void setConsignacionSessionBeanAdditional(ConsignacionSessionBeanAdditional consignacionSessionBeanAdditional) {
		try {
			this.consignacionSessionBeanAdditional=consignacionSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected ConsignacionBeanSwingJInternalFrameAdditional consignacionBeanSwingJInternalFrameAdditional=null;
	//public class ConsignacionBeanSwingJInternalFrame
	
	public ConsignacionBeanSwingJInternalFrameAdditional getConsignacionBeanSwingJInternalFrameAdditional() {
		return this.consignacionBeanSwingJInternalFrameAdditional;
	}
	
	public void setConsignacionBeanSwingJInternalFrameAdditional(ConsignacionBeanSwingJInternalFrameAdditional consignacionBeanSwingJInternalFrameAdditional) {
		try {
			this.consignacionBeanSwingJInternalFrameAdditional=consignacionBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public ConsignacionLogic consignacionLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public Consignacion consignacionBean;
	public ConsignacionConstantesFunciones consignacionConstantesFunciones;
	//public ConsignacionParameterReturnGeneral consignacionReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	public UsuarioLogic usuarioLogic;
	public MonedaLogic monedaLogic;
	public EmpleadoLogic empleadoLogic;
	public TipoPrecioLogic tipoprecioLogic;
	public FormatoLogic formatoLogic;
	public ClienteLogic clienteLogic;
	public SubClienteLogic subclienteLogic;
	public ConsignatarioLogic consignatarioLogic;
	public VendedorLogic vendedorLogic;
	public EstadoPedidoLogic estadopedidoLogic;
	public TipoCambioLogic tipocambioLogic;
	public ZonaLogic zonaLogic;
	public CentroCostoLogic centrocostoLogic;
	public ResponsableLogic responsableLogic;
	public TransportistaLogic transportistaLogic;
	public TransporteLogic transporteLogic;
	
	//PARAMETROS
	
	
	//public List<Consignacion> consignacions;	
	//public List<Consignacion> consignacionsEliminados;
	//public List<Consignacion> consignacionsAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoConsignacion=false;
	public Boolean isVisibilidadCeldaDuplicarConsignacion=true;
	public Boolean isVisibilidadCeldaCopiarConsignacion=true;
	public Boolean isVisibilidadCeldaVerFormConsignacion=true;
	public Boolean isVisibilidadCeldaOrdenConsignacion=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesConsignacion=false;
	public Boolean isVisibilidadCeldaModificarConsignacion=false;
	public Boolean isVisibilidadCeldaActualizarConsignacion=false;
	public Boolean isVisibilidadCeldaEliminarConsignacion=false;
	public Boolean isVisibilidadCeldaCancelarConsignacion=false;
	public Boolean isVisibilidadCeldaGuardarConsignacion=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosConsignacion=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdCentroCosto=false;
	public Boolean isVisibilidadFK_IdCliente=false;
	public Boolean isVisibilidadFK_IdConsignatario=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpleado=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstadoPedido=false;
	public Boolean isVisibilidadFK_IdFormato=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdMoneda=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdResponsable=false;
	public Boolean isVisibilidadFK_IdSubCliente=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoCambio=false;
	public Boolean isVisibilidadFK_IdTipoPrecio=false;
	public Boolean isVisibilidadFK_IdTransporte=false;
	public Boolean isVisibilidadFK_IdTransportista=false;
	public Boolean isVisibilidadFK_IdUsuario=false;
	public Boolean isVisibilidadFK_IdVendedor=false;
	public Boolean isVisibilidadFK_IdZona=false;
	
	public Long getiIdNuevoConsignacion() {
		return this.iIdNuevoConsignacion;
	}

	public void setiIdNuevoConsignacion(Long iIdNuevoConsignacion) {
		this.iIdNuevoConsignacion = iIdNuevoConsignacion;
	}
	
	public Long getidConsignacionActual() {
		return this.idConsignacionActual;
	}

	public void setidConsignacionActual(Long idConsignacionActual) {
		this.idConsignacionActual = idConsignacionActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public Consignacion getconsignacion() {
		return this.consignacion;
	}

	public void setconsignacion(Consignacion consignacion) {
		this.consignacion = consignacion;
	}
	
	public Consignacion getconsignacionAux() {
		return this.consignacionAux;
	}

	public void setconsignacionAux(Consignacion consignacionAux) {
		this.consignacionAux = consignacionAux;
	}				
	
	public Consignacion getconsignacionAnterior() {
		return this.consignacionAnterior;
	}

	public void setconsignacionAnterior(Consignacion consignacionAnterior) {
		this.consignacionAnterior = consignacionAnterior;
	}	
	
	public Consignacion getconsignacionTotales() {
		return this.consignacionTotales;
	}

	public void setconsignacionTotales(Consignacion consignacionTotales) {
		this.consignacionTotales = consignacionTotales;
	}	
	
	public Consignacion getconsignacionBean() {
		return this.consignacionBean;
	}

	public void setconsignacionBean(Consignacion consignacionBean) {
		this.consignacionBean = consignacionBean;
	}	
	
	public ConsignacionParameterReturnGeneral getconsignacionReturnGeneral() {
		return this.consignacionReturnGeneral;
	}

	public void setconsignacionReturnGeneral(ConsignacionParameterReturnGeneral consignacionReturnGeneral) {
		this.consignacionReturnGeneral = consignacionReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_centro_costoFK_IdCentroCosto=null;

	public Long getid_centro_costoFK_IdCentroCosto() {
		return this.id_centro_costoFK_IdCentroCosto;
	}

	public void setid_centro_costoFK_IdCentroCosto(Long id_centro_costoFK_IdCentroCosto) {
		this.id_centro_costoFK_IdCentroCosto = id_centro_costoFK_IdCentroCosto;
	}

	public Long id_clienteFK_IdCliente=-1L;

	public Long getid_clienteFK_IdCliente() {
		return this.id_clienteFK_IdCliente;
	}

	public void setid_clienteFK_IdCliente(Long id_clienteFK_IdCliente) {
		this.id_clienteFK_IdCliente = id_clienteFK_IdCliente;
	}

	public Long id_consignatarioFK_IdConsignatario=-1L;

	public Long getid_consignatarioFK_IdConsignatario() {
		return this.id_consignatarioFK_IdConsignatario;
	}

	public void setid_consignatarioFK_IdConsignatario(Long id_consignatarioFK_IdConsignatario) {
		this.id_consignatarioFK_IdConsignatario = id_consignatarioFK_IdConsignatario;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empleadoFK_IdEmpleado=-1L;

	public Long getid_empleadoFK_IdEmpleado() {
		return this.id_empleadoFK_IdEmpleado;
	}

	public void setid_empleadoFK_IdEmpleado(Long id_empleadoFK_IdEmpleado) {
		this.id_empleadoFK_IdEmpleado = id_empleadoFK_IdEmpleado;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estado_pedidoFK_IdEstadoPedido=1L;

	public Long getid_estado_pedidoFK_IdEstadoPedido() {
		return this.id_estado_pedidoFK_IdEstadoPedido;
	}

	public void setid_estado_pedidoFK_IdEstadoPedido(Long id_estado_pedidoFK_IdEstadoPedido) {
		this.id_estado_pedidoFK_IdEstadoPedido = id_estado_pedidoFK_IdEstadoPedido;
	}

	public Long id_formatoFK_IdFormato=null;

	public Long getid_formatoFK_IdFormato() {
		return this.id_formatoFK_IdFormato;
	}

	public void setid_formatoFK_IdFormato(Long id_formatoFK_IdFormato) {
		this.id_formatoFK_IdFormato = id_formatoFK_IdFormato;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_monedaFK_IdMoneda=-1L;

	public Long getid_monedaFK_IdMoneda() {
		return this.id_monedaFK_IdMoneda;
	}

	public void setid_monedaFK_IdMoneda(Long id_monedaFK_IdMoneda) {
		this.id_monedaFK_IdMoneda = id_monedaFK_IdMoneda;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_responsableFK_IdResponsable=null;

	public Long getid_responsableFK_IdResponsable() {
		return this.id_responsableFK_IdResponsable;
	}

	public void setid_responsableFK_IdResponsable(Long id_responsableFK_IdResponsable) {
		this.id_responsableFK_IdResponsable = id_responsableFK_IdResponsable;
	}

	public Long id_sub_clienteFK_IdSubCliente=null;

	public Long getid_sub_clienteFK_IdSubCliente() {
		return this.id_sub_clienteFK_IdSubCliente;
	}

	public void setid_sub_clienteFK_IdSubCliente(Long id_sub_clienteFK_IdSubCliente) {
		this.id_sub_clienteFK_IdSubCliente = id_sub_clienteFK_IdSubCliente;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_cambioFK_IdTipoCambio=null;

	public Long getid_tipo_cambioFK_IdTipoCambio() {
		return this.id_tipo_cambioFK_IdTipoCambio;
	}

	public void setid_tipo_cambioFK_IdTipoCambio(Long id_tipo_cambioFK_IdTipoCambio) {
		this.id_tipo_cambioFK_IdTipoCambio = id_tipo_cambioFK_IdTipoCambio;
	}

	public Long id_tipo_precioFK_IdTipoPrecio=-1L;

	public Long getid_tipo_precioFK_IdTipoPrecio() {
		return this.id_tipo_precioFK_IdTipoPrecio;
	}

	public void setid_tipo_precioFK_IdTipoPrecio(Long id_tipo_precioFK_IdTipoPrecio) {
		this.id_tipo_precioFK_IdTipoPrecio = id_tipo_precioFK_IdTipoPrecio;
	}

	public Long id_transporteFK_IdTransporte=-1L;

	public Long getid_transporteFK_IdTransporte() {
		return this.id_transporteFK_IdTransporte;
	}

	public void setid_transporteFK_IdTransporte(Long id_transporteFK_IdTransporte) {
		this.id_transporteFK_IdTransporte = id_transporteFK_IdTransporte;
	}

	public Long id_transportistaFK_IdTransportista=null;

	public Long getid_transportistaFK_IdTransportista() {
		return this.id_transportistaFK_IdTransportista;
	}

	public void setid_transportistaFK_IdTransportista(Long id_transportistaFK_IdTransportista) {
		this.id_transportistaFK_IdTransportista = id_transportistaFK_IdTransportista;
	}

	public Long id_usuarioFK_IdUsuario=-1L;

	public Long getid_usuarioFK_IdUsuario() {
		return this.id_usuarioFK_IdUsuario;
	}

	public void setid_usuarioFK_IdUsuario(Long id_usuarioFK_IdUsuario) {
		this.id_usuarioFK_IdUsuario = id_usuarioFK_IdUsuario;
	}

	public Long id_vendedorFK_IdVendedor=null;

	public Long getid_vendedorFK_IdVendedor() {
		return this.id_vendedorFK_IdVendedor;
	}

	public void setid_vendedorFK_IdVendedor(Long id_vendedorFK_IdVendedor) {
		this.id_vendedorFK_IdVendedor = id_vendedorFK_IdVendedor;
	}

	public Long id_zonaFK_IdZona=null;

	public Long getid_zonaFK_IdZona() {
		return this.id_zonaFK_IdZona;
	}

	public void setid_zonaFK_IdZona(Long id_zonaFK_IdZona) {
		this.id_zonaFK_IdZona = id_zonaFK_IdZona;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public ConsignacionLogic getConsignacionLogic()	{		
		return consignacionLogic;
	}

	public void setConsignacionLogic(ConsignacionLogic consignacionLogic) {
		this.consignacionLogic = consignacionLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoConsignacion() {
		return isEsNuevoConsignacion;
	}

	public void setIsEsNuevoConsignacion(Boolean isEsNuevoConsignacion) {
		this.isEsNuevoConsignacion = isEsNuevoConsignacion;
	}

	public Boolean getEsParaAccionDesdeFormularioConsignacion() {
		return esParaAccionDesdeFormularioConsignacion;
	}
	
	public void setEsParaAccionDesdeFormularioConsignacion(Boolean esParaAccionDesdeFormularioConsignacion) {
		this.esParaAccionDesdeFormularioConsignacion = esParaAccionDesdeFormularioConsignacion;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(consignacionSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(consignacionSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(consignacionSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(consignacionSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(consignacionSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(consignacionSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUsuariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.usuariosForeignKey=new ArrayList<Usuario>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UsuarioLogic usuarioLogic=new UsuarioLogic();

			//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

					usuarioLogic.getTodosUsuariosWithConnection(sFinalQuery,new Pagination());

					this.usuariosForeignKey=usuarioLogic.getUsuarios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUsuario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					usuarioLogic.getEntityWithConnection(consignacionSessionBean.getlidUsuarioActual());
					this.usuariosForeignKey.add(usuarioLogic.getUsuario());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMonedasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.monedasForeignKey=new ArrayList<Moneda>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MonedaLogic monedaLogic=new MonedaLogic();

			//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

					monedaLogic.getTodosMonedasWithConnection(sFinalQuery,new Pagination());

					this.monedasForeignKey=monedaLogic.getMonedas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMoneda(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					monedaLogic.getEntityWithConnection(consignacionSessionBean.getlidMonedaActual());
					this.monedasForeignKey.add(monedaLogic.getMoneda());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpleadosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empleadosForeignKey=new ArrayList<Empleado>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpleadoLogic empleadoLogic=new EmpleadoLogic();

			//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

					empleadoLogic.getTodosEmpleadosWithConnection(sFinalQuery,new Pagination());

					this.empleadosForeignKey=empleadoLogic.getEmpleados();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpleado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(consignacionSessionBean.getlidEmpleadoActual());
					this.empleadosForeignKey.add(empleadoLogic.getEmpleado());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoPreciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipopreciosForeignKey=new ArrayList<TipoPrecio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoPrecioLogic tipoprecioLogic=new TipoPrecioLogic();

			//tipoprecioLogic.getTipoPrecioDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionTipoPrecio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoprecioLogic.getTipoPrecioDataAccess().setIsForForeingKeyData(true);

					tipoprecioLogic.getTodosTipoPreciosWithConnection(sFinalQuery,new Pagination());

					this.tipopreciosForeignKey=tipoprecioLogic.getTipoPrecios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoPrecio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoprecioLogic.getEntityWithConnection(consignacionSessionBean.getlidTipoPrecioActual());
					this.tipopreciosForeignKey.add(tipoprecioLogic.getTipoPrecio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFormatosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.formatosForeignKey=new ArrayList<Formato>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Formato formatoNulo = new Formato();

			FormatoLogic formatoLogic=new FormatoLogic();

			//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

					formatoLogic.getTodosFormatosWithConnection(sFinalQuery,new Pagination());

					this.formatosForeignKey=formatoLogic.getFormatos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.formatosForeignKey.add(0, formatoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFormato(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					formatoLogic.getEntityWithConnection(consignacionSessionBean.getlidFormatoActual());
					this.formatosForeignKey.add(formatoLogic.getFormato());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientesForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientesForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(consignacionSessionBean.getlidClienteActual());
					this.clientesForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSubClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.subclientesForeignKey=new ArrayList<SubCliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SubCliente subclienteNulo = new SubCliente();

			SubClienteLogic subclienteLogic=new SubClienteLogic();

			//subclienteLogic.getSubClienteDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionSubCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//subclienteLogic.getSubClienteDataAccess().setIsForForeingKeyData(true);

					subclienteLogic.getTodosSubClientesWithConnection(sFinalQuery,new Pagination());

					this.subclientesForeignKey=subclienteLogic.getSubClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.subclientesForeignKey.add(0, subclienteNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSubCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.getEntityWithConnection(consignacionSessionBean.getlidSubClienteActual());
					this.subclientesForeignKey.add(subclienteLogic.getSubCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosConsignatariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.consignatariosForeignKey=new ArrayList<Consignatario>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Consignatario consignatarioNulo = new Consignatario();

			ConsignatarioLogic consignatarioLogic=new ConsignatarioLogic();

			//consignatarioLogic.getConsignatarioDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionConsignatario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//consignatarioLogic.getConsignatarioDataAccess().setIsForForeingKeyData(true);

					consignatarioLogic.getTodosConsignatariosWithConnection(sFinalQuery,new Pagination());

					this.consignatariosForeignKey=consignatarioLogic.getConsignatarios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.consignatariosForeignKey.add(0, consignatarioNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaConsignatario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignatarioLogic.getEntityWithConnection(consignacionSessionBean.getlidConsignatarioActual());
					this.consignatariosForeignKey.add(consignatarioLogic.getConsignatario());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosVendedorsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.vendedorsForeignKey=new ArrayList<Vendedor>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Vendedor vendedorNulo = new Vendedor();

			VendedorLogic vendedorLogic=new VendedorLogic();

			//vendedorLogic.getVendedorDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//vendedorLogic.getVendedorDataAccess().setIsForForeingKeyData(true);

					vendedorLogic.getTodosVendedorsWithConnection(sFinalQuery,new Pagination());

					this.vendedorsForeignKey=vendedorLogic.getVendedors();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.vendedorsForeignKey.add(0, vendedorNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaVendedor(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					vendedorLogic.getEntityWithConnection(consignacionSessionBean.getlidVendedorActual());
					this.vendedorsForeignKey.add(vendedorLogic.getVendedor());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoPedidosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadopedidosForeignKey=new ArrayList<EstadoPedido>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoPedidoLogic estadopedidoLogic=new EstadoPedidoLogic();

			//estadopedidoLogic.getEstadoPedidoDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedido()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadopedidoLogic.getEstadoPedidoDataAccess().setIsForForeingKeyData(true);

					estadopedidoLogic.getTodosEstadoPedidosWithConnection(sFinalQuery,new Pagination());

					this.estadopedidosForeignKey=estadopedidoLogic.getEstadoPedidos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoPedido(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadopedidoLogic.getEntityWithConnection(consignacionSessionBean.getlidEstadoPedidoActual());
					this.estadopedidosForeignKey.add(estadopedidoLogic.getEstadoPedido());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoCambiosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoCambioLogic tipocambioLogic=new TipoCambioLogic();

			//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

					tipocambioLogic.getTodosTipoCambiosWithConnection(sFinalQuery,new Pagination());

					this.tipocambiosForeignKey=tipocambioLogic.getTipoCambios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoCambio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(consignacionSessionBean.getlidTipoCambioActual());
					this.tipocambiosForeignKey.add(tipocambioLogic.getTipoCambio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosZonasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.zonasForeignKey=new ArrayList<Zona>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Zona zonaNulo = new Zona();

			ZonaLogic zonaLogic=new ZonaLogic();

			//zonaLogic.getZonaDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionZona()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//zonaLogic.getZonaDataAccess().setIsForForeingKeyData(true);

					zonaLogic.getTodosZonasWithConnection(sFinalQuery,new Pagination());

					this.zonasForeignKey=zonaLogic.getZonas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.zonasForeignKey.add(0, zonaNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaZona(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					zonaLogic.getEntityWithConnection(consignacionSessionBean.getlidZonaActual());
					this.zonasForeignKey.add(zonaLogic.getZona());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCentroCostosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.centrocostosForeignKey=new ArrayList<CentroCosto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CentroCosto centrocostoNulo = new CentroCosto();

			CentroCostoLogic centrocostoLogic=new CentroCostoLogic();

			//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

					centrocostoLogic.getTodosCentroCostosWithConnection(sFinalQuery,new Pagination());

					this.centrocostosForeignKey=centrocostoLogic.getCentroCostos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.centrocostosForeignKey.add(0, centrocostoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCentroCosto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(consignacionSessionBean.getlidCentroCostoActual());
					this.centrocostosForeignKey.add(centrocostoLogic.getCentroCosto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosResponsablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.responsablesForeignKey=new ArrayList<Responsable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Responsable responsableNulo = new Responsable();

			ResponsableLogic responsableLogic=new ResponsableLogic();

			//responsableLogic.getResponsableDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionResponsable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//responsableLogic.getResponsableDataAccess().setIsForForeingKeyData(true);

					responsableLogic.getTodosResponsablesWithConnection(sFinalQuery,new Pagination());

					this.responsablesForeignKey=responsableLogic.getResponsables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.responsablesForeignKey.add(0, responsableNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaResponsable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					responsableLogic.getEntityWithConnection(consignacionSessionBean.getlidResponsableActual());
					this.responsablesForeignKey.add(responsableLogic.getResponsable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransportistasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transportistasForeignKey=new ArrayList<Transportista>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Transportista transportistaNulo = new Transportista();

			TransportistaLogic transportistaLogic=new TransportistaLogic();

			//transportistaLogic.getTransportistaDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionTransportista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transportistaLogic.getTransportistaDataAccess().setIsForForeingKeyData(true);

					transportistaLogic.getTodosTransportistasWithConnection(sFinalQuery,new Pagination());

					this.transportistasForeignKey=transportistaLogic.getTransportistas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.transportistasForeignKey.add(0, transportistaNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransportista(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transportistaLogic.getEntityWithConnection(consignacionSessionBean.getlidTransportistaActual());
					this.transportistasForeignKey.add(transportistaLogic.getTransportista());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransportesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transportesForeignKey=new ArrayList<Transporte>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Transporte transporteNulo = new Transporte();

			TransporteLogic transporteLogic=new TransporteLogic();

			//transporteLogic.getTransporteDataAccess().setIsForForeingKeyData(true);

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionTransporte()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transporteLogic.getTransporteDataAccess().setIsForForeingKeyData(true);

					transporteLogic.getTodosTransportesWithConnection(sFinalQuery,new Pagination());

					this.transportesForeignKey=transporteLogic.getTransportes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.transportesForeignKey.add(0, transporteNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransporte(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transporteLogic.getEntityWithConnection(consignacionSessionBean.getlidTransporteActual());
					this.transportesForeignKey.add(transporteLogic.getTransporte());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empresaConsignacion.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaConsignacion.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empresaConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empresaConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaConsignacionGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaConsignacionGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaConsignacionGenerico!=null && jComboBoxid_empresaConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_empresaConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sucursalConsignacion.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalConsignacion.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sucursalConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sucursalConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalConsignacionGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalConsignacionGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalConsignacionGenerico!=null && jComboBoxid_sucursalConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_sucursalConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_ejercicioConsignacion.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioConsignacion.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_ejercicioConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_ejercicioConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioConsignacionGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioConsignacionGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioConsignacionGenerico!=null && jComboBoxid_ejercicioConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_periodoConsignacion.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoConsignacion.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_periodoConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_periodoConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoConsignacionGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoConsignacionGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoConsignacionGenerico!=null && jComboBoxid_periodoConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_periodoConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_anioConsignacion.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioConsignacion.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_anioConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_anioConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioConsignacionGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioConsignacionGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioConsignacionGenerico!=null && jComboBoxid_anioConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_anioConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_mesConsignacion.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesConsignacion.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_mesConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_mesConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesConsignacionGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesConsignacionGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesConsignacionGenerico!=null && jComboBoxid_mesConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_mesConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUsuarioForeignKey(Long idUsuarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(usuarioTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setUsuario(usuarioTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_usuarioConsignacion.setSelectedItem(usuarioTemp);
					}
				} else {
					//jComboBoxid_usuarioConsignacion.setSelectedItem(usuarioTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_usuarioConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_usuarioConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUsuarioForeignKeyDescripcion(Long idUsuarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}


			sDescripcion=UsuarioConstantesFunciones.getUsuarioDescripcion(usuarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUsuarioForeignKeyGenerico(Long idUsuarioSeleccionado,JComboBox jComboBoxid_usuarioConsignacionGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(usuarioTemp!=null) {
				jComboBoxid_usuarioConsignacionGenerico.setSelectedItem(usuarioTemp);
			} else {
				if(jComboBoxid_usuarioConsignacionGenerico!=null && jComboBoxid_usuarioConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_usuarioConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMonedaForeignKey(Long idMonedaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(monedaTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setMoneda(monedaTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_monedaConsignacion.setSelectedItem(monedaTemp);
					}
				} else {
					//jComboBoxid_monedaConsignacion.setSelectedItem(monedaTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_monedaConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_monedaConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMonedaForeignKeyDescripcion(Long idMonedaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}


			sDescripcion=MonedaConstantesFunciones.getMonedaDescripcion(monedaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMonedaForeignKeyGenerico(Long idMonedaSeleccionado,JComboBox jComboBoxid_monedaConsignacionGenerico)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(monedaTemp!=null) {
				jComboBoxid_monedaConsignacionGenerico.setSelectedItem(monedaTemp);
			} else {
				if(jComboBoxid_monedaConsignacionGenerico!=null && jComboBoxid_monedaConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_monedaConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpleadoForeignKey(Long idEmpleadoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empleadoTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setEmpleado(empleadoTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empleadoConsignacion.setSelectedItem(empleadoTemp);
					}
				} else {
					//jComboBoxid_empleadoConsignacion.setSelectedItem(empleadoTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empleadoConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empleadoConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){
					if(empleadoTemp!=null && jComboBoxid_empleadoFK_IdEmpleadoConsignacion!=null) {
						jComboBoxid_empleadoFK_IdEmpleadoConsignacion.setSelectedItem(empleadoTemp);
					} else {
						if(jComboBoxid_empleadoFK_IdEmpleadoConsignacion!=null) {
							//jComboBoxid_empleadoFK_IdEmpleadoConsignacion.setSelectedItem(empleadoTemp);
							if(jComboBoxid_empleadoFK_IdEmpleadoConsignacion.getItemCount()>0) {
								jComboBoxid_empleadoFK_IdEmpleadoConsignacion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpleadoForeignKeyDescripcion(Long idEmpleadoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}


			sDescripcion=EmpleadoConstantesFunciones.getEmpleadoDescripcion(empleadoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpleadoForeignKeyGenerico(Long idEmpleadoSeleccionado,JComboBox jComboBoxid_empleadoConsignacionGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(empleadoTemp!=null) {
				jComboBoxid_empleadoConsignacionGenerico.setSelectedItem(empleadoTemp);
			} else {
				if(jComboBoxid_empleadoConsignacionGenerico!=null && jComboBoxid_empleadoConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_empleadoConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoPrecioForeignKey(Long idTipoPrecioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosForeignKey) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoprecioTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setTipoPrecio(tipoprecioTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_precioConsignacion.setSelectedItem(tipoprecioTemp);
					}
				} else {
					//jComboBoxid_tipo_precioConsignacion.setSelectedItem(tipoprecioTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_precioConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_precioConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoPrecio") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoprecioTemp!=null && jComboBoxid_tipo_precioFK_IdTipoPrecioConsignacion!=null) {
						jComboBoxid_tipo_precioFK_IdTipoPrecioConsignacion.setSelectedItem(tipoprecioTemp);
					} else {
						if(jComboBoxid_tipo_precioFK_IdTipoPrecioConsignacion!=null) {
							//jComboBoxid_tipo_precioFK_IdTipoPrecioConsignacion.setSelectedItem(tipoprecioTemp);
							if(jComboBoxid_tipo_precioFK_IdTipoPrecioConsignacion.getItemCount()>0) {
								jComboBoxid_tipo_precioFK_IdTipoPrecioConsignacion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoPrecioForeignKeyDescripcion(Long idTipoPrecioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosForeignKey) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}


			sDescripcion=TipoPrecioConstantesFunciones.getTipoPrecioDescripcion(tipoprecioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoPrecioForeignKeyGenerico(Long idTipoPrecioSeleccionado,JComboBox jComboBoxid_tipo_precioConsignacionGenerico)throws Exception
	{
		try
		{
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosForeignKey) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}

			if(tipoprecioTemp!=null) {
				jComboBoxid_tipo_precioConsignacionGenerico.setSelectedItem(tipoprecioTemp);
			} else {
				if(jComboBoxid_tipo_precioConsignacionGenerico!=null && jComboBoxid_tipo_precioConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_tipo_precioConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFormatoForeignKey(Long idFormatoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(formatoTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setFormato(formatoTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_formatoConsignacion.setSelectedItem(formatoTemp);
					}
				} else {
					//jComboBoxid_formatoConsignacion.setSelectedItem(formatoTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_formatoConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_formatoConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdFormato") || sFormularioTipoBusqueda.equals("Todos")){
					if(formatoTemp!=null && jComboBoxid_formatoFK_IdFormatoConsignacion!=null) {
						jComboBoxid_formatoFK_IdFormatoConsignacion.setSelectedItem(formatoTemp);
					} else {
						if(jComboBoxid_formatoFK_IdFormatoConsignacion!=null) {
							//jComboBoxid_formatoFK_IdFormatoConsignacion.setSelectedItem(formatoTemp);
							if(jComboBoxid_formatoFK_IdFormatoConsignacion.getItemCount()>0) {
								jComboBoxid_formatoFK_IdFormatoConsignacion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFormatoForeignKeyDescripcion(Long idFormatoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}


			sDescripcion=FormatoConstantesFunciones.getFormatoDescripcion(formatoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFormatoForeignKeyGenerico(Long idFormatoSeleccionado,JComboBox jComboBoxid_formatoConsignacionGenerico)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(formatoTemp!=null) {
				jComboBoxid_formatoConsignacionGenerico.setSelectedItem(formatoTemp);
			} else {
				if(jComboBoxid_formatoConsignacionGenerico!=null && jComboBoxid_formatoConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_formatoConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteForeignKey(Long idClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setCliente(clienteTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_clienteConsignacion.setSelectedItem(clienteTemp);
					}
				} else {
					//jComboBoxid_clienteConsignacion.setSelectedItem(clienteTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_clienteConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_clienteConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteTemp!=null && jComboBoxid_clienteFK_IdClienteConsignacion!=null) {
						jComboBoxid_clienteFK_IdClienteConsignacion.setSelectedItem(clienteTemp);
					} else {
						if(jComboBoxid_clienteFK_IdClienteConsignacion!=null) {
							//jComboBoxid_clienteFK_IdClienteConsignacion.setSelectedItem(clienteTemp);
							if(jComboBoxid_clienteFK_IdClienteConsignacion.getItemCount()>0) {
								jComboBoxid_clienteFK_IdClienteConsignacion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteForeignKeyDescripcion(Long idClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteForeignKeyGenerico(Long idClienteSeleccionado,JComboBox jComboBoxid_clienteConsignacionGenerico)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(clienteTemp!=null) {
				jComboBoxid_clienteConsignacionGenerico.setSelectedItem(clienteTemp);
			} else {
				if(jComboBoxid_clienteConsignacionGenerico!=null && jComboBoxid_clienteConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_clienteConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSubClienteForeignKey(Long idSubClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			SubCliente  subclienteTemp=null;

			for(SubCliente subclienteAux:subclientesForeignKey) {
				if(subclienteAux.getId()!=null && subclienteAux.getId().equals(idSubClienteSeleccionado)) {
					subclienteTemp=subclienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(subclienteTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setSubCliente(subclienteTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sub_clienteConsignacion.setSelectedItem(subclienteTemp);
					}
				} else {
					//jComboBoxid_sub_clienteConsignacion.setSelectedItem(subclienteTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sub_clienteConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sub_clienteConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdSubCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(subclienteTemp!=null && jComboBoxid_sub_clienteFK_IdSubClienteConsignacion!=null) {
						jComboBoxid_sub_clienteFK_IdSubClienteConsignacion.setSelectedItem(subclienteTemp);
					} else {
						if(jComboBoxid_sub_clienteFK_IdSubClienteConsignacion!=null) {
							//jComboBoxid_sub_clienteFK_IdSubClienteConsignacion.setSelectedItem(subclienteTemp);
							if(jComboBoxid_sub_clienteFK_IdSubClienteConsignacion.getItemCount()>0) {
								jComboBoxid_sub_clienteFK_IdSubClienteConsignacion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSubClienteForeignKeyDescripcion(Long idSubClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			SubCliente  subclienteTemp=null;

			for(SubCliente subclienteAux:subclientesForeignKey) {
				if(subclienteAux.getId()!=null && subclienteAux.getId().equals(idSubClienteSeleccionado)) {
					subclienteTemp=subclienteAux;
					break;
				}
			}


			sDescripcion=SubClienteConstantesFunciones.getSubClienteDescripcion(subclienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSubClienteForeignKeyGenerico(Long idSubClienteSeleccionado,JComboBox jComboBoxid_sub_clienteConsignacionGenerico)throws Exception
	{
		try
		{
			SubCliente  subclienteTemp=null;

			for(SubCliente subclienteAux:subclientesForeignKey) {
				if(subclienteAux.getId()!=null && subclienteAux.getId().equals(idSubClienteSeleccionado)) {
					subclienteTemp=subclienteAux;
					break;
				}
			}

			if(subclienteTemp!=null) {
				jComboBoxid_sub_clienteConsignacionGenerico.setSelectedItem(subclienteTemp);
			} else {
				if(jComboBoxid_sub_clienteConsignacionGenerico!=null && jComboBoxid_sub_clienteConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_sub_clienteConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualConsignatarioForeignKey(Long idConsignatarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Consignatario  consignatarioTemp=null;

			for(Consignatario consignatarioAux:consignatariosForeignKey) {
				if(consignatarioAux.getId()!=null && consignatarioAux.getId().equals(idConsignatarioSeleccionado)) {
					consignatarioTemp=consignatarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(consignatarioTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setConsignatario(consignatarioTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_consignatarioConsignacion.setSelectedItem(consignatarioTemp);
					}
				} else {
					//jComboBoxid_consignatarioConsignacion.setSelectedItem(consignatarioTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_consignatarioConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_consignatarioConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdConsignatario") || sFormularioTipoBusqueda.equals("Todos")){
					if(consignatarioTemp!=null && jComboBoxid_consignatarioFK_IdConsignatarioConsignacion!=null) {
						jComboBoxid_consignatarioFK_IdConsignatarioConsignacion.setSelectedItem(consignatarioTemp);
					} else {
						if(jComboBoxid_consignatarioFK_IdConsignatarioConsignacion!=null) {
							//jComboBoxid_consignatarioFK_IdConsignatarioConsignacion.setSelectedItem(consignatarioTemp);
							if(jComboBoxid_consignatarioFK_IdConsignatarioConsignacion.getItemCount()>0) {
								jComboBoxid_consignatarioFK_IdConsignatarioConsignacion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualConsignatarioForeignKeyDescripcion(Long idConsignatarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Consignatario  consignatarioTemp=null;

			for(Consignatario consignatarioAux:consignatariosForeignKey) {
				if(consignatarioAux.getId()!=null && consignatarioAux.getId().equals(idConsignatarioSeleccionado)) {
					consignatarioTemp=consignatarioAux;
					break;
				}
			}


			sDescripcion=ConsignatarioConstantesFunciones.getConsignatarioDescripcion(consignatarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualConsignatarioForeignKeyGenerico(Long idConsignatarioSeleccionado,JComboBox jComboBoxid_consignatarioConsignacionGenerico)throws Exception
	{
		try
		{
			Consignatario  consignatarioTemp=null;

			for(Consignatario consignatarioAux:consignatariosForeignKey) {
				if(consignatarioAux.getId()!=null && consignatarioAux.getId().equals(idConsignatarioSeleccionado)) {
					consignatarioTemp=consignatarioAux;
					break;
				}
			}

			if(consignatarioTemp!=null) {
				jComboBoxid_consignatarioConsignacionGenerico.setSelectedItem(consignatarioTemp);
			} else {
				if(jComboBoxid_consignatarioConsignacionGenerico!=null && jComboBoxid_consignatarioConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_consignatarioConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualVendedorForeignKey(Long idVendedorSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(vendedorTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setVendedor(vendedorTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_vendedorConsignacion.setSelectedItem(vendedorTemp);
					}
				} else {
					//jComboBoxid_vendedorConsignacion.setSelectedItem(vendedorTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_vendedorConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_vendedorConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdVendedor") || sFormularioTipoBusqueda.equals("Todos")){
					if(vendedorTemp!=null && jComboBoxid_vendedorFK_IdVendedorConsignacion!=null) {
						jComboBoxid_vendedorFK_IdVendedorConsignacion.setSelectedItem(vendedorTemp);
					} else {
						if(jComboBoxid_vendedorFK_IdVendedorConsignacion!=null) {
							//jComboBoxid_vendedorFK_IdVendedorConsignacion.setSelectedItem(vendedorTemp);
							if(jComboBoxid_vendedorFK_IdVendedorConsignacion.getItemCount()>0) {
								jComboBoxid_vendedorFK_IdVendedorConsignacion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualVendedorForeignKeyDescripcion(Long idVendedorSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}


			sDescripcion=VendedorConstantesFunciones.getVendedorDescripcion(vendedorTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualVendedorForeignKeyGenerico(Long idVendedorSeleccionado,JComboBox jComboBoxid_vendedorConsignacionGenerico)throws Exception
	{
		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}

			if(vendedorTemp!=null) {
				jComboBoxid_vendedorConsignacionGenerico.setSelectedItem(vendedorTemp);
			} else {
				if(jComboBoxid_vendedorConsignacionGenerico!=null && jComboBoxid_vendedorConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_vendedorConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoPedidoForeignKey(Long idEstadoPedidoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidoTemp=null;

			for(EstadoPedido estadopedidoAux:estadopedidosForeignKey) {
				if(estadopedidoAux.getId()!=null && estadopedidoAux.getId().equals(idEstadoPedidoSeleccionado)) {
					estadopedidoTemp=estadopedidoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadopedidoTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setEstadoPedido(estadopedidoTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_estado_pedidoConsignacion.setSelectedItem(estadopedidoTemp);
					}
				} else {
					//jComboBoxid_estado_pedidoConsignacion.setSelectedItem(estadopedidoTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_estado_pedidoConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_estado_pedidoConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedido") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadopedidoTemp!=null && jComboBoxid_estado_pedidoFK_IdEstadoPedidoConsignacion!=null) {
						jComboBoxid_estado_pedidoFK_IdEstadoPedidoConsignacion.setSelectedItem(estadopedidoTemp);
					} else {
						if(jComboBoxid_estado_pedidoFK_IdEstadoPedidoConsignacion!=null) {
							//jComboBoxid_estado_pedidoFK_IdEstadoPedidoConsignacion.setSelectedItem(estadopedidoTemp);
							if(jComboBoxid_estado_pedidoFK_IdEstadoPedidoConsignacion.getItemCount()>0) {
								jComboBoxid_estado_pedidoFK_IdEstadoPedidoConsignacion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoPedidoForeignKeyDescripcion(Long idEstadoPedidoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoPedido  estadopedidoTemp=null;

			for(EstadoPedido estadopedidoAux:estadopedidosForeignKey) {
				if(estadopedidoAux.getId()!=null && estadopedidoAux.getId().equals(idEstadoPedidoSeleccionado)) {
					estadopedidoTemp=estadopedidoAux;
					break;
				}
			}


			sDescripcion=EstadoPedidoConstantesFunciones.getEstadoPedidoDescripcion(estadopedidoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoPedidoForeignKeyGenerico(Long idEstadoPedidoSeleccionado,JComboBox jComboBoxid_estado_pedidoConsignacionGenerico)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidoTemp=null;

			for(EstadoPedido estadopedidoAux:estadopedidosForeignKey) {
				if(estadopedidoAux.getId()!=null && estadopedidoAux.getId().equals(idEstadoPedidoSeleccionado)) {
					estadopedidoTemp=estadopedidoAux;
					break;
				}
			}

			if(estadopedidoTemp!=null) {
				jComboBoxid_estado_pedidoConsignacionGenerico.setSelectedItem(estadopedidoTemp);
			} else {
				if(jComboBoxid_estado_pedidoConsignacionGenerico!=null && jComboBoxid_estado_pedidoConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_estado_pedidoConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoCambioForeignKey(Long idTipoCambioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipocambioTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setTipoCambio(tipocambioTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_cambioConsignacion.setSelectedItem(tipocambioTemp);
					}
				} else {
					//jComboBoxid_tipo_cambioConsignacion.setSelectedItem(tipocambioTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_cambioConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_cambioConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoCambio") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipocambioTemp!=null && jComboBoxid_tipo_cambioFK_IdTipoCambioConsignacion!=null) {
						jComboBoxid_tipo_cambioFK_IdTipoCambioConsignacion.setSelectedItem(tipocambioTemp);
					} else {
						if(jComboBoxid_tipo_cambioFK_IdTipoCambioConsignacion!=null) {
							//jComboBoxid_tipo_cambioFK_IdTipoCambioConsignacion.setSelectedItem(tipocambioTemp);
							if(jComboBoxid_tipo_cambioFK_IdTipoCambioConsignacion.getItemCount()>0) {
								jComboBoxid_tipo_cambioFK_IdTipoCambioConsignacion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoCambioForeignKeyDescripcion(Long idTipoCambioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}


			sDescripcion=TipoCambioConstantesFunciones.getTipoCambioDescripcion(tipocambioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoCambioForeignKeyGenerico(Long idTipoCambioSeleccionado,JComboBox jComboBoxid_tipo_cambioConsignacionGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(tipocambioTemp!=null) {
				jComboBoxid_tipo_cambioConsignacionGenerico.setSelectedItem(tipocambioTemp);
			} else {
				if(jComboBoxid_tipo_cambioConsignacionGenerico!=null && jComboBoxid_tipo_cambioConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_tipo_cambioConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualZonaForeignKey(Long idZonaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Zona  zonaTemp=null;

			for(Zona zonaAux:zonasForeignKey) {
				if(zonaAux.getId()!=null && zonaAux.getId().equals(idZonaSeleccionado)) {
					zonaTemp=zonaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(zonaTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setZona(zonaTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_zonaConsignacion.setSelectedItem(zonaTemp);
					}
				} else {
					//jComboBoxid_zonaConsignacion.setSelectedItem(zonaTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_zonaConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_zonaConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdZona") || sFormularioTipoBusqueda.equals("Todos")){
					if(zonaTemp!=null && jComboBoxid_zonaFK_IdZonaConsignacion!=null) {
						jComboBoxid_zonaFK_IdZonaConsignacion.setSelectedItem(zonaTemp);
					} else {
						if(jComboBoxid_zonaFK_IdZonaConsignacion!=null) {
							//jComboBoxid_zonaFK_IdZonaConsignacion.setSelectedItem(zonaTemp);
							if(jComboBoxid_zonaFK_IdZonaConsignacion.getItemCount()>0) {
								jComboBoxid_zonaFK_IdZonaConsignacion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualZonaForeignKeyDescripcion(Long idZonaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Zona  zonaTemp=null;

			for(Zona zonaAux:zonasForeignKey) {
				if(zonaAux.getId()!=null && zonaAux.getId().equals(idZonaSeleccionado)) {
					zonaTemp=zonaAux;
					break;
				}
			}


			sDescripcion=ZonaConstantesFunciones.getZonaDescripcion(zonaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualZonaForeignKeyGenerico(Long idZonaSeleccionado,JComboBox jComboBoxid_zonaConsignacionGenerico)throws Exception
	{
		try
		{
			Zona  zonaTemp=null;

			for(Zona zonaAux:zonasForeignKey) {
				if(zonaAux.getId()!=null && zonaAux.getId().equals(idZonaSeleccionado)) {
					zonaTemp=zonaAux;
					break;
				}
			}

			if(zonaTemp!=null) {
				jComboBoxid_zonaConsignacionGenerico.setSelectedItem(zonaTemp);
			} else {
				if(jComboBoxid_zonaConsignacionGenerico!=null && jComboBoxid_zonaConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_zonaConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCentroCostoForeignKey(Long idCentroCostoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(centrocostoTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setCentroCosto(centrocostoTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_centro_costoConsignacion.setSelectedItem(centrocostoTemp);
					}
				} else {
					//jComboBoxid_centro_costoConsignacion.setSelectedItem(centrocostoTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_centro_costoConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_centro_costoConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){
					if(centrocostoTemp!=null && jComboBoxid_centro_costoFK_IdCentroCostoConsignacion!=null) {
						jComboBoxid_centro_costoFK_IdCentroCostoConsignacion.setSelectedItem(centrocostoTemp);
					} else {
						if(jComboBoxid_centro_costoFK_IdCentroCostoConsignacion!=null) {
							//jComboBoxid_centro_costoFK_IdCentroCostoConsignacion.setSelectedItem(centrocostoTemp);
							if(jComboBoxid_centro_costoFK_IdCentroCostoConsignacion.getItemCount()>0) {
								jComboBoxid_centro_costoFK_IdCentroCostoConsignacion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCentroCostoForeignKeyDescripcion(Long idCentroCostoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}


			sDescripcion=CentroCostoConstantesFunciones.getCentroCostoDescripcion(centrocostoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCentroCostoForeignKeyGenerico(Long idCentroCostoSeleccionado,JComboBox jComboBoxid_centro_costoConsignacionGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(centrocostoTemp!=null) {
				jComboBoxid_centro_costoConsignacionGenerico.setSelectedItem(centrocostoTemp);
			} else {
				if(jComboBoxid_centro_costoConsignacionGenerico!=null && jComboBoxid_centro_costoConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_centro_costoConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualResponsableForeignKey(Long idResponsableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Responsable  responsableTemp=null;

			for(Responsable responsableAux:responsablesForeignKey) {
				if(responsableAux.getId()!=null && responsableAux.getId().equals(idResponsableSeleccionado)) {
					responsableTemp=responsableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(responsableTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setResponsable(responsableTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_responsableConsignacion.setSelectedItem(responsableTemp);
					}
				} else {
					//jComboBoxid_responsableConsignacion.setSelectedItem(responsableTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_responsableConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_responsableConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdResponsable") || sFormularioTipoBusqueda.equals("Todos")){
					if(responsableTemp!=null && jComboBoxid_responsableFK_IdResponsableConsignacion!=null) {
						jComboBoxid_responsableFK_IdResponsableConsignacion.setSelectedItem(responsableTemp);
					} else {
						if(jComboBoxid_responsableFK_IdResponsableConsignacion!=null) {
							//jComboBoxid_responsableFK_IdResponsableConsignacion.setSelectedItem(responsableTemp);
							if(jComboBoxid_responsableFK_IdResponsableConsignacion.getItemCount()>0) {
								jComboBoxid_responsableFK_IdResponsableConsignacion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualResponsableForeignKeyDescripcion(Long idResponsableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Responsable  responsableTemp=null;

			for(Responsable responsableAux:responsablesForeignKey) {
				if(responsableAux.getId()!=null && responsableAux.getId().equals(idResponsableSeleccionado)) {
					responsableTemp=responsableAux;
					break;
				}
			}


			sDescripcion=ResponsableConstantesFunciones.getResponsableDescripcion(responsableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualResponsableForeignKeyGenerico(Long idResponsableSeleccionado,JComboBox jComboBoxid_responsableConsignacionGenerico)throws Exception
	{
		try
		{
			Responsable  responsableTemp=null;

			for(Responsable responsableAux:responsablesForeignKey) {
				if(responsableAux.getId()!=null && responsableAux.getId().equals(idResponsableSeleccionado)) {
					responsableTemp=responsableAux;
					break;
				}
			}

			if(responsableTemp!=null) {
				jComboBoxid_responsableConsignacionGenerico.setSelectedItem(responsableTemp);
			} else {
				if(jComboBoxid_responsableConsignacionGenerico!=null && jComboBoxid_responsableConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_responsableConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransportistaForeignKey(Long idTransportistaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transportista  transportistaTemp=null;

			for(Transportista transportistaAux:transportistasForeignKey) {
				if(transportistaAux.getId()!=null && transportistaAux.getId().equals(idTransportistaSeleccionado)) {
					transportistaTemp=transportistaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transportistaTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setTransportista(transportistaTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transportistaConsignacion.setSelectedItem(transportistaTemp);
					}
				} else {
					//jComboBoxid_transportistaConsignacion.setSelectedItem(transportistaTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transportistaConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transportistaConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransportista") || sFormularioTipoBusqueda.equals("Todos")){
					if(transportistaTemp!=null && jComboBoxid_transportistaFK_IdTransportistaConsignacion!=null) {
						jComboBoxid_transportistaFK_IdTransportistaConsignacion.setSelectedItem(transportistaTemp);
					} else {
						if(jComboBoxid_transportistaFK_IdTransportistaConsignacion!=null) {
							//jComboBoxid_transportistaFK_IdTransportistaConsignacion.setSelectedItem(transportistaTemp);
							if(jComboBoxid_transportistaFK_IdTransportistaConsignacion.getItemCount()>0) {
								jComboBoxid_transportistaFK_IdTransportistaConsignacion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransportistaForeignKeyDescripcion(Long idTransportistaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transportista  transportistaTemp=null;

			for(Transportista transportistaAux:transportistasForeignKey) {
				if(transportistaAux.getId()!=null && transportistaAux.getId().equals(idTransportistaSeleccionado)) {
					transportistaTemp=transportistaAux;
					break;
				}
			}


			sDescripcion=TransportistaConstantesFunciones.getTransportistaDescripcion(transportistaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransportistaForeignKeyGenerico(Long idTransportistaSeleccionado,JComboBox jComboBoxid_transportistaConsignacionGenerico)throws Exception
	{
		try
		{
			Transportista  transportistaTemp=null;

			for(Transportista transportistaAux:transportistasForeignKey) {
				if(transportistaAux.getId()!=null && transportistaAux.getId().equals(idTransportistaSeleccionado)) {
					transportistaTemp=transportistaAux;
					break;
				}
			}

			if(transportistaTemp!=null) {
				jComboBoxid_transportistaConsignacionGenerico.setSelectedItem(transportistaTemp);
			} else {
				if(jComboBoxid_transportistaConsignacionGenerico!=null && jComboBoxid_transportistaConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_transportistaConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransporteForeignKey(Long idTransporteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transporte  transporteTemp=null;

			for(Transporte transporteAux:transportesForeignKey) {
				if(transporteAux.getId()!=null && transporteAux.getId().equals(idTransporteSeleccionado)) {
					transporteTemp=transporteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transporteTemp!=null) {

					if(this.consignacion!=null) {
						this.consignacion.setTransporte(transporteTemp);
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transporteConsignacion.setSelectedItem(transporteTemp);
					}
				} else {
					//jComboBoxid_transporteConsignacion.setSelectedItem(transporteTemp);
					if(this.jInternalFrameDetalleFormConsignacion!=null) {
						if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transporteConsignacion.getItemCount()>0) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transporteConsignacion.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransporte") || sFormularioTipoBusqueda.equals("Todos")){
					if(transporteTemp!=null && jComboBoxid_transporteFK_IdTransporteConsignacion!=null) {
						jComboBoxid_transporteFK_IdTransporteConsignacion.setSelectedItem(transporteTemp);
					} else {
						if(jComboBoxid_transporteFK_IdTransporteConsignacion!=null) {
							//jComboBoxid_transporteFK_IdTransporteConsignacion.setSelectedItem(transporteTemp);
							if(jComboBoxid_transporteFK_IdTransporteConsignacion.getItemCount()>0) {
								jComboBoxid_transporteFK_IdTransporteConsignacion.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransporteForeignKeyDescripcion(Long idTransporteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transporte  transporteTemp=null;

			for(Transporte transporteAux:transportesForeignKey) {
				if(transporteAux.getId()!=null && transporteAux.getId().equals(idTransporteSeleccionado)) {
					transporteTemp=transporteAux;
					break;
				}
			}


			sDescripcion=TransporteConstantesFunciones.getTransporteDescripcion(transporteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransporteForeignKeyGenerico(Long idTransporteSeleccionado,JComboBox jComboBoxid_transporteConsignacionGenerico)throws Exception
	{
		try
		{
			Transporte  transporteTemp=null;

			for(Transporte transporteAux:transportesForeignKey) {
				if(transporteAux.getId()!=null && transporteAux.getId().equals(idTransporteSeleccionado)) {
					transporteTemp=transporteAux;
					break;
				}
			}

			if(transporteTemp!=null) {
				jComboBoxid_transporteConsignacionGenerico.setSelectedItem(transporteTemp);
			} else {
				if(jComboBoxid_transporteConsignacionGenerico!=null && jComboBoxid_transporteConsignacionGenerico.getItemCount()>0) {
					jComboBoxid_transporteConsignacionGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(Consignacion consignacion,JComboBox jComboBoxid_empresaConsignacionGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaConsignacionGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empresaConsignacion.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaConsignacionGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				consignacion.setid_empresa(empresaAux.getId());
				consignacion.setempresa_descripcion(ConsignacionConstantesFunciones.getEmpresaDescripcion(empresaAux));
				consignacion.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(Consignacion consignacion,JComboBox jComboBoxid_sucursalConsignacionGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalConsignacionGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sucursalConsignacion.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalConsignacionGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				consignacion.setid_sucursal(sucursalAux.getId());
				consignacion.setsucursal_descripcion(ConsignacionConstantesFunciones.getSucursalDescripcion(sucursalAux));
				consignacion.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(Consignacion consignacion,JComboBox jComboBoxid_ejercicioConsignacionGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioConsignacionGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_ejercicioConsignacion.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioConsignacionGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				consignacion.setid_ejercicio(ejercicioAux.getId());
				consignacion.setejercicio_descripcion(ConsignacionConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				consignacion.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(Consignacion consignacion,JComboBox jComboBoxid_periodoConsignacionGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoConsignacionGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_periodoConsignacion.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoConsignacionGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				consignacion.setid_periodo(periodoAux.getId());
				consignacion.setperiodo_descripcion(ConsignacionConstantesFunciones.getPeriodoDescripcion(periodoAux));
				consignacion.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(Consignacion consignacion,JComboBox jComboBoxid_anioConsignacionGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioConsignacionGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_anioConsignacion.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioConsignacionGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				consignacion.setid_anio(anioAux.getId());
				consignacion.setanio_descripcion(ConsignacionConstantesFunciones.getAnioDescripcion(anioAux));
				consignacion.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(Consignacion consignacion,JComboBox jComboBoxid_mesConsignacionGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesConsignacionGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_mesConsignacion.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesConsignacionGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				consignacion.setid_mes(mesAux.getId());
				consignacion.setmes_descripcion(ConsignacionConstantesFunciones.getMesDescripcion(mesAux));
				consignacion.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUsuarioForeignKey(Consignacion consignacion,JComboBox jComboBoxid_usuarioConsignacionGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioAux=new Usuario();

			if(jComboBoxid_usuarioConsignacionGenerico==null) {
				usuarioAux=(Usuario)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_usuarioConsignacion.getSelectedItem();
			} else {
				usuarioAux=(Usuario)jComboBoxid_usuarioConsignacionGenerico.getSelectedItem();
			}

			if(usuarioAux!=null && usuarioAux.getId()!=null) {
				consignacion.setid_usuario(usuarioAux.getId());
				consignacion.setusuario_descripcion(ConsignacionConstantesFunciones.getUsuarioDescripcion(usuarioAux));
				consignacion.setUsuario(usuarioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMonedaForeignKey(Consignacion consignacion,JComboBox jComboBoxid_monedaConsignacionGenerico)throws Exception
	{
		try
		{
			Moneda  monedaAux=new Moneda();

			if(jComboBoxid_monedaConsignacionGenerico==null) {
				monedaAux=(Moneda)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_monedaConsignacion.getSelectedItem();
			} else {
				monedaAux=(Moneda)jComboBoxid_monedaConsignacionGenerico.getSelectedItem();
			}

			if(monedaAux!=null && monedaAux.getId()!=null) {
				consignacion.setid_moneda(monedaAux.getId());
				consignacion.setmoneda_descripcion(ConsignacionConstantesFunciones.getMonedaDescripcion(monedaAux));
				consignacion.setMoneda(monedaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpleadoForeignKey(Consignacion consignacion,JComboBox jComboBoxid_empleadoConsignacionGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoAux=new Empleado();

			if(jComboBoxid_empleadoConsignacionGenerico==null) {
				empleadoAux=(Empleado)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empleadoConsignacion.getSelectedItem();
			} else {
				empleadoAux=(Empleado)jComboBoxid_empleadoConsignacionGenerico.getSelectedItem();
			}

			if(empleadoAux!=null && empleadoAux.getId()!=null) {
				consignacion.setid_empleado(empleadoAux.getId());
				consignacion.setempleado_descripcion(ConsignacionConstantesFunciones.getEmpleadoDescripcion(empleadoAux));
				consignacion.setEmpleado(empleadoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoPrecioForeignKey(Consignacion consignacion,JComboBox jComboBoxid_tipo_precioConsignacionGenerico)throws Exception
	{
		try
		{
			TipoPrecio  tipoprecioAux=new TipoPrecio();

			if(jComboBoxid_tipo_precioConsignacionGenerico==null) {
				tipoprecioAux=(TipoPrecio)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_precioConsignacion.getSelectedItem();
			} else {
				tipoprecioAux=(TipoPrecio)jComboBoxid_tipo_precioConsignacionGenerico.getSelectedItem();
			}

			if(tipoprecioAux!=null && tipoprecioAux.getId()!=null) {
				consignacion.setid_tipo_precio(tipoprecioAux.getId());
				consignacion.settipoprecio_descripcion(ConsignacionConstantesFunciones.getTipoPrecioDescripcion(tipoprecioAux));
				consignacion.setTipoPrecio(tipoprecioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFormatoForeignKey(Consignacion consignacion,JComboBox jComboBoxid_formatoConsignacionGenerico)throws Exception
	{
		try
		{
			Formato  formatoAux=new Formato();

			if(jComboBoxid_formatoConsignacionGenerico==null) {
				formatoAux=(Formato)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_formatoConsignacion.getSelectedItem();
			} else {
				formatoAux=(Formato)jComboBoxid_formatoConsignacionGenerico.getSelectedItem();
			}

			if(formatoAux!=null) {
				consignacion.setid_formato(formatoAux.getId());
				consignacion.setformato_descripcion(ConsignacionConstantesFunciones.getFormatoDescripcion(formatoAux));
				consignacion.setFormato(formatoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteForeignKey(Consignacion consignacion,JComboBox jComboBoxid_clienteConsignacionGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_clienteConsignacionGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_clienteConsignacion.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_clienteConsignacionGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				consignacion.setid_cliente(clienteAux.getId());
				consignacion.setcliente_descripcion(ConsignacionConstantesFunciones.getClienteDescripcion(clienteAux));
				consignacion.setCliente(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSubClienteForeignKey(Consignacion consignacion,JComboBox jComboBoxid_sub_clienteConsignacionGenerico)throws Exception
	{
		try
		{
			SubCliente  subclienteAux=new SubCliente();

			if(jComboBoxid_sub_clienteConsignacionGenerico==null) {
				subclienteAux=(SubCliente)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sub_clienteConsignacion.getSelectedItem();
			} else {
				subclienteAux=(SubCliente)jComboBoxid_sub_clienteConsignacionGenerico.getSelectedItem();
			}

			if(subclienteAux!=null) {
				consignacion.setid_sub_cliente(subclienteAux.getId());
				consignacion.setsubcliente_descripcion(ConsignacionConstantesFunciones.getSubClienteDescripcion(subclienteAux));
				consignacion.setSubCliente(subclienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarConsignatarioForeignKey(Consignacion consignacion,JComboBox jComboBoxid_consignatarioConsignacionGenerico)throws Exception
	{
		try
		{
			Consignatario  consignatarioAux=new Consignatario();

			if(jComboBoxid_consignatarioConsignacionGenerico==null) {
				consignatarioAux=(Consignatario)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_consignatarioConsignacion.getSelectedItem();
			} else {
				consignatarioAux=(Consignatario)jComboBoxid_consignatarioConsignacionGenerico.getSelectedItem();
			}

			if(consignatarioAux!=null && consignatarioAux.getId()!=null) {
				consignacion.setid_consignatario(consignatarioAux.getId());
				consignacion.setconsignatario_descripcion(ConsignacionConstantesFunciones.getConsignatarioDescripcion(consignatarioAux));
				consignacion.setConsignatario(consignatarioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarVendedorForeignKey(Consignacion consignacion,JComboBox jComboBoxid_vendedorConsignacionGenerico)throws Exception
	{
		try
		{
			Vendedor  vendedorAux=new Vendedor();

			if(jComboBoxid_vendedorConsignacionGenerico==null) {
				vendedorAux=(Vendedor)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_vendedorConsignacion.getSelectedItem();
			} else {
				vendedorAux=(Vendedor)jComboBoxid_vendedorConsignacionGenerico.getSelectedItem();
			}

			if(vendedorAux!=null) {
				consignacion.setid_vendedor(vendedorAux.getId());
				consignacion.setvendedor_descripcion(ConsignacionConstantesFunciones.getVendedorDescripcion(vendedorAux));
				consignacion.setVendedor(vendedorAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoPedidoForeignKey(Consignacion consignacion,JComboBox jComboBoxid_estado_pedidoConsignacionGenerico)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidoAux=new EstadoPedido();

			if(jComboBoxid_estado_pedidoConsignacionGenerico==null) {
				estadopedidoAux=(EstadoPedido)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_estado_pedidoConsignacion.getSelectedItem();
			} else {
				estadopedidoAux=(EstadoPedido)jComboBoxid_estado_pedidoConsignacionGenerico.getSelectedItem();
			}

			if(estadopedidoAux!=null && estadopedidoAux.getId()!=null) {
				consignacion.setid_estado_pedido(estadopedidoAux.getId());
				consignacion.setestadopedido_descripcion(ConsignacionConstantesFunciones.getEstadoPedidoDescripcion(estadopedidoAux));
				consignacion.setEstadoPedido(estadopedidoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoCambioForeignKey(Consignacion consignacion,JComboBox jComboBoxid_tipo_cambioConsignacionGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioAux=new TipoCambio();

			if(jComboBoxid_tipo_cambioConsignacionGenerico==null) {
				tipocambioAux=(TipoCambio)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_cambioConsignacion.getSelectedItem();
			} else {
				tipocambioAux=(TipoCambio)jComboBoxid_tipo_cambioConsignacionGenerico.getSelectedItem();
			}

			if(tipocambioAux!=null) {
				consignacion.setid_tipo_cambio(tipocambioAux.getId());
				consignacion.settipocambio_descripcion(ConsignacionConstantesFunciones.getTipoCambioDescripcion(tipocambioAux));
				consignacion.setTipoCambio(tipocambioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarZonaForeignKey(Consignacion consignacion,JComboBox jComboBoxid_zonaConsignacionGenerico)throws Exception
	{
		try
		{
			Zona  zonaAux=new Zona();

			if(jComboBoxid_zonaConsignacionGenerico==null) {
				zonaAux=(Zona)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_zonaConsignacion.getSelectedItem();
			} else {
				zonaAux=(Zona)jComboBoxid_zonaConsignacionGenerico.getSelectedItem();
			}

			if(zonaAux!=null) {
				consignacion.setid_zona(zonaAux.getId());
				consignacion.setzona_descripcion(ConsignacionConstantesFunciones.getZonaDescripcion(zonaAux));
				consignacion.setZona(zonaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCentroCostoForeignKey(Consignacion consignacion,JComboBox jComboBoxid_centro_costoConsignacionGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoAux=new CentroCosto();

			if(jComboBoxid_centro_costoConsignacionGenerico==null) {
				centrocostoAux=(CentroCosto)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_centro_costoConsignacion.getSelectedItem();
			} else {
				centrocostoAux=(CentroCosto)jComboBoxid_centro_costoConsignacionGenerico.getSelectedItem();
			}

			if(centrocostoAux!=null) {
				consignacion.setid_centro_costo(centrocostoAux.getId());
				consignacion.setcentrocosto_descripcion(ConsignacionConstantesFunciones.getCentroCostoDescripcion(centrocostoAux));
				consignacion.setCentroCosto(centrocostoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarResponsableForeignKey(Consignacion consignacion,JComboBox jComboBoxid_responsableConsignacionGenerico)throws Exception
	{
		try
		{
			Responsable  responsableAux=new Responsable();

			if(jComboBoxid_responsableConsignacionGenerico==null) {
				responsableAux=(Responsable)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_responsableConsignacion.getSelectedItem();
			} else {
				responsableAux=(Responsable)jComboBoxid_responsableConsignacionGenerico.getSelectedItem();
			}

			if(responsableAux!=null) {
				consignacion.setid_responsable(responsableAux.getId());
				consignacion.setresponsable_descripcion(ConsignacionConstantesFunciones.getResponsableDescripcion(responsableAux));
				consignacion.setResponsable(responsableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransportistaForeignKey(Consignacion consignacion,JComboBox jComboBoxid_transportistaConsignacionGenerico)throws Exception
	{
		try
		{
			Transportista  transportistaAux=new Transportista();

			if(jComboBoxid_transportistaConsignacionGenerico==null) {
				transportistaAux=(Transportista)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transportistaConsignacion.getSelectedItem();
			} else {
				transportistaAux=(Transportista)jComboBoxid_transportistaConsignacionGenerico.getSelectedItem();
			}

			if(transportistaAux!=null) {
				consignacion.setid_transportista(transportistaAux.getId());
				consignacion.settransportista_descripcion(ConsignacionConstantesFunciones.getTransportistaDescripcion(transportistaAux));
				consignacion.setTransportista(transportistaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransporteForeignKey(Consignacion consignacion,JComboBox jComboBoxid_transporteConsignacionGenerico)throws Exception
	{
		try
		{
			Transporte  transporteAux=new Transporte();

			if(jComboBoxid_transporteConsignacionGenerico==null) {
				transporteAux=(Transporte)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transporteConsignacion.getSelectedItem();
			} else {
				transporteAux=(Transporte)jComboBoxid_transporteConsignacionGenerico.getSelectedItem();
			}

			if(transporteAux!=null && transporteAux.getId()!=null) {
				consignacion.setid_transporte(transporteAux.getId());
				consignacion.settransporte_descripcion(ConsignacionConstantesFunciones.getTransporteDescripcion(transporteAux));
				consignacion.setTransporte(transporteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empresaConsignacion.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empresaConsignacion.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sucursalConsignacion.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sucursalConsignacion.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_ejercicioConsignacion.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_ejercicioConsignacion.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_periodoConsignacion.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_periodoConsignacion.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_anioConsignacion.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_anioConsignacion.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_mesConsignacion.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_mesConsignacion.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUsuariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUsuario=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_usuarioConsignacion.removeAllItems();

							for(Usuario usuario:this.usuariosForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_usuarioConsignacion.addItem(usuario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMonedasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMoneda=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_monedaConsignacion.removeAllItems();

							for(Moneda moneda:this.monedasForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_monedaConsignacion.addItem(moneda);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpleadosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpleado=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empleadoConsignacion.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empleadoConsignacion.addItem(empleado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoConsignacion.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jComboBoxid_empleadoFK_IdEmpleadoConsignacion.addItem(empleado);
							}
						}

						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoPreciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoPrecio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_precioConsignacion.removeAllItems();

							for(TipoPrecio tipoprecio:this.tipopreciosForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_precioConsignacion.addItem(tipoprecio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoPrecio") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_precioFK_IdTipoPrecioConsignacion.removeAllItems();

							for(TipoPrecio tipoprecio:this.tipopreciosForeignKey) {
								this.jComboBoxid_tipo_precioFK_IdTipoPrecioConsignacion.addItem(tipoprecio);
							}
						}

						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFormatosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFormato=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_formatoConsignacion.removeAllItems();

							for(Formato formato:this.formatosForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_formatoConsignacion.addItem(formato);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdFormato") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_formatoFK_IdFormatoConsignacion.removeAllItems();

							for(Formato formato:this.formatosForeignKey) {
								this.jComboBoxid_formatoFK_IdFormatoConsignacion.addItem(formato);
							}
						}

						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_clienteConsignacion.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_clienteConsignacion.addItem(cliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clienteFK_IdClienteConsignacion.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jComboBoxid_clienteFK_IdClienteConsignacion.addItem(cliente);
							}
						}

						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSubClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSubCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sub_clienteConsignacion.removeAllItems();

							for(SubCliente subcliente:this.subclientesForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sub_clienteConsignacion.addItem(subcliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdSubCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_sub_clienteFK_IdSubClienteConsignacion.removeAllItems();

							for(SubCliente subcliente:this.subclientesForeignKey) {
								this.jComboBoxid_sub_clienteFK_IdSubClienteConsignacion.addItem(subcliente);
							}
						}

						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameConsignatariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingConsignatario=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_consignatarioConsignacion.removeAllItems();

							for(Consignatario consignatario:this.consignatariosForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_consignatarioConsignacion.addItem(consignatario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdConsignatario") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_consignatarioFK_IdConsignatarioConsignacion.removeAllItems();

							for(Consignatario consignatario:this.consignatariosForeignKey) {
								this.jComboBoxid_consignatarioFK_IdConsignatarioConsignacion.addItem(consignatario);
							}
						}

						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameVendedorsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingVendedor=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_vendedorConsignacion.removeAllItems();

							for(Vendedor vendedor:this.vendedorsForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_vendedorConsignacion.addItem(vendedor);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdVendedor") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_vendedorFK_IdVendedorConsignacion.removeAllItems();

							for(Vendedor vendedor:this.vendedorsForeignKey) {
								this.jComboBoxid_vendedorFK_IdVendedorConsignacion.addItem(vendedor);
							}
						}

						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoPedidosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoPedido=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_estado_pedidoConsignacion.removeAllItems();

							for(EstadoPedido estadopedido:this.estadopedidosForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_estado_pedidoConsignacion.addItem(estadopedido);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedido") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_pedidoFK_IdEstadoPedidoConsignacion.removeAllItems();

							for(EstadoPedido estadopedido:this.estadopedidosForeignKey) {
								this.jComboBoxid_estado_pedidoFK_IdEstadoPedidoConsignacion.addItem(estadopedido);
							}
						}

						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoCambiosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoCambio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_cambioConsignacion.removeAllItems();

							for(TipoCambio tipocambio:this.tipocambiosForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_cambioConsignacion.addItem(tipocambio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoCambio") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_cambioFK_IdTipoCambioConsignacion.removeAllItems();

							for(TipoCambio tipocambio:this.tipocambiosForeignKey) {
								this.jComboBoxid_tipo_cambioFK_IdTipoCambioConsignacion.addItem(tipocambio);
							}
						}

						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameZonasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingZona=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_zonaConsignacion.removeAllItems();

							for(Zona zona:this.zonasForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_zonaConsignacion.addItem(zona);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdZona") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_zonaFK_IdZonaConsignacion.removeAllItems();

							for(Zona zona:this.zonasForeignKey) {
								this.jComboBoxid_zonaFK_IdZonaConsignacion.addItem(zona);
							}
						}

						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCentroCostosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCentroCosto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_centro_costoConsignacion.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_centro_costoConsignacion.addItem(centrocosto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoConsignacion.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jComboBoxid_centro_costoFK_IdCentroCostoConsignacion.addItem(centrocosto);
							}
						}

						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameResponsablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingResponsable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_responsableConsignacion.removeAllItems();

							for(Responsable responsable:this.responsablesForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_responsableConsignacion.addItem(responsable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdResponsable") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_responsableFK_IdResponsableConsignacion.removeAllItems();

							for(Responsable responsable:this.responsablesForeignKey) {
								this.jComboBoxid_responsableFK_IdResponsableConsignacion.addItem(responsable);
							}
						}

						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransportistasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransportista=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transportistaConsignacion.removeAllItems();

							for(Transportista transportista:this.transportistasForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transportistaConsignacion.addItem(transportista);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransportista") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transportistaFK_IdTransportistaConsignacion.removeAllItems();

							for(Transportista transportista:this.transportistasForeignKey) {
								this.jComboBoxid_transportistaFK_IdTransportistaConsignacion.addItem(transportista);
							}
						}

						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransportesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransporte=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) { 
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transporteConsignacion.removeAllItems();

							for(Transporte transporte:this.transportesForeignKey) {
								this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transporteConsignacion.addItem(transporte);
							}
						}
					}

					if(this.jInternalFrameDetalleFormConsignacion!=null) { 
					}

					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransporte") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transporteFK_IdTransporteConsignacion.removeAllItems();

							for(Transporte transporte:this.transportesForeignKey) {
								this.jComboBoxid_transporteFK_IdTransporteConsignacion.addItem(transporte);
							}
						}

						if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empresaConsignacion.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empresaConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sucursalConsignacion.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sucursalConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_ejercicioConsignacion.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_ejercicioConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_periodoConsignacion.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_periodoConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_anioConsignacion.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_anioConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_mesConsignacion.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_mesConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUsuarioForeignKey(Usuario usuario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_usuarioConsignacion.setSelectedItem(usuario);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_usuarioConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMonedaForeignKey(Moneda moneda,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_monedaConsignacion.setSelectedItem(moneda);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_monedaConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpleadoForeignKey(Empleado empleado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empleadoConsignacion.setSelectedItem(empleado);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empleadoConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_empleadoFK_IdEmpleadoConsignacion.setSelectedItem(empleado);
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoConsignacion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoPrecioForeignKey(TipoPrecio tipoprecio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_precioConsignacion.setSelectedItem(tipoprecio);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_precioConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_precioFK_IdTipoPrecioConsignacion.setSelectedItem(tipoprecio);
						} else {
							this.jComboBoxid_tipo_precioFK_IdTipoPrecioConsignacion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFormatoForeignKey(Formato formato,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_formatoConsignacion.setSelectedItem(formato);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_formatoConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_formatoFK_IdFormatoConsignacion.setSelectedItem(formato);
						} else {
							this.jComboBoxid_formatoFK_IdFormatoConsignacion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteForeignKey(Cliente cliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_clienteConsignacion.setSelectedItem(cliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_clienteConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_clienteFK_IdClienteConsignacion.setSelectedItem(cliente);
						} else {
							this.jComboBoxid_clienteFK_IdClienteConsignacion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSubClienteForeignKey(SubCliente subcliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sub_clienteConsignacion.setSelectedItem(subcliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sub_clienteConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_sub_clienteFK_IdSubClienteConsignacion.setSelectedItem(subcliente);
						} else {
							this.jComboBoxid_sub_clienteFK_IdSubClienteConsignacion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameConsignatarioForeignKey(Consignatario consignatario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_consignatarioConsignacion.setSelectedItem(consignatario);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_consignatarioConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_consignatarioFK_IdConsignatarioConsignacion.setSelectedItem(consignatario);
						} else {
							this.jComboBoxid_consignatarioFK_IdConsignatarioConsignacion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameVendedorForeignKey(Vendedor vendedor,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_vendedorConsignacion.setSelectedItem(vendedor);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_vendedorConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_vendedorFK_IdVendedorConsignacion.setSelectedItem(vendedor);
						} else {
							this.jComboBoxid_vendedorFK_IdVendedorConsignacion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoPedidoForeignKey(EstadoPedido estadopedido,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_estado_pedidoConsignacion.setSelectedItem(estadopedido);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_estado_pedidoConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_pedidoFK_IdEstadoPedidoConsignacion.setSelectedItem(estadopedido);
						} else {
							this.jComboBoxid_estado_pedidoFK_IdEstadoPedidoConsignacion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoCambioForeignKey(TipoCambio tipocambio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_cambioConsignacion.setSelectedItem(tipocambio);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_cambioConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_cambioFK_IdTipoCambioConsignacion.setSelectedItem(tipocambio);
						} else {
							this.jComboBoxid_tipo_cambioFK_IdTipoCambioConsignacion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameZonaForeignKey(Zona zona,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_zonaConsignacion.setSelectedItem(zona);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_zonaConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_zonaFK_IdZonaConsignacion.setSelectedItem(zona);
						} else {
							this.jComboBoxid_zonaFK_IdZonaConsignacion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCentroCostoForeignKey(CentroCosto centrocosto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_centro_costoConsignacion.setSelectedItem(centrocosto);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_centro_costoConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_centro_costoFK_IdCentroCostoConsignacion.setSelectedItem(centrocosto);
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoConsignacion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameResponsableForeignKey(Responsable responsable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_responsableConsignacion.setSelectedItem(responsable);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_responsableConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_responsableFK_IdResponsableConsignacion.setSelectedItem(responsable);
						} else {
							this.jComboBoxid_responsableFK_IdResponsableConsignacion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransportistaForeignKey(Transportista transportista,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transportistaConsignacion.setSelectedItem(transportista);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transportistaConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transportistaFK_IdTransportistaConsignacion.setSelectedItem(transportista);
						} else {
							this.jComboBoxid_transportistaFK_IdTransportistaConsignacion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransporteForeignKey(Transporte transporte,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transporteConsignacion.setSelectedItem(transporte);
						}
					} else {
						if(this.jInternalFrameDetalleFormConsignacion!=null) {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transporteConsignacion.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transporteFK_IdTransporteConsignacion.setSelectedItem(transporte);
						} else {
							this.jComboBoxid_transporteFK_IdTransporteConsignacion.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesConsignacion() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			ConsignacionConstantesFunciones.refrescarForeignKeysDescripcionesConsignacion(this.consignacionLogic.getConsignacions());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			ConsignacionConstantesFunciones.refrescarForeignKeysDescripcionesConsignacion(this.consignacions);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
		classes.add(new Classe(Usuario.class));
		classes.add(new Classe(Moneda.class));
		classes.add(new Classe(Empleado.class));
		classes.add(new Classe(TipoPrecio.class));
		classes.add(new Classe(Formato.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(SubCliente.class));
		classes.add(new Classe(Consignatario.class));
		classes.add(new Classe(Vendedor.class));
		classes.add(new Classe(EstadoPedido.class));
		classes.add(new Classe(TipoCambio.class));
		classes.add(new Classe(Zona.class));
		classes.add(new Classe(CentroCosto.class));
		classes.add(new Classe(Responsable.class));
		classes.add(new Classe(Transportista.class));
		classes.add(new Classe(Transporte.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//consignacionLogic.setConsignacions(this.consignacions);
			consignacionLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public ConsignacionParameterReturnGeneral getConsignacionParameterGeneral() {
		return this.consignacionParameterGeneral;
	}
	
	public void setConsignacionParameterGeneral(ConsignacionParameterReturnGeneral consignacionParameterGeneral) {
		this.consignacionParameterGeneral = consignacionParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoConsignacion() {
		return isPermisoTodoConsignacion;
	}

	public void setIsPermisoTodoConsignacion(Boolean isPermisoTodoConsignacion) {
		this.isPermisoTodoConsignacion = isPermisoTodoConsignacion;
	}

	public Boolean getIsPermisoNuevoConsignacion() {
		return isPermisoNuevoConsignacion;
	}

	public void setIsPermisoNuevoConsignacion(Boolean isPermisoNuevoConsignacion) {
		this.isPermisoNuevoConsignacion = isPermisoNuevoConsignacion;
	}

	public Boolean getIsPermisoActualizarConsignacion() {
		return isPermisoActualizarConsignacion;
	}

	public void setIsPermisoActualizarConsignacion(Boolean isPermisoActualizarConsignacion) {
		this.isPermisoActualizarConsignacion = isPermisoActualizarConsignacion;
	}

	public Boolean getIsPermisoEliminarConsignacion() {
		return isPermisoEliminarConsignacion;
	}

	public void setIsPermisoEliminarConsignacion(Boolean isPermisoEliminarConsignacion) {
		this.isPermisoEliminarConsignacion = isPermisoEliminarConsignacion;
	}

	public Boolean getIsPermisoGuardarCambiosConsignacion() {
		return isPermisoGuardarCambiosConsignacion;
	}

	public void setIsPermisoGuardarCambiosConsignacion(Boolean isPermisoGuardarCambiosConsignacion) {
		this.isPermisoGuardarCambiosConsignacion = isPermisoGuardarCambiosConsignacion;
	}
	
	public Boolean getIsPermisoConsultaConsignacion() {
		return isPermisoConsultaConsignacion;
	}

	public void setIsPermisoConsultaConsignacion(Boolean isPermisoConsultaConsignacion) {
		this.isPermisoConsultaConsignacion = isPermisoConsultaConsignacion;
	}

	public Boolean getIsPermisoBusquedaConsignacion() {
		return isPermisoBusquedaConsignacion;
	}

	public void setIsPermisoBusquedaConsignacion(Boolean isPermisoBusquedaConsignacion) {
		this.isPermisoBusquedaConsignacion = isPermisoBusquedaConsignacion;
	}

	public Boolean getIsPermisoReporteConsignacion() {
		return isPermisoReporteConsignacion;
	}

	public void setIsPermisoReporteConsignacion(Boolean isPermisoReporteConsignacion) {
		this.isPermisoReporteConsignacion = isPermisoReporteConsignacion;
	}
	
	public Boolean getIsPermisoPaginacionMedioConsignacion() {
		return isPermisoPaginacionMedioConsignacion;
	}

	public void setIsPermisoPaginacionMedioConsignacion(Boolean isPermisoPaginacionMedioConsignacion) {
		this.isPermisoPaginacionMedioConsignacion = isPermisoPaginacionMedioConsignacion;
	}
	
	public Boolean getIsPermisoPaginacionTodoConsignacion() {
		return isPermisoPaginacionTodoConsignacion;
	}

	public void setIsPermisoPaginacionTodoConsignacion(Boolean isPermisoPaginacionTodoConsignacion) {
		this.isPermisoPaginacionTodoConsignacion = isPermisoPaginacionTodoConsignacion;
	}
	
	public Boolean getIsPermisoPaginacionAltoConsignacion() {
		return isPermisoPaginacionAltoConsignacion;
	}

	public void setIsPermisoPaginacionAltoConsignacion(Boolean isPermisoPaginacionAltoConsignacion) {
		this.isPermisoPaginacionAltoConsignacion = isPermisoPaginacionAltoConsignacion;
	}
	
	public Boolean getIsPermisoCopiarConsignacion() {
		return isPermisoCopiarConsignacion;
	}

	public void setIsPermisoCopiarConsignacion(Boolean isPermisoCopiarConsignacion) {
		this.isPermisoCopiarConsignacion = isPermisoCopiarConsignacion;
	}
	
	public Boolean getIsPermisoVerFormConsignacion() {
		return isPermisoVerFormConsignacion;
	}

	public void setIsPermisoVerFormConsignacion(Boolean isPermisoVerFormConsignacion) {
		this.isPermisoVerFormConsignacion = isPermisoVerFormConsignacion;
	}
	
	public Boolean getIsPermisoDuplicarConsignacion() {
		return isPermisoDuplicarConsignacion;
	}

	public void setIsPermisoDuplicarConsignacion(Boolean isPermisoDuplicarConsignacion) {
		this.isPermisoDuplicarConsignacion = isPermisoDuplicarConsignacion;
	}
	
	public Boolean getIsPermisoOrdenConsignacion() {
		return isPermisoOrdenConsignacion;
	}

	public void setIsPermisoOrdenConsignacion(Boolean isPermisoOrdenConsignacion) {
		this.isPermisoOrdenConsignacion = isPermisoOrdenConsignacion;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoConsignacion() {
		return isVisibilidadCeldaNuevoConsignacion;
	}

	public void setIsVisibilidadCeldaNuevoConsignacion(Boolean isVisibilidadCeldaNuevoConsignacion) {
		this.isVisibilidadCeldaNuevoConsignacion = isVisibilidadCeldaNuevoConsignacion;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarConsignacion() {
		return isVisibilidadCeldaDuplicarConsignacion;
	}

	public void setIsVisibilidadCeldaDuplicarConsignacion(Boolean isVisibilidadCeldaDuplicarConsignacion) {
		this.isVisibilidadCeldaDuplicarConsignacion = isVisibilidadCeldaDuplicarConsignacion;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarConsignacion() {
		return isVisibilidadCeldaCopiarConsignacion;
	}

	public void setIsVisibilidadCeldaCopiarConsignacion(Boolean isVisibilidadCeldaCopiarConsignacion) {
		this.isVisibilidadCeldaCopiarConsignacion = isVisibilidadCeldaCopiarConsignacion;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormConsignacion() {
		return isVisibilidadCeldaVerFormConsignacion;
	}

	public void setIsVisibilidadCeldaVerFormConsignacion(Boolean isVisibilidadCeldaVerFormConsignacion) {
		this.isVisibilidadCeldaVerFormConsignacion = isVisibilidadCeldaVerFormConsignacion;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenConsignacion() {
		return isVisibilidadCeldaOrdenConsignacion;
	}

	public void setIsVisibilidadCeldaOrdenConsignacion(Boolean isVisibilidadCeldaOrdenConsignacion) {
		this.isVisibilidadCeldaOrdenConsignacion = isVisibilidadCeldaOrdenConsignacion;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesConsignacion() {
		return isVisibilidadCeldaNuevoRelacionesConsignacion;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesConsignacion(Boolean isVisibilidadCeldaNuevoRelacionesConsignacion) {
		this.isVisibilidadCeldaNuevoRelacionesConsignacion = isVisibilidadCeldaNuevoRelacionesConsignacion;
	}
	
	public Boolean getIsVisibilidadCeldaModificarConsignacion() {
		return isVisibilidadCeldaModificarConsignacion;
	}

	public void setIsVisibilidadCeldaModificarConsignacion(Boolean isVisibilidadCeldaModificarConsignacion) {
		this.isVisibilidadCeldaModificarConsignacion = isVisibilidadCeldaModificarConsignacion;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarConsignacion() {
		return isVisibilidadCeldaActualizarConsignacion;
	}

	public void setIsVisibilidadCeldaActualizarConsignacion(Boolean isVisibilidadCeldaActualizarConsignacion) {
		this.isVisibilidadCeldaActualizarConsignacion = isVisibilidadCeldaActualizarConsignacion;
	}

	public Boolean getIsVisibilidadCeldaEliminarConsignacion() {
		return isVisibilidadCeldaEliminarConsignacion;
	}

	public void setIsVisibilidadCeldaEliminarConsignacion(Boolean isVisibilidadCeldaEliminarConsignacion) {
		this.isVisibilidadCeldaEliminarConsignacion = isVisibilidadCeldaEliminarConsignacion;
	}

	public Boolean getIsVisibilidadCeldaCancelarConsignacion() {
		return isVisibilidadCeldaCancelarConsignacion;
	}

	public void setIsVisibilidadCeldaCancelarConsignacion(Boolean isVisibilidadCeldaCancelarConsignacion) {
		this.isVisibilidadCeldaCancelarConsignacion = isVisibilidadCeldaCancelarConsignacion;
	}

	public Boolean getIsVisibilidadCeldaGuardarConsignacion() {
		return isVisibilidadCeldaGuardarConsignacion;
	}

	public void setIsVisibilidadCeldaGuardarConsignacion(Boolean isVisibilidadCeldaGuardarConsignacion) {
		this.isVisibilidadCeldaGuardarConsignacion = isVisibilidadCeldaGuardarConsignacion;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosConsignacion() {
		return isVisibilidadCeldaGuardarCambiosConsignacion;
	}

	public void setIsVisibilidadCeldaGuardarCambiosConsignacion(Boolean isVisibilidadCeldaGuardarCambiosConsignacion) {
		this.isVisibilidadCeldaGuardarCambiosConsignacion = isVisibilidadCeldaGuardarCambiosConsignacion;
	}
		
	public ConsignacionSessionBean getconsignacionSessionBean() {
		return this.consignacionSessionBean;
	}
	
	public void setconsignacionSessionBean(ConsignacionSessionBean consignacionSessionBean) {
		this.consignacionSessionBean=consignacionSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdCentroCosto() {
		return this.isVisibilidadFK_IdCentroCosto;
	}

	public void setisVisibilidadFK_IdCentroCosto(Boolean isVisibilidadFK_IdCentroCosto) {
		this.isVisibilidadFK_IdCentroCosto=isVisibilidadFK_IdCentroCosto;
	}

	public Boolean getisVisibilidadFK_IdCliente() {
		return this.isVisibilidadFK_IdCliente;
	}

	public void setisVisibilidadFK_IdCliente(Boolean isVisibilidadFK_IdCliente) {
		this.isVisibilidadFK_IdCliente=isVisibilidadFK_IdCliente;
	}

	public Boolean getisVisibilidadFK_IdConsignatario() {
		return this.isVisibilidadFK_IdConsignatario;
	}

	public void setisVisibilidadFK_IdConsignatario(Boolean isVisibilidadFK_IdConsignatario) {
		this.isVisibilidadFK_IdConsignatario=isVisibilidadFK_IdConsignatario;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpleado() {
		return this.isVisibilidadFK_IdEmpleado;
	}

	public void setisVisibilidadFK_IdEmpleado(Boolean isVisibilidadFK_IdEmpleado) {
		this.isVisibilidadFK_IdEmpleado=isVisibilidadFK_IdEmpleado;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstadoPedido() {
		return this.isVisibilidadFK_IdEstadoPedido;
	}

	public void setisVisibilidadFK_IdEstadoPedido(Boolean isVisibilidadFK_IdEstadoPedido) {
		this.isVisibilidadFK_IdEstadoPedido=isVisibilidadFK_IdEstadoPedido;
	}

	public Boolean getisVisibilidadFK_IdFormato() {
		return this.isVisibilidadFK_IdFormato;
	}

	public void setisVisibilidadFK_IdFormato(Boolean isVisibilidadFK_IdFormato) {
		this.isVisibilidadFK_IdFormato=isVisibilidadFK_IdFormato;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdMoneda() {
		return this.isVisibilidadFK_IdMoneda;
	}

	public void setisVisibilidadFK_IdMoneda(Boolean isVisibilidadFK_IdMoneda) {
		this.isVisibilidadFK_IdMoneda=isVisibilidadFK_IdMoneda;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdResponsable() {
		return this.isVisibilidadFK_IdResponsable;
	}

	public void setisVisibilidadFK_IdResponsable(Boolean isVisibilidadFK_IdResponsable) {
		this.isVisibilidadFK_IdResponsable=isVisibilidadFK_IdResponsable;
	}

	public Boolean getisVisibilidadFK_IdSubCliente() {
		return this.isVisibilidadFK_IdSubCliente;
	}

	public void setisVisibilidadFK_IdSubCliente(Boolean isVisibilidadFK_IdSubCliente) {
		this.isVisibilidadFK_IdSubCliente=isVisibilidadFK_IdSubCliente;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoCambio() {
		return this.isVisibilidadFK_IdTipoCambio;
	}

	public void setisVisibilidadFK_IdTipoCambio(Boolean isVisibilidadFK_IdTipoCambio) {
		this.isVisibilidadFK_IdTipoCambio=isVisibilidadFK_IdTipoCambio;
	}

	public Boolean getisVisibilidadFK_IdTipoPrecio() {
		return this.isVisibilidadFK_IdTipoPrecio;
	}

	public void setisVisibilidadFK_IdTipoPrecio(Boolean isVisibilidadFK_IdTipoPrecio) {
		this.isVisibilidadFK_IdTipoPrecio=isVisibilidadFK_IdTipoPrecio;
	}

	public Boolean getisVisibilidadFK_IdTransporte() {
		return this.isVisibilidadFK_IdTransporte;
	}

	public void setisVisibilidadFK_IdTransporte(Boolean isVisibilidadFK_IdTransporte) {
		this.isVisibilidadFK_IdTransporte=isVisibilidadFK_IdTransporte;
	}

	public Boolean getisVisibilidadFK_IdTransportista() {
		return this.isVisibilidadFK_IdTransportista;
	}

	public void setisVisibilidadFK_IdTransportista(Boolean isVisibilidadFK_IdTransportista) {
		this.isVisibilidadFK_IdTransportista=isVisibilidadFK_IdTransportista;
	}

	public Boolean getisVisibilidadFK_IdUsuario() {
		return this.isVisibilidadFK_IdUsuario;
	}

	public void setisVisibilidadFK_IdUsuario(Boolean isVisibilidadFK_IdUsuario) {
		this.isVisibilidadFK_IdUsuario=isVisibilidadFK_IdUsuario;
	}

	public Boolean getisVisibilidadFK_IdVendedor() {
		return this.isVisibilidadFK_IdVendedor;
	}

	public void setisVisibilidadFK_IdVendedor(Boolean isVisibilidadFK_IdVendedor) {
		this.isVisibilidadFK_IdVendedor=isVisibilidadFK_IdVendedor;
	}

	public Boolean getisVisibilidadFK_IdZona() {
		return this.isVisibilidadFK_IdZona;
	}

	public void setisVisibilidadFK_IdZona(Boolean isVisibilidadFK_IdZona) {
		this.isVisibilidadFK_IdZona=isVisibilidadFK_IdZona;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysConsignacion(Consignacion consignacion)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(consignacion,null);
				this.setActualParaGuardarSucursalForeignKey(consignacion,null);
				this.setActualParaGuardarEjercicioForeignKey(consignacion,null);
				this.setActualParaGuardarPeriodoForeignKey(consignacion,null);
				this.setActualParaGuardarAnioForeignKey(consignacion,null);
				this.setActualParaGuardarMesForeignKey(consignacion,null);
				this.setActualParaGuardarUsuarioForeignKey(consignacion,null);
				this.setActualParaGuardarMonedaForeignKey(consignacion,null);
				this.setActualParaGuardarEmpleadoForeignKey(consignacion,null);
				this.setActualParaGuardarTipoPrecioForeignKey(consignacion,null);
				this.setActualParaGuardarFormatoForeignKey(consignacion,null);
				this.setActualParaGuardarClienteForeignKey(consignacion,null);
				this.setActualParaGuardarSubClienteForeignKey(consignacion,null);
				this.setActualParaGuardarConsignatarioForeignKey(consignacion,null);
				this.setActualParaGuardarVendedorForeignKey(consignacion,null);
				this.setActualParaGuardarEstadoPedidoForeignKey(consignacion,null);
				this.setActualParaGuardarTipoCambioForeignKey(consignacion,null);
				this.setActualParaGuardarZonaForeignKey(consignacion,null);
				this.setActualParaGuardarCentroCostoForeignKey(consignacion,null);
				this.setActualParaGuardarResponsableForeignKey(consignacion,null);
				this.setActualParaGuardarTransportistaForeignKey(consignacion,null);
				this.setActualParaGuardarTransporteForeignKey(consignacion,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(Consignacion consignacion,Consignacion consignacionAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalConsignacion(consignacion);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		consignacionAux.setId(consignacion.getId());
		consignacionAux.setVersionRow(consignacion.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessConsignacion();
		
			int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(ConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = consignacionValidator.getInvalidValues(this.consignacion);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			consignacionLogic.setDatosCliente(datosCliente);
			consignacionLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				consignacionAux=new  Consignacion();
				
				consignacionAux.setIsNew(true);
				consignacionAux.setIsChanged(true);
				
				consignacionAux.setConsignacionOriginal(this.consignacion);
				
				consignacionAux.setId(this.consignacion.getId());	
				consignacionAux.setVersionRow(this.consignacion.getVersionRow());	
				consignacionAux.setid_empresa(this.consignacion.getid_empresa());	
				consignacionAux.setid_sucursal(this.consignacion.getid_sucursal());	
				consignacionAux.setid_ejercicio(this.consignacion.getid_ejercicio());	
				consignacionAux.setid_periodo(this.consignacion.getid_periodo());	
				consignacionAux.setid_anio(this.consignacion.getid_anio());	
				consignacionAux.setid_mes(this.consignacion.getid_mes());	
				consignacionAux.setid_usuario(this.consignacion.getid_usuario());	
				consignacionAux.setnumero(this.consignacion.getnumero());	
				consignacionAux.setnumero_autorizacion(this.consignacion.getnumero_autorizacion());	
				consignacionAux.setfecha_emision(this.consignacion.getfecha_emision());	
				consignacionAux.setfecha_vencimiento(this.consignacion.getfecha_vencimiento());	
				consignacionAux.setid_moneda(this.consignacion.getid_moneda());	
				consignacionAux.setcotizacion(this.consignacion.getcotizacion());	
				consignacionAux.setid_empleado(this.consignacion.getid_empleado());	
				consignacionAux.setid_tipo_precio(this.consignacion.getid_tipo_precio());	
				
				if(this.consignacion.getid_formato()!=null && this.consignacion.getid_formato()>0L) {
					consignacionAux.setid_formato(this.consignacion.getid_formato());
				} else {
					consignacionAux.setid_formato(null);
				}	
				consignacionAux.setdireccion(this.consignacion.getdireccion());	
				consignacionAux.setid_cliente(this.consignacion.getid_cliente());	
				consignacionAux.settelefono(this.consignacion.gettelefono());	
				consignacionAux.setruc(this.consignacion.getruc());	
				
				if(this.consignacion.getid_sub_cliente()!=null && this.consignacion.getid_sub_cliente()>0L) {
					consignacionAux.setid_sub_cliente(this.consignacion.getid_sub_cliente());
				} else {
					consignacionAux.setid_sub_cliente(null);
				}	
				
				if(this.consignacion.getid_consignatario()!=null && this.consignacion.getid_consignatario()>0L) {
					consignacionAux.setid_consignatario(this.consignacion.getid_consignatario());
				} else {
					consignacionAux.setid_consignatario(null);
				}	
				
				if(this.consignacion.getid_vendedor()!=null && this.consignacion.getid_vendedor()>0L) {
					consignacionAux.setid_vendedor(this.consignacion.getid_vendedor());
				} else {
					consignacionAux.setid_vendedor(null);
				}	
				consignacionAux.setdescripcion(this.consignacion.getdescripcion());	
				consignacionAux.setid_estado_pedido(this.consignacion.getid_estado_pedido());	
				consignacionAux.setdescuento_porcentaje(this.consignacion.getdescuento_porcentaje());	
				consignacionAux.settotal_con_iva(this.consignacion.gettotal_con_iva());	
				consignacionAux.setsuman(this.consignacion.getsuman());	
				consignacionAux.setdescuento_valor(this.consignacion.getdescuento_valor());	
				consignacionAux.settotal_sin_iva(this.consignacion.gettotal_sin_iva());	
				consignacionAux.settotal_descuento(this.consignacion.gettotal_descuento());	
				consignacionAux.setflete(this.consignacion.getflete());	
				consignacionAux.settotal(this.consignacion.gettotal());	
				consignacionAux.setsubtotal(this.consignacion.getsubtotal());	
				consignacionAux.setotro(this.consignacion.getotro());	
				consignacionAux.setfinanciamiento(this.consignacion.getfinanciamiento());	
				consignacionAux.setiva(this.consignacion.getiva());	
				consignacionAux.setice(this.consignacion.getice());	
				consignacionAux.setmonto_retencion(this.consignacion.getmonto_retencion());	
				consignacionAux.setid_tipo_cambio(this.consignacion.getid_tipo_cambio());	
				consignacionAux.setnumero_fue(this.consignacion.getnumero_fue());	
				
				if(this.consignacion.getid_zona()!=null && this.consignacion.getid_zona()>0L) {
					consignacionAux.setid_zona(this.consignacion.getid_zona());
				} else {
					consignacionAux.setid_zona(null);
				}	
				consignacionAux.setfecha(this.consignacion.getfecha());	
				
				if(this.consignacion.getid_centro_costo()!=null && this.consignacion.getid_centro_costo()>0L) {
					consignacionAux.setid_centro_costo(this.consignacion.getid_centro_costo());
				} else {
					consignacionAux.setid_centro_costo(null);
				}	
				consignacionAux.setfecha_servidor(this.consignacion.getfecha_servidor());	
				
				if(this.consignacion.getid_responsable()!=null && this.consignacion.getid_responsable()>0L) {
					consignacionAux.setid_responsable(this.consignacion.getid_responsable());
				} else {
					consignacionAux.setid_responsable(null);
				}	
				consignacionAux.sethora_inicio(this.consignacion.gethora_inicio());	
				consignacionAux.sethora_fin(this.consignacion.gethora_fin());	
				
				if(this.consignacion.getid_transportista()!=null && this.consignacion.getid_transportista()>0L) {
					consignacionAux.setid_transportista(this.consignacion.getid_transportista());
				} else {
					consignacionAux.setid_transportista(null);
				}	
				
				if(this.consignacion.getid_transporte()!=null && this.consignacion.getid_transporte()>0L) {
					consignacionAux.setid_transporte(this.consignacion.getid_transporte());
				} else {
					consignacionAux.setid_transporte(null);
				}	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.consignacionSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.consignacionSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(consignacionAux,consignacionLogic.getConsignacions());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(consignacionAux,consignacions);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.consignacionSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.consignacionSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.saveConsignacions();//WithConnection
						//consignacionLogic.getSetVersionRowConsignacions();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.consignacion,consignacionAux);
					
					this.refrescarForeignKeysDescripcionesConsignacion();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.consignacionSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionLogic.getDetalleConsignacions().addAll(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionsEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacions.addAll(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionsEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.consignacionSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								consignacionLogic.saveConsignacionRelaciones(consignacionAux,this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionLogic.getDetalleConsignacions());//WithConnection
								//consignacionLogic.getSetVersionRowConsignacions();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.consignacion,consignacionAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionLogic.setDetalleConsignacions(new ArrayList<DetalleConsignacion>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacions= new ArrayList<DetalleConsignacion>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();}
							consignacionAux.setDetalleConsignacions(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionLogic.getDetalleConsignacions());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.consignacionSessionBean.getEstaModoGuardarRelaciones() 
									|| this.consignacionSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(consignacionAux,consignacionLogic.getConsignacions());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(consignacionAux,consignacions);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.consignacion,consignacionAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				consignacionAux=new  Consignacion();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.consignacionSessionBean.getEsGuardarRelacionado() 
					|| (this.consignacionSessionBean.getEsGuardarRelacionado() && this.consignacion.getId()>=0)) {
						
					consignacionAux.setIsNew(false);
				}
				
				consignacionAux.setIsDeleted(false);
			
				consignacionAux.setId(this.consignacion.getId());	
				consignacionAux.setVersionRow(this.consignacion.getVersionRow());	
				consignacionAux.setid_empresa(this.consignacion.getid_empresa());	
				consignacionAux.setid_sucursal(this.consignacion.getid_sucursal());	
				consignacionAux.setid_ejercicio(this.consignacion.getid_ejercicio());	
				consignacionAux.setid_periodo(this.consignacion.getid_periodo());	
				consignacionAux.setid_anio(this.consignacion.getid_anio());	
				consignacionAux.setid_mes(this.consignacion.getid_mes());	
				consignacionAux.setid_usuario(this.consignacion.getid_usuario());	
				consignacionAux.setnumero(this.consignacion.getnumero());	
				consignacionAux.setnumero_autorizacion(this.consignacion.getnumero_autorizacion());	
				consignacionAux.setfecha_emision(this.consignacion.getfecha_emision());	
				consignacionAux.setfecha_vencimiento(this.consignacion.getfecha_vencimiento());	
				consignacionAux.setid_moneda(this.consignacion.getid_moneda());	
				consignacionAux.setcotizacion(this.consignacion.getcotizacion());	
				consignacionAux.setid_empleado(this.consignacion.getid_empleado());	
				consignacionAux.setid_tipo_precio(this.consignacion.getid_tipo_precio());	
				
				if(this.consignacion.getid_formato()!=null && this.consignacion.getid_formato()>0L) {
					consignacionAux.setid_formato(this.consignacion.getid_formato());
				} else {
					consignacionAux.setid_formato(null);
				}	
				consignacionAux.setdireccion(this.consignacion.getdireccion());	
				consignacionAux.setid_cliente(this.consignacion.getid_cliente());	
				consignacionAux.settelefono(this.consignacion.gettelefono());	
				consignacionAux.setruc(this.consignacion.getruc());	
				
				if(this.consignacion.getid_sub_cliente()!=null && this.consignacion.getid_sub_cliente()>0L) {
					consignacionAux.setid_sub_cliente(this.consignacion.getid_sub_cliente());
				} else {
					consignacionAux.setid_sub_cliente(null);
				}	
				
				if(this.consignacion.getid_consignatario()!=null && this.consignacion.getid_consignatario()>0L) {
					consignacionAux.setid_consignatario(this.consignacion.getid_consignatario());
				} else {
					consignacionAux.setid_consignatario(null);
				}	
				
				if(this.consignacion.getid_vendedor()!=null && this.consignacion.getid_vendedor()>0L) {
					consignacionAux.setid_vendedor(this.consignacion.getid_vendedor());
				} else {
					consignacionAux.setid_vendedor(null);
				}	
				consignacionAux.setdescripcion(this.consignacion.getdescripcion());	
				consignacionAux.setid_estado_pedido(this.consignacion.getid_estado_pedido());	
				consignacionAux.setdescuento_porcentaje(this.consignacion.getdescuento_porcentaje());	
				consignacionAux.settotal_con_iva(this.consignacion.gettotal_con_iva());	
				consignacionAux.setsuman(this.consignacion.getsuman());	
				consignacionAux.setdescuento_valor(this.consignacion.getdescuento_valor());	
				consignacionAux.settotal_sin_iva(this.consignacion.gettotal_sin_iva());	
				consignacionAux.settotal_descuento(this.consignacion.gettotal_descuento());	
				consignacionAux.setflete(this.consignacion.getflete());	
				consignacionAux.settotal(this.consignacion.gettotal());	
				consignacionAux.setsubtotal(this.consignacion.getsubtotal());	
				consignacionAux.setotro(this.consignacion.getotro());	
				consignacionAux.setfinanciamiento(this.consignacion.getfinanciamiento());	
				consignacionAux.setiva(this.consignacion.getiva());	
				consignacionAux.setice(this.consignacion.getice());	
				consignacionAux.setmonto_retencion(this.consignacion.getmonto_retencion());	
				consignacionAux.setid_tipo_cambio(this.consignacion.getid_tipo_cambio());	
				consignacionAux.setnumero_fue(this.consignacion.getnumero_fue());	
				
				if(this.consignacion.getid_zona()!=null && this.consignacion.getid_zona()>0L) {
					consignacionAux.setid_zona(this.consignacion.getid_zona());
				} else {
					consignacionAux.setid_zona(null);
				}	
				consignacionAux.setfecha(this.consignacion.getfecha());	
				
				if(this.consignacion.getid_centro_costo()!=null && this.consignacion.getid_centro_costo()>0L) {
					consignacionAux.setid_centro_costo(this.consignacion.getid_centro_costo());
				} else {
					consignacionAux.setid_centro_costo(null);
				}	
				consignacionAux.setfecha_servidor(this.consignacion.getfecha_servidor());	
				
				if(this.consignacion.getid_responsable()!=null && this.consignacion.getid_responsable()>0L) {
					consignacionAux.setid_responsable(this.consignacion.getid_responsable());
				} else {
					consignacionAux.setid_responsable(null);
				}	
				consignacionAux.sethora_inicio(this.consignacion.gethora_inicio());	
				consignacionAux.sethora_fin(this.consignacion.gethora_fin());	
				
				if(this.consignacion.getid_transportista()!=null && this.consignacion.getid_transportista()>0L) {
					consignacionAux.setid_transportista(this.consignacion.getid_transportista());
				} else {
					consignacionAux.setid_transportista(null);
				}	
				
				if(this.consignacion.getid_transporte()!=null && this.consignacion.getid_transporte()>0L) {
					consignacionAux.setid_transporte(this.consignacion.getid_transporte());
				} else {
					consignacionAux.setid_transporte(null);
				}	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(consignacionAux,consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(consignacionAux,consignacions);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.consignacionSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.consignacionSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.saveConsignacions();//WithConnection
						//consignacionLogic.getSetVersionRowConsignacions();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.consignacion,consignacionAux);
					
					this.refrescarForeignKeysDescripcionesConsignacion();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.consignacionSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionLogic.getDetalleConsignacions().addAll(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionsEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacions.addAll(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionsEliminados);
						}
						//ARCHITECTURE
						
						if(!this.consignacionSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								consignacionLogic.saveConsignacionRelaciones(consignacionAux,this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionLogic.getDetalleConsignacions());//WithConnection
								//consignacionLogic.getSetVersionRowConsignacions();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.consignacion,consignacionAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionLogic.setDetalleConsignacions(new ArrayList<DetalleConsignacion>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacions= new ArrayList<DetalleConsignacion>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();}
							consignacionAux.setDetalleConsignacions(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionLogic.getDetalleConsignacions());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.consignacionSessionBean.getEstaModoGuardarRelaciones() 
									|| this.consignacionSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(consignacionAux,consignacionLogic.getConsignacions());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(consignacionAux,consignacions);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.consignacion,consignacionAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				consignacionAux=new  Consignacion();
				
				consignacionAux.setIsNew(false);
				consignacionAux.setIsChanged(false);
				
				consignacionAux.setIsDeleted(true);
				
				consignacionAux.setId(this.consignacion.getId());	
				consignacionAux.setVersionRow(this.consignacion.getVersionRow());	
				consignacionAux.setid_empresa(this.consignacion.getid_empresa());	
				consignacionAux.setid_sucursal(this.consignacion.getid_sucursal());	
				consignacionAux.setid_ejercicio(this.consignacion.getid_ejercicio());	
				consignacionAux.setid_periodo(this.consignacion.getid_periodo());	
				consignacionAux.setid_anio(this.consignacion.getid_anio());	
				consignacionAux.setid_mes(this.consignacion.getid_mes());	
				consignacionAux.setid_usuario(this.consignacion.getid_usuario());	
				consignacionAux.setnumero(this.consignacion.getnumero());	
				consignacionAux.setnumero_autorizacion(this.consignacion.getnumero_autorizacion());	
				consignacionAux.setfecha_emision(this.consignacion.getfecha_emision());	
				consignacionAux.setfecha_vencimiento(this.consignacion.getfecha_vencimiento());	
				consignacionAux.setid_moneda(this.consignacion.getid_moneda());	
				consignacionAux.setcotizacion(this.consignacion.getcotizacion());	
				consignacionAux.setid_empleado(this.consignacion.getid_empleado());	
				consignacionAux.setid_tipo_precio(this.consignacion.getid_tipo_precio());	
				
				if(this.consignacion.getid_formato()!=null && this.consignacion.getid_formato()>0L) {
					consignacionAux.setid_formato(this.consignacion.getid_formato());
				} else {
					consignacionAux.setid_formato(null);
				}	
				consignacionAux.setdireccion(this.consignacion.getdireccion());	
				consignacionAux.setid_cliente(this.consignacion.getid_cliente());	
				consignacionAux.settelefono(this.consignacion.gettelefono());	
				consignacionAux.setruc(this.consignacion.getruc());	
				
				if(this.consignacion.getid_sub_cliente()!=null && this.consignacion.getid_sub_cliente()>0L) {
					consignacionAux.setid_sub_cliente(this.consignacion.getid_sub_cliente());
				} else {
					consignacionAux.setid_sub_cliente(null);
				}	
				
				if(this.consignacion.getid_consignatario()!=null && this.consignacion.getid_consignatario()>0L) {
					consignacionAux.setid_consignatario(this.consignacion.getid_consignatario());
				} else {
					consignacionAux.setid_consignatario(null);
				}	
				
				if(this.consignacion.getid_vendedor()!=null && this.consignacion.getid_vendedor()>0L) {
					consignacionAux.setid_vendedor(this.consignacion.getid_vendedor());
				} else {
					consignacionAux.setid_vendedor(null);
				}	
				consignacionAux.setdescripcion(this.consignacion.getdescripcion());	
				consignacionAux.setid_estado_pedido(this.consignacion.getid_estado_pedido());	
				consignacionAux.setdescuento_porcentaje(this.consignacion.getdescuento_porcentaje());	
				consignacionAux.settotal_con_iva(this.consignacion.gettotal_con_iva());	
				consignacionAux.setsuman(this.consignacion.getsuman());	
				consignacionAux.setdescuento_valor(this.consignacion.getdescuento_valor());	
				consignacionAux.settotal_sin_iva(this.consignacion.gettotal_sin_iva());	
				consignacionAux.settotal_descuento(this.consignacion.gettotal_descuento());	
				consignacionAux.setflete(this.consignacion.getflete());	
				consignacionAux.settotal(this.consignacion.gettotal());	
				consignacionAux.setsubtotal(this.consignacion.getsubtotal());	
				consignacionAux.setotro(this.consignacion.getotro());	
				consignacionAux.setfinanciamiento(this.consignacion.getfinanciamiento());	
				consignacionAux.setiva(this.consignacion.getiva());	
				consignacionAux.setice(this.consignacion.getice());	
				consignacionAux.setmonto_retencion(this.consignacion.getmonto_retencion());	
				consignacionAux.setid_tipo_cambio(this.consignacion.getid_tipo_cambio());	
				consignacionAux.setnumero_fue(this.consignacion.getnumero_fue());	
				
				if(this.consignacion.getid_zona()!=null && this.consignacion.getid_zona()>0L) {
					consignacionAux.setid_zona(this.consignacion.getid_zona());
				} else {
					consignacionAux.setid_zona(null);
				}	
				consignacionAux.setfecha(this.consignacion.getfecha());	
				
				if(this.consignacion.getid_centro_costo()!=null && this.consignacion.getid_centro_costo()>0L) {
					consignacionAux.setid_centro_costo(this.consignacion.getid_centro_costo());
				} else {
					consignacionAux.setid_centro_costo(null);
				}	
				consignacionAux.setfecha_servidor(this.consignacion.getfecha_servidor());	
				
				if(this.consignacion.getid_responsable()!=null && this.consignacion.getid_responsable()>0L) {
					consignacionAux.setid_responsable(this.consignacion.getid_responsable());
				} else {
					consignacionAux.setid_responsable(null);
				}	
				consignacionAux.sethora_inicio(this.consignacion.gethora_inicio());	
				consignacionAux.sethora_fin(this.consignacion.gethora_fin());	
				
				if(this.consignacion.getid_transportista()!=null && this.consignacion.getid_transportista()>0L) {
					consignacionAux.setid_transportista(this.consignacion.getid_transportista());
				} else {
					consignacionAux.setid_transportista(null);
				}	
				
				if(this.consignacion.getid_transporte()!=null && this.consignacion.getid_transporte()>0L) {
					consignacionAux.setid_transporte(this.consignacion.getid_transporte());
				} else {
					consignacionAux.setid_transporte(null);
				}	
				
				if(this.consignacionSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.consignacionAux.getId()>=0) {	
						this.consignacionsEliminados.add(consignacionAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(consignacionAux,consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(consignacionAux,consignacions);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.consignacionSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.consignacionSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.saveConsignacions();//WithConnection
						//consignacionLogic.getSetVersionRowConsignacions();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.consignacionSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionLogic.getDetalleConsignacions().addAll(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionsEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacions.addAll(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionsEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.consignacionSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								consignacionLogic.saveConsignacionRelaciones(consignacionAux,this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionLogic.getDetalleConsignacions());//WithConnection
								//consignacionLogic.getSetVersionRowConsignacions();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionLogic.setDetalleConsignacions(new ArrayList<DetalleConsignacion>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacions= new ArrayList<DetalleConsignacion>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.quitarFilaTotales();}
							consignacionAux.setDetalleConsignacions(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionLogic.getDetalleConsignacions());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.consignacionSessionBean.getEstaModoGuardarRelaciones() 
								|| this.consignacionSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(consignacionAux,consignacionLogic.getConsignacions());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(consignacionAux,consignacions);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getConsignacions().addAll(this.consignacionsEliminados);
					
					consignacionLogic.saveConsignacions();//WithConnection
					//consignacionLogic.getSetVersionRowConsignacions();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesConsignacion();
				
				this.consignacionsEliminados= new ArrayList<Consignacion>();		
			}
			
			if(this.consignacionSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.consignacionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Consignacion GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Consignacion",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.consignacion=consignacionAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessConsignacion();
      	}
		
	}	
	
	public void actualizarRelaciones(Consignacion consignacionLocal) throws Exception {
		
		if(this.consignacionSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				consignacionLocal.setDetalleConsignacions(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionLogic.getDetalleConsignacions());
			
			} else {
			
				consignacionLocal.setDetalleConsignacions(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacions);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(Consignacion consignacionLocal) throws Exception {	
		if(this.consignacionSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				consignacionLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				consignacionLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				consignacionLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				consignacionLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				consignacionLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				consignacionLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UsuarioDetalleFormJInternalFrame.class)) {
				UsuarioBeanSwingJInternalFrame usuarioBeanSwingJInternalFrameLocal=(UsuarioBeanSwingJInternalFrame) ((UsuarioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				usuarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUsuario(usuarioBeanSwingJInternalFrameLocal.getusuario(),true);
				usuarioBeanSwingJInternalFrameLocal.actualizarLista(usuarioBeanSwingJInternalFrameLocal.usuario,this.usuariosForeignKey);

				usuarioBeanSwingJInternalFrameLocal.actualizarRelaciones(usuarioBeanSwingJInternalFrameLocal.usuario);

				consignacionLocal.setUsuario(usuarioBeanSwingJInternalFrameLocal.usuario);

				this.addItemDefectoCombosForeignKeyUsuario();
				this.cargarCombosFrameUsuariosForeignKey("Formulario");
				this.setActualUsuarioForeignKey(usuarioBeanSwingJInternalFrameLocal.usuario.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MonedaDetalleFormJInternalFrame.class)) {
				MonedaBeanSwingJInternalFrame monedaBeanSwingJInternalFrameLocal=(MonedaBeanSwingJInternalFrame) ((MonedaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				monedaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMoneda(monedaBeanSwingJInternalFrameLocal.getmoneda(),true);
				monedaBeanSwingJInternalFrameLocal.actualizarLista(monedaBeanSwingJInternalFrameLocal.moneda,this.monedasForeignKey);

				monedaBeanSwingJInternalFrameLocal.actualizarRelaciones(monedaBeanSwingJInternalFrameLocal.moneda);

				consignacionLocal.setMoneda(monedaBeanSwingJInternalFrameLocal.moneda);

				this.addItemDefectoCombosForeignKeyMoneda();
				this.cargarCombosFrameMonedasForeignKey("Formulario");
				this.setActualMonedaForeignKey(monedaBeanSwingJInternalFrameLocal.moneda.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpleadoDetalleFormJInternalFrame.class)) {
				EmpleadoBeanSwingJInternalFrame empleadoBeanSwingJInternalFrameLocal=(EmpleadoBeanSwingJInternalFrame) ((EmpleadoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empleadoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpleado(empleadoBeanSwingJInternalFrameLocal.getempleado(),true);
				empleadoBeanSwingJInternalFrameLocal.actualizarLista(empleadoBeanSwingJInternalFrameLocal.empleado,this.empleadosForeignKey);

				empleadoBeanSwingJInternalFrameLocal.actualizarRelaciones(empleadoBeanSwingJInternalFrameLocal.empleado);

				consignacionLocal.setEmpleado(empleadoBeanSwingJInternalFrameLocal.empleado);

				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey("Formulario");
				this.setActualEmpleadoForeignKey(empleadoBeanSwingJInternalFrameLocal.empleado.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoPrecioDetalleFormJInternalFrame.class)) {
				TipoPrecioBeanSwingJInternalFrame tipoprecioBeanSwingJInternalFrameLocal=(TipoPrecioBeanSwingJInternalFrame) ((TipoPrecioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoprecioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoPrecio(tipoprecioBeanSwingJInternalFrameLocal.gettipoprecio(),true);
				tipoprecioBeanSwingJInternalFrameLocal.actualizarLista(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio,this.tipopreciosForeignKey);

				tipoprecioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio);

				consignacionLocal.setTipoPrecio(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio);

				this.addItemDefectoCombosForeignKeyTipoPrecio();
				this.cargarCombosFrameTipoPreciosForeignKey("Formulario");
				this.setActualTipoPrecioForeignKey(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FormatoDetalleFormJInternalFrame.class)) {
				FormatoBeanSwingJInternalFrame formatoBeanSwingJInternalFrameLocal=(FormatoBeanSwingJInternalFrame) ((FormatoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				formatoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFormato(formatoBeanSwingJInternalFrameLocal.getformato(),true);
				formatoBeanSwingJInternalFrameLocal.actualizarLista(formatoBeanSwingJInternalFrameLocal.formato,this.formatosForeignKey);

				formatoBeanSwingJInternalFrameLocal.actualizarRelaciones(formatoBeanSwingJInternalFrameLocal.formato);

				consignacionLocal.setFormato(formatoBeanSwingJInternalFrameLocal.formato);

				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey("Formulario");
				this.setActualFormatoForeignKey(formatoBeanSwingJInternalFrameLocal.formato.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteBeanSwingJInternalFrameLocal.actualizarLista(clienteBeanSwingJInternalFrameLocal.cliente,this.clientesForeignKey);

				clienteBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteBeanSwingJInternalFrameLocal.cliente);

				consignacionLocal.setCliente(clienteBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey("Formulario");
				this.setActualClienteForeignKey(clienteBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SubClienteDetalleFormJInternalFrame.class)) {
				SubClienteBeanSwingJInternalFrame subclienteBeanSwingJInternalFrameLocal=(SubClienteBeanSwingJInternalFrame) ((SubClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				subclienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSubCliente(subclienteBeanSwingJInternalFrameLocal.getsubcliente(),true);
				subclienteBeanSwingJInternalFrameLocal.actualizarLista(subclienteBeanSwingJInternalFrameLocal.subcliente,this.subclientesForeignKey);

				subclienteBeanSwingJInternalFrameLocal.actualizarRelaciones(subclienteBeanSwingJInternalFrameLocal.subcliente);

				consignacionLocal.setSubCliente(subclienteBeanSwingJInternalFrameLocal.subcliente);

				this.addItemDefectoCombosForeignKeySubCliente();
				this.cargarCombosFrameSubClientesForeignKey("Formulario");
				this.setActualSubClienteForeignKey(subclienteBeanSwingJInternalFrameLocal.subcliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ConsignatarioDetalleFormJInternalFrame.class)) {
				ConsignatarioBeanSwingJInternalFrame consignatarioBeanSwingJInternalFrameLocal=(ConsignatarioBeanSwingJInternalFrame) ((ConsignatarioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				consignatarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoConsignatario(consignatarioBeanSwingJInternalFrameLocal.getconsignatario(),true);
				consignatarioBeanSwingJInternalFrameLocal.actualizarLista(consignatarioBeanSwingJInternalFrameLocal.consignatario,this.consignatariosForeignKey);

				consignatarioBeanSwingJInternalFrameLocal.actualizarRelaciones(consignatarioBeanSwingJInternalFrameLocal.consignatario);

				consignacionLocal.setConsignatario(consignatarioBeanSwingJInternalFrameLocal.consignatario);

				this.addItemDefectoCombosForeignKeyConsignatario();
				this.cargarCombosFrameConsignatariosForeignKey("Formulario");
				this.setActualConsignatarioForeignKey(consignatarioBeanSwingJInternalFrameLocal.consignatario.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(VendedorDetalleFormJInternalFrame.class)) {
				VendedorBeanSwingJInternalFrame vendedorBeanSwingJInternalFrameLocal=(VendedorBeanSwingJInternalFrame) ((VendedorDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				vendedorBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoVendedor(vendedorBeanSwingJInternalFrameLocal.getvendedor(),true);
				vendedorBeanSwingJInternalFrameLocal.actualizarLista(vendedorBeanSwingJInternalFrameLocal.vendedor,this.vendedorsForeignKey);

				vendedorBeanSwingJInternalFrameLocal.actualizarRelaciones(vendedorBeanSwingJInternalFrameLocal.vendedor);

				consignacionLocal.setVendedor(vendedorBeanSwingJInternalFrameLocal.vendedor);

				this.addItemDefectoCombosForeignKeyVendedor();
				this.cargarCombosFrameVendedorsForeignKey("Formulario");
				this.setActualVendedorForeignKey(vendedorBeanSwingJInternalFrameLocal.vendedor.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoPedidoDetalleFormJInternalFrame.class)) {
				EstadoPedidoBeanSwingJInternalFrame estadopedidoBeanSwingJInternalFrameLocal=(EstadoPedidoBeanSwingJInternalFrame) ((EstadoPedidoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadopedidoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoPedido(estadopedidoBeanSwingJInternalFrameLocal.getestadopedido(),true);
				estadopedidoBeanSwingJInternalFrameLocal.actualizarLista(estadopedidoBeanSwingJInternalFrameLocal.estadopedido,this.estadopedidosForeignKey);

				estadopedidoBeanSwingJInternalFrameLocal.actualizarRelaciones(estadopedidoBeanSwingJInternalFrameLocal.estadopedido);

				consignacionLocal.setEstadoPedido(estadopedidoBeanSwingJInternalFrameLocal.estadopedido);

				this.addItemDefectoCombosForeignKeyEstadoPedido();
				this.cargarCombosFrameEstadoPedidosForeignKey("Formulario");
				this.setActualEstadoPedidoForeignKey(estadopedidoBeanSwingJInternalFrameLocal.estadopedido.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoCambioDetalleFormJInternalFrame.class)) {
				TipoCambioBeanSwingJInternalFrame tipocambioBeanSwingJInternalFrameLocal=(TipoCambioBeanSwingJInternalFrame) ((TipoCambioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipocambioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoCambio(tipocambioBeanSwingJInternalFrameLocal.gettipocambio(),true);
				tipocambioBeanSwingJInternalFrameLocal.actualizarLista(tipocambioBeanSwingJInternalFrameLocal.tipocambio,this.tipocambiosForeignKey);

				tipocambioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				consignacionLocal.setTipoCambio(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey("Formulario");
				this.setActualTipoCambioForeignKey(tipocambioBeanSwingJInternalFrameLocal.tipocambio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ZonaDetalleFormJInternalFrame.class)) {
				ZonaBeanSwingJInternalFrame zonaBeanSwingJInternalFrameLocal=(ZonaBeanSwingJInternalFrame) ((ZonaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				zonaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoZona(zonaBeanSwingJInternalFrameLocal.getzona(),true);
				zonaBeanSwingJInternalFrameLocal.actualizarLista(zonaBeanSwingJInternalFrameLocal.zona,this.zonasForeignKey);

				zonaBeanSwingJInternalFrameLocal.actualizarRelaciones(zonaBeanSwingJInternalFrameLocal.zona);

				consignacionLocal.setZona(zonaBeanSwingJInternalFrameLocal.zona);

				this.addItemDefectoCombosForeignKeyZona();
				this.cargarCombosFrameZonasForeignKey("Formulario");
				this.setActualZonaForeignKey(zonaBeanSwingJInternalFrameLocal.zona.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CentroCostoDetalleFormJInternalFrame.class)) {
				CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrameLocal=(CentroCostoBeanSwingJInternalFrame) ((CentroCostoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				centrocostoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCentroCosto(centrocostoBeanSwingJInternalFrameLocal.getcentrocosto(),true);
				centrocostoBeanSwingJInternalFrameLocal.actualizarLista(centrocostoBeanSwingJInternalFrameLocal.centrocosto,this.centrocostosForeignKey);

				centrocostoBeanSwingJInternalFrameLocal.actualizarRelaciones(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				consignacionLocal.setCentroCosto(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey("Formulario");
				this.setActualCentroCostoForeignKey(centrocostoBeanSwingJInternalFrameLocal.centrocosto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ResponsableDetalleFormJInternalFrame.class)) {
				ResponsableBeanSwingJInternalFrame responsableBeanSwingJInternalFrameLocal=(ResponsableBeanSwingJInternalFrame) ((ResponsableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				responsableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoResponsable(responsableBeanSwingJInternalFrameLocal.getresponsable(),true);
				responsableBeanSwingJInternalFrameLocal.actualizarLista(responsableBeanSwingJInternalFrameLocal.responsable,this.responsablesForeignKey);

				responsableBeanSwingJInternalFrameLocal.actualizarRelaciones(responsableBeanSwingJInternalFrameLocal.responsable);

				consignacionLocal.setResponsable(responsableBeanSwingJInternalFrameLocal.responsable);

				this.addItemDefectoCombosForeignKeyResponsable();
				this.cargarCombosFrameResponsablesForeignKey("Formulario");
				this.setActualResponsableForeignKey(responsableBeanSwingJInternalFrameLocal.responsable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransportistaDetalleFormJInternalFrame.class)) {
				TransportistaBeanSwingJInternalFrame transportistaBeanSwingJInternalFrameLocal=(TransportistaBeanSwingJInternalFrame) ((TransportistaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transportistaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransportista(transportistaBeanSwingJInternalFrameLocal.gettransportista(),true);
				transportistaBeanSwingJInternalFrameLocal.actualizarLista(transportistaBeanSwingJInternalFrameLocal.transportista,this.transportistasForeignKey);

				transportistaBeanSwingJInternalFrameLocal.actualizarRelaciones(transportistaBeanSwingJInternalFrameLocal.transportista);

				consignacionLocal.setTransportista(transportistaBeanSwingJInternalFrameLocal.transportista);

				this.addItemDefectoCombosForeignKeyTransportista();
				this.cargarCombosFrameTransportistasForeignKey("Formulario");
				this.setActualTransportistaForeignKey(transportistaBeanSwingJInternalFrameLocal.transportista.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransporteDetalleFormJInternalFrame.class)) {
				TransporteBeanSwingJInternalFrame transporteBeanSwingJInternalFrameLocal=(TransporteBeanSwingJInternalFrame) ((TransporteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transporteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransporte(transporteBeanSwingJInternalFrameLocal.gettransporte(),true);
				transporteBeanSwingJInternalFrameLocal.actualizarLista(transporteBeanSwingJInternalFrameLocal.transporte,this.transportesForeignKey);

				transporteBeanSwingJInternalFrameLocal.actualizarRelaciones(transporteBeanSwingJInternalFrameLocal.transporte);

				consignacionLocal.setTransporte(transporteBeanSwingJInternalFrameLocal.transporte);

				this.addItemDefectoCombosForeignKeyTransporte();
				this.cargarCombosFrameTransportesForeignKey("Formulario");
				this.setActualTransporteForeignKey(transporteBeanSwingJInternalFrameLocal.transporte.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarConsignacionActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = consignacionValidator.getInvalidValues(this.consignacion);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(Consignacion consignacion,List<Consignacion> consignacions) throws Exception {
		try	{		
			ConsignacionConstantesFunciones.actualizarLista(consignacion,consignacions,this.consignacionSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(Consignacion consignacion,List<Consignacion> consignacions) throws Exception {
		try	{			
			ConsignacionConstantesFunciones.actualizarSelectedLista(consignacion,consignacions);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<Consignacion> consignacionsLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				consignacionsLocal=this.consignacionLogic.getConsignacions();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				consignacionsLocal=this.consignacions;
			}
			//ARCHITECTURE
		
			for(Consignacion consignacionLocal:consignacionsLocal) {
				if(this.permiteMantenimiento(consignacionLocal) && consignacionLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+ConsignacionConstantesFunciones.getConsignacionLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_empresaConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_sucursalConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_ejercicioConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_periodoConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_anioConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_mesConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDUSUARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_usuarioConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.NUMERO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelnumeroConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.NUMEROAUTORIZACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelnumero_autorizacionConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.FECHAEMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelfecha_emisionConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.FECHAVENCIMIENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelfecha_vencimientoConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDMONEDA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_monedaConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.COTIZACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelcotizacionConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDEMPLEADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_empleadoConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDTIPOPRECIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_tipo_precioConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDFORMATO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_formatoConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.DIRECCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabeldireccionConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_clienteConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.TELEFONO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabeltelefonoConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.RUC)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelrucConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDSUBCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_sub_clienteConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDCONSIGNATARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_consignatarioConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDVENDEDOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_vendedorConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabeldescripcionConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDESTADOPEDIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_estado_pedidoConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.DESCUENTOPORCENTAJE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabeldescuento_porcentajeConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.TOTALCONIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabeltotal_con_ivaConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.SUMAN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelsumanConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.DESCUENTOVALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabeldescuento_valorConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.TOTALSINIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabeltotal_sin_ivaConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.TOTALDESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabeltotal_descuentoConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.FLETE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelfleteConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.TOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabeltotalConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.SUBTOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelsubtotalConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.OTRO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelotroConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.FINANCIAMIENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelfinanciamientoConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelivaConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.ICE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabeliceConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.MONTORETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelmonto_retencionConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDTIPOCAMBIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_tipo_cambioConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.NUMEROFUE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelnumero_fueConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDZONA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_zonaConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.FECHA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelfechaConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDCENTROCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_centro_costoConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.FECHASERVIDOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelfecha_servidorConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDRESPONSABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_responsableConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.HORAINICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelhora_inicioConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.HORAFIN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelhora_finConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDTRANSPORTISTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_transportistaConsignacion,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ConsignacionConstantesFunciones.IDTRANSPORTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelid_transporteConsignacion,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_empresaConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_sucursalConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_ejercicioConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_periodoConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_anioConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_mesConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_usuarioConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelnumeroConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelnumero_autorizacionConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelfecha_emisionConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelfecha_vencimientoConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_monedaConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelcotizacionConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_empleadoConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_tipo_precioConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_formatoConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabeldireccionConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_clienteConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabeltelefonoConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelrucConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_sub_clienteConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_consignatarioConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_vendedorConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabeldescripcionConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_estado_pedidoConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabeldescuento_porcentajeConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabeltotal_con_ivaConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelsumanConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabeldescuento_valorConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabeltotal_sin_ivaConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabeltotal_descuentoConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelfleteConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabeltotalConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelsubtotalConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelotroConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelfinanciamientoConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelivaConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabeliceConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelmonto_retencionConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_tipo_cambioConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelnumero_fueConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_zonaConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelfechaConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_centro_costoConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelfecha_servidorConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_responsableConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelhora_inicioConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelhora_finConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_transportistaConsignacion,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormConsignacion.jLabelid_transporteConsignacion,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("DetalleConsignacion")) {
			if(this.consignacion==null) {
				this.consignacion= new Consignacion();
			}

			if(this.consignacionSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoConsignacion
				this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.getdetalleconsignacion().setConsignacion(this.consignacion);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoConsignacion--;	
		
		
		this.consignacionAux=new Consignacion();
		
		this.consignacionAux.setId(this.iIdNuevoConsignacion);
		this.consignacionAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.consignacionLogic.getConsignacions().add(this.consignacionAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.consignacions.add(this.consignacionAux);
		}
		//ARCHITECTURE
		
		this.consignacion=this.consignacionAux;
		
		if(ConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioConsignacion(this.consignacion);
			this.setVariablesObjetoActualToFormularioForeignKeyConsignacion(this.consignacion);
		}
				
		//this.setDefaultControlesConsignacion();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyConsignacion();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyConsignacion();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyConsignacion();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualConsignacion(this.consignacionBean,this.consignacion,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(ConsignacionConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.consignacionSessionBean.getConGuardarRelaciones()) {
			classes=ConsignacionConstantesFunciones.getClassesRelationshipsOfConsignacion(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.consignacionReturnGeneral=consignacionLogic.procesarEventosConsignacionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.consignacionLogic.getConsignacions(),this.consignacion,this.consignacionParameterGeneral,this.isEsNuevoConsignacion,classes);//this.consignacionLogic.getConsignacion()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanConsignacion(this.consignacionReturnGeneral,this.consignacionBean,false);
		
		if(this.consignacionReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyConsignacion(this.consignacionReturnGeneral.getConsignacion());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioConsignacion(this.consignacionReturnGeneral.getConsignacion());
		}
		
		if(this.consignacionReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioConsignacion(this.consignacionReturnGeneral.getConsignacion(),classes);//this.consignacionBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyConsignacion();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyConsignacion();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ConsignacionBeanSwingJInternalFrameAdditional.RecargarFormConsignacion(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingConsignacion(false);
						
			if(consignacionSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionSessionBean.getEsGuardarRelacionado() && DetalleConsignacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetalleConsignacionActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(ConsignacionJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualConsignacion();
			}
			
			this.actualizarVisualTableDatosConsignacion();
			
			this.jTableDatosConsignacion.setRowSelectionInterval(this.getIndiceNuevoConsignacion(), this.getIndiceNuevoConsignacion());
			
			this.seleccionarFilaTablaConsignacionActual();
						
			this.actualizarEstadoCeldasBotonesConsignacion("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesConsignacion(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormConsignacion.jTextFieldnumeroConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarnumeroConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldnumero_autorizacionConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarnumero_autorizacionConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jDateChooserfecha_emisionConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarfecha_emisionConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jDateChooserfecha_vencimientoConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarfecha_vencimientoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldcotizacionConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarcotizacionConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextAreadireccionConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activardireccionConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldtelefonoConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activartelefonoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldrucConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarrucConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextAreadescripcionConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activardescripcionConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFielddescuento_porcentajeConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activardescuento_porcentajeConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_con_ivaConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activartotal_con_ivaConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldsumanConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarsumanConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFielddescuento_valorConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activardescuento_valorConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_sin_ivaConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activartotal_sin_ivaConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_descuentoConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activartotal_descuentoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldfleteConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarfleteConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldtotalConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activartotalConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldsubtotalConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarsubtotalConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldotroConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarotroConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldfinanciamientoConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarfinanciamientoConsignacion);//
		this.jInternalFrameDetalleFormConsignacion.jTextFieldivaConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarivaConsignacion);//
		this.jInternalFrameDetalleFormConsignacion.jTextFieldiceConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activariceConsignacion);//
		this.jInternalFrameDetalleFormConsignacion.jTextFieldmonto_retencionConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarmonto_retencionConsignacion);//
		this.jInternalFrameDetalleFormConsignacion.jTextFieldnumero_fueConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarnumero_fueConsignacion);//
		this.jInternalFrameDetalleFormConsignacion.jDateChooserfechaConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarfechaConsignacion);//
		this.jInternalFrameDetalleFormConsignacion.jDateChooserfecha_servidorConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarfecha_servidorConsignacion);//
		this.jInternalFrameDetalleFormConsignacion.jSpinnerhora_inicioConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarhora_inicioConsignacion);//
		this.jInternalFrameDetalleFormConsignacion.jSpinnerhora_finConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarhora_finConsignacion);	
		//
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empresaConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_empresaConsignacion);//
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sucursalConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_sucursalConsignacion);//
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_ejercicioConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_ejercicioConsignacion);//
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_periodoConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_periodoConsignacion);//
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_anioConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_anioConsignacion);//
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_mesConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_mesConsignacion);//
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_usuarioConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_usuarioConsignacion);//
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_monedaConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_monedaConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empleadoConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_empleadoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_precioConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_tipo_precioConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_formatoConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_formatoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_clienteConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_clienteConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sub_clienteConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_sub_clienteConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_consignatarioConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_consignatarioConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_vendedorConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_vendedorConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_estado_pedidoConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_estado_pedidoConsignacion);//
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_cambioConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_tipo_cambioConsignacion);//
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_zonaConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_zonaConsignacion);//
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_centro_costoConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_centro_costoConsignacion);//
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_responsableConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_responsableConsignacion);//
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transportistaConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_transportistaConsignacion);//
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transporteConsignacion.setEnabled(isHabilitar && this.consignacionConstantesFunciones.activarid_transporteConsignacion);
	};
	
	public void setDefaultControlesConsignacion() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoConsignacion(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.consignacionSessionBean.setConGuardarRelaciones(true);			
			this.consignacionSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormConsignacion.jTabbedPaneRelacionesConsignacion.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.consignacionSessionBean.setConGuardarRelaciones(false);			
			this.consignacionSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormConsignacion.jTabbedPaneRelacionesConsignacion.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoConsignacion() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Consignacion consignacionAux:this.consignacionLogic.getConsignacions()) {
				if(consignacionAux.getId().equals(this.iIdNuevoConsignacion)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Consignacion consignacionAux:this.consignacions) {
				if(consignacionAux.getId().equals(this.iIdNuevoConsignacion)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualConsignacion(Consignacion consignacion,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Consignacion consignacionAux:this.consignacionLogic.getConsignacions()) {
				if(consignacionAux.getId().equals(consignacion.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Consignacion consignacionAux:this.consignacions) {
				if(consignacionAux.getId().equals(consignacion.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalConsignacion(Consignacion consignacionOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Consignacion consignacionAux:this.consignacionLogic.getConsignacions()) {
				if(consignacionAux.getConsignacionOriginal().getId().equals(consignacionOriginal.getId())) {
					existe=true;
					consignacionOriginal.setId(consignacionAux.getId());
					consignacionOriginal.setVersionRow(consignacionAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Consignacion consignacionAux:this.consignacions) {
				if(consignacionAux.getConsignacionOriginal().getId().equals(consignacionOriginal.getId())) {
					existe=true;
					consignacionOriginal.setId(consignacionAux.getId());
					consignacionOriginal.setVersionRow(consignacionAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosConsignacion(Boolean esParaCancelar) throws Exception {
		consignacionsAux=new ArrayList<Consignacion>();
		consignacionAux=new Consignacion();
		
		if(!this.consignacionSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(Consignacion consignacionAux:this.consignacionLogic.getConsignacions()) {
					if(consignacionAux.getId()<0) {
						consignacionsAux.add(consignacionAux);
					}		
				}
				this.iIdNuevoConsignacion=0L;
				this.consignacionLogic.getConsignacions().removeAll(consignacionsAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Consignacion consignacionAux:this.consignacions) {
					if(consignacionAux.getId()<0) {
						consignacionsAux.add(consignacionAux);
					}		
				}
				this.iIdNuevoConsignacion=0L;
				this.consignacions.removeAll(consignacionsAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoConsignacion 
					&& this.consignacionLogic.getConsignacions().size()>0
					) {
					consignacionAux=this.consignacionLogic.getConsignacions().get(this.consignacionLogic.getConsignacions().size() - 1);
				
					if(consignacionAux.getId()<0) {
						this.consignacionLogic.getConsignacions().remove(consignacionAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoConsignacion && this.consignacions.size()>0) {
					consignacionAux=this.consignacions.get(this.consignacions.size() - 1);
				
					if(consignacionAux.getId()<0) {
						this.consignacions.remove(consignacionAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoConsignacion(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(consignacion.getId()<0) {
				this.consignacionLogic.getConsignacions().remove(this.consignacion);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(consignacion.getId()<0) {
				this.consignacions.remove(this.consignacion);
			}
		}			
	}
	
	public void setEstadosInicialesConsignacion(List<Consignacion> consignacionsAux) throws Exception {
		ConsignacionConstantesFunciones.setEstadosInicialesConsignacion(consignacionsAux);
	}
	
	public void setEstadosInicialesConsignacion(Consignacion consignacionAux) throws Exception {
		ConsignacionConstantesFunciones.setEstadosInicialesConsignacion(consignacionAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarConsignacionActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesConsignacion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarConsignacionActual()) {
				if(!this.isEsNuevoConsignacion) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesConsignacion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoConsignacion=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarConsignacionActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Consignacion ?", "MANTENIMIENTO DE Consignacion", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesConsignacion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(Consignacion consignacion) throws Exception {
		ConsignacionConstantesFunciones.seleccionarAsignar(this.consignacion,consignacion);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarConsignacion=this.isPermisoActualizarOriginalConsignacion;
			
			
			this.seleccionarAsignar(consignacion);
			
			

			idEmpleadoActual=consignacion.getid_empleado();
			this.seleccionarEmpleadoActual();

			idClienteActual=consignacion.getid_cliente();
			this.seleccionarClienteActual();

			idVendedorActual=consignacion.getid_vendedor();
			this.seleccionarVendedorActual();

			idTipoCambioActual=consignacion.getid_tipo_cambio();
			this.seleccionarTipoCambioActual();

			idCentroCostoActual=consignacion.getid_centro_costo();
			this.seleccionarCentroCostoActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ConsignacionConstantesFunciones.quitarEspaciosConsignacion(this.consignacion,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesConsignacion("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.consignacionSessionBean.setsFuncionBusquedaRapida(this.consignacionSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarEmpleadoActual() throws Exception {
		try	{
			Empleado empleadoAux=new Empleado();

			if(this.idEmpleadoActual != null && this.idEmpleadoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(this.idEmpleadoActual);
					empleadoAux= empleadoLogic.getEmpleado();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				empleadosForeignKey=new ArrayList<Empleado>();
				empleadosForeignKey.add(empleadoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarClienteActual() throws Exception {
		try	{
			Cliente clienteAux=new Cliente();

			if(this.idClienteActual != null && this.idClienteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(this.idClienteActual);
					clienteAux= clienteLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientesForeignKey=new ArrayList<Cliente>();
				clientesForeignKey.add(clienteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarVendedorActual() throws Exception {
		try	{
			Vendedor vendedorAux=new Vendedor();

			if(this.idVendedorActual != null && this.idVendedorActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					vendedorLogic.getEntityWithConnection(this.idVendedorActual);
					vendedorAux= vendedorLogic.getVendedor();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				vendedorsForeignKey=new ArrayList<Vendedor>();
				vendedorsForeignKey.add(vendedorAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarTipoCambioActual() throws Exception {
		try	{
			TipoCambio tipocambioAux=new TipoCambio();

			if(this.idTipoCambioActual != null && this.idTipoCambioActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(this.idTipoCambioActual);
					tipocambioAux= tipocambioLogic.getTipoCambio();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				tipocambiosForeignKey=new ArrayList<TipoCambio>();
				tipocambiosForeignKey.add(tipocambioAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCentroCostoActual() throws Exception {
		try	{
			CentroCosto centrocostoAux=new CentroCosto();

			if(this.idCentroCostoActual != null && this.idCentroCostoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(this.idCentroCostoActual);
					centrocostoAux= centrocostoLogic.getCentroCosto();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				centrocostosForeignKey=new ArrayList<CentroCosto>();
				centrocostosForeignKey.add(centrocostoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoConsignacion) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosConsignacion(esParaCancelar);				
				this.cancelarNuevoConsignacion(esParaCancelar);								
			}
			
			this.consignacion=new Consignacion();
			
			this.inicializarConsignacion();
			
			this.actualizarEstadoCeldasBotonesConsignacion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarConsignacion() throws Exception {
		try {
			ConsignacionConstantesFunciones.inicializarConsignacion(this.consignacion);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.consignacionLogic.getConsignacions().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteConsignacions(String sAccionBusqueda,List<Consignacion> consignacionsParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="Consignacion"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="ConsignacionMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("ConsignacionMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="Consignacion"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Consignacions");		
		parameters.put("busquedapor", ConsignacionConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(DetalleConsignacion.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					ConsignacionLogic consignacionLogicAuxiliar=new ConsignacionLogic();
					consignacionLogicAuxiliar.setDatosCliente(consignacionLogic.getDatosCliente());				
					consignacionLogicAuxiliar.setConsignacions(consignacionsParaReportes);
					
					consignacionLogicAuxiliar.cargarRelacionesLoteForeignKeyConsignacionWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					consignacionsParaReportes=consignacionLogicAuxiliar.getConsignacions();
					
					//consignacionLogic.getNewConnexionToDeep();
					
					//for (Consignacion consignacion:consignacionsParaReportes) {
					//	consignacionLogic.deepLoad(consignacion, false, DeepLoadType.INCLUDE, classes);
					//}						
					//consignacionLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//consignacionLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileDetalleConsignacion = AuxiliarReportes.class.getResourceAsStream("DetalleConsignacionDetalleRelacionesDesign.jasper");
			parameters.put("subreport_detalleconsignacion", reportFileDetalleConsignacion);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceConsignacion=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			ConsignacionConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			ConsignacionConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceConsignacion=new JRBeanArrayDataSource(ConsignacionJInternalFrame.TraerConsignacionBeans(consignacionsParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceConsignacion);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+ConsignacionConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+ConsignacionConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(ConsignacionBean.TraerConsignacionBeans(consignacionsParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteConsignacions(sAccionBusqueda,sTipoArchivoReporte,consignacionsParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalConsignacions(sAccionBusqueda,sTipoArchivoReporte,consignacionsParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoConsignacionActionPerformed(null);
					//this.generarExcelReporteConsignacions(sAccionBusqueda,sTipoArchivoReporte,consignacionsParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalConsignacions(sAccionBusqueda,sTipoArchivoReporte,consignacionsParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesConsignacions(sAccionBusqueda,sTipoArchivoReporte,consignacionsParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesConsignacions(sAccionBusqueda,sTipoArchivoReporte,consignacionsParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteConsignacions(String sAccionBusqueda,String sTipoArchivoReporte,List<Consignacion> consignacionsParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"consignacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Consignacions");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderConsignacion("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(Consignacion consignacion : consignacionsParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			ConsignacionConstantesFunciones.generarExcelReporteDataConsignacion("NORMAL",row,workbook,consignacion,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.consignacionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Consignacion",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderConsignacion(String sTipo,Row row,Workbook workbook) {
		
		ConsignacionConstantesFunciones.generarExcelReporteHeaderConsignacion(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalConsignacions(String sAccionBusqueda,String sTipoArchivoReporte,List<Consignacion> consignacionsParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"consignacion_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Consignacions");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(Consignacion consignacion : consignacionsParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(ConsignacionConstantesFunciones.getConsignacionDescripcion(consignacion));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDUSUARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDUSUARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getusuario_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_NUMERO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_NUMERO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getnumero());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_NUMEROAUTORIZACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_NUMEROAUTORIZACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getnumero_autorizacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_FECHAEMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_FECHAEMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getfecha_emision());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_FECHAVENCIMIENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_FECHAVENCIMIENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getfecha_vencimiento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDMONEDA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDMONEDA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getmoneda_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_COTIZACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_COTIZACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getcotizacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDEMPLEADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDEMPLEADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getempleado_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDTIPOPRECIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDTIPOPRECIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.gettipoprecio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDFORMATO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDFORMATO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getformato_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_DIRECCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_DIRECCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getdireccion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_TELEFONO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_TELEFONO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.gettelefono());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_RUC))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_RUC);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getruc());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDSUBCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDSUBCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getsubcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDCONSIGNATARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDCONSIGNATARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getconsignatario_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDVENDEDOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDVENDEDOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getvendedor_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDESTADOPEDIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDESTADOPEDIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getestadopedido_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getdescuento_porcentaje());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_TOTALCONIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_TOTALCONIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.gettotal_con_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_SUMAN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_SUMAN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getsuman());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getdescuento_valor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_TOTALSINIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_TOTALSINIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.gettotal_sin_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_TOTALDESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_TOTALDESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.gettotal_descuento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_FLETE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_FLETE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getflete());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_TOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_TOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.gettotal());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_SUBTOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_SUBTOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getsubtotal());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_OTRO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_OTRO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getotro());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_FINANCIAMIENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_FINANCIAMIENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getfinanciamiento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getiva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_ICE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_ICE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getice());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_MONTORETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_MONTORETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getmonto_retencion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDTIPOCAMBIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDTIPOCAMBIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.gettipocambio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_NUMEROFUE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_NUMEROFUE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getnumero_fue());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDZONA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDZONA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getzona_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_FECHA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_FECHA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getfecha());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDCENTROCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDCENTROCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getcentrocosto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_FECHASERVIDOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_FECHASERVIDOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getfecha_servidor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDRESPONSABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDRESPONSABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.getresponsable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_HORAINICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_HORAINICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.gethora_inicio());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_HORAFIN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_HORAFIN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.gethora_fin());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDTRANSPORTISTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDTRANSPORTISTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.gettransportista_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ConsignacionConstantesFunciones.LABEL_IDTRANSPORTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDTRANSPORTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(consignacion.gettransporte_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.consignacionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Consignacion",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesConsignacions(String sAccionBusqueda,String sTipoArchivoReporte,List<Consignacion> consignacionsParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<Consignacion> consignacionsRespaldo=null;
		
		classes=ConsignacionConstantesFunciones.getClassesRelationshipsOfConsignacion(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.consignacionLogic.setDatosCliente(this.datosCliente);
		this.consignacionLogic.setDatosDeep(this.datosDeep);
		this.consignacionLogic.setIsConDeep(true);
		
		consignacionsRespaldo=this.consignacionLogic.getConsignacions();
		
		this.consignacionLogic.setConsignacions(consignacionsParaReportes);	
		this.consignacionLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		consignacionsParaReportes=this.consignacionLogic.getConsignacions();
		this.consignacionLogic.setConsignacions(consignacionsRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"consignacion_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("Consignacions");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderConsignacion("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(Consignacion consignacion : consignacionsParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderConsignacion("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			ConsignacionConstantesFunciones.generarExcelReporteDataConsignacion("NORMAL",row,workbook,consignacion,cellStyleDataAux);
		
			
			


				//DetalleConsignacion
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(DetalleConsignacionConstantesFunciones.SCLASSWEBTITULO))) {

				if(consignacion.getDetalleConsignacions()!=null && consignacion.getDetalleConsignacions().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(DetalleConsignacionConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					DetalleConsignacionConstantesFunciones.generarExcelReporteHeaderDetalleConsignacion("RELACIONADO",row,workbook);
				}

				if(consignacion.getDetalleConsignacions()!=null) {
					i2=0;
					for(DetalleConsignacion detalleconsignacion : consignacion.getDetalleConsignacions()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						DetalleConsignacionConstantesFunciones.generarExcelReporteDataDetalleConsignacion("RELACIONADO",row,workbook,detalleconsignacion,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(ConsignacionConstantesFunciones.getConsignacionDescripcion(consignacion));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.consignacionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Consignacion",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoConsignacion.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoConsignacion.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoConsignacion.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoConsignacion.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessConsignacion() throws Exception {		
		this.startProcessConsignacion(true);
	}
	
	public void startProcessConsignacion(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasConsignacion ,this.jPanelParametrosReportesConsignacion, this.jScrollPanelDatosConsignacion,this.jPanelPaginacionConsignacion, this.jScrollPanelDatosEdicionConsignacion, this.jPanelAccionesConsignacion,this.jPanelAccionesFormularioConsignacion,this.jmenuBarConsignacion,this.jmenuBarDetalleConsignacion,this.jTtoolBarConsignacion,this.jTtoolBarDetalleConsignacion);		
		
		final JTabbedPane jTabbedPaneBusquedasConsignacion=this.jTabbedPaneBusquedasConsignacion; 
		
		final JPanel jPanelParametrosReportesConsignacion=this.jPanelParametrosReportesConsignacion;
		//final JScrollPane jScrollPanelDatosConsignacion=this.jScrollPanelDatosConsignacion;
		final JTable jTableDatosConsignacion=this.jTableDatosConsignacion;		
		final JPanel jPanelPaginacionConsignacion=this.jPanelPaginacionConsignacion;
		//final JScrollPane jScrollPanelDatosEdicionConsignacion=this.jScrollPanelDatosEdicionConsignacion;
		final JPanel jPanelAccionesConsignacion=this.jPanelAccionesConsignacion;
		
		JPanel jPanelCamposAuxiliarConsignacion=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarConsignacion=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) {
			jPanelCamposAuxiliarConsignacion=this.jInternalFrameDetalleFormConsignacion.jPanelCamposConsignacion;
			jPanelAccionesFormularioAuxiliarConsignacion=this.jInternalFrameDetalleFormConsignacion.jPanelAccionesFormularioConsignacion;
		}
		
		final JPanel jPanelCamposConsignacion=jPanelCamposAuxiliarConsignacion;
		final JPanel jPanelAccionesFormularioConsignacion=jPanelAccionesFormularioAuxiliarConsignacion;
		
		
		final JMenuBar jmenuBarConsignacion=this.jmenuBarConsignacion;
		final JToolBar jTtoolBarConsignacion=this.jTtoolBarConsignacion;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarConsignacion=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarConsignacion=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) {
			jmenuBarDetalleAuxiliarConsignacion=this.jInternalFrameDetalleFormConsignacion.jmenuBarDetalleConsignacion;
			jTtoolBarDetalleAuxiliarConsignacion=this.jInternalFrameDetalleFormConsignacion.jTtoolBarDetalleConsignacion;
		}
		
		final JMenuBar jmenuBarDetalleConsignacion=jmenuBarDetalleAuxiliarConsignacion;
		final JToolBar jTtoolBarDetalleConsignacion=jTtoolBarDetalleAuxiliarConsignacion;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasConsignacion;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesConsignacion;
			processRunnable.jTableDatos=jTableDatosConsignacion;
			processRunnable.jPanelCampos=jPanelCamposConsignacion;
			processRunnable.jPanelPaginacion=jPanelPaginacionConsignacion;
			processRunnable.jPanelAcciones=jPanelAccionesConsignacion;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioConsignacion;
			
			
			processRunnable.jmenuBar=jmenuBarConsignacion;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleConsignacion;
			processRunnable.jTtoolBar=jTtoolBarConsignacion;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleConsignacion;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasConsignacion ,jPanelParametrosReportesConsignacion,jTableDatosConsignacion, /*jScrollPanelDatosConsignacion,*/jPanelCamposConsignacion,jPanelPaginacionConsignacion, /*jScrollPanelDatosEdicionConsignacion,*/ jPanelAccionesConsignacion,jPanelAccionesFormularioConsignacion,jmenuBarConsignacion,jmenuBarDetalleConsignacion,jTtoolBarConsignacion,jTtoolBarDetalleConsignacion);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasConsignacion ,jPanelParametrosReportesConsignacion, jScrollPanelDatosConsignacion,jPanelPaginacionConsignacion, jScrollPanelDatosEdicionConsignacion, jPanelAccionesConsignacion,jPanelAccionesFormularioConsignacion,jmenuBarConsignacion,jmenuBarDetalleConsignacion,jTtoolBarConsignacion,jTtoolBarDetalleConsignacion);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessConsignacion() {// throws Exception 
		this.finishProcessConsignacion(true);
	}
	
	public void finishProcessConsignacion(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasConsignacion ,this.jPanelParametrosReportesConsignacion, this.jScrollPanelDatosConsignacion,this.jPanelPaginacionConsignacion, this.jScrollPanelDatosEdicionConsignacion, this.jPanelAccionesConsignacion,this.jPanelAccionesFormularioConsignacion,this.jmenuBarConsignacion,this.jmenuBarDetalleConsignacion,this.jTtoolBarConsignacion,this.jTtoolBarDetalleConsignacion);		
		
		final JTabbedPane jTabbedPaneBusquedasConsignacion=this.jTabbedPaneBusquedasConsignacion; 
		
		final JPanel jPanelParametrosReportesConsignacion=this.jPanelParametrosReportesConsignacion;
		//final JScrollPane jScrollPanelDatosConsignacion=this.jScrollPanelDatosConsignacion;
		final JTable jTableDatosConsignacion=this.jTableDatosConsignacion;		
		final JPanel jPanelPaginacionConsignacion=this.jPanelPaginacionConsignacion;
		//final JScrollPane jScrollPanelDatosEdicionConsignacion=this.jScrollPanelDatosEdicionConsignacion;
		final JPanel jPanelAccionesConsignacion=this.jPanelAccionesConsignacion;
		
		JPanel jPanelCamposAuxiliarConsignacion=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarConsignacion=new JPanel();
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) {
			jPanelCamposAuxiliarConsignacion=this.jInternalFrameDetalleFormConsignacion.jPanelCamposConsignacion;
			jPanelAccionesFormularioAuxiliarConsignacion=this.jInternalFrameDetalleFormConsignacion.jPanelAccionesFormularioConsignacion;
		}
		
		final JPanel jPanelCamposConsignacion=jPanelCamposAuxiliarConsignacion;
		final JPanel jPanelAccionesFormularioConsignacion=jPanelAccionesFormularioAuxiliarConsignacion;
		
		
		final JMenuBar jmenuBarConsignacion=this.jmenuBarConsignacion;		
		final JToolBar jTtoolBarConsignacion=this.jTtoolBarConsignacion;
				
		JMenuBar jmenuBarDetalleAuxiliarConsignacion=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarConsignacion=new JToolBar();
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) {
			jmenuBarDetalleAuxiliarConsignacion=this.jInternalFrameDetalleFormConsignacion.jmenuBarDetalleConsignacion;
			jTtoolBarDetalleAuxiliarConsignacion=this.jInternalFrameDetalleFormConsignacion.jTtoolBarDetalleConsignacion;		
		}
		
		final JMenuBar jmenuBarDetalleConsignacion=jmenuBarDetalleAuxiliarConsignacion;
		final JToolBar jTtoolBarDetalleConsignacion=jTtoolBarDetalleAuxiliarConsignacion;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasConsignacion;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesConsignacion;
			processRunnable.jTableDatos=jTableDatosConsignacion;
			processRunnable.jPanelCampos=jPanelCamposConsignacion;
			processRunnable.jPanelPaginacion=jPanelPaginacionConsignacion;
			processRunnable.jPanelAcciones=jPanelAccionesConsignacion;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioConsignacion;
			
			
			processRunnable.jmenuBar=jmenuBarConsignacion;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleConsignacion;
			processRunnable.jTtoolBar=jTtoolBarConsignacion;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleConsignacion;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasConsignacion ,jPanelParametrosReportesConsignacion, jTableDatosConsignacion,/*jScrollPanelDatosConsignacion,*/jPanelCamposConsignacion,jPanelPaginacionConsignacion, /*jScrollPanelDatosEdicionConsignacion,*/ jPanelAccionesConsignacion,jPanelAccionesFormularioConsignacion,jmenuBarConsignacion,jmenuBarDetalleConsignacion,jTtoolBarConsignacion,jTtoolBarDetalleConsignacion));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesConsignacion(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarConsignacion(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuConsignacion(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarConsignacion(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarConsignacion,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleConsignacion,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuConsignacion(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarConsignacion,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleConsignacion,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.consignacionConstantesFunciones.getsFinalQueryConsignacion();
		String  finalQueryPaginacionTodos=this.consignacionConstantesFunciones.getsFinalQueryConsignacion();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=ConsignacionConstantesFunciones.getArrayColumnasGlobalesNoConsignacion(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=ConsignacionConstantesFunciones.getArrayColumnasGlobalesConsignacion(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,ConsignacionConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.consignacionsEliminados= new ArrayList<Consignacion>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessConsignacion();
		
				///*ConsignacionSessionBean*/this.consignacionSessionBean=new ConsignacionSessionBean();
			
			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=ConsignacionConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=ConsignacionConstantesFunciones.getClassesForeignKeysOfConsignacion(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/consignacion."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			consignacionsAux= new ArrayList<Consignacion>();
			
				
			consignacionLogic.setDatosCliente(this.datosCliente);
			consignacionLogic.setDatosDeep(this.datosDeep);
			consignacionLogic.setIsConDeep(true);
			
			
			consignacionLogic.getConsignacionDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					consignacionLogic.getTodosConsignacions(finalQueryGlobal,pagination);
					
					//consignacionLogic.getTodosConsignacionsWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(consignacionLogic.getConsignacions()==null|| consignacionLogic.getConsignacions().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							consignacionsAux= new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacionLogic.getConsignacions());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionsAux= new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacions);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							consignacionLogic.getTodosConsignacions(finalQueryGlobal+"",this.pagination);												
							
							//consignacionLogic.getTodosConsignacionsWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteConsignacions("Todos",consignacionLogic.getConsignacions() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							consignacionLogic.setConsignacions(new ArrayList<Consignacion>());					
							consignacionLogic.getConsignacions().addAll(consignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacions=new ArrayList<Consignacion>();
							consignacions.addAll(consignacionsAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idConsignacion=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idConsignacion=this.idActual;
				
				} else if(this.idConsignacionActual!=null && this.idConsignacionActual!=0L) {
					idConsignacion=idConsignacionActual;
				}
				
					
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndicePorId(idConsignacion);
				
				this.consignacions=new ArrayList<Consignacion>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					consignacionLogic.getEntity(idConsignacion);
					
					//consignacionLogic.getEntityWithConnection(idConsignacion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
					consignacionLogic.getConsignacions().add(consignacionLogic.getConsignacion());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacions=new ArrayList<Consignacion>();
					this.consignacions.add(consignacion);
				}
				
				if(consignacionLogic.getConsignacion()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdCentroCosto")) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					consignacionLogic.getConsignacionsFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=consignacionLogic.getConsignacions()==null||consignacionLogic.getConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=consignacions==null|| consignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionsAux=new ArrayList<Consignacion>();
						consignacionsAux.addAll(consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionsAux=new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							consignacionLogic.getConsignacionsFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConsignacions("FK_IdCentroCosto",consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConsignacions("FK_IdCentroCosto",consignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
						consignacionLogic.getConsignacions().addAll(consignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacions=new ArrayList<Consignacion>();
							consignacions.addAll(consignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCliente")) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					consignacionLogic.getConsignacionsFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=consignacionLogic.getConsignacions()==null||consignacionLogic.getConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=consignacions==null|| consignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionsAux=new ArrayList<Consignacion>();
						consignacionsAux.addAll(consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionsAux=new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							consignacionLogic.getConsignacionsFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConsignacions("FK_IdCliente",consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConsignacions("FK_IdCliente",consignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
						consignacionLogic.getConsignacions().addAll(consignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacions=new ArrayList<Consignacion>();
							consignacions.addAll(consignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdConsignatario")) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdConsignatario(id_consignatarioFK_IdConsignatario);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					consignacionLogic.getConsignacionsFK_IdConsignatario(finalQueryGlobal,pagination,id_consignatarioFK_IdConsignatario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdConsignatario(id_consignatarioFK_IdConsignatario);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdConsignatario(id_consignatarioFK_IdConsignatario);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=consignacionLogic.getConsignacions()==null||consignacionLogic.getConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=consignacions==null|| consignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionsAux=new ArrayList<Consignacion>();
						consignacionsAux.addAll(consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionsAux=new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							consignacionLogic.getConsignacionsFK_IdConsignatario(finalQueryGlobal,pagination,id_consignatarioFK_IdConsignatario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdConsignatario(id_consignatarioFK_IdConsignatario);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdConsignatario(id_consignatarioFK_IdConsignatario);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConsignacions("FK_IdConsignatario",consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConsignacions("FK_IdConsignatario",consignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
						consignacionLogic.getConsignacions().addAll(consignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacions=new ArrayList<Consignacion>();
							consignacions.addAll(consignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					consignacionLogic.getConsignacionsFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=consignacionLogic.getConsignacions()==null||consignacionLogic.getConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=consignacions==null|| consignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionsAux=new ArrayList<Consignacion>();
						consignacionsAux.addAll(consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionsAux=new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							consignacionLogic.getConsignacionsFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConsignacions("FK_IdEjercicio",consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConsignacions("FK_IdEjercicio",consignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
						consignacionLogic.getConsignacions().addAll(consignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacions=new ArrayList<Consignacion>();
							consignacions.addAll(consignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpleado")) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					consignacionLogic.getConsignacionsFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=consignacionLogic.getConsignacions()==null||consignacionLogic.getConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=consignacions==null|| consignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionsAux=new ArrayList<Consignacion>();
						consignacionsAux.addAll(consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionsAux=new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							consignacionLogic.getConsignacionsFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConsignacions("FK_IdEmpleado",consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConsignacions("FK_IdEmpleado",consignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
						consignacionLogic.getConsignacions().addAll(consignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacions=new ArrayList<Consignacion>();
							consignacions.addAll(consignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					consignacionLogic.getConsignacionsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=consignacionLogic.getConsignacions()==null||consignacionLogic.getConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=consignacions==null|| consignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionsAux=new ArrayList<Consignacion>();
						consignacionsAux.addAll(consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionsAux=new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							consignacionLogic.getConsignacionsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConsignacions("FK_IdEmpresa",consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConsignacions("FK_IdEmpresa",consignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
						consignacionLogic.getConsignacions().addAll(consignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacions=new ArrayList<Consignacion>();
							consignacions.addAll(consignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoPedido")) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdEstadoPedido(id_estado_pedidoFK_IdEstadoPedido);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					consignacionLogic.getConsignacionsFK_IdEstadoPedido(finalQueryGlobal,pagination,id_estado_pedidoFK_IdEstadoPedido);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdEstadoPedido(id_estado_pedidoFK_IdEstadoPedido);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdEstadoPedido(id_estado_pedidoFK_IdEstadoPedido);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=consignacionLogic.getConsignacions()==null||consignacionLogic.getConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=consignacions==null|| consignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionsAux=new ArrayList<Consignacion>();
						consignacionsAux.addAll(consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionsAux=new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							consignacionLogic.getConsignacionsFK_IdEstadoPedido(finalQueryGlobal,pagination,id_estado_pedidoFK_IdEstadoPedido);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdEstadoPedido(id_estado_pedidoFK_IdEstadoPedido);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdEstadoPedido(id_estado_pedidoFK_IdEstadoPedido);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConsignacions("FK_IdEstadoPedido",consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConsignacions("FK_IdEstadoPedido",consignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
						consignacionLogic.getConsignacions().addAll(consignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacions=new ArrayList<Consignacion>();
							consignacions.addAll(consignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdFormato")) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					consignacionLogic.getConsignacionsFK_IdFormato(finalQueryGlobal,pagination,id_formatoFK_IdFormato);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=consignacionLogic.getConsignacions()==null||consignacionLogic.getConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=consignacions==null|| consignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionsAux=new ArrayList<Consignacion>();
						consignacionsAux.addAll(consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionsAux=new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							consignacionLogic.getConsignacionsFK_IdFormato(finalQueryGlobal,pagination,id_formatoFK_IdFormato);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConsignacions("FK_IdFormato",consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConsignacions("FK_IdFormato",consignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
						consignacionLogic.getConsignacions().addAll(consignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacions=new ArrayList<Consignacion>();
							consignacions.addAll(consignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdMoneda")) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					consignacionLogic.getConsignacionsFK_IdMoneda(finalQueryGlobal,pagination,id_monedaFK_IdMoneda);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=consignacionLogic.getConsignacions()==null||consignacionLogic.getConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=consignacions==null|| consignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionsAux=new ArrayList<Consignacion>();
						consignacionsAux.addAll(consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionsAux=new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							consignacionLogic.getConsignacionsFK_IdMoneda(finalQueryGlobal,pagination,id_monedaFK_IdMoneda);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConsignacions("FK_IdMoneda",consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConsignacions("FK_IdMoneda",consignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
						consignacionLogic.getConsignacions().addAll(consignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacions=new ArrayList<Consignacion>();
							consignacions.addAll(consignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					consignacionLogic.getConsignacionsFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=consignacionLogic.getConsignacions()==null||consignacionLogic.getConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=consignacions==null|| consignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionsAux=new ArrayList<Consignacion>();
						consignacionsAux.addAll(consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionsAux=new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							consignacionLogic.getConsignacionsFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConsignacions("FK_IdPeriodo",consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConsignacions("FK_IdPeriodo",consignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
						consignacionLogic.getConsignacions().addAll(consignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacions=new ArrayList<Consignacion>();
							consignacions.addAll(consignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdResponsable")) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdResponsable(id_responsableFK_IdResponsable);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					consignacionLogic.getConsignacionsFK_IdResponsable(finalQueryGlobal,pagination,id_responsableFK_IdResponsable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdResponsable(id_responsableFK_IdResponsable);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdResponsable(id_responsableFK_IdResponsable);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=consignacionLogic.getConsignacions()==null||consignacionLogic.getConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=consignacions==null|| consignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionsAux=new ArrayList<Consignacion>();
						consignacionsAux.addAll(consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionsAux=new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							consignacionLogic.getConsignacionsFK_IdResponsable(finalQueryGlobal,pagination,id_responsableFK_IdResponsable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdResponsable(id_responsableFK_IdResponsable);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdResponsable(id_responsableFK_IdResponsable);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConsignacions("FK_IdResponsable",consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConsignacions("FK_IdResponsable",consignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
						consignacionLogic.getConsignacions().addAll(consignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacions=new ArrayList<Consignacion>();
							consignacions.addAll(consignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSubCliente")) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					consignacionLogic.getConsignacionsFK_IdSubCliente(finalQueryGlobal,pagination,id_sub_clienteFK_IdSubCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=consignacionLogic.getConsignacions()==null||consignacionLogic.getConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=consignacions==null|| consignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionsAux=new ArrayList<Consignacion>();
						consignacionsAux.addAll(consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionsAux=new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							consignacionLogic.getConsignacionsFK_IdSubCliente(finalQueryGlobal,pagination,id_sub_clienteFK_IdSubCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConsignacions("FK_IdSubCliente",consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConsignacions("FK_IdSubCliente",consignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
						consignacionLogic.getConsignacions().addAll(consignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacions=new ArrayList<Consignacion>();
							consignacions.addAll(consignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					consignacionLogic.getConsignacionsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=consignacionLogic.getConsignacions()==null||consignacionLogic.getConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=consignacions==null|| consignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionsAux=new ArrayList<Consignacion>();
						consignacionsAux.addAll(consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionsAux=new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							consignacionLogic.getConsignacionsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConsignacions("FK_IdSucursal",consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConsignacions("FK_IdSucursal",consignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
						consignacionLogic.getConsignacions().addAll(consignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacions=new ArrayList<Consignacion>();
							consignacions.addAll(consignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoCambio")) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					consignacionLogic.getConsignacionsFK_IdTipoCambio(finalQueryGlobal,pagination,id_tipo_cambioFK_IdTipoCambio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=consignacionLogic.getConsignacions()==null||consignacionLogic.getConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=consignacions==null|| consignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionsAux=new ArrayList<Consignacion>();
						consignacionsAux.addAll(consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionsAux=new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							consignacionLogic.getConsignacionsFK_IdTipoCambio(finalQueryGlobal,pagination,id_tipo_cambioFK_IdTipoCambio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConsignacions("FK_IdTipoCambio",consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConsignacions("FK_IdTipoCambio",consignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
						consignacionLogic.getConsignacions().addAll(consignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacions=new ArrayList<Consignacion>();
							consignacions.addAll(consignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoPrecio")) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					consignacionLogic.getConsignacionsFK_IdTipoPrecio(finalQueryGlobal,pagination,id_tipo_precioFK_IdTipoPrecio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=consignacionLogic.getConsignacions()==null||consignacionLogic.getConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=consignacions==null|| consignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionsAux=new ArrayList<Consignacion>();
						consignacionsAux.addAll(consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionsAux=new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							consignacionLogic.getConsignacionsFK_IdTipoPrecio(finalQueryGlobal,pagination,id_tipo_precioFK_IdTipoPrecio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConsignacions("FK_IdTipoPrecio",consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConsignacions("FK_IdTipoPrecio",consignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
						consignacionLogic.getConsignacions().addAll(consignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacions=new ArrayList<Consignacion>();
							consignacions.addAll(consignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransporte")) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					consignacionLogic.getConsignacionsFK_IdTransporte(finalQueryGlobal,pagination,id_transporteFK_IdTransporte);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=consignacionLogic.getConsignacions()==null||consignacionLogic.getConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=consignacions==null|| consignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionsAux=new ArrayList<Consignacion>();
						consignacionsAux.addAll(consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionsAux=new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							consignacionLogic.getConsignacionsFK_IdTransporte(finalQueryGlobal,pagination,id_transporteFK_IdTransporte);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConsignacions("FK_IdTransporte",consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConsignacions("FK_IdTransporte",consignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
						consignacionLogic.getConsignacions().addAll(consignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacions=new ArrayList<Consignacion>();
							consignacions.addAll(consignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransportista")) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdTransportista(id_transportistaFK_IdTransportista);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					consignacionLogic.getConsignacionsFK_IdTransportista(finalQueryGlobal,pagination,id_transportistaFK_IdTransportista);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdTransportista(id_transportistaFK_IdTransportista);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdTransportista(id_transportistaFK_IdTransportista);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=consignacionLogic.getConsignacions()==null||consignacionLogic.getConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=consignacions==null|| consignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionsAux=new ArrayList<Consignacion>();
						consignacionsAux.addAll(consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionsAux=new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							consignacionLogic.getConsignacionsFK_IdTransportista(finalQueryGlobal,pagination,id_transportistaFK_IdTransportista);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdTransportista(id_transportistaFK_IdTransportista);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdTransportista(id_transportistaFK_IdTransportista);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConsignacions("FK_IdTransportista",consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConsignacions("FK_IdTransportista",consignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
						consignacionLogic.getConsignacions().addAll(consignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacions=new ArrayList<Consignacion>();
							consignacions.addAll(consignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUsuario")) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					consignacionLogic.getConsignacionsFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=consignacionLogic.getConsignacions()==null||consignacionLogic.getConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=consignacions==null|| consignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionsAux=new ArrayList<Consignacion>();
						consignacionsAux.addAll(consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionsAux=new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							consignacionLogic.getConsignacionsFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConsignacions("FK_IdUsuario",consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConsignacions("FK_IdUsuario",consignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
						consignacionLogic.getConsignacions().addAll(consignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacions=new ArrayList<Consignacion>();
							consignacions.addAll(consignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdVendedor")) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					consignacionLogic.getConsignacionsFK_IdVendedor(finalQueryGlobal,pagination,id_vendedorFK_IdVendedor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=consignacionLogic.getConsignacions()==null||consignacionLogic.getConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=consignacions==null|| consignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionsAux=new ArrayList<Consignacion>();
						consignacionsAux.addAll(consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionsAux=new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							consignacionLogic.getConsignacionsFK_IdVendedor(finalQueryGlobal,pagination,id_vendedorFK_IdVendedor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConsignacions("FK_IdVendedor",consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConsignacions("FK_IdVendedor",consignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
						consignacionLogic.getConsignacions().addAll(consignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacions=new ArrayList<Consignacion>();
							consignacions.addAll(consignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdZona")) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					consignacionLogic.getConsignacionsFK_IdZona(finalQueryGlobal,pagination,id_zonaFK_IdZona);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=consignacionLogic.getConsignacions()==null||consignacionLogic.getConsignacions().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=consignacions==null|| consignacions.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionsAux=new ArrayList<Consignacion>();
						consignacionsAux.addAll(consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionsAux=new ArrayList<Consignacion>();
							consignacionsAux.addAll(consignacions);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							consignacionLogic.getConsignacionsFK_IdZona(finalQueryGlobal,pagination,id_zonaFK_IdZona);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ConsignacionConstantesFunciones.getDetalleIndiceFK_IdZona(id_zonaFK_IdZona);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteConsignacions("FK_IdZona",consignacionLogic.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteConsignacions("FK_IdZona",consignacions);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionLogic.setConsignacions(new ArrayList<Consignacion>());
						consignacionLogic.getConsignacions().addAll(consignacionsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacions=new ArrayList<Consignacion>();
							consignacions.addAll(consignacionsAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesConsignacion();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessConsignacion();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=consignacionLogic.getConsignacions().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=consignacions.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=consignacionLogic.getConsignacions().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=consignacions.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(Consignacion consignacion) {
		Boolean permite=true;
		
		if(this.consignacion.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=ConsignacionConstantesFunciones.getOrderByListaConsignacion();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=ConsignacionConstantesFunciones.getOrderByListaConsignacion();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Consignacion consignacion:consignacionLogic.getConsignacions()) {
				if(consignacion.getsType().equals(Constantes2.S_TOTALES)) {
					consignacionTotales=consignacion;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Consignacion consignacion:this.consignacions) {
				if(consignacion.getsType().equals(Constantes2.S_TOTALES)) {
					consignacionTotales=consignacion;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.consignacionAux=new Consignacion();
			this.consignacionAux.setsType(Constantes2.S_TOTALES);
			this.consignacionAux.setIsNew(false);
			this.consignacionAux.setIsChanged(false);
			this.consignacionAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				ConsignacionConstantesFunciones.TotalizarValoresFilaConsignacion(this.consignacionLogic.getConsignacions(),this.consignacionAux);
				
				this.consignacionLogic.getConsignacions().add(this.consignacionAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				ConsignacionConstantesFunciones.TotalizarValoresFilaConsignacion(this.consignacions,this.consignacionAux);
				
				this.consignacions.add(this.consignacionAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		consignacionTotales=new Consignacion();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.consignacionLogic.getConsignacions().remove(consignacionTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.consignacions.remove(consignacionTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		consignacionTotales=new Consignacion();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(Consignacion consignacion:consignacionLogic.getConsignacions()) {
				if(consignacion.getsType().equals(Constantes2.S_TOTALES)) {
					consignacionTotales=consignacion;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ConsignacionConstantesFunciones.TotalizarValoresFilaConsignacion(this.consignacionLogic.getConsignacions(),consignacionTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(Consignacion consignacion:this.consignacions) {
				if(consignacion.getsType().equals(Constantes2.S_TOTALES)) {
					consignacionTotales=consignacion;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ConsignacionConstantesFunciones.TotalizarValoresFilaConsignacion(this.consignacions,consignacionTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getConsignacionsFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConsignacionsFK_IdCentroCosto()throws Exception {
		try {
			sAccionBusqueda="FK_IdCentroCosto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConsignacionsFK_IdCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConsignacionsFK_IdConsignatario()throws Exception {
		try {
			sAccionBusqueda="FK_IdConsignatario";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConsignacionsFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConsignacionsFK_IdEmpleado()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpleado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConsignacionsFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConsignacionsFK_IdEstadoPedido()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoPedido";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConsignacionsFK_IdFormato()throws Exception {
		try {
			sAccionBusqueda="FK_IdFormato";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConsignacionsFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConsignacionsFK_IdMoneda()throws Exception {
		try {
			sAccionBusqueda="FK_IdMoneda";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConsignacionsFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConsignacionsFK_IdResponsable()throws Exception {
		try {
			sAccionBusqueda="FK_IdResponsable";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConsignacionsFK_IdSubCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdSubCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConsignacionsFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConsignacionsFK_IdTipoCambio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoCambio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConsignacionsFK_IdTipoPrecio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoPrecio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConsignacionsFK_IdTransporte()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransporte";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConsignacionsFK_IdTransportista()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransportista";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConsignacionsFK_IdUsuario()throws Exception {
		try {
			sAccionBusqueda="FK_IdUsuario";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConsignacionsFK_IdVendedor()throws Exception {
		try {
			sAccionBusqueda="FK_IdVendedor";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getConsignacionsFK_IdZona()throws Exception {
		try {
			sAccionBusqueda="FK_IdZona";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getConsignacionsFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConsignacionsFK_IdCentroCosto(String sFinalQuery,Long id_centro_costo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdCentroCosto(sFinalQuery,this.pagination,id_centro_costo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConsignacionsFK_IdCliente(String sFinalQuery,Long id_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdCliente(sFinalQuery,this.pagination,id_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConsignacionsFK_IdConsignatario(String sFinalQuery,Long id_consignatario)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdConsignatario(sFinalQuery,this.pagination,id_consignatario);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConsignacionsFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConsignacionsFK_IdEmpleado(String sFinalQuery,Long id_empleado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdEmpleado(sFinalQuery,this.pagination,id_empleado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConsignacionsFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConsignacionsFK_IdEstadoPedido(String sFinalQuery,Long id_estado_pedido)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdEstadoPedido(sFinalQuery,this.pagination,id_estado_pedido);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConsignacionsFK_IdFormato(String sFinalQuery,Long id_formato)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdFormato(sFinalQuery,this.pagination,id_formato);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConsignacionsFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConsignacionsFK_IdMoneda(String sFinalQuery,Long id_moneda)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdMoneda(sFinalQuery,this.pagination,id_moneda);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConsignacionsFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConsignacionsFK_IdResponsable(String sFinalQuery,Long id_responsable)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdResponsable(sFinalQuery,this.pagination,id_responsable);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConsignacionsFK_IdSubCliente(String sFinalQuery,Long id_sub_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdSubCliente(sFinalQuery,this.pagination,id_sub_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConsignacionsFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConsignacionsFK_IdTipoCambio(String sFinalQuery,Long id_tipo_cambio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdTipoCambio(sFinalQuery,this.pagination,id_tipo_cambio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConsignacionsFK_IdTipoPrecio(String sFinalQuery,Long id_tipo_precio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdTipoPrecio(sFinalQuery,this.pagination,id_tipo_precio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConsignacionsFK_IdTransporte(String sFinalQuery,Long id_transporte)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdTransporte(sFinalQuery,this.pagination,id_transporte);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConsignacionsFK_IdTransportista(String sFinalQuery,Long id_transportista)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdTransportista(sFinalQuery,this.pagination,id_transportista);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConsignacionsFK_IdUsuario(String sFinalQuery,Long id_usuario)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdUsuario(sFinalQuery,this.pagination,id_usuario);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConsignacionsFK_IdVendedor(String sFinalQuery,Long id_vendedor)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdVendedor(sFinalQuery,this.pagination,id_vendedor);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getConsignacionsFK_IdZona(String sFinalQuery,Long id_zona)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLogic.getConsignacionsFK_IdZona(sFinalQuery,this.pagination,id_zona);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosConsignacion() {
		this.isPermisoTodoConsignacion=false;
		this.isPermisoNuevoConsignacion=false;
		this.isPermisoActualizarConsignacion=false;
		this.isPermisoActualizarOriginalConsignacion=false;
		this.isPermisoEliminarConsignacion=false;
		this.isPermisoGuardarCambiosConsignacion=false;
		this.isPermisoConsultaConsignacion=false;
		this.isPermisoBusquedaConsignacion=false;
		this.isPermisoReporteConsignacion=false;		
		this.isPermisoOrdenConsignacion=false;		
		this.isPermisoPaginacionMedioConsignacion=false;		
		this.isPermisoPaginacionAltoConsignacion=false;
		this.isPermisoPaginacionTodoConsignacion=false;
		this.isPermisoCopiarConsignacion=false;		
		this.isPermisoVerFormConsignacion=false;		
		this.isPermisoDuplicarConsignacion=false;		
		this.isPermisoOrdenConsignacion=false;		
	}
	
	public void setPermisosUsuarioConsignacion(Boolean isPermiso) {
		this.isPermisoTodoConsignacion=isPermiso;
		this.isPermisoNuevoConsignacion=isPermiso;
		this.isPermisoActualizarConsignacion=isPermiso;
		this.isPermisoActualizarOriginalConsignacion=isPermiso;
		this.isPermisoEliminarConsignacion=isPermiso;
		this.isPermisoGuardarCambiosConsignacion=isPermiso;
		this.isPermisoConsultaConsignacion=isPermiso;
		this.isPermisoBusquedaConsignacion=isPermiso;
		this.isPermisoReporteConsignacion=isPermiso;
		this.isPermisoOrdenConsignacion=isPermiso;		
		this.isPermisoPaginacionMedioConsignacion=isPermiso;		
		this.isPermisoPaginacionAltoConsignacion=isPermiso;		
		this.isPermisoPaginacionTodoConsignacion=isPermiso;		
		this.isPermisoCopiarConsignacion=isPermiso;		
		this.isPermisoVerFormConsignacion=isPermiso;		
		this.isPermisoDuplicarConsignacion=isPermiso;
		this.isPermisoOrdenConsignacion=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioConsignacion(Boolean isPermiso) {
		//this.isPermisoTodoConsignacion=isPermiso;
		this.isPermisoNuevoConsignacion=isPermiso;
		this.isPermisoActualizarConsignacion=isPermiso;
		this.isPermisoActualizarOriginalConsignacion=isPermiso;
		this.isPermisoEliminarConsignacion=isPermiso;
		this.isPermisoGuardarCambiosConsignacion=isPermiso;
		//this.isPermisoConsultaConsignacion=isPermiso;
		//this.isPermisoBusquedaConsignacion=isPermiso;
		//this.isPermisoReporteConsignacion=isPermiso;
		//this.isPermisoOrdenConsignacion=isPermiso;		
		//this.isPermisoPaginacionMedioConsignacion=isPermiso;		
		//this.isPermisoPaginacionAltoConsignacion=isPermiso;		
		//this.isPermisoPaginacionTodoConsignacion=isPermiso;		
		//this.isPermisoCopiarConsignacion=isPermiso;		
		//this.isPermisoDuplicarConsignacion=isPermiso;
		//this.isPermisoOrdenConsignacion=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioConsignacionClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(DetalleConsignacionConstantesFunciones.SNOMBREOPCION);
		
		if(ConsignacionJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosDetalleConsignacion=false;
		this.isTienePermisosDetalleConsignacion=this.verificarGetPermisosUsuarioOpcionConsignacionClaseRelacionada(this.opcionsRelacionadas,DetalleConsignacionConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebConsignacion(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioConsignacionClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosDetalleConsignacion=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioConsignacionClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionConsignacionClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioConsignacionClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosDetalleConsignacion && this.jInternalFrameDetalleFormConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormConsignacion.jTabbedPaneRelacionesConsignacion.remove(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioConsignacion() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(ConsignacionJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.consignacionSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, ConsignacionConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoConsignacion=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarConsignacion=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalConsignacion=this.isPermisoActualizarConsignacion;
			this.isPermisoEliminarConsignacion=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosConsignacion=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaConsignacion=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaConsignacion=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoConsignacion=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteConsignacion=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenConsignacion=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioConsignacion=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoConsignacion=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoConsignacion=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarConsignacion=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormConsignacion=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarConsignacion=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenConsignacion=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.consignacionSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosConsignacion.setToolTipText(this.jTableDatosConsignacion.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioConsignacion(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioConsignacion(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(ConsignacionJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(ConsignacionJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioConsignacion() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosDetalleConsignacion && this.consignacionConstantesFunciones.mostrarDetalleConsignacionConsignacion && !ConsignacionConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Detalle Consignacion");
			reporte.setsDescripcion("Detalle Consignacion");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyConsignacionListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
				this.usuariosForeignKey=new ArrayList();
				this.monedasForeignKey=new ArrayList();
				this.empleadosForeignKey=new ArrayList();
				this.tipopreciosForeignKey=new ArrayList();
				this.formatosForeignKey=new ArrayList();
				this.clientesForeignKey=new ArrayList();
				this.subclientesForeignKey=new ArrayList();
				this.consignatariosForeignKey=new ArrayList();
				this.vendedorsForeignKey=new ArrayList();
				this.estadopedidosForeignKey=new ArrayList();
				this.tipocambiosForeignKey=new ArrayList();
				this.zonasForeignKey=new ArrayList();
				this.centrocostosForeignKey=new ArrayList();
				this.responsablesForeignKey=new ArrayList();
				this.transportistasForeignKey=new ArrayList();
				this.transportesForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyConsignacionListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(ConsignacionJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyConsignacionListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUsuarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMonedaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoPrecioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySubClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyConsignatarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyVendedorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoPedidoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyZonaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyResponsableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransportistaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransporteListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUsuarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UsuarioConstantesFunciones.SFINALQUERY;

				this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMonedaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MonedaConstantesFunciones.SFINALQUERY;

				this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleadoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpleadoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoPrecioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipopreciosForeignKey==null||this.tipopreciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoPrecioConstantesFunciones.getArrayColumnasGlobalesTipoPrecio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoPrecioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoPrecioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoPreciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FormatoConstantesFunciones.SFINALQUERY;

				this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySubClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.subclientesForeignKey==null||this.subclientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SubClienteConstantesFunciones.getArrayColumnasGlobalesSubCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SubClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SubClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosSubClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyConsignatarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.consignatariosForeignKey==null||this.consignatariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ConsignatarioConstantesFunciones.getArrayColumnasGlobalesConsignatario(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ConsignatarioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ConsignatarioConstantesFunciones.SFINALQUERY;

				this.cargarCombosConsignatariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyVendedorListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.vendedorsForeignKey==null||this.vendedorsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=VendedorConstantesFunciones.getArrayColumnasGlobalesVendedor(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,VendedorConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=VendedorConstantesFunciones.SFINALQUERY;

				this.cargarCombosVendedorsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedidoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadopedidosForeignKey==null||this.estadopedidosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoPedidoConstantesFunciones.getArrayColumnasGlobalesEstadoPedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoPedidoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoPedidosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoCambioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyZonaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.zonasForeignKey==null||this.zonasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ZonaConstantesFunciones.getArrayColumnasGlobalesZona(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ZonaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ZonaConstantesFunciones.SFINALQUERY;

				this.cargarCombosZonasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCostoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CentroCostoConstantesFunciones.SFINALQUERY;

				this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyResponsableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.responsablesForeignKey==null||this.responsablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ResponsableConstantesFunciones.getArrayColumnasGlobalesResponsable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ResponsableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ResponsableConstantesFunciones.SFINALQUERY;

				this.cargarCombosResponsablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransportistaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transportistasForeignKey==null||this.transportistasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransportistaConstantesFunciones.getArrayColumnasGlobalesTransportista(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransportistaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransportistaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransportistasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransporteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transportesForeignKey==null||this.transportesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransporteConstantesFunciones.getArrayColumnasGlobalesTransporte(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransporteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransporteConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransportesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyConsignacionListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			ConsignacionParameterReturnGeneral consignacionReturnGeneral=new ConsignacionParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_empresaConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_empresaConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_sucursalConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_sucursalConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_ejercicioConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_ejercicioConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_periodoConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_periodoConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_anioConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_anioConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_mesConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_mesConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}


				String finalQueryGlobalUsuario="";

				if(((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_usuarioConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_usuarioConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUsuario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

						finalQueryGlobalUsuario=Funciones.GetFinalQueryAppend(finalQueryGlobalUsuario, "");
						finalQueryGlobalUsuario+=UsuarioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUsuario=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidUsuarioActual();
					}
				} else {
					finalQueryGlobalUsuario="NONE";
				}


				String finalQueryGlobalMoneda="";

				if(((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_monedaConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_monedaConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMoneda=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

						finalQueryGlobalMoneda=Funciones.GetFinalQueryAppend(finalQueryGlobalMoneda, "");
						finalQueryGlobalMoneda+=MonedaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMoneda=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidMonedaActual();
					}
				} else {
					finalQueryGlobalMoneda="NONE";
				}


				String finalQueryGlobalEmpleado="";

				if(((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_empleadoConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_empleadoConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpleado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpleado=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpleado, "");
						finalQueryGlobalEmpleado+=EmpleadoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpleado=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidEmpleadoActual();
					}
				} else {
					finalQueryGlobalEmpleado="NONE";
				}


				String finalQueryGlobalTipoPrecio="";

				if(((this.tipopreciosForeignKey==null||this.tipopreciosForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_tipo_precioConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_tipo_precioConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionTipoPrecio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoPrecioConstantesFunciones.getArrayColumnasGlobalesTipoPrecio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoPrecio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoPrecioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoPrecio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoPrecio, "");
						finalQueryGlobalTipoPrecio+=TipoPrecioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoPreciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoPrecio=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidTipoPrecioActual();
					}
				} else {
					finalQueryGlobalTipoPrecio="NONE";
				}


				String finalQueryGlobalFormato="";

				if(((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_formatoConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_formatoConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFormato=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

						finalQueryGlobalFormato=Funciones.GetFinalQueryAppend(finalQueryGlobalFormato, "");
						finalQueryGlobalFormato+=FormatoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFormato=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidFormatoActual();
					}
				} else {
					finalQueryGlobalFormato="NONE";
				}


				String finalQueryGlobalCliente="";

				if(((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_clienteConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_clienteConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalCliente, "");
						finalQueryGlobalCliente+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCliente=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidClienteActual();
					}
				} else {
					finalQueryGlobalCliente="NONE";
				}


				String finalQueryGlobalSubCliente="";

				if(((this.subclientesForeignKey==null||this.subclientesForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_sub_clienteConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_sub_clienteConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionSubCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SubClienteConstantesFunciones.getArrayColumnasGlobalesSubCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSubCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SubClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalSubCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalSubCliente, "");
						finalQueryGlobalSubCliente+=SubClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSubClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSubCliente=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidSubClienteActual();
					}
				} else {
					finalQueryGlobalSubCliente="NONE";
				}


				String finalQueryGlobalConsignatario="";

				if(((this.consignatariosForeignKey==null||this.consignatariosForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_consignatarioConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_consignatarioConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionConsignatario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ConsignatarioConstantesFunciones.getArrayColumnasGlobalesConsignatario(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalConsignatario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ConsignatarioConstantesFunciones.TABLENAME);

						finalQueryGlobalConsignatario=Funciones.GetFinalQueryAppend(finalQueryGlobalConsignatario, "");
						finalQueryGlobalConsignatario+=ConsignatarioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosConsignatariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalConsignatario=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidConsignatarioActual();
					}
				} else {
					finalQueryGlobalConsignatario="NONE";
				}


				String finalQueryGlobalVendedor="";

				if(((this.vendedorsForeignKey==null||this.vendedorsForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_vendedorConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_vendedorConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=VendedorConstantesFunciones.getArrayColumnasGlobalesVendedor(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalVendedor=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,VendedorConstantesFunciones.TABLENAME);

						finalQueryGlobalVendedor=Funciones.GetFinalQueryAppend(finalQueryGlobalVendedor, "");
						finalQueryGlobalVendedor+=VendedorConstantesFunciones.SFINALQUERY;

						//this.cargarCombosVendedorsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalVendedor=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidVendedorActual();
					}
				} else {
					finalQueryGlobalVendedor="NONE";
				}


				String finalQueryGlobalEstadoPedido="";

				if(((this.estadopedidosForeignKey==null||this.estadopedidosForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_estado_pedidoConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_estado_pedidoConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedido()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoPedidoConstantesFunciones.getArrayColumnasGlobalesEstadoPedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoPedido=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoPedido=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoPedido, "");
						finalQueryGlobalEstadoPedido+=EstadoPedidoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoPedidosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoPedido=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidEstadoPedidoActual();
					}
				} else {
					finalQueryGlobalEstadoPedido="NONE";
				}


				String finalQueryGlobalTipoCambio="";

				if(((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_tipo_cambioConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_tipo_cambioConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoCambio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoCambio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoCambio, "");
						finalQueryGlobalTipoCambio+=TipoCambioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoCambio=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidTipoCambioActual();
					}
				} else {
					finalQueryGlobalTipoCambio="NONE";
				}


				String finalQueryGlobalZona="";

				if(((this.zonasForeignKey==null||this.zonasForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_zonaConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_zonaConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionZona()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ZonaConstantesFunciones.getArrayColumnasGlobalesZona(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalZona=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ZonaConstantesFunciones.TABLENAME);

						finalQueryGlobalZona=Funciones.GetFinalQueryAppend(finalQueryGlobalZona, "");
						finalQueryGlobalZona+=ZonaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosZonasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalZona=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidZonaActual();
					}
				} else {
					finalQueryGlobalZona="NONE";
				}


				String finalQueryGlobalCentroCosto="";

				if(((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_centro_costoConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_centro_costoConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCentroCosto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

						finalQueryGlobalCentroCosto=Funciones.GetFinalQueryAppend(finalQueryGlobalCentroCosto, "");
						finalQueryGlobalCentroCosto+=CentroCostoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCentroCosto=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidCentroCostoActual();
					}
				} else {
					finalQueryGlobalCentroCosto="NONE";
				}


				String finalQueryGlobalResponsable="";

				if(((this.responsablesForeignKey==null||this.responsablesForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_responsableConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_responsableConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionResponsable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ResponsableConstantesFunciones.getArrayColumnasGlobalesResponsable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalResponsable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ResponsableConstantesFunciones.TABLENAME);

						finalQueryGlobalResponsable=Funciones.GetFinalQueryAppend(finalQueryGlobalResponsable, "");
						finalQueryGlobalResponsable+=ResponsableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosResponsablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalResponsable=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidResponsableActual();
					}
				} else {
					finalQueryGlobalResponsable="NONE";
				}


				String finalQueryGlobalTransportista="";

				if(((this.transportistasForeignKey==null||this.transportistasForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_transportistaConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_transportistaConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionTransportista()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransportistaConstantesFunciones.getArrayColumnasGlobalesTransportista(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransportista=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransportistaConstantesFunciones.TABLENAME);

						finalQueryGlobalTransportista=Funciones.GetFinalQueryAppend(finalQueryGlobalTransportista, "");
						finalQueryGlobalTransportista+=TransportistaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransportistasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransportista=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidTransportistaActual();
					}
				} else {
					finalQueryGlobalTransportista="NONE";
				}


				String finalQueryGlobalTransporte="";

				if(((this.transportesForeignKey==null||this.transportesForeignKey.size()<=0) && this.consignacionConstantesFunciones.cargarid_transporteConsignacion)
					 || (this.esRecargarFks && this.consignacionConstantesFunciones.cargarid_transporteConsignacion)) {

					if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionTransporte()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransporteConstantesFunciones.getArrayColumnasGlobalesTransporte(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransporte=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransporteConstantesFunciones.TABLENAME);

						finalQueryGlobalTransporte=Funciones.GetFinalQueryAppend(finalQueryGlobalTransporte, "");
						finalQueryGlobalTransporte+=TransporteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransportesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransporte=" WHERE " + ConstantesSql.ID + "="+consignacionSessionBean.getlidTransporteActual();
					}
				} else {
					finalQueryGlobalTransporte="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				consignacionReturnGeneral=consignacionLogic.cargarCombosLoteForeignKeyConsignacion(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalAnio,finalQueryGlobalMes,finalQueryGlobalUsuario,finalQueryGlobalMoneda,finalQueryGlobalEmpleado,finalQueryGlobalTipoPrecio,finalQueryGlobalFormato,finalQueryGlobalCliente,finalQueryGlobalSubCliente,finalQueryGlobalConsignatario,finalQueryGlobalVendedor,finalQueryGlobalEstadoPedido,finalQueryGlobalTipoCambio,finalQueryGlobalZona,finalQueryGlobalCentroCosto,finalQueryGlobalResponsable,finalQueryGlobalTransportista,finalQueryGlobalTransporte);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=consignacionReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=consignacionReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=consignacionReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=consignacionReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=consignacionReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=consignacionReturnGeneral.getmessForeignKey();
			}

			if(!finalQueryGlobalUsuario.equals("NONE")) {
				this.usuariosForeignKey=consignacionReturnGeneral.getusuariosForeignKey();
			}

			if(!finalQueryGlobalMoneda.equals("NONE")) {
				this.monedasForeignKey=consignacionReturnGeneral.getmonedasForeignKey();
			}

			if(!finalQueryGlobalEmpleado.equals("NONE")) {
				this.empleadosForeignKey=consignacionReturnGeneral.getempleadosForeignKey();
			}

			if(!finalQueryGlobalTipoPrecio.equals("NONE")) {
				this.tipopreciosForeignKey=consignacionReturnGeneral.gettipopreciosForeignKey();
			}

			if(!finalQueryGlobalFormato.equals("NONE")) {
				this.formatosForeignKey=consignacionReturnGeneral.getformatosForeignKey();
			}

			if(!finalQueryGlobalCliente.equals("NONE")) {
				this.clientesForeignKey=consignacionReturnGeneral.getclientesForeignKey();
			}

			if(!finalQueryGlobalSubCliente.equals("NONE")) {
				this.subclientesForeignKey=consignacionReturnGeneral.getsubclientesForeignKey();
			}

			if(!finalQueryGlobalConsignatario.equals("NONE")) {
				this.consignatariosForeignKey=consignacionReturnGeneral.getconsignatariosForeignKey();
			}

			if(!finalQueryGlobalVendedor.equals("NONE")) {
				this.vendedorsForeignKey=consignacionReturnGeneral.getvendedorsForeignKey();
			}

			if(!finalQueryGlobalEstadoPedido.equals("NONE")) {
				this.estadopedidosForeignKey=consignacionReturnGeneral.getestadopedidosForeignKey();
			}

			if(!finalQueryGlobalTipoCambio.equals("NONE")) {
				this.tipocambiosForeignKey=consignacionReturnGeneral.gettipocambiosForeignKey();
			}

			if(!finalQueryGlobalZona.equals("NONE")) {
				this.zonasForeignKey=consignacionReturnGeneral.getzonasForeignKey();
			}

			if(!finalQueryGlobalCentroCosto.equals("NONE")) {
				this.centrocostosForeignKey=consignacionReturnGeneral.getcentrocostosForeignKey();
			}

			if(!finalQueryGlobalResponsable.equals("NONE")) {
				this.responsablesForeignKey=consignacionReturnGeneral.getresponsablesForeignKey();
			}

			if(!finalQueryGlobalTransportista.equals("NONE")) {
				this.transportistasForeignKey=consignacionReturnGeneral.gettransportistasForeignKey();
			}

			if(!finalQueryGlobalTransporte.equals("NONE")) {
				this.transportesForeignKey=consignacionReturnGeneral.gettransportesForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyConsignacion()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
			this.addItemDefectoCombosForeignKeyUsuario();
			this.addItemDefectoCombosForeignKeyMoneda();
			this.addItemDefectoCombosForeignKeyEmpleado();
			this.addItemDefectoCombosForeignKeyTipoPrecio();
			this.addItemDefectoCombosForeignKeyFormato();
			this.addItemDefectoCombosForeignKeyCliente();
			this.addItemDefectoCombosForeignKeySubCliente();
			this.addItemDefectoCombosForeignKeyConsignatario();
			this.addItemDefectoCombosForeignKeyVendedor();
			this.addItemDefectoCombosForeignKeyEstadoPedido();
			this.addItemDefectoCombosForeignKeyTipoCambio();
			this.addItemDefectoCombosForeignKeyZona();
			this.addItemDefectoCombosForeignKeyCentroCosto();
			this.addItemDefectoCombosForeignKeyResponsable();
			this.addItemDefectoCombosForeignKeyTransportista();
			this.addItemDefectoCombosForeignKeyTransporte();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUsuario()throws Exception {
		try {

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				Usuario usuario=new Usuario();
				UsuarioConstantesFunciones.setUsuarioDescripcion(usuario,Constantes.SMENSAJE_ESCOJA_OPCION);
				usuario.setId(null);

				if(!UsuarioConstantesFunciones.ExisteEnLista(this.usuariosForeignKey,usuario,true)) {

					this.usuariosForeignKey.add(0,usuario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMoneda()throws Exception {
		try {

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				Moneda moneda=new Moneda();
				MonedaConstantesFunciones.setMonedaDescripcion(moneda,Constantes.SMENSAJE_ESCOJA_OPCION);
				moneda.setId(null);

				if(!MonedaConstantesFunciones.ExisteEnLista(this.monedasForeignKey,moneda,true)) {

					this.monedasForeignKey.add(0,moneda);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpleado()throws Exception {
		try {

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				Empleado empleado=new Empleado();
				EmpleadoConstantesFunciones.setEmpleadoDescripcion(empleado,Constantes.SMENSAJE_ESCOJA_OPCION);
				empleado.setId(null);

				if(!EmpleadoConstantesFunciones.ExisteEnLista(this.empleadosForeignKey,empleado,true)) {

					this.empleadosForeignKey.add(0,empleado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoPrecio()throws Exception {
		try {

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionTipoPrecio()) {
				TipoPrecio tipoprecio=new TipoPrecio();
				TipoPrecioConstantesFunciones.setTipoPrecioDescripcion(tipoprecio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoprecio.setId(null);

				if(!TipoPrecioConstantesFunciones.ExisteEnLista(this.tipopreciosForeignKey,tipoprecio,true)) {

					this.tipopreciosForeignKey.add(0,tipoprecio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFormato()throws Exception {
		try {

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				Formato formato=new Formato();
				FormatoConstantesFunciones.setFormatoDescripcion(formato,Constantes.SMENSAJE_ESCOJA_OPCION);
				formato.setId(null);

				if(!FormatoConstantesFunciones.ExisteEnLista(this.formatosForeignKey,formato,true)) {

					this.formatosForeignKey.add(0,formato);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCliente()throws Exception {
		try {

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				Cliente cliente=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(cliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				cliente.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientesForeignKey,cliente,true)) {

					this.clientesForeignKey.add(0,cliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySubCliente()throws Exception {
		try {

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionSubCliente()) {
				SubCliente subcliente=new SubCliente();
				SubClienteConstantesFunciones.setSubClienteDescripcion(subcliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				subcliente.setId(null);

				if(!SubClienteConstantesFunciones.ExisteEnLista(this.subclientesForeignKey,subcliente,true)) {

					this.subclientesForeignKey.add(0,subcliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyConsignatario()throws Exception {
		try {

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionConsignatario()) {
				Consignatario consignatario=new Consignatario();
				ConsignatarioConstantesFunciones.setConsignatarioDescripcion(consignatario,Constantes.SMENSAJE_ESCOJA_OPCION);
				consignatario.setId(null);

				if(!ConsignatarioConstantesFunciones.ExisteEnLista(this.consignatariosForeignKey,consignatario,true)) {

					this.consignatariosForeignKey.add(0,consignatario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyVendedor()throws Exception {
		try {

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {
				Vendedor vendedor=new Vendedor();
				VendedorConstantesFunciones.setVendedorDescripcion(vendedor,Constantes.SMENSAJE_ESCOJA_OPCION);
				vendedor.setId(null);

				if(!VendedorConstantesFunciones.ExisteEnLista(this.vendedorsForeignKey,vendedor,true)) {

					this.vendedorsForeignKey.add(0,vendedor);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoPedido()throws Exception {
		try {

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedido()) {
				EstadoPedido estadopedido=new EstadoPedido();
				EstadoPedidoConstantesFunciones.setEstadoPedidoDescripcion(estadopedido,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadopedido.setId(null);

				if(!EstadoPedidoConstantesFunciones.ExisteEnLista(this.estadopedidosForeignKey,estadopedido,true)) {

					this.estadopedidosForeignKey.add(0,estadopedido);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoCambio()throws Exception {
		try {

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				TipoCambio tipocambio=new TipoCambio();
				TipoCambioConstantesFunciones.setTipoCambioDescripcion(tipocambio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipocambio.setId(null);

				if(!TipoCambioConstantesFunciones.ExisteEnLista(this.tipocambiosForeignKey,tipocambio,true)) {

					this.tipocambiosForeignKey.add(0,tipocambio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyZona()throws Exception {
		try {

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionZona()) {
				Zona zona=new Zona();
				ZonaConstantesFunciones.setZonaDescripcion(zona,Constantes.SMENSAJE_ESCOJA_OPCION);
				zona.setId(null);

				if(!ZonaConstantesFunciones.ExisteEnLista(this.zonasForeignKey,zona,true)) {

					this.zonasForeignKey.add(0,zona);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCentroCosto()throws Exception {
		try {

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				CentroCosto centrocosto=new CentroCosto();
				CentroCostoConstantesFunciones.setCentroCostoDescripcion(centrocosto,Constantes.SMENSAJE_ESCOJA_OPCION);
				centrocosto.setId(null);

				if(!CentroCostoConstantesFunciones.ExisteEnLista(this.centrocostosForeignKey,centrocosto,true)) {

					this.centrocostosForeignKey.add(0,centrocosto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyResponsable()throws Exception {
		try {

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionResponsable()) {
				Responsable responsable=new Responsable();
				ResponsableConstantesFunciones.setResponsableDescripcion(responsable,Constantes.SMENSAJE_ESCOJA_OPCION);
				responsable.setId(null);

				if(!ResponsableConstantesFunciones.ExisteEnLista(this.responsablesForeignKey,responsable,true)) {

					this.responsablesForeignKey.add(0,responsable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransportista()throws Exception {
		try {

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionTransportista()) {
				Transportista transportista=new Transportista();
				TransportistaConstantesFunciones.setTransportistaDescripcion(transportista,Constantes.SMENSAJE_ESCOJA_OPCION);
				transportista.setId(null);

				if(!TransportistaConstantesFunciones.ExisteEnLista(this.transportistasForeignKey,transportista,true)) {

					this.transportistasForeignKey.add(0,transportista);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransporte()throws Exception {
		try {

			if(!this.consignacionSessionBean.getisBusquedaDesdeForeignKeySesionTransporte()) {
				Transporte transporte=new Transporte();
				TransporteConstantesFunciones.setTransporteDescripcion(transporte,Constantes.SMENSAJE_ESCOJA_OPCION);
				transporte.setId(null);

				if(!TransporteConstantesFunciones.ExisteEnLista(this.transportesForeignKey,transporte,true)) {

					this.transportesForeignKey.add(0,transporte);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyConsignacion()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyConsignacion(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyConsignacion()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
				this.setActualUsuarioForeignKey(this.parametroGeneralUsuario.getid_usuario(),false,"Formulario");
				this.setActualMonedaForeignKey(this.parametroGeneralUsuario.getid_moneda(),false,"Formulario");
			
			
				this.consignacion.setfecha_emision(this.parametroGeneralUsuario.getfecha_sistema());
				this.consignacion.setfecha_vencimiento(this.parametroGeneralUsuario.getfecha_sistema());
				this.consignacion.setfecha(this.parametroGeneralUsuario.getfecha_sistema());
				this.consignacion.setfecha_servidor(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyConsignacion();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyConsignacion(Consignacion consignacion)throws Exception {	
		try {
			
			this.setActualEmpleadoForeignKey(consignacion.getid_empleado(),false,"Formulario");
			this.setActualTipoPrecioForeignKey(consignacion.getid_tipo_precio(),false,"Formulario");
			this.setActualFormatoForeignKey(consignacion.getid_formato(),false,"Formulario");
			this.setActualClienteForeignKey(consignacion.getid_cliente(),false,"Formulario");
			this.setActualSubClienteForeignKey(consignacion.getid_sub_cliente(),false,"Formulario");
			this.setActualConsignatarioForeignKey(consignacion.getid_consignatario(),false,"Formulario");
			this.setActualVendedorForeignKey(consignacion.getid_vendedor(),false,"Formulario");
			this.setActualEstadoPedidoForeignKey(consignacion.getid_estado_pedido(),false,"Formulario");
			this.setActualTipoCambioForeignKey(consignacion.getid_tipo_cambio(),false,"Formulario");
			this.setActualZonaForeignKey(consignacion.getid_zona(),false,"Formulario");
			this.setActualCentroCostoForeignKey(consignacion.getid_centro_costo(),false,"Formulario");
			this.setActualResponsableForeignKey(consignacion.getid_responsable(),false,"Formulario");
			this.setActualTransportistaForeignKey(consignacion.getid_transportista(),false,"Formulario");
			this.setActualTransporteForeignKey(consignacion.getid_transporte(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyConsignacion(Consignacion consignacion,String sTipoEvento)throws Exception {	
		try {
			
			

				if(consignacion.getEmpleado()!=null && !sTipoEvento.equals("id_empleadoConsignacion")) { //sTipoEvento Evita Bucle Infinito

					this.empleadosForeignKey=new ArrayList<Empleado>();
					this.empleadosForeignKey.add(consignacion.getEmpleado());

					this.addItemDefectoCombosForeignKeyEmpleado();
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}

				if(consignacion.getCliente()!=null && !sTipoEvento.equals("id_clienteConsignacion")) { //sTipoEvento Evita Bucle Infinito

					this.clientesForeignKey=new ArrayList<Cliente>();
					this.clientesForeignKey.add(consignacion.getCliente());

					this.addItemDefectoCombosForeignKeyCliente();
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				if(consignacion.getVendedor()!=null && !sTipoEvento.equals("id_vendedorConsignacion")) { //sTipoEvento Evita Bucle Infinito

					this.vendedorsForeignKey=new ArrayList<Vendedor>();
					this.vendedorsForeignKey.add(consignacion.getVendedor());

					this.addItemDefectoCombosForeignKeyVendedor();
					this.cargarCombosFrameVendedorsForeignKey("Todos");
				}

				if(consignacion.getTipoCambio()!=null && !sTipoEvento.equals("id_tipo_cambioConsignacion")) { //sTipoEvento Evita Bucle Infinito

					this.tipocambiosForeignKey=new ArrayList<TipoCambio>();
					this.tipocambiosForeignKey.add(consignacion.getTipoCambio());

					this.addItemDefectoCombosForeignKeyTipoCambio();
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}

				if(consignacion.getCentroCosto()!=null && !sTipoEvento.equals("id_centro_costoConsignacion")) { //sTipoEvento Evita Bucle Infinito

					this.centrocostosForeignKey=new ArrayList<CentroCosto>();
					this.centrocostosForeignKey.add(consignacion.getCentroCosto());

					this.addItemDefectoCombosForeignKeyCentroCosto();
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyConsignacion()throws Exception {	
		try {
			
			this.setActualEmpleadoForeignKey(this.consignacionConstantesFunciones.getid_empleado(),false,"Formulario");
			this.setActualTipoPrecioForeignKey(this.consignacionConstantesFunciones.getid_tipo_precio(),false,"Formulario");
			this.setActualFormatoForeignKey(this.consignacionConstantesFunciones.getid_formato(),false,"Formulario");
			this.setActualClienteForeignKey(this.consignacionConstantesFunciones.getid_cliente(),false,"Formulario");
			this.setActualSubClienteForeignKey(this.consignacionConstantesFunciones.getid_sub_cliente(),false,"Formulario");
			this.setActualConsignatarioForeignKey(this.consignacionConstantesFunciones.getid_consignatario(),false,"Formulario");
			this.setActualVendedorForeignKey(this.consignacionConstantesFunciones.getid_vendedor(),false,"Formulario");
			this.setActualEstadoPedidoForeignKey(this.consignacionConstantesFunciones.getid_estado_pedido(),false,"Formulario");
			this.setActualTipoCambioForeignKey(this.consignacionConstantesFunciones.getid_tipo_cambio(),false,"Formulario");
			this.setActualZonaForeignKey(this.consignacionConstantesFunciones.getid_zona(),false,"Formulario");
			this.setActualCentroCostoForeignKey(this.consignacionConstantesFunciones.getid_centro_costo(),false,"Formulario");
			this.setActualResponsableForeignKey(this.consignacionConstantesFunciones.getid_responsable(),false,"Formulario");
			this.setActualTransportistaForeignKey(this.consignacionConstantesFunciones.getid_transportista(),false,"Formulario");
			this.setActualTransporteForeignKey(this.consignacionConstantesFunciones.getid_transporte(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyConsignacion()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormConsignacion!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_ejercicioConsignacion.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormConsignacion!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormConsignacion.jComboBoxid_periodoConsignacion.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}

				this.setActualUsuarioForeignKey(this.usuarioActual.getId(),false,"Formulario");
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyConsignacion()throws Exception {	
		try {
			
				this.setActualEstadoPedidoForeignKey(1L,false,"Formulario");
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyConsignacion()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroConsignacion()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyConsignacion()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");
			this.cargarCombosFrameUsuariosForeignKey("Todos");
			this.cargarCombosFrameMonedasForeignKey("Todos");
			this.cargarCombosFrameEmpleadosForeignKey("Todos");
			this.cargarCombosFrameTipoPreciosForeignKey("Todos");
			this.cargarCombosFrameFormatosForeignKey("Todos");
			this.cargarCombosFrameClientesForeignKey("Todos");
			this.cargarCombosFrameSubClientesForeignKey("Todos");
			this.cargarCombosFrameConsignatariosForeignKey("Todos");
			this.cargarCombosFrameVendedorsForeignKey("Todos");
			this.cargarCombosFrameEstadoPedidosForeignKey("Todos");
			this.cargarCombosFrameTipoCambiosForeignKey("Todos");
			this.cargarCombosFrameZonasForeignKey("Todos");
			this.cargarCombosFrameCentroCostosForeignKey("Todos");
			this.cargarCombosFrameResponsablesForeignKey("Todos");
			this.cargarCombosFrameTransportistasForeignKey("Todos");
			this.cargarCombosFrameTransportesForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyConsignacion(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUsuariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMonedasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoPreciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSubClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameConsignatariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameVendedorsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoPedidosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameZonasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameResponsablesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransportistasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransportesForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyConsignacion()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empresaConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empresaConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empresaConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sucursalConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sucursalConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sucursalConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_ejercicioConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_ejercicioConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxid_ejercicioConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_periodoConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_periodoConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxid_periodoConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_anioConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_anioConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxid_anioConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_mesConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_mesConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxid_mesConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_usuarioConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_usuarioConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxid_usuarioConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_monedaConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_monedaConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxid_monedaConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empleadoConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empleadoConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empleadoConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_precioConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_precioConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_precioConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_formatoConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_formatoConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxid_formatoConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_clienteConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_clienteConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxid_clienteConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sub_clienteConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sub_clienteConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sub_clienteConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_consignatarioConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_consignatarioConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxid_consignatarioConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_vendedorConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_vendedorConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxid_vendedorConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_estado_pedidoConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_estado_pedidoConsignacion.getItemCount()>0) {
				//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_estado_pedidoConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_cambioConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_cambioConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_cambioConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_zonaConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_zonaConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxid_zonaConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_centro_costoConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_centro_costoConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxid_centro_costoConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_responsableConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_responsableConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxid_responsableConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transportistaConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transportistaConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transportistaConsignacion.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transporteConsignacion!=null && this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transporteConsignacion.getItemCount()>0) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transporteConsignacion.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	












































	
	

	public ConsignacionBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public ConsignacionBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public ConsignacionBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.consignacionSessionBean=new ConsignacionSessionBean(); 
		this.consignacionConstantesFunciones=new ConsignacionConstantesFunciones(); 
		this.consignacionBean=new Consignacion();//(this.consignacionConstantesFunciones); 		
		this.consignacionReturnGeneral=new ConsignacionParameterReturnGeneral(); 
		
		this.consignacionSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.consignacionSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public ConsignacionBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public ConsignacionBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public ConsignacionBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessConsignacion(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			//OBLIGA VALIDA CON GUARDAR RELACIONES, TAMBIEN EN SWING
			conGuardarRelaciones=true;
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.consignacionConstantesFunciones=new ConsignacionConstantesFunciones(); 
			this.consignacionBean=new Consignacion();//this.consignacionConstantesFunciones); 			
			this.consignacionReturnGeneral=new ConsignacionParameterReturnGeneral(); 
		
			ConsignacionBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Consignacion Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.consignacion=new Consignacion();
			this.consignacions = new ArrayList<Consignacion>();
			this.consignacionsAux = new ArrayList<Consignacion>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic=new ConsignacionLogic();
				this.consignacionLogic.getNewConnexionToDeep("");
			}
			
			//this.consignacionSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.consignacionSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormConsignacion);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoConsignacion!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoConsignacion);	
					}
					
					if(this.jInternalFrameImportacionConsignacion!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionConsignacion);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByConsignacion!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByConsignacion);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormConsignacion!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormConsignacion);
				this.jInternalFrameDetalleFormConsignacion.setVisible(false);
				this.jInternalFrameDetalleFormConsignacion.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoConsignacion!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoConsignacion);
					this.jInternalFrameReporteDinamicoConsignacion.setVisible(false);
					this.jInternalFrameReporteDinamicoConsignacion.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionConsignacion!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionConsignacion);
					this.jInternalFrameImportacionConsignacion.setVisible(false);
					this.jInternalFrameImportacionConsignacion.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByConsignacion!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByConsignacion);
					this.jInternalFrameOrderByConsignacion.setVisible(false);
					this.jInternalFrameOrderByConsignacion.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idConsignacionActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=ConsignacionConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.consignacionReturnGeneral=new ConsignacionParameterReturnGeneral();
			
			this.consignacionParameterGeneral=new ConsignacionParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.consignacionLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.consignacionSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(ConsignacionJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.consignacionSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(DetalleConsignacionConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ConsignacionConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.consignacionSessionBean.getEsGuardarRelacionado(),this.consignacionSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ConsignacionConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.consignacionSessionBean.getEsGuardarRelacionado(),this.consignacionSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoConsignacion=false;
			this.isVisibilidadCeldaDuplicarConsignacion=true;
			this.isVisibilidadCeldaCopiarConsignacion=true;
			this.isVisibilidadCeldaVerFormConsignacion=true;
			this.isVisibilidadCeldaOrdenConsignacion=true;
			this.isVisibilidadCeldaNuevoRelacionesConsignacion=false;
			this.isVisibilidadCeldaModificarConsignacion=false;
			this.isVisibilidadCeldaActualizarConsignacion=false;
			this.isVisibilidadCeldaEliminarConsignacion=false;
			this.isVisibilidadCeldaCancelarConsignacion=false;
			this.isVisibilidadCeldaGuardarConsignacion=false;
			this.isVisibilidadCeldaGuardarCambiosConsignacion=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdCentroCosto=true;
			this.isVisibilidadFK_IdCliente=true;
			this.isVisibilidadFK_IdConsignatario=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpleado=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstadoPedido=true;
			this.isVisibilidadFK_IdFormato=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdMoneda=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdResponsable=true;
			this.isVisibilidadFK_IdSubCliente=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoCambio=true;
			this.isVisibilidadFK_IdTipoPrecio=true;
			this.isVisibilidadFK_IdTransporte=true;
			this.isVisibilidadFK_IdTransportista=true;
			this.isVisibilidadFK_IdUsuario=true;
			this.isVisibilidadFK_IdVendedor=true;
			this.isVisibilidadFK_IdZona=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesConsignacion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosConsignacion();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioConsignacion(false);
			
			this.setPermisosUsuarioConsignacion();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.consignacionSessionBean.getEsGuardarRelacionado() 
				|| (this.consignacionSessionBean.getEsGuardarRelacionado() && this.consignacionSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioConsignacionClasesRelacionadas();
			}
			
			if(this.consignacionSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioConsignacionClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosConsignacion();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualConsignacion();
			}
			
			if(!this.isPermisoBusquedaConsignacion) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasConsignacion.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.consignacionSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioConsignacion,this.isPermisoPaginacionMedioConsignacion,this.isPermisoPaginacionTodoConsignacion);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(ConsignacionConstantesFunciones.getTiposSeleccionarConsignacion());
				
				this.tiposColumnasSelect=ConsignacionConstantesFunciones.getTiposSeleccionarConsignacion(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectConsignacion();				
				//this.tiposRelacionesSelect=ConsignacionConstantesFunciones.getTiposRelacionesConsignacion(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.consignacionSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioConsignacion();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioConsignacion(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioConsignacion(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesConsignacion() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.detalleconsignacionLogic=new DetalleConsignacionLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			this.usuarioLogic=new UsuarioLogic();
			this.monedaLogic=new MonedaLogic();
			this.empleadoLogic=new EmpleadoLogic();
			this.tipoprecioLogic=new TipoPrecioLogic();
			this.formatoLogic=new FormatoLogic();
			this.clienteLogic=new ClienteLogic();
			this.subclienteLogic=new SubClienteLogic();
			this.consignatarioLogic=new ConsignatarioLogic();
			this.vendedorLogic=new VendedorLogic();
			this.estadopedidoLogic=new EstadoPedidoLogic();
			this.tipocambioLogic=new TipoCambioLogic();
			this.zonaLogic=new ZonaLogic();
			this.centrocostoLogic=new CentroCostoLogic();
			this.responsableLogic=new ResponsableLogic();
			this.transportistaLogic=new TransportistaLogic();
			this.transporteLogic=new TransporteLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				consignacionImplementable= (ConsignacionImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ConsignacionConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				consignacionImplementableHome= (ConsignacionImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ConsignacionConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.consignacions= new ArrayList<Consignacion>();
			this.consignacionsEliminados= new ArrayList<Consignacion>();
						
			this.isEsNuevoConsignacion=false;
			this.esParaAccionDesdeFormularioConsignacion=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idEmpleadoActual=0L;
			this.idClienteActual=0L;
			this.idVendedorActual=0L;
			this.idTipoCambioActual=0L;
			this.idCentroCostoActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			this.usuariosForeignKey=new ArrayList<Usuario>() ;
			this.monedasForeignKey=new ArrayList<Moneda>() ;
			this.empleadosForeignKey=new ArrayList<Empleado>() ;
			this.tipopreciosForeignKey=new ArrayList<TipoPrecio>() ;
			this.formatosForeignKey=new ArrayList<Formato>() ;
			this.clientesForeignKey=new ArrayList<Cliente>() ;
			this.subclientesForeignKey=new ArrayList<SubCliente>() ;
			this.consignatariosForeignKey=new ArrayList<Consignatario>() ;
			this.vendedorsForeignKey=new ArrayList<Vendedor>() ;
			this.estadopedidosForeignKey=new ArrayList<EstadoPedido>() ;
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>() ;
			this.zonasForeignKey=new ArrayList<Zona>() ;
			this.centrocostosForeignKey=new ArrayList<CentroCosto>() ;
			this.responsablesForeignKey=new ArrayList<Responsable>() ;
			this.transportistasForeignKey=new ArrayList<Transportista>() ;
			this.transportesForeignKey=new ArrayList<Transporte>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyConsignacion(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroConsignacion();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.consignacionSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			ConsignacionBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=ConsignacionConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesConsignacion("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingConsignacion(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormConsignacion!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioConsignacion();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioConsignacion();
			}
			
			ConsignacionBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasConsignacion.getTabCount(); i++) {
					this.jTabbedPaneBusquedasConsignacion.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasConsignacion.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessConsignacion(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga Consignacion: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectConsignacion() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(DetalleConsignacionConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(DetalleConsignacionConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesConsignacion")) {
				iIndex=this.jInternalFrameDetalleFormConsignacion.jTabbedPaneRelacionesConsignacion.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormConsignacion.jTabbedPaneRelacionesConsignacion.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();	
				
				

				if(sTitle.equals("Detalle Consignacions")) {
					if(!DetalleConsignacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessConsignacion();

						this.cargarParteTabPanelRelacionadaDetalleConsignacion(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessConsignacion();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaDetalleConsignacion(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormConsignacion.cargarSessionConBeanSwingJInternalFrameDetalleConsignacion(false,true,iIndex);
		this.jButtonDetalleConsignacionActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaDetalleConsignacion();

		//this.jTabbedPaneRelacionesConsignacion.updateUI();
		//this.jTabbedPaneRelacionesConsignacion.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesConsignacion.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("DetalleConsignacion")) {
				int row=this.jTableDatosConsignacion.getSelectedRow();
				jButtonDetalleConsignacionActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.consignacionSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Detalle Consignacion")) {

					if(this.isTienePermisosDetalleConsignacion && this.consignacionConstantesFunciones.mostrarDetalleConsignacionConsignacion && !ConsignacionConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Detalle Consignacions"+"("+DetalleConsignacionConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Detalle Consignacions");

						if(consignacionConstantesFunciones.resaltarDetalleConsignacionConsignacion!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(consignacionConstantesFunciones.resaltarDetalleConsignacionConsignacion);
						}

						jmenuItem.setEnabled(this.consignacionConstantesFunciones.activarDetalleConsignacionConsignacion);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"DetalleConsignacion"));

						

						this.jInternalFrameDetalleFormConsignacion.jmenuDetalleConsignacion.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyConsignacion(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyConsignacion(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyConsignacion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyConsignacionListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyConsignacion();
		
		this.cargarCombosFrameForeignKeyConsignacion();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyConsignacion();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyConsignacion();
		}
	}
	
	

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEmpleado(this.empleadosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoPrecio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoPrecioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoPrecio();
				this.cargarCombosFrameTipoPreciosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoPrecio(this.tipopreciosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormato(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFormato(this.formatosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCliente(this.clientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySubCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeySubClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeySubCliente();
				this.cargarCombosFrameSubClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaSubCliente(this.subclientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyConsignatario(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyConsignatarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyConsignatario();
				this.cargarCombosFrameConsignatariosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaConsignatario(this.consignatariosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyVendedor(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyVendedorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyVendedor();
				this.cargarCombosFrameVendedorsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaVendedor(this.vendedorsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedido(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoPedidoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoPedido();
				this.cargarCombosFrameEstadoPedidosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstadoPedido(this.estadopedidosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyZona(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyZonaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyZona();
				this.cargarCombosFrameZonasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaZona(this.zonasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCosto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyResponsable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyResponsableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyResponsable();
				this.cargarCombosFrameResponsablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaResponsable(this.responsablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransportista(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransportistaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransportista();
				this.cargarCombosFrameTransportistasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransportista(this.transportistasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransporte(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransporteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransporte();
				this.cargarCombosFrameTransportesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransporte(this.transportesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoConsignacionActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.consignacionSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormConsignacion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
			
			
			if(jTableDatosConsignacion.getRowCount()>=1) {
				jTableDatosConsignacion.removeRowSelectionInterval(0, jTableDatosConsignacion.getRowCount()-1);						
			}
			
			this.isEsNuevoConsignacion=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoConsignacion(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesConsignacion(true);			
			//this.consignacion=new Consignacion();
			//this.consignacion.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesConsignacion(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualConsignacion() ;
			
			if(ConsignacionJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleConsignacion(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.consignacion);	
			this.actualizarInformacion("INFO_PADRE",false,this.consignacion);				
			
			ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
			
			if(this.consignacionSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar Consignacion: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarConsignacionActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<Consignacion> consignacionsSeleccionados=new ArrayList<Consignacion>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosConsignacion.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosConsignacion.getSelectedRows().length;			
			}
			
			consignacionsSeleccionados=this.getConsignacionsSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoConsignacion--;			
				//Consignacion consignacionAux= new Consignacion();			
				//consignacionAux.setId(this.iIdNuevoConsignacion);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//Consignacion consignacionOrigen=new Consignacion();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(Consignacion consignacionOrigen : consignacionsSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							consignacionOrigen =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							consignacionOrigen =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaConsignacion();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.consignacion.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosConsignacion(consignacionOrigen,this.consignacion,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.consignacionLogic.getConsignacions().add(this.consignacionAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.consignacions.add(this.consignacionAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaConsignacion(false);
				
				this.jTableDatosConsignacion.setRowSelectionInterval(this.getIndiceNuevoConsignacion(), this.getIndiceNuevoConsignacion());
				
				int iLastRow =  this.jTableDatosConsignacion.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosConsignacion.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosConsignacion.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaConsignacion(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<Consignacion> consignacionsSeleccionados=new ArrayList<Consignacion>();									
		
			Consignacion consignacionOrigen=new Consignacion();
			Consignacion consignacionDestino=new Consignacion();
				
			consignacionsSeleccionados=this.getConsignacionsSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosConsignacion.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || consignacionsSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosConsignacion.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionOrigen =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						consignacionOrigen =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						consignacionDestino =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						consignacionDestino =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				consignacionOrigen =consignacionsSeleccionados.get(0);
				consignacionDestino =consignacionsSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosConsignacion(consignacionOrigen,consignacionDestino,true,false);
				
				consignacionDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(consignacionDestino,consignacionLogic.getConsignacions());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(consignacionDestino,consignacions);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaConsignacion(false);
				
				//this.jTableDatosConsignacion.setRowSelectionInterval(this.getIndiceNuevoConsignacion(), this.getIndiceNuevoConsignacion());
				
				int iLastRow =  this.jTableDatosConsignacion.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosConsignacion.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosConsignacion.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaConsignacion(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormConsignacion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormConsignacion.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesConsignacion.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasConsignacion.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesConsignacion.setVisible(!isVisible);
			this.jPanelPaginacionConsignacion.setVisible(!isVisible);
			this.jPanelAccionesConsignacion.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameConsignacion();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoConsignacion();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionConsignacion();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByConsignacion();
			
			this.abrirFrameOrderByConsignacion();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByConsignacion();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleConsignacion(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormConsignacion);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormConsignacion.isMaximum()) {
					this.jInternalFrameDetalleFormConsignacion.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormConsignacion.setSize(this.jInternalFrameDetalleFormConsignacion.iWidthFormulario,this.jInternalFrameDetalleFormConsignacion.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormConsignacion.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormConsignacion.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormConsignacion.isMaximum()) {
						this.jInternalFrameDetalleFormConsignacion.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormConsignacion.jContentPaneDetalleConsignacion.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormConsignacion.jTabbedPaneRelacionesConsignacion.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormConsignacion.jContentPaneDetalleConsignacion.getWidth(),ConsignacionConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormConsignacion.jTabbedPaneRelacionesConsignacion.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormConsignacion.jContentPaneDetalleConsignacion.getWidth(),ConsignacionConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormConsignacion.jTabbedPaneRelacionesConsignacion.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormConsignacion.jContentPaneDetalleConsignacion.getWidth(),ConsignacionConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(DetalleConsignacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaDetalleConsignacion();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormConsignacion.setVisible(true);
	        this.jInternalFrameDetalleFormConsignacion.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByConsignacion() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByConsignacion==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByConsignacion=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByConsignacion,false,this);
				} else {
					this.jInternalFrameOrderByConsignacion=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByConsignacion,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByConsignacion);
				this.jInternalFrameOrderByConsignacion.setVisible(false);
				this.jInternalFrameOrderByConsignacion.setSelected(false);
				
				this.jInternalFrameOrderByConsignacion.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByConsignacion"));
				
				this.inicializarActualizarBindingTablaOrderByConsignacion();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionConsignacion() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionConsignacion==null) {
				
				this.jInternalFrameImportacionConsignacion=new ImportacionJInternalFrame(ConsignacionConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionConsignacion);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionConsignacion);
				this.jInternalFrameImportacionConsignacion.setVisible(false);
				this.jInternalFrameImportacionConsignacion.setSelected(false);


				this.jInternalFrameImportacionConsignacion.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionConsignacion"));
				this.jInternalFrameImportacionConsignacion.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionConsignacion"));
				this.jInternalFrameImportacionConsignacion.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionConsignacion"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoConsignacion() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoConsignacion==null) {
				this.jInternalFrameReporteDinamicoConsignacion=new ReporteDinamicoJInternalFrame(ConsignacionConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoConsignacion);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoConsignacion);
				this.jInternalFrameReporteDinamicoConsignacion.setVisible(false);
				this.jInternalFrameReporteDinamicoConsignacion.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoConsignacion.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoConsignacion"));
				this.jInternalFrameReporteDinamicoConsignacion.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoConsignacion"));
				this.jInternalFrameReporteDinamicoConsignacion.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoConsignacion"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualConsignacion();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaDetalleConsignacion() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.jScrollPanelDatosDetalleConsignacion.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormConsignacion.jContentPaneDetalleConsignacion.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.jScrollPanelDatosDetalleConsignacion.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.jScrollPanelDatosDetalleConsignacion.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.jScrollPanelDatosDetalleConsignacion.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetalleConsignacion() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormConsignacion);
			
	       	this.jInternalFrameDetalleFormConsignacion.setVisible(false);
	        this.jInternalFrameDetalleFormConsignacion.setSelected(false);
			
			//this.jInternalFrameDetalleFormConsignacion.dispose();
			//this.jInternalFrameDetalleFormConsignacion=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoConsignacion() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoConsignacion.setVisible(true);
	        this.jInternalFrameReporteDinamicoConsignacion.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionConsignacion() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionConsignacion.setVisible(true);
	        this.jInternalFrameImportacionConsignacion.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByConsignacion() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByConsignacion.setVisible(true);
	        this.jInternalFrameOrderByConsignacion.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByConsignacion() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByConsignacion.setVisible(false);
	        this.jInternalFrameOrderByConsignacion.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoConsignacion() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoConsignacion.setVisible(false);
	        this.jInternalFrameReporteDinamicoConsignacion.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionConsignacion() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionConsignacion.setVisible(false);
	        this.jInternalFrameImportacionConsignacion.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeVendedor(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeVendedor);
						VendedorBeanSwingJInternalFrame vendedorBeanSwingJInternalFrame=new VendedorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						vendedorBeanSwingJInternalFrame.setJInternalFrameParent(this);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.sTipoBusqueda="Vendedor";
						}

						vendedorBeanSwingJInternalFrame.getTodosVendedorArbol();
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setVendedors(vendedorBeanSwingJInternalFrame.vendedorsArbol);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.CargarTreeVendedor();
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setVisible(true);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.jInternalFrameParent=this;
						TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
						TitledBorder titledBorderVendedor=(TitledBorder)vendedorBeanSwingJInternalFrame.jScrollPanelDatosVendedor.getBorder();

						titledBorderVendedor.setTitle(titledBorderConsignacion.getTitle() + " -> Vendedor");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,vendedorBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(vendedorBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeVendedor(VendedorBeanSwingJInternalFrame jInternalFrameTreeVendedor) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeVendedor);
						jInternalFrameTreeVendedor.setVisible(false);
						jInternalFrameTreeVendedor.setSelected(false);
						//jInternalFrameTreeVendedor.dispose();
						//jInternalFrameTreeVendedor=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCentroCosto(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCentroCosto);
						CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.sTipoBusqueda="CentroCosto";
						}

						centrocostoBeanSwingJInternalFrame.getTodosCentroCostoArbol();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setCentroCostos(centrocostoBeanSwingJInternalFrame.centrocostosArbol);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.CargarTreeCentroCosto();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setVisible(true);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.jInternalFrameParent=this;
						TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
						TitledBorder titledBorderCentroCosto=(TitledBorder)centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

						titledBorderCentroCosto.setTitle(titledBorderConsignacion.getTitle() + " -> Centro Costo");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,centrocostoBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(centrocostoBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCentroCosto(CentroCostoBeanSwingJInternalFrame jInternalFrameTreeCentroCosto) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCentroCosto);
						jInternalFrameTreeCentroCosto.setVisible(false);
						jInternalFrameTreeCentroCosto.setSelected(false);
						//jInternalFrameTreeCentroCosto.dispose();
						//jInternalFrameTreeCentroCosto=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarConsignacion(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarConsignacion(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesConsignacion(true);
			//this.isEsNuevoConsignacion=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesConsignacion("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesConsignacion(false) ;
			
			if(consignacionSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionSessionBean.getEsGuardarRelacionado() && DetalleConsignacionJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetalleConsignacionActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(ConsignacionJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleConsignacion(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualConsignacion(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaConsignacionActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarConsignacion(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormConsignacion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesConsignacion(true);
			//this.isEsNuevoConsignacion=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.consignacion.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesConsignacion("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesConsignacion(false) ;
			
			if(ConsignacionJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleConsignacion(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualConsignacion(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Empleado")) {
				if(!this.consignacionConstantesFunciones.cargarid_empleadoConsignacion) {
					this.cargarCombosEmpleadosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingConsignacion(false,false);
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_empleado (id);

				this.recargarComboTablaEmpleado(this.empleadosForeignKey);

			}
			
			if(sType.equals("Cliente")) {
				if(!this.consignacionConstantesFunciones.cargarid_clienteConsignacion) {
					this.cargarCombosClientesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingConsignacion(false,false);
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente (id);

				this.recargarComboTablaCliente(this.clientesForeignKey);

			}
			
			if(sType.equals("Vendedor")) {
				if(!this.consignacionConstantesFunciones.cargarid_vendedorConsignacion) {
					this.cargarCombosVendedorsForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingConsignacion(false,false);
					this.cargarCombosFrameVendedorsForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_vendedor (id);

				this.recargarComboTablaVendedor(this.vendedorsForeignKey);

			}
			
			if(sType.equals("TipoCambio")) {
				if(!this.consignacionConstantesFunciones.cargarid_tipo_cambioConsignacion) {
					this.cargarCombosTipoCambiosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingConsignacion(false,false);
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_tipo_cambio (id);

				this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

			}
			
			if(sType.equals("CentroCosto")) {
				if(!this.consignacionConstantesFunciones.cargarid_centro_costoConsignacion) {
					this.cargarCombosCentroCostosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingConsignacion(false,false);
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_centro_costo (id);

				this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
					
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
			
	
	public void recargarComboTablaEmpleado(List<Empleado> empleadosForeignKey)throws Exception{
		TableColumn tableColumnEmpleado=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDEMPLEADO));
		TableCellEditor tableCellEditorEmpleado =tableColumnEmpleado.getCellEditor();

		EmpleadoTableCell empleadoTableCellFk=(EmpleadoTableCell)tableCellEditorEmpleado;

		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.setempleadosForeignKey(empleadosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empleadoTableCellFk.setRowActual(intSelectedRow);
			//empleadoTableCellFk.setempleadosForeignKeyActual(empleadosForeignKey);
		//}


		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.RecargarEmpleadosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoPrecio(List<TipoPrecio> tipopreciosForeignKey)throws Exception{
		TableColumn tableColumnTipoPrecio=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDTIPOPRECIO));
		TableCellEditor tableCellEditorTipoPrecio =tableColumnTipoPrecio.getCellEditor();

		TipoPrecioTableCell tipoprecioTableCellFk=(TipoPrecioTableCell)tableCellEditorTipoPrecio;

		if(tipoprecioTableCellFk!=null) {
			tipoprecioTableCellFk.settipopreciosForeignKey(tipopreciosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoprecioTableCellFk.setRowActual(intSelectedRow);
			//tipoprecioTableCellFk.settipopreciosForeignKeyActual(tipopreciosForeignKey);
		//}


		if(tipoprecioTableCellFk!=null) {
			tipoprecioTableCellFk.RecargarTipoPreciosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFormato(List<Formato> formatosForeignKey)throws Exception{
		TableColumn tableColumnFormato=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDFORMATO));
		TableCellEditor tableCellEditorFormato =tableColumnFormato.getCellEditor();

		FormatoTableCell formatoTableCellFk=(FormatoTableCell)tableCellEditorFormato;

		if(formatoTableCellFk!=null) {
			formatoTableCellFk.setformatosForeignKey(formatosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//formatoTableCellFk.setRowActual(intSelectedRow);
			//formatoTableCellFk.setformatosForeignKeyActual(formatosForeignKey);
		//}


		if(formatoTableCellFk!=null) {
			formatoTableCellFk.RecargarFormatosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCliente(List<Cliente> clientesForeignKey)throws Exception{
		TableColumn tableColumnCliente=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDCLIENTE));
		TableCellEditor tableCellEditorCliente =tableColumnCliente.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorCliente;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientesForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaSubCliente(List<SubCliente> subclientesForeignKey)throws Exception{
		TableColumn tableColumnSubCliente=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDSUBCLIENTE));
		TableCellEditor tableCellEditorSubCliente =tableColumnSubCliente.getCellEditor();

		SubClienteTableCell subclienteTableCellFk=(SubClienteTableCell)tableCellEditorSubCliente;

		if(subclienteTableCellFk!=null) {
			subclienteTableCellFk.setsubclientesForeignKey(subclientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//subclienteTableCellFk.setRowActual(intSelectedRow);
			//subclienteTableCellFk.setsubclientesForeignKeyActual(subclientesForeignKey);
		//}


		if(subclienteTableCellFk!=null) {
			subclienteTableCellFk.RecargarSubClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaConsignatario(List<Consignatario> consignatariosForeignKey)throws Exception{
		TableColumn tableColumnConsignatario=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDCONSIGNATARIO));
		TableCellEditor tableCellEditorConsignatario =tableColumnConsignatario.getCellEditor();

		ConsignatarioTableCell consignatarioTableCellFk=(ConsignatarioTableCell)tableCellEditorConsignatario;

		if(consignatarioTableCellFk!=null) {
			consignatarioTableCellFk.setconsignatariosForeignKey(consignatariosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//consignatarioTableCellFk.setRowActual(intSelectedRow);
			//consignatarioTableCellFk.setconsignatariosForeignKeyActual(consignatariosForeignKey);
		//}


		if(consignatarioTableCellFk!=null) {
			consignatarioTableCellFk.RecargarConsignatariosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaVendedor(List<Vendedor> vendedorsForeignKey)throws Exception{
		TableColumn tableColumnVendedor=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDVENDEDOR));
		TableCellEditor tableCellEditorVendedor =tableColumnVendedor.getCellEditor();

		VendedorTableCell vendedorTableCellFk=(VendedorTableCell)tableCellEditorVendedor;

		if(vendedorTableCellFk!=null) {
			vendedorTableCellFk.setvendedorsForeignKey(vendedorsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//vendedorTableCellFk.setRowActual(intSelectedRow);
			//vendedorTableCellFk.setvendedorsForeignKeyActual(vendedorsForeignKey);
		//}


		if(vendedorTableCellFk!=null) {
			vendedorTableCellFk.RecargarVendedorsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoPedido(List<EstadoPedido> estadopedidosForeignKey)throws Exception{
		TableColumn tableColumnEstadoPedido=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDESTADOPEDIDO));
		TableCellEditor tableCellEditorEstadoPedido =tableColumnEstadoPedido.getCellEditor();

		EstadoPedidoTableCell estadopedidoTableCellFk=(EstadoPedidoTableCell)tableCellEditorEstadoPedido;

		if(estadopedidoTableCellFk!=null) {
			estadopedidoTableCellFk.setestadopedidosForeignKey(estadopedidosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadopedidoTableCellFk.setRowActual(intSelectedRow);
			//estadopedidoTableCellFk.setestadopedidosForeignKeyActual(estadopedidosForeignKey);
		//}


		if(estadopedidoTableCellFk!=null) {
			estadopedidoTableCellFk.RecargarEstadoPedidosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoCambio(List<TipoCambio> tipocambiosForeignKey)throws Exception{
		TableColumn tableColumnTipoCambio=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDTIPOCAMBIO));
		TableCellEditor tableCellEditorTipoCambio =tableColumnTipoCambio.getCellEditor();

		TipoCambioTableCell tipocambioTableCellFk=(TipoCambioTableCell)tableCellEditorTipoCambio;

		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.settipocambiosForeignKey(tipocambiosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipocambioTableCellFk.setRowActual(intSelectedRow);
			//tipocambioTableCellFk.settipocambiosForeignKeyActual(tipocambiosForeignKey);
		//}


		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.RecargarTipoCambiosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaZona(List<Zona> zonasForeignKey)throws Exception{
		TableColumn tableColumnZona=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDZONA));
		TableCellEditor tableCellEditorZona =tableColumnZona.getCellEditor();

		ZonaTableCell zonaTableCellFk=(ZonaTableCell)tableCellEditorZona;

		if(zonaTableCellFk!=null) {
			zonaTableCellFk.setzonasForeignKey(zonasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//zonaTableCellFk.setRowActual(intSelectedRow);
			//zonaTableCellFk.setzonasForeignKeyActual(zonasForeignKey);
		//}


		if(zonaTableCellFk!=null) {
			zonaTableCellFk.RecargarZonasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCentroCosto(List<CentroCosto> centrocostosForeignKey)throws Exception{
		TableColumn tableColumnCentroCosto=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDCENTROCOSTO));
		TableCellEditor tableCellEditorCentroCosto =tableColumnCentroCosto.getCellEditor();

		CentroCostoTableCell centrocostoTableCellFk=(CentroCostoTableCell)tableCellEditorCentroCosto;

		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.setcentrocostosForeignKey(centrocostosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//centrocostoTableCellFk.setRowActual(intSelectedRow);
			//centrocostoTableCellFk.setcentrocostosForeignKeyActual(centrocostosForeignKey);
		//}


		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.RecargarCentroCostosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaResponsable(List<Responsable> responsablesForeignKey)throws Exception{
		TableColumn tableColumnResponsable=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDRESPONSABLE));
		TableCellEditor tableCellEditorResponsable =tableColumnResponsable.getCellEditor();

		ResponsableTableCell responsableTableCellFk=(ResponsableTableCell)tableCellEditorResponsable;

		if(responsableTableCellFk!=null) {
			responsableTableCellFk.setresponsablesForeignKey(responsablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//responsableTableCellFk.setRowActual(intSelectedRow);
			//responsableTableCellFk.setresponsablesForeignKeyActual(responsablesForeignKey);
		//}


		if(responsableTableCellFk!=null) {
			responsableTableCellFk.RecargarResponsablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransportista(List<Transportista> transportistasForeignKey)throws Exception{
		TableColumn tableColumnTransportista=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDTRANSPORTISTA));
		TableCellEditor tableCellEditorTransportista =tableColumnTransportista.getCellEditor();

		TransportistaTableCell transportistaTableCellFk=(TransportistaTableCell)tableCellEditorTransportista;

		if(transportistaTableCellFk!=null) {
			transportistaTableCellFk.settransportistasForeignKey(transportistasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transportistaTableCellFk.setRowActual(intSelectedRow);
			//transportistaTableCellFk.settransportistasForeignKeyActual(transportistasForeignKey);
		//}


		if(transportistaTableCellFk!=null) {
			transportistaTableCellFk.RecargarTransportistasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransporte(List<Transporte> transportesForeignKey)throws Exception{
		TableColumn tableColumnTransporte=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDTRANSPORTE));
		TableCellEditor tableCellEditorTransporte =tableColumnTransporte.getCellEditor();

		TransporteTableCell transporteTableCellFk=(TransporteTableCell)tableCellEditorTransporte;

		if(transporteTableCellFk!=null) {
			transporteTableCellFk.settransportesForeignKey(transportesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosConsignacion.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transporteTableCellFk.setRowActual(intSelectedRow);
			//transporteTableCellFk.settransportesForeignKeyActual(transportesForeignKey);
		//}


		if(transporteTableCellFk!=null) {
			transporteTableCellFk.RecargarTransportesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_empleado (Long id) throws Exception {
		this.setActualEmpleadoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cliente (Long id) throws Exception {
		this.setActualClienteForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_vendedor (Long id) throws Exception {
		this.setActualVendedorForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_tipo_cambio (Long id) throws Exception {
		this.setActualTipoCambioForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_centro_costo (Long id) throws Exception {
		this.setActualCentroCostoForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesConsignacion(false);
			
			//if(!this.isEsNuevoConsignacion) {								
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(ConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				
			}
			
			if(this.permiteMantenimiento(this.consignacion)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.consignacionSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoConsignacion=true;
					this.inicializarActualizarBindingTablaConsignacion(false);
					this.isEsNuevoConsignacion=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoConsignacion=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoConsignacion=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesConsignacion(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualConsignacion(false);
				
				this.habilitarDeshabilitarControlesConsignacion(false);
			
												
				
				if(ConsignacionJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleConsignacion();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoConsignacionActionPerformed(evt,consignacionSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualConsignacion(this.consignacion,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,consignacionSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.consignacion.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(Consignacion.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Consignacion.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarConsignacionActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				this.consignacion.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				this.consignacion.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.consignacion)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.consignacionSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((ConsignacionModel) this.jTableDatosConsignacion.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoConsignacion=true;
				this.inicializarActualizarBindingTablaConsignacion(false);
				this.isEsNuevoConsignacion=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesConsignacion(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualConsignacion(false);
				
				this.habilitarDeshabilitarControlesConsignacion(false);
				
				
				
				if(ConsignacionJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleConsignacion();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarConsignacionActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosConsignacion.getRowCount()>=1) {
				jTableDatosConsignacion.removeRowSelectionInterval(0, jTableDatosConsignacion.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesConsignacion(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaConsignacion(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesConsignacion(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualConsignacion(false) ;
			
			this.isEsNuevoConsignacion=false;
			
			if(ConsignacionJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleConsignacion();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosConsignacionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingConsignacion(false);
				
				//SI ES MANUAL
				if(ConsignacionJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualConsignacion();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosConsignacionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoConsignacion--;			
			//Consignacion consignacionAux= new Consignacion();			
			//consignacionAux.setId(this.iIdNuevoConsignacion);
			
			if(this.jInternalFrameDetalleFormConsignacion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaConsignacion();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
			
			this.consignacion.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.consignacionLogic.getConsignacions().add(this.consignacionAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.consignacions.add(this.consignacionAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaConsignacion(false);
			
			this.jTableDatosConsignacion.setRowSelectionInterval(this.getIndiceNuevoConsignacion(), this.getIndiceNuevoConsignacion());
			
			int iLastRow =  this.jTableDatosConsignacion.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosConsignacion.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosConsignacion.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaConsignacion(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionConsignacionActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingConsignacion(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingConsignacion(false);
			
			//SI ES MANUAL
			if(ConsignacionJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualConsignacion();
			}
			
			//this.abrirFrameTreeConsignacion();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionConsignacionActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE ConsignacionS ?", "MANTENIMIENTO DE Consignacion", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionConsignacion.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralConsignacion();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.consignacionReturnGeneral=consignacionLogic.procesarImportacionConsignacionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.consignacionParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarConsignacionReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionConsignacionActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionConsignacion.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionConsignacion.setFileImportacion(this.jInternalFrameImportacionConsignacion.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionConsignacion.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionConsignacion.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionConsignacion.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionConsignacion.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoConsignacionActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<Consignacion> consignacionsSeleccionados=new ArrayList<Consignacion>();		

		consignacionsSeleccionados=this.getConsignacionsSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoConsignacion.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoConsignacion.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("ConsignacionBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"ConsignacionBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteConsignacions("Todos",consignacionsSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.consignacionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Consignacion",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoConsignacion.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoConsignacion.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ConsignacionConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IDUSUARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Usuario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Usuario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Usuario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Usuario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_NUMERO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mero_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mero_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mero_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mero_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_NUMEROAUTORIZACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroAutorizacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroAutorizacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroAutorizacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroAutorizacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_FECHAEMISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEmision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEmision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEmision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEmision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaVencimiento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaVencimiento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaVencimiento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaVencimiento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IDMONEDA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Moneda_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Moneda_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Moneda_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Moneda_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_COTIZACION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tizacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tizacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tizacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tizacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IDEMPLEADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empleado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empleado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empleado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empleado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IDTIPOPRECIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoPrecio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoPrecio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoPrecio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoPrecio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IDFORMATO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Formato_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Formato_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Formato_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Formato_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_DIRECCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_reccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_reccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_reccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_reccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IDCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_TELEFONO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lefono_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lefono_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lefono_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lefono_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_RUC:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_c_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_c_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_c_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_c_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IDSUBCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_SubCliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_SubCliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_SubCliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_SubCliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IDCONSIGNATARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Consignatario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Consignatario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Consignatario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Consignatario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IDVENDEDOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Vendedor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Vendedor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Vendedor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Vendedor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IDESTADOPEDIDO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoPedido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoPedido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoPedido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoPedido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuentoPorcentaje_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuentoPorcentaje_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuentoPorcentaje_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuentoPorcentaje_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_TOTALCONIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talConIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talConIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talConIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talConIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_SUMAN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_man_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_man_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_man_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_man_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuentoValor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuentoValor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuentoValor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuentoValor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_TOTALSINIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talSinIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talSinIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talSinIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talSinIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_TOTALDESCUENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talDescuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talDescuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talDescuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talDescuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_FLETE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ete_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ete_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ete_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ete_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_TOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_SUBTOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_btotal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_btotal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_btotal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_btotal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_OTRO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ro_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ro_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ro_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ro_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_FINANCIAMIENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nanciamiento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nanciamiento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nanciamiento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nanciamiento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_a_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_a_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_a_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_a_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_ICE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_e_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_e_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_e_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_e_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_MONTORETENCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntoRetencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntoRetencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntoRetencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntoRetencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoCambio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoCambio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoCambio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoCambio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_NUMEROFUE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroFue_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroFue_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroFue_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroFue_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IDZONA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Zona_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Zona_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Zona_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Zona_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_FECHA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cha_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cha_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cha_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cha_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IDCENTROCOSTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CentroCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CentroCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CentroCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CentroCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_FECHASERVIDOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaServidor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaServidor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaServidor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaServidor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IDRESPONSABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Responsable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Responsable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Responsable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Responsable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_HORAINICIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_raInicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_raInicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_raInicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_raInicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_HORAFIN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_raFin_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_raFin_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_raFin_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_raFin_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IDTRANSPORTISTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transportista_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transportista_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transportista_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transportista_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ConsignacionConstantesFunciones.LABEL_IDTRANSPORTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transporte_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transporte_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transporte_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transporte_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoConsignacion.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoConsignacion.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoConsignacion.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case ConsignacionConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoria="id_usuario";
					break;

				case ConsignacionConstantesFunciones.LABEL_NUMERO:
					sNombreCampoCategoria="numero";
					break;

				case ConsignacionConstantesFunciones.LABEL_NUMEROAUTORIZACION:
					sNombreCampoCategoria="numero_autorizacion";
					break;

				case ConsignacionConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoria="fecha_emision";
					break;

				case ConsignacionConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					sNombreCampoCategoria="fecha_vencimiento";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoria="id_moneda";
					break;

				case ConsignacionConstantesFunciones.LABEL_COTIZACION:
					sNombreCampoCategoria="cotizacion";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoria="id_empleado";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDTIPOPRECIO:
					sNombreCampoCategoria="id_tipo_precio";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoria="id_formato";
					break;

				case ConsignacionConstantesFunciones.LABEL_DIRECCION:
					sNombreCampoCategoria="direccion";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoria="id_cliente";
					break;

				case ConsignacionConstantesFunciones.LABEL_TELEFONO:
					sNombreCampoCategoria="telefono";
					break;

				case ConsignacionConstantesFunciones.LABEL_RUC:
					sNombreCampoCategoria="ruc";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDSUBCLIENTE:
					sNombreCampoCategoria="id_sub_cliente";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDCONSIGNATARIO:
					sNombreCampoCategoria="id_consignatario";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDVENDEDOR:
					sNombreCampoCategoria="id_vendedor";
					break;

				case ConsignacionConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDESTADOPEDIDO:
					sNombreCampoCategoria="id_estado_pedido";
					break;

				case ConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					sNombreCampoCategoria="descuento_porcentaje";
					break;

				case ConsignacionConstantesFunciones.LABEL_TOTALCONIVA:
					sNombreCampoCategoria="total_con_iva";
					break;

				case ConsignacionConstantesFunciones.LABEL_SUMAN:
					sNombreCampoCategoria="suman";
					break;

				case ConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR:
					sNombreCampoCategoria="descuento_valor";
					break;

				case ConsignacionConstantesFunciones.LABEL_TOTALSINIVA:
					sNombreCampoCategoria="total_sin_iva";
					break;

				case ConsignacionConstantesFunciones.LABEL_TOTALDESCUENTO:
					sNombreCampoCategoria="total_descuento";
					break;

				case ConsignacionConstantesFunciones.LABEL_FLETE:
					sNombreCampoCategoria="flete";
					break;

				case ConsignacionConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoria="total";
					break;

				case ConsignacionConstantesFunciones.LABEL_SUBTOTAL:
					sNombreCampoCategoria="subtotal";
					break;

				case ConsignacionConstantesFunciones.LABEL_OTRO:
					sNombreCampoCategoria="otro";
					break;

				case ConsignacionConstantesFunciones.LABEL_FINANCIAMIENTO:
					sNombreCampoCategoria="financiamiento";
					break;

				case ConsignacionConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoria="iva";
					break;

				case ConsignacionConstantesFunciones.LABEL_ICE:
					sNombreCampoCategoria="ice";
					break;

				case ConsignacionConstantesFunciones.LABEL_MONTORETENCION:
					sNombreCampoCategoria="monto_retencion";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoria="id_tipo_cambio";
					break;

				case ConsignacionConstantesFunciones.LABEL_NUMEROFUE:
					sNombreCampoCategoria="numero_fue";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDZONA:
					sNombreCampoCategoria="id_zona";
					break;

				case ConsignacionConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoria="fecha";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoria="id_centro_costo";
					break;

				case ConsignacionConstantesFunciones.LABEL_FECHASERVIDOR:
					sNombreCampoCategoria="fecha_servidor";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDRESPONSABLE:
					sNombreCampoCategoria="id_responsable";
					break;

				case ConsignacionConstantesFunciones.LABEL_HORAINICIO:
					sNombreCampoCategoria="hora_inicio";
					break;

				case ConsignacionConstantesFunciones.LABEL_HORAFIN:
					sNombreCampoCategoria="hora_fin";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDTRANSPORTISTA:
					sNombreCampoCategoria="id_transportista";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDTRANSPORTE:
					sNombreCampoCategoria="id_transporte";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoConsignacion.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case ConsignacionConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoriaValor="id_usuario";
					break;

				case ConsignacionConstantesFunciones.LABEL_NUMERO:
					sNombreCampoCategoriaValor="numero";
					break;

				case ConsignacionConstantesFunciones.LABEL_NUMEROAUTORIZACION:
					sNombreCampoCategoriaValor="numero_autorizacion";
					break;

				case ConsignacionConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoriaValor="fecha_emision";
					break;

				case ConsignacionConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					sNombreCampoCategoriaValor="fecha_vencimiento";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoriaValor="id_moneda";
					break;

				case ConsignacionConstantesFunciones.LABEL_COTIZACION:
					sNombreCampoCategoriaValor="cotizacion";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoriaValor="id_empleado";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDTIPOPRECIO:
					sNombreCampoCategoriaValor="id_tipo_precio";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoriaValor="id_formato";
					break;

				case ConsignacionConstantesFunciones.LABEL_DIRECCION:
					sNombreCampoCategoriaValor="direccion";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoriaValor="id_cliente";
					break;

				case ConsignacionConstantesFunciones.LABEL_TELEFONO:
					sNombreCampoCategoriaValor="telefono";
					break;

				case ConsignacionConstantesFunciones.LABEL_RUC:
					sNombreCampoCategoriaValor="ruc";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDSUBCLIENTE:
					sNombreCampoCategoriaValor="id_sub_cliente";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDCONSIGNATARIO:
					sNombreCampoCategoriaValor="id_consignatario";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDVENDEDOR:
					sNombreCampoCategoriaValor="id_vendedor";
					break;

				case ConsignacionConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDESTADOPEDIDO:
					sNombreCampoCategoriaValor="id_estado_pedido";
					break;

				case ConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					sNombreCampoCategoriaValor="descuento_porcentaje";
					break;

				case ConsignacionConstantesFunciones.LABEL_TOTALCONIVA:
					sNombreCampoCategoriaValor="total_con_iva";
					break;

				case ConsignacionConstantesFunciones.LABEL_SUMAN:
					sNombreCampoCategoriaValor="suman";
					break;

				case ConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR:
					sNombreCampoCategoriaValor="descuento_valor";
					break;

				case ConsignacionConstantesFunciones.LABEL_TOTALSINIVA:
					sNombreCampoCategoriaValor="total_sin_iva";
					break;

				case ConsignacionConstantesFunciones.LABEL_TOTALDESCUENTO:
					sNombreCampoCategoriaValor="total_descuento";
					break;

				case ConsignacionConstantesFunciones.LABEL_FLETE:
					sNombreCampoCategoriaValor="flete";
					break;

				case ConsignacionConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoriaValor="total";
					break;

				case ConsignacionConstantesFunciones.LABEL_SUBTOTAL:
					sNombreCampoCategoriaValor="subtotal";
					break;

				case ConsignacionConstantesFunciones.LABEL_OTRO:
					sNombreCampoCategoriaValor="otro";
					break;

				case ConsignacionConstantesFunciones.LABEL_FINANCIAMIENTO:
					sNombreCampoCategoriaValor="financiamiento";
					break;

				case ConsignacionConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoriaValor="iva";
					break;

				case ConsignacionConstantesFunciones.LABEL_ICE:
					sNombreCampoCategoriaValor="ice";
					break;

				case ConsignacionConstantesFunciones.LABEL_MONTORETENCION:
					sNombreCampoCategoriaValor="monto_retencion";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoriaValor="id_tipo_cambio";
					break;

				case ConsignacionConstantesFunciones.LABEL_NUMEROFUE:
					sNombreCampoCategoriaValor="numero_fue";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDZONA:
					sNombreCampoCategoriaValor="id_zona";
					break;

				case ConsignacionConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoriaValor="fecha";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoriaValor="id_centro_costo";
					break;

				case ConsignacionConstantesFunciones.LABEL_FECHASERVIDOR:
					sNombreCampoCategoriaValor="fecha_servidor";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDRESPONSABLE:
					sNombreCampoCategoriaValor="id_responsable";
					break;

				case ConsignacionConstantesFunciones.LABEL_HORAINICIO:
					sNombreCampoCategoriaValor="hora_inicio";
					break;

				case ConsignacionConstantesFunciones.LABEL_HORAFIN:
					sNombreCampoCategoriaValor="hora_fin";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDTRANSPORTISTA:
					sNombreCampoCategoriaValor="id_transportista";
					break;

				case ConsignacionConstantesFunciones.LABEL_IDTRANSPORTE:
					sNombreCampoCategoriaValor="id_transporte";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoConsignacion.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoConsignacion.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ConsignacionConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case ConsignacionConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case ConsignacionConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case ConsignacionConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case ConsignacionConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case ConsignacionConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case ConsignacionConstantesFunciones.LABEL_IDUSUARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Usuario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_usuario");
					break;

				case ConsignacionConstantesFunciones.LABEL_NUMERO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero");
					break;

				case ConsignacionConstantesFunciones.LABEL_NUMEROAUTORIZACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero PreImpreso",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_autorizacion");
					break;

				case ConsignacionConstantesFunciones.LABEL_FECHAEMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Emision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_emision");
					break;

				case ConsignacionConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Vencimiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_vencimiento");
					break;

				case ConsignacionConstantesFunciones.LABEL_IDMONEDA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Moneda",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_moneda");
					break;

				case ConsignacionConstantesFunciones.LABEL_COTIZACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cotizacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cotizacion");
					break;

				case ConsignacionConstantesFunciones.LABEL_IDEMPLEADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empleado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empleado");
					break;

				case ConsignacionConstantesFunciones.LABEL_IDTIPOPRECIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Precio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_precio");
					break;

				case ConsignacionConstantesFunciones.LABEL_IDFORMATO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Formato",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_formato");
					break;

				case ConsignacionConstantesFunciones.LABEL_DIRECCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Direccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"direccion");
					break;

				case ConsignacionConstantesFunciones.LABEL_IDCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente");
					break;

				case ConsignacionConstantesFunciones.LABEL_TELEFONO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Telefono",sNombreCampoCategoria,sNombreCampoCategoriaValor,"telefono");
					break;

				case ConsignacionConstantesFunciones.LABEL_RUC:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ruc",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ruc");
					break;

				case ConsignacionConstantesFunciones.LABEL_IDSUBCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sub Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sub_cliente");
					break;

				case ConsignacionConstantesFunciones.LABEL_IDCONSIGNATARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Consignatario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_consignatario");
					break;

				case ConsignacionConstantesFunciones.LABEL_IDVENDEDOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Vendedor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_vendedor");
					break;

				case ConsignacionConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case ConsignacionConstantesFunciones.LABEL_IDESTADOPEDIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado Pedido",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_pedido");
					break;

				case ConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Dscto %",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento_porcentaje");
					break;

				case ConsignacionConstantesFunciones.LABEL_TOTALCONIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Con Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_con_iva");
					break;

				case ConsignacionConstantesFunciones.LABEL_SUMAN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Suman",sNombreCampoCategoria,sNombreCampoCategoriaValor,"suman");
					break;

				case ConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Dscto General",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento_valor");
					break;

				case ConsignacionConstantesFunciones.LABEL_TOTALSINIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Sin Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_sin_iva");
					break;

				case ConsignacionConstantesFunciones.LABEL_TOTALDESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Descuento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_descuento");
					break;

				case ConsignacionConstantesFunciones.LABEL_FLETE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Flete",sNombreCampoCategoria,sNombreCampoCategoriaValor,"flete");
					break;

				case ConsignacionConstantesFunciones.LABEL_TOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total");
					break;

				case ConsignacionConstantesFunciones.LABEL_SUBTOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Subtotal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"subtotal");
					break;

				case ConsignacionConstantesFunciones.LABEL_OTRO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Otro",sNombreCampoCategoria,sNombreCampoCategoriaValor,"otro");
					break;

				case ConsignacionConstantesFunciones.LABEL_FINANCIAMIENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Financiamiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"financiamiento");
					break;

				case ConsignacionConstantesFunciones.LABEL_IVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"iva");
					break;

				case ConsignacionConstantesFunciones.LABEL_ICE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ice",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ice");
					break;

				case ConsignacionConstantesFunciones.LABEL_MONTORETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"monto_retencion");
					break;

				case ConsignacionConstantesFunciones.LABEL_IDTIPOCAMBIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Cambio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_cambio");
					break;

				case ConsignacionConstantesFunciones.LABEL_NUMEROFUE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Fue",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_fue");
					break;

				case ConsignacionConstantesFunciones.LABEL_IDZONA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Zona",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_zona");
					break;

				case ConsignacionConstantesFunciones.LABEL_FECHA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha");
					break;

				case ConsignacionConstantesFunciones.LABEL_IDCENTROCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Centro Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_centro_costo");
					break;

				case ConsignacionConstantesFunciones.LABEL_FECHASERVIDOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Servidor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_servidor");
					break;

				case ConsignacionConstantesFunciones.LABEL_IDRESPONSABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Responsable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_responsable");
					break;

				case ConsignacionConstantesFunciones.LABEL_HORAINICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Hora Inicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"hora_inicio");
					break;

				case ConsignacionConstantesFunciones.LABEL_HORAFIN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Hora Fin",sNombreCampoCategoria,sNombreCampoCategoriaValor,"hora_fin");
					break;

				case ConsignacionConstantesFunciones.LABEL_IDTRANSPORTISTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transportista",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transportista");
					break;

				case ConsignacionConstantesFunciones.LABEL_IDTRANSPORTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transporte",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transporte");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoConsignacionActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<Consignacion> consignacionsSeleccionados=new ArrayList<Consignacion>();		
		
		consignacionsSeleccionados=this.getConsignacionsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"consignacion";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("Consignacions");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoConsignacion.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoConsignacion.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case ConsignacionConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IDUSUARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDUSUARIO);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getusuario_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_NUMERO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_NUMERO);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getnumero());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_NUMEROAUTORIZACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_NUMEROAUTORIZACION);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getnumero_autorizacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_FECHAEMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_FECHAEMISION);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getfecha_emision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_FECHAVENCIMIENTO);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getfecha_vencimiento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IDMONEDA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDMONEDA);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getmoneda_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_COTIZACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_COTIZACION);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getcotizacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IDEMPLEADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDEMPLEADO);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getempleado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IDTIPOPRECIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDTIPOPRECIO);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.gettipoprecio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IDFORMATO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDFORMATO);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getformato_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_DIRECCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_DIRECCION);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getdireccion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IDCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDCLIENTE);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_TELEFONO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_TELEFONO);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.gettelefono());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_RUC:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_RUC);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getruc());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IDSUBCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDSUBCLIENTE);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getsubcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IDCONSIGNATARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDCONSIGNATARIO);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getconsignatario_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IDVENDEDOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDVENDEDOR);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getvendedor_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IDESTADOPEDIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDESTADOPEDIDO);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getestadopedido_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getdescuento_porcentaje());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_TOTALCONIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_TOTALCONIVA);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.gettotal_con_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_SUMAN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_SUMAN);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getsuman());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getdescuento_valor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_TOTALSINIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_TOTALSINIVA);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.gettotal_sin_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_TOTALDESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_TOTALDESCUENTO);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.gettotal_descuento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_FLETE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_FLETE);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getflete());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_TOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_TOTAL);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.gettotal());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_SUBTOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_SUBTOTAL);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getsubtotal());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_OTRO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_OTRO);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getotro());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_FINANCIAMIENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_FINANCIAMIENTO);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getfinanciamiento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IVA);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getiva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_ICE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_ICE);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getice());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_MONTORETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_MONTORETENCION);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getmonto_retencion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDTIPOCAMBIO);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.gettipocambio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_NUMEROFUE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_NUMEROFUE);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getnumero_fue());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IDZONA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDZONA);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getzona_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_FECHA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_FECHA);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getfecha());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IDCENTROCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDCENTROCOSTO);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getcentrocosto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_FECHASERVIDOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_FECHASERVIDOR);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getfecha_servidor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IDRESPONSABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDRESPONSABLE);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.getresponsable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_HORAINICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_HORAINICIO);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.gethora_inicio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_HORAFIN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_HORAFIN);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.gethora_fin());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IDTRANSPORTISTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDTRANSPORTISTA);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.gettransportista_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ConsignacionConstantesFunciones.LABEL_IDTRANSPORTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDTRANSPORTE);
					iRow++;

					for(Consignacion consignacion:consignacionsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(consignacion.gettransporte_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelConsignacion(row);				
			//	iRow++;
			//}				
			
			//for(Consignacion consignacionAux:consignacionsSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelConsignacion(consignacionAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.consignacionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Consignacion",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingConsignacion(false);
			
			//SI ES MANUAL
			if(ConsignacionJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualConsignacion();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresConsignacionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingConsignacion(false);
			
			//SI ES MANUAL
			if(ConsignacionJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualConsignacion();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesConsignacionActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingConsignacion(false);
			
			//SI ES MANUAL
			if(ConsignacionJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualConsignacion();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaConsignacion() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosConsignacion.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosConsignacion.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosConsignacion.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosConsignacion.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosConsignacion.setMinimumSize(dimensionMinimum);
		this.jTableDatosConsignacion.setMaximumSize(dimensionMaximum);
		this.jTableDatosConsignacion.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingConsignacion(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingConsignacion(esInicializar,true);
	}
	
	public void inicializarActualizarBindingConsignacion(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaConsignacion(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesConsignacion(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.consignacionSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasConsignacion(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesConsignacion(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesConsignacion(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !ConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!ConsignacionJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualConsignacion() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaConsignacion();
		
		this.inicializarActualizarBindingBotonesManualConsignacion(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.consignacionSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualConsignacion();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesConsignacion() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualConsignacion(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualConsignacion(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosConsignacion.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosConsignacion.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteConsignacion.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormConsignacion!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormConsignacion.jCheckBoxPostAccionNuevoConsignacion.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormConsignacion.jCheckBoxPostAccionSinCerrarConsignacion.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormConsignacion.jCheckBoxPostAccionSinMensajeConsignacion.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosConsignacion.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosConsignacion.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteConsignacion.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormConsignacion!=null) {
				this.jInternalFrameDetalleFormConsignacion.jCheckBoxPostAccionNuevoConsignacion.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormConsignacion.jCheckBoxPostAccionSinCerrarConsignacion.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormConsignacion.jCheckBoxPostAccionSinMensajeConsignacion.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionConsignacion.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionConsignacion.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormConsignacion!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormConsignacion.jComboBoxTiposAccionesFormularioConsignacion.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesConsignacion.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoConsignacion!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoConsignacion.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesConsignacion.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesConsignacion.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarConsignacion.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesConsignacion.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoConsignacion!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoConsignacion.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesConsignacion.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralConsignacion.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesConsignacion(Boolean esInicializar) throws Exception {
		try	{	
			if(ConsignacionJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualConsignacion(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesConsignacion() throws Exception {
		try	{
			if(ConsignacionJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualConsignacion();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleConsignacion() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormConsignacion.jComboBoxTiposAccionesFormularioConsignacion.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormConsignacion.jComboBoxTiposAccionesFormularioConsignacion.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualConsignacion() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesConsignacion.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesConsignacion.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesConsignacion.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesConsignacion.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesConsignacion.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesConsignacion.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionConsignacion.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionConsignacion.addItem(reporte);
			}
			
			
			if(!this.consignacionSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionConsignacion.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionConsignacion.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesConsignacion.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesConsignacion.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesConsignacion.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesConsignacion.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormConsignacion!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormConsignacion.jComboBoxTiposAccionesFormularioConsignacion.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormConsignacion.jComboBoxTiposAccionesFormularioConsignacion.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarConsignacion.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarConsignacion.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarConsignacion.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualConsignacion();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualConsignacion() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoConsignacion!=null) {
				this.jInternalFrameReporteDinamicoConsignacion.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoConsignacion.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoConsignacion!=null) {
				this.jInternalFrameReporteDinamicoConsignacion.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoConsignacion.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoConsignacion!=null) {
				
				if(this.jInternalFrameReporteDinamicoConsignacion.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoConsignacion.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoConsignacion.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoConsignacion.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoConsignacion.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoConsignacion.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoConsignacion.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoConsignacion.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=ConsignacionConstantesFunciones.getTiposSeleccionarConsignacion(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoConsignacion.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoConsignacion.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoConsignacion.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=ConsignacionConstantesFunciones.getTiposSeleccionarConsignacion(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoConsignacion.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoConsignacion.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoConsignacion.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=ConsignacionConstantesFunciones.getTiposSeleccionarConsignacion(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoConsignacion.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoConsignacion.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoConsignacion.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoConsignacion.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualConsignacion()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_centro_costoFK_IdCentroCostoConsignacion.getSelectedItem()!=null){this.id_centro_costoFK_IdCentroCosto=((CentroCosto)this.jComboBoxid_centro_costoFK_IdCentroCostoConsignacion.getSelectedItem()).getId();}
		if(this.jComboBoxid_clienteFK_IdClienteConsignacion.getSelectedItem()!=null){this.id_clienteFK_IdCliente=((Cliente)this.jComboBoxid_clienteFK_IdClienteConsignacion.getSelectedItem()).getId();}
		if(this.jComboBoxid_consignatarioFK_IdConsignatarioConsignacion.getSelectedItem()!=null){this.id_consignatarioFK_IdConsignatario=((Consignatario)this.jComboBoxid_consignatarioFK_IdConsignatarioConsignacion.getSelectedItem()).getId();}
		if(this.jComboBoxid_empleadoFK_IdEmpleadoConsignacion.getSelectedItem()!=null){this.id_empleadoFK_IdEmpleado=((Empleado)this.jComboBoxid_empleadoFK_IdEmpleadoConsignacion.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_pedidoFK_IdEstadoPedidoConsignacion.getSelectedItem()!=null){this.id_estado_pedidoFK_IdEstadoPedido=((EstadoPedido)this.jComboBoxid_estado_pedidoFK_IdEstadoPedidoConsignacion.getSelectedItem()).getId();}
		if(this.jComboBoxid_formatoFK_IdFormatoConsignacion.getSelectedItem()!=null){this.id_formatoFK_IdFormato=((Formato)this.jComboBoxid_formatoFK_IdFormatoConsignacion.getSelectedItem()).getId();}
		if(this.jComboBoxid_responsableFK_IdResponsableConsignacion.getSelectedItem()!=null){this.id_responsableFK_IdResponsable=((Responsable)this.jComboBoxid_responsableFK_IdResponsableConsignacion.getSelectedItem()).getId();}
		if(this.jComboBoxid_sub_clienteFK_IdSubClienteConsignacion.getSelectedItem()!=null){this.id_sub_clienteFK_IdSubCliente=((SubCliente)this.jComboBoxid_sub_clienteFK_IdSubClienteConsignacion.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_cambioFK_IdTipoCambioConsignacion.getSelectedItem()!=null){this.id_tipo_cambioFK_IdTipoCambio=((TipoCambio)this.jComboBoxid_tipo_cambioFK_IdTipoCambioConsignacion.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_precioFK_IdTipoPrecioConsignacion.getSelectedItem()!=null){this.id_tipo_precioFK_IdTipoPrecio=((TipoPrecio)this.jComboBoxid_tipo_precioFK_IdTipoPrecioConsignacion.getSelectedItem()).getId();}
		if(this.jComboBoxid_transporteFK_IdTransporteConsignacion.getSelectedItem()!=null){this.id_transporteFK_IdTransporte=((Transporte)this.jComboBoxid_transporteFK_IdTransporteConsignacion.getSelectedItem()).getId();}
		if(this.jComboBoxid_transportistaFK_IdTransportistaConsignacion.getSelectedItem()!=null){this.id_transportistaFK_IdTransportista=((Transportista)this.jComboBoxid_transportistaFK_IdTransportistaConsignacion.getSelectedItem()).getId();}
		if(this.jComboBoxid_vendedorFK_IdVendedorConsignacion.getSelectedItem()!=null){this.id_vendedorFK_IdVendedor=((Vendedor)this.jComboBoxid_vendedorFK_IdVendedorConsignacion.getSelectedItem()).getId();}
		if(this.jComboBoxid_zonaFK_IdZonaConsignacion.getSelectedItem()!=null){this.id_zonaFK_IdZona=((Zona)this.jComboBoxid_zonaFK_IdZonaConsignacion.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasConsignacion(Boolean esInicializar) throws Exception {				
		if(ConsignacionJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualConsignacion();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaConsignacion() throws Exception {
		this.inicializarActualizarBindingTablaConsignacion(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByConsignacion() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByConsignacion.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByConsignacion.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByConsignacion.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByConsignacion.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByConsignacion.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosConsignacionOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacionOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByConsignacion.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByConsignacion.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByConsignacion.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaConsignacion(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=consignacionLogic.getConsignacions().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=consignacions.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(ConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosConsignacion.setModel(new ConsignacionModel(this.consignacionLogic.getConsignacions(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosConsignacion.setModel(new ConsignacionModel(this.consignacions,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByConsignacion!=null && this.jInternalFrameOrderByConsignacion.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByConsignacion();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+ConsignacionConstantesFunciones.SCLASSWEBTITULO,consignacionConstantesFunciones.resaltarSeleccionarConsignacion,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+ConsignacionConstantesFunciones.SCLASSWEBTITULO,consignacionConstantesFunciones.resaltarSeleccionarConsignacion,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_ID));

		if(this.consignacionConstantesFunciones.mostraridConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.consignacionConstantesFunciones.resaltaridConsignacion,this.consignacionConstantesFunciones.activaridConsignacion,iSizeTabla,this,true,"idConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.consignacionConstantesFunciones.resaltaridConsignacion,this.consignacionConstantesFunciones.activaridConsignacion,this,true,"idConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDEMPRESA));

		if(this.consignacionConstantesFunciones.mostrarid_empresaConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.consignacionConstantesFunciones.resaltarid_empresaConsignacion,this,this.consignacionConstantesFunciones.activarid_empresaConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.consignacionConstantesFunciones.resaltarid_empresaConsignacion,this,this.consignacionConstantesFunciones.activarid_empresaConsignacion,false,"id_empresaConsignacion","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.consignacionConstantesFunciones.mostrarid_sucursalConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.consignacionConstantesFunciones.resaltarid_sucursalConsignacion,this,this.consignacionConstantesFunciones.activarid_sucursalConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.consignacionConstantesFunciones.resaltarid_sucursalConsignacion,this,this.consignacionConstantesFunciones.activarid_sucursalConsignacion,false,"id_sucursalConsignacion","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.consignacionConstantesFunciones.mostrarid_ejercicioConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.consignacionConstantesFunciones.resaltarid_ejercicioConsignacion,this,this.consignacionConstantesFunciones.activarid_ejercicioConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.consignacionConstantesFunciones.resaltarid_ejercicioConsignacion,this,this.consignacionConstantesFunciones.activarid_ejercicioConsignacion,false,"id_ejercicioConsignacion","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDPERIODO));

		if(this.consignacionConstantesFunciones.mostrarid_periodoConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.consignacionConstantesFunciones.resaltarid_periodoConsignacion,this,this.consignacionConstantesFunciones.activarid_periodoConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.consignacionConstantesFunciones.resaltarid_periodoConsignacion,this,this.consignacionConstantesFunciones.activarid_periodoConsignacion,false,"id_periodoConsignacion","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDANIO));

		if(this.consignacionConstantesFunciones.mostrarid_anioConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.consignacionConstantesFunciones.resaltarid_anioConsignacion,this,this.consignacionConstantesFunciones.activarid_anioConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.consignacionConstantesFunciones.resaltarid_anioConsignacion,this,this.consignacionConstantesFunciones.activarid_anioConsignacion,true,"id_anioConsignacion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDMES));

		if(this.consignacionConstantesFunciones.mostrarid_mesConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.consignacionConstantesFunciones.resaltarid_mesConsignacion,this,this.consignacionConstantesFunciones.activarid_mesConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.consignacionConstantesFunciones.resaltarid_mesConsignacion,this,this.consignacionConstantesFunciones.activarid_mesConsignacion,true,"id_mesConsignacion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDUSUARIO));

		if(this.consignacionConstantesFunciones.mostrarid_usuarioConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_IDUSUARIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new UsuarioTableCell(this.usuariosForeignKey,this.consignacionConstantesFunciones.resaltarid_usuarioConsignacion,this,this.consignacionConstantesFunciones.activarid_usuarioConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new UsuarioTableCell(this.usuariosForeignKey,this.consignacionConstantesFunciones.resaltarid_usuarioConsignacion,this,this.consignacionConstantesFunciones.activarid_usuarioConsignacion,false,"id_usuarioConsignacion","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_NUMERO));

		if(this.consignacionConstantesFunciones.mostrarnumeroConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_NUMERO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.consignacionConstantesFunciones.resaltarnumeroConsignacion,this.consignacionConstantesFunciones.activarnumeroConsignacion,iSizeTabla,this,true,"numeroConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.consignacionConstantesFunciones.resaltarnumeroConsignacion,this.consignacionConstantesFunciones.activarnumeroConsignacion,this,true,"numeroConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_NUMEROAUTORIZACION));

		if(this.consignacionConstantesFunciones.mostrarnumero_autorizacionConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_NUMEROAUTORIZACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.consignacionConstantesFunciones.resaltarnumero_autorizacionConsignacion,this.consignacionConstantesFunciones.activarnumero_autorizacionConsignacion,iSizeTabla,this,true,"numero_autorizacionConsignacion","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.consignacionConstantesFunciones.resaltarnumero_autorizacionConsignacion,this.consignacionConstantesFunciones.activarnumero_autorizacionConsignacion,this,true,"numero_autorizacionConsignacion","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_FECHAEMISION));

		if(this.consignacionConstantesFunciones.mostrarfecha_emisionConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_FECHAEMISION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.consignacionConstantesFunciones.resaltarfecha_emisionConsignacion,this.consignacionConstantesFunciones.activarfecha_emisionConsignacion,iSizeTabla,this,true,"fecha_emisionConsignacion","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.consignacionConstantesFunciones.resaltarfecha_emisionConsignacion,this.consignacionConstantesFunciones.activarfecha_emisionConsignacion,this,true,"fecha_emisionConsignacion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_FECHAVENCIMIENTO));

		if(this.consignacionConstantesFunciones.mostrarfecha_vencimientoConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_FECHAVENCIMIENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.consignacionConstantesFunciones.resaltarfecha_vencimientoConsignacion,this.consignacionConstantesFunciones.activarfecha_vencimientoConsignacion,iSizeTabla,this,true,"fecha_vencimientoConsignacion","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.consignacionConstantesFunciones.resaltarfecha_vencimientoConsignacion,this.consignacionConstantesFunciones.activarfecha_vencimientoConsignacion,this,true,"fecha_vencimientoConsignacion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDMONEDA));

		if(this.consignacionConstantesFunciones.mostrarid_monedaConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_IDMONEDA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MonedaTableCell(this.monedasForeignKey,this.consignacionConstantesFunciones.resaltarid_monedaConsignacion,this,this.consignacionConstantesFunciones.activarid_monedaConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new MonedaTableCell(this.monedasForeignKey,this.consignacionConstantesFunciones.resaltarid_monedaConsignacion,this,this.consignacionConstantesFunciones.activarid_monedaConsignacion,false,"id_monedaConsignacion","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_COTIZACION));

		if(this.consignacionConstantesFunciones.mostrarcotizacionConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_COTIZACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.consignacionConstantesFunciones.resaltarcotizacionConsignacion,this.consignacionConstantesFunciones.activarcotizacionConsignacion,iSizeTabla,this,true,"cotizacionConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.consignacionConstantesFunciones.resaltarcotizacionConsignacion,this.consignacionConstantesFunciones.activarcotizacionConsignacion,this,true,"cotizacionConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDEMPLEADO));

		if(this.consignacionConstantesFunciones.mostrarid_empleadoConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_IDEMPLEADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpleadoTableCell(this.empleadosForeignKey,this.consignacionConstantesFunciones.resaltarid_empleadoConsignacion,this,this.consignacionConstantesFunciones.activarid_empleadoConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new EmpleadoTableCell(this.empleadosForeignKey,this.consignacionConstantesFunciones.resaltarid_empleadoConsignacion,this,this.consignacionConstantesFunciones.activarid_empleadoConsignacion,true,"id_empleadoConsignacion","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDTIPOPRECIO));

		if(this.consignacionConstantesFunciones.mostrarid_tipo_precioConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_IDTIPOPRECIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoPrecioTableCell(this.tipopreciosForeignKey,this.consignacionConstantesFunciones.resaltarid_tipo_precioConsignacion,this,this.consignacionConstantesFunciones.activarid_tipo_precioConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new TipoPrecioTableCell(this.tipopreciosForeignKey,this.consignacionConstantesFunciones.resaltarid_tipo_precioConsignacion,this,this.consignacionConstantesFunciones.activarid_tipo_precioConsignacion,true,"id_tipo_precioConsignacion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDFORMATO));

		if(this.consignacionConstantesFunciones.mostrarid_formatoConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_IDFORMATO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FormatoTableCell(this.formatosForeignKey,this.consignacionConstantesFunciones.resaltarid_formatoConsignacion,this,this.consignacionConstantesFunciones.activarid_formatoConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new FormatoTableCell(this.formatosForeignKey,this.consignacionConstantesFunciones.resaltarid_formatoConsignacion,this,this.consignacionConstantesFunciones.activarid_formatoConsignacion,true,"id_formatoConsignacion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_DIRECCION));

		if(this.consignacionConstantesFunciones.mostrardireccionConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_DIRECCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.consignacionConstantesFunciones.resaltardireccionConsignacion,this.consignacionConstantesFunciones.activardireccionConsignacion,iSizeTabla,this,true,"direccionConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.consignacionConstantesFunciones.resaltardireccionConsignacion,this.consignacionConstantesFunciones.activardireccionConsignacion,this,true,"direccionConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDCLIENTE));

		if(this.consignacionConstantesFunciones.mostrarid_clienteConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_IDCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientesForeignKey,this.consignacionConstantesFunciones.resaltarid_clienteConsignacion,this,this.consignacionConstantesFunciones.activarid_clienteConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientesForeignKey,this.consignacionConstantesFunciones.resaltarid_clienteConsignacion,this,this.consignacionConstantesFunciones.activarid_clienteConsignacion,true,"id_clienteConsignacion","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_TELEFONO));

		if(this.consignacionConstantesFunciones.mostrartelefonoConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_TELEFONO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.consignacionConstantesFunciones.resaltartelefonoConsignacion,this.consignacionConstantesFunciones.activartelefonoConsignacion,iSizeTabla,this,true,"telefonoConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.consignacionConstantesFunciones.resaltartelefonoConsignacion,this.consignacionConstantesFunciones.activartelefonoConsignacion,this,true,"telefonoConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_RUC));

		if(this.consignacionConstantesFunciones.mostrarrucConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_RUC,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.consignacionConstantesFunciones.resaltarrucConsignacion,this.consignacionConstantesFunciones.activarrucConsignacion,iSizeTabla,this,true,"rucConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.consignacionConstantesFunciones.resaltarrucConsignacion,this.consignacionConstantesFunciones.activarrucConsignacion,this,true,"rucConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDSUBCLIENTE));

		if(this.consignacionConstantesFunciones.mostrarid_sub_clienteConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_IDSUBCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new SubClienteTableCell(this.subclientesForeignKey,this.consignacionConstantesFunciones.resaltarid_sub_clienteConsignacion,this,this.consignacionConstantesFunciones.activarid_sub_clienteConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new SubClienteTableCell(this.subclientesForeignKey,this.consignacionConstantesFunciones.resaltarid_sub_clienteConsignacion,this,this.consignacionConstantesFunciones.activarid_sub_clienteConsignacion,true,"id_sub_clienteConsignacion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDCONSIGNATARIO));

		if(this.consignacionConstantesFunciones.mostrarid_consignatarioConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_IDCONSIGNATARIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ConsignatarioTableCell(this.consignatariosForeignKey,this.consignacionConstantesFunciones.resaltarid_consignatarioConsignacion,this,this.consignacionConstantesFunciones.activarid_consignatarioConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new ConsignatarioTableCell(this.consignatariosForeignKey,this.consignacionConstantesFunciones.resaltarid_consignatarioConsignacion,this,this.consignacionConstantesFunciones.activarid_consignatarioConsignacion,true,"id_consignatarioConsignacion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDVENDEDOR));

		if(this.consignacionConstantesFunciones.mostrarid_vendedorConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_IDVENDEDOR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new VendedorTableCell(this.vendedorsForeignKey,this.consignacionConstantesFunciones.resaltarid_vendedorConsignacion,this,this.consignacionConstantesFunciones.activarid_vendedorConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new VendedorTableCell(this.vendedorsForeignKey,this.consignacionConstantesFunciones.resaltarid_vendedorConsignacion,this,this.consignacionConstantesFunciones.activarid_vendedorConsignacion,true,"id_vendedorConsignacion","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_DESCRIPCION));

		if(this.consignacionConstantesFunciones.mostrardescripcionConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.consignacionConstantesFunciones.resaltardescripcionConsignacion,this.consignacionConstantesFunciones.activardescripcionConsignacion,iSizeTabla,this,true,"descripcionConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.consignacionConstantesFunciones.resaltardescripcionConsignacion,this.consignacionConstantesFunciones.activardescripcionConsignacion,this,true,"descripcionConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_IDESTADOPEDIDO));

		if(this.consignacionConstantesFunciones.mostrarid_estado_pedidoConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_IDESTADOPEDIDO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoPedidoTableCell(this.estadopedidosForeignKey,this.consignacionConstantesFunciones.resaltarid_estado_pedidoConsignacion,this,this.consignacionConstantesFunciones.activarid_estado_pedidoConsignacion,iSizeTabla));
			tableColumn.setCellEditor(new EstadoPedidoTableCell(this.estadopedidosForeignKey,this.consignacionConstantesFunciones.resaltarid_estado_pedidoConsignacion,this,this.consignacionConstantesFunciones.activarid_estado_pedidoConsignacion,true,"id_estado_pedidoConsignacion","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE));

		if(this.consignacionConstantesFunciones.mostrardescuento_porcentajeConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.consignacionConstantesFunciones.resaltardescuento_porcentajeConsignacion,this.consignacionConstantesFunciones.activardescuento_porcentajeConsignacion,iSizeTabla,this,true,"descuento_porcentajeConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.consignacionConstantesFunciones.resaltardescuento_porcentajeConsignacion,this.consignacionConstantesFunciones.activardescuento_porcentajeConsignacion,this,true,"descuento_porcentajeConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_TOTALCONIVA));

		if(this.consignacionConstantesFunciones.mostrartotal_con_ivaConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_TOTALCONIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.consignacionConstantesFunciones.resaltartotal_con_ivaConsignacion,this.consignacionConstantesFunciones.activartotal_con_ivaConsignacion,iSizeTabla,this,true,"total_con_ivaConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.consignacionConstantesFunciones.resaltartotal_con_ivaConsignacion,this.consignacionConstantesFunciones.activartotal_con_ivaConsignacion,this,true,"total_con_ivaConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_SUMAN));

		if(this.consignacionConstantesFunciones.mostrarsumanConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_SUMAN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.consignacionConstantesFunciones.resaltarsumanConsignacion,this.consignacionConstantesFunciones.activarsumanConsignacion,iSizeTabla,this,true,"sumanConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.consignacionConstantesFunciones.resaltarsumanConsignacion,this.consignacionConstantesFunciones.activarsumanConsignacion,this,true,"sumanConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR));

		if(this.consignacionConstantesFunciones.mostrardescuento_valorConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.consignacionConstantesFunciones.resaltardescuento_valorConsignacion,this.consignacionConstantesFunciones.activardescuento_valorConsignacion,iSizeTabla,this,true,"descuento_valorConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.consignacionConstantesFunciones.resaltardescuento_valorConsignacion,this.consignacionConstantesFunciones.activardescuento_valorConsignacion,this,true,"descuento_valorConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_TOTALSINIVA));

		if(this.consignacionConstantesFunciones.mostrartotal_sin_ivaConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_TOTALSINIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.consignacionConstantesFunciones.resaltartotal_sin_ivaConsignacion,this.consignacionConstantesFunciones.activartotal_sin_ivaConsignacion,iSizeTabla,this,true,"total_sin_ivaConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.consignacionConstantesFunciones.resaltartotal_sin_ivaConsignacion,this.consignacionConstantesFunciones.activartotal_sin_ivaConsignacion,this,true,"total_sin_ivaConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_TOTALDESCUENTO));

		if(this.consignacionConstantesFunciones.mostrartotal_descuentoConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_TOTALDESCUENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.consignacionConstantesFunciones.resaltartotal_descuentoConsignacion,this.consignacionConstantesFunciones.activartotal_descuentoConsignacion,iSizeTabla,this,true,"total_descuentoConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.consignacionConstantesFunciones.resaltartotal_descuentoConsignacion,this.consignacionConstantesFunciones.activartotal_descuentoConsignacion,this,true,"total_descuentoConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_FLETE));

		if(this.consignacionConstantesFunciones.mostrarfleteConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_FLETE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.consignacionConstantesFunciones.resaltarfleteConsignacion,this.consignacionConstantesFunciones.activarfleteConsignacion,iSizeTabla,this,true,"fleteConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.consignacionConstantesFunciones.resaltarfleteConsignacion,this.consignacionConstantesFunciones.activarfleteConsignacion,this,true,"fleteConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_TOTAL));

		if(this.consignacionConstantesFunciones.mostrartotalConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_TOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.consignacionConstantesFunciones.resaltartotalConsignacion,this.consignacionConstantesFunciones.activartotalConsignacion,iSizeTabla,this,true,"totalConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.consignacionConstantesFunciones.resaltartotalConsignacion,this.consignacionConstantesFunciones.activartotalConsignacion,this,true,"totalConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_SUBTOTAL));

		if(this.consignacionConstantesFunciones.mostrarsubtotalConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_SUBTOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.consignacionConstantesFunciones.resaltarsubtotalConsignacion,this.consignacionConstantesFunciones.activarsubtotalConsignacion,iSizeTabla,this,true,"subtotalConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.consignacionConstantesFunciones.resaltarsubtotalConsignacion,this.consignacionConstantesFunciones.activarsubtotalConsignacion,this,true,"subtotalConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_OTRO));

		if(this.consignacionConstantesFunciones.mostrarotroConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_OTRO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.consignacionConstantesFunciones.resaltarotroConsignacion,this.consignacionConstantesFunciones.activarotroConsignacion,iSizeTabla,this,true,"otroConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.consignacionConstantesFunciones.resaltarotroConsignacion,this.consignacionConstantesFunciones.activarotroConsignacion,this,true,"otroConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,ConsignacionConstantesFunciones.LABEL_FINANCIAMIENTO));

		if(this.consignacionConstantesFunciones.mostrarfinanciamientoConsignacion && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ConsignacionConstantesFunciones.LABEL_FINANCIAMIENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.consignacionConstantesFunciones.resaltarfinanciamientoConsignacion,this.consignacionConstantesFunciones.activarfinanciamientoConsignacion,iSizeTabla,this,true,"financiamientoConsignacion","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.consignacionConstantesFunciones.resaltarfinanciamientoConsignacion,this.consignacionConstantesFunciones.activarfinanciamientoConsignacion,this,true,"financiamientoConsignacion","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ConsignacionPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.consignacionSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosDetalleConsignacion && this.consignacionConstantesFunciones.mostrarDetalleConsignacionConsignacion && !ConsignacionConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Detalle Consignacions");
				tableColumn.setHeaderValue("Detalle Consignacions");
				tableColumn.setCellRenderer(new DetalleConsignacionTableCell(consignacionConstantesFunciones.resaltarDetalleConsignacionConsignacion,this,this.consignacionConstantesFunciones.activarDetalleConsignacionConsignacion));
				tableColumn.setCellEditor(new DetalleConsignacionTableCell(consignacionConstantesFunciones.resaltarDetalleConsignacionConsignacion,this,this.consignacionConstantesFunciones.activarDetalleConsignacionConsignacion));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosConsignacion.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.consignacionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.consignacionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosConsignacion.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				//tableColumn= new TableColumn();
				//tableColumn.setIdentifier(sLabelColumnAccion);
				//tableColumn.setHeaderValue(sLabelColumnAccion);
				//tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.consignacionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				//tableColumn.setCellEditor(new IdTableCell(this,false,false,this.consignacionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				//tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				//tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				//this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				//this.jTableDatosConsignacion.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarConsignacion && this.isPermisoGuardarCambiosConsignacion) {
					//tableColumn= new TableColumn();
					//tableColumn.setIdentifier(Constantes2.S_ELI);
					//tableColumn.setHeaderValue(sLabelColumnAccionEli);
					//tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.consignacionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					//tableColumn.setCellEditor(new IdTableCell(this,false,true,this.consignacionSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					//tableColumn.setPreferredWidth(65); 	 
					//tableColumn.setWidth(65); 	 
					//tableColumn.setMinWidth(65); 
					//tableColumn.setMaxWidth(65);
					
					//this.iWidthTableDefinicion+=65;
						
					//this.jTableDatosConsignacion.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.consignacionSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false,iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,true,false,iSizeTabla));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosConsignacion.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosConsignacion.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarConsignacion && this.isPermisoGuardarCambiosConsignacion) {
				//iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		//iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.consignacionSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarConsignacion && this.isPermisoGuardarCambiosConsignacion) {
				////REUBICA ELIMINAR SIMPLE
				//jTableDatosConsignacion.moveColumn(this.jTableDatosConsignacion.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				//iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		//jTableDatosConsignacion.moveColumn(this.jTableDatosConsignacion.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.consignacionSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosConsignacion.moveColumn(this.jTableDatosConsignacion.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosConsignacion.moveColumn(this.jTableDatosConsignacion.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosConsignacion.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosConsignacion.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosConsignacion,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!ConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosConsignacion.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosConsignacion.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!ConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosConsignacion.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosConsignacion.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosConsignacion.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=consignacionLogic.getConsignacions().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=consignacions.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosConsignacion.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosConsignacion.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosConsignacion();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoConsignacion=false;
					
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
			
				if(this.consignacionSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormConsignacion==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosConsignacion.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosConsignacion.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.consignacion.getsType().equals("DUPLICADO")
				   || this.consignacion.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoConsignacion=true;
				
				} else {
					this.isEsNuevoConsignacion=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.consignacionSessionBean.getEsGuardarRelacionado()) {
					if(this.consignacion.getId()>=0 && !this.consignacion.getIsNew()) {						
						this.isEsNuevoConsignacion=false;
						
					} else {
						this.isEsNuevoConsignacion=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoConsignacion(esRelaciones);						
				
				this.seleccionarConsignacion(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.consignacion.getId()<0) {
					this.isEsNuevoConsignacion=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarConsignacion(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarConsignacion(evt,rowIndex);
				}	
				
				if(this.consignacionSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion Consignacion: " + this.dDif); 
					}
				}								
				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarConsignacion(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.consignacion)) {
					if(this.consignacion.getId()>0) {
						this.consignacion.setIsDeleted(true);
						
						this.consignacionsEliminados.add(this.consignacion);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.consignacionLogic.getConsignacions().remove(this.consignacion);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.consignacions.remove(this.consignacion);				
					}
					
					
					((ConsignacionModel) this.jTableDatosConsignacion.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaConsignacion(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarConsignacion(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoConsignacion) {
			
			if(this.jInternalFrameDetalleFormConsignacion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosConsignacion.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosConsignacion.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(ConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioConsignacion(this.consignacion);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.consignacionConstantesFunciones.cargarid_empresaConsignacion || this.consignacionConstantesFunciones.event_dependid_empresaConsignacion) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.consignacion.getid_empresa());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(consignacion.getEmpresa()!=null) {
							this.empresasForeignKey.add(consignacion.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.consignacion.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.consignacionConstantesFunciones.cargarid_sucursalConsignacion || this.consignacionConstantesFunciones.event_dependid_sucursalConsignacion) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.consignacion.getid_sucursal());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(consignacion.getSucursal()!=null) {
							this.sucursalsForeignKey.add(consignacion.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.consignacion.getid_sucursal(),false,"Formulario");

					//Ejercicio
					if(!this.consignacionConstantesFunciones.cargarid_ejercicioConsignacion || this.consignacionConstantesFunciones.event_dependid_ejercicioConsignacion) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.consignacion.getid_ejercicio());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(consignacion.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(consignacion.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.consignacion.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.consignacionConstantesFunciones.cargarid_periodoConsignacion || this.consignacionConstantesFunciones.event_dependid_periodoConsignacion) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.consignacion.getid_periodo());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(consignacion.getPeriodo()!=null) {
							this.periodosForeignKey.add(consignacion.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.consignacion.getid_periodo(),false,"Formulario");

					//Anio
					if(!this.consignacionConstantesFunciones.cargarid_anioConsignacion || this.consignacionConstantesFunciones.event_dependid_anioConsignacion) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.consignacion.getid_anio());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(consignacion.getAnio()!=null) {
							this.aniosForeignKey.add(consignacion.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.consignacion.getid_anio(),false,"Formulario");

					//Mes
					if(!this.consignacionConstantesFunciones.cargarid_mesConsignacion || this.consignacionConstantesFunciones.event_dependid_mesConsignacion) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.consignacion.getid_mes());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(consignacion.getMes()!=null) {
							this.messForeignKey.add(consignacion.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.consignacion.getid_mes(),false,"Formulario");

					//Usuario
					if(!this.consignacionConstantesFunciones.cargarid_usuarioConsignacion || this.consignacionConstantesFunciones.event_dependid_usuarioConsignacion) {
						//this.cargarCombosUsuariosForeignKeyLista(" where id="+this.consignacion.getid_usuario());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.usuariosForeignKey=new ArrayList<Usuario>();

						if(consignacion.getUsuario()!=null) {
							this.usuariosForeignKey.add(consignacion.getUsuario());
						}

						this.addItemDefectoCombosForeignKeyUsuario();
						this.cargarCombosFrameUsuariosForeignKey("Todos");
					}
					this.setActualUsuarioForeignKey(this.consignacion.getid_usuario(),false,"Formulario");

					//Moneda
					if(!this.consignacionConstantesFunciones.cargarid_monedaConsignacion || this.consignacionConstantesFunciones.event_dependid_monedaConsignacion) {
						//this.cargarCombosMonedasForeignKeyLista(" where id="+this.consignacion.getid_moneda());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.monedasForeignKey=new ArrayList<Moneda>();

						if(consignacion.getMoneda()!=null) {
							this.monedasForeignKey.add(consignacion.getMoneda());
						}

						this.addItemDefectoCombosForeignKeyMoneda();
						this.cargarCombosFrameMonedasForeignKey("Todos");
					}
					this.setActualMonedaForeignKey(this.consignacion.getid_moneda(),false,"Formulario");

					//Empleado
					if(!this.consignacionConstantesFunciones.cargarid_empleadoConsignacion || this.consignacionConstantesFunciones.event_dependid_empleadoConsignacion) {
						//this.cargarCombosEmpleadosForeignKeyLista(" where id="+this.consignacion.getid_empleado());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.empleadosForeignKey=new ArrayList<Empleado>();

						if(consignacion.getEmpleado()!=null) {
							this.empleadosForeignKey.add(consignacion.getEmpleado());
						}

						this.addItemDefectoCombosForeignKeyEmpleado();
						this.cargarCombosFrameEmpleadosForeignKey("Todos");
					}
					this.setActualEmpleadoForeignKey(this.consignacion.getid_empleado(),false,"Formulario");

					//TipoPrecio
					if(!this.consignacionConstantesFunciones.cargarid_tipo_precioConsignacion || this.consignacionConstantesFunciones.event_dependid_tipo_precioConsignacion) {
						//this.cargarCombosTipoPreciosForeignKeyLista(" where id="+this.consignacion.getid_tipo_precio());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.tipopreciosForeignKey=new ArrayList<TipoPrecio>();

						if(consignacion.getTipoPrecio()!=null) {
							this.tipopreciosForeignKey.add(consignacion.getTipoPrecio());
						}

						this.addItemDefectoCombosForeignKeyTipoPrecio();
						this.cargarCombosFrameTipoPreciosForeignKey("Todos");
					}
					this.setActualTipoPrecioForeignKey(this.consignacion.getid_tipo_precio(),false,"Formulario");

					//Formato
					if(!this.consignacionConstantesFunciones.cargarid_formatoConsignacion || this.consignacionConstantesFunciones.event_dependid_formatoConsignacion) {
						//this.cargarCombosFormatosForeignKeyLista(" where id="+this.consignacion.getid_formato());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.formatosForeignKey=new ArrayList<Formato>();

						if(consignacion.getFormato()!=null) {
							this.formatosForeignKey.add(consignacion.getFormato());
						}

						this.addItemDefectoCombosForeignKeyFormato();
						this.cargarCombosFrameFormatosForeignKey("Todos");
					}
					this.setActualFormatoForeignKey(this.consignacion.getid_formato(),false,"Formulario");

					//Cliente
					if(!this.consignacionConstantesFunciones.cargarid_clienteConsignacion || this.consignacionConstantesFunciones.event_dependid_clienteConsignacion) {
						//this.cargarCombosClientesForeignKeyLista(" where id="+this.consignacion.getid_cliente());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.clientesForeignKey=new ArrayList<Cliente>();

						if(consignacion.getCliente()!=null) {
							this.clientesForeignKey.add(consignacion.getCliente());
						}

						this.addItemDefectoCombosForeignKeyCliente();
						this.cargarCombosFrameClientesForeignKey("Todos");
					}
					this.setActualClienteForeignKey(this.consignacion.getid_cliente(),false,"Formulario");

					//SubCliente
					if(!this.consignacionConstantesFunciones.cargarid_sub_clienteConsignacion || this.consignacionConstantesFunciones.event_dependid_sub_clienteConsignacion) {
						//this.cargarCombosSubClientesForeignKeyLista(" where id="+this.consignacion.getid_sub_cliente());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.subclientesForeignKey=new ArrayList<SubCliente>();

						if(consignacion.getSubCliente()!=null) {
							this.subclientesForeignKey.add(consignacion.getSubCliente());
						}

						this.addItemDefectoCombosForeignKeySubCliente();
						this.cargarCombosFrameSubClientesForeignKey("Todos");
					}
					this.setActualSubClienteForeignKey(this.consignacion.getid_sub_cliente(),false,"Formulario");

					//Consignatario
					if(!this.consignacionConstantesFunciones.cargarid_consignatarioConsignacion || this.consignacionConstantesFunciones.event_dependid_consignatarioConsignacion) {
						//this.cargarCombosConsignatariosForeignKeyLista(" where id="+this.consignacion.getid_consignatario());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.consignatariosForeignKey=new ArrayList<Consignatario>();

						if(consignacion.getConsignatario()!=null) {
							this.consignatariosForeignKey.add(consignacion.getConsignatario());
						}

						this.addItemDefectoCombosForeignKeyConsignatario();
						this.cargarCombosFrameConsignatariosForeignKey("Todos");
					}
					this.setActualConsignatarioForeignKey(this.consignacion.getid_consignatario(),false,"Formulario");

					//Vendedor
					if(!this.consignacionConstantesFunciones.cargarid_vendedorConsignacion || this.consignacionConstantesFunciones.event_dependid_vendedorConsignacion) {
						//this.cargarCombosVendedorsForeignKeyLista(" where id="+this.consignacion.getid_vendedor());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.vendedorsForeignKey=new ArrayList<Vendedor>();

						if(consignacion.getVendedor()!=null) {
							this.vendedorsForeignKey.add(consignacion.getVendedor());
						}

						this.addItemDefectoCombosForeignKeyVendedor();
						this.cargarCombosFrameVendedorsForeignKey("Todos");
					}
					this.setActualVendedorForeignKey(this.consignacion.getid_vendedor(),false,"Formulario");

					//EstadoPedido
					if(!this.consignacionConstantesFunciones.cargarid_estado_pedidoConsignacion || this.consignacionConstantesFunciones.event_dependid_estado_pedidoConsignacion) {
						//this.cargarCombosEstadoPedidosForeignKeyLista(" where id="+this.consignacion.getid_estado_pedido());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.estadopedidosForeignKey=new ArrayList<EstadoPedido>();

						if(consignacion.getEstadoPedido()!=null) {
							this.estadopedidosForeignKey.add(consignacion.getEstadoPedido());
						}

						this.addItemDefectoCombosForeignKeyEstadoPedido();
						this.cargarCombosFrameEstadoPedidosForeignKey("Todos");
					}
					this.setActualEstadoPedidoForeignKey(this.consignacion.getid_estado_pedido(),false,"Formulario");

					//TipoCambio
					if(!this.consignacionConstantesFunciones.cargarid_tipo_cambioConsignacion || this.consignacionConstantesFunciones.event_dependid_tipo_cambioConsignacion) {
						//this.cargarCombosTipoCambiosForeignKeyLista(" where id="+this.consignacion.getid_tipo_cambio());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

						if(consignacion.getTipoCambio()!=null) {
							this.tipocambiosForeignKey.add(consignacion.getTipoCambio());
						}

						this.addItemDefectoCombosForeignKeyTipoCambio();
						this.cargarCombosFrameTipoCambiosForeignKey("Todos");
					}
					this.setActualTipoCambioForeignKey(this.consignacion.getid_tipo_cambio(),false,"Formulario");

					//Zona
					if(!this.consignacionConstantesFunciones.cargarid_zonaConsignacion || this.consignacionConstantesFunciones.event_dependid_zonaConsignacion) {
						//this.cargarCombosZonasForeignKeyLista(" where id="+this.consignacion.getid_zona());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.zonasForeignKey=new ArrayList<Zona>();

						if(consignacion.getZona()!=null) {
							this.zonasForeignKey.add(consignacion.getZona());
						}

						this.addItemDefectoCombosForeignKeyZona();
						this.cargarCombosFrameZonasForeignKey("Todos");
					}
					this.setActualZonaForeignKey(this.consignacion.getid_zona(),false,"Formulario");

					//CentroCosto
					if(!this.consignacionConstantesFunciones.cargarid_centro_costoConsignacion || this.consignacionConstantesFunciones.event_dependid_centro_costoConsignacion) {
						//this.cargarCombosCentroCostosForeignKeyLista(" where id="+this.consignacion.getid_centro_costo());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.centrocostosForeignKey=new ArrayList<CentroCosto>();

						if(consignacion.getCentroCosto()!=null) {
							this.centrocostosForeignKey.add(consignacion.getCentroCosto());
						}

						this.addItemDefectoCombosForeignKeyCentroCosto();
						this.cargarCombosFrameCentroCostosForeignKey("Todos");
					}
					this.setActualCentroCostoForeignKey(this.consignacion.getid_centro_costo(),false,"Formulario");

					//Responsable
					if(!this.consignacionConstantesFunciones.cargarid_responsableConsignacion || this.consignacionConstantesFunciones.event_dependid_responsableConsignacion) {
						//this.cargarCombosResponsablesForeignKeyLista(" where id="+this.consignacion.getid_responsable());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.responsablesForeignKey=new ArrayList<Responsable>();

						if(consignacion.getResponsable()!=null) {
							this.responsablesForeignKey.add(consignacion.getResponsable());
						}

						this.addItemDefectoCombosForeignKeyResponsable();
						this.cargarCombosFrameResponsablesForeignKey("Todos");
					}
					this.setActualResponsableForeignKey(this.consignacion.getid_responsable(),false,"Formulario");

					//Transportista
					if(!this.consignacionConstantesFunciones.cargarid_transportistaConsignacion || this.consignacionConstantesFunciones.event_dependid_transportistaConsignacion) {
						//this.cargarCombosTransportistasForeignKeyLista(" where id="+this.consignacion.getid_transportista());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.transportistasForeignKey=new ArrayList<Transportista>();

						if(consignacion.getTransportista()!=null) {
							this.transportistasForeignKey.add(consignacion.getTransportista());
						}

						this.addItemDefectoCombosForeignKeyTransportista();
						this.cargarCombosFrameTransportistasForeignKey("Todos");
					}
					this.setActualTransportistaForeignKey(this.consignacion.getid_transportista(),false,"Formulario");

					//Transporte
					if(!this.consignacionConstantesFunciones.cargarid_transporteConsignacion || this.consignacionConstantesFunciones.event_dependid_transporteConsignacion) {
						//this.cargarCombosTransportesForeignKeyLista(" where id="+this.consignacion.getid_transporte());
									//this.inicializarActualizarBindingConsignacion(false,false);
						this.transportesForeignKey=new ArrayList<Transporte>();

						if(consignacion.getTransporte()!=null) {
							this.transportesForeignKey.add(consignacion.getTransporte());
						}

						this.addItemDefectoCombosForeignKeyTransporte();
						this.cargarCombosFrameTransportesForeignKey("Todos");
					}
					this.setActualTransporteForeignKey(this.consignacion.getid_transporte(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesConsignacion("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesConsignacion(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualConsignacion() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoConsignacion(Consignacion consignacion) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoConsignacion(consignacion,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoConsignacion(Consignacion consignacion,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioConsignacion(consignacion);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyConsignacion(consignacion,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyConsignacion(consignacion);
	}
	
	public void setVariablesObjetoActualToFormularioConsignacion(Consignacion consignacion) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormConsignacion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormConsignacion.jLabelidConsignacion.setText(consignacion.getId().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldnumeroConsignacion.setText(consignacion.getnumero());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldnumero_autorizacionConsignacion.setText(consignacion.getnumero_autorizacion());
			this.jInternalFrameDetalleFormConsignacion.jDateChooserfecha_emisionConsignacion.setDate(consignacion.getfecha_emision());
			this.jInternalFrameDetalleFormConsignacion.jDateChooserfecha_vencimientoConsignacion.setDate(consignacion.getfecha_vencimiento());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldcotizacionConsignacion.setText(consignacion.getcotizacion().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextAreadireccionConsignacion.setText(consignacion.getdireccion());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldtelefonoConsignacion.setText(consignacion.gettelefono());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldrucConsignacion.setText(consignacion.getruc());
			this.jInternalFrameDetalleFormConsignacion.jTextAreadescripcionConsignacion.setText(consignacion.getdescripcion());
			this.jInternalFrameDetalleFormConsignacion.jTextFielddescuento_porcentajeConsignacion.setText(consignacion.getdescuento_porcentaje().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_con_ivaConsignacion.setText(consignacion.gettotal_con_iva().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldsumanConsignacion.setText(consignacion.getsuman().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFielddescuento_valorConsignacion.setText(consignacion.getdescuento_valor().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_sin_ivaConsignacion.setText(consignacion.gettotal_sin_iva().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_descuentoConsignacion.setText(consignacion.gettotal_descuento().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldfleteConsignacion.setText(consignacion.getflete().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldtotalConsignacion.setText(consignacion.gettotal().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldsubtotalConsignacion.setText(consignacion.getsubtotal().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldotroConsignacion.setText(consignacion.getotro().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldfinanciamientoConsignacion.setText(consignacion.getfinanciamiento().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,Consignacion consignacionLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,consignacionLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,Consignacion consignacionLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				consignacionLocal=this.consignacion;
			} else {
				consignacionLocal=this.consignacionAnterior;
			}
		}
		
		if(this.permiteMantenimiento(consignacionLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoConsignacion(consignacionLocal,true);
					
					if(consignacionSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(consignacionLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.consignacionSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(consignacionLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoConsignacion(Consignacion consignacion,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualConsignacion(consignacion,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(consignacion);
	}
	
	public void setVariablesFormularioToObjetoActualConsignacion(Consignacion consignacion,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualConsignacion(consignacion,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualConsignacion(Consignacion consignacion,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormConsignacion==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormConsignacion.jLabelidConsignacion.getText()==null || this.jInternalFrameDetalleFormConsignacion.jLabelidConsignacion.getText()=="" || this.jInternalFrameDetalleFormConsignacion.jLabelidConsignacion.getText()=="Id") {
				this.jInternalFrameDetalleFormConsignacion.jLabelidConsignacion.setText("0");
			}

			if(conColumnasBase) {consignacion.setId(Long.parseLong(this.jInternalFrameDetalleFormConsignacion.jLabelidConsignacion.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConsignacionConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelIdConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			consignacion.setnumero(this.jInternalFrameDetalleFormConsignacion.jTextFieldnumeroConsignacion.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConsignacionConstantesFunciones.LABEL_NUMERO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelnumeroConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			consignacion.setnumero_autorizacion(this.jInternalFrameDetalleFormConsignacion.jTextFieldnumero_autorizacionConsignacion.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConsignacionConstantesFunciones.LABEL_NUMEROAUTORIZACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelnumero_autorizacionConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			consignacion.setfecha_emision(this.jInternalFrameDetalleFormConsignacion.jDateChooserfecha_emisionConsignacion.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConsignacionConstantesFunciones.LABEL_FECHAEMISION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelfecha_emisionConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			consignacion.setfecha_vencimiento(this.jInternalFrameDetalleFormConsignacion.jDateChooserfecha_vencimientoConsignacion.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConsignacionConstantesFunciones.LABEL_FECHAVENCIMIENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelfecha_vencimientoConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			consignacion.setcotizacion(Double.parseDouble(this.jInternalFrameDetalleFormConsignacion.jTextFieldcotizacionConsignacion.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConsignacionConstantesFunciones.LABEL_COTIZACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelcotizacionConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			consignacion.setdireccion(this.jInternalFrameDetalleFormConsignacion.jTextAreadireccionConsignacion.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConsignacionConstantesFunciones.LABEL_DIRECCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabeldireccionConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			consignacion.settelefono(this.jInternalFrameDetalleFormConsignacion.jTextFieldtelefonoConsignacion.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConsignacionConstantesFunciones.LABEL_TELEFONO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabeltelefonoConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			consignacion.setruc(this.jInternalFrameDetalleFormConsignacion.jTextFieldrucConsignacion.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConsignacionConstantesFunciones.LABEL_RUC+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelrucConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			consignacion.setdescripcion(this.jInternalFrameDetalleFormConsignacion.jTextAreadescripcionConsignacion.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConsignacionConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabeldescripcionConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			consignacion.setdescuento_porcentaje(Double.parseDouble(this.jInternalFrameDetalleFormConsignacion.jTextFielddescuento_porcentajeConsignacion.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabeldescuento_porcentajeConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			consignacion.settotal_con_iva(Double.parseDouble(this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_con_ivaConsignacion.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConsignacionConstantesFunciones.LABEL_TOTALCONIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabeltotal_con_ivaConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			consignacion.setsuman(Double.parseDouble(this.jInternalFrameDetalleFormConsignacion.jTextFieldsumanConsignacion.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConsignacionConstantesFunciones.LABEL_SUMAN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelsumanConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			consignacion.setdescuento_valor(Double.parseDouble(this.jInternalFrameDetalleFormConsignacion.jTextFielddescuento_valorConsignacion.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabeldescuento_valorConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			consignacion.settotal_sin_iva(Double.parseDouble(this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_sin_ivaConsignacion.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConsignacionConstantesFunciones.LABEL_TOTALSINIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabeltotal_sin_ivaConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			consignacion.settotal_descuento(Double.parseDouble(this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_descuentoConsignacion.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConsignacionConstantesFunciones.LABEL_TOTALDESCUENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabeltotal_descuentoConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			consignacion.setflete(Double.parseDouble(this.jInternalFrameDetalleFormConsignacion.jTextFieldfleteConsignacion.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConsignacionConstantesFunciones.LABEL_FLETE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelfleteConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			consignacion.settotal(Double.parseDouble(this.jInternalFrameDetalleFormConsignacion.jTextFieldtotalConsignacion.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConsignacionConstantesFunciones.LABEL_TOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabeltotalConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			consignacion.setsubtotal(Double.parseDouble(this.jInternalFrameDetalleFormConsignacion.jTextFieldsubtotalConsignacion.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConsignacionConstantesFunciones.LABEL_SUBTOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelsubtotalConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			consignacion.setotro(Double.parseDouble(this.jInternalFrameDetalleFormConsignacion.jTextFieldotroConsignacion.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConsignacionConstantesFunciones.LABEL_OTRO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelotroConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			consignacion.setfinanciamiento(Double.parseDouble(this.jInternalFrameDetalleFormConsignacion.jTextFieldfinanciamientoConsignacion.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ConsignacionConstantesFunciones.LABEL_FINANCIAMIENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormConsignacion.jLabelfinanciamientoConsignacion,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualConsignacion(Consignacion consignacionBean,Consignacion consignacion,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosConsignacion(Consignacion consignacionOrigen,Consignacion consignacion,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && consignacionOrigen.getId()!=null && !consignacionOrigen.getId().equals(0L))) {consignacion.setId(consignacionOrigen.getId());}}
			if(conDefault || (!conDefault && consignacionOrigen.getnumero()!=null && !consignacionOrigen.getnumero().equals(""))) {consignacion.setnumero(consignacionOrigen.getnumero());}
			if(conDefault || (!conDefault && consignacionOrigen.getnumero_autorizacion()!=null && !consignacionOrigen.getnumero_autorizacion().equals(""))) {consignacion.setnumero_autorizacion(consignacionOrigen.getnumero_autorizacion());}
			if(conDefault || (!conDefault && consignacionOrigen.getfecha_emision()!=null && !consignacionOrigen.getfecha_emision().equals(new Date()))) {consignacion.setfecha_emision(consignacionOrigen.getfecha_emision());}
			if(conDefault || (!conDefault && consignacionOrigen.getfecha_vencimiento()!=null && !consignacionOrigen.getfecha_vencimiento().equals(new Date()))) {consignacion.setfecha_vencimiento(consignacionOrigen.getfecha_vencimiento());}
			if(conDefault || (!conDefault && consignacionOrigen.getcotizacion()!=null && !consignacionOrigen.getcotizacion().equals(0.0))) {consignacion.setcotizacion(consignacionOrigen.getcotizacion());}
			if(conDefault || (!conDefault && consignacionOrigen.getdireccion()!=null && !consignacionOrigen.getdireccion().equals(""))) {consignacion.setdireccion(consignacionOrigen.getdireccion());}
			if(conDefault || (!conDefault && consignacionOrigen.gettelefono()!=null && !consignacionOrigen.gettelefono().equals(""))) {consignacion.settelefono(consignacionOrigen.gettelefono());}
			if(conDefault || (!conDefault && consignacionOrigen.getruc()!=null && !consignacionOrigen.getruc().equals(""))) {consignacion.setruc(consignacionOrigen.getruc());}
			if(conDefault || (!conDefault && consignacionOrigen.getdescripcion()!=null && !consignacionOrigen.getdescripcion().equals(""))) {consignacion.setdescripcion(consignacionOrigen.getdescripcion());}
			if(conDefault || (!conDefault && consignacionOrigen.getdescuento_porcentaje()!=null && !consignacionOrigen.getdescuento_porcentaje().equals(0.0))) {consignacion.setdescuento_porcentaje(consignacionOrigen.getdescuento_porcentaje());}
			if(conDefault || (!conDefault && consignacionOrigen.gettotal_con_iva()!=null && !consignacionOrigen.gettotal_con_iva().equals(0.0))) {consignacion.settotal_con_iva(consignacionOrigen.gettotal_con_iva());}
			if(conDefault || (!conDefault && consignacionOrigen.getsuman()!=null && !consignacionOrigen.getsuman().equals(0.0))) {consignacion.setsuman(consignacionOrigen.getsuman());}
			if(conDefault || (!conDefault && consignacionOrigen.getdescuento_valor()!=null && !consignacionOrigen.getdescuento_valor().equals(0.0))) {consignacion.setdescuento_valor(consignacionOrigen.getdescuento_valor());}
			if(conDefault || (!conDefault && consignacionOrigen.gettotal_sin_iva()!=null && !consignacionOrigen.gettotal_sin_iva().equals(0.0))) {consignacion.settotal_sin_iva(consignacionOrigen.gettotal_sin_iva());}
			if(conDefault || (!conDefault && consignacionOrigen.gettotal_descuento()!=null && !consignacionOrigen.gettotal_descuento().equals(0.0))) {consignacion.settotal_descuento(consignacionOrigen.gettotal_descuento());}
			if(conDefault || (!conDefault && consignacionOrigen.getflete()!=null && !consignacionOrigen.getflete().equals(0.0))) {consignacion.setflete(consignacionOrigen.getflete());}
			if(conDefault || (!conDefault && consignacionOrigen.gettotal()!=null && !consignacionOrigen.gettotal().equals(0.0))) {consignacion.settotal(consignacionOrigen.gettotal());}
			if(conDefault || (!conDefault && consignacionOrigen.getsubtotal()!=null && !consignacionOrigen.getsubtotal().equals(0.0))) {consignacion.setsubtotal(consignacionOrigen.getsubtotal());}
			if(conDefault || (!conDefault && consignacionOrigen.getotro()!=null && !consignacionOrigen.getotro().equals(0.0))) {consignacion.setotro(consignacionOrigen.getotro());}
			if(conDefault || (!conDefault && consignacionOrigen.getfinanciamiento()!=null && !consignacionOrigen.getfinanciamiento().equals(0.0))) {consignacion.setfinanciamiento(consignacionOrigen.getfinanciamiento());}
			if(conDefault || (!conDefault && consignacionOrigen.getiva()!=null && !consignacionOrigen.getiva().equals(0.0))) {consignacion.setiva(consignacionOrigen.getiva());}
			if(conDefault || (!conDefault && consignacionOrigen.getice()!=null && !consignacionOrigen.getice().equals(0.0))) {consignacion.setice(consignacionOrigen.getice());}
			if(conDefault || (!conDefault && consignacionOrigen.getmonto_retencion()!=null && !consignacionOrigen.getmonto_retencion().equals(0.0))) {consignacion.setmonto_retencion(consignacionOrigen.getmonto_retencion());}
			if(conDefault || (!conDefault && consignacionOrigen.getnumero_fue()!=null && !consignacionOrigen.getnumero_fue().equals(""))) {consignacion.setnumero_fue(consignacionOrigen.getnumero_fue());}
			if(conDefault || (!conDefault && consignacionOrigen.getfecha()!=null && !consignacionOrigen.getfecha().equals(new Date()))) {consignacion.setfecha(consignacionOrigen.getfecha());}
			if(conDefault || (!conDefault && consignacionOrigen.getfecha_servidor()!=null && !consignacionOrigen.getfecha_servidor().equals(new Date()))) {consignacion.setfecha_servidor(consignacionOrigen.getfecha_servidor());}
			if(conDefault || (!conDefault && consignacionOrigen.gethora_inicio()!=null && !consignacionOrigen.gethora_inicio().equals(new Time((new Date()).getTime())))) {consignacion.sethora_inicio(consignacionOrigen.gethora_inicio());}
			if(conDefault || (!conDefault && consignacionOrigen.gethora_fin()!=null && !consignacionOrigen.gethora_fin().equals(new Time((new Date()).getTime())))) {consignacion.sethora_fin(consignacionOrigen.gethora_fin());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioConsignacion(Consignacion consignacion) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormConsignacion.jLabelidConsignacion.setText(consignacion.getId().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldnumeroConsignacion.setText(consignacion.getnumero());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldnumero_autorizacionConsignacion.setText(consignacion.getnumero_autorizacion());
			this.jInternalFrameDetalleFormConsignacion.jDateChooserfecha_emisionConsignacion.setDate(consignacion.getfecha_emision());
			this.jInternalFrameDetalleFormConsignacion.jDateChooserfecha_vencimientoConsignacion.setDate(consignacion.getfecha_vencimiento());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldcotizacionConsignacion.setText(consignacion.getcotizacion().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextAreadireccionConsignacion.setText(consignacion.getdireccion());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldtelefonoConsignacion.setText(consignacion.gettelefono());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldrucConsignacion.setText(consignacion.getruc());
			this.jInternalFrameDetalleFormConsignacion.jTextAreadescripcionConsignacion.setText(consignacion.getdescripcion());
			this.jInternalFrameDetalleFormConsignacion.jTextFielddescuento_porcentajeConsignacion.setText(consignacion.getdescuento_porcentaje().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_con_ivaConsignacion.setText(consignacion.gettotal_con_iva().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldsumanConsignacion.setText(consignacion.getsuman().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFielddescuento_valorConsignacion.setText(consignacion.getdescuento_valor().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_sin_ivaConsignacion.setText(consignacion.gettotal_sin_iva().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_descuentoConsignacion.setText(consignacion.gettotal_descuento().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldfleteConsignacion.setText(consignacion.getflete().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldtotalConsignacion.setText(consignacion.gettotal().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldsubtotalConsignacion.setText(consignacion.getsubtotal().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldotroConsignacion.setText(consignacion.getotro().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldfinanciamientoConsignacion.setText(consignacion.getfinanciamiento().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioConsignacion(ConsignacionBean consignacionBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormConsignacion.jLabelidConsignacion.setText(consignacionBean.getId().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldnumeroConsignacion.setText(consignacionBean.getnumero());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldnumero_autorizacionConsignacion.setText(consignacionBean.getnumero_autorizacion());
			this.jInternalFrameDetalleFormConsignacion.jDateChooserfecha_emisionConsignacion.setDate(consignacionBean.getfecha_emision());
			this.jInternalFrameDetalleFormConsignacion.jDateChooserfecha_vencimientoConsignacion.setDate(consignacionBean.getfecha_vencimiento());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldcotizacionConsignacion.setText(consignacionBean.getcotizacion().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextAreadireccionConsignacion.setText(consignacionBean.getdireccion());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldtelefonoConsignacion.setText(consignacionBean.gettelefono());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldrucConsignacion.setText(consignacionBean.getruc());
			this.jInternalFrameDetalleFormConsignacion.jTextAreadescripcionConsignacion.setText(consignacionBean.getdescripcion());
			this.jInternalFrameDetalleFormConsignacion.jTextFielddescuento_porcentajeConsignacion.setText(consignacionBean.getdescuento_porcentaje().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_con_ivaConsignacion.setText(consignacionBean.gettotal_con_iva().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldsumanConsignacion.setText(consignacionBean.getsuman().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFielddescuento_valorConsignacion.setText(consignacionBean.getdescuento_valor().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_sin_ivaConsignacion.setText(consignacionBean.gettotal_sin_iva().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_descuentoConsignacion.setText(consignacionBean.gettotal_descuento().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldfleteConsignacion.setText(consignacionBean.getflete().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldtotalConsignacion.setText(consignacionBean.gettotal().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldsubtotalConsignacion.setText(consignacionBean.getsubtotal().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldotroConsignacion.setText(consignacionBean.getotro().toString());
			this.jInternalFrameDetalleFormConsignacion.jTextFieldfinanciamientoConsignacion.setText(consignacionBean.getfinanciamiento().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanConsignacion(ConsignacionParameterReturnGeneral consignacionReturnGeneral,ConsignacionBean consignacionBean,Boolean conDefault) throws Exception { 
		try {
			Consignacion consignacionLocal=new Consignacion();
			
			consignacionLocal=consignacionReturnGeneral.getConsignacion();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && consignacionLocal.getId()!=null && !consignacionLocal.getId().equals(0L))) {consignacionBean.setId(consignacionLocal.getId());}}
			if(conDefault || (!conDefault && consignacionLocal.getnumero()!=null && !consignacionLocal.getnumero().equals(""))) {consignacionBean.setnumero(consignacionLocal.getnumero());}
			if(conDefault || (!conDefault && consignacionLocal.getnumero_autorizacion()!=null && !consignacionLocal.getnumero_autorizacion().equals(""))) {consignacionBean.setnumero_autorizacion(consignacionLocal.getnumero_autorizacion());}
			if(conDefault || (!conDefault && consignacionLocal.getfecha_emision()!=null && !consignacionLocal.getfecha_emision().equals(new Date()))) {consignacionBean.setfecha_emision(consignacionLocal.getfecha_emision());}
			if(conDefault || (!conDefault && consignacionLocal.getfecha_vencimiento()!=null && !consignacionLocal.getfecha_vencimiento().equals(new Date()))) {consignacionBean.setfecha_vencimiento(consignacionLocal.getfecha_vencimiento());}
			if(conDefault || (!conDefault && consignacionLocal.getcotizacion()!=null && !consignacionLocal.getcotizacion().equals(0.0))) {consignacionBean.setcotizacion(consignacionLocal.getcotizacion());}
			if(conDefault || (!conDefault && consignacionLocal.getdireccion()!=null && !consignacionLocal.getdireccion().equals(""))) {consignacionBean.setdireccion(consignacionLocal.getdireccion());}
			if(conDefault || (!conDefault && consignacionLocal.gettelefono()!=null && !consignacionLocal.gettelefono().equals(""))) {consignacionBean.settelefono(consignacionLocal.gettelefono());}
			if(conDefault || (!conDefault && consignacionLocal.getruc()!=null && !consignacionLocal.getruc().equals(""))) {consignacionBean.setruc(consignacionLocal.getruc());}
			if(conDefault || (!conDefault && consignacionLocal.getdescripcion()!=null && !consignacionLocal.getdescripcion().equals(""))) {consignacionBean.setdescripcion(consignacionLocal.getdescripcion());}
			if(conDefault || (!conDefault && consignacionLocal.getdescuento_porcentaje()!=null && !consignacionLocal.getdescuento_porcentaje().equals(0.0))) {consignacionBean.setdescuento_porcentaje(consignacionLocal.getdescuento_porcentaje());}
			if(conDefault || (!conDefault && consignacionLocal.gettotal_con_iva()!=null && !consignacionLocal.gettotal_con_iva().equals(0.0))) {consignacionBean.settotal_con_iva(consignacionLocal.gettotal_con_iva());}
			if(conDefault || (!conDefault && consignacionLocal.getsuman()!=null && !consignacionLocal.getsuman().equals(0.0))) {consignacionBean.setsuman(consignacionLocal.getsuman());}
			if(conDefault || (!conDefault && consignacionLocal.getdescuento_valor()!=null && !consignacionLocal.getdescuento_valor().equals(0.0))) {consignacionBean.setdescuento_valor(consignacionLocal.getdescuento_valor());}
			if(conDefault || (!conDefault && consignacionLocal.gettotal_sin_iva()!=null && !consignacionLocal.gettotal_sin_iva().equals(0.0))) {consignacionBean.settotal_sin_iva(consignacionLocal.gettotal_sin_iva());}
			if(conDefault || (!conDefault && consignacionLocal.gettotal_descuento()!=null && !consignacionLocal.gettotal_descuento().equals(0.0))) {consignacionBean.settotal_descuento(consignacionLocal.gettotal_descuento());}
			if(conDefault || (!conDefault && consignacionLocal.getflete()!=null && !consignacionLocal.getflete().equals(0.0))) {consignacionBean.setflete(consignacionLocal.getflete());}
			if(conDefault || (!conDefault && consignacionLocal.gettotal()!=null && !consignacionLocal.gettotal().equals(0.0))) {consignacionBean.settotal(consignacionLocal.gettotal());}
			if(conDefault || (!conDefault && consignacionLocal.getsubtotal()!=null && !consignacionLocal.getsubtotal().equals(0.0))) {consignacionBean.setsubtotal(consignacionLocal.getsubtotal());}
			if(conDefault || (!conDefault && consignacionLocal.getotro()!=null && !consignacionLocal.getotro().equals(0.0))) {consignacionBean.setotro(consignacionLocal.getotro());}
			if(conDefault || (!conDefault && consignacionLocal.getfinanciamiento()!=null && !consignacionLocal.getfinanciamiento().equals(0.0))) {consignacionBean.setfinanciamiento(consignacionLocal.getfinanciamiento());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxConsignacionGenerico(Long idConsignacionSeleccionado,JComboBox jComboBoxConsignacion,List<Consignacion> consignacionsLocal)throws Exception {
		try {
			Consignacion  consignacionTemp=null;

			for(Consignacion consignacionAux:consignacionsLocal) {
				if(consignacionAux.getId()!=null && consignacionAux.getId().equals(idConsignacionSeleccionado)) {
					consignacionTemp=consignacionAux;
					break;
				}
			}

			jComboBoxConsignacion.setSelectedItem(consignacionTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxConsignacionGenerico(JComboBox jComboBoxConsignacion,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxConsignacion.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxConsignacion.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxConsignacion.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxConsignacion.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxConsignacion.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxConsignacion.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxConsignacion.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxConsignacion.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxConsignacion.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxConsignacion.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("DetalleConsignacion")) {
			jButtonDetalleConsignacionActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			consignacion=(Consignacion) consignacionLogic.getConsignacions().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			consignacion =(Consignacion) consignacions.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.getmes_descripcion();
			}
		}

		if(sTipo.equals("Usuario")) {
			//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.getusuario_descripcion();
			} else {
				//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.getusuario_descripcion();
			}
		}

		if(sTipo.equals("Moneda")) {
			//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.getmoneda_descripcion();
			} else {
				//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.getmoneda_descripcion();
			}
		}

		if(sTipo.equals("Empleado")) {
			//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.getempleado_descripcion();
			} else {
				//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.getempleado_descripcion();
			}
		}

		if(sTipo.equals("TipoPrecio")) {
			//sDescripcion=this.getActualTipoPrecioForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.gettipoprecio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoPrecioForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.gettipoprecio_descripcion();
			}
		}

		if(sTipo.equals("Formato")) {
			//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.getformato_descripcion();
			} else {
				//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.getformato_descripcion();
			}
		}

		if(sTipo.equals("Cliente")) {
			//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.getcliente_descripcion();
			} else {
				//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.getcliente_descripcion();
			}
		}

		if(sTipo.equals("SubCliente")) {
			//sDescripcion=this.getActualSubClienteForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.getsubcliente_descripcion();
			} else {
				//sDescripcion=this.getActualSubClienteForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.getsubcliente_descripcion();
			}
		}

		if(sTipo.equals("Consignatario")) {
			//sDescripcion=this.getActualConsignatarioForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.getconsignatario_descripcion();
			} else {
				//sDescripcion=this.getActualConsignatarioForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.getconsignatario_descripcion();
			}
		}

		if(sTipo.equals("Vendedor")) {
			//sDescripcion=this.getActualVendedorForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.getvendedor_descripcion();
			} else {
				//sDescripcion=this.getActualVendedorForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.getvendedor_descripcion();
			}
		}

		if(sTipo.equals("EstadoPedido")) {
			//sDescripcion=this.getActualEstadoPedidoForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.getestadopedido_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoPedidoForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.getestadopedido_descripcion();
			}
		}

		if(sTipo.equals("TipoCambio")) {
			//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.gettipocambio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.gettipocambio_descripcion();
			}
		}

		if(sTipo.equals("Zona")) {
			//sDescripcion=this.getActualZonaForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.getzona_descripcion();
			} else {
				//sDescripcion=this.getActualZonaForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.getzona_descripcion();
			}
		}

		if(sTipo.equals("CentroCosto")) {
			//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.getcentrocosto_descripcion();
			} else {
				//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.getcentrocosto_descripcion();
			}
		}

		if(sTipo.equals("Responsable")) {
			//sDescripcion=this.getActualResponsableForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.getresponsable_descripcion();
			} else {
				//sDescripcion=this.getActualResponsableForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.getresponsable_descripcion();
			}
		}

		if(sTipo.equals("Transportista")) {
			//sDescripcion=this.getActualTransportistaForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.gettransportista_descripcion();
			} else {
				//sDescripcion=this.getActualTransportistaForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.gettransportista_descripcion();
			}
		}

		if(sTipo.equals("Transporte")) {
			//sDescripcion=this.getActualTransporteForeignKeyDescripcion((Long)value);
			if(!consignacion.getIsNew() && !consignacion.getIsChanged() && !consignacion.getIsDeleted()) {
				sDescripcion=consignacion.gettransporte_descripcion();
			} else {
				//sDescripcion=this.getActualTransporteForeignKeyDescripcion((Long)value);
				sDescripcion=consignacion.gettransporte_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		Consignacion consignacionRow=new Consignacion();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			consignacionRow=(Consignacion) consignacionLogic.getConsignacions().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			consignacionRow=(Consignacion) consignacions.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("EstadoPedido")) {
			color=FuncionesSwing.getColorGeneral(consignacionRow.getEstadoPedido().getid_color_general());
		}

		
		return color;
	}
	
	
	
	
	public void jButtonDetalleConsignacionActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,Consignacion consignacion) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormConsignacion==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion = (Consignacion)this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.consignacion = (Consignacion)this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(consignacion!=null) {
						this.consignacion = consignacion;
					} else {
						this.consignacion = new Consignacion();
					}
				}

				if(this.isTienePermisosDetalleConsignacion && this.permiteMantenimiento(this.consignacion)) {
					DetalleConsignacionBeanSwingJInternalFrame detalleconsignacionBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFramePopup=new DetalleConsignacionBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						detalleconsignacionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFramePopup;
					} else {
						detalleconsignacionBeanSwingJInternalFrame=this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame;
					}

					List<Consignacion> consignacions=new ArrayList<Consignacion>();
					consignacions.add(this.consignacion);
					if(!esRelacionado) {
						//detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionSessionBean.setConGuardarRelaciones(false);
						//detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					detalleconsignacionBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormConsignacion.cargarDetalleConsignacionBeanSwingJInternalFrame(consignacions,this.consignacion,detalleconsignacionBeanSwingJInternalFrame,/*conInicializar,*/detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionSessionBean.getConGuardarRelaciones(),detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionSessionBean.getEsGuardarRelacionado());
					detalleconsignacionBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						detalleconsignacionBeanSwingJInternalFrame.actualizarEstadoPanelsDetalleConsignacion("no_relacionado");

						detalleconsignacionBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(DetalleConsignacionConstantesFunciones.ITAMANIOFILATABLA + (DetalleConsignacionConstantesFunciones.ITAMANIOFILATABLA/2));

						detalleconsignacionBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
						TitledBorder titledBorderDetalleConsignacion=(TitledBorder)detalleconsignacionBeanSwingJInternalFrame.jScrollPanelDatosDetalleConsignacion.getBorder();

						titledBorderDetalleConsignacion.setTitle(titledBorderConsignacion.getTitle() + " -> Detalle Consignacion");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,detalleconsignacionBeanSwingJInternalFrame);
						}

						detalleconsignacionBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(detalleconsignacionBeanSwingJInternalFrame);

						detalleconsignacionBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.consignacionSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Detalle Consignacion",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualConsignacion(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoConsignacion.setVisible((this.isVisibilidadCeldaNuevoConsignacion && this.isPermisoNuevoConsignacion));			
			this.jButtonDuplicarConsignacion.setVisible((this.isVisibilidadCeldaDuplicarConsignacion && this.isPermisoDuplicarConsignacion));			
			this.jButtonCopiarConsignacion.setVisible((this.isVisibilidadCeldaCopiarConsignacion && this.isPermisoCopiarConsignacion));
			this.jButtonVerFormConsignacion.setVisible((this.isVisibilidadCeldaVerFormConsignacion && this.isPermisoVerFormConsignacion));
			
			this.jButtonAbrirOrderByConsignacion.setVisible((this.isVisibilidadCeldaOrdenConsignacion && this.isPermisoOrdenConsignacion));			
			
			this.jButtonNuevoRelacionesConsignacion.setVisible((this.isVisibilidadCeldaNuevoRelacionesConsignacion && this.isPermisoNuevoConsignacion));			
			this.jButtonNuevoGuardarCambiosConsignacion.setVisible((this.isVisibilidadCeldaNuevoConsignacion && this.isPermisoNuevoConsignacion && this.isPermisoGuardarCambiosConsignacion));
			
			if(this.jInternalFrameDetalleFormConsignacion!=null) {
			this.jInternalFrameDetalleFormConsignacion.jButtonModificarConsignacion.setVisible((this.isVisibilidadCeldaModificarConsignacion && this.isPermisoActualizarConsignacion));	
			this.jInternalFrameDetalleFormConsignacion.jButtonActualizarConsignacion.setVisible((this.isVisibilidadCeldaActualizarConsignacion && this.isPermisoActualizarConsignacion));	
			this.jInternalFrameDetalleFormConsignacion.jButtonEliminarConsignacion.setVisible((this.isVisibilidadCeldaEliminarConsignacion && this.isPermisoEliminarConsignacion));
			this.jInternalFrameDetalleFormConsignacion.jButtonCancelarConsignacion.setVisible(this.isVisibilidadCeldaCancelarConsignacion);							
			this.jInternalFrameDetalleFormConsignacion.jButtonGuardarCambiosConsignacion.setVisible((this.isVisibilidadCeldaGuardarConsignacion && this.isPermisoGuardarCambiosConsignacion));			
			
			}
						
			this.jButtonGuardarCambiosTablaConsignacion.setVisible((this.isVisibilidadCeldaGuardarCambiosConsignacion && this.isPermisoGuardarCambiosConsignacion));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarConsignacion.setVisible((this.isVisibilidadCeldaNuevoConsignacion && this.isPermisoNuevoConsignacion));						
			this.jButtonDuplicarToolBarConsignacion.setVisible((this.isVisibilidadCeldaDuplicarConsignacion && this.isPermisoDuplicarConsignacion));						
			this.jButtonCopiarToolBarConsignacion.setVisible((this.isVisibilidadCeldaCopiarConsignacion && this.isPermisoCopiarConsignacion));			
			this.jButtonVerFormToolBarConsignacion.setVisible((this.isVisibilidadCeldaVerFormConsignacion && this.isPermisoVerFormConsignacion));			
			this.jButtonAbrirOrderByToolBarConsignacion.setVisible((this.isVisibilidadCeldaOrdenConsignacion && this.isPermisoOrdenConsignacion));
			this.jButtonNuevoRelacionesToolBarConsignacion.setVisible((this.isVisibilidadCeldaNuevoRelacionesConsignacion && this.isPermisoNuevoConsignacion));			
			this.jButtonNuevoGuardarCambiosToolBarConsignacion.setVisible((this.isVisibilidadCeldaNuevoConsignacion && this.isPermisoNuevoConsignacion && this.isPermisoGuardarCambiosConsignacion));			
			
			if(this.jInternalFrameDetalleFormConsignacion!=null) {
			this.jInternalFrameDetalleFormConsignacion.jButtonModificarToolBarConsignacion.setVisible((this.isVisibilidadCeldaModificarConsignacion && this.isPermisoActualizarConsignacion));	
			this.jInternalFrameDetalleFormConsignacion.jButtonActualizarToolBarConsignacion.setVisible((this.isVisibilidadCeldaActualizarConsignacion  && this.isPermisoActualizarConsignacion));	
			this.jInternalFrameDetalleFormConsignacion.jButtonEliminarToolBarConsignacion.setVisible((this.isVisibilidadCeldaEliminarConsignacion && this.isPermisoEliminarConsignacion));
			this.jInternalFrameDetalleFormConsignacion.jButtonCancelarToolBarConsignacion.setVisible(this.isVisibilidadCeldaCancelarConsignacion);				
			this.jInternalFrameDetalleFormConsignacion.jButtonGuardarCambiosToolBarConsignacion.setVisible((this.isVisibilidadCeldaGuardarConsignacion && this.isPermisoGuardarCambiosConsignacion));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarConsignacion.setVisible((this.isVisibilidadCeldaGuardarCambiosConsignacion && this.isPermisoGuardarCambiosConsignacion));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoConsignacion.setVisible((this.isVisibilidadCeldaNuevoConsignacion && this.isPermisoNuevoConsignacion));			
			this.jMenuItemDuplicarConsignacion.setVisible((this.isVisibilidadCeldaDuplicarConsignacion && this.isPermisoDuplicarConsignacion));			
			this.jMenuItemCopiarConsignacion.setVisible((this.isVisibilidadCeldaCopiarConsignacion && this.isPermisoCopiarConsignacion));			
			this.jMenuItemVerFormConsignacion.setVisible((this.isVisibilidadCeldaVerFormConsignacion && this.isPermisoVerFormConsignacion));			
			this.jMenuItemAbrirOrderByConsignacion.setVisible((this.isVisibilidadCeldaOrdenConsignacion && this.isPermisoOrdenConsignacion));			
			//this.jMenuItemMostrarOcultarConsignacion.setVisible((this.isVisibilidadCeldaOrdenConsignacion && this.isPermisoOrdenConsignacion));
			this.jMenuItemDetalleAbrirOrderByConsignacion.setVisible((this.isVisibilidadCeldaOrdenConsignacion && this.isPermisoOrdenConsignacion));			
			//this.jMenuItemDetalleMostrarOcultarConsignacion.setVisible((this.isVisibilidadCeldaOrdenConsignacion && this.isPermisoOrdenConsignacion));			
			this.jMenuItemNuevoRelacionesConsignacion.setVisible((this.isVisibilidadCeldaNuevoRelacionesConsignacion && this.isPermisoNuevoConsignacion));			
			this.jMenuItemNuevoGuardarCambiosConsignacion.setVisible((this.isVisibilidadCeldaNuevoConsignacion && this.isPermisoNuevoConsignacion && this.isPermisoGuardarCambiosConsignacion));									
			
			if(this.jInternalFrameDetalleFormConsignacion!=null) {
			this.jInternalFrameDetalleFormConsignacion.jMenuItemModificarConsignacion.setVisible((this.isVisibilidadCeldaModificarConsignacion && this.isPermisoActualizarConsignacion));	
			this.jInternalFrameDetalleFormConsignacion.jMenuItemActualizarConsignacion.setVisible((this.isVisibilidadCeldaActualizarConsignacion && this.isPermisoActualizarConsignacion));	
			this.jInternalFrameDetalleFormConsignacion.jMenuItemEliminarConsignacion.setVisible((this.isVisibilidadCeldaEliminarConsignacion && this.isPermisoEliminarConsignacion));
			this.jInternalFrameDetalleFormConsignacion.jMenuItemCancelarConsignacion.setVisible(this.isVisibilidadCeldaCancelarConsignacion);				
			}
			
			this.jMenuItemGuardarCambiosConsignacion.setVisible((this.isVisibilidadCeldaGuardarConsignacion && this.isPermisoGuardarCambiosConsignacion));						
			this.jMenuItemGuardarCambiosTablaConsignacion.setVisible((this.isVisibilidadCeldaGuardarCambiosConsignacion && this.isPermisoGuardarCambiosConsignacion));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoConsignacion=this.jButtonNuevoConsignacion.isVisible();
			this.isVisibilidadCeldaDuplicarConsignacion=this.jButtonDuplicarConsignacion.isVisible();
			this.isVisibilidadCeldaCopiarConsignacion=this.jButtonCopiarConsignacion.isVisible();
			this.isVisibilidadCeldaVerFormConsignacion=this.jButtonVerFormConsignacion.isVisible();
			
			this.isVisibilidadCeldaOrdenConsignacion=this.jButtonAbrirOrderByConsignacion.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesConsignacion=this.jButtonNuevoRelacionesConsignacion.isVisible();
			this.isVisibilidadCeldaModificarConsignacion=this.jButtonModificarConsignacion.isVisible();
			
			if(this.jInternalFrameDetalleFormConsignacion!=null) {
			this.isVisibilidadCeldaActualizarConsignacion=this.jInternalFrameDetalleFormConsignacion.jButtonActualizarConsignacion.isVisible();
			this.isVisibilidadCeldaEliminarConsignacion=this.jInternalFrameDetalleFormConsignacion.jButtonEliminarConsignacion.isVisible();
			this.isVisibilidadCeldaCancelarConsignacion=this.jInternalFrameDetalleFormConsignacion.jButtonCancelarConsignacion.isVisible();
			this.isVisibilidadCeldaGuardarConsignacion=this.jInternalFrameDetalleFormConsignacion.jButtonGuardarCambiosConsignacion.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosConsignacion=this.jButtonGuardarCambiosTablaConsignacion.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoConsignacion=this.jButtonNuevoToolBarConsignacion.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesConsignacion=this.jButtonNuevoRelacionesToolBarConsignacion.isVisible();
			
			if(this.jInternalFrameDetalleFormConsignacion!=null) {
			this.isVisibilidadCeldaModificarConsignacion=this.jInternalFrameDetalleFormConsignacion.jButtonModificarToolBarConsignacion.isVisible();
			this.isVisibilidadCeldaActualizarConsignacion=this.jInternalFrameDetalleFormConsignacion.jButtonActualizarToolBarConsignacion.isVisible();
			this.isVisibilidadCeldaEliminarConsignacion=this.jInternalFrameDetalleFormConsignacion.jButtonEliminarToolBarConsignacion.isVisible();
			this.isVisibilidadCeldaCancelarConsignacion=this.jInternalFrameDetalleFormConsignacion.jButtonCancelarToolBarConsignacion.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarConsignacion=this.jButtonGuardarCambiosToolBarConsignacion.isVisible();
			this.isVisibilidadCeldaGuardarCambiosConsignacion=this.jButtonGuardarCambiosTablaToolBarConsignacion.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoConsignacion=this.jMenuItemNuevoConsignacion.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesConsignacion=this.jMenuItemNuevoRelacionesConsignacion.isVisible();
			
			if(this.jInternalFrameDetalleFormConsignacion!=null) {
			this.isVisibilidadCeldaModificarConsignacion=this.jInternalFrameDetalleFormConsignacion.jMenuItemModificarConsignacion.isVisible();
			this.isVisibilidadCeldaActualizarConsignacion=this.jInternalFrameDetalleFormConsignacion.jMenuItemActualizarConsignacion.isVisible();
			this.isVisibilidadCeldaEliminarConsignacion=this.jInternalFrameDetalleFormConsignacion.jMenuItemEliminarConsignacion.isVisible();
			this.isVisibilidadCeldaCancelarConsignacion=this.jInternalFrameDetalleFormConsignacion.jMenuItemCancelarConsignacion.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarConsignacion=this.jMenuItemGuardarCambiosConsignacion.isVisible();
			this.isVisibilidadCeldaGuardarCambiosConsignacion=this.jMenuItemGuardarCambiosTablaConsignacion.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesConsignacion(Boolean esInicializar) {
		if(ConsignacionJInternalFrame.ISBINDING_MANUAL) {			
			if(this.consignacionSessionBean.getConGuardarRelaciones()) {
				//if(this.consignacionSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesConsignacion();
			}
			
			this.inicializarActualizarBindingBotonesManualConsignacion(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualConsignacion() {
		this.jButtonNuevoConsignacion.setVisible(this.isPermisoNuevoConsignacion);			
		this.jButtonDuplicarConsignacion.setVisible(this.isPermisoDuplicarConsignacion);			
		this.jButtonCopiarConsignacion.setVisible(this.isPermisoCopiarConsignacion);			
		this.jButtonVerFormConsignacion.setVisible(this.isPermisoVerFormConsignacion);			
		
		this.jButtonAbrirOrderByConsignacion.setVisible(this.isPermisoOrdenConsignacion);					
		
		this.jButtonNuevoRelacionesConsignacion.setVisible(this.isPermisoNuevoConsignacion);			
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConsignacion.jButtonModificarConsignacion.setVisible(this.isPermisoActualizarConsignacion);	
			this.jInternalFrameDetalleFormConsignacion.jButtonActualizarConsignacion.setVisible(this.isPermisoActualizarConsignacion);	
			this.jInternalFrameDetalleFormConsignacion.jButtonEliminarConsignacion.setVisible(this.isPermisoEliminarConsignacion);
			this.jInternalFrameDetalleFormConsignacion.jButtonCancelarConsignacion.setVisible(this.isVisibilidadCeldaCancelarConsignacion);						
			this.jInternalFrameDetalleFormConsignacion.jButtonGuardarCambiosConsignacion.setVisible(this.isPermisoGuardarCambiosConsignacion);							
		}
		
		this.jButtonGuardarCambiosTablaConsignacion.setVisible(this.isPermisoActualizarConsignacion);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleConsignacion() {
		this.jInternalFrameDetalleFormConsignacion.jButtonModificarConsignacion.setVisible(this.isPermisoActualizarConsignacion);	
		this.jInternalFrameDetalleFormConsignacion.jButtonActualizarConsignacion.setVisible(this.isPermisoActualizarConsignacion);	
		this.jInternalFrameDetalleFormConsignacion.jButtonEliminarConsignacion.setVisible(this.isPermisoEliminarConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jButtonCancelarConsignacion.setVisible(this.isVisibilidadCeldaCancelarConsignacion);							
		this.jInternalFrameDetalleFormConsignacion.jButtonGuardarCambiosConsignacion.setVisible((this.isVisibilidadCeldaGuardarConsignacion && this.isPermisoGuardarCambiosConsignacion));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosConsignacion() {
		if(ConsignacionJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualConsignacion();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesConsignacion() {
	}
	
	public void jTableDatosConsignacionListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarConsignacion(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.consignacion.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebConsignacion(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderConsignacion.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.consignacion.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebConsignacion(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderConsignacion.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.consignacion.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebConsignacion(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderConsignacion.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.consignacion.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebConsignacion(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderConsignacion.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.consignacion.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebConsignacion(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderConsignacion.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.consignacion.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebConsignacion(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderConsignacion.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.consignacion.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_usuarioConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisousuario=true;

			idTienePermisousuario=this.tienePermisosUsuarioEnPaginaWebConsignacion(UsuarioConstantesFunciones.CLASSNAME);

			if(idTienePermisousuario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.usuarioBeanSwingJInternalFrame=new UsuarioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.usuarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.usuarioBeanSwingJInternalFrame.getUsuarioLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_usuario()!=null) {
					this.usuarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.usuarioBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_usuario());
					this.usuarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaUsuario();
				}

				JInternalFrameBase jinternalFrame =this.usuarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBorderusuario=(TitledBorder)this.usuarioBeanSwingJInternalFrame.jScrollPanelDatosUsuario.getBorder();

				titledBorderusuario.setTitle(titledBorderConsignacion.getTitle() + " -> Usuario");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_usuarioConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_usuario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_usuario = "+this.consignacion.getid_usuario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumeroConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getnumero()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero like '%"+this.consignacion.getnumero()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_autorizacionConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getnumero_autorizacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_autorizacion like '%"+this.consignacion.getnumero_autorizacion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_emisionConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getfecha_emision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_emision = '"+Funciones2.getStringPostgresDate(this.consignacion.getfecha_emision())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_vencimientoConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getfecha_vencimiento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_vencimiento = '"+Funciones2.getStringPostgresDate(this.consignacion.getfecha_vencimiento())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_monedaConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomoneda=true;

			idTienePermisomoneda=this.tienePermisosUsuarioEnPaginaWebConsignacion(MonedaConstantesFunciones.CLASSNAME);

			if(idTienePermisomoneda) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.monedaBeanSwingJInternalFrame=new MonedaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.monedaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.monedaBeanSwingJInternalFrame.getMonedaLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_moneda()!=null) {
					this.monedaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.monedaBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_moneda());
					this.monedaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.inicializarActualizarBindingTablaMoneda();
				}

				JInternalFrameBase jinternalFrame =this.monedaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBordermoneda=(TitledBorder)this.monedaBeanSwingJInternalFrame.jScrollPanelDatosMoneda.getBorder();

				titledBordermoneda.setTitle(titledBorderConsignacion.getTitle() + " -> Moneda");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_monedaConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_moneda()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_moneda = "+this.consignacion.getid_moneda().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncotizacionConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getcotizacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cotizacion = "+this.consignacion.getcotizacion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empleadoConsignacionActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="Empleado";

			if(!this.sFinalQueryGeneral_empleado.equals("")) {
				this.empleadoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_empleado);
				this.empleadoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.empleadoBeanSwingJInternalFrame.procesarBusqueda(this.empleadoBeanSwingJInternalFrame.sAccionBusqueda);
				this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingEmpleado(false);
			}

			if(!this.sFinalQueryComboEmpleado.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderConsignacion=null;
			TitledBorder titledBorderempleado=null;

			if(!this.jScrollPanelDatosConsignacion.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderConsignacion.getTitle() + " -> Empleado");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_empleadoConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempleado=true;

			idTienePermisoempleado=this.tienePermisosUsuarioEnPaginaWebConsignacion(EmpleadoConstantesFunciones.CLASSNAME);

			if(idTienePermisoempleado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empleadoBeanSwingJInternalFrame.getEmpleadoLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_empleado()!=null) {
					this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empleadoBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_empleado());
					this.empleadoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleado();
				}

				JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderConsignacion.getTitle() + " -> Empleado");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empleadoConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_empleado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empleado = "+this.consignacion.getid_empleado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_precioConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoprecio=true;

			idTienePermisotipoprecio=this.tienePermisosUsuarioEnPaginaWebConsignacion(TipoPrecioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoprecio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.tipoprecioBeanSwingJInternalFrame=new TipoPrecioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoprecioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoprecioBeanSwingJInternalFrame.getTipoPrecioLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_tipo_precio()!=null) {
					this.tipoprecioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoprecioBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_tipo_precio());
					this.tipoprecioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoprecioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoprecioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoPrecio();
				}

				JInternalFrameBase jinternalFrame =this.tipoprecioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBordertipoprecio=(TitledBorder)this.tipoprecioBeanSwingJInternalFrame.jScrollPanelDatosTipoPrecio.getBorder();

				titledBordertipoprecio.setTitle(titledBorderConsignacion.getTitle() + " -> Tipo Precio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_precioConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_tipo_precio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_precio = "+this.consignacion.getid_tipo_precio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_formatoConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoformato=true;

			idTienePermisoformato=this.tienePermisosUsuarioEnPaginaWebConsignacion(FormatoConstantesFunciones.CLASSNAME);

			if(idTienePermisoformato) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.formatoBeanSwingJInternalFrame=new FormatoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.formatoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.formatoBeanSwingJInternalFrame.getFormatoLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_formato()!=null) {
					this.formatoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.formatoBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_formato());
					this.formatoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormato();
				}

				JInternalFrameBase jinternalFrame =this.formatoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBorderformato=(TitledBorder)this.formatoBeanSwingJInternalFrame.jScrollPanelDatosFormato.getBorder();

				titledBorderformato.setTitle(titledBorderConsignacion.getTitle() + " -> Formato");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_formatoConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_formato()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_formato = "+this.consignacion.getid_formato().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondireccionConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getdireccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where direccion like '%"+this.consignacion.getdireccion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clienteConsignacionActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteBeanSwingJInternalFrame.sTipoBusqueda="Cliente";

			if(!this.sFinalQueryGeneral_cliente.equals("")) {
				this.clienteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cliente);
				this.clienteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteBeanSwingJInternalFrame.procesarBusqueda(this.clienteBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboCliente.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderConsignacion=null;
			TitledBorder titledBordercliente=null;

			if(!this.jScrollPanelDatosConsignacion.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderConsignacion.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_clienteConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocliente=true;

			idTienePermisocliente=this.tienePermisosUsuarioEnPaginaWebConsignacion(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_cliente()!=null) {
					this.clienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_cliente());
					this.clienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderConsignacion.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clienteConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente = "+this.consignacion.getid_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontelefonoConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.gettelefono()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where telefono like '%"+this.consignacion.gettelefono()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonrucConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getruc()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ruc like '%"+this.consignacion.getruc()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sub_clienteConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosubcliente=true;

			idTienePermisosubcliente=this.tienePermisosUsuarioEnPaginaWebConsignacion(SubClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisosubcliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.subclienteBeanSwingJInternalFrame=new SubClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.subclienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.subclienteBeanSwingJInternalFrame.getSubClienteLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_sub_cliente()!=null) {
					this.subclienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.subclienteBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_sub_cliente());
					this.subclienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.subclienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.subclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaSubCliente();
				}

				JInternalFrameBase jinternalFrame =this.subclienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBordersubcliente=(TitledBorder)this.subclienteBeanSwingJInternalFrame.jScrollPanelDatosSubCliente.getBorder();

				titledBordersubcliente.setTitle(titledBorderConsignacion.getTitle() + " -> Sub Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sub_clienteConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_sub_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sub_cliente = "+this.consignacion.getid_sub_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_consignatarioConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoconsignatario=true;

			idTienePermisoconsignatario=this.tienePermisosUsuarioEnPaginaWebConsignacion(ConsignatarioConstantesFunciones.CLASSNAME);

			if(idTienePermisoconsignatario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.consignatarioBeanSwingJInternalFrame=new ConsignatarioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.consignatarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.consignatarioBeanSwingJInternalFrame.getConsignatarioLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_consignatario()!=null) {
					this.consignatarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.consignatarioBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_consignatario());
					this.consignatarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.consignatarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.consignatarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaConsignatario();
				}

				JInternalFrameBase jinternalFrame =this.consignatarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBorderconsignatario=(TitledBorder)this.consignatarioBeanSwingJInternalFrame.jScrollPanelDatosConsignatario.getBorder();

				titledBorderconsignatario.setTitle(titledBorderConsignacion.getTitle() + " -> Consignatario");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_consignatarioConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_consignatario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_consignatario = "+this.consignacion.getid_consignatario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_vendedorConsignacionActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.vendedorBeanSwingJInternalFrame=new VendedorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.vendedorBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.vendedorBeanSwingJInternalFrame.sTipoBusqueda="Vendedor";

			if(!this.sFinalQueryGeneral_vendedor.equals("")) {
				this.vendedorBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_vendedor);
				this.vendedorBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.vendedorBeanSwingJInternalFrame.procesarBusqueda(this.vendedorBeanSwingJInternalFrame.sAccionBusqueda);
				this.vendedorBeanSwingJInternalFrame.inicializarActualizarBindingVendedor(false);
			}

			if(!this.sFinalQueryComboVendedor.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.vendedorBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderConsignacion=null;
			TitledBorder titledBordervendedor=null;

			if(!this.jScrollPanelDatosConsignacion.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				titledBordervendedor=(TitledBorder)this.vendedorBeanSwingJInternalFrame.jScrollPanelDatosVendedor.getBorder();

				titledBordervendedor.setTitle(titledBorderConsignacion.getTitle() + " -> Vendedor");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_vendedorConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisovendedor=true;

			idTienePermisovendedor=this.tienePermisosUsuarioEnPaginaWebConsignacion(VendedorConstantesFunciones.CLASSNAME);

			if(idTienePermisovendedor) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.vendedorBeanSwingJInternalFrame=new VendedorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.vendedorBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.vendedorBeanSwingJInternalFrame.getVendedorLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_vendedor()!=null) {
					this.vendedorBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.vendedorBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_vendedor());
					this.vendedorBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.vendedorBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.vendedorBeanSwingJInternalFrame.inicializarActualizarBindingTablaVendedor();
				}

				JInternalFrameBase jinternalFrame =this.vendedorBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBordervendedor=(TitledBorder)this.vendedorBeanSwingJInternalFrame.jScrollPanelDatosVendedor.getBorder();

				titledBordervendedor.setTitle(titledBorderConsignacion.getTitle() + " -> Vendedor");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_vendedorConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_vendedor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_vendedor = "+this.consignacion.getid_vendedor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.consignacion.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_pedidoConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadopedido=true;

			idTienePermisoestadopedido=this.tienePermisosUsuarioEnPaginaWebConsignacion(EstadoPedidoConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadopedido) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.estadopedidoBeanSwingJInternalFrame=new EstadoPedidoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadopedidoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadopedidoBeanSwingJInternalFrame.getEstadoPedidoLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_estado_pedido()!=null) {
					this.estadopedidoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadopedidoBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_estado_pedido());
					this.estadopedidoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadopedidoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadopedidoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoPedido();
				}

				JInternalFrameBase jinternalFrame =this.estadopedidoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBorderestadopedido=(TitledBorder)this.estadopedidoBeanSwingJInternalFrame.jScrollPanelDatosEstadoPedido.getBorder();

				titledBorderestadopedido.setTitle(titledBorderConsignacion.getTitle() + " -> Estado Pedido");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_pedidoConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_estado_pedido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_pedido = "+this.consignacion.getid_estado_pedido().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuento_porcentajeConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getdescuento_porcentaje()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento_porcentaje = "+this.consignacion.getdescuento_porcentaje().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_con_ivaConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.gettotal_con_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_con_iva = "+this.consignacion.gettotal_con_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsumanConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getsuman()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where suman = "+this.consignacion.getsuman().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuento_valorConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getdescuento_valor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento_valor = "+this.consignacion.getdescuento_valor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_sin_ivaConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.gettotal_sin_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_sin_iva = "+this.consignacion.gettotal_sin_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_descuentoConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.gettotal_descuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_descuento = "+this.consignacion.gettotal_descuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfleteConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getflete()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where flete = "+this.consignacion.getflete().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotalConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.gettotal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total = "+this.consignacion.gettotal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsubtotalConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getsubtotal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where subtotal = "+this.consignacion.getsubtotal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonotroConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getotro()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where otro = "+this.consignacion.getotro().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfinanciamientoConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getfinanciamiento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where financiamiento = "+this.consignacion.getfinanciamiento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonivaConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getiva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where iva = "+this.consignacion.getiva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoniceConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getice()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ice = "+this.consignacion.getice().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmonto_retencionConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getmonto_retencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where monto_retencion = "+this.consignacion.getmonto_retencion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_cambioConsignacionActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="TipoCambio";

			if(!this.sFinalQueryGeneral_tipocambio.equals("")) {
				this.tipocambioBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_tipocambio);
				this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.tipocambioBeanSwingJInternalFrame.procesarBusqueda(this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda);
				this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTipoCambio(false);
			}

			if(!this.sFinalQueryComboTipoCambio.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderConsignacion=null;
			TitledBorder titledBordertipocambio=null;

			if(!this.jScrollPanelDatosConsignacion.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderConsignacion.getTitle() + " -> Tipo Cambio");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_tipo_cambioConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipocambio=true;

			idTienePermisotipocambio=this.tienePermisosUsuarioEnPaginaWebConsignacion(TipoCambioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipocambio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipocambioBeanSwingJInternalFrame.getTipoCambioLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_tipo_cambio()!=null) {
					this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipocambioBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_tipo_cambio());
					this.tipocambioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoCambio();
				}

				JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderConsignacion.getTitle() + " -> Tipo Cambio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_cambioConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_tipo_cambio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_cambio = "+this.consignacion.getid_tipo_cambio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_fueConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getnumero_fue()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_fue like '%"+this.consignacion.getnumero_fue()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_zonaConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisozona=true;

			idTienePermisozona=this.tienePermisosUsuarioEnPaginaWebConsignacion(ZonaConstantesFunciones.CLASSNAME);

			if(idTienePermisozona) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.zonaBeanSwingJInternalFrame=new ZonaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.zonaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.zonaBeanSwingJInternalFrame.getZonaLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_zona()!=null) {
					this.zonaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.zonaBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_zona());
					this.zonaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.zonaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.zonaBeanSwingJInternalFrame.inicializarActualizarBindingTablaZona();
				}

				JInternalFrameBase jinternalFrame =this.zonaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBorderzona=(TitledBorder)this.zonaBeanSwingJInternalFrame.jScrollPanelDatosZona.getBorder();

				titledBorderzona.setTitle(titledBorderConsignacion.getTitle() + " -> Zona");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_zonaConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_zona()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_zona = "+this.consignacion.getid_zona().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfechaConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getfecha()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha = '"+Funciones2.getStringPostgresDate(this.consignacion.getfecha())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_centro_costoConsignacionActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="CentroCosto";

			if(!this.sFinalQueryGeneral_centrocosto.equals("")) {
				this.centrocostoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_centrocosto);
				this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.centrocostoBeanSwingJInternalFrame.procesarBusqueda(this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda);
				this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingCentroCosto(false);
			}

			if(!this.sFinalQueryComboCentroCosto.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderConsignacion=null;
			TitledBorder titledBordercentrocosto=null;

			if(!this.jScrollPanelDatosConsignacion.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderConsignacion.getTitle() + " -> Centro Costo");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_centro_costoConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocentrocosto=true;

			idTienePermisocentrocosto=this.tienePermisosUsuarioEnPaginaWebConsignacion(CentroCostoConstantesFunciones.CLASSNAME);

			if(idTienePermisocentrocosto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.centrocostoBeanSwingJInternalFrame.getCentroCostoLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_centro_costo()!=null) {
					this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.centrocostoBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_centro_costo());
					this.centrocostoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCentroCosto();
				}

				JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderConsignacion.getTitle() + " -> Centro Costo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_centro_costoConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_centro_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_centro_costo = "+this.consignacion.getid_centro_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_servidorConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getfecha_servidor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_servidor = '"+Funciones2.getStringPostgresDate(this.consignacion.getfecha_servidor())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_responsableConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoresponsable=true;

			idTienePermisoresponsable=this.tienePermisosUsuarioEnPaginaWebConsignacion(ResponsableConstantesFunciones.CLASSNAME);

			if(idTienePermisoresponsable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.responsableBeanSwingJInternalFrame=new ResponsableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.responsableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.responsableBeanSwingJInternalFrame.getResponsableLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_responsable()!=null) {
					this.responsableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.responsableBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_responsable());
					this.responsableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.responsableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.responsableBeanSwingJInternalFrame.inicializarActualizarBindingTablaResponsable();
				}

				JInternalFrameBase jinternalFrame =this.responsableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBorderresponsable=(TitledBorder)this.responsableBeanSwingJInternalFrame.jScrollPanelDatosResponsable.getBorder();

				titledBorderresponsable.setTitle(titledBorderConsignacion.getTitle() + " -> Responsable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_responsableConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_responsable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_responsable = "+this.consignacion.getid_responsable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonhora_inicioConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.gethora_inicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where hora_inicio = "+this.consignacion.gethora_inicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonhora_finConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.gethora_fin()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where hora_fin = "+this.consignacion.gethora_fin().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transportistaConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransportista=true;

			idTienePermisotransportista=this.tienePermisosUsuarioEnPaginaWebConsignacion(TransportistaConstantesFunciones.CLASSNAME);

			if(idTienePermisotransportista) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.transportistaBeanSwingJInternalFrame=new TransportistaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transportistaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transportistaBeanSwingJInternalFrame.getTransportistaLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_transportista()!=null) {
					this.transportistaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transportistaBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_transportista());
					this.transportistaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transportistaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transportistaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransportista();
				}

				JInternalFrameBase jinternalFrame =this.transportistaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBordertransportista=(TitledBorder)this.transportistaBeanSwingJInternalFrame.jScrollPanelDatosTransportista.getBorder();

				titledBordertransportista.setTitle(titledBorderConsignacion.getTitle() + " -> Transportista");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transportistaConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_transportista()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transportista = "+this.consignacion.getid_transportista().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transporteConsignacionUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransporte=true;

			idTienePermisotransporte=this.tienePermisosUsuarioEnPaginaWebConsignacion(TransporteConstantesFunciones.CLASSNAME);

			if(idTienePermisotransporte) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosConsignacion.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosConsignacion.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);

				this.transporteBeanSwingJInternalFrame=new TransporteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transporteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transporteBeanSwingJInternalFrame.getTransporteLogic().setConnexion(this.consignacionLogic.getConnexion());

				if(this.consignacion.getid_transporte()!=null) {
					this.transporteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transporteBeanSwingJInternalFrame.setIdActual(this.consignacion.getid_transporte());
					this.transporteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transporteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transporteBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransporte();
				}

				JInternalFrameBase jinternalFrame =this.transporteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderConsignacion=(TitledBorder)this.jScrollPanelDatosConsignacion.getBorder();
				TitledBorder titledBordertransporte=(TitledBorder)this.transporteBeanSwingJInternalFrame.jScrollPanelDatosTransporte.getBorder();

				titledBordertransporte.setTitle(titledBorderConsignacion.getTitle() + " -> Transporte");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transporteConsignacionBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.getconsignacion(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.consignacion==null) {
						this.consignacion = new Consignacion();
					}

					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);
				}

				if(this.consignacion.getid_transporte()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transporte = "+this.consignacion.getid_transporte().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingConsignacion(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAnioConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdAnio();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCentroCostoConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdCentroCosto();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClienteConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdCliente();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdConsignatarioConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdConsignatario();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdEjercicio();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpleadoConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdEmpleado();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdEmpresa();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoPedidoConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdEstadoPedido();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFormatoConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdFormato();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdMes();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMonedaConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdMoneda();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdPeriodo();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdResponsableConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdResponsable();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSubClienteConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdSubCliente();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdSucursal();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoCambioConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdTipoCambio();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoPrecioConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdTipoPrecio();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransporteConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdTransporte();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransportistaConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdTransportista();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUsuarioConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdUsuario();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdVendedorConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdVendedor();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdZonaConsignacionActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingConsignacion(false,false);

			this.getConsignacionsFK_IdZona();

			this.inicializarActualizarBindingConsignacion(false);

			//if(ConsignacionBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingConsignacion(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.consignacionLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameConsignacion() {
		if(this.jInternalFrameDetalleFormConsignacion!=null) {
		

		if(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) {
			this.jInternalFrameDetalleFormConsignacion.setVisible(false);	    			
			this.jInternalFrameDetalleFormConsignacion.dispose();
			this.jInternalFrameDetalleFormConsignacion=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoConsignacion!=null) {
			this.jInternalFrameReporteDinamicoConsignacion.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoConsignacion.dispose();
			this.jInternalFrameReporteDinamicoConsignacion=null;
		}
		
		if(this.jInternalFrameImportacionConsignacion!=null) {
			this.jInternalFrameImportacionConsignacion.setVisible(false);	    			
			this.jInternalFrameImportacionConsignacion.dispose();
			this.jInternalFrameImportacionConsignacion=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessConsignacion();
			
			ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
			
			
			if(sTipo.equals("NuevoConsignacion")) {
				jButtonNuevoConsignacionActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarConsignacion")) {
				jButtonDuplicarConsignacionActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarConsignacion")) {
				jButtonCopiarConsignacionActionPerformed(evt);
			} else if(sTipo.equals("VerFormConsignacion")) {
				jButtonVerFormConsignacionActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarConsignacion")) {
				jButtonNuevoConsignacionActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarConsignacion")) {
				jButtonDuplicarConsignacionActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoConsignacion")) {
				jButtonNuevoConsignacionActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarConsignacion")) {
				jButtonDuplicarConsignacionActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesConsignacion")) {
				jButtonNuevoConsignacionActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarConsignacion")) {
				jButtonNuevoConsignacionActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesConsignacion")) {
				jButtonNuevoConsignacionActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarConsignacion")) {
				jButtonModificarConsignacionActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarConsignacion")) {
				jButtonModificarConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarConsignacion")) {
				jButtonModificarConsignacionActionPerformed(evt);
			} else if(sTipo.equals("ActualizarConsignacion")) {
				jButtonActualizarConsignacionActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarConsignacion")) {
				jButtonActualizarConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarConsignacion")) {
				jButtonActualizarConsignacionActionPerformed(evt);
			} else if(sTipo.equals("EliminarConsignacion")) {
				jButtonEliminarConsignacionActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarConsignacion")) {
				jButtonEliminarConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarConsignacion")) {
				jButtonEliminarConsignacionActionPerformed(evt);
			} else if(sTipo.equals("CancelarConsignacion")) {
				jButtonCancelarConsignacionActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarConsignacion")) {
				jButtonCancelarConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarConsignacion")) {
				jButtonCancelarConsignacionActionPerformed(evt);
			} else if(sTipo.equals("CerrarConsignacion")) {
				jButtonCerrarConsignacionActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarConsignacion")) {
				jButtonCerrarConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarConsignacion")) {
				jButtonCerrarConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarConsignacion")) {
				jButtonMostrarOcultarConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarConsignacion")) {
				jButtonCancelarConsignacionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosConsignacion")) {
				jButtonGuardarCambiosConsignacionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarConsignacion")) {
				jButtonGuardarCambiosConsignacionActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarConsignacion")) {
				jButtonCopiarConsignacionActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarConsignacion")) {
				jButtonVerFormConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosConsignacion")) {
				jButtonGuardarCambiosConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarConsignacion")) {
				jButtonCopiarConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormConsignacion")) {
				jButtonVerFormConsignacionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaConsignacion")) {
				jButtonGuardarCambiosConsignacionActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarConsignacion")) {
				jButtonGuardarCambiosConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaConsignacion")) {
				jButtonGuardarCambiosConsignacionActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionConsignacion")) {
				jButtonRecargarInformacionConsignacionActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarConsignacion")) {
				jButtonRecargarInformacionConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionConsignacion")) {
				jButtonRecargarInformacionConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresConsignacion")) {
				jButtonAnterioresConsignacionActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarConsignacion")) {
				jButtonAnterioresConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreConsignacion")) {
				jButtonAnterioresConsignacionActionPerformed(evt);
			} else if(sTipo.equals("SiguientesConsignacion")) {
				jButtonSiguientesConsignacionActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarConsignacion")) {
				jButtonSiguientesConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesConsignacion")) {
				jButtonSiguientesConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByConsignacion") || sTipo.equals("MenuItemDetalleAbrirOrderByConsignacion")) {
				jButtonAbrirOrderByConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarConsignacion") || sTipo.equals("MenuItemDetalleMostrarOcultarConsignacion")) {
				jButtonMostrarOcultarConsignacionActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosConsignacion")) {
				jButtonNuevoGuardarCambiosConsignacionActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarConsignacion")) {
				jButtonNuevoGuardarCambiosConsignacionActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosConsignacion")) {
				jButtonNuevoGuardarCambiosConsignacionActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoConsignacion")) {
				jButtonCerrarReporteDinamicoConsignacionActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoConsignacion")) {
				jButtonGenerarReporteDinamicoConsignacionActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoConsignacion")) {
				
				jButtonGenerarExcelReporteDinamicoConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionConsignacion")) {
				jButtonCerrarImportacionConsignacionActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionConsignacion")) {
				
				jButtonGenerarImportacionConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionConsignacion")) {
				
				jButtonAbrirImportacionConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesConsignacion")) {
				jComboBoxTiposAccionesConsignacionActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesConsignacion")) {
				jComboBoxTiposRelacionesConsignacionActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioConsignacion")) {
				jComboBoxTiposAccionesConsignacionActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarConsignacion")) {
				
				jComboBoxTiposSeleccionarConsignacionActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralConsignacion")) {
				jTextFieldValorCampoGeneralConsignacionActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByConsignacion")) {
				jButtonAbrirOrderByConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarConsignacion")) {
				jButtonAbrirOrderByConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByConsignacion")) {
				jButtonCerrarOrderByConsignacionActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idConsignacionBusqueda")) {
				this.jButtonidConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaConsignacionUpdate")) {
				this.jButtonid_empresaConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaConsignacionBusqueda")) {
				this.jButtonid_empresaConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalConsignacionUpdate")) {
				this.jButtonid_sucursalConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalConsignacionBusqueda")) {
				this.jButtonid_sucursalConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioConsignacionUpdate")) {
				this.jButtonid_ejercicioConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioConsignacionBusqueda")) {
				this.jButtonid_ejercicioConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoConsignacionUpdate")) {
				this.jButtonid_periodoConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoConsignacionBusqueda")) {
				this.jButtonid_periodoConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioConsignacionUpdate")) {
				this.jButtonid_anioConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioConsignacionBusqueda")) {
				this.jButtonid_anioConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesConsignacionUpdate")) {
				this.jButtonid_mesConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesConsignacionBusqueda")) {
				this.jButtonid_mesConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioConsignacionUpdate")) {
				this.jButtonid_usuarioConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioConsignacionBusqueda")) {
				this.jButtonid_usuarioConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numeroConsignacionBusqueda")) {
				this.jButtonnumeroConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_autorizacionConsignacionBusqueda")) {
				this.jButtonnumero_autorizacionConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionConsignacionBusqueda")) {
				this.jButtonfecha_emisionConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_vencimientoConsignacionBusqueda")) {
				this.jButtonfecha_vencimientoConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaConsignacionUpdate")) {
				this.jButtonid_monedaConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaConsignacionBusqueda")) {
				this.jButtonid_monedaConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cotizacionConsignacionBusqueda")) {
				this.jButtoncotizacionConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoConsignacion")) {
				this.jButtonid_empleadoConsignacionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoConsignacionUpdate")) {
				this.jButtonid_empleadoConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoConsignacionBusqueda")) {
				this.jButtonid_empleadoConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_precioConsignacionUpdate")) {
				this.jButtonid_tipo_precioConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_precioConsignacionBusqueda")) {
				this.jButtonid_tipo_precioConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoConsignacionUpdate")) {
				this.jButtonid_formatoConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoConsignacionBusqueda")) {
				this.jButtonid_formatoConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccionConsignacionBusqueda")) {
				this.jButtondireccionConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteConsignacion")) {
				this.jButtonid_clienteConsignacionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteConsignacionUpdate")) {
				this.jButtonid_clienteConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteConsignacionBusqueda")) {
				this.jButtonid_clienteConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefonoConsignacionBusqueda")) {
				this.jButtontelefonoConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucConsignacionBusqueda")) {
				this.jButtonrucConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sub_clienteConsignacionUpdate")) {
				this.jButtonid_sub_clienteConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sub_clienteConsignacionBusqueda")) {
				this.jButtonid_sub_clienteConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_consignatarioConsignacionUpdate")) {
				this.jButtonid_consignatarioConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_consignatarioConsignacionBusqueda")) {
				this.jButtonid_consignatarioConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_vendedorConsignacion")) {
				this.jButtonid_vendedorConsignacionActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_vendedorConsignacionArbol")) {
				this.abrirFrameTreeVendedor("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_vendedorConsignacionUpdate")) {
				this.jButtonid_vendedorConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_vendedorConsignacionBusqueda")) {
				this.jButtonid_vendedorConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionConsignacionBusqueda")) {
				this.jButtondescripcionConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedidoConsignacionUpdate")) {
				this.jButtonid_estado_pedidoConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedidoConsignacionBusqueda")) {
				this.jButtonid_estado_pedidoConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_porcentajeConsignacionBusqueda")) {
				this.jButtondescuento_porcentajeConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_con_ivaConsignacionBusqueda")) {
				this.jButtontotal_con_ivaConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sumanConsignacionBusqueda")) {
				this.jButtonsumanConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_valorConsignacionBusqueda")) {
				this.jButtondescuento_valorConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_sin_ivaConsignacionBusqueda")) {
				this.jButtontotal_sin_ivaConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_descuentoConsignacionBusqueda")) {
				this.jButtontotal_descuentoConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fleteConsignacionBusqueda")) {
				this.jButtonfleteConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalConsignacionBusqueda")) {
				this.jButtontotalConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("subtotalConsignacionBusqueda")) {
				this.jButtonsubtotalConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("otroConsignacionBusqueda")) {
				this.jButtonotroConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("financiamientoConsignacionBusqueda")) {
				this.jButtonfinanciamientoConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaConsignacionBusqueda")) {
				this.jButtonivaConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("iceConsignacionBusqueda")) {
				this.jButtoniceConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_retencionConsignacionBusqueda")) {
				this.jButtonmonto_retencionConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioConsignacion")) {
				this.jButtonid_tipo_cambioConsignacionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioConsignacionUpdate")) {
				this.jButtonid_tipo_cambioConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioConsignacionBusqueda")) {
				this.jButtonid_tipo_cambioConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_fueConsignacionBusqueda")) {
				this.jButtonnumero_fueConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_zonaConsignacionUpdate")) {
				this.jButtonid_zonaConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_zonaConsignacionBusqueda")) {
				this.jButtonid_zonaConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaConsignacionBusqueda")) {
				this.jButtonfechaConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoConsignacion")) {
				this.jButtonid_centro_costoConsignacionActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoConsignacionArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoConsignacionUpdate")) {
				this.jButtonid_centro_costoConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoConsignacionBusqueda")) {
				this.jButtonid_centro_costoConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_servidorConsignacionBusqueda")) {
				this.jButtonfecha_servidorConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_responsableConsignacionUpdate")) {
				this.jButtonid_responsableConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_responsableConsignacionBusqueda")) {
				this.jButtonid_responsableConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_inicioConsignacionBusqueda")) {
				this.jButtonhora_inicioConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_finConsignacionBusqueda")) {
				this.jButtonhora_finConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transportistaConsignacionUpdate")) {
				this.jButtonid_transportistaConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transportistaConsignacionBusqueda")) {
				this.jButtonid_transportistaConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transporteConsignacionUpdate")) {
				this.jButtonid_transporteConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transporteConsignacionBusqueda")) {
				this.jButtonid_transporteConsignacionBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_centro_costoConsignacion")) {
				this.jButtonid_centro_costoConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("id_clienteConsignacion")) {
				this.jButtonid_clienteConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("id_empleadoConsignacion")) {
				this.jButtonid_empleadoConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("id_tipo_cambioConsignacion")) {
				this.jButtonid_tipo_cambioConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("id_vendedorConsignacion")) {
				this.jButtonid_vendedorConsignacionActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdCentroCostoConsignacion")) {
				this.jButtonFK_IdCentroCostoConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdClienteConsignacion")) {
				this.jButtonFK_IdClienteConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdConsignatarioConsignacion")) {
				this.jButtonFK_IdConsignatarioConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmpleadoConsignacion")) {
				this.jButtonFK_IdEmpleadoConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoPedidoConsignacion")) {
				this.jButtonFK_IdEstadoPedidoConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdFormatoConsignacion")) {
				this.jButtonFK_IdFormatoConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdResponsableConsignacion")) {
				this.jButtonFK_IdResponsableConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdSubClienteConsignacion")) {
				this.jButtonFK_IdSubClienteConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoCambioConsignacion")) {
				this.jButtonFK_IdTipoCambioConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoPrecioConsignacion")) {
				this.jButtonFK_IdTipoPrecioConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransporteConsignacion")) {
				this.jButtonFK_IdTransporteConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransportistaConsignacion")) {
				this.jButtonFK_IdTransportistaConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdVendedorConsignacion")) {
				this.jButtonFK_IdVendedorConsignacionActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdZonaConsignacion")) {
				this.jButtonFK_IdZonaConsignacionActionPerformed(evt);
			}
			
			;
			
			
			ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessConsignacion();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaConsignacionActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.consignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.consignacion);
				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
				
				


			if(sTipo.equals("numero_autorizacionConsignacion")) {
				classes.add(new Classe(DetalleConsignacion.class));

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormConsignacion(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Consignacion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Consignacion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			Consignacion consignacionLocal=null;
			
			if(!this.getEsControlTabla()) {
				consignacionLocal=this.consignacion;
			} else {
				consignacionLocal=this.consignacionAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


				if(sTipo.equals("numero_autorizacionConsignacion")) {
					if(consignacionLocal.getnumero_autorizacion()==this.jInternalFrameDetalleFormConsignacion.jTextFieldnumero_autorizacionConsignacion.getText()){existeCambio=false;}
				}
			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.consignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.consignacion);
				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
							
				
				


			if(sTipo.equals("numero_autorizacionConsignacion")) {
				classes.add(new Classe(DetalleConsignacion.class));

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormConsignacion(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Consignacion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Consignacion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaConsignacionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionAnterior =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.consignacionAnterior =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			if(sTipo.equals("numero_autorizacionConsignacion")) {
				classes.add(new Classe(DetalleConsignacion.class));

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormConsignacion(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			
			ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaConsignacionActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.consignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.consignacion);
				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
								
						
				


				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Consignacion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Consignacion.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.consignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.consignacion);
				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
								
				
				


				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Consignacion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Consignacion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaConsignacionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionAnterior =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.consignacionAnterior =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.consignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.consignacion);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaConsignacionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionAnterior =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.consignacionAnterior =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaConsignacionActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.consignacion);
			
			this.actualizarInformacion("INFO_PADRE",false,this.consignacion);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.consignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.consignacion);
				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
							
				
				


			if(sTipo.equals("numero_autorizacionConsignacion")) {
				classes.add(new Classe(DetalleConsignacion.class));

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormConsignacion(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTAREA",classes,false,esControlTabla);
			}
				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Consignacion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Consignacion.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaConsignacionActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacionAnterior =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.consignacionAnterior =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			if(sTipo.equals("numero_autorizacionConsignacion")) {
				classes.add(new Classe(DetalleConsignacion.class));

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormConsignacion(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTAREA",classes,false,esControlTabla);
			}
			
			ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaConsignacionActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.consignacion);
			
			this.actualizarInformacion("INFO_PADRE",false,this.consignacion);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.consignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.consignacion);
				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
								
				
				


			if(sTipo.equals("numero_autorizacionConsignacion")) {
				classes.add(new Classe(DetalleConsignacion.class));

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormConsignacion(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);
			}
				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Consignacion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Consignacion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaConsignacionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionAnterior =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.consignacionAnterior =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaConsignacionActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.consignacion);
			
			this.actualizarInformacion("INFO_PADRE",false,this.consignacion);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaConsignacionActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.consignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.consignacion);
				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosConsignacion")) {
					jCheckBoxSeleccionarTodosConsignacionItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosConsignacion")) {
					jCheckBoxSeleccionadosConsignacionItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarConsignacion")) {
					
				}
				
				


				
				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Consignacion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Consignacion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.consignacion);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.consignacion);
				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
												
				
				


				
				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Consignacion.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Consignacion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaConsignacionActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.consignacionAnterior =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.consignacionAnterior =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaConsignacionActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.consignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.consignacion);
				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
				
				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaConsignacionActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.consignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.consignacion);
				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Consignacion.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Consignacion.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.consignacion);
				
				this.actualizarInformacion("INFO_PADRE",false,this.consignacion);
				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(Consignacion.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",Consignacion.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaConsignacionActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.consignacionAnterior =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.consignacionAnterior =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarConsignacion")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosConsignacionListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosConsignacion.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.consignacion =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.consignacion =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.consignacion);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarConsignacion")) {
				
				}
				
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarConsignacion")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosConsignacion.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarConsignacion")) {
			
			}
			
			ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessConsignacion();
			
			ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
			
			if(sTipo.equals("NuevoConsignacion")) {
				jButtonNuevoConsignacionActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarConsignacion")) {
				jButtonDuplicarConsignacionActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarConsignacion")) {
				jButtonCopiarConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormConsignacion")) {
				jButtonVerFormConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesConsignacion")) {
				jButtonNuevoConsignacionActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarConsignacion")) {
				jButtonModificarConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarConsignacion")) {
				jButtonActualizarConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarConsignacion")) {
				jButtonEliminarConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaConsignacion")) {
				jButtonGuardarCambiosConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarConsignacion")) {
				jButtonCancelarConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarConsignacion")) {
				jButtonCerrarConsignacionActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosConsignacion")) {
				jButtonGuardarCambiosConsignacionActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosConsignacion")) {
				jButtonNuevoGuardarCambiosConsignacionActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByConsignacion")) {
				jButtonAbrirOrderByConsignacionActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionConsignacion")) {
				jButtonRecargarInformacionConsignacionActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresConsignacion")) {
				jButtonAnterioresConsignacionActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesConsignacion")) {
				jButtonSiguientesConsignacionActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idConsignacionBusqueda")) {
				this.jButtonidConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaConsignacionUpdate")) {
				this.jButtonid_empresaConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaConsignacionBusqueda")) {
				this.jButtonid_empresaConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalConsignacionUpdate")) {
				this.jButtonid_sucursalConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalConsignacionBusqueda")) {
				this.jButtonid_sucursalConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioConsignacionUpdate")) {
				this.jButtonid_ejercicioConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioConsignacionBusqueda")) {
				this.jButtonid_ejercicioConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoConsignacionUpdate")) {
				this.jButtonid_periodoConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoConsignacionBusqueda")) {
				this.jButtonid_periodoConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioConsignacionUpdate")) {
				this.jButtonid_anioConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioConsignacionBusqueda")) {
				this.jButtonid_anioConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesConsignacionUpdate")) {
				this.jButtonid_mesConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesConsignacionBusqueda")) {
				this.jButtonid_mesConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioConsignacionUpdate")) {
				this.jButtonid_usuarioConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioConsignacionBusqueda")) {
				this.jButtonid_usuarioConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numeroConsignacionBusqueda")) {
				this.jButtonnumeroConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_autorizacionConsignacionBusqueda")) {
				this.jButtonnumero_autorizacionConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionConsignacionBusqueda")) {
				this.jButtonfecha_emisionConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_vencimientoConsignacionBusqueda")) {
				this.jButtonfecha_vencimientoConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaConsignacionUpdate")) {
				this.jButtonid_monedaConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaConsignacionBusqueda")) {
				this.jButtonid_monedaConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cotizacionConsignacionBusqueda")) {
				this.jButtoncotizacionConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoConsignacion")) {
				this.jButtonid_empleadoConsignacionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoConsignacionUpdate")) {
				this.jButtonid_empleadoConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoConsignacionBusqueda")) {
				this.jButtonid_empleadoConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_precioConsignacionUpdate")) {
				this.jButtonid_tipo_precioConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_precioConsignacionBusqueda")) {
				this.jButtonid_tipo_precioConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoConsignacionUpdate")) {
				this.jButtonid_formatoConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoConsignacionBusqueda")) {
				this.jButtonid_formatoConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccionConsignacionBusqueda")) {
				this.jButtondireccionConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteConsignacion")) {
				this.jButtonid_clienteConsignacionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteConsignacionUpdate")) {
				this.jButtonid_clienteConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteConsignacionBusqueda")) {
				this.jButtonid_clienteConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefonoConsignacionBusqueda")) {
				this.jButtontelefonoConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucConsignacionBusqueda")) {
				this.jButtonrucConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sub_clienteConsignacionUpdate")) {
				this.jButtonid_sub_clienteConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sub_clienteConsignacionBusqueda")) {
				this.jButtonid_sub_clienteConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_consignatarioConsignacionUpdate")) {
				this.jButtonid_consignatarioConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_consignatarioConsignacionBusqueda")) {
				this.jButtonid_consignatarioConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_vendedorConsignacion")) {
				this.jButtonid_vendedorConsignacionActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_vendedorConsignacionArbol")) {
				this.abrirFrameTreeVendedor("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_vendedorConsignacionUpdate")) {
				this.jButtonid_vendedorConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_vendedorConsignacionBusqueda")) {
				this.jButtonid_vendedorConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionConsignacionBusqueda")) {
				this.jButtondescripcionConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedidoConsignacionUpdate")) {
				this.jButtonid_estado_pedidoConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedidoConsignacionBusqueda")) {
				this.jButtonid_estado_pedidoConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_porcentajeConsignacionBusqueda")) {
				this.jButtondescuento_porcentajeConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_con_ivaConsignacionBusqueda")) {
				this.jButtontotal_con_ivaConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sumanConsignacionBusqueda")) {
				this.jButtonsumanConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_valorConsignacionBusqueda")) {
				this.jButtondescuento_valorConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_sin_ivaConsignacionBusqueda")) {
				this.jButtontotal_sin_ivaConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_descuentoConsignacionBusqueda")) {
				this.jButtontotal_descuentoConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fleteConsignacionBusqueda")) {
				this.jButtonfleteConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalConsignacionBusqueda")) {
				this.jButtontotalConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("subtotalConsignacionBusqueda")) {
				this.jButtonsubtotalConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("otroConsignacionBusqueda")) {
				this.jButtonotroConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("financiamientoConsignacionBusqueda")) {
				this.jButtonfinanciamientoConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaConsignacionBusqueda")) {
				this.jButtonivaConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("iceConsignacionBusqueda")) {
				this.jButtoniceConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_retencionConsignacionBusqueda")) {
				this.jButtonmonto_retencionConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioConsignacion")) {
				this.jButtonid_tipo_cambioConsignacionActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioConsignacionUpdate")) {
				this.jButtonid_tipo_cambioConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioConsignacionBusqueda")) {
				this.jButtonid_tipo_cambioConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_fueConsignacionBusqueda")) {
				this.jButtonnumero_fueConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_zonaConsignacionUpdate")) {
				this.jButtonid_zonaConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_zonaConsignacionBusqueda")) {
				this.jButtonid_zonaConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaConsignacionBusqueda")) {
				this.jButtonfechaConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoConsignacion")) {
				this.jButtonid_centro_costoConsignacionActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoConsignacionArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoConsignacionUpdate")) {
				this.jButtonid_centro_costoConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoConsignacionBusqueda")) {
				this.jButtonid_centro_costoConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_servidorConsignacionBusqueda")) {
				this.jButtonfecha_servidorConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_responsableConsignacionUpdate")) {
				this.jButtonid_responsableConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_responsableConsignacionBusqueda")) {
				this.jButtonid_responsableConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_inicioConsignacionBusqueda")) {
				this.jButtonhora_inicioConsignacionBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_finConsignacionBusqueda")) {
				this.jButtonhora_finConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transportistaConsignacionUpdate")) {
				this.jButtonid_transportistaConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transportistaConsignacionBusqueda")) {
				this.jButtonid_transportistaConsignacionBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transporteConsignacionUpdate")) {
				this.jButtonid_transporteConsignacionUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transporteConsignacionBusqueda")) {
				this.jButtonid_transporteConsignacionBusquedaActionPerformed(evt);
			}
			
			ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessConsignacion();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameConsignacion")) {
				closingInternalFrameConsignacion();
				
			} else if(sTipo.equals("jButtonCancelarConsignacion")) {
				JInternalFrameBase jInternalFrameDetalleFormConsignacion = (JInternalFrameBase)evt.getSource();
	            	
	            ConsignacionBeanSwingJInternalFrame jInternalFrameParent=(ConsignacionBeanSwingJInternalFrame)jInternalFrameDetalleFormConsignacion.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarConsignacionActionPerformed(null);
			}
			
			ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.consignacion,new Object(),this.consignacionParameterGeneral,this.consignacionReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormConsignacion(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormConsignacion(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormConsignacion(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.consignacion)) {
			if(!esControlTabla) {
				if(ConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);			
				}
				
				if(this.consignacionSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualConsignacion(this.consignacion,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.consignacionReturnGeneral=consignacionLogic.procesarEventosConsignacionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.consignacionLogic.getConsignacions(),this.consignacion,this.consignacionParameterGeneral,this.isEsNuevoConsignacion,classes);//this.consignacionLogic.getConsignacion()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanConsignacion(this.consignacionReturnGeneral,this.consignacionBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.consignacionSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanConsignacion(classes,this.consignacionReturnGeneral,this.consignacionBean,false);
					}
						
					if(this.consignacionReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyConsignacion(this.consignacionReturnGeneral.getConsignacion());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioConsignacion(this.consignacionReturnGeneral.getConsignacion());	
					}
						
					if(this.consignacionReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioConsignacion(this.consignacionReturnGeneral.getConsignacion(),classes);//this.consignacionBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioConsignacion(this.consignacion,classes);//this.consignacionBean);									
				}
			
				if(ConsignacionJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualConsignacion(this.consignacion,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysConsignacion(this.consignacion);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.consignacionAnterior!=null) {
						this.consignacion=this.consignacionAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.consignacionReturnGeneral=consignacionLogic.procesarEventosConsignacionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.consignacionLogic.getConsignacions(),this.consignacion,this.consignacionParameterGeneral,this.isEsNuevoConsignacion,classes);//this.consignacionLogic.getConsignacion()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.consignacionSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.consignacionSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.consignacionReturnGeneral.getConsignacion(),consignacionLogic.getConsignacions());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.consignacionReturnGeneral.getConsignacion(),this.consignacions);
				}
				//ARCHITECTURE
				
				//this.jTableDatosConsignacion.repaint();
				
				//((AbstractTableModel) this.jTableDatosConsignacion.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosConsignacion();
			}
		}
	}
	
	public void actualizarVisualTableDatosConsignacion() throws Exception {
		
		ConsignacionModel consignacionModel=(ConsignacionModel)this.jTableDatosConsignacion.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			consignacionModel.consignacions=this.consignacionLogic.getConsignacions();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			consignacionModel.consignacions=this.consignacions;
		}
		
		
		((ConsignacionModel) this.jTableDatosConsignacion.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaConsignacion() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getconsignacionAnterior(),this.consignacionLogic.getConsignacions());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getconsignacionAnterior(),this.consignacions);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosConsignacion();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioConsignacion(Consignacion consignacion,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleConsignacion.class)) {
					this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionLogic.setDetalleConsignacions(consignacion.getDetalleConsignacions());
					this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetalleConsignacion(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.consignacion,new Object(),generalEntityParameterGeneral,this.consignacionReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.consignacionSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=ConsignacionConstantesFunciones.getClassesRelationshipsOfConsignacion(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=ConsignacionConstantesFunciones.getClassesRelationshipsFromStringsOfConsignacion(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormConsignacion(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				ConsignacionBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.consignacion,new Object(),generalEntityParameterGeneral,this.consignacionReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioConsignacion(ConsignacionBean consignacionBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleConsignacion.class)) {
					this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionLogic.setDetalleConsignacions(consignacion.getDetalleConsignacions());
					this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetalleConsignacion(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanConsignacion(ArrayList<Classe> classes,ConsignacionReturnGeneral consignacionReturnGeneral,ConsignacionBean consignacionBean,Boolean conDefault) throws Exception {
		
			this.consignacionBean.setDetalleConsignacions(consignacionReturnGeneral.getConsignacion().getDetalleConsignacions());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualConsignacion(Consignacion consignacion,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleConsignacion.class)) {
					consignacion.setDetalleConsignacions(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionBeanSwingJInternalFrame.detalleconsignacionLogic.getDetalleConsignacions());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.consignacion)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormConsignacion = new ConsignacionDetalleFormJInternalFrame(jDesktopPane,this.consignacionSessionBean.getConGuardarRelaciones(),this.consignacionSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormConsignacion);
		this.jInternalFrameDetalleFormConsignacion.setVisible(false);
		this.jInternalFrameDetalleFormConsignacion.setSelected(false);						
		
		this.jInternalFrameDetalleFormConsignacion.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormConsignacion.consignacionLogic=this.consignacionLogic;
		
		this.cargarCombosFrameForeignKeyConsignacion("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleConsignacion();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleConsignacion();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyConsignacion("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyConsignacion();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormConsignacion.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarConsignacion"));
		
		this.jInternalFrameDetalleFormConsignacion.jButtonModificarConsignacion.addActionListener(new ButtonActionListener(this,"ModificarConsignacion"));

		
		this.jInternalFrameDetalleFormConsignacion.jButtonModificarToolBarConsignacion.addActionListener(new ButtonActionListener(this,"ModificarToolBarConsignacion"));
					
		this.jInternalFrameDetalleFormConsignacion.jMenuItemModificarConsignacion.addActionListener(new ButtonActionListener(this,"MenuItemModificarConsignacion"));		
		
		
		
		this.jInternalFrameDetalleFormConsignacion.jButtonActualizarConsignacion.addActionListener (new ButtonActionListener(this,"ActualizarConsignacion"));
		
		
		this.jInternalFrameDetalleFormConsignacion.jButtonActualizarToolBarConsignacion.addActionListener(new ButtonActionListener(this,"ActualizarToolBarConsignacion"));
						
		this.jInternalFrameDetalleFormConsignacion.jMenuItemActualizarConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemActualizarConsignacion"));		
		
		
		
		this.jInternalFrameDetalleFormConsignacion.jButtonEliminarConsignacion.addActionListener (new ButtonActionListener(this,"EliminarConsignacion"));
		
		
		this.jInternalFrameDetalleFormConsignacion.jButtonEliminarToolBarConsignacion.addActionListener (new ButtonActionListener(this,"EliminarToolBarConsignacion"));
								
		this.jInternalFrameDetalleFormConsignacion.jMenuItemEliminarConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemEliminarConsignacion"));		
		
		
		
		this.jInternalFrameDetalleFormConsignacion.jButtonCancelarConsignacion.addActionListener (new ButtonActionListener(this,"CancelarConsignacion"));
		
		
		this.jInternalFrameDetalleFormConsignacion.jButtonCancelarToolBarConsignacion.addActionListener (new ButtonActionListener(this,"CancelarToolBarConsignacion"));
					
		this.jInternalFrameDetalleFormConsignacion.jMenuItemCancelarConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemCancelarConsignacion"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormConsignacion.jMenuItemDetalleCerrarConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarConsignacion"));		
		
		
		
		this.jInternalFrameDetalleFormConsignacion.jButtonGuardarCambiosToolBarConsignacion.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarConsignacion"));
		
		
		
		this.jInternalFrameDetalleFormConsignacion.jButtonGuardarCambiosToolBarConsignacion.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarConsignacion"));
		
		
		
		this.jInternalFrameDetalleFormConsignacion.jComboBoxTiposAccionesFormularioConsignacion.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioConsignacion"));
		
		
		//CAMPO EVENTO
		this.jInternalFrameDetalleFormConsignacion.jTextFieldnumero_autorizacionConsignacion.addFocusListener(new TextFieldFocusListener(this,"numero_autorizacionConsignacion"));
		this.jInternalFrameDetalleFormConsignacion.jTextFieldnumero_autorizacionConsignacion.addActionListener(new TextFieldActionListener(this,"numero_autorizacionConsignacion"));
		//this.jInternalFrameDetalleFormConsignacion.jTextFieldnumero_autorizacionConsignacion.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldnumero_autorizacionConsignacion,"numero_autorizacionConsignacion"));


				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonidConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"idConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_empresaConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_empresaConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_empresaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_sucursalConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_sucursalConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_ejercicioConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_ejercicioConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_periodoConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_periodoConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_periodoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_anioConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_anioConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_anioConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_anioConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_mesConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_mesConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_mesConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_mesConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_usuarioConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_usuarioConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonnumeroConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"numeroConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonnumero_autorizacionConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"numero_autorizacionConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonfecha_emisionConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonfecha_vencimientoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_vencimientoConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_monedaConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_monedaConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_monedaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtoncotizacionConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"cotizacionConsignacionBusqueda"));
		//jButtonid_empleadoConsignacion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoConsignacionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormConsignacion.jButtonid_empleadoConsignacion.addActionListener(new ButtonActionListener(this,"id_empleadoConsignacion"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_empleadoConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_empleadoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_tipo_precioConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_precioConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_tipo_precioConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_precioConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_formatoConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_formatoConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_formatoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtondireccionConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"direccionConsignacionBusqueda"));
		//jButtonid_clienteConsignacion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteConsignacionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormConsignacion.jButtonid_clienteConsignacion.addActionListener(new ButtonActionListener(this,"id_clienteConsignacion"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_clienteConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_clienteConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_clienteConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtontelefonoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"telefonoConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonrucConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"rucConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_sub_clienteConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_sub_clienteConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_sub_clienteConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_sub_clienteConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_consignatarioConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_consignatarioConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_consignatarioConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_consignatarioConsignacionBusqueda"));
		//jButtonid_vendedorConsignacion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_vendedorConsignacionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormConsignacion.jButtonid_vendedorConsignacion.addActionListener(new ButtonActionListener(this,"id_vendedorConsignacion"));
		//jButtonid_vendedorConsignacionArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeVendedor("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormConsignacion.jButtonid_vendedorConsignacionArbol.addActionListener(new ButtonActionListener(this,"id_vendedorConsignacionArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_vendedorConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_vendedorConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtondescripcionConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"descripcionConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_estado_pedidoConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedidoConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_estado_pedidoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedidoConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtondescuento_porcentajeConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"descuento_porcentajeConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtontotal_con_ivaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"total_con_ivaConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonsumanConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"sumanConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtondescuento_valorConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"descuento_valorConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtontotal_sin_ivaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"total_sin_ivaConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtontotal_descuentoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"total_descuentoConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonfleteConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"fleteConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtontotalConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"totalConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonsubtotalConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"subtotalConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonotroConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"otroConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonfinanciamientoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"financiamientoConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonivaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"ivaConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtoniceConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"iceConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonmonto_retencionConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"monto_retencionConsignacionBusqueda"));
		//jButtonid_tipo_cambioConsignacion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioConsignacionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormConsignacion.jButtonid_tipo_cambioConsignacion.addActionListener(new ButtonActionListener(this,"id_tipo_cambioConsignacion"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_tipo_cambioConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_tipo_cambioConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonnumero_fueConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"numero_fueConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_zonaConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_zonaConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_zonaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_zonaConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonfechaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"fechaConsignacionBusqueda"));
		//jButtonid_centro_costoConsignacion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoConsignacionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormConsignacion.jButtonid_centro_costoConsignacion.addActionListener(new ButtonActionListener(this,"id_centro_costoConsignacion"));
		//jButtonid_centro_costoConsignacionArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormConsignacion.jButtonid_centro_costoConsignacionArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoConsignacionArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_centro_costoConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_centro_costoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonfecha_servidorConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_servidorConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_responsableConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_responsableConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_responsableConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_responsableConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonhora_inicioConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"hora_inicioConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonhora_finConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"hora_finConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_transportistaConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_transportistaConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_transportistaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_transportistaConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_transporteConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_transporteConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_transporteConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_transporteConsignacionBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormConsignacion.jTabbedPaneRelacionesConsignacion.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesConsignacion"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameConsignacion"));
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConsignacion.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarConsignacion"));
		}
		
		this.jTableDatosConsignacion.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarConsignacion"));
		
		this.jTableDatosConsignacion.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarConsignacion"));
		
		this.jButtonNuevoConsignacion.addActionListener(new ButtonActionListener(this,"NuevoConsignacion"));
		
		this.jButtonDuplicarConsignacion.addActionListener(new ButtonActionListener(this,"DuplicarConsignacion"));
		
		this.jButtonCopiarConsignacion.addActionListener(new ButtonActionListener(this,"CopiarConsignacion"));
		
		this.jButtonVerFormConsignacion.addActionListener(new ButtonActionListener(this,"VerFormConsignacion"));
		
		
		this.jButtonNuevoToolBarConsignacion.addActionListener(new ButtonActionListener(this,"NuevoToolBarConsignacion"));
			
		this.jButtonDuplicarToolBarConsignacion.addActionListener(new ButtonActionListener(this,"DuplicarToolBarConsignacion"));
			
		this.jMenuItemNuevoConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemNuevoConsignacion"));
			
		this.jMenuItemDuplicarConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarConsignacion"));		
		
		
		this.jButtonNuevoRelacionesConsignacion.addActionListener (new ButtonActionListener(this,"NuevoRelacionesConsignacion"));
		
		
		this.jButtonNuevoRelacionesToolBarConsignacion.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarConsignacion"));
			
		this.jMenuItemNuevoRelacionesConsignacion.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesConsignacion"));		
		
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConsignacion.jButtonModificarConsignacion.addActionListener(new ButtonActionListener(this,"ModificarConsignacion"));
		}
		
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConsignacion.jButtonModificarToolBarConsignacion.addActionListener(new ButtonActionListener(this,"ModificarToolBarConsignacion"));
			
			this.jInternalFrameDetalleFormConsignacion.jMenuItemModificarConsignacion.addActionListener(new ButtonActionListener(this,"MenuItemModificarConsignacion"));		
		}
		
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormConsignacion.jButtonActualizarConsignacion.addActionListener (new ButtonActionListener(this,"ActualizarConsignacion"));
		}
		
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConsignacion.jButtonActualizarToolBarConsignacion.addActionListener(new ButtonActionListener(this,"ActualizarToolBarConsignacion"));
				
			this.jInternalFrameDetalleFormConsignacion.jMenuItemActualizarConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemActualizarConsignacion"));		
		}
		
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConsignacion.jButtonEliminarConsignacion.addActionListener (new ButtonActionListener(this,"EliminarConsignacion"));
		}
		
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConsignacion.jButtonEliminarToolBarConsignacion.addActionListener (new ButtonActionListener(this,"EliminarToolBarConsignacion"));
						
			this.jInternalFrameDetalleFormConsignacion.jMenuItemEliminarConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemEliminarConsignacion"));		
		}
		
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConsignacion.jButtonCancelarConsignacion.addActionListener (new ButtonActionListener(this,"CancelarConsignacion"));
		}
		
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConsignacion.jButtonCancelarToolBarConsignacion.addActionListener (new ButtonActionListener(this,"CancelarToolBarConsignacion"));
			
			this.jInternalFrameDetalleFormConsignacion.jMenuItemCancelarConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemCancelarConsignacion"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarConsignacion.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarConsignacion"));		
		
		
		this.jButtonCerrarConsignacion.addActionListener (new ButtonActionListener(this,"CerrarConsignacion"));
		
		
		this.jButtonCerrarToolBarConsignacion.addActionListener (new ButtonActionListener(this,"CerrarToolBarConsignacion"));
			
		this.jMenuItemCerrarConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemCerrarConsignacion"));
			
		if(this.jInternalFrameDetalleFormConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConsignacion.jMenuItemDetalleCerrarConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarConsignacion"));		
		}
		
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConsignacion.jButtonGuardarCambiosConsignacion.addActionListener (new ButtonActionListener(this,"GuardarCambiosConsignacion"));
		}
		
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConsignacion.jButtonGuardarCambiosToolBarConsignacion.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarConsignacion"));
		}
		
		this.jButtonCopiarToolBarConsignacion.addActionListener (new ButtonActionListener(this,"CopiarToolBarConsignacion"));
			
		this.jButtonVerFormToolBarConsignacion.addActionListener (new ButtonActionListener(this,"VerFormToolBarConsignacion"));
		
		this.jMenuItemGuardarCambiosConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosConsignacion"));
			
		this.jMenuItemCopiarConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemCopiarConsignacion"));		
		
		this.jMenuItemVerFormConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemVerFormConsignacion"));		
		
		
		this.jButtonGuardarCambiosTablaConsignacion.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaConsignacion"));
		
		
		this.jButtonGuardarCambiosTablaToolBarConsignacion.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarConsignacion"));
			
		this.jMenuItemGuardarCambiosTablaConsignacion.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaConsignacion"));		
		
		
		
		this.jButtonRecargarInformacionConsignacion.addActionListener (new ButtonActionListener(this,"RecargarInformacionConsignacion"));
					
		this.jButtonRecargarInformacionToolBarConsignacion.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarConsignacion"));
		
		this.jMenuItemRecargarInformacionConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionConsignacion"));		
		
		
		
		this.jButtonAnterioresConsignacion.addActionListener (new ButtonActionListener(this,"AnterioresConsignacion"));
		
		
		this.jButtonAnterioresToolBarConsignacion.addActionListener (new ButtonActionListener(this,"AnterioresToolBarConsignacion"));
		
		this.jMenuItemAnterioresConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresConsignacion"));		
		
		
		this.jButtonSiguientesConsignacion.addActionListener (new ButtonActionListener(this,"SiguientesConsignacion"));
		
		
		this.jButtonSiguientesToolBarConsignacion.addActionListener (new ButtonActionListener(this,"SiguientesToolBarConsignacion"));
			
		this.jMenuItemSiguientesConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesConsignacion"));
			
		this.jMenuItemAbrirOrderByConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByConsignacion"));
			
		this.jMenuItemMostrarOcultarConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarConsignacion"));
			
		this.jMenuItemDetalleAbrirOrderByConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByConsignacion"));
			
		this.jMenuItemDetalleMostarOcultarConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarConsignacion"));		
		
		
		this.jButtonNuevoGuardarCambiosConsignacion.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosConsignacion"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarConsignacion.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarConsignacion"));
			
		this.jMenuItemNuevoGuardarCambiosConsignacion.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosConsignacion"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosConsignacion.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosConsignacion"));

		this.jCheckBoxSeleccionadosConsignacion.addItemListener(new CheckBoxItemListener(this,"SeleccionadosConsignacion"));
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConsignacion.jComboBoxTiposAccionesFormularioConsignacion.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioConsignacion"));
		}
		
		
		this.jComboBoxTiposRelacionesConsignacion.addActionListener (new ButtonActionListener(this,"TiposRelacionesConsignacion"));
			
		this.jComboBoxTiposAccionesConsignacion.addActionListener (new ButtonActionListener(this,"TiposAccionesConsignacion"));
					
		this.jComboBoxTiposSeleccionarConsignacion.addActionListener (new ButtonActionListener(this,"TiposSeleccionarConsignacion"));
			
		this.jTextFieldValorCampoGeneralConsignacion.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralConsignacion"));		
		
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) { //if(this.conCargarFormDetalle) {
		
		//CAMPO EVENTO
		this.jInternalFrameDetalleFormConsignacion.jTextFieldnumero_autorizacionConsignacion.addFocusListener(new TextFieldFocusListener(this,"numero_autorizacionConsignacion"));
		this.jInternalFrameDetalleFormConsignacion.jTextFieldnumero_autorizacionConsignacion.addActionListener(new TextFieldActionListener(this,"numero_autorizacionConsignacion"));
		//this.jInternalFrameDetalleFormConsignacion.jTextFieldnumero_autorizacionConsignacion.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldnumero_autorizacionConsignacion,"numero_autorizacionConsignacion"));


		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonidConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"idConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_empresaConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_empresaConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_empresaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_sucursalConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_sucursalConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_ejercicioConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_ejercicioConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_periodoConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_periodoConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_periodoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_anioConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_anioConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_anioConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_anioConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_mesConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_mesConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_mesConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_mesConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_usuarioConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_usuarioConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonnumeroConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"numeroConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonnumero_autorizacionConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"numero_autorizacionConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonfecha_emisionConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonfecha_vencimientoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_vencimientoConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_monedaConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_monedaConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_monedaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtoncotizacionConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"cotizacionConsignacionBusqueda"));
		//jButtonid_empleadoConsignacion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoConsignacionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormConsignacion.jButtonid_empleadoConsignacion.addActionListener(new ButtonActionListener(this,"id_empleadoConsignacion"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_empleadoConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_empleadoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_tipo_precioConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_precioConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_tipo_precioConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_precioConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_formatoConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_formatoConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_formatoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtondireccionConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"direccionConsignacionBusqueda"));
		//jButtonid_clienteConsignacion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteConsignacionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormConsignacion.jButtonid_clienteConsignacion.addActionListener(new ButtonActionListener(this,"id_clienteConsignacion"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_clienteConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_clienteConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_clienteConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtontelefonoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"telefonoConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonrucConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"rucConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_sub_clienteConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_sub_clienteConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_sub_clienteConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_sub_clienteConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_consignatarioConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_consignatarioConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_consignatarioConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_consignatarioConsignacionBusqueda"));
		//jButtonid_vendedorConsignacion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_vendedorConsignacionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormConsignacion.jButtonid_vendedorConsignacion.addActionListener(new ButtonActionListener(this,"id_vendedorConsignacion"));
		//jButtonid_vendedorConsignacionArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeVendedor("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormConsignacion.jButtonid_vendedorConsignacionArbol.addActionListener(new ButtonActionListener(this,"id_vendedorConsignacionArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_vendedorConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_vendedorConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtondescripcionConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"descripcionConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_estado_pedidoConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedidoConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_estado_pedidoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedidoConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtondescuento_porcentajeConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"descuento_porcentajeConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtontotal_con_ivaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"total_con_ivaConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonsumanConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"sumanConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtondescuento_valorConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"descuento_valorConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtontotal_sin_ivaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"total_sin_ivaConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtontotal_descuentoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"total_descuentoConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonfleteConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"fleteConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtontotalConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"totalConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonsubtotalConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"subtotalConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonotroConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"otroConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonfinanciamientoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"financiamientoConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonivaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"ivaConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtoniceConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"iceConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonmonto_retencionConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"monto_retencionConsignacionBusqueda"));
		//jButtonid_tipo_cambioConsignacion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioConsignacionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormConsignacion.jButtonid_tipo_cambioConsignacion.addActionListener(new ButtonActionListener(this,"id_tipo_cambioConsignacion"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_tipo_cambioConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_tipo_cambioConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonnumero_fueConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"numero_fueConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_zonaConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_zonaConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_zonaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_zonaConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonfechaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"fechaConsignacionBusqueda"));
		//jButtonid_centro_costoConsignacion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoConsignacionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormConsignacion.jButtonid_centro_costoConsignacion.addActionListener(new ButtonActionListener(this,"id_centro_costoConsignacion"));
		//jButtonid_centro_costoConsignacionArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormConsignacion.jButtonid_centro_costoConsignacionArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoConsignacionArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_centro_costoConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_centro_costoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonfecha_servidorConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_servidorConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_responsableConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_responsableConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_responsableConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_responsableConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonhora_inicioConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"hora_inicioConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonhora_finConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"hora_finConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_transportistaConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_transportistaConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_transportistaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_transportistaConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_transporteConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_transporteConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_transporteConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_transporteConsignacionBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdCentroCostoConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoConsignacion"));

			this.jButtonBuscarFK_IdCentroCostoid_centro_costoConsignacion.addActionListener(new ButtonActionListener(this,"id_centro_costoConsignacion"));

			this.jButtonFK_IdClienteConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdClienteConsignacion"));

			this.jButtonBuscarFK_IdClienteid_clienteConsignacion.addActionListener(new ButtonActionListener(this,"id_clienteConsignacion"));

			this.jButtonFK_IdConsignatarioConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdConsignatarioConsignacion"));

			this.jButtonFK_IdEmpleadoConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoConsignacion"));

			this.jButtonBuscarFK_IdEmpleadoid_empleadoConsignacion.addActionListener(new ButtonActionListener(this,"id_empleadoConsignacion"));

			this.jButtonFK_IdEstadoPedidoConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoConsignacion"));

			this.jButtonFK_IdFormatoConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdFormatoConsignacion"));

			this.jButtonFK_IdResponsableConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdResponsableConsignacion"));

			this.jButtonFK_IdSubClienteConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdSubClienteConsignacion"));

			this.jButtonFK_IdTipoCambioConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdTipoCambioConsignacion"));

			this.jButtonBuscarFK_IdTipoCambioid_tipo_cambioConsignacion.addActionListener(new ButtonActionListener(this,"id_tipo_cambioConsignacion"));

			this.jButtonFK_IdTipoPrecioConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdTipoPrecioConsignacion"));

			this.jButtonFK_IdTransporteConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdTransporteConsignacion"));

			this.jButtonFK_IdTransportistaConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdTransportistaConsignacion"));

			this.jButtonFK_IdVendedorConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdVendedorConsignacion"));

			this.jButtonBuscarFK_IdVendedorid_vendedorConsignacion.addActionListener(new ButtonActionListener(this,"id_vendedorConsignacion"));

			this.jButtonFK_IdZonaConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdZonaConsignacion"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoConsignacion!=null) {
				this.jInternalFrameReporteDinamicoConsignacion.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoConsignacion"));
				this.jInternalFrameReporteDinamicoConsignacion.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoConsignacion"));
				this.jInternalFrameReporteDinamicoConsignacion.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoConsignacion"));
			}
			
			//this.jButtonCerrarReporteDinamicoConsignacion.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoConsignacion"));				
			//this.jButtonGenerarReporteDinamicoConsignacion.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoConsignacion"));
			//this.jButtonGenerarExcelReporteDinamicoConsignacion.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoConsignacion"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionConsignacion!=null) {
				this.jInternalFrameImportacionConsignacion.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionConsignacion"));
				this.jInternalFrameImportacionConsignacion.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionConsignacion"));
				this.jInternalFrameImportacionConsignacion.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionConsignacion"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByConsignacion.addActionListener (new ButtonActionListener(this,"AbrirOrderByConsignacion"));
			
			this.jButtonAbrirOrderByToolBarConsignacion.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarConsignacion"));			
			
			if(this.jInternalFrameOrderByConsignacion!=null) {
				this.jInternalFrameOrderByConsignacion.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByConsignacion"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormConsignacion!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormConsignacion!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormConsignacion.jTabbedPaneRelacionesConsignacion.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesConsignacion"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameConsignacion();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormConsignacion.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormConsignacion = (JInternalFrameBase)event.getSource();
	            	
	            ConsignacionBeanSwingJInternalFrame jInternalFrameParent=(ConsignacionBeanSwingJInternalFrame)jInternalFrameDetalleFormConsignacion.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarConsignacionActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosConsignacion.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosConsignacionListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosConsignacion.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosConsignacion.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoConsignacionActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoConsignacionActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoConsignacionActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoConsignacion";
		inputMap = this.jButtonNuevoConsignacion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoConsignacion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoConsignacionActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoConsignacionActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoConsignacionActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoConsignacionActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesConsignacion";
		inputMap = this.jButtonNuevoRelacionesConsignacion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesConsignacion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoConsignacionActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarConsignacion";
		inputMap = this.jButtonModificarConsignacion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarConsignacion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarConsignacionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarConsignacion";
		inputMap = this.jButtonActualizarConsignacion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarConsignacion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarConsignacionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarConsignacion";
		inputMap = this.jButtonEliminarConsignacion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarConsignacion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarConsignacionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarConsignacion";
		inputMap = this.jButtonCancelarConsignacion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarConsignacion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarConsignacionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarConsignacion";
		inputMap = this.jButtonCerrarConsignacion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarConsignacion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarConsignacionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormConsignacion.jButtonGuardarCambiosConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosConsignacion";
		inputMap = this.jInternalFrameDetalleFormConsignacion.jButtonGuardarCambiosConsignacion.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormConsignacion.jButtonGuardarCambiosConsignacion.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosConsignacionActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosConsignacion.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosConsignacionItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesConsignacion.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesConsignacionActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarConsignacion.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarConsignacionActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralConsignacion.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralConsignacionActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonidConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"idConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_empresaConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_empresaConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_empresaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_sucursalConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_sucursalConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_ejercicioConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_ejercicioConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_periodoConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_periodoConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_periodoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_anioConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_anioConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_anioConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_anioConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_mesConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_mesConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_mesConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_mesConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_usuarioConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_usuarioConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonnumeroConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"numeroConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonnumero_autorizacionConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"numero_autorizacionConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonfecha_emisionConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonfecha_vencimientoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_vencimientoConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_monedaConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_monedaConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_monedaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtoncotizacionConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"cotizacionConsignacionBusqueda"));
		//jButtonid_empleadoConsignacion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoConsignacionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormConsignacion.jButtonid_empleadoConsignacion.addActionListener(new ButtonActionListener(this,"id_empleadoConsignacion"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_empleadoConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_empleadoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_tipo_precioConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_precioConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_tipo_precioConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_precioConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_formatoConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_formatoConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_formatoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtondireccionConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"direccionConsignacionBusqueda"));
		//jButtonid_clienteConsignacion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteConsignacionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormConsignacion.jButtonid_clienteConsignacion.addActionListener(new ButtonActionListener(this,"id_clienteConsignacion"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_clienteConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_clienteConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_clienteConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtontelefonoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"telefonoConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonrucConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"rucConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_sub_clienteConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_sub_clienteConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_sub_clienteConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_sub_clienteConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_consignatarioConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_consignatarioConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_consignatarioConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_consignatarioConsignacionBusqueda"));
		//jButtonid_vendedorConsignacion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_vendedorConsignacionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormConsignacion.jButtonid_vendedorConsignacion.addActionListener(new ButtonActionListener(this,"id_vendedorConsignacion"));
		//jButtonid_vendedorConsignacionArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeVendedor("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormConsignacion.jButtonid_vendedorConsignacionArbol.addActionListener(new ButtonActionListener(this,"id_vendedorConsignacionArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_vendedorConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_vendedorConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtondescripcionConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"descripcionConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_estado_pedidoConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedidoConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_estado_pedidoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedidoConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtondescuento_porcentajeConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"descuento_porcentajeConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtontotal_con_ivaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"total_con_ivaConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonsumanConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"sumanConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtondescuento_valorConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"descuento_valorConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtontotal_sin_ivaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"total_sin_ivaConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtontotal_descuentoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"total_descuentoConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonfleteConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"fleteConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtontotalConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"totalConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonsubtotalConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"subtotalConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonotroConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"otroConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonfinanciamientoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"financiamientoConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonivaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"ivaConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtoniceConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"iceConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonmonto_retencionConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"monto_retencionConsignacionBusqueda"));
		//jButtonid_tipo_cambioConsignacion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioConsignacionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormConsignacion.jButtonid_tipo_cambioConsignacion.addActionListener(new ButtonActionListener(this,"id_tipo_cambioConsignacion"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_tipo_cambioConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_tipo_cambioConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonnumero_fueConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"numero_fueConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_zonaConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_zonaConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_zonaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_zonaConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonfechaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"fechaConsignacionBusqueda"));
		//jButtonid_centro_costoConsignacion.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoConsignacionActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormConsignacion.jButtonid_centro_costoConsignacion.addActionListener(new ButtonActionListener(this,"id_centro_costoConsignacion"));
		//jButtonid_centro_costoConsignacionArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormConsignacion.jButtonid_centro_costoConsignacionArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoConsignacionArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_centro_costoConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_centro_costoConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonfecha_servidorConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"fecha_servidorConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_responsableConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_responsableConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_responsableConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_responsableConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonhora_inicioConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"hora_inicioConsignacionBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonhora_finConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"hora_finConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_transportistaConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_transportistaConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_transportistaConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_transportistaConsignacionBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormConsignacion.jButtonid_transporteConsignacionUpdate.addActionListener(new ButtonActionListener(this,"id_transporteConsignacionUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormConsignacion.jButtonid_transporteConsignacionBusqueda.addActionListener(new ButtonActionListener(this,"id_transporteConsignacionBusqueda"));
		
		
		this.jButtonFK_IdCentroCostoConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoConsignacion"));

		this.jButtonBuscarFK_IdCentroCostoid_centro_costoConsignacion.addActionListener(new ButtonActionListener(this,"id_centro_costoConsignacion"));

		this.jButtonFK_IdClienteConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdClienteConsignacion"));

		this.jButtonBuscarFK_IdClienteid_clienteConsignacion.addActionListener(new ButtonActionListener(this,"id_clienteConsignacion"));

		this.jButtonFK_IdConsignatarioConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdConsignatarioConsignacion"));

		this.jButtonFK_IdEmpleadoConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoConsignacion"));

		this.jButtonBuscarFK_IdEmpleadoid_empleadoConsignacion.addActionListener(new ButtonActionListener(this,"id_empleadoConsignacion"));

		this.jButtonFK_IdEstadoPedidoConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoConsignacion"));

		this.jButtonFK_IdFormatoConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdFormatoConsignacion"));

		this.jButtonFK_IdResponsableConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdResponsableConsignacion"));

		this.jButtonFK_IdSubClienteConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdSubClienteConsignacion"));

		this.jButtonFK_IdTipoCambioConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdTipoCambioConsignacion"));

		this.jButtonBuscarFK_IdTipoCambioid_tipo_cambioConsignacion.addActionListener(new ButtonActionListener(this,"id_tipo_cambioConsignacion"));

		this.jButtonFK_IdTipoPrecioConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdTipoPrecioConsignacion"));

		this.jButtonFK_IdTransporteConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdTransporteConsignacion"));

		this.jButtonFK_IdTransportistaConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdTransportistaConsignacion"));

		this.jButtonFK_IdVendedorConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdVendedorConsignacion"));

		this.jButtonBuscarFK_IdVendedorid_vendedorConsignacion.addActionListener(new ButtonActionListener(this,"id_vendedorConsignacion"));

		this.jButtonFK_IdZonaConsignacion.addActionListener(new ButtonActionListener(this,"FK_IdZonaConsignacion"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionConsignacion.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionConsignacionActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarConsignacionActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarConsignacion.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosConsignacion(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(Consignacion consignacionAux:this.consignacionLogic.getConsignacions()) {
					consignacionAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Consignacion consignacionAux:consignacions) {
					consignacionAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosConsignacionItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingConsignacion(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(Consignacion consignacionAux:this.consignacionLogic.getConsignacions()) {
						consignacionAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Consignacion consignacionAux:consignacions) {
						consignacionAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(Consignacion consignacionAux:this.consignacionLogic.getConsignacions()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Consignacion consignacionAux:consignacions) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaConsignacion(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosConsignacion.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosConsignacion.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosConsignacionItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingConsignacion(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosConsignacion.getSelectedRows();
			
			Consignacion consignacionLocal=new Consignacion();
			
			//this.seleccionarTodosConsignacion(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignacionLocal =(Consignacion) this.consignacionLogic.getConsignacions().toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					consignacionLocal =(Consignacion) this.consignacions.toArray()[this.jTableDatosConsignacion.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				consignacionLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(Consignacion consignacionAux:this.consignacionLogic.getConsignacions()) {
						consignacionAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(Consignacion consignacionAux:consignacions) {
						consignacionAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaConsignacion(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosConsignacion.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosConsignacion.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosConsignacion,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualConsignacionItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarConsignacionParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralConsignacionActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingConsignacion(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralConsignacion.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(Consignacion consignacionAux:this.consignacionLogic.getConsignacions()) {
				
						if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_NUMERO)) {
							existe=true;
							consignacionAux.setnumero(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_NUMEROAUTORIZACION)) {
							existe=true;
							consignacionAux.setnumero_autorizacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							consignacionAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_FECHAVENCIMIENTO)) {
							existe=true;
							consignacionAux.setfecha_vencimiento(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_COTIZACION)) {
							existe=true;
							consignacionAux.setcotizacion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_DIRECCION)) {
							existe=true;
							consignacionAux.setdireccion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_TELEFONO)) {
							existe=true;
							consignacionAux.settelefono(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_RUC)) {
							existe=true;
							consignacionAux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							consignacionAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE)) {
							existe=true;
							consignacionAux.setdescuento_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_TOTALCONIVA)) {
							existe=true;
							consignacionAux.settotal_con_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_SUMAN)) {
							existe=true;
							consignacionAux.setsuman(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR)) {
							existe=true;
							consignacionAux.setdescuento_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_TOTALSINIVA)) {
							existe=true;
							consignacionAux.settotal_sin_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_TOTALDESCUENTO)) {
							existe=true;
							consignacionAux.settotal_descuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_FLETE)) {
							existe=true;
							consignacionAux.setflete(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							consignacionAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_SUBTOTAL)) {
							existe=true;
							consignacionAux.setsubtotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_OTRO)) {
							existe=true;
							consignacionAux.setotro(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_FINANCIAMIENTO)) {
							existe=true;
							consignacionAux.setfinanciamiento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IVA)) {
							existe=true;
							consignacionAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_ICE)) {
							existe=true;
							consignacionAux.setice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_MONTORETENCION)) {
							existe=true;
							consignacionAux.setmonto_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_NUMEROFUE)) {
							existe=true;
							consignacionAux.setnumero_fue(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							consignacionAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_FECHASERVIDOR)) {
							existe=true;
							consignacionAux.setfecha_servidor(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_HORAINICIO)) {
							existe=true;
							consignacionAux.sethora_inicio(Time.valueOf(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_HORAFIN)) {
							existe=true;
							consignacionAux.sethora_fin(Time.valueOf(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Consignacion consignacionAux:consignacions) {
					
						if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_NUMERO)) {
							existe=true;
							consignacionAux.setnumero(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_NUMEROAUTORIZACION)) {
							existe=true;
							consignacionAux.setnumero_autorizacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							consignacionAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_FECHAVENCIMIENTO)) {
							existe=true;
							consignacionAux.setfecha_vencimiento(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_COTIZACION)) {
							existe=true;
							consignacionAux.setcotizacion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_DIRECCION)) {
							existe=true;
							consignacionAux.setdireccion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_TELEFONO)) {
							existe=true;
							consignacionAux.settelefono(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_RUC)) {
							existe=true;
							consignacionAux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							consignacionAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE)) {
							existe=true;
							consignacionAux.setdescuento_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_TOTALCONIVA)) {
							existe=true;
							consignacionAux.settotal_con_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_SUMAN)) {
							existe=true;
							consignacionAux.setsuman(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR)) {
							existe=true;
							consignacionAux.setdescuento_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_TOTALSINIVA)) {
							existe=true;
							consignacionAux.settotal_sin_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_TOTALDESCUENTO)) {
							existe=true;
							consignacionAux.settotal_descuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_FLETE)) {
							existe=true;
							consignacionAux.setflete(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							consignacionAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_SUBTOTAL)) {
							existe=true;
							consignacionAux.setsubtotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_OTRO)) {
							existe=true;
							consignacionAux.setotro(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_FINANCIAMIENTO)) {
							existe=true;
							consignacionAux.setfinanciamiento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IVA)) {
							existe=true;
							consignacionAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_ICE)) {
							existe=true;
							consignacionAux.setice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_MONTORETENCION)) {
							existe=true;
							consignacionAux.setmonto_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_NUMEROFUE)) {
							existe=true;
							consignacionAux.setnumero_fue(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							consignacionAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_FECHASERVIDOR)) {
							existe=true;
							consignacionAux.setfecha_servidor(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_HORAINICIO)) {
							existe=true;
							consignacionAux.sethora_inicio(Time.valueOf(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_HORAFIN)) {
							existe=true;
							consignacionAux.sethora_fin(Time.valueOf(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaConsignacion(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesConsignacionActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingConsignacion(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioConsignacion=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesConsignacion.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormConsignacion.jComboBoxTiposAccionesFormularioConsignacion.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteConsignacion) {				
					conSplash=true;//false;										
					
					//this.startProcessConsignacion(conSplash);
				
					this.generarReporteConsignacionsSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesConsignacion.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormConsignacion.jComboBoxTiposAccionesFormularioConsignacion.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoConsignacionsSeleccionados();
				//this.jComboBoxTiposAccionesConsignacion.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoConsignacionsSeleccionados(false);
				//this.jComboBoxTiposAccionesConsignacion.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoConsignacionsSeleccionados(true);
				//this.jComboBoxTiposAccionesConsignacion.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessConsignacion();
				
				this.exportarConsignacionsSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesConsignacion.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormConsignacion.jComboBoxTiposAccionesFormularioConsignacion.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionConsignacions();
				//this.importarConsignacions();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesConsignacion.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormConsignacion.jComboBoxTiposAccionesFormularioConsignacion.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessConsignacion();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelConsignacionsSeleccionados();
				//this.jComboBoxTiposAccionesConsignacion.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Consignacion", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessConsignacion();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoConsignacion)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyConsignacion(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Consignacion",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesConsignacion.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormConsignacion.jComboBoxTiposAccionesFormularioConsignacion.setSelectedIndex(0);					
				}	
			} 			
			else if(ConsignacionBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteConsignacion) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessConsignacion(conSplash);
					
						//this.actualizarParametrosGeneralConsignacion();
						
						this.generarReporteProcesoAccionConsignacionsSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesConsignacion.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormConsignacion.jComboBoxTiposAccionesFormularioConsignacion.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(ConsignacionBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO ConsignacionS SELECCIONADOS?", "MANTENIMIENTO DE Consignacion", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessConsignacion();
				
						this.actualizarParametrosGeneralConsignacion();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.consignacionReturnGeneral=consignacionLogic.procesarAccionConsignacionsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.consignacionLogic.getConsignacions(),this.consignacionParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarConsignacionReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesConsignacion.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxTiposAccionesFormularioConsignacion.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralConsignacion();
					
					ConsignacionBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarConsignacionReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesConsignacion.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormConsignacion.jComboBoxTiposAccionesFormularioConsignacion.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessConsignacion(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesConsignacionActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessConsignacion();
			
			if(this.jInternalFrameDetalleFormConsignacion==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<Consignacion> consignacionsSeleccionados=new ArrayList<Consignacion>();		
			Consignacion consignacion=new Consignacion();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingConsignacion(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesConsignacion.getSelectedItem();
			
			
			
			
			consignacionsSeleccionados=this.getConsignacionsSeleccionados(true);
			//this.sTipoAccion;
			
			if(consignacionsSeleccionados.size()==1) {
				for(Consignacion consignacionAux:consignacionsSeleccionados) {
					consignacion=consignacionAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Detalle Consignacion")) {
					jButtonDetalleConsignacionActionPerformed(null,rowIndex,true,false,consignacion);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessConsignacion();
			
      		//this.finishProcessConsignacion(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarConsignacionReturnGeneral() throws Exception {
		if(this.consignacionReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.consignacionReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.consignacionReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.consignacionReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.consignacionReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.consignacionReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingConsignacion(false);
		}
		
		if(this.consignacionReturnGeneral.getConRetornoLista() || this.consignacionReturnGeneral.getConRetornoObjeto()) {
			if(this.consignacionReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.consignacionLogic.setConsignacions(this.consignacionReturnGeneral.getConsignacions());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.consignacionReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.consignacionLogic.setConsignacion(this.consignacionReturnGeneral.getConsignacion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingConsignacion(false);
		}
	}
	
	public void actualizarParametrosGeneralConsignacion() throws Exception {
		
		
	}
	
	public ArrayList<Consignacion> getConsignacionsSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<Consignacion> consignacionsSeleccionados=new ArrayList<Consignacion>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioConsignacion) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(Consignacion consignacionAux:consignacionLogic.getConsignacions()) {
					if(consignacionAux.getIsSelected()) {
						consignacionsSeleccionados.add(consignacionAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(Consignacion consignacionAux:this.consignacions) {
					if(consignacionAux.getIsSelected()) {
						consignacionsSeleccionados.add(consignacionAux);				
					}
				}
			}
			
			if(consignacionsSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						consignacionsSeleccionados.addAll(this.consignacionLogic.getConsignacions());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						consignacionsSeleccionados.addAll(this.consignacions);				
					}
				}
			}
		} else {
			consignacionsSeleccionados.add(this.consignacion);
		}
		
		return consignacionsSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteConsignacionsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalConsignacionsSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoConsignacionsSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoConsignacionsSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoConsignacionsSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesConsignacionsSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Consignacion",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesConsignacionsSeleccionados() throws Exception {
		ArrayList<Consignacion> consignacionsSeleccionados=new ArrayList<Consignacion>();		
		
		consignacionsSeleccionados=this.getConsignacionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteConsignacions("Todos",consignacionsSeleccionados);
		
	}	
	
	public void generarReporteNormalConsignacionsSeleccionados() throws Exception {
		ArrayList<Consignacion> consignacionsSeleccionados=new ArrayList<Consignacion>();		
		
		consignacionsSeleccionados=this.getConsignacionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteConsignacions("Todos",consignacionsSeleccionados);
	}		
	
	public void generarReporteProcesoAccionConsignacionsSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<Consignacion> consignacionsSeleccionados=new ArrayList<Consignacion>();
		
		consignacionsSeleccionados=this.getConsignacionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteConsignacions("Todos",consignacionsSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoConsignacionsSeleccionados() throws Exception {
		ArrayList<Consignacion> consignacionsSeleccionados=new ArrayList<Consignacion>();		
		
		
		this.abrirInicializarFrameReporteDinamicoConsignacion();
		
		
		consignacionsSeleccionados=this.getConsignacionsSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoConsignacion();
		
		
		//this.generarReporteConsignacions("Todos",consignacionsSeleccionados ,consignacionImplementable,consignacionImplementableHome);
	}
	
	public void mostrarImportacionConsignacions() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionConsignacion();
		
		this.abrirFrameImportacionConsignacion();		
		
			
		//this.generarReporteConsignacions("Todos",consignacionsSeleccionados ,consignacionImplementable,consignacionImplementableHome);
	}
	
	public void importarConsignacions() throws Exception {		
	
	}
	
	public void exportarConsignacionsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelConsignacionsSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoConsignacionsSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlConsignacionsSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Consignacion",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoConsignacionsSeleccionados() throws Exception {
		ArrayList<Consignacion> consignacionsSeleccionados=new ArrayList<Consignacion>();		
		
		consignacionsSeleccionados=this.getConsignacionsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"consignacion."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarConsignacion(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(Consignacion consignacionAux:consignacionsSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarConsignacion(consignacionAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//consignacionAux.setsDetalleGeneralEntityReporte(consignacionAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.consignacionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Consignacion",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarConsignacion(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDUSUARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_NUMERO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_NUMEROAUTORIZACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_FECHAEMISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_FECHAVENCIMIENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDMONEDA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_COTIZACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDEMPLEADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDTIPOPRECIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDFORMATO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_DIRECCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_TELEFONO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_RUC;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDSUBCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDCONSIGNATARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDVENDEDOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDESTADOPEDIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_TOTALCONIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_SUMAN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_TOTALSINIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_TOTALDESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_FLETE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_TOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_SUBTOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_OTRO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_FINANCIAMIENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_ICE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_MONTORETENCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDTIPOCAMBIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_NUMEROFUE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDZONA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_FECHA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDCENTROCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_FECHASERVIDOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDRESPONSABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_HORAINICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_HORAFIN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDTRANSPORTISTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ConsignacionConstantesFunciones.LABEL_IDTRANSPORTE;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarConsignacion(Consignacion consignacion,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=consignacion.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getusuario_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getnumero();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getnumero_autorizacion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getfecha_emision().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getfecha_vencimiento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getmoneda_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getcotizacion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getempleado_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.gettipoprecio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getformato_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getdireccion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.gettelefono();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getruc();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getsubcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getconsignatario_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getvendedor_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getestadopedido_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getdescuento_porcentaje().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.gettotal_con_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getsuman().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getdescuento_valor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.gettotal_sin_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.gettotal_descuento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getflete().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.gettotal().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getsubtotal().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getotro().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getfinanciamiento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getiva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getice().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getmonto_retencion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.gettipocambio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getnumero_fue();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getzona_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getfecha().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getcentrocosto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getfecha_servidor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.getresponsable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.gethora_inicio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.gethora_fin().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.gettransportista_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=consignacion.gettransporte_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelConsignacionsSeleccionados() throws Exception {
		ArrayList<Consignacion> consignacionsSeleccionados=new ArrayList<Consignacion>();		
		
		consignacionsSeleccionados=this.getConsignacionsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"consignacion.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("Consignacions");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelConsignacion(row);				
				iRow++;
			}				
			
			for(Consignacion consignacionAux:consignacionsSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelConsignacion(consignacionAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.consignacionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Consignacion",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlConsignacionsSeleccionados() throws Exception {
		ArrayList<Consignacion> consignacionsSeleccionados=new ArrayList<Consignacion>();		
		
		consignacionsSeleccionados=this.getConsignacionsSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"consignacion.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("consignacions");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("consignacion");
			//elementRoot.appendChild(element);
		
			for(Consignacion consignacionAux:consignacionsSeleccionados) {
				element = document.createElement("consignacion");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlConsignacion(consignacionAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.consignacionSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Consignacion",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelConsignacion(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDUSUARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_NUMERO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_NUMEROAUTORIZACION);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_FECHAEMISION);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_FECHAVENCIMIENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDMONEDA);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_COTIZACION);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDEMPLEADO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDTIPOPRECIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDFORMATO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_DIRECCION);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_TELEFONO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_RUC);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDSUBCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDCONSIGNATARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDVENDEDOR);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDESTADOPEDIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_DESCUENTOPORCENTAJE);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_TOTALCONIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_SUMAN);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_DESCUENTOVALOR);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_TOTALSINIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_TOTALDESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_FLETE);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_TOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_SUBTOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_OTRO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_FINANCIAMIENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IVA);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_ICE);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_MONTORETENCION);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDTIPOCAMBIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_NUMEROFUE);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDZONA);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_FECHA);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDCENTROCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_FECHASERVIDOR);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDRESPONSABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_HORAINICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_HORAFIN);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDTRANSPORTISTA);
		cell = row.createCell(iColumn++);cell.setCellValue(ConsignacionConstantesFunciones.LABEL_IDTRANSPORTE);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelConsignacion(Consignacion consignacion,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getusuario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getnumero());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getnumero_autorizacion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getfecha_emision());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getfecha_vencimiento());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getmoneda_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getcotizacion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getempleado_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.gettipoprecio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getformato_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getdireccion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.gettelefono());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getruc());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getsubcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getconsignatario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getvendedor_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getestadopedido_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getdescuento_porcentaje());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.gettotal_con_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getsuman());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getdescuento_valor());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.gettotal_sin_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.gettotal_descuento());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getflete());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.gettotal());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getsubtotal());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getotro());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getfinanciamiento());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getiva());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getice());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getmonto_retencion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.gettipocambio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getnumero_fue());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getzona_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getfecha());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getcentrocosto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getfecha_servidor());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.getresponsable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.gethora_inicio());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.gethora_fin());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.gettransportista_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(consignacion.gettransporte_descripcion());				
	}
	
	public void setFilaDatosExportarXmlConsignacion(Consignacion consignacion,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(ConsignacionConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(consignacion.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(ConsignacionConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(consignacion.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(ConsignacionConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(consignacion.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(ConsignacionConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(consignacion.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementejercicio_descripcion = document.createElement(ConsignacionConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(consignacion.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(ConsignacionConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(consignacion.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementanio_descripcion = document.createElement(ConsignacionConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(consignacion.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(ConsignacionConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(consignacion.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementusuario_descripcion = document.createElement(ConsignacionConstantesFunciones.IDUSUARIO);
		elementusuario_descripcion.appendChild(document.createTextNode(consignacion.getusuario_descripcion()));
		element.appendChild(elementusuario_descripcion);

		Element elementnumero = document.createElement(ConsignacionConstantesFunciones.NUMERO);
		elementnumero.appendChild(document.createTextNode(consignacion.getnumero().trim()));
		element.appendChild(elementnumero);

		Element elementnumero_autorizacion = document.createElement(ConsignacionConstantesFunciones.NUMEROAUTORIZACION);
		elementnumero_autorizacion.appendChild(document.createTextNode(consignacion.getnumero_autorizacion().trim()));
		element.appendChild(elementnumero_autorizacion);

		Element elementfecha_emision = document.createElement(ConsignacionConstantesFunciones.FECHAEMISION);
		elementfecha_emision.appendChild(document.createTextNode(consignacion.getfecha_emision().toString().trim()));
		element.appendChild(elementfecha_emision);

		Element elementfecha_vencimiento = document.createElement(ConsignacionConstantesFunciones.FECHAVENCIMIENTO);
		elementfecha_vencimiento.appendChild(document.createTextNode(consignacion.getfecha_vencimiento().toString().trim()));
		element.appendChild(elementfecha_vencimiento);

		Element elementmoneda_descripcion = document.createElement(ConsignacionConstantesFunciones.IDMONEDA);
		elementmoneda_descripcion.appendChild(document.createTextNode(consignacion.getmoneda_descripcion()));
		element.appendChild(elementmoneda_descripcion);

		Element elementcotizacion = document.createElement(ConsignacionConstantesFunciones.COTIZACION);
		elementcotizacion.appendChild(document.createTextNode(consignacion.getcotizacion().toString().trim()));
		element.appendChild(elementcotizacion);

		Element elementempleado_descripcion = document.createElement(ConsignacionConstantesFunciones.IDEMPLEADO);
		elementempleado_descripcion.appendChild(document.createTextNode(consignacion.getempleado_descripcion()));
		element.appendChild(elementempleado_descripcion);

		Element elementtipoprecio_descripcion = document.createElement(ConsignacionConstantesFunciones.IDTIPOPRECIO);
		elementtipoprecio_descripcion.appendChild(document.createTextNode(consignacion.gettipoprecio_descripcion()));
		element.appendChild(elementtipoprecio_descripcion);

		Element elementformato_descripcion = document.createElement(ConsignacionConstantesFunciones.IDFORMATO);
		elementformato_descripcion.appendChild(document.createTextNode(consignacion.getformato_descripcion()));
		element.appendChild(elementformato_descripcion);

		Element elementdireccion = document.createElement(ConsignacionConstantesFunciones.DIRECCION);
		elementdireccion.appendChild(document.createTextNode(consignacion.getdireccion().trim()));
		element.appendChild(elementdireccion);

		Element elementcliente_descripcion = document.createElement(ConsignacionConstantesFunciones.IDCLIENTE);
		elementcliente_descripcion.appendChild(document.createTextNode(consignacion.getcliente_descripcion()));
		element.appendChild(elementcliente_descripcion);

		Element elementtelefono = document.createElement(ConsignacionConstantesFunciones.TELEFONO);
		elementtelefono.appendChild(document.createTextNode(consignacion.gettelefono().trim()));
		element.appendChild(elementtelefono);

		Element elementruc = document.createElement(ConsignacionConstantesFunciones.RUC);
		elementruc.appendChild(document.createTextNode(consignacion.getruc().trim()));
		element.appendChild(elementruc);

		Element elementsubcliente_descripcion = document.createElement(ConsignacionConstantesFunciones.IDSUBCLIENTE);
		elementsubcliente_descripcion.appendChild(document.createTextNode(consignacion.getsubcliente_descripcion()));
		element.appendChild(elementsubcliente_descripcion);

		Element elementconsignatario_descripcion = document.createElement(ConsignacionConstantesFunciones.IDCONSIGNATARIO);
		elementconsignatario_descripcion.appendChild(document.createTextNode(consignacion.getconsignatario_descripcion()));
		element.appendChild(elementconsignatario_descripcion);

		Element elementvendedor_descripcion = document.createElement(ConsignacionConstantesFunciones.IDVENDEDOR);
		elementvendedor_descripcion.appendChild(document.createTextNode(consignacion.getvendedor_descripcion()));
		element.appendChild(elementvendedor_descripcion);

		Element elementdescripcion = document.createElement(ConsignacionConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(consignacion.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementestadopedido_descripcion = document.createElement(ConsignacionConstantesFunciones.IDESTADOPEDIDO);
		elementestadopedido_descripcion.appendChild(document.createTextNode(consignacion.getestadopedido_descripcion()));
		element.appendChild(elementestadopedido_descripcion);

		Element elementdescuento_porcentaje = document.createElement(ConsignacionConstantesFunciones.DESCUENTOPORCENTAJE);
		elementdescuento_porcentaje.appendChild(document.createTextNode(consignacion.getdescuento_porcentaje().toString().trim()));
		element.appendChild(elementdescuento_porcentaje);

		Element elementtotal_con_iva = document.createElement(ConsignacionConstantesFunciones.TOTALCONIVA);
		elementtotal_con_iva.appendChild(document.createTextNode(consignacion.gettotal_con_iva().toString().trim()));
		element.appendChild(elementtotal_con_iva);

		Element elementsuman = document.createElement(ConsignacionConstantesFunciones.SUMAN);
		elementsuman.appendChild(document.createTextNode(consignacion.getsuman().toString().trim()));
		element.appendChild(elementsuman);

		Element elementdescuento_valor = document.createElement(ConsignacionConstantesFunciones.DESCUENTOVALOR);
		elementdescuento_valor.appendChild(document.createTextNode(consignacion.getdescuento_valor().toString().trim()));
		element.appendChild(elementdescuento_valor);

		Element elementtotal_sin_iva = document.createElement(ConsignacionConstantesFunciones.TOTALSINIVA);
		elementtotal_sin_iva.appendChild(document.createTextNode(consignacion.gettotal_sin_iva().toString().trim()));
		element.appendChild(elementtotal_sin_iva);

		Element elementtotal_descuento = document.createElement(ConsignacionConstantesFunciones.TOTALDESCUENTO);
		elementtotal_descuento.appendChild(document.createTextNode(consignacion.gettotal_descuento().toString().trim()));
		element.appendChild(elementtotal_descuento);

		Element elementflete = document.createElement(ConsignacionConstantesFunciones.FLETE);
		elementflete.appendChild(document.createTextNode(consignacion.getflete().toString().trim()));
		element.appendChild(elementflete);

		Element elementtotal = document.createElement(ConsignacionConstantesFunciones.TOTAL);
		elementtotal.appendChild(document.createTextNode(consignacion.gettotal().toString().trim()));
		element.appendChild(elementtotal);

		Element elementsubtotal = document.createElement(ConsignacionConstantesFunciones.SUBTOTAL);
		elementsubtotal.appendChild(document.createTextNode(consignacion.getsubtotal().toString().trim()));
		element.appendChild(elementsubtotal);

		Element elementotro = document.createElement(ConsignacionConstantesFunciones.OTRO);
		elementotro.appendChild(document.createTextNode(consignacion.getotro().toString().trim()));
		element.appendChild(elementotro);

		Element elementfinanciamiento = document.createElement(ConsignacionConstantesFunciones.FINANCIAMIENTO);
		elementfinanciamiento.appendChild(document.createTextNode(consignacion.getfinanciamiento().toString().trim()));
		element.appendChild(elementfinanciamiento);

		Element elementiva = document.createElement(ConsignacionConstantesFunciones.IVA);
		elementiva.appendChild(document.createTextNode(consignacion.getiva().toString().trim()));
		element.appendChild(elementiva);

		Element elementice = document.createElement(ConsignacionConstantesFunciones.ICE);
		elementice.appendChild(document.createTextNode(consignacion.getice().toString().trim()));
		element.appendChild(elementice);

		Element elementmonto_retencion = document.createElement(ConsignacionConstantesFunciones.MONTORETENCION);
		elementmonto_retencion.appendChild(document.createTextNode(consignacion.getmonto_retencion().toString().trim()));
		element.appendChild(elementmonto_retencion);

		Element elementtipocambio_descripcion = document.createElement(ConsignacionConstantesFunciones.IDTIPOCAMBIO);
		elementtipocambio_descripcion.appendChild(document.createTextNode(consignacion.gettipocambio_descripcion()));
		element.appendChild(elementtipocambio_descripcion);

		Element elementnumero_fue = document.createElement(ConsignacionConstantesFunciones.NUMEROFUE);
		elementnumero_fue.appendChild(document.createTextNode(consignacion.getnumero_fue().trim()));
		element.appendChild(elementnumero_fue);

		Element elementzona_descripcion = document.createElement(ConsignacionConstantesFunciones.IDZONA);
		elementzona_descripcion.appendChild(document.createTextNode(consignacion.getzona_descripcion()));
		element.appendChild(elementzona_descripcion);

		Element elementfecha = document.createElement(ConsignacionConstantesFunciones.FECHA);
		elementfecha.appendChild(document.createTextNode(consignacion.getfecha().toString().trim()));
		element.appendChild(elementfecha);

		Element elementcentrocosto_descripcion = document.createElement(ConsignacionConstantesFunciones.IDCENTROCOSTO);
		elementcentrocosto_descripcion.appendChild(document.createTextNode(consignacion.getcentrocosto_descripcion()));
		element.appendChild(elementcentrocosto_descripcion);

		Element elementfecha_servidor = document.createElement(ConsignacionConstantesFunciones.FECHASERVIDOR);
		elementfecha_servidor.appendChild(document.createTextNode(consignacion.getfecha_servidor().toString().trim()));
		element.appendChild(elementfecha_servidor);

		Element elementresponsable_descripcion = document.createElement(ConsignacionConstantesFunciones.IDRESPONSABLE);
		elementresponsable_descripcion.appendChild(document.createTextNode(consignacion.getresponsable_descripcion()));
		element.appendChild(elementresponsable_descripcion);

		Element elementhora_inicio = document.createElement(ConsignacionConstantesFunciones.HORAINICIO);
		elementhora_inicio.appendChild(document.createTextNode(consignacion.gethora_inicio().toString().trim()));
		element.appendChild(elementhora_inicio);

		Element elementhora_fin = document.createElement(ConsignacionConstantesFunciones.HORAFIN);
		elementhora_fin.appendChild(document.createTextNode(consignacion.gethora_fin().toString().trim()));
		element.appendChild(elementhora_fin);

		Element elementtransportista_descripcion = document.createElement(ConsignacionConstantesFunciones.IDTRANSPORTISTA);
		elementtransportista_descripcion.appendChild(document.createTextNode(consignacion.gettransportista_descripcion()));
		element.appendChild(elementtransportista_descripcion);

		Element elementtransporte_descripcion = document.createElement(ConsignacionConstantesFunciones.IDTRANSPORTE);
		elementtransporte_descripcion.appendChild(document.createTextNode(consignacion.gettransporte_descripcion()));
		element.appendChild(elementtransporte_descripcion);
	}
	
	public void generarReporteGroupGenericoConsignacionsSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<Consignacion> consignacionsSeleccionados=new ArrayList<Consignacion>();
		
		consignacionsSeleccionados=this.getConsignacionsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoConsignacion(consignacionsSeleccionados);
		
		this.generarReporteConsignacions("Todos",consignacionsSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoConsignacion(ArrayList<Consignacion> consignacionsSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(Consignacion consignacionAux:consignacionsSeleccionados) {
				consignacionAux.setsDetalleGeneralEntityReporte(consignacionAux.toString());
			
				if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDUSUARIO)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getusuario_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_NUMERO)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getnumero());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_NUMEROAUTORIZACION)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getnumero_autorizacion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_FECHAEMISION)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(consignacionAux.getfecha_emision()));
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_FECHAVENCIMIENTO)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(consignacionAux.getfecha_vencimiento()));
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDMONEDA)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getmoneda_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDEMPLEADO)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getempleado_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDTIPOPRECIO)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.gettipoprecio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDFORMATO)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getformato_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_DIRECCION)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getdireccion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDCLIENTE)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_TELEFONO)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.gettelefono());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_RUC)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getruc());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDSUBCLIENTE)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getsubcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDCONSIGNATARIO)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getconsignatario_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDVENDEDOR)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getvendedor_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDESTADOPEDIDO)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getestadopedido_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDTIPOCAMBIO)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.gettipocambio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_NUMEROFUE)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getnumero_fue());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDZONA)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getzona_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_FECHA)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(consignacionAux.getfecha()));
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDCENTROCOSTO)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getcentrocosto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_FECHASERVIDOR)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(consignacionAux.getfecha_servidor()));
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDRESPONSABLE)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.getresponsable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_HORAINICIO)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.gethora_inicio().toString());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_HORAFIN)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.gethora_fin().toString());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDTRANSPORTISTA)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.gettransportista_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ConsignacionConstantesFunciones.LABEL_IDTRANSPORTE)) {
					existe=true;
					consignacionAux.setsDescripcionGeneralEntityReporte1(consignacionAux.gettransporte_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ConsignacionConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesConsignacion(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoConsignacion=true;
				this.isVisibilidadCeldaNuevoRelacionesConsignacion=true;
				this.isVisibilidadCeldaGuardarCambiosConsignacion=true;
			}
			
			this.isVisibilidadCeldaModificarConsignacion=false;
			this.isVisibilidadCeldaActualizarConsignacion=false;
			this.isVisibilidadCeldaEliminarConsignacion=false;
			this.isVisibilidadCeldaCancelarConsignacion=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarConsignacion=true;
				} else {
					this.isVisibilidadCeldaGuardarConsignacion=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoConsignacion=false;
			this.isVisibilidadCeldaNuevoRelacionesConsignacion=false;
			this.isVisibilidadCeldaGuardarCambiosConsignacion=false;
			this.isVisibilidadCeldaModificarConsignacion=false;
			this.isVisibilidadCeldaActualizarConsignacion=true;
			this.isVisibilidadCeldaEliminarConsignacion=false;
			this.isVisibilidadCeldaCancelarConsignacion=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarConsignacion=true;
				} else {
					this.isVisibilidadCeldaGuardarConsignacion=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoConsignacion=false;
			this.isVisibilidadCeldaNuevoRelacionesConsignacion=false;
			this.isVisibilidadCeldaGuardarCambiosConsignacion=false;
			this.isVisibilidadCeldaModificarConsignacion=false;
			this.isVisibilidadCeldaActualizarConsignacion=true;
			this.isVisibilidadCeldaEliminarConsignacion=true;
			this.isVisibilidadCeldaCancelarConsignacion=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarConsignacion=true;
				} else {
					this.isVisibilidadCeldaGuardarConsignacion=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoConsignacion=false;
			this.isVisibilidadCeldaNuevoRelacionesConsignacion=false;
			this.isVisibilidadCeldaGuardarCambiosConsignacion=false;
			this.isVisibilidadCeldaModificarConsignacion=false;
			this.isVisibilidadCeldaActualizarConsignacion=true;
			this.isVisibilidadCeldaEliminarConsignacion=false;
			this.isVisibilidadCeldaCancelarConsignacion=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarConsignacion=false;
				} else {
					this.isVisibilidadCeldaGuardarConsignacion=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoConsignacion=true;
			this.isVisibilidadCeldaNuevoRelacionesConsignacion=true;
			this.isVisibilidadCeldaGuardarCambiosConsignacion=true;
			this.isVisibilidadCeldaModificarConsignacion=false;
			this.isVisibilidadCeldaActualizarConsignacion=false;
			this.isVisibilidadCeldaEliminarConsignacion=false;
			this.isVisibilidadCeldaCancelarConsignacion=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarConsignacion=true;
				} else {
					this.isVisibilidadCeldaGuardarConsignacion=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoConsignacion=false;
			this.isVisibilidadCeldaNuevoRelacionesConsignacion=false;
			this.isVisibilidadCeldaGuardarCambiosConsignacion=false;
			this.isVisibilidadCeldaActualizarConsignacion=false;
			this.isVisibilidadCeldaEliminarConsignacion=false;
			this.isVisibilidadCeldaCancelarConsignacion=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarConsignacion=false;
				} else {
					this.isVisibilidadCeldaGuardarConsignacion=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoConsignacion=false;
			this.isVisibilidadCeldaNuevoRelacionesConsignacion=false;
			this.isVisibilidadCeldaGuardarCambiosConsignacion=false;
			this.isVisibilidadCeldaModificarConsignacion=true;
			this.isVisibilidadCeldaActualizarConsignacion=false;
			this.isVisibilidadCeldaEliminarConsignacion=false;
			this.isVisibilidadCeldaCancelarConsignacion=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarConsignacion=false;
				} else {
					this.isVisibilidadCeldaGuardarConsignacion=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(ConsignacionJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoConsignacion=true;
			this.isVisibilidadCeldaNuevoRelacionesConsignacion=true;
			this.isVisibilidadCeldaGuardarCambiosConsignacion=true;
		} else {
			this.actualizarEstadoPanelsConsignacion(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarConsignacion=false;
			//this.isVisibilidadCeldaVerFormConsignacion=false;
			this.isVisibilidadCeldaDuplicarConsignacion=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!consignacionSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesConsignacion=false;
		} else {
			this.isVisibilidadCeldaNuevoConsignacion=false;
			this.isVisibilidadCeldaGuardarCambiosConsignacion=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(consignacionSessionBean.getEsGuardarRelacionado()) {
			if(!consignacionSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesConsignacion=false;												
			}
			
			this.jButtonCerrarConsignacion.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesConsignacion=false;
		}
		
		if(!this.permiteMantenimiento(this.consignacion)) {
			this.isVisibilidadCeldaActualizarConsignacion=false;
			this.isVisibilidadCeldaEliminarConsignacion=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesConsignacion() {
		this.isVisibilidadCeldaNuevoConsignacion=false;
		this.isVisibilidadCeldaGuardarCambiosConsignacion=false;
	}
	
	public void actualizarEstadoPanelsConsignacion(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionConsignacion!=null) {
				this.jScrollPanelDatosEdicionConsignacion.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasConsignacion!=null) {
				this.jTabbedPaneBusquedasConsignacion.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosConsignacion!=null) {
				this.jScrollPanelDatosConsignacion.setVisible(true);
			}
			
			if(this.jPanelPaginacionConsignacion!=null) {
				this.jPanelPaginacionConsignacion.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesConsignacion!=null) {
				this.jPanelParametrosReportesConsignacion.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionConsignacion!=null) {
				this.jScrollPanelDatosEdicionConsignacion.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasConsignacion!=null) {
				this.jTabbedPaneBusquedasConsignacion.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosConsignacion!=null) {
				this.jScrollPanelDatosConsignacion.setVisible(false);
			}
			
			if(this.jPanelPaginacionConsignacion!=null) {
				this.jPanelPaginacionConsignacion.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesConsignacion!=null) {
				this.jPanelParametrosReportesConsignacion.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionConsignacion!=null) {
				this.jScrollPanelDatosEdicionConsignacion.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasConsignacion!=null) {
				this.jTabbedPaneBusquedasConsignacion.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosConsignacion!=null) {
				this.jScrollPanelDatosConsignacion.setVisible(false);
			}
			
			if(this.jPanelPaginacionConsignacion!=null) {
				this.jPanelPaginacionConsignacion.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesConsignacion!=null) {
				this.jPanelParametrosReportesConsignacion.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionConsignacion!=null) {
				this.jScrollPanelDatosEdicionConsignacion.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasConsignacion!=null) {
				this.jTabbedPaneBusquedasConsignacion.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosConsignacion!=null) {
				this.jScrollPanelDatosConsignacion.setVisible(false);
			}
			
			if(this.jPanelPaginacionConsignacion!=null) {
				this.jPanelPaginacionConsignacion.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesConsignacion!=null) {
				this.jPanelParametrosReportesConsignacion.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionConsignacion!=null) {
				this.jScrollPanelDatosEdicionConsignacion.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasConsignacion!=null) {
				this.jTabbedPaneBusquedasConsignacion.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosConsignacion!=null) {
				this.jScrollPanelDatosConsignacion.setVisible(true);
			}
			
			if(this.jPanelPaginacionConsignacion!=null) {
				this.jPanelPaginacionConsignacion.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesConsignacion!=null) {
				this.jPanelParametrosReportesConsignacion.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionConsignacion!=null) {
				this.jScrollPanelDatosEdicionConsignacion.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasConsignacion!=null) {
				this.jTabbedPaneBusquedasConsignacion.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosConsignacion!=null) {
				this.jScrollPanelDatosConsignacion.setVisible(true);
			}
			
			if(this.jPanelPaginacionConsignacion!=null) {
				this.jPanelPaginacionConsignacion.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesConsignacion!=null) {
				this.jPanelParametrosReportesConsignacion.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionConsignacion!=null) {
				this.jScrollPanelDatosEdicionConsignacion.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasConsignacion!=null) {
				this.jTabbedPaneBusquedasConsignacion.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosConsignacion!=null) {
				this.jScrollPanelDatosConsignacion.setVisible(true);
			}
			
			if(this.jPanelPaginacionConsignacion!=null) {
				this.jPanelPaginacionConsignacion.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesConsignacion!=null) {
				this.jPanelParametrosReportesConsignacion.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.consignacionSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasConsignacion!=null) {
					this.jTabbedPaneBusquedasConsignacion.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesConsignacion!=null) {
				this.jPanelParametrosReportesConsignacion.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.consignacionSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasConsignacion!=null) {
				this.jTabbedPaneBusquedasConsignacion.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesConsignacion!=null) {
				this.jPanelParametrosReportesConsignacion.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdCentroCosto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdCentroCosto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdCentroCosto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdCentroCosto=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdCentroCosto=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdCentroCosto=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaMesNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaMesNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaMesNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaMesNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaMesNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaMesNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaUsuario(Boolean isParaUsuario){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUsuarioNegation=!isParaUsuario;

			this.isVisibilidadFK_IdCentroCosto=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaMoneda(Boolean isParaMoneda){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMonedaNegation=!isParaMoneda;

			this.isVisibilidadFK_IdCentroCosto=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpleado(Boolean isParaEmpleado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpleadoNegation=!isParaEmpleado;

			this.isVisibilidadFK_IdCentroCosto=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpleado;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoPrecio(Boolean isParaTipoPrecio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoPrecioNegation=!isParaTipoPrecio;

			this.isVisibilidadFK_IdCentroCosto=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoPrecio;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaFormato(Boolean isParaFormato){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFormatoNegation=!isParaFormato;

			this.isVisibilidadFK_IdCentroCosto=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaFormato;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaCliente(Boolean isParaCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteNegation=!isParaCliente;

			this.isVisibilidadFK_IdCentroCosto=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaCliente;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaSubCliente(Boolean isParaSubCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSubClienteNegation=!isParaSubCliente;

			this.isVisibilidadFK_IdCentroCosto=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaSubCliente;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaConsignatario(Boolean isParaConsignatario){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaConsignatarioNegation=!isParaConsignatario;

			this.isVisibilidadFK_IdCentroCosto=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaConsignatario;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaVendedor(Boolean isParaVendedor){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaVendedorNegation=!isParaVendedor;

			this.isVisibilidadFK_IdCentroCosto=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaVendedor;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoPedido(Boolean isParaEstadoPedido){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoPedidoNegation=!isParaEstadoPedido;

			this.isVisibilidadFK_IdCentroCosto=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaEstadoPedido;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaEstadoPedidoNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoCambio(Boolean isParaTipoCambio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoCambioNegation=!isParaTipoCambio;

			this.isVisibilidadFK_IdCentroCosto=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaTipoCambio;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaZona(Boolean isParaZona){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaZonaNegation=!isParaZona;

			this.isVisibilidadFK_IdCentroCosto=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaZonaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaZona;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaCentroCosto(Boolean isParaCentroCosto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCentroCostoNegation=!isParaCentroCosto;

			this.isVisibilidadFK_IdCentroCosto=isParaCentroCosto;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaResponsable(Boolean isParaResponsable){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaResponsableNegation=!isParaResponsable;

			this.isVisibilidadFK_IdCentroCosto=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaResponsable;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransportista(Boolean isParaTransportista){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransportistaNegation=!isParaTransportista;

			this.isVisibilidadFK_IdCentroCosto=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaTransportista;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransporte(Boolean isParaTransporte){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransporteNegation=!isParaTransporte;

			this.isVisibilidadFK_IdCentroCosto=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdCentroCostoConsignacion);}

			this.isVisibilidadFK_IdCliente=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdClienteConsignacion);}

			this.isVisibilidadFK_IdConsignatario=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdConsignatarioConsignacion);}

			this.isVisibilidadFK_IdEmpleado=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEmpleadoConsignacion);}

			this.isVisibilidadFK_IdEstadoPedido=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdEstadoPedido) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdEstadoPedidoConsignacion);}

			this.isVisibilidadFK_IdFormato=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdFormatoConsignacion);}

			this.isVisibilidadFK_IdResponsable=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdResponsableConsignacion);}

			this.isVisibilidadFK_IdSubCliente=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdSubClienteConsignacion);}

			this.isVisibilidadFK_IdTipoCambio=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoCambioConsignacion);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTipoPrecioConsignacion);}

			this.isVisibilidadFK_IdTransporte=isParaTransporte;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransporteConsignacion);}

			this.isVisibilidadFK_IdTransportista=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdTransportistaConsignacion);}

			this.isVisibilidadFK_IdVendedor=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdVendedorConsignacion);}

			this.isVisibilidadFK_IdZona=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdZona) {this.jTabbedPaneBusquedasConsignacion.remove(jPanelFK_IdZonaConsignacion);}
		}
		
	}
	
	

	public String registrarSesionConsignacionParaDetalleConsignacions() throws Exception {
		Boolean isPaginaPopupDetalleConsignacion=false;

		try {

			if(this.consignacionSessionBean==null) {
				this.consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(this.jInternalFrameDetalleFormConsignacion.detalleconsignacionSessionBean==null) {
				this.jInternalFrameDetalleFormConsignacion.detalleconsignacionSessionBean=new DetalleConsignacionSessionBean();
			}

			this.jInternalFrameDetalleFormConsignacion.detalleconsignacionSessionBean.setsPathNavegacionActual(consignacionSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+DetalleConsignacionConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormConsignacion.detalleconsignacionSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupDetalleConsignacion=this.jInternalFrameDetalleFormConsignacion.detalleconsignacionSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormConsignacion.detalleconsignacionSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeDetalleConsignacion(true);
			this.jInternalFrameDetalleFormConsignacion.detalleconsignacionSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeDetalleConsignacion(ConsignacionConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormConsignacion.detalleconsignacionSessionBean.setisBusquedaDesdeForeignKeySesionConsignacion(true);
			this.jInternalFrameDetalleFormConsignacion.detalleconsignacionSessionBean.setlidConsignacionActual(this.idConsignacionActual);
			this.jInternalFrameDetalleFormConsignacion.detalleconsignacionSessionBean.setNoMantenimiento(true);

			consignacionSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyConsignacion(true);
			consignacionSessionBean.setlIdConsignacionActualForeignKey(this.idConsignacionActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	

	public String registrarSesionConsignacionParaBusquedaEmpleados() throws Exception {
		Boolean isPaginaPopupEmpleado=false;

		try {

			if(consignacionSessionBean==null) {
				consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(empleadoSessionBean==null) {
				empleadoSessionBean=new EmpleadoSessionBean();
			}

			empleadoSessionBean.setsPathNavegacionActual(consignacionSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoConstantesFunciones.SCLASSWEBTITULO);
			empleadoSessionBean.setisPermiteRecargarInformacion(false);
			empleadoSessionBean.setisPaginaPopup(true);
			isPaginaPopupEmpleado=empleadoSessionBean.getisPaginaPopup();
			empleadoSessionBean.setisPaginaPopup(false);
			empleadoSessionBean.setEstaModoBusqueda(true);
			empleadoSessionBean.setsFuncionBusquedaRapida("window.opener.consignacionFuncionGeneral.setCombosCodigoDesdeBusquedaid_empleado(TO_REPLACE);");
			empleadoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleado(true);
			empleadoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleado(ConsignacionConstantesFunciones.SNOMBREOPCION);
			//empleadoSessionBean.setisBusquedaDesdeForeignKeySesionConsignacion(true);
			//empleadoSessionBean.setlidConsignacionActual(this.idConsignacionActual);

			consignacionSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyConsignacion(true);
			consignacionSessionBean.setlIdConsignacionActualForeignKey(this.idConsignacionActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionConsignacionParaBusquedaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(consignacionSessionBean==null) {
				consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			clienteSessionBean.setsPathNavegacionActual(consignacionSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteSessionBean.setisPermiteRecargarInformacion(false);
			clienteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteSessionBean.getisPaginaPopup();
			clienteSessionBean.setisPaginaPopup(false);
			clienteSessionBean.setEstaModoBusqueda(true);
			clienteSessionBean.setsFuncionBusquedaRapida("window.opener.consignacionFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente(TO_REPLACE);");
			clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(ConsignacionConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionConsignacion(true);
			//clienteSessionBean.setlidConsignacionActual(this.idConsignacionActual);

			consignacionSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyConsignacion(true);
			consignacionSessionBean.setlIdConsignacionActualForeignKey(this.idConsignacionActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionConsignacionParaBusquedaVendedores() throws Exception {
		Boolean isPaginaPopupVendedor=false;

		try {

			if(consignacionSessionBean==null) {
				consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(vendedorSessionBean==null) {
				vendedorSessionBean=new VendedorSessionBean();
			}

			vendedorSessionBean.setsPathNavegacionActual(consignacionSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+VendedorConstantesFunciones.SCLASSWEBTITULO);
			vendedorSessionBean.setisPermiteRecargarInformacion(false);
			vendedorSessionBean.setisPaginaPopup(true);
			isPaginaPopupVendedor=vendedorSessionBean.getisPaginaPopup();
			vendedorSessionBean.setisPaginaPopup(false);
			vendedorSessionBean.setEstaModoBusqueda(true);
			vendedorSessionBean.setsFuncionBusquedaRapida("window.opener.consignacionFuncionGeneral.setCombosCodigoDesdeBusquedaid_vendedor(TO_REPLACE);");
			vendedorSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeVendedor(true);
			vendedorSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeVendedor(ConsignacionConstantesFunciones.SNOMBREOPCION);
			//vendedorSessionBean.setisBusquedaDesdeForeignKeySesionConsignacion(true);
			//vendedorSessionBean.setlidConsignacionActual(this.idConsignacionActual);

			consignacionSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyConsignacion(true);
			consignacionSessionBean.setlIdConsignacionActualForeignKey(this.idConsignacionActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionConsignacionParaBusquedaTipoCambios() throws Exception {
		Boolean isPaginaPopupTipoCambio=false;

		try {

			if(consignacionSessionBean==null) {
				consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(tipocambioSessionBean==null) {
				tipocambioSessionBean=new TipoCambioSessionBean();
			}

			tipocambioSessionBean.setsPathNavegacionActual(consignacionSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+TipoCambioConstantesFunciones.SCLASSWEBTITULO);
			tipocambioSessionBean.setisPermiteRecargarInformacion(false);
			tipocambioSessionBean.setisPaginaPopup(true);
			isPaginaPopupTipoCambio=tipocambioSessionBean.getisPaginaPopup();
			tipocambioSessionBean.setisPaginaPopup(false);
			tipocambioSessionBean.setEstaModoBusqueda(true);
			tipocambioSessionBean.setsFuncionBusquedaRapida("window.opener.consignacionFuncionGeneral.setCombosCodigoDesdeBusquedaid_tipo_cambio(TO_REPLACE);");
			tipocambioSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeTipoCambio(true);
			tipocambioSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeTipoCambio(ConsignacionConstantesFunciones.SNOMBREOPCION);
			//tipocambioSessionBean.setisBusquedaDesdeForeignKeySesionConsignacion(true);
			//tipocambioSessionBean.setlidConsignacionActual(this.idConsignacionActual);

			consignacionSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyConsignacion(true);
			consignacionSessionBean.setlIdConsignacionActualForeignKey(this.idConsignacionActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionConsignacionParaBusquedaCentroCostos() throws Exception {
		Boolean isPaginaPopupCentroCosto=false;

		try {

			if(consignacionSessionBean==null) {
				consignacionSessionBean=new ConsignacionSessionBean();
			}

			if(centrocostoSessionBean==null) {
				centrocostoSessionBean=new CentroCostoSessionBean();
			}

			centrocostoSessionBean.setsPathNavegacionActual(consignacionSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CentroCostoConstantesFunciones.SCLASSWEBTITULO);
			centrocostoSessionBean.setisPermiteRecargarInformacion(false);
			centrocostoSessionBean.setisPaginaPopup(true);
			isPaginaPopupCentroCosto=centrocostoSessionBean.getisPaginaPopup();
			centrocostoSessionBean.setisPaginaPopup(false);
			centrocostoSessionBean.setEstaModoBusqueda(true);
			centrocostoSessionBean.setsFuncionBusquedaRapida("window.opener.consignacionFuncionGeneral.setCombosCodigoDesdeBusquedaid_centro_costo(TO_REPLACE);");
			centrocostoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCentroCosto(true);
			centrocostoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCentroCosto(ConsignacionConstantesFunciones.SNOMBREOPCION);
			//centrocostoSessionBean.setisBusquedaDesdeForeignKeySesionConsignacion(true);
			//centrocostoSessionBean.setlidConsignacionActual(this.idConsignacionActual);

			consignacionSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyConsignacion(true);
			consignacionSessionBean.setlIdConsignacionActualForeignKey(this.idConsignacionActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//ConsignacionSessionBean consignacionSessionBean=new ConsignacionSessionBean();
		
		if(this.consignacionSessionBean==null) {
			this.consignacionSessionBean=new ConsignacionSessionBean();
		}
		
		this.consignacionSessionBean.setsUltimaBusquedaConsignacion(this.getsAccionBusqueda());
		this.consignacionSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.consignacionSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
			consignacionSessionBean.setid_centro_costo(this.getid_centro_costoFK_IdCentroCosto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
			consignacionSessionBean.setid_cliente(this.getid_clienteFK_IdCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdConsignatario")) {
			consignacionSessionBean.setid_consignatario(this.getid_consignatarioFK_IdConsignatario());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			consignacionSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
			consignacionSessionBean.setid_empleado(this.getid_empleadoFK_IdEmpleado());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			consignacionSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedido")) {
			consignacionSessionBean.setid_estado_pedido(this.getid_estado_pedidoFK_IdEstadoPedido());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdFormato")) {
			consignacionSessionBean.setid_formato(this.getid_formatoFK_IdFormato());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdMoneda")) {
			consignacionSessionBean.setid_moneda(this.getid_monedaFK_IdMoneda());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			consignacionSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdResponsable")) {
			consignacionSessionBean.setid_responsable(this.getid_responsableFK_IdResponsable());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSubCliente")) {
			consignacionSessionBean.setid_sub_cliente(this.getid_sub_clienteFK_IdSubCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			consignacionSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoCambio")) {
			consignacionSessionBean.setid_tipo_cambio(this.getid_tipo_cambioFK_IdTipoCambio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoPrecio")) {
			consignacionSessionBean.setid_tipo_precio(this.getid_tipo_precioFK_IdTipoPrecio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransporte")) {
			consignacionSessionBean.setid_transporte(this.getid_transporteFK_IdTransporte());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransportista")) {
			consignacionSessionBean.setid_transportista(this.getid_transportistaFK_IdTransportista());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
			consignacionSessionBean.setid_usuario(this.getid_usuarioFK_IdUsuario());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdVendedor")) {
			consignacionSessionBean.setid_vendedor(this.getid_vendedorFK_IdVendedor());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdZona")) {
			consignacionSessionBean.setid_zona(this.getid_zonaFK_IdZona());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//ConsignacionSessionBean consignacionSessionBean=new ConsignacionSessionBean();
		
		if(this.consignacionSessionBean==null) {
			this.consignacionSessionBean=new ConsignacionSessionBean();
		}
		
		if(this.consignacionSessionBean.getsUltimaBusquedaConsignacion()!=null&&!this.consignacionSessionBean.getsUltimaBusquedaConsignacion().equals("")) {
			this.setsAccionBusqueda(consignacionSessionBean.getsUltimaBusquedaConsignacion());
			this.setiNumeroPaginacion(consignacionSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(consignacionSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
				this.setid_centro_costoFK_IdCentroCosto(consignacionSessionBean.getid_centro_costo());
				consignacionSessionBean.setid_centro_costo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
				this.setid_clienteFK_IdCliente(consignacionSessionBean.getid_cliente());
				consignacionSessionBean.setid_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdConsignatario")) {
				this.setid_consignatarioFK_IdConsignatario(consignacionSessionBean.getid_consignatario());
				consignacionSessionBean.setid_consignatario(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(consignacionSessionBean.getid_ejercicio());
				consignacionSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
				this.setid_empleadoFK_IdEmpleado(consignacionSessionBean.getid_empleado());
				consignacionSessionBean.setid_empleado(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(consignacionSessionBean.getid_empresa());
				consignacionSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedido")) {
				this.setid_estado_pedidoFK_IdEstadoPedido(consignacionSessionBean.getid_estado_pedido());
				consignacionSessionBean.setid_estado_pedido(1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdFormato")) {
				this.setid_formatoFK_IdFormato(consignacionSessionBean.getid_formato());
				consignacionSessionBean.setid_formato(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdMoneda")) {
				this.setid_monedaFK_IdMoneda(consignacionSessionBean.getid_moneda());
				consignacionSessionBean.setid_moneda(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(consignacionSessionBean.getid_periodo());
				consignacionSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdResponsable")) {
				this.setid_responsableFK_IdResponsable(consignacionSessionBean.getid_responsable());
				consignacionSessionBean.setid_responsable(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSubCliente")) {
				this.setid_sub_clienteFK_IdSubCliente(consignacionSessionBean.getid_sub_cliente());
				consignacionSessionBean.setid_sub_cliente(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(consignacionSessionBean.getid_sucursal());
				consignacionSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoCambio")) {
				this.setid_tipo_cambioFK_IdTipoCambio(consignacionSessionBean.getid_tipo_cambio());
				consignacionSessionBean.setid_tipo_cambio(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoPrecio")) {
				this.setid_tipo_precioFK_IdTipoPrecio(consignacionSessionBean.getid_tipo_precio());
				consignacionSessionBean.setid_tipo_precio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransporte")) {
				this.setid_transporteFK_IdTransporte(consignacionSessionBean.getid_transporte());
				consignacionSessionBean.setid_transporte(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransportista")) {
				this.setid_transportistaFK_IdTransportista(consignacionSessionBean.getid_transportista());
				consignacionSessionBean.setid_transportista(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
				this.setid_usuarioFK_IdUsuario(consignacionSessionBean.getid_usuario());
				consignacionSessionBean.setid_usuario(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdVendedor")) {
				this.setid_vendedorFK_IdVendedor(consignacionSessionBean.getid_vendedor());
				consignacionSessionBean.setid_vendedor(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdZona")) {
				this.setid_zonaFK_IdZona(consignacionSessionBean.getid_zona());
				consignacionSessionBean.setid_zona(null);
			}
		}
		
		this.consignacionSessionBean.setsUltimaBusquedaConsignacion("");
		this.consignacionSessionBean.setiNumeroPaginacion(ConsignacionConstantesFunciones.INUMEROPAGINACION);
		this.consignacionSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaConsignacion(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioConsignacion() {
		this.updateBorderResaltarBusquedasFormularioConsignacion();
		this.updateVisibilidadBusquedasFormularioConsignacion();
		this.updateHabilitarBusquedasFormularioConsignacion();
	}
	
	public void updateBorderResaltarBusquedasFormularioConsignacion() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasConsignacion.getComponents().length>0) {
	

		if(this.consignacionConstantesFunciones.resaltarFK_IdCentroCostoConsignacion!=null) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdCentroCostoConsignacion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdCentroCostoConsignacion);
			}
		}

		if(this.consignacionConstantesFunciones.resaltarFK_IdClienteConsignacion!=null) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdClienteConsignacion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdClienteConsignacion);
			}
		}

		if(this.consignacionConstantesFunciones.resaltarFK_IdConsignatarioConsignacion!=null) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdConsignatarioConsignacion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdConsignatarioConsignacion);
			}
		}

		if(this.consignacionConstantesFunciones.resaltarFK_IdEmpleadoConsignacion!=null) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdEmpleadoConsignacion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdEmpleadoConsignacion);
			}
		}

		if(this.consignacionConstantesFunciones.resaltarFK_IdEstadoPedidoConsignacion!=null) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdEstadoPedidoConsignacion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdEstadoPedidoConsignacion);
			}
		}

		if(this.consignacionConstantesFunciones.resaltarFK_IdFormatoConsignacion!=null) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdFormatoConsignacion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdFormatoConsignacion);
			}
		}

		if(this.consignacionConstantesFunciones.resaltarFK_IdResponsableConsignacion!=null) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdResponsableConsignacion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdResponsableConsignacion);
			}
		}

		if(this.consignacionConstantesFunciones.resaltarFK_IdSubClienteConsignacion!=null) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdSubClienteConsignacion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdSubClienteConsignacion);
			}
		}

		if(this.consignacionConstantesFunciones.resaltarFK_IdTipoCambioConsignacion!=null) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdTipoCambioConsignacion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdTipoCambioConsignacion);
			}
		}

		if(this.consignacionConstantesFunciones.resaltarFK_IdTipoPrecioConsignacion!=null) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdTipoPrecioConsignacion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdTipoPrecioConsignacion);
			}
		}

		if(this.consignacionConstantesFunciones.resaltarFK_IdTransporteConsignacion!=null) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdTransporteConsignacion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdTransporteConsignacion);
			}
		}

		if(this.consignacionConstantesFunciones.resaltarFK_IdTransportistaConsignacion!=null) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdTransportistaConsignacion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdTransportistaConsignacion);
			}
		}

		if(this.consignacionConstantesFunciones.resaltarFK_IdVendedorConsignacion!=null) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdVendedorConsignacion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdVendedorConsignacion);
			}
		}

		if(this.consignacionConstantesFunciones.resaltarFK_IdZonaConsignacion!=null) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdZonaConsignacion);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdZonaConsignacion);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioConsignacion() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasConsignacion.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdCentroCostoConsignacion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.consignacionConstantesFunciones.mostrarFK_IdCentroCostoConsignacion);
			if(!this.consignacionConstantesFunciones.mostrarFK_IdCentroCostoConsignacion && index>-1) {
				this.jTabbedPaneBusquedasConsignacion.remove(index);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdClienteConsignacion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.consignacionConstantesFunciones.mostrarFK_IdClienteConsignacion);
			if(!this.consignacionConstantesFunciones.mostrarFK_IdClienteConsignacion && index>-1) {
				this.jTabbedPaneBusquedasConsignacion.remove(index);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdConsignatarioConsignacion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.consignacionConstantesFunciones.mostrarFK_IdConsignatarioConsignacion);
			if(!this.consignacionConstantesFunciones.mostrarFK_IdConsignatarioConsignacion && index>-1) {
				this.jTabbedPaneBusquedasConsignacion.remove(index);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdEmpleadoConsignacion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.consignacionConstantesFunciones.mostrarFK_IdEmpleadoConsignacion);
			if(!this.consignacionConstantesFunciones.mostrarFK_IdEmpleadoConsignacion && index>-1) {
				this.jTabbedPaneBusquedasConsignacion.remove(index);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdEstadoPedidoConsignacion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.consignacionConstantesFunciones.mostrarFK_IdEstadoPedidoConsignacion);
			if(!this.consignacionConstantesFunciones.mostrarFK_IdEstadoPedidoConsignacion && index>-1) {
				this.jTabbedPaneBusquedasConsignacion.remove(index);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdFormatoConsignacion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.consignacionConstantesFunciones.mostrarFK_IdFormatoConsignacion);
			if(!this.consignacionConstantesFunciones.mostrarFK_IdFormatoConsignacion && index>-1) {
				this.jTabbedPaneBusquedasConsignacion.remove(index);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdResponsableConsignacion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.consignacionConstantesFunciones.mostrarFK_IdResponsableConsignacion);
			if(!this.consignacionConstantesFunciones.mostrarFK_IdResponsableConsignacion && index>-1) {
				this.jTabbedPaneBusquedasConsignacion.remove(index);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdSubClienteConsignacion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.consignacionConstantesFunciones.mostrarFK_IdSubClienteConsignacion);
			if(!this.consignacionConstantesFunciones.mostrarFK_IdSubClienteConsignacion && index>-1) {
				this.jTabbedPaneBusquedasConsignacion.remove(index);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdTipoCambioConsignacion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.consignacionConstantesFunciones.mostrarFK_IdTipoCambioConsignacion);
			if(!this.consignacionConstantesFunciones.mostrarFK_IdTipoCambioConsignacion && index>-1) {
				this.jTabbedPaneBusquedasConsignacion.remove(index);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdTipoPrecioConsignacion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.consignacionConstantesFunciones.mostrarFK_IdTipoPrecioConsignacion);
			if(!this.consignacionConstantesFunciones.mostrarFK_IdTipoPrecioConsignacion && index>-1) {
				this.jTabbedPaneBusquedasConsignacion.remove(index);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdTransporteConsignacion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.consignacionConstantesFunciones.mostrarFK_IdTransporteConsignacion);
			if(!this.consignacionConstantesFunciones.mostrarFK_IdTransporteConsignacion && index>-1) {
				this.jTabbedPaneBusquedasConsignacion.remove(index);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdTransportistaConsignacion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.consignacionConstantesFunciones.mostrarFK_IdTransportistaConsignacion);
			if(!this.consignacionConstantesFunciones.mostrarFK_IdTransportistaConsignacion && index>-1) {
				this.jTabbedPaneBusquedasConsignacion.remove(index);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdVendedorConsignacion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.consignacionConstantesFunciones.mostrarFK_IdVendedorConsignacion);
			if(!this.consignacionConstantesFunciones.mostrarFK_IdVendedorConsignacion && index>-1) {
				this.jTabbedPaneBusquedasConsignacion.remove(index);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdZonaConsignacion);
			jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.consignacionConstantesFunciones.mostrarFK_IdZonaConsignacion);
			if(!this.consignacionConstantesFunciones.mostrarFK_IdZonaConsignacion && index>-1) {
				this.jTabbedPaneBusquedasConsignacion.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioConsignacion() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasConsignacion.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdCentroCostoConsignacion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.consignacionConstantesFunciones.activarFK_IdCentroCostoConsignacion);
				this.jTabbedPaneBusquedasConsignacion.setEnabledAt(index,this.consignacionConstantesFunciones.activarFK_IdCentroCostoConsignacion);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdClienteConsignacion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.consignacionConstantesFunciones.activarFK_IdClienteConsignacion);
				this.jTabbedPaneBusquedasConsignacion.setEnabledAt(index,this.consignacionConstantesFunciones.activarFK_IdClienteConsignacion);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdConsignatarioConsignacion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.consignacionConstantesFunciones.activarFK_IdConsignatarioConsignacion);
				this.jTabbedPaneBusquedasConsignacion.setEnabledAt(index,this.consignacionConstantesFunciones.activarFK_IdConsignatarioConsignacion);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdEmpleadoConsignacion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.consignacionConstantesFunciones.activarFK_IdEmpleadoConsignacion);
				this.jTabbedPaneBusquedasConsignacion.setEnabledAt(index,this.consignacionConstantesFunciones.activarFK_IdEmpleadoConsignacion);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdEstadoPedidoConsignacion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.consignacionConstantesFunciones.activarFK_IdEstadoPedidoConsignacion);
				this.jTabbedPaneBusquedasConsignacion.setEnabledAt(index,this.consignacionConstantesFunciones.activarFK_IdEstadoPedidoConsignacion);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdFormatoConsignacion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.consignacionConstantesFunciones.activarFK_IdFormatoConsignacion);
				this.jTabbedPaneBusquedasConsignacion.setEnabledAt(index,this.consignacionConstantesFunciones.activarFK_IdFormatoConsignacion);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdResponsableConsignacion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.consignacionConstantesFunciones.activarFK_IdResponsableConsignacion);
				this.jTabbedPaneBusquedasConsignacion.setEnabledAt(index,this.consignacionConstantesFunciones.activarFK_IdResponsableConsignacion);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdSubClienteConsignacion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.consignacionConstantesFunciones.activarFK_IdSubClienteConsignacion);
				this.jTabbedPaneBusquedasConsignacion.setEnabledAt(index,this.consignacionConstantesFunciones.activarFK_IdSubClienteConsignacion);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdTipoCambioConsignacion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.consignacionConstantesFunciones.activarFK_IdTipoCambioConsignacion);
				this.jTabbedPaneBusquedasConsignacion.setEnabledAt(index,this.consignacionConstantesFunciones.activarFK_IdTipoCambioConsignacion);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdTipoPrecioConsignacion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.consignacionConstantesFunciones.activarFK_IdTipoPrecioConsignacion);
				this.jTabbedPaneBusquedasConsignacion.setEnabledAt(index,this.consignacionConstantesFunciones.activarFK_IdTipoPrecioConsignacion);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdTransporteConsignacion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.consignacionConstantesFunciones.activarFK_IdTransporteConsignacion);
				this.jTabbedPaneBusquedasConsignacion.setEnabledAt(index,this.consignacionConstantesFunciones.activarFK_IdTransporteConsignacion);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdTransportistaConsignacion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.consignacionConstantesFunciones.activarFK_IdTransportistaConsignacion);
				this.jTabbedPaneBusquedasConsignacion.setEnabledAt(index,this.consignacionConstantesFunciones.activarFK_IdTransportistaConsignacion);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdVendedorConsignacion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.consignacionConstantesFunciones.activarFK_IdVendedorConsignacion);
				this.jTabbedPaneBusquedasConsignacion.setEnabledAt(index,this.consignacionConstantesFunciones.activarFK_IdVendedorConsignacion);
			}

			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdZonaConsignacion);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.consignacionConstantesFunciones.activarFK_IdZonaConsignacion);
				this.jTabbedPaneBusquedasConsignacion.setEnabledAt(index,this.consignacionConstantesFunciones.activarFK_IdZonaConsignacion);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaConsignacion(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdCentroCosto")) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdCentroCostoConsignacion);

			this.jTabbedPaneBusquedasConsignacion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);

			this.consignacionConstantesFunciones.setResaltarFK_IdCentroCostoConsignacion(resaltar);

			jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdCentroCostoConsignacion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCliente")) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdClienteConsignacion);

			this.jTabbedPaneBusquedasConsignacion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);

			this.consignacionConstantesFunciones.setResaltarFK_IdClienteConsignacion(resaltar);

			jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdClienteConsignacion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdConsignatario")) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdConsignatarioConsignacion);

			this.jTabbedPaneBusquedasConsignacion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);

			this.consignacionConstantesFunciones.setResaltarFK_IdConsignatarioConsignacion(resaltar);

			jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdConsignatarioConsignacion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmpleado")) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdEmpleadoConsignacion);

			this.jTabbedPaneBusquedasConsignacion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);

			this.consignacionConstantesFunciones.setResaltarFK_IdEmpleadoConsignacion(resaltar);

			jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdEmpleadoConsignacion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoPedido")) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdEstadoPedidoConsignacion);

			this.jTabbedPaneBusquedasConsignacion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);

			this.consignacionConstantesFunciones.setResaltarFK_IdEstadoPedidoConsignacion(resaltar);

			jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdEstadoPedidoConsignacion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdFormato")) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdFormatoConsignacion);

			this.jTabbedPaneBusquedasConsignacion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);

			this.consignacionConstantesFunciones.setResaltarFK_IdFormatoConsignacion(resaltar);

			jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdFormatoConsignacion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdResponsable")) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdResponsableConsignacion);

			this.jTabbedPaneBusquedasConsignacion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);

			this.consignacionConstantesFunciones.setResaltarFK_IdResponsableConsignacion(resaltar);

			jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdResponsableConsignacion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdSubCliente")) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdSubClienteConsignacion);

			this.jTabbedPaneBusquedasConsignacion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);

			this.consignacionConstantesFunciones.setResaltarFK_IdSubClienteConsignacion(resaltar);

			jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdSubClienteConsignacion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoCambio")) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdTipoCambioConsignacion);

			this.jTabbedPaneBusquedasConsignacion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);

			this.consignacionConstantesFunciones.setResaltarFK_IdTipoCambioConsignacion(resaltar);

			jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdTipoCambioConsignacion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoPrecio")) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdTipoPrecioConsignacion);

			this.jTabbedPaneBusquedasConsignacion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);

			this.consignacionConstantesFunciones.setResaltarFK_IdTipoPrecioConsignacion(resaltar);

			jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdTipoPrecioConsignacion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransporte")) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdTransporteConsignacion);

			this.jTabbedPaneBusquedasConsignacion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);

			this.consignacionConstantesFunciones.setResaltarFK_IdTransporteConsignacion(resaltar);

			jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdTransporteConsignacion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransportista")) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdTransportistaConsignacion);

			this.jTabbedPaneBusquedasConsignacion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);

			this.consignacionConstantesFunciones.setResaltarFK_IdTransportistaConsignacion(resaltar);

			jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdTransportistaConsignacion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdVendedor")) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdVendedorConsignacion);

			this.jTabbedPaneBusquedasConsignacion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);

			this.consignacionConstantesFunciones.setResaltarFK_IdVendedorConsignacion(resaltar);

			jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdVendedorConsignacion);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdZona")) {
			index= this.jTabbedPaneBusquedasConsignacion.indexOfComponent(this.jPanelFK_IdZonaConsignacion);

			this.jTabbedPaneBusquedasConsignacion.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasConsignacion.getComponent(index);

			this.consignacionConstantesFunciones.setResaltarFK_IdZonaConsignacion(resaltar);

			jPanel.setBorder(this.consignacionConstantesFunciones.resaltarFK_IdZonaConsignacion);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarConsignacion.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioConsignacion() throws Exception {

		if(this.jInternalFrameDetalleFormConsignacion==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioConsignacion();
		this.updateVisibilidadResaltarControlesFormularioConsignacion();
		this.updateHabilitarResaltarControlesFormularioConsignacion();
		
	}
	
	public void updateBorderResaltarControlesFormularioConsignacion() throws Exception {
		if(this.jInternalFrameDetalleFormConsignacion==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.consignacionConstantesFunciones.resaltaridConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jLabelidConsignacion.setBorder(this.consignacionConstantesFunciones.resaltaridConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_empresaConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empresaConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_empresaConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_sucursalConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sucursalConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_sucursalConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_ejercicioConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_ejercicioConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_ejercicioConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_periodoConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_periodoConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_periodoConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_anioConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_anioConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_anioConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_mesConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_mesConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_mesConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_usuarioConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_usuarioConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_usuarioConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarnumeroConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextFieldnumeroConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarnumeroConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarnumero_autorizacionConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextFieldnumero_autorizacionConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarnumero_autorizacionConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarfecha_emisionConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jDateChooserfecha_emisionConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarfecha_emisionConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarfecha_vencimientoConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jDateChooserfecha_vencimientoConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarfecha_vencimientoConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_monedaConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_monedaConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_monedaConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarcotizacionConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextFieldcotizacionConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarcotizacionConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_empleadoConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empleadoConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_empleadoConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_tipo_precioConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_precioConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_tipo_precioConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_formatoConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_formatoConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_formatoConsignacion);}
		if(this.consignacionConstantesFunciones.resaltardireccionConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextAreadireccionConsignacion.setBorder(this.consignacionConstantesFunciones.resaltardireccionConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_clienteConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_clienteConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_clienteConsignacion);}
		if(this.consignacionConstantesFunciones.resaltartelefonoConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextFieldtelefonoConsignacion.setBorder(this.consignacionConstantesFunciones.resaltartelefonoConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarrucConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextFieldrucConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarrucConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_sub_clienteConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sub_clienteConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_sub_clienteConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_consignatarioConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_consignatarioConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_consignatarioConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_vendedorConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_vendedorConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_vendedorConsignacion);}
		if(this.consignacionConstantesFunciones.resaltardescripcionConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextAreadescripcionConsignacion.setBorder(this.consignacionConstantesFunciones.resaltardescripcionConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_estado_pedidoConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_estado_pedidoConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_estado_pedidoConsignacion);}
		if(this.consignacionConstantesFunciones.resaltardescuento_porcentajeConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextFielddescuento_porcentajeConsignacion.setBorder(this.consignacionConstantesFunciones.resaltardescuento_porcentajeConsignacion);}
		if(this.consignacionConstantesFunciones.resaltartotal_con_ivaConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_con_ivaConsignacion.setBorder(this.consignacionConstantesFunciones.resaltartotal_con_ivaConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarsumanConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextFieldsumanConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarsumanConsignacion);}
		if(this.consignacionConstantesFunciones.resaltardescuento_valorConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextFielddescuento_valorConsignacion.setBorder(this.consignacionConstantesFunciones.resaltardescuento_valorConsignacion);}
		if(this.consignacionConstantesFunciones.resaltartotal_sin_ivaConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_sin_ivaConsignacion.setBorder(this.consignacionConstantesFunciones.resaltartotal_sin_ivaConsignacion);}
		if(this.consignacionConstantesFunciones.resaltartotal_descuentoConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_descuentoConsignacion.setBorder(this.consignacionConstantesFunciones.resaltartotal_descuentoConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarfleteConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextFieldfleteConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarfleteConsignacion);}
		if(this.consignacionConstantesFunciones.resaltartotalConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextFieldtotalConsignacion.setBorder(this.consignacionConstantesFunciones.resaltartotalConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarsubtotalConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextFieldsubtotalConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarsubtotalConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarotroConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextFieldotroConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarotroConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarfinanciamientoConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextFieldfinanciamientoConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarfinanciamientoConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarivaConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextFieldivaConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarivaConsignacion);}
		if(this.consignacionConstantesFunciones.resaltariceConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextFieldiceConsignacion.setBorder(this.consignacionConstantesFunciones.resaltariceConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarmonto_retencionConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextFieldmonto_retencionConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarmonto_retencionConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_tipo_cambioConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_cambioConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_tipo_cambioConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarnumero_fueConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jTextFieldnumero_fueConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarnumero_fueConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_zonaConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_zonaConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_zonaConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarfechaConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jDateChooserfechaConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarfechaConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_centro_costoConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_centro_costoConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_centro_costoConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarfecha_servidorConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jDateChooserfecha_servidorConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarfecha_servidorConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_responsableConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_responsableConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_responsableConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarhora_inicioConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jSpinnerhora_inicioConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarhora_inicioConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarhora_finConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jSpinnerhora_finConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarhora_finConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_transportistaConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transportistaConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_transportistaConsignacion);}
		if(this.consignacionConstantesFunciones.resaltarid_transporteConsignacion!=null && this.jInternalFrameDetalleFormConsignacion!=null) {this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transporteConsignacion.setBorder(this.consignacionConstantesFunciones.resaltarid_transporteConsignacion);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioConsignacion() throws Exception {		
		if(this.jInternalFrameDetalleFormConsignacion==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) {
	
		//this.jInternalFrameDetalleFormConsignacion.jLabelidConsignacion.setVisible(this.consignacionConstantesFunciones.mostraridConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelidConsignacion.setVisible(this.consignacionConstantesFunciones.mostraridConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empresaConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_empresaConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_empresaConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_empresaConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sucursalConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_sucursalConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_sucursalConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_sucursalConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_ejercicioConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_ejercicioConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_ejercicioConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_ejercicioConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_periodoConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_periodoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_periodoConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_periodoConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_anioConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_anioConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_anioConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_anioConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_mesConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_mesConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_mesConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_mesConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_usuarioConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_usuarioConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_usuarioConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_usuarioConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextFieldnumeroConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarnumeroConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelnumeroConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarnumeroConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextFieldnumero_autorizacionConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarnumero_autorizacionConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelnumero_autorizacionConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarnumero_autorizacionConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jDateChooserfecha_emisionConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarfecha_emisionConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelfecha_emisionConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarfecha_emisionConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jDateChooserfecha_vencimientoConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarfecha_vencimientoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelfecha_vencimientoConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarfecha_vencimientoConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_monedaConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_monedaConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_monedaConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_monedaConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextFieldcotizacionConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarcotizacionConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelcotizacionConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarcotizacionConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empleadoConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_empleadoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_empleadoConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_empleadoConsignacion);
			this.jInternalFrameDetalleFormConsignacion.jButtonid_empleadoConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_empleadoConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_precioConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_tipo_precioConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_tipo_precioConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_tipo_precioConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_formatoConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_formatoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_formatoConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_formatoConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextAreadireccionConsignacion.setVisible(this.consignacionConstantesFunciones.mostrardireccionConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPaneldireccionConsignacion.setVisible(this.consignacionConstantesFunciones.mostrardireccionConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_clienteConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_clienteConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_clienteConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_clienteConsignacion);
			this.jInternalFrameDetalleFormConsignacion.jButtonid_clienteConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_clienteConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextFieldtelefonoConsignacion.setVisible(this.consignacionConstantesFunciones.mostrartelefonoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPaneltelefonoConsignacion.setVisible(this.consignacionConstantesFunciones.mostrartelefonoConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextFieldrucConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarrucConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelrucConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarrucConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sub_clienteConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_sub_clienteConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_sub_clienteConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_sub_clienteConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_consignatarioConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_consignatarioConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_consignatarioConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_consignatarioConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_vendedorConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_vendedorConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_vendedorConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_vendedorConsignacion);
			this.jInternalFrameDetalleFormConsignacion.jButtonid_vendedorConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_vendedorConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextAreadescripcionConsignacion.setVisible(this.consignacionConstantesFunciones.mostrardescripcionConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPaneldescripcionConsignacion.setVisible(this.consignacionConstantesFunciones.mostrardescripcionConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_estado_pedidoConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_estado_pedidoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_estado_pedidoConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_estado_pedidoConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextFielddescuento_porcentajeConsignacion.setVisible(this.consignacionConstantesFunciones.mostrardescuento_porcentajeConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPaneldescuento_porcentajeConsignacion.setVisible(this.consignacionConstantesFunciones.mostrardescuento_porcentajeConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_con_ivaConsignacion.setVisible(this.consignacionConstantesFunciones.mostrartotal_con_ivaConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPaneltotal_con_ivaConsignacion.setVisible(this.consignacionConstantesFunciones.mostrartotal_con_ivaConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextFieldsumanConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarsumanConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelsumanConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarsumanConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextFielddescuento_valorConsignacion.setVisible(this.consignacionConstantesFunciones.mostrardescuento_valorConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPaneldescuento_valorConsignacion.setVisible(this.consignacionConstantesFunciones.mostrardescuento_valorConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_sin_ivaConsignacion.setVisible(this.consignacionConstantesFunciones.mostrartotal_sin_ivaConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPaneltotal_sin_ivaConsignacion.setVisible(this.consignacionConstantesFunciones.mostrartotal_sin_ivaConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_descuentoConsignacion.setVisible(this.consignacionConstantesFunciones.mostrartotal_descuentoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPaneltotal_descuentoConsignacion.setVisible(this.consignacionConstantesFunciones.mostrartotal_descuentoConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextFieldfleteConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarfleteConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelfleteConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarfleteConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextFieldtotalConsignacion.setVisible(this.consignacionConstantesFunciones.mostrartotalConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPaneltotalConsignacion.setVisible(this.consignacionConstantesFunciones.mostrartotalConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextFieldsubtotalConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarsubtotalConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelsubtotalConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarsubtotalConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextFieldotroConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarotroConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelotroConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarotroConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextFieldfinanciamientoConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarfinanciamientoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelfinanciamientoConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarfinanciamientoConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextFieldivaConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarivaConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelivaConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarivaConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextFieldiceConsignacion.setVisible(this.consignacionConstantesFunciones.mostrariceConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPaneliceConsignacion.setVisible(this.consignacionConstantesFunciones.mostrariceConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextFieldmonto_retencionConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarmonto_retencionConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelmonto_retencionConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarmonto_retencionConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_cambioConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_tipo_cambioConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_tipo_cambioConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_tipo_cambioConsignacion);
			this.jInternalFrameDetalleFormConsignacion.jButtonid_tipo_cambioConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_tipo_cambioConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jTextFieldnumero_fueConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarnumero_fueConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelnumero_fueConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarnumero_fueConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_zonaConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_zonaConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_zonaConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_zonaConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jDateChooserfechaConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarfechaConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelfechaConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarfechaConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_centro_costoConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_centro_costoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_centro_costoConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_centro_costoConsignacion);
			this.jInternalFrameDetalleFormConsignacion.jButtonid_centro_costoConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_centro_costoConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jDateChooserfecha_servidorConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarfecha_servidorConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelfecha_servidorConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarfecha_servidorConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_responsableConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_responsableConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_responsableConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_responsableConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jSpinnerhora_inicioConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarhora_inicioConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelhora_inicioConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarhora_inicioConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jSpinnerhora_finConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarhora_finConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelhora_finConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarhora_finConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transportistaConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_transportistaConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_transportistaConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_transportistaConsignacion);
		//this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transporteConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_transporteConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jPanelid_transporteConsignacion.setVisible(this.consignacionConstantesFunciones.mostrarid_transporteConsignacion);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioConsignacion() throws Exception {
		if(this.jInternalFrameDetalleFormConsignacion==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormConsignacion!=null) {
	
		this.jInternalFrameDetalleFormConsignacion.jLabelidConsignacion.setEnabled(this.consignacionConstantesFunciones.activaridConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empresaConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_empresaConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sucursalConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_sucursalConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_ejercicioConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_ejercicioConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_periodoConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_periodoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_anioConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_anioConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_mesConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_mesConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_usuarioConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_usuarioConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldnumeroConsignacion.setEnabled(this.consignacionConstantesFunciones.activarnumeroConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldnumero_autorizacionConsignacion.setEnabled(this.consignacionConstantesFunciones.activarnumero_autorizacionConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jDateChooserfecha_emisionConsignacion.setEnabled(this.consignacionConstantesFunciones.activarfecha_emisionConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jDateChooserfecha_vencimientoConsignacion.setEnabled(this.consignacionConstantesFunciones.activarfecha_vencimientoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_monedaConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_monedaConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldcotizacionConsignacion.setEnabled(this.consignacionConstantesFunciones.activarcotizacionConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_empleadoConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_empleadoConsignacion);
			this.jInternalFrameDetalleFormConsignacion.jButtonid_empleadoConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_empleadoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_precioConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_tipo_precioConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_formatoConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_formatoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextAreadireccionConsignacion.setEnabled(this.consignacionConstantesFunciones.activardireccionConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_clienteConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_clienteConsignacion);
			this.jInternalFrameDetalleFormConsignacion.jButtonid_clienteConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_clienteConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldtelefonoConsignacion.setEnabled(this.consignacionConstantesFunciones.activartelefonoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldrucConsignacion.setEnabled(this.consignacionConstantesFunciones.activarrucConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_sub_clienteConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_sub_clienteConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_consignatarioConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_consignatarioConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_vendedorConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_vendedorConsignacion);
			this.jInternalFrameDetalleFormConsignacion.jButtonid_vendedorConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_vendedorConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextAreadescripcionConsignacion.setEnabled(this.consignacionConstantesFunciones.activardescripcionConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_estado_pedidoConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_estado_pedidoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFielddescuento_porcentajeConsignacion.setEnabled(this.consignacionConstantesFunciones.activardescuento_porcentajeConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_con_ivaConsignacion.setEnabled(this.consignacionConstantesFunciones.activartotal_con_ivaConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldsumanConsignacion.setEnabled(this.consignacionConstantesFunciones.activarsumanConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFielddescuento_valorConsignacion.setEnabled(this.consignacionConstantesFunciones.activardescuento_valorConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_sin_ivaConsignacion.setEnabled(this.consignacionConstantesFunciones.activartotal_sin_ivaConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldtotal_descuentoConsignacion.setEnabled(this.consignacionConstantesFunciones.activartotal_descuentoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldfleteConsignacion.setEnabled(this.consignacionConstantesFunciones.activarfleteConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldtotalConsignacion.setEnabled(this.consignacionConstantesFunciones.activartotalConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldsubtotalConsignacion.setEnabled(this.consignacionConstantesFunciones.activarsubtotalConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldotroConsignacion.setEnabled(this.consignacionConstantesFunciones.activarotroConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldfinanciamientoConsignacion.setEnabled(this.consignacionConstantesFunciones.activarfinanciamientoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldivaConsignacion.setEnabled(this.consignacionConstantesFunciones.activarivaConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldiceConsignacion.setEnabled(this.consignacionConstantesFunciones.activariceConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldmonto_retencionConsignacion.setEnabled(this.consignacionConstantesFunciones.activarmonto_retencionConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_tipo_cambioConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_tipo_cambioConsignacion);
			this.jInternalFrameDetalleFormConsignacion.jButtonid_tipo_cambioConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_tipo_cambioConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jTextFieldnumero_fueConsignacion.setEnabled(this.consignacionConstantesFunciones.activarnumero_fueConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_zonaConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_zonaConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jDateChooserfechaConsignacion.setEnabled(this.consignacionConstantesFunciones.activarfechaConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_centro_costoConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_centro_costoConsignacion);
			this.jInternalFrameDetalleFormConsignacion.jButtonid_centro_costoConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_centro_costoConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jDateChooserfecha_servidorConsignacion.setEnabled(this.consignacionConstantesFunciones.activarfecha_servidorConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_responsableConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_responsableConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jSpinnerhora_inicioConsignacion.setEnabled(this.consignacionConstantesFunciones.activarhora_inicioConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jSpinnerhora_finConsignacion.setEnabled(this.consignacionConstantesFunciones.activarhora_finConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transportistaConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_transportistaConsignacion);
		this.jInternalFrameDetalleFormConsignacion.jComboBoxid_transporteConsignacion.setEnabled(this.consignacionConstantesFunciones.activarid_transporteConsignacion);
		}
	}
	
		
}