/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.facturacion.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.facturacion.util.ParametroFactuPrincipalConstantesFunciones;
import com.bydan.erp.facturacion.util.ParametroFactuPrincipalParameterReturnGeneral;
//import com.bydan.erp.facturacion.util.ParametroFactuPrincipalParameterGeneral;
//import com.bydan.erp.facturacion.presentation.report.source.ParametroFactuPrincipalBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.facturacion.resources.reportes.AuxiliarReportes;


import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.facturacion.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.facturacion.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class ParametroFactuPrincipalBeanSwingJInternalFrame extends ParametroFactuPrincipalJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(ParametroFactuPrincipalBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<ParametroFactuPrincipal> parametrofactuprincipalValidator = new ClassValidator<ParametroFactuPrincipal>(ParametroFactuPrincipal.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public ParametroFactuPrincipal parametrofactuprincipal;	
	public ParametroFactuPrincipal parametrofactuprincipalAux;
	public ParametroFactuPrincipal parametrofactuprincipalAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public ParametroFactuPrincipal parametrofactuprincipalTotales;
	public Long idParametroFactuPrincipalActual;
	public Long iIdNuevoParametroFactuPrincipal=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboTipoParamFactuDescuento="";

	public List<TipoParamFactuDescuento> tipoparamfactudescuentosForeignKey;

	public List<TipoParamFactuDescuento> gettipoparamfactudescuentosForeignKey() {
		return tipoparamfactudescuentosForeignKey;
	}

	public void settipoparamfactudescuentosForeignKey(List<TipoParamFactuDescuento> tipoparamfactudescuentosForeignKey) {
		this.tipoparamfactudescuentosForeignKey = tipoparamfactudescuentosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoParamFactuDescuento tipoparamfactudescuentoForeignKey;

	public TipoParamFactuDescuento gettipoparamfactudescuentoForeignKey() {
		return tipoparamfactudescuentoForeignKey;
	}

	public void settipoparamfactudescuentoForeignKey(TipoParamFactuDescuento tipoparamfactudescuentoForeignKey) {
		this.tipoparamfactudescuentoForeignKey = tipoparamfactudescuentoForeignKey;
	}

	public String sFinalQueryComboTipoParamFactuListadoCliente="";

	public List<TipoParamFactuListadoCliente> tipoparamfactulistadoclientesForeignKey;

	public List<TipoParamFactuListadoCliente> gettipoparamfactulistadoclientesForeignKey() {
		return tipoparamfactulistadoclientesForeignKey;
	}

	public void settipoparamfactulistadoclientesForeignKey(List<TipoParamFactuListadoCliente> tipoparamfactulistadoclientesForeignKey) {
		this.tipoparamfactulistadoclientesForeignKey = tipoparamfactulistadoclientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoParamFactuListadoCliente tipoparamfactulistadoclienteForeignKey;

	public TipoParamFactuListadoCliente gettipoparamfactulistadoclienteForeignKey() {
		return tipoparamfactulistadoclienteForeignKey;
	}

	public void settipoparamfactulistadoclienteForeignKey(TipoParamFactuListadoCliente tipoparamfactulistadoclienteForeignKey) {
		this.tipoparamfactulistadoclienteForeignKey = tipoparamfactulistadoclienteForeignKey;
	}

	public String sFinalQueryComboTipoParamFactuSecuenciaTrabajo="";

	public List<TipoParamFactuSecuenciaTrabajo> tipoparamfactusecuenciatrabajosForeignKey;

	public List<TipoParamFactuSecuenciaTrabajo> gettipoparamfactusecuenciatrabajosForeignKey() {
		return tipoparamfactusecuenciatrabajosForeignKey;
	}

	public void settipoparamfactusecuenciatrabajosForeignKey(List<TipoParamFactuSecuenciaTrabajo> tipoparamfactusecuenciatrabajosForeignKey) {
		this.tipoparamfactusecuenciatrabajosForeignKey = tipoparamfactusecuenciatrabajosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoParamFactuSecuenciaTrabajo tipoparamfactusecuenciatrabajoForeignKey;

	public TipoParamFactuSecuenciaTrabajo gettipoparamfactusecuenciatrabajoForeignKey() {
		return tipoparamfactusecuenciatrabajoForeignKey;
	}

	public void settipoparamfactusecuenciatrabajoForeignKey(TipoParamFactuSecuenciaTrabajo tipoparamfactusecuenciatrabajoForeignKey) {
		this.tipoparamfactusecuenciatrabajoForeignKey = tipoparamfactusecuenciatrabajoForeignKey;
	}

	public String sFinalQueryComboTipoDocumentoFactura="";

	public List<TipoDocumento> tipodocumentofacturasForeignKey;

	public List<TipoDocumento> gettipodocumentofacturasForeignKey() {
		return tipodocumentofacturasForeignKey;
	}

	public void settipodocumentofacturasForeignKey(List<TipoDocumento> tipodocumentofacturasForeignKey) {
		this.tipodocumentofacturasForeignKey = tipodocumentofacturasForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoDocumento tipodocumentofacturaForeignKey;

	public TipoDocumento gettipodocumentofacturaForeignKey() {
		return tipodocumentofacturaForeignKey;
	}

	public void settipodocumentofacturaForeignKey(TipoDocumento tipodocumentofacturaForeignKey) {
		this.tipodocumentofacturaForeignKey = tipodocumentofacturaForeignKey;
	}

	public String sFinalQueryComboTipoDocumentoNotaCredito="";

	public List<TipoDocumento> tipodocumentonotacreditosForeignKey;

	public List<TipoDocumento> gettipodocumentonotacreditosForeignKey() {
		return tipodocumentonotacreditosForeignKey;
	}

	public void settipodocumentonotacreditosForeignKey(List<TipoDocumento> tipodocumentonotacreditosForeignKey) {
		this.tipodocumentonotacreditosForeignKey = tipodocumentonotacreditosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoDocumento tipodocumentonotacreditoForeignKey;

	public TipoDocumento gettipodocumentonotacreditoForeignKey() {
		return tipodocumentonotacreditoForeignKey;
	}

	public void settipodocumentonotacreditoForeignKey(TipoDocumento tipodocumentonotacreditoForeignKey) {
		this.tipodocumentonotacreditoForeignKey = tipodocumentonotacreditoForeignKey;
	}

	public String sFinalQueryComboTipoDocumentoNotaDebito="";

	public List<TipoDocumento> tipodocumentonotadebitosForeignKey;

	public List<TipoDocumento> gettipodocumentonotadebitosForeignKey() {
		return tipodocumentonotadebitosForeignKey;
	}

	public void settipodocumentonotadebitosForeignKey(List<TipoDocumento> tipodocumentonotadebitosForeignKey) {
		this.tipodocumentonotadebitosForeignKey = tipodocumentonotadebitosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoDocumento tipodocumentonotadebitoForeignKey;

	public TipoDocumento gettipodocumentonotadebitoForeignKey() {
		return tipodocumentonotadebitoForeignKey;
	}

	public void settipodocumentonotadebitoForeignKey(TipoDocumento tipodocumentonotadebitoForeignKey) {
		this.tipodocumentonotadebitoForeignKey = tipodocumentonotadebitoForeignKey;
	}

	public String sFinalQueryComboLibroContable="";

	public List<LibroContable> librocontablesForeignKey;

	public List<LibroContable> getlibrocontablesForeignKey() {
		return librocontablesForeignKey;
	}

	public void setlibrocontablesForeignKey(List<LibroContable> librocontablesForeignKey) {
		this.librocontablesForeignKey = librocontablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public LibroContable librocontableForeignKey;

	public LibroContable getlibrocontableForeignKey() {
		return librocontableForeignKey;
	}

	public void setlibrocontableForeignKey(LibroContable librocontableForeignKey) {
		this.librocontableForeignKey = librocontableForeignKey;
	}

	public String sFinalQueryComboMoneda="";

	public List<Moneda> monedasForeignKey;

	public List<Moneda> getmonedasForeignKey() {
		return monedasForeignKey;
	}

	public void setmonedasForeignKey(List<Moneda> monedasForeignKey) {
		this.monedasForeignKey = monedasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Moneda monedaForeignKey;

	public Moneda getmonedaForeignKey() {
		return monedaForeignKey;
	}

	public void setmonedaForeignKey(Moneda monedaForeignKey) {
		this.monedaForeignKey = monedaForeignKey;
	}

	public String sFinalQueryComboFormato="";

	public List<Formato> formatosForeignKey;

	public List<Formato> getformatosForeignKey() {
		return formatosForeignKey;
	}

	public void setformatosForeignKey(List<Formato> formatosForeignKey) {
		this.formatosForeignKey = formatosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Formato formatoForeignKey;

	public Formato getformatoForeignKey() {
		return formatoForeignKey;
	}

	public void setformatoForeignKey(Formato formatoForeignKey) {
		this.formatoForeignKey = formatoForeignKey;
	}

	public String sFinalQueryComboCuentaContableFleteVenta="";

	public List<CuentaContable> cuentacontablefleteventasForeignKey;

	public List<CuentaContable> getcuentacontablefleteventasForeignKey() {
		return cuentacontablefleteventasForeignKey;
	}

	public void setcuentacontablefleteventasForeignKey(List<CuentaContable> cuentacontablefleteventasForeignKey) {
		this.cuentacontablefleteventasForeignKey = cuentacontablefleteventasForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontablefleteventaForeignKey;

	public CuentaContable getcuentacontablefleteventaForeignKey() {
		return cuentacontablefleteventaForeignKey;
	}

	public void setcuentacontablefleteventaForeignKey(CuentaContable cuentacontablefleteventaForeignKey) {
		this.cuentacontablefleteventaForeignKey = cuentacontablefleteventaForeignKey;
	}

	public String sFinalQueryComboCuentaContableOtroCargo="";

	public List<CuentaContable> cuentacontableotrocargosForeignKey;

	public List<CuentaContable> getcuentacontableotrocargosForeignKey() {
		return cuentacontableotrocargosForeignKey;
	}

	public void setcuentacontableotrocargosForeignKey(List<CuentaContable> cuentacontableotrocargosForeignKey) {
		this.cuentacontableotrocargosForeignKey = cuentacontableotrocargosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableotrocargoForeignKey;

	public CuentaContable getcuentacontableotrocargoForeignKey() {
		return cuentacontableotrocargoForeignKey;
	}

	public void setcuentacontableotrocargoForeignKey(CuentaContable cuentacontableotrocargoForeignKey) {
		this.cuentacontableotrocargoForeignKey = cuentacontableotrocargoForeignKey;
	}

	public String sFinalQueryComboCuentaContableFinan="";

	public List<CuentaContable> cuentacontablefinansForeignKey;

	public List<CuentaContable> getcuentacontablefinansForeignKey() {
		return cuentacontablefinansForeignKey;
	}

	public void setcuentacontablefinansForeignKey(List<CuentaContable> cuentacontablefinansForeignKey) {
		this.cuentacontablefinansForeignKey = cuentacontablefinansForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontablefinanForeignKey;

	public CuentaContable getcuentacontablefinanForeignKey() {
		return cuentacontablefinanForeignKey;
	}

	public void setcuentacontablefinanForeignKey(CuentaContable cuentacontablefinanForeignKey) {
		this.cuentacontablefinanForeignKey = cuentacontablefinanForeignKey;
	}

	public String sFinalQueryComboCuentaContableBoni="";

	public List<CuentaContable> cuentacontablebonisForeignKey;

	public List<CuentaContable> getcuentacontablebonisForeignKey() {
		return cuentacontablebonisForeignKey;
	}

	public void setcuentacontablebonisForeignKey(List<CuentaContable> cuentacontablebonisForeignKey) {
		this.cuentacontablebonisForeignKey = cuentacontablebonisForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableboniForeignKey;

	public CuentaContable getcuentacontableboniForeignKey() {
		return cuentacontableboniForeignKey;
	}

	public void setcuentacontableboniForeignKey(CuentaContable cuentacontableboniForeignKey) {
		this.cuentacontableboniForeignKey = cuentacontableboniForeignKey;
	}

	public String sFinalQueryComboCuentaContableBoniDevol="";

	public List<CuentaContable> cuentacontablebonidevolsForeignKey;

	public List<CuentaContable> getcuentacontablebonidevolsForeignKey() {
		return cuentacontablebonidevolsForeignKey;
	}

	public void setcuentacontablebonidevolsForeignKey(List<CuentaContable> cuentacontablebonidevolsForeignKey) {
		this.cuentacontablebonidevolsForeignKey = cuentacontablebonidevolsForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontablebonidevolForeignKey;

	public CuentaContable getcuentacontablebonidevolForeignKey() {
		return cuentacontablebonidevolForeignKey;
	}

	public void setcuentacontablebonidevolForeignKey(CuentaContable cuentacontablebonidevolForeignKey) {
		this.cuentacontablebonidevolForeignKey = cuentacontablebonidevolForeignKey;
	}

	public String sFinalQueryComboCuentaContableIce="";

	public List<CuentaContable> cuentacontableicesForeignKey;

	public List<CuentaContable> getcuentacontableicesForeignKey() {
		return cuentacontableicesForeignKey;
	}

	public void setcuentacontableicesForeignKey(List<CuentaContable> cuentacontableicesForeignKey) {
		this.cuentacontableicesForeignKey = cuentacontableicesForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableiceForeignKey;

	public CuentaContable getcuentacontableiceForeignKey() {
		return cuentacontableiceForeignKey;
	}

	public void setcuentacontableiceForeignKey(CuentaContable cuentacontableiceForeignKey) {
		this.cuentacontableiceForeignKey = cuentacontableiceForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idCuentaContableFleteVentaActual=0L;

	public Long getidCuentaContableFleteVentaActual() {
		return idCuentaContableFleteVentaActual;
	}

	public void setidCuentaContableFleteVentaActual(Long idCuentaContableFleteVentaActual) {
		this.idCuentaContableFleteVentaActual= idCuentaContableFleteVentaActual;
	}
	public Long idCuentaContableOtroCargoActual=0L;

	public Long getidCuentaContableOtroCargoActual() {
		return idCuentaContableOtroCargoActual;
	}

	public void setidCuentaContableOtroCargoActual(Long idCuentaContableOtroCargoActual) {
		this.idCuentaContableOtroCargoActual= idCuentaContableOtroCargoActual;
	}
	public Long idCuentaContableFinanActual=0L;

	public Long getidCuentaContableFinanActual() {
		return idCuentaContableFinanActual;
	}

	public void setidCuentaContableFinanActual(Long idCuentaContableFinanActual) {
		this.idCuentaContableFinanActual= idCuentaContableFinanActual;
	}
	public Long idCuentaContableBoniActual=0L;

	public Long getidCuentaContableBoniActual() {
		return idCuentaContableBoniActual;
	}

	public void setidCuentaContableBoniActual(Long idCuentaContableBoniActual) {
		this.idCuentaContableBoniActual= idCuentaContableBoniActual;
	}
	public Long idCuentaContableBoniDevolActual=0L;

	public Long getidCuentaContableBoniDevolActual() {
		return idCuentaContableBoniDevolActual;
	}

	public void setidCuentaContableBoniDevolActual(Long idCuentaContableBoniDevolActual) {
		this.idCuentaContableBoniDevolActual= idCuentaContableBoniDevolActual;
	}
	public Long idCuentaContableIceActual=0L;

	public Long getidCuentaContableIceActual() {
		return idCuentaContableIceActual;
	}

	public void setidCuentaContableIceActual(Long idCuentaContableIceActual) {
		this.idCuentaContableIceActual= idCuentaContableIceActual;
	}
	
	
	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoParametroFactuPrincipal;
	public Boolean isPermisoNuevoParametroFactuPrincipal;
	public Boolean isPermisoActualizarParametroFactuPrincipal;
	public Boolean isPermisoActualizarOriginalParametroFactuPrincipal;
	public Boolean isPermisoEliminarParametroFactuPrincipal;
	public Boolean isPermisoGuardarCambiosParametroFactuPrincipal;
	public Boolean isPermisoConsultaParametroFactuPrincipal;
	public Boolean isPermisoBusquedaParametroFactuPrincipal;
	public Boolean isPermisoReporteParametroFactuPrincipal;
	public Boolean isPermisoPaginacionMedioParametroFactuPrincipal;
	public Boolean isPermisoPaginacionAltoParametroFactuPrincipal;
	public Boolean isPermisoPaginacionTodoParametroFactuPrincipal;
	public Boolean isPermisoCopiarParametroFactuPrincipal;
	public Boolean isPermisoVerFormParametroFactuPrincipal;
	public Boolean isPermisoDuplicarParametroFactuPrincipal;
	public Boolean isPermisoOrdenParametroFactuPrincipal;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public ParametroFactuPrincipalParameterReturnGeneral parametrofactuprincipalReturnGeneral;
	public ParametroFactuPrincipalParameterReturnGeneral parametrofactuprincipalParameterGeneral;
	
	 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoParametroFactuPrincipal=false;
	public Boolean esParaAccionDesdeFormularioParametroFactuPrincipal=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected ParametroFactuPrincipalSessionBeanAdditional parametrofactuprincipalSessionBeanAdditional=null;
	
	public ParametroFactuPrincipalSessionBeanAdditional getParametroFactuPrincipalSessionBeanAdditional() {
		return this.parametrofactuprincipalSessionBeanAdditional;
	}
	
	public void setParametroFactuPrincipalSessionBeanAdditional(ParametroFactuPrincipalSessionBeanAdditional parametrofactuprincipalSessionBeanAdditional) {
		try {
			this.parametrofactuprincipalSessionBeanAdditional=parametrofactuprincipalSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected ParametroFactuPrincipalBeanSwingJInternalFrameAdditional parametrofactuprincipalBeanSwingJInternalFrameAdditional=null;
	//public class ParametroFactuPrincipalBeanSwingJInternalFrame
	
	public ParametroFactuPrincipalBeanSwingJInternalFrameAdditional getParametroFactuPrincipalBeanSwingJInternalFrameAdditional() {
		return this.parametrofactuprincipalBeanSwingJInternalFrameAdditional;
	}
	
	public void setParametroFactuPrincipalBeanSwingJInternalFrameAdditional(ParametroFactuPrincipalBeanSwingJInternalFrameAdditional parametrofactuprincipalBeanSwingJInternalFrameAdditional) {
		try {
			this.parametrofactuprincipalBeanSwingJInternalFrameAdditional=parametrofactuprincipalBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public ParametroFactuPrincipalLogic parametrofactuprincipalLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public ParametroFactuPrincipal parametrofactuprincipalBean;
	public ParametroFactuPrincipalConstantesFunciones parametrofactuprincipalConstantesFunciones;
	//public ParametroFactuPrincipalParameterReturnGeneral parametrofactuprincipalReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public TipoParamFactuDescuentoLogic tipoparamfactudescuentoLogic;
	public TipoParamFactuListadoClienteLogic tipoparamfactulistadoclienteLogic;
	public TipoParamFactuSecuenciaTrabajoLogic tipoparamfactusecuenciatrabajoLogic;
	public TipoDocumentoLogic tipodocumentofacturaLogic;
	public TipoDocumentoLogic tipodocumentonotacreditoLogic;
	public TipoDocumentoLogic tipodocumentonotadebitoLogic;
	public LibroContableLogic librocontableLogic;
	public MonedaLogic monedaLogic;
	public FormatoLogic formatoLogic;
	public CuentaContableLogic cuentacontablefleteventaLogic;
	public CuentaContableLogic cuentacontableotrocargoLogic;
	public CuentaContableLogic cuentacontablefinanLogic;
	public CuentaContableLogic cuentacontableboniLogic;
	public CuentaContableLogic cuentacontablebonidevolLogic;
	public CuentaContableLogic cuentacontableiceLogic;
	
	//PARAMETROS
	
	
	//public List<ParametroFactuPrincipal> parametrofactuprincipals;	
	//public List<ParametroFactuPrincipal> parametrofactuprincipalsEliminados;
	//public List<ParametroFactuPrincipal> parametrofactuprincipalsAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoParametroFactuPrincipal=false;
	public Boolean isVisibilidadCeldaDuplicarParametroFactuPrincipal=true;
	public Boolean isVisibilidadCeldaCopiarParametroFactuPrincipal=true;
	public Boolean isVisibilidadCeldaVerFormParametroFactuPrincipal=true;
	public Boolean isVisibilidadCeldaOrdenParametroFactuPrincipal=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal=false;
	public Boolean isVisibilidadCeldaModificarParametroFactuPrincipal=false;
	public Boolean isVisibilidadCeldaActualizarParametroFactuPrincipal=false;
	public Boolean isVisibilidadCeldaEliminarParametroFactuPrincipal=false;
	public Boolean isVisibilidadCeldaCancelarParametroFactuPrincipal=false;
	public Boolean isVisibilidadCeldaGuardarParametroFactuPrincipal=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosParametroFactuPrincipal=false;	
	
	
	public Boolean isVisibilidadFK_IdCuentaContableBoni=false;
	public Boolean isVisibilidadFK_IdCuentaContableBoniDevol=false;
	public Boolean isVisibilidadFK_IdCuentaContableFinan=false;
	public Boolean isVisibilidadFK_IdCuentaContableFleteVenta=false;
	public Boolean isVisibilidadFK_IdCuentaContableIce=false;
	public Boolean isVisibilidadFK_IdCuentaContableOtroCargo=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdFormato=false;
	public Boolean isVisibilidadFK_IdLibroContable=false;
	public Boolean isVisibilidadFK_IdMoneda=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoDocumentoFactura=false;
	public Boolean isVisibilidadFK_IdTipoDocumentoNotaCredito=false;
	public Boolean isVisibilidadFK_IdTipoDocumentoNotaDebito=false;
	public Boolean isVisibilidadFK_IdTipoParamFactuDescuento=false;
	public Boolean isVisibilidadFK_IdTipoParamFactuListadoCliente=false;
	public Boolean isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo=false;
	
	public Long getiIdNuevoParametroFactuPrincipal() {
		return this.iIdNuevoParametroFactuPrincipal;
	}

	public void setiIdNuevoParametroFactuPrincipal(Long iIdNuevoParametroFactuPrincipal) {
		this.iIdNuevoParametroFactuPrincipal = iIdNuevoParametroFactuPrincipal;
	}
	
	public Long getidParametroFactuPrincipalActual() {
		return this.idParametroFactuPrincipalActual;
	}

	public void setidParametroFactuPrincipalActual(Long idParametroFactuPrincipalActual) {
		this.idParametroFactuPrincipalActual = idParametroFactuPrincipalActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public ParametroFactuPrincipal getparametrofactuprincipal() {
		return this.parametrofactuprincipal;
	}

	public void setparametrofactuprincipal(ParametroFactuPrincipal parametrofactuprincipal) {
		this.parametrofactuprincipal = parametrofactuprincipal;
	}
	
	public ParametroFactuPrincipal getparametrofactuprincipalAux() {
		return this.parametrofactuprincipalAux;
	}

	public void setparametrofactuprincipalAux(ParametroFactuPrincipal parametrofactuprincipalAux) {
		this.parametrofactuprincipalAux = parametrofactuprincipalAux;
	}				
	
	public ParametroFactuPrincipal getparametrofactuprincipalAnterior() {
		return this.parametrofactuprincipalAnterior;
	}

	public void setparametrofactuprincipalAnterior(ParametroFactuPrincipal parametrofactuprincipalAnterior) {
		this.parametrofactuprincipalAnterior = parametrofactuprincipalAnterior;
	}	
	
	public ParametroFactuPrincipal getparametrofactuprincipalTotales() {
		return this.parametrofactuprincipalTotales;
	}

	public void setparametrofactuprincipalTotales(ParametroFactuPrincipal parametrofactuprincipalTotales) {
		this.parametrofactuprincipalTotales = parametrofactuprincipalTotales;
	}	
	
	public ParametroFactuPrincipal getparametrofactuprincipalBean() {
		return this.parametrofactuprincipalBean;
	}

	public void setparametrofactuprincipalBean(ParametroFactuPrincipal parametrofactuprincipalBean) {
		this.parametrofactuprincipalBean = parametrofactuprincipalBean;
	}	
	
	public ParametroFactuPrincipalParameterReturnGeneral getparametrofactuprincipalReturnGeneral() {
		return this.parametrofactuprincipalReturnGeneral;
	}

	public void setparametrofactuprincipalReturnGeneral(ParametroFactuPrincipalParameterReturnGeneral parametrofactuprincipalReturnGeneral) {
		this.parametrofactuprincipalReturnGeneral = parametrofactuprincipalReturnGeneral;
	}	
	
	
	public Long id_cuenta_contable_boniFK_IdCuentaContableBoni=-1L;

	public Long getid_cuenta_contable_boniFK_IdCuentaContableBoni() {
		return this.id_cuenta_contable_boniFK_IdCuentaContableBoni;
	}

	public void setid_cuenta_contable_boniFK_IdCuentaContableBoni(Long id_cuenta_contable_boniFK_IdCuentaContableBoni) {
		this.id_cuenta_contable_boniFK_IdCuentaContableBoni = id_cuenta_contable_boniFK_IdCuentaContableBoni;
	}

	public Long id_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevol=-1L;

	public Long getid_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevol() {
		return this.id_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevol;
	}

	public void setid_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevol(Long id_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevol) {
		this.id_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevol = id_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevol;
	}

	public Long id_cuenta_contable_finanFK_IdCuentaContableFinan=-1L;

	public Long getid_cuenta_contable_finanFK_IdCuentaContableFinan() {
		return this.id_cuenta_contable_finanFK_IdCuentaContableFinan;
	}

	public void setid_cuenta_contable_finanFK_IdCuentaContableFinan(Long id_cuenta_contable_finanFK_IdCuentaContableFinan) {
		this.id_cuenta_contable_finanFK_IdCuentaContableFinan = id_cuenta_contable_finanFK_IdCuentaContableFinan;
	}

	public Long id_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVenta=-1L;

	public Long getid_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVenta() {
		return this.id_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVenta;
	}

	public void setid_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVenta(Long id_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVenta) {
		this.id_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVenta = id_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVenta;
	}

	public Long id_cuenta_contable_iceFK_IdCuentaContableIce=-1L;

	public Long getid_cuenta_contable_iceFK_IdCuentaContableIce() {
		return this.id_cuenta_contable_iceFK_IdCuentaContableIce;
	}

	public void setid_cuenta_contable_iceFK_IdCuentaContableIce(Long id_cuenta_contable_iceFK_IdCuentaContableIce) {
		this.id_cuenta_contable_iceFK_IdCuentaContableIce = id_cuenta_contable_iceFK_IdCuentaContableIce;
	}

	public Long id_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargo=-1L;

	public Long getid_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargo() {
		return this.id_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargo;
	}

	public void setid_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargo(Long id_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargo) {
		this.id_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargo = id_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargo;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_formatoFK_IdFormato=-1L;

	public Long getid_formatoFK_IdFormato() {
		return this.id_formatoFK_IdFormato;
	}

	public void setid_formatoFK_IdFormato(Long id_formatoFK_IdFormato) {
		this.id_formatoFK_IdFormato = id_formatoFK_IdFormato;
	}

	public Long id_libro_contableFK_IdLibroContable=-1L;

	public Long getid_libro_contableFK_IdLibroContable() {
		return this.id_libro_contableFK_IdLibroContable;
	}

	public void setid_libro_contableFK_IdLibroContable(Long id_libro_contableFK_IdLibroContable) {
		this.id_libro_contableFK_IdLibroContable = id_libro_contableFK_IdLibroContable;
	}

	public Long id_monedaFK_IdMoneda=-1L;

	public Long getid_monedaFK_IdMoneda() {
		return this.id_monedaFK_IdMoneda;
	}

	public void setid_monedaFK_IdMoneda(Long id_monedaFK_IdMoneda) {
		this.id_monedaFK_IdMoneda = id_monedaFK_IdMoneda;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_documento_facturaFK_IdTipoDocumentoFactura=-1L;

	public Long getid_tipo_documento_facturaFK_IdTipoDocumentoFactura() {
		return this.id_tipo_documento_facturaFK_IdTipoDocumentoFactura;
	}

	public void setid_tipo_documento_facturaFK_IdTipoDocumentoFactura(Long id_tipo_documento_facturaFK_IdTipoDocumentoFactura) {
		this.id_tipo_documento_facturaFK_IdTipoDocumentoFactura = id_tipo_documento_facturaFK_IdTipoDocumentoFactura;
	}

	public Long id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito=-1L;

	public Long getid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito() {
		return this.id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito;
	}

	public void setid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito(Long id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito) {
		this.id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito = id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito;
	}

	public Long id_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebito=-1L;

	public Long getid_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebito() {
		return this.id_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebito;
	}

	public void setid_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebito(Long id_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebito) {
		this.id_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebito = id_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebito;
	}

	public Long id_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuento=-1L;

	public Long getid_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuento() {
		return this.id_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuento;
	}

	public void setid_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuento(Long id_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuento) {
		this.id_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuento = id_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuento;
	}

	public Long id_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoCliente=-1L;

	public Long getid_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoCliente() {
		return this.id_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoCliente;
	}

	public void setid_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoCliente(Long id_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoCliente) {
		this.id_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoCliente = id_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoCliente;
	}

	public Long id_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajo=-1L;

	public Long getid_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajo() {
		return this.id_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajo;
	}

	public void setid_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajo(Long id_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajo) {
		this.id_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajo = id_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajo;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public ParametroFactuPrincipalLogic getParametroFactuPrincipalLogic()	{		
		return parametrofactuprincipalLogic;
	}

	public void setParametroFactuPrincipalLogic(ParametroFactuPrincipalLogic parametrofactuprincipalLogic) {
		this.parametrofactuprincipalLogic = parametrofactuprincipalLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoParametroFactuPrincipal() {
		return isEsNuevoParametroFactuPrincipal;
	}

	public void setIsEsNuevoParametroFactuPrincipal(Boolean isEsNuevoParametroFactuPrincipal) {
		this.isEsNuevoParametroFactuPrincipal = isEsNuevoParametroFactuPrincipal;
	}

	public Boolean getEsParaAccionDesdeFormularioParametroFactuPrincipal() {
		return esParaAccionDesdeFormularioParametroFactuPrincipal;
	}
	
	public void setEsParaAccionDesdeFormularioParametroFactuPrincipal(Boolean esParaAccionDesdeFormularioParametroFactuPrincipal) {
		this.esParaAccionDesdeFormularioParametroFactuPrincipal = esParaAccionDesdeFormularioParametroFactuPrincipal;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuprincipalSessionBean==null) {
				this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(parametrofactuprincipalSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuprincipalSessionBean==null) {
				this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(parametrofactuprincipalSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoParamFactuDescuentosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoparamfactudescuentosForeignKey=new ArrayList<TipoParamFactuDescuento>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoParamFactuDescuentoLogic tipoparamfactudescuentoLogic=new TipoParamFactuDescuentoLogic();

			//tipoparamfactudescuentoLogic.getTipoParamFactuDescuentoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuprincipalSessionBean==null) {
				this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionTipoParamFactuDescuento()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoparamfactudescuentoLogic.getTipoParamFactuDescuentoDataAccess().setIsForForeingKeyData(true);

					tipoparamfactudescuentoLogic.getTodosTipoParamFactuDescuentosWithConnection(sFinalQuery,new Pagination());

					this.tipoparamfactudescuentosForeignKey=tipoparamfactudescuentoLogic.getTipoParamFactuDescuentos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoParamFactuDescuento(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoparamfactudescuentoLogic.getEntityWithConnection(parametrofactuprincipalSessionBean.getlidTipoParamFactuDescuentoActual());
					this.tipoparamfactudescuentosForeignKey.add(tipoparamfactudescuentoLogic.getTipoParamFactuDescuento());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoParamFactuListadoClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoparamfactulistadoclientesForeignKey=new ArrayList<TipoParamFactuListadoCliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoParamFactuListadoClienteLogic tipoparamfactulistadoclienteLogic=new TipoParamFactuListadoClienteLogic();

			//tipoparamfactulistadoclienteLogic.getTipoParamFactuListadoClienteDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuprincipalSessionBean==null) {
				this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionTipoParamFactuListadoCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoparamfactulistadoclienteLogic.getTipoParamFactuListadoClienteDataAccess().setIsForForeingKeyData(true);

					tipoparamfactulistadoclienteLogic.getTodosTipoParamFactuListadoClientesWithConnection(sFinalQuery,new Pagination());

					this.tipoparamfactulistadoclientesForeignKey=tipoparamfactulistadoclienteLogic.getTipoParamFactuListadoClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoParamFactuListadoCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoparamfactulistadoclienteLogic.getEntityWithConnection(parametrofactuprincipalSessionBean.getlidTipoParamFactuListadoClienteActual());
					this.tipoparamfactulistadoclientesForeignKey.add(tipoparamfactulistadoclienteLogic.getTipoParamFactuListadoCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoParamFactuSecuenciaTrabajosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipoparamfactusecuenciatrabajosForeignKey=new ArrayList<TipoParamFactuSecuenciaTrabajo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoParamFactuSecuenciaTrabajoLogic tipoparamfactusecuenciatrabajoLogic=new TipoParamFactuSecuenciaTrabajoLogic();

			//tipoparamfactusecuenciatrabajoLogic.getTipoParamFactuSecuenciaTrabajoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuprincipalSessionBean==null) {
				this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionTipoParamFactuSecuenciaTrabajo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoparamfactusecuenciatrabajoLogic.getTipoParamFactuSecuenciaTrabajoDataAccess().setIsForForeingKeyData(true);

					tipoparamfactusecuenciatrabajoLogic.getTodosTipoParamFactuSecuenciaTrabajosWithConnection(sFinalQuery,new Pagination());

					this.tipoparamfactusecuenciatrabajosForeignKey=tipoparamfactusecuenciatrabajoLogic.getTipoParamFactuSecuenciaTrabajos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoParamFactuSecuenciaTrabajo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoparamfactusecuenciatrabajoLogic.getEntityWithConnection(parametrofactuprincipalSessionBean.getlidTipoParamFactuSecuenciaTrabajoActual());
					this.tipoparamfactusecuenciatrabajosForeignKey.add(tipoparamfactusecuenciatrabajoLogic.getTipoParamFactuSecuenciaTrabajo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoDocumentoFacturasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipodocumentofacturasForeignKey=new ArrayList<TipoDocumento>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoDocumentoLogic tipodocumentoLogic=new TipoDocumentoLogic();

			//tipodocumentoLogic.getTipoDocumentoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuprincipalSessionBean==null) {
				this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoFactura()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipodocumentofacturaLogic.getTipoDocumentoDataAccess().setIsForForeingKeyData(true);

					tipodocumentoLogic.getTodosTipoDocumentosWithConnection(sFinalQuery,new Pagination());

					this.tipodocumentofacturasForeignKey=tipodocumentoLogic.getTipoDocumentos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoDocumentoFactura(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipodocumentoLogic.getEntityWithConnection(parametrofactuprincipalSessionBean.getlidTipoDocumentoFacturaActual());
					this.tipodocumentofacturasForeignKey.add(tipodocumentoLogic.getTipoDocumento());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoDocumentoNotaCreditosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipodocumentonotacreditosForeignKey=new ArrayList<TipoDocumento>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoDocumentoLogic tipodocumentoLogic=new TipoDocumentoLogic();

			//tipodocumentoLogic.getTipoDocumentoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuprincipalSessionBean==null) {
				this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoNotaCredito()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipodocumentonotacreditoLogic.getTipoDocumentoDataAccess().setIsForForeingKeyData(true);

					tipodocumentoLogic.getTodosTipoDocumentosWithConnection(sFinalQuery,new Pagination());

					this.tipodocumentonotacreditosForeignKey=tipodocumentoLogic.getTipoDocumentos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoDocumentoNotaCredito(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipodocumentoLogic.getEntityWithConnection(parametrofactuprincipalSessionBean.getlidTipoDocumentoNotaCreditoActual());
					this.tipodocumentonotacreditosForeignKey.add(tipodocumentoLogic.getTipoDocumento());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoDocumentoNotaDebitosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipodocumentonotadebitosForeignKey=new ArrayList<TipoDocumento>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoDocumentoLogic tipodocumentoLogic=new TipoDocumentoLogic();

			//tipodocumentoLogic.getTipoDocumentoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuprincipalSessionBean==null) {
				this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoNotaDebito()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipodocumentonotadebitoLogic.getTipoDocumentoDataAccess().setIsForForeingKeyData(true);

					tipodocumentoLogic.getTodosTipoDocumentosWithConnection(sFinalQuery,new Pagination());

					this.tipodocumentonotadebitosForeignKey=tipodocumentoLogic.getTipoDocumentos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoDocumentoNotaDebito(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipodocumentoLogic.getEntityWithConnection(parametrofactuprincipalSessionBean.getlidTipoDocumentoNotaDebitoActual());
					this.tipodocumentonotadebitosForeignKey.add(tipodocumentoLogic.getTipoDocumento());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosLibroContablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.librocontablesForeignKey=new ArrayList<LibroContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			LibroContableLogic librocontableLogic=new LibroContableLogic();

			//librocontableLogic.getLibroContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuprincipalSessionBean==null) {
				this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionLibroContable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//librocontableLogic.getLibroContableDataAccess().setIsForForeingKeyData(true);

					librocontableLogic.getTodosLibroContablesWithConnection(sFinalQuery,new Pagination());

					this.librocontablesForeignKey=librocontableLogic.getLibroContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaLibroContable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					librocontableLogic.getEntityWithConnection(parametrofactuprincipalSessionBean.getlidLibroContableActual());
					this.librocontablesForeignKey.add(librocontableLogic.getLibroContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMonedasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.monedasForeignKey=new ArrayList<Moneda>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MonedaLogic monedaLogic=new MonedaLogic();

			//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuprincipalSessionBean==null) {
				this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

					monedaLogic.getTodosMonedasWithConnection(sFinalQuery,new Pagination());

					this.monedasForeignKey=monedaLogic.getMonedas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMoneda(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					monedaLogic.getEntityWithConnection(parametrofactuprincipalSessionBean.getlidMonedaActual());
					this.monedasForeignKey.add(monedaLogic.getMoneda());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFormatosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.formatosForeignKey=new ArrayList<Formato>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			FormatoLogic formatoLogic=new FormatoLogic();

			//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuprincipalSessionBean==null) {
				this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

					formatoLogic.getTodosFormatosWithConnection(sFinalQuery,new Pagination());

					this.formatosForeignKey=formatoLogic.getFormatos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFormato(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					formatoLogic.getEntityWithConnection(parametrofactuprincipalSessionBean.getlidFormatoActual());
					this.formatosForeignKey.add(formatoLogic.getFormato());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableFleteVentasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablefleteventasForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuprincipalSessionBean==null) {
				this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableFleteVenta()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontablefleteventaLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablefleteventasForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableFleteVenta(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(parametrofactuprincipalSessionBean.getlidCuentaContableFleteVentaActual());
					this.cuentacontablefleteventasForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableOtroCargosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableotrocargosForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContable cuentacontableotrocargoNulo = new CuentaContable();

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuprincipalSessionBean==null) {
				this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableOtroCargo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableotrocargoLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableotrocargosForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.cuentacontableotrocargosForeignKey.add(0, cuentacontableotrocargoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableOtroCargo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(parametrofactuprincipalSessionBean.getlidCuentaContableOtroCargoActual());
					this.cuentacontableotrocargosForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableFinansForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablefinansForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuprincipalSessionBean==null) {
				this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableFinan()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontablefinanLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablefinansForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableFinan(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(parametrofactuprincipalSessionBean.getlidCuentaContableFinanActual());
					this.cuentacontablefinansForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableBonisForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablebonisForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuprincipalSessionBean==null) {
				this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableBoni()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableboniLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablebonisForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableBoni(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(parametrofactuprincipalSessionBean.getlidCuentaContableBoniActual());
					this.cuentacontablebonisForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableBoniDevolsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablebonidevolsForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuprincipalSessionBean==null) {
				this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableBoniDevol()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontablebonidevolLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablebonidevolsForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableBoniDevol(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(parametrofactuprincipalSessionBean.getlidCuentaContableBoniDevolActual());
					this.cuentacontablebonidevolsForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContableIcesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontableicesForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.parametrofactuprincipalSessionBean==null) {
				this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIce()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableiceLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontableicesForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContableIce(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(parametrofactuprincipalSessionBean.getlidCuentaContableIceActual());
					this.cuentacontableicesForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.parametrofactuprincipal!=null) {
						this.parametrofactuprincipal.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_empresaParametroFactuPrincipal.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaParametroFactuPrincipal.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_empresaParametroFactuPrincipal.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_empresaParametroFactuPrincipal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaParametroFactuPrincipalGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaParametroFactuPrincipalGenerico!=null && jComboBoxid_empresaParametroFactuPrincipalGenerico.getItemCount()>0) {
					jComboBoxid_empresaParametroFactuPrincipalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.parametrofactuprincipal!=null) {
						this.parametrofactuprincipal.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_sucursalParametroFactuPrincipal.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalParametroFactuPrincipal.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_sucursalParametroFactuPrincipal.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_sucursalParametroFactuPrincipal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalParametroFactuPrincipalGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalParametroFactuPrincipalGenerico!=null && jComboBoxid_sucursalParametroFactuPrincipalGenerico.getItemCount()>0) {
					jComboBoxid_sucursalParametroFactuPrincipalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoParamFactuDescuentoForeignKey(Long idTipoParamFactuDescuentoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoParamFactuDescuento  tipoparamfactudescuentoTemp=null;

			for(TipoParamFactuDescuento tipoparamfactudescuentoAux:tipoparamfactudescuentosForeignKey) {
				if(tipoparamfactudescuentoAux.getId()!=null && tipoparamfactudescuentoAux.getId().equals(idTipoParamFactuDescuentoSeleccionado)) {
					tipoparamfactudescuentoTemp=tipoparamfactudescuentoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoparamfactudescuentoTemp!=null) {

					if(this.parametrofactuprincipal!=null) {
						this.parametrofactuprincipal.setTipoParamFactuDescuento(tipoparamfactudescuentoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipal.setSelectedItem(tipoparamfactudescuentoTemp);
					}
				} else {
					//jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipal.setSelectedItem(tipoparamfactudescuentoTemp);
					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipal.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoParamFactuDescuento") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoparamfactudescuentoTemp!=null && jComboBoxid_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuentoParametroFactuPrincipal!=null) {
						jComboBoxid_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuentoParametroFactuPrincipal.setSelectedItem(tipoparamfactudescuentoTemp);
					} else {
						if(jComboBoxid_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuentoParametroFactuPrincipal!=null) {
							//jComboBoxid_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuentoParametroFactuPrincipal.setSelectedItem(tipoparamfactudescuentoTemp);
							if(jComboBoxid_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuentoParametroFactuPrincipal.getItemCount()>0) {
								jComboBoxid_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuentoParametroFactuPrincipal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoParamFactuDescuentoForeignKeyDescripcion(Long idTipoParamFactuDescuentoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoParamFactuDescuento  tipoparamfactudescuentoTemp=null;

			for(TipoParamFactuDescuento tipoparamfactudescuentoAux:tipoparamfactudescuentosForeignKey) {
				if(tipoparamfactudescuentoAux.getId()!=null && tipoparamfactudescuentoAux.getId().equals(idTipoParamFactuDescuentoSeleccionado)) {
					tipoparamfactudescuentoTemp=tipoparamfactudescuentoAux;
					break;
				}
			}


			sDescripcion=TipoParamFactuDescuentoConstantesFunciones.getTipoParamFactuDescuentoDescripcion(tipoparamfactudescuentoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoParamFactuDescuentoForeignKeyGenerico(Long idTipoParamFactuDescuentoSeleccionado,JComboBox jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			TipoParamFactuDescuento  tipoparamfactudescuentoTemp=null;

			for(TipoParamFactuDescuento tipoparamfactudescuentoAux:tipoparamfactudescuentosForeignKey) {
				if(tipoparamfactudescuentoAux.getId()!=null && tipoparamfactudescuentoAux.getId().equals(idTipoParamFactuDescuentoSeleccionado)) {
					tipoparamfactudescuentoTemp=tipoparamfactudescuentoAux;
					break;
				}
			}

			if(tipoparamfactudescuentoTemp!=null) {
				jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipalGenerico.setSelectedItem(tipoparamfactudescuentoTemp);
			} else {
				if(jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipalGenerico!=null && jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipalGenerico.getItemCount()>0) {
					jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoParamFactuListadoClienteForeignKey(Long idTipoParamFactuListadoClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoParamFactuListadoCliente  tipoparamfactulistadoclienteTemp=null;

			for(TipoParamFactuListadoCliente tipoparamfactulistadoclienteAux:tipoparamfactulistadoclientesForeignKey) {
				if(tipoparamfactulistadoclienteAux.getId()!=null && tipoparamfactulistadoclienteAux.getId().equals(idTipoParamFactuListadoClienteSeleccionado)) {
					tipoparamfactulistadoclienteTemp=tipoparamfactulistadoclienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoparamfactulistadoclienteTemp!=null) {

					if(this.parametrofactuprincipal!=null) {
						this.parametrofactuprincipal.setTipoParamFactuListadoCliente(tipoparamfactulistadoclienteTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipal.setSelectedItem(tipoparamfactulistadoclienteTemp);
					}
				} else {
					//jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipal.setSelectedItem(tipoparamfactulistadoclienteTemp);
					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipal.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoParamFactuListadoCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoparamfactulistadoclienteTemp!=null && jComboBoxid_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal!=null) {
						jComboBoxid_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal.setSelectedItem(tipoparamfactulistadoclienteTemp);
					} else {
						if(jComboBoxid_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal!=null) {
							//jComboBoxid_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal.setSelectedItem(tipoparamfactulistadoclienteTemp);
							if(jComboBoxid_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal.getItemCount()>0) {
								jComboBoxid_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoParamFactuListadoClienteForeignKeyDescripcion(Long idTipoParamFactuListadoClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoParamFactuListadoCliente  tipoparamfactulistadoclienteTemp=null;

			for(TipoParamFactuListadoCliente tipoparamfactulistadoclienteAux:tipoparamfactulistadoclientesForeignKey) {
				if(tipoparamfactulistadoclienteAux.getId()!=null && tipoparamfactulistadoclienteAux.getId().equals(idTipoParamFactuListadoClienteSeleccionado)) {
					tipoparamfactulistadoclienteTemp=tipoparamfactulistadoclienteAux;
					break;
				}
			}


			sDescripcion=TipoParamFactuListadoClienteConstantesFunciones.getTipoParamFactuListadoClienteDescripcion(tipoparamfactulistadoclienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoParamFactuListadoClienteForeignKeyGenerico(Long idTipoParamFactuListadoClienteSeleccionado,JComboBox jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			TipoParamFactuListadoCliente  tipoparamfactulistadoclienteTemp=null;

			for(TipoParamFactuListadoCliente tipoparamfactulistadoclienteAux:tipoparamfactulistadoclientesForeignKey) {
				if(tipoparamfactulistadoclienteAux.getId()!=null && tipoparamfactulistadoclienteAux.getId().equals(idTipoParamFactuListadoClienteSeleccionado)) {
					tipoparamfactulistadoclienteTemp=tipoparamfactulistadoclienteAux;
					break;
				}
			}

			if(tipoparamfactulistadoclienteTemp!=null) {
				jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipalGenerico.setSelectedItem(tipoparamfactulistadoclienteTemp);
			} else {
				if(jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipalGenerico!=null && jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipalGenerico.getItemCount()>0) {
					jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoParamFactuSecuenciaTrabajoForeignKey(Long idTipoParamFactuSecuenciaTrabajoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoParamFactuSecuenciaTrabajo  tipoparamfactusecuenciatrabajoTemp=null;

			for(TipoParamFactuSecuenciaTrabajo tipoparamfactusecuenciatrabajoAux:tipoparamfactusecuenciatrabajosForeignKey) {
				if(tipoparamfactusecuenciatrabajoAux.getId()!=null && tipoparamfactusecuenciatrabajoAux.getId().equals(idTipoParamFactuSecuenciaTrabajoSeleccionado)) {
					tipoparamfactusecuenciatrabajoTemp=tipoparamfactusecuenciatrabajoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoparamfactusecuenciatrabajoTemp!=null) {

					if(this.parametrofactuprincipal!=null) {
						this.parametrofactuprincipal.setTipoParamFactuSecuenciaTrabajo(tipoparamfactusecuenciatrabajoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal.setSelectedItem(tipoparamfactusecuenciatrabajoTemp);
					}
				} else {
					//jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal.setSelectedItem(tipoparamfactusecuenciatrabajoTemp);
					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoParamFactuSecuenciaTrabajo") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoparamfactusecuenciatrabajoTemp!=null && jComboBoxid_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal!=null) {
						jComboBoxid_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal.setSelectedItem(tipoparamfactusecuenciatrabajoTemp);
					} else {
						if(jComboBoxid_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal!=null) {
							//jComboBoxid_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal.setSelectedItem(tipoparamfactusecuenciatrabajoTemp);
							if(jComboBoxid_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal.getItemCount()>0) {
								jComboBoxid_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoParamFactuSecuenciaTrabajoForeignKeyDescripcion(Long idTipoParamFactuSecuenciaTrabajoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoParamFactuSecuenciaTrabajo  tipoparamfactusecuenciatrabajoTemp=null;

			for(TipoParamFactuSecuenciaTrabajo tipoparamfactusecuenciatrabajoAux:tipoparamfactusecuenciatrabajosForeignKey) {
				if(tipoparamfactusecuenciatrabajoAux.getId()!=null && tipoparamfactusecuenciatrabajoAux.getId().equals(idTipoParamFactuSecuenciaTrabajoSeleccionado)) {
					tipoparamfactusecuenciatrabajoTemp=tipoparamfactusecuenciatrabajoAux;
					break;
				}
			}


			sDescripcion=TipoParamFactuSecuenciaTrabajoConstantesFunciones.getTipoParamFactuSecuenciaTrabajoDescripcion(tipoparamfactusecuenciatrabajoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoParamFactuSecuenciaTrabajoForeignKeyGenerico(Long idTipoParamFactuSecuenciaTrabajoSeleccionado,JComboBox jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			TipoParamFactuSecuenciaTrabajo  tipoparamfactusecuenciatrabajoTemp=null;

			for(TipoParamFactuSecuenciaTrabajo tipoparamfactusecuenciatrabajoAux:tipoparamfactusecuenciatrabajosForeignKey) {
				if(tipoparamfactusecuenciatrabajoAux.getId()!=null && tipoparamfactusecuenciatrabajoAux.getId().equals(idTipoParamFactuSecuenciaTrabajoSeleccionado)) {
					tipoparamfactusecuenciatrabajoTemp=tipoparamfactusecuenciatrabajoAux;
					break;
				}
			}

			if(tipoparamfactusecuenciatrabajoTemp!=null) {
				jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalGenerico.setSelectedItem(tipoparamfactusecuenciatrabajoTemp);
			} else {
				if(jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalGenerico!=null && jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalGenerico.getItemCount()>0) {
					jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoDocumentoFacturaForeignKey(Long idTipoDocumentoFacturaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentofacturaTemp=null;

			for(TipoDocumento tipodocumentofacturaAux:tipodocumentofacturasForeignKey) {
				if(tipodocumentofacturaAux.getId()!=null && tipodocumentofacturaAux.getId().equals(idTipoDocumentoFacturaSeleccionado)) {
					tipodocumentofacturaTemp=tipodocumentofacturaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipodocumentofacturaTemp!=null) {

					if(this.parametrofactuprincipal!=null) {
						this.parametrofactuprincipal.setTipoDocumentoFactura(tipodocumentofacturaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_facturaParametroFactuPrincipal.setSelectedItem(tipodocumentofacturaTemp);
					}
				} else {
					//jComboBoxid_tipo_documento_facturaParametroFactuPrincipal.setSelectedItem(tipodocumentofacturaTemp);
					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_facturaParametroFactuPrincipal.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_facturaParametroFactuPrincipal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoDocumentoFactura") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipodocumentofacturaTemp!=null && jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaParametroFactuPrincipal!=null) {
						jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaParametroFactuPrincipal.setSelectedItem(tipodocumentofacturaTemp);
					} else {
						if(jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaParametroFactuPrincipal!=null) {
							//jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaParametroFactuPrincipal.setSelectedItem(tipodocumentofacturaTemp);
							if(jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaParametroFactuPrincipal.getItemCount()>0) {
								jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaParametroFactuPrincipal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoDocumentoFacturaForeignKeyDescripcion(Long idTipoDocumentoFacturaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoDocumento  tipodocumentofacturaTemp=null;

			for(TipoDocumento tipodocumentofacturaAux:tipodocumentofacturasForeignKey) {
				if(tipodocumentofacturaAux.getId()!=null && tipodocumentofacturaAux.getId().equals(idTipoDocumentoFacturaSeleccionado)) {
					tipodocumentofacturaTemp=tipodocumentofacturaAux;
					break;
				}
			}


			sDescripcion=TipoDocumentoConstantesFunciones.getTipoDocumentoDescripcion(tipodocumentofacturaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoDocumentoFacturaForeignKeyGenerico(Long idTipoDocumentoFacturaSeleccionado,JComboBox jComboBoxid_tipo_documento_facturaParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentofacturaTemp=null;

			for(TipoDocumento tipodocumentofacturaAux:tipodocumentofacturasForeignKey) {
				if(tipodocumentofacturaAux.getId()!=null && tipodocumentofacturaAux.getId().equals(idTipoDocumentoFacturaSeleccionado)) {
					tipodocumentofacturaTemp=tipodocumentofacturaAux;
					break;
				}
			}

			if(tipodocumentofacturaTemp!=null) {
				jComboBoxid_tipo_documento_facturaParametroFactuPrincipalGenerico.setSelectedItem(tipodocumentofacturaTemp);
			} else {
				if(jComboBoxid_tipo_documento_facturaParametroFactuPrincipalGenerico!=null && jComboBoxid_tipo_documento_facturaParametroFactuPrincipalGenerico.getItemCount()>0) {
					jComboBoxid_tipo_documento_facturaParametroFactuPrincipalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoDocumentoNotaCreditoForeignKey(Long idTipoDocumentoNotaCreditoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentonotacreditoTemp=null;

			for(TipoDocumento tipodocumentonotacreditoAux:tipodocumentonotacreditosForeignKey) {
				if(tipodocumentonotacreditoAux.getId()!=null && tipodocumentonotacreditoAux.getId().equals(idTipoDocumentoNotaCreditoSeleccionado)) {
					tipodocumentonotacreditoTemp=tipodocumentonotacreditoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipodocumentonotacreditoTemp!=null) {

					if(this.parametrofactuprincipal!=null) {
						this.parametrofactuprincipal.setTipoDocumentoNotaCredito(tipodocumentonotacreditoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipal.setSelectedItem(tipodocumentonotacreditoTemp);
					}
				} else {
					//jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipal.setSelectedItem(tipodocumentonotacreditoTemp);
					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipal.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoDocumentoNotaCredito") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipodocumentonotacreditoTemp!=null && jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal!=null) {
						jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal.setSelectedItem(tipodocumentonotacreditoTemp);
					} else {
						if(jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal!=null) {
							//jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal.setSelectedItem(tipodocumentonotacreditoTemp);
							if(jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal.getItemCount()>0) {
								jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoDocumentoNotaCreditoForeignKeyDescripcion(Long idTipoDocumentoNotaCreditoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoDocumento  tipodocumentonotacreditoTemp=null;

			for(TipoDocumento tipodocumentonotacreditoAux:tipodocumentonotacreditosForeignKey) {
				if(tipodocumentonotacreditoAux.getId()!=null && tipodocumentonotacreditoAux.getId().equals(idTipoDocumentoNotaCreditoSeleccionado)) {
					tipodocumentonotacreditoTemp=tipodocumentonotacreditoAux;
					break;
				}
			}


			sDescripcion=TipoDocumentoConstantesFunciones.getTipoDocumentoDescripcion(tipodocumentonotacreditoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoDocumentoNotaCreditoForeignKeyGenerico(Long idTipoDocumentoNotaCreditoSeleccionado,JComboBox jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentonotacreditoTemp=null;

			for(TipoDocumento tipodocumentonotacreditoAux:tipodocumentonotacreditosForeignKey) {
				if(tipodocumentonotacreditoAux.getId()!=null && tipodocumentonotacreditoAux.getId().equals(idTipoDocumentoNotaCreditoSeleccionado)) {
					tipodocumentonotacreditoTemp=tipodocumentonotacreditoAux;
					break;
				}
			}

			if(tipodocumentonotacreditoTemp!=null) {
				jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipalGenerico.setSelectedItem(tipodocumentonotacreditoTemp);
			} else {
				if(jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipalGenerico!=null && jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipalGenerico.getItemCount()>0) {
					jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoDocumentoNotaDebitoForeignKey(Long idTipoDocumentoNotaDebitoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentonotadebitoTemp=null;

			for(TipoDocumento tipodocumentonotadebitoAux:tipodocumentonotadebitosForeignKey) {
				if(tipodocumentonotadebitoAux.getId()!=null && tipodocumentonotadebitoAux.getId().equals(idTipoDocumentoNotaDebitoSeleccionado)) {
					tipodocumentonotadebitoTemp=tipodocumentonotadebitoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipodocumentonotadebitoTemp!=null) {

					if(this.parametrofactuprincipal!=null) {
						this.parametrofactuprincipal.setTipoDocumentoNotaDebito(tipodocumentonotadebitoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipal.setSelectedItem(tipodocumentonotadebitoTemp);
					}
				} else {
					//jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipal.setSelectedItem(tipodocumentonotadebitoTemp);
					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipal.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoDocumentoNotaDebito") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipodocumentonotadebitoTemp!=null && jComboBoxid_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal!=null) {
						jComboBoxid_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal.setSelectedItem(tipodocumentonotadebitoTemp);
					} else {
						if(jComboBoxid_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal!=null) {
							//jComboBoxid_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal.setSelectedItem(tipodocumentonotadebitoTemp);
							if(jComboBoxid_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal.getItemCount()>0) {
								jComboBoxid_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoDocumentoNotaDebitoForeignKeyDescripcion(Long idTipoDocumentoNotaDebitoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoDocumento  tipodocumentonotadebitoTemp=null;

			for(TipoDocumento tipodocumentonotadebitoAux:tipodocumentonotadebitosForeignKey) {
				if(tipodocumentonotadebitoAux.getId()!=null && tipodocumentonotadebitoAux.getId().equals(idTipoDocumentoNotaDebitoSeleccionado)) {
					tipodocumentonotadebitoTemp=tipodocumentonotadebitoAux;
					break;
				}
			}


			sDescripcion=TipoDocumentoConstantesFunciones.getTipoDocumentoDescripcion(tipodocumentonotadebitoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoDocumentoNotaDebitoForeignKeyGenerico(Long idTipoDocumentoNotaDebitoSeleccionado,JComboBox jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentonotadebitoTemp=null;

			for(TipoDocumento tipodocumentonotadebitoAux:tipodocumentonotadebitosForeignKey) {
				if(tipodocumentonotadebitoAux.getId()!=null && tipodocumentonotadebitoAux.getId().equals(idTipoDocumentoNotaDebitoSeleccionado)) {
					tipodocumentonotadebitoTemp=tipodocumentonotadebitoAux;
					break;
				}
			}

			if(tipodocumentonotadebitoTemp!=null) {
				jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipalGenerico.setSelectedItem(tipodocumentonotadebitoTemp);
			} else {
				if(jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipalGenerico!=null && jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipalGenerico.getItemCount()>0) {
					jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualLibroContableForeignKey(Long idLibroContableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			LibroContable  librocontableTemp=null;

			for(LibroContable librocontableAux:librocontablesForeignKey) {
				if(librocontableAux.getId()!=null && librocontableAux.getId().equals(idLibroContableSeleccionado)) {
					librocontableTemp=librocontableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(librocontableTemp!=null) {

					if(this.parametrofactuprincipal!=null) {
						this.parametrofactuprincipal.setLibroContable(librocontableTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_libro_contableParametroFactuPrincipal.setSelectedItem(librocontableTemp);
					}
				} else {
					//jComboBoxid_libro_contableParametroFactuPrincipal.setSelectedItem(librocontableTemp);
					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_libro_contableParametroFactuPrincipal.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_libro_contableParametroFactuPrincipal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdLibroContable") || sFormularioTipoBusqueda.equals("Todos")){
					if(librocontableTemp!=null && jComboBoxid_libro_contableFK_IdLibroContableParametroFactuPrincipal!=null) {
						jComboBoxid_libro_contableFK_IdLibroContableParametroFactuPrincipal.setSelectedItem(librocontableTemp);
					} else {
						if(jComboBoxid_libro_contableFK_IdLibroContableParametroFactuPrincipal!=null) {
							//jComboBoxid_libro_contableFK_IdLibroContableParametroFactuPrincipal.setSelectedItem(librocontableTemp);
							if(jComboBoxid_libro_contableFK_IdLibroContableParametroFactuPrincipal.getItemCount()>0) {
								jComboBoxid_libro_contableFK_IdLibroContableParametroFactuPrincipal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualLibroContableForeignKeyDescripcion(Long idLibroContableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			LibroContable  librocontableTemp=null;

			for(LibroContable librocontableAux:librocontablesForeignKey) {
				if(librocontableAux.getId()!=null && librocontableAux.getId().equals(idLibroContableSeleccionado)) {
					librocontableTemp=librocontableAux;
					break;
				}
			}


			sDescripcion=LibroContableConstantesFunciones.getLibroContableDescripcion(librocontableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualLibroContableForeignKeyGenerico(Long idLibroContableSeleccionado,JComboBox jComboBoxid_libro_contableParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			LibroContable  librocontableTemp=null;

			for(LibroContable librocontableAux:librocontablesForeignKey) {
				if(librocontableAux.getId()!=null && librocontableAux.getId().equals(idLibroContableSeleccionado)) {
					librocontableTemp=librocontableAux;
					break;
				}
			}

			if(librocontableTemp!=null) {
				jComboBoxid_libro_contableParametroFactuPrincipalGenerico.setSelectedItem(librocontableTemp);
			} else {
				if(jComboBoxid_libro_contableParametroFactuPrincipalGenerico!=null && jComboBoxid_libro_contableParametroFactuPrincipalGenerico.getItemCount()>0) {
					jComboBoxid_libro_contableParametroFactuPrincipalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMonedaForeignKey(Long idMonedaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(monedaTemp!=null) {

					if(this.parametrofactuprincipal!=null) {
						this.parametrofactuprincipal.setMoneda(monedaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_monedaParametroFactuPrincipal.setSelectedItem(monedaTemp);
					}
				} else {
					//jComboBoxid_monedaParametroFactuPrincipal.setSelectedItem(monedaTemp);
					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_monedaParametroFactuPrincipal.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_monedaParametroFactuPrincipal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMonedaForeignKeyDescripcion(Long idMonedaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}


			sDescripcion=MonedaConstantesFunciones.getMonedaDescripcion(monedaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMonedaForeignKeyGenerico(Long idMonedaSeleccionado,JComboBox jComboBoxid_monedaParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(monedaTemp!=null) {
				jComboBoxid_monedaParametroFactuPrincipalGenerico.setSelectedItem(monedaTemp);
			} else {
				if(jComboBoxid_monedaParametroFactuPrincipalGenerico!=null && jComboBoxid_monedaParametroFactuPrincipalGenerico.getItemCount()>0) {
					jComboBoxid_monedaParametroFactuPrincipalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFormatoForeignKey(Long idFormatoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(formatoTemp!=null) {

					if(this.parametrofactuprincipal!=null) {
						this.parametrofactuprincipal.setFormato(formatoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_formatoParametroFactuPrincipal.setSelectedItem(formatoTemp);
					}
				} else {
					//jComboBoxid_formatoParametroFactuPrincipal.setSelectedItem(formatoTemp);
					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_formatoParametroFactuPrincipal.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_formatoParametroFactuPrincipal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdFormato") || sFormularioTipoBusqueda.equals("Todos")){
					if(formatoTemp!=null && jComboBoxid_formatoFK_IdFormatoParametroFactuPrincipal!=null) {
						jComboBoxid_formatoFK_IdFormatoParametroFactuPrincipal.setSelectedItem(formatoTemp);
					} else {
						if(jComboBoxid_formatoFK_IdFormatoParametroFactuPrincipal!=null) {
							//jComboBoxid_formatoFK_IdFormatoParametroFactuPrincipal.setSelectedItem(formatoTemp);
							if(jComboBoxid_formatoFK_IdFormatoParametroFactuPrincipal.getItemCount()>0) {
								jComboBoxid_formatoFK_IdFormatoParametroFactuPrincipal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFormatoForeignKeyDescripcion(Long idFormatoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}


			sDescripcion=FormatoConstantesFunciones.getFormatoDescripcion(formatoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFormatoForeignKeyGenerico(Long idFormatoSeleccionado,JComboBox jComboBoxid_formatoParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(formatoTemp!=null) {
				jComboBoxid_formatoParametroFactuPrincipalGenerico.setSelectedItem(formatoTemp);
			} else {
				if(jComboBoxid_formatoParametroFactuPrincipalGenerico!=null && jComboBoxid_formatoParametroFactuPrincipalGenerico.getItemCount()>0) {
					jComboBoxid_formatoParametroFactuPrincipalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableFleteVentaForeignKey(Long idCuentaContableFleteVentaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablefleteventaTemp=null;

			for(CuentaContable cuentacontablefleteventaAux:cuentacontablefleteventasForeignKey) {
				if(cuentacontablefleteventaAux.getId()!=null && cuentacontablefleteventaAux.getId().equals(idCuentaContableFleteVentaSeleccionado)) {
					cuentacontablefleteventaTemp=cuentacontablefleteventaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontablefleteventaTemp!=null) {

					if(this.parametrofactuprincipal!=null) {
						this.parametrofactuprincipal.setCuentaContableFleteVenta(cuentacontablefleteventaTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipal.setSelectedItem(cuentacontablefleteventaTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipal.setSelectedItem(cuentacontablefleteventaTemp);
					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipal.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableFleteVenta") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontablefleteventaTemp!=null && jComboBoxid_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVentaParametroFactuPrincipal!=null) {
						jComboBoxid_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVentaParametroFactuPrincipal.setSelectedItem(cuentacontablefleteventaTemp);
					} else {
						if(jComboBoxid_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVentaParametroFactuPrincipal!=null) {
							//jComboBoxid_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVentaParametroFactuPrincipal.setSelectedItem(cuentacontablefleteventaTemp);
							if(jComboBoxid_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVentaParametroFactuPrincipal.getItemCount()>0) {
								jComboBoxid_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVentaParametroFactuPrincipal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableFleteVentaForeignKeyDescripcion(Long idCuentaContableFleteVentaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontablefleteventaTemp=null;

			for(CuentaContable cuentacontablefleteventaAux:cuentacontablefleteventasForeignKey) {
				if(cuentacontablefleteventaAux.getId()!=null && cuentacontablefleteventaAux.getId().equals(idCuentaContableFleteVentaSeleccionado)) {
					cuentacontablefleteventaTemp=cuentacontablefleteventaAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontablefleteventaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableFleteVentaForeignKeyGenerico(Long idCuentaContableFleteVentaSeleccionado,JComboBox jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablefleteventaTemp=null;

			for(CuentaContable cuentacontablefleteventaAux:cuentacontablefleteventasForeignKey) {
				if(cuentacontablefleteventaAux.getId()!=null && cuentacontablefleteventaAux.getId().equals(idCuentaContableFleteVentaSeleccionado)) {
					cuentacontablefleteventaTemp=cuentacontablefleteventaAux;
					break;
				}
			}

			if(cuentacontablefleteventaTemp!=null) {
				jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipalGenerico.setSelectedItem(cuentacontablefleteventaTemp);
			} else {
				if(jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipalGenerico!=null && jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipalGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableOtroCargoForeignKey(Long idCuentaContableOtroCargoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableotrocargoTemp=null;

			for(CuentaContable cuentacontableotrocargoAux:cuentacontableotrocargosForeignKey) {
				if(cuentacontableotrocargoAux.getId()!=null && cuentacontableotrocargoAux.getId().equals(idCuentaContableOtroCargoSeleccionado)) {
					cuentacontableotrocargoTemp=cuentacontableotrocargoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableotrocargoTemp!=null) {

					if(this.parametrofactuprincipal!=null) {
						this.parametrofactuprincipal.setCuentaContableOtroCargo(cuentacontableotrocargoTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipal.setSelectedItem(cuentacontableotrocargoTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipal.setSelectedItem(cuentacontableotrocargoTemp);
					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipal.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableOtroCargo") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableotrocargoTemp!=null && jComboBoxid_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargoParametroFactuPrincipal!=null) {
						jComboBoxid_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargoParametroFactuPrincipal.setSelectedItem(cuentacontableotrocargoTemp);
					} else {
						if(jComboBoxid_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargoParametroFactuPrincipal!=null) {
							//jComboBoxid_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargoParametroFactuPrincipal.setSelectedItem(cuentacontableotrocargoTemp);
							if(jComboBoxid_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargoParametroFactuPrincipal.getItemCount()>0) {
								jComboBoxid_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargoParametroFactuPrincipal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableOtroCargoForeignKeyDescripcion(Long idCuentaContableOtroCargoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableotrocargoTemp=null;

			for(CuentaContable cuentacontableotrocargoAux:cuentacontableotrocargosForeignKey) {
				if(cuentacontableotrocargoAux.getId()!=null && cuentacontableotrocargoAux.getId().equals(idCuentaContableOtroCargoSeleccionado)) {
					cuentacontableotrocargoTemp=cuentacontableotrocargoAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableotrocargoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableOtroCargoForeignKeyGenerico(Long idCuentaContableOtroCargoSeleccionado,JComboBox jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableotrocargoTemp=null;

			for(CuentaContable cuentacontableotrocargoAux:cuentacontableotrocargosForeignKey) {
				if(cuentacontableotrocargoAux.getId()!=null && cuentacontableotrocargoAux.getId().equals(idCuentaContableOtroCargoSeleccionado)) {
					cuentacontableotrocargoTemp=cuentacontableotrocargoAux;
					break;
				}
			}

			if(cuentacontableotrocargoTemp!=null) {
				jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipalGenerico.setSelectedItem(cuentacontableotrocargoTemp);
			} else {
				if(jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipalGenerico!=null && jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipalGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableFinanForeignKey(Long idCuentaContableFinanSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablefinanTemp=null;

			for(CuentaContable cuentacontablefinanAux:cuentacontablefinansForeignKey) {
				if(cuentacontablefinanAux.getId()!=null && cuentacontablefinanAux.getId().equals(idCuentaContableFinanSeleccionado)) {
					cuentacontablefinanTemp=cuentacontablefinanAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontablefinanTemp!=null) {

					if(this.parametrofactuprincipal!=null) {
						this.parametrofactuprincipal.setCuentaContableFinan(cuentacontablefinanTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_finanParametroFactuPrincipal.setSelectedItem(cuentacontablefinanTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_finanParametroFactuPrincipal.setSelectedItem(cuentacontablefinanTemp);
					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_finanParametroFactuPrincipal.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_finanParametroFactuPrincipal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableFinan") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontablefinanTemp!=null && jComboBoxid_cuenta_contable_finanFK_IdCuentaContableFinanParametroFactuPrincipal!=null) {
						jComboBoxid_cuenta_contable_finanFK_IdCuentaContableFinanParametroFactuPrincipal.setSelectedItem(cuentacontablefinanTemp);
					} else {
						if(jComboBoxid_cuenta_contable_finanFK_IdCuentaContableFinanParametroFactuPrincipal!=null) {
							//jComboBoxid_cuenta_contable_finanFK_IdCuentaContableFinanParametroFactuPrincipal.setSelectedItem(cuentacontablefinanTemp);
							if(jComboBoxid_cuenta_contable_finanFK_IdCuentaContableFinanParametroFactuPrincipal.getItemCount()>0) {
								jComboBoxid_cuenta_contable_finanFK_IdCuentaContableFinanParametroFactuPrincipal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableFinanForeignKeyDescripcion(Long idCuentaContableFinanSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontablefinanTemp=null;

			for(CuentaContable cuentacontablefinanAux:cuentacontablefinansForeignKey) {
				if(cuentacontablefinanAux.getId()!=null && cuentacontablefinanAux.getId().equals(idCuentaContableFinanSeleccionado)) {
					cuentacontablefinanTemp=cuentacontablefinanAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontablefinanTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableFinanForeignKeyGenerico(Long idCuentaContableFinanSeleccionado,JComboBox jComboBoxid_cuenta_contable_finanParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablefinanTemp=null;

			for(CuentaContable cuentacontablefinanAux:cuentacontablefinansForeignKey) {
				if(cuentacontablefinanAux.getId()!=null && cuentacontablefinanAux.getId().equals(idCuentaContableFinanSeleccionado)) {
					cuentacontablefinanTemp=cuentacontablefinanAux;
					break;
				}
			}

			if(cuentacontablefinanTemp!=null) {
				jComboBoxid_cuenta_contable_finanParametroFactuPrincipalGenerico.setSelectedItem(cuentacontablefinanTemp);
			} else {
				if(jComboBoxid_cuenta_contable_finanParametroFactuPrincipalGenerico!=null && jComboBoxid_cuenta_contable_finanParametroFactuPrincipalGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_finanParametroFactuPrincipalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableBoniForeignKey(Long idCuentaContableBoniSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableboniTemp=null;

			for(CuentaContable cuentacontableboniAux:cuentacontablebonisForeignKey) {
				if(cuentacontableboniAux.getId()!=null && cuentacontableboniAux.getId().equals(idCuentaContableBoniSeleccionado)) {
					cuentacontableboniTemp=cuentacontableboniAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableboniTemp!=null) {

					if(this.parametrofactuprincipal!=null) {
						this.parametrofactuprincipal.setCuentaContableBoni(cuentacontableboniTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boniParametroFactuPrincipal.setSelectedItem(cuentacontableboniTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_boniParametroFactuPrincipal.setSelectedItem(cuentacontableboniTemp);
					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boniParametroFactuPrincipal.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boniParametroFactuPrincipal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableBoni") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableboniTemp!=null && jComboBoxid_cuenta_contable_boniFK_IdCuentaContableBoniParametroFactuPrincipal!=null) {
						jComboBoxid_cuenta_contable_boniFK_IdCuentaContableBoniParametroFactuPrincipal.setSelectedItem(cuentacontableboniTemp);
					} else {
						if(jComboBoxid_cuenta_contable_boniFK_IdCuentaContableBoniParametroFactuPrincipal!=null) {
							//jComboBoxid_cuenta_contable_boniFK_IdCuentaContableBoniParametroFactuPrincipal.setSelectedItem(cuentacontableboniTemp);
							if(jComboBoxid_cuenta_contable_boniFK_IdCuentaContableBoniParametroFactuPrincipal.getItemCount()>0) {
								jComboBoxid_cuenta_contable_boniFK_IdCuentaContableBoniParametroFactuPrincipal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableBoniForeignKeyDescripcion(Long idCuentaContableBoniSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableboniTemp=null;

			for(CuentaContable cuentacontableboniAux:cuentacontablebonisForeignKey) {
				if(cuentacontableboniAux.getId()!=null && cuentacontableboniAux.getId().equals(idCuentaContableBoniSeleccionado)) {
					cuentacontableboniTemp=cuentacontableboniAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableboniTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableBoniForeignKeyGenerico(Long idCuentaContableBoniSeleccionado,JComboBox jComboBoxid_cuenta_contable_boniParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableboniTemp=null;

			for(CuentaContable cuentacontableboniAux:cuentacontablebonisForeignKey) {
				if(cuentacontableboniAux.getId()!=null && cuentacontableboniAux.getId().equals(idCuentaContableBoniSeleccionado)) {
					cuentacontableboniTemp=cuentacontableboniAux;
					break;
				}
			}

			if(cuentacontableboniTemp!=null) {
				jComboBoxid_cuenta_contable_boniParametroFactuPrincipalGenerico.setSelectedItem(cuentacontableboniTemp);
			} else {
				if(jComboBoxid_cuenta_contable_boniParametroFactuPrincipalGenerico!=null && jComboBoxid_cuenta_contable_boniParametroFactuPrincipalGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_boniParametroFactuPrincipalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableBoniDevolForeignKey(Long idCuentaContableBoniDevolSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablebonidevolTemp=null;

			for(CuentaContable cuentacontablebonidevolAux:cuentacontablebonidevolsForeignKey) {
				if(cuentacontablebonidevolAux.getId()!=null && cuentacontablebonidevolAux.getId().equals(idCuentaContableBoniDevolSeleccionado)) {
					cuentacontablebonidevolTemp=cuentacontablebonidevolAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontablebonidevolTemp!=null) {

					if(this.parametrofactuprincipal!=null) {
						this.parametrofactuprincipal.setCuentaContableBoniDevol(cuentacontablebonidevolTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipal.setSelectedItem(cuentacontablebonidevolTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipal.setSelectedItem(cuentacontablebonidevolTemp);
					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipal.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableBoniDevol") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontablebonidevolTemp!=null && jComboBoxid_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevolParametroFactuPrincipal!=null) {
						jComboBoxid_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevolParametroFactuPrincipal.setSelectedItem(cuentacontablebonidevolTemp);
					} else {
						if(jComboBoxid_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevolParametroFactuPrincipal!=null) {
							//jComboBoxid_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevolParametroFactuPrincipal.setSelectedItem(cuentacontablebonidevolTemp);
							if(jComboBoxid_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevolParametroFactuPrincipal.getItemCount()>0) {
								jComboBoxid_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevolParametroFactuPrincipal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableBoniDevolForeignKeyDescripcion(Long idCuentaContableBoniDevolSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontablebonidevolTemp=null;

			for(CuentaContable cuentacontablebonidevolAux:cuentacontablebonidevolsForeignKey) {
				if(cuentacontablebonidevolAux.getId()!=null && cuentacontablebonidevolAux.getId().equals(idCuentaContableBoniDevolSeleccionado)) {
					cuentacontablebonidevolTemp=cuentacontablebonidevolAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontablebonidevolTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableBoniDevolForeignKeyGenerico(Long idCuentaContableBoniDevolSeleccionado,JComboBox jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontablebonidevolTemp=null;

			for(CuentaContable cuentacontablebonidevolAux:cuentacontablebonidevolsForeignKey) {
				if(cuentacontablebonidevolAux.getId()!=null && cuentacontablebonidevolAux.getId().equals(idCuentaContableBoniDevolSeleccionado)) {
					cuentacontablebonidevolTemp=cuentacontablebonidevolAux;
					break;
				}
			}

			if(cuentacontablebonidevolTemp!=null) {
				jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipalGenerico.setSelectedItem(cuentacontablebonidevolTemp);
			} else {
				if(jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipalGenerico!=null && jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipalGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableIceForeignKey(Long idCuentaContableIceSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableiceTemp=null;

			for(CuentaContable cuentacontableiceAux:cuentacontableicesForeignKey) {
				if(cuentacontableiceAux.getId()!=null && cuentacontableiceAux.getId().equals(idCuentaContableIceSeleccionado)) {
					cuentacontableiceTemp=cuentacontableiceAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableiceTemp!=null) {

					if(this.parametrofactuprincipal!=null) {
						this.parametrofactuprincipal.setCuentaContableIce(cuentacontableiceTemp);
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_iceParametroFactuPrincipal.setSelectedItem(cuentacontableiceTemp);
					}
				} else {
					//jComboBoxid_cuenta_contable_iceParametroFactuPrincipal.setSelectedItem(cuentacontableiceTemp);
					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_iceParametroFactuPrincipal.getItemCount()>0) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_iceParametroFactuPrincipal.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableIce") || sFormularioTipoBusqueda.equals("Todos")){
					if(cuentacontableiceTemp!=null && jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceParametroFactuPrincipal!=null) {
						jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceParametroFactuPrincipal.setSelectedItem(cuentacontableiceTemp);
					} else {
						if(jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceParametroFactuPrincipal!=null) {
							//jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceParametroFactuPrincipal.setSelectedItem(cuentacontableiceTemp);
							if(jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceParametroFactuPrincipal.getItemCount()>0) {
								jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceParametroFactuPrincipal.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableIceForeignKeyDescripcion(Long idCuentaContableIceSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableiceTemp=null;

			for(CuentaContable cuentacontableiceAux:cuentacontableicesForeignKey) {
				if(cuentacontableiceAux.getId()!=null && cuentacontableiceAux.getId().equals(idCuentaContableIceSeleccionado)) {
					cuentacontableiceTemp=cuentacontableiceAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableiceTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableIceForeignKeyGenerico(Long idCuentaContableIceSeleccionado,JComboBox jComboBoxid_cuenta_contable_iceParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableiceTemp=null;

			for(CuentaContable cuentacontableiceAux:cuentacontableicesForeignKey) {
				if(cuentacontableiceAux.getId()!=null && cuentacontableiceAux.getId().equals(idCuentaContableIceSeleccionado)) {
					cuentacontableiceTemp=cuentacontableiceAux;
					break;
				}
			}

			if(cuentacontableiceTemp!=null) {
				jComboBoxid_cuenta_contable_iceParametroFactuPrincipalGenerico.setSelectedItem(cuentacontableiceTemp);
			} else {
				if(jComboBoxid_cuenta_contable_iceParametroFactuPrincipalGenerico!=null && jComboBoxid_cuenta_contable_iceParametroFactuPrincipalGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contable_iceParametroFactuPrincipalGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(ParametroFactuPrincipal parametrofactuprincipal,JComboBox jComboBoxid_empresaParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaParametroFactuPrincipalGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_empresaParametroFactuPrincipal.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaParametroFactuPrincipalGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				parametrofactuprincipal.setid_empresa(empresaAux.getId());
				parametrofactuprincipal.setempresa_descripcion(ParametroFactuPrincipalConstantesFunciones.getEmpresaDescripcion(empresaAux));
				parametrofactuprincipal.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(ParametroFactuPrincipal parametrofactuprincipal,JComboBox jComboBoxid_sucursalParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalParametroFactuPrincipalGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_sucursalParametroFactuPrincipal.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalParametroFactuPrincipalGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				parametrofactuprincipal.setid_sucursal(sucursalAux.getId());
				parametrofactuprincipal.setsucursal_descripcion(ParametroFactuPrincipalConstantesFunciones.getSucursalDescripcion(sucursalAux));
				parametrofactuprincipal.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoParamFactuDescuentoForeignKey(ParametroFactuPrincipal parametrofactuprincipal,JComboBox jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			TipoParamFactuDescuento  tipoparamfactudescuentoAux=new TipoParamFactuDescuento();

			if(jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipalGenerico==null) {
				tipoparamfactudescuentoAux=(TipoParamFactuDescuento)this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipal.getSelectedItem();
			} else {
				tipoparamfactudescuentoAux=(TipoParamFactuDescuento)jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipalGenerico.getSelectedItem();
			}

			if(tipoparamfactudescuentoAux!=null && tipoparamfactudescuentoAux.getId()!=null) {
				parametrofactuprincipal.setid_tipo_param_factu_descuento(tipoparamfactudescuentoAux.getId());
				parametrofactuprincipal.settipoparamfactudescuento_descripcion(ParametroFactuPrincipalConstantesFunciones.getTipoParamFactuDescuentoDescripcion(tipoparamfactudescuentoAux));
				parametrofactuprincipal.setTipoParamFactuDescuento(tipoparamfactudescuentoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoParamFactuListadoClienteForeignKey(ParametroFactuPrincipal parametrofactuprincipal,JComboBox jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			TipoParamFactuListadoCliente  tipoparamfactulistadoclienteAux=new TipoParamFactuListadoCliente();

			if(jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipalGenerico==null) {
				tipoparamfactulistadoclienteAux=(TipoParamFactuListadoCliente)this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipal.getSelectedItem();
			} else {
				tipoparamfactulistadoclienteAux=(TipoParamFactuListadoCliente)jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipalGenerico.getSelectedItem();
			}

			if(tipoparamfactulistadoclienteAux!=null && tipoparamfactulistadoclienteAux.getId()!=null) {
				parametrofactuprincipal.setid_tipo_param_factu_listado_cliente(tipoparamfactulistadoclienteAux.getId());
				parametrofactuprincipal.settipoparamfactulistadocliente_descripcion(ParametroFactuPrincipalConstantesFunciones.getTipoParamFactuListadoClienteDescripcion(tipoparamfactulistadoclienteAux));
				parametrofactuprincipal.setTipoParamFactuListadoCliente(tipoparamfactulistadoclienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoParamFactuSecuenciaTrabajoForeignKey(ParametroFactuPrincipal parametrofactuprincipal,JComboBox jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			TipoParamFactuSecuenciaTrabajo  tipoparamfactusecuenciatrabajoAux=new TipoParamFactuSecuenciaTrabajo();

			if(jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalGenerico==null) {
				tipoparamfactusecuenciatrabajoAux=(TipoParamFactuSecuenciaTrabajo)this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal.getSelectedItem();
			} else {
				tipoparamfactusecuenciatrabajoAux=(TipoParamFactuSecuenciaTrabajo)jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalGenerico.getSelectedItem();
			}

			if(tipoparamfactusecuenciatrabajoAux!=null && tipoparamfactusecuenciatrabajoAux.getId()!=null) {
				parametrofactuprincipal.setid_tipo_param_factu_secuencia_trabajo(tipoparamfactusecuenciatrabajoAux.getId());
				parametrofactuprincipal.settipoparamfactusecuenciatrabajo_descripcion(ParametroFactuPrincipalConstantesFunciones.getTipoParamFactuSecuenciaTrabajoDescripcion(tipoparamfactusecuenciatrabajoAux));
				parametrofactuprincipal.setTipoParamFactuSecuenciaTrabajo(tipoparamfactusecuenciatrabajoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoDocumentoFacturaForeignKey(ParametroFactuPrincipal parametrofactuprincipal,JComboBox jComboBoxid_tipo_documento_facturaParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentoAux=new TipoDocumento();

			if(jComboBoxid_tipo_documento_facturaParametroFactuPrincipalGenerico==null) {
				tipodocumentoAux=(TipoDocumento)this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_facturaParametroFactuPrincipal.getSelectedItem();
			} else {
				tipodocumentoAux=(TipoDocumento)jComboBoxid_tipo_documento_facturaParametroFactuPrincipalGenerico.getSelectedItem();
			}

			if(tipodocumentoAux!=null && tipodocumentoAux.getId()!=null) {
				parametrofactuprincipal.setid_tipo_documento_factura(tipodocumentoAux.getId());
				parametrofactuprincipal.settipodocumentofactura_descripcion(ParametroFactuPrincipalConstantesFunciones.getTipoDocumentoFacturaDescripcion(tipodocumentoAux));
				parametrofactuprincipal.setTipoDocumentoFactura(tipodocumentoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoDocumentoNotaCreditoForeignKey(ParametroFactuPrincipal parametrofactuprincipal,JComboBox jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentoAux=new TipoDocumento();

			if(jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipalGenerico==null) {
				tipodocumentoAux=(TipoDocumento)this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipal.getSelectedItem();
			} else {
				tipodocumentoAux=(TipoDocumento)jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipalGenerico.getSelectedItem();
			}

			if(tipodocumentoAux!=null && tipodocumentoAux.getId()!=null) {
				parametrofactuprincipal.setid_tipo_documento_nota_credito(tipodocumentoAux.getId());
				parametrofactuprincipal.settipodocumentonotacredito_descripcion(ParametroFactuPrincipalConstantesFunciones.getTipoDocumentoNotaCreditoDescripcion(tipodocumentoAux));
				parametrofactuprincipal.setTipoDocumentoNotaCredito(tipodocumentoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoDocumentoNotaDebitoForeignKey(ParametroFactuPrincipal parametrofactuprincipal,JComboBox jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentoAux=new TipoDocumento();

			if(jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipalGenerico==null) {
				tipodocumentoAux=(TipoDocumento)this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipal.getSelectedItem();
			} else {
				tipodocumentoAux=(TipoDocumento)jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipalGenerico.getSelectedItem();
			}

			if(tipodocumentoAux!=null && tipodocumentoAux.getId()!=null) {
				parametrofactuprincipal.setid_tipo_documento_nota_debito(tipodocumentoAux.getId());
				parametrofactuprincipal.settipodocumentonotadebito_descripcion(ParametroFactuPrincipalConstantesFunciones.getTipoDocumentoNotaDebitoDescripcion(tipodocumentoAux));
				parametrofactuprincipal.setTipoDocumentoNotaDebito(tipodocumentoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarLibroContableForeignKey(ParametroFactuPrincipal parametrofactuprincipal,JComboBox jComboBoxid_libro_contableParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			LibroContable  librocontableAux=new LibroContable();

			if(jComboBoxid_libro_contableParametroFactuPrincipalGenerico==null) {
				librocontableAux=(LibroContable)this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_libro_contableParametroFactuPrincipal.getSelectedItem();
			} else {
				librocontableAux=(LibroContable)jComboBoxid_libro_contableParametroFactuPrincipalGenerico.getSelectedItem();
			}

			if(librocontableAux!=null && librocontableAux.getId()!=null) {
				parametrofactuprincipal.setid_libro_contable(librocontableAux.getId());
				parametrofactuprincipal.setlibrocontable_descripcion(ParametroFactuPrincipalConstantesFunciones.getLibroContableDescripcion(librocontableAux));
				parametrofactuprincipal.setLibroContable(librocontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMonedaForeignKey(ParametroFactuPrincipal parametrofactuprincipal,JComboBox jComboBoxid_monedaParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			Moneda  monedaAux=new Moneda();

			if(jComboBoxid_monedaParametroFactuPrincipalGenerico==null) {
				monedaAux=(Moneda)this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_monedaParametroFactuPrincipal.getSelectedItem();
			} else {
				monedaAux=(Moneda)jComboBoxid_monedaParametroFactuPrincipalGenerico.getSelectedItem();
			}

			if(monedaAux!=null && monedaAux.getId()!=null) {
				parametrofactuprincipal.setid_moneda(monedaAux.getId());
				parametrofactuprincipal.setmoneda_descripcion(ParametroFactuPrincipalConstantesFunciones.getMonedaDescripcion(monedaAux));
				parametrofactuprincipal.setMoneda(monedaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFormatoForeignKey(ParametroFactuPrincipal parametrofactuprincipal,JComboBox jComboBoxid_formatoParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			Formato  formatoAux=new Formato();

			if(jComboBoxid_formatoParametroFactuPrincipalGenerico==null) {
				formatoAux=(Formato)this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_formatoParametroFactuPrincipal.getSelectedItem();
			} else {
				formatoAux=(Formato)jComboBoxid_formatoParametroFactuPrincipalGenerico.getSelectedItem();
			}

			if(formatoAux!=null && formatoAux.getId()!=null) {
				parametrofactuprincipal.setid_formato(formatoAux.getId());
				parametrofactuprincipal.setformato_descripcion(ParametroFactuPrincipalConstantesFunciones.getFormatoDescripcion(formatoAux));
				parametrofactuprincipal.setFormato(formatoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableFleteVentaForeignKey(ParametroFactuPrincipal parametrofactuprincipal,JComboBox jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipalGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipal.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipalGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				parametrofactuprincipal.setid_cuenta_contable_flete_venta(cuentacontableAux.getId());
				parametrofactuprincipal.setcuentacontablefleteventa_descripcion(ParametroFactuPrincipalConstantesFunciones.getCuentaContableFleteVentaDescripcion(cuentacontableAux));
				parametrofactuprincipal.setCuentaContableFleteVenta(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableOtroCargoForeignKey(ParametroFactuPrincipal parametrofactuprincipal,JComboBox jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipalGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipal.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipalGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				parametrofactuprincipal.setid_cuenta_contable_otro_cargo(cuentacontableAux.getId());
				parametrofactuprincipal.setcuentacontableotrocargo_descripcion(ParametroFactuPrincipalConstantesFunciones.getCuentaContableOtroCargoDescripcion(cuentacontableAux));
				parametrofactuprincipal.setCuentaContableOtroCargo(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableFinanForeignKey(ParametroFactuPrincipal parametrofactuprincipal,JComboBox jComboBoxid_cuenta_contable_finanParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_finanParametroFactuPrincipalGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_finanParametroFactuPrincipal.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_finanParametroFactuPrincipalGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				parametrofactuprincipal.setid_cuenta_contable_finan(cuentacontableAux.getId());
				parametrofactuprincipal.setcuentacontablefinan_descripcion(ParametroFactuPrincipalConstantesFunciones.getCuentaContableFinanDescripcion(cuentacontableAux));
				parametrofactuprincipal.setCuentaContableFinan(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableBoniForeignKey(ParametroFactuPrincipal parametrofactuprincipal,JComboBox jComboBoxid_cuenta_contable_boniParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_boniParametroFactuPrincipalGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boniParametroFactuPrincipal.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_boniParametroFactuPrincipalGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				parametrofactuprincipal.setid_cuenta_contable_boni(cuentacontableAux.getId());
				parametrofactuprincipal.setcuentacontableboni_descripcion(ParametroFactuPrincipalConstantesFunciones.getCuentaContableBoniDescripcion(cuentacontableAux));
				parametrofactuprincipal.setCuentaContableBoni(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableBoniDevolForeignKey(ParametroFactuPrincipal parametrofactuprincipal,JComboBox jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipalGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipal.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipalGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				parametrofactuprincipal.setid_cuenta_contable_boni_devol(cuentacontableAux.getId());
				parametrofactuprincipal.setcuentacontablebonidevol_descripcion(ParametroFactuPrincipalConstantesFunciones.getCuentaContableBoniDevolDescripcion(cuentacontableAux));
				parametrofactuprincipal.setCuentaContableBoniDevol(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableIceForeignKey(ParametroFactuPrincipal parametrofactuprincipal,JComboBox jComboBoxid_cuenta_contable_iceParametroFactuPrincipalGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contable_iceParametroFactuPrincipalGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_iceParametroFactuPrincipal.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contable_iceParametroFactuPrincipalGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				parametrofactuprincipal.setid_cuenta_contable_ice(cuentacontableAux.getId());
				parametrofactuprincipal.setcuentacontableice_descripcion(ParametroFactuPrincipalConstantesFunciones.getCuentaContableIceDescripcion(cuentacontableAux));
				parametrofactuprincipal.setCuentaContableIce(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_empresaParametroFactuPrincipal.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_empresaParametroFactuPrincipal.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
					}

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_sucursalParametroFactuPrincipal.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_sucursalParametroFactuPrincipal.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
					}

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoParamFactuDescuentosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoParamFactuDescuento=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipal.removeAllItems();

							for(TipoParamFactuDescuento tipoparamfactudescuento:this.tipoparamfactudescuentosForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipal.addItem(tipoparamfactudescuento);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
					}

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoParamFactuDescuento") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuentoParametroFactuPrincipal.removeAllItems();

							for(TipoParamFactuDescuento tipoparamfactudescuento:this.tipoparamfactudescuentosForeignKey) {
								this.jComboBoxid_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuentoParametroFactuPrincipal.addItem(tipoparamfactudescuento);
							}
						}

						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoParamFactuListadoClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoParamFactuListadoCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipal.removeAllItems();

							for(TipoParamFactuListadoCliente tipoparamfactulistadocliente:this.tipoparamfactulistadoclientesForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipal.addItem(tipoparamfactulistadocliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
					}

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoParamFactuListadoCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal.removeAllItems();

							for(TipoParamFactuListadoCliente tipoparamfactulistadocliente:this.tipoparamfactulistadoclientesForeignKey) {
								this.jComboBoxid_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal.addItem(tipoparamfactulistadocliente);
							}
						}

						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoParamFactuSecuenciaTrabajosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoParamFactuSecuenciaTrabajo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal.removeAllItems();

							for(TipoParamFactuSecuenciaTrabajo tipoparamfactusecuenciatrabajo:this.tipoparamfactusecuenciatrabajosForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal.addItem(tipoparamfactusecuenciatrabajo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
					}

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoParamFactuSecuenciaTrabajo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal.removeAllItems();

							for(TipoParamFactuSecuenciaTrabajo tipoparamfactusecuenciatrabajo:this.tipoparamfactusecuenciatrabajosForeignKey) {
								this.jComboBoxid_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal.addItem(tipoparamfactusecuenciatrabajo);
							}
						}

						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoDocumentoFacturasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoDocumento=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_facturaParametroFactuPrincipal.removeAllItems();

							for(TipoDocumento tipodocumentofactura:this.tipodocumentofacturasForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_facturaParametroFactuPrincipal.addItem(tipodocumentofactura);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
					}

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoDocumentoFactura") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaParametroFactuPrincipal.removeAllItems();

							for(TipoDocumento tipodocumentofactura:this.tipodocumentofacturasForeignKey) {
								this.jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaParametroFactuPrincipal.addItem(tipodocumentofactura);
							}
						}

						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoDocumentoNotaCreditosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoDocumento=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipal.removeAllItems();

							for(TipoDocumento tipodocumentonotacredito:this.tipodocumentonotacreditosForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipal.addItem(tipodocumentonotacredito);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
					}

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoDocumentoNotaCredito") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal.removeAllItems();

							for(TipoDocumento tipodocumentonotacredito:this.tipodocumentonotacreditosForeignKey) {
								this.jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal.addItem(tipodocumentonotacredito);
							}
						}

						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoDocumentoNotaDebitosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoDocumento=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipal.removeAllItems();

							for(TipoDocumento tipodocumentonotadebito:this.tipodocumentonotadebitosForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipal.addItem(tipodocumentonotadebito);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
					}

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoDocumentoNotaDebito") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal.removeAllItems();

							for(TipoDocumento tipodocumentonotadebito:this.tipodocumentonotadebitosForeignKey) {
								this.jComboBoxid_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal.addItem(tipodocumentonotadebito);
							}
						}

						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameLibroContablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingLibroContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_libro_contableParametroFactuPrincipal.removeAllItems();

							for(LibroContable librocontable:this.librocontablesForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_libro_contableParametroFactuPrincipal.addItem(librocontable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
					}

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdLibroContable") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_libro_contableFK_IdLibroContableParametroFactuPrincipal.removeAllItems();

							for(LibroContable librocontable:this.librocontablesForeignKey) {
								this.jComboBoxid_libro_contableFK_IdLibroContableParametroFactuPrincipal.addItem(librocontable);
							}
						}

						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMonedasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMoneda=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_monedaParametroFactuPrincipal.removeAllItems();

							for(Moneda moneda:this.monedasForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_monedaParametroFactuPrincipal.addItem(moneda);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
					}

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFormatosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFormato=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_formatoParametroFactuPrincipal.removeAllItems();

							for(Formato formato:this.formatosForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_formatoParametroFactuPrincipal.addItem(formato);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
					}

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdFormato") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_formatoFK_IdFormatoParametroFactuPrincipal.removeAllItems();

							for(Formato formato:this.formatosForeignKey) {
								this.jComboBoxid_formatoFK_IdFormatoParametroFactuPrincipal.addItem(formato);
							}
						}

						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableFleteVentasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipal.removeAllItems();

							for(CuentaContable cuentacontablefleteventa:this.cuentacontablefleteventasForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipal.addItem(cuentacontablefleteventa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
					}

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableFleteVenta") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVentaParametroFactuPrincipal.removeAllItems();

							for(CuentaContable cuentacontablefleteventa:this.cuentacontablefleteventasForeignKey) {
								this.jComboBoxid_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVentaParametroFactuPrincipal.addItem(cuentacontablefleteventa);
							}
						}

						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableOtroCargosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipal.removeAllItems();

							for(CuentaContable cuentacontableotrocargo:this.cuentacontableotrocargosForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipal.addItem(cuentacontableotrocargo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
					}

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableOtroCargo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargoParametroFactuPrincipal.removeAllItems();

							for(CuentaContable cuentacontableotrocargo:this.cuentacontableotrocargosForeignKey) {
								this.jComboBoxid_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargoParametroFactuPrincipal.addItem(cuentacontableotrocargo);
							}
						}

						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableFinansForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_finanParametroFactuPrincipal.removeAllItems();

							for(CuentaContable cuentacontablefinan:this.cuentacontablefinansForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_finanParametroFactuPrincipal.addItem(cuentacontablefinan);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
					}

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableFinan") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_finanFK_IdCuentaContableFinanParametroFactuPrincipal.removeAllItems();

							for(CuentaContable cuentacontablefinan:this.cuentacontablefinansForeignKey) {
								this.jComboBoxid_cuenta_contable_finanFK_IdCuentaContableFinanParametroFactuPrincipal.addItem(cuentacontablefinan);
							}
						}

						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableBonisForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boniParametroFactuPrincipal.removeAllItems();

							for(CuentaContable cuentacontableboni:this.cuentacontablebonisForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boniParametroFactuPrincipal.addItem(cuentacontableboni);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
					}

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableBoni") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_boniFK_IdCuentaContableBoniParametroFactuPrincipal.removeAllItems();

							for(CuentaContable cuentacontableboni:this.cuentacontablebonisForeignKey) {
								this.jComboBoxid_cuenta_contable_boniFK_IdCuentaContableBoniParametroFactuPrincipal.addItem(cuentacontableboni);
							}
						}

						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableBoniDevolsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipal.removeAllItems();

							for(CuentaContable cuentacontablebonidevol:this.cuentacontablebonidevolsForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipal.addItem(cuentacontablebonidevol);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
					}

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableBoniDevol") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevolParametroFactuPrincipal.removeAllItems();

							for(CuentaContable cuentacontablebonidevol:this.cuentacontablebonidevolsForeignKey) {
								this.jComboBoxid_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevolParametroFactuPrincipal.addItem(cuentacontablebonidevol);
							}
						}

						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContableIcesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_iceParametroFactuPrincipal.removeAllItems();

							for(CuentaContable cuentacontableice:this.cuentacontableicesForeignKey) {
								this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_iceParametroFactuPrincipal.addItem(cuentacontableice);
							}
						}
					}

					if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { 
					}

					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCuentaContableIce") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceParametroFactuPrincipal.removeAllItems();

							for(CuentaContable cuentacontableice:this.cuentacontableicesForeignKey) {
								this.jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceParametroFactuPrincipal.addItem(cuentacontableice);
							}
						}

						if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_empresaParametroFactuPrincipal.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_empresaParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_sucursalParametroFactuPrincipal.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_sucursalParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoParamFactuDescuentoForeignKey(TipoParamFactuDescuento tipoparamfactudescuento,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipal.setSelectedItem(tipoparamfactudescuento);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuentoParametroFactuPrincipal.setSelectedItem(tipoparamfactudescuento);
						} else {
							this.jComboBoxid_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuentoParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoParamFactuListadoClienteForeignKey(TipoParamFactuListadoCliente tipoparamfactulistadocliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipal.setSelectedItem(tipoparamfactulistadocliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal.setSelectedItem(tipoparamfactulistadocliente);
						} else {
							this.jComboBoxid_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoParamFactuSecuenciaTrabajoForeignKey(TipoParamFactuSecuenciaTrabajo tipoparamfactusecuenciatrabajo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal.setSelectedItem(tipoparamfactusecuenciatrabajo);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal.setSelectedItem(tipoparamfactusecuenciatrabajo);
						} else {
							this.jComboBoxid_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoDocumentoFacturaForeignKey(TipoDocumento tipodocumentofactura,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_facturaParametroFactuPrincipal.setSelectedItem(tipodocumentofactura);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_facturaParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaParametroFactuPrincipal.setSelectedItem(tipodocumentofactura);
						} else {
							this.jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoDocumentoNotaCreditoForeignKey(TipoDocumento tipodocumentonotacredito,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipal.setSelectedItem(tipodocumentonotacredito);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal.setSelectedItem(tipodocumentonotacredito);
						} else {
							this.jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoDocumentoNotaDebitoForeignKey(TipoDocumento tipodocumentonotadebito,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipal.setSelectedItem(tipodocumentonotadebito);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal.setSelectedItem(tipodocumentonotadebito);
						} else {
							this.jComboBoxid_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameLibroContableForeignKey(LibroContable librocontable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_libro_contableParametroFactuPrincipal.setSelectedItem(librocontable);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_libro_contableParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_libro_contableFK_IdLibroContableParametroFactuPrincipal.setSelectedItem(librocontable);
						} else {
							this.jComboBoxid_libro_contableFK_IdLibroContableParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMonedaForeignKey(Moneda moneda,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_monedaParametroFactuPrincipal.setSelectedItem(moneda);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_monedaParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFormatoForeignKey(Formato formato,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_formatoParametroFactuPrincipal.setSelectedItem(formato);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_formatoParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_formatoFK_IdFormatoParametroFactuPrincipal.setSelectedItem(formato);
						} else {
							this.jComboBoxid_formatoFK_IdFormatoParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableFleteVentaForeignKey(CuentaContable cuentacontablefleteventa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipal.setSelectedItem(cuentacontablefleteventa);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVentaParametroFactuPrincipal.setSelectedItem(cuentacontablefleteventa);
						} else {
							this.jComboBoxid_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVentaParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableOtroCargoForeignKey(CuentaContable cuentacontableotrocargo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipal.setSelectedItem(cuentacontableotrocargo);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargoParametroFactuPrincipal.setSelectedItem(cuentacontableotrocargo);
						} else {
							this.jComboBoxid_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargoParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableFinanForeignKey(CuentaContable cuentacontablefinan,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_finanParametroFactuPrincipal.setSelectedItem(cuentacontablefinan);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_finanParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_finanFK_IdCuentaContableFinanParametroFactuPrincipal.setSelectedItem(cuentacontablefinan);
						} else {
							this.jComboBoxid_cuenta_contable_finanFK_IdCuentaContableFinanParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableBoniForeignKey(CuentaContable cuentacontableboni,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boniParametroFactuPrincipal.setSelectedItem(cuentacontableboni);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boniParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_boniFK_IdCuentaContableBoniParametroFactuPrincipal.setSelectedItem(cuentacontableboni);
						} else {
							this.jComboBoxid_cuenta_contable_boniFK_IdCuentaContableBoniParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableBoniDevolForeignKey(CuentaContable cuentacontablebonidevol,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipal.setSelectedItem(cuentacontablebonidevol);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevolParametroFactuPrincipal.setSelectedItem(cuentacontablebonidevol);
						} else {
							this.jComboBoxid_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevolParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableIceForeignKey(CuentaContable cuentacontableice,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_iceParametroFactuPrincipal.setSelectedItem(cuentacontableice);
						}
					} else {
						if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_iceParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceParametroFactuPrincipal.setSelectedItem(cuentacontableice);
						} else {
							this.jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceParametroFactuPrincipal.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesParametroFactuPrincipal() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			ParametroFactuPrincipalConstantesFunciones.refrescarForeignKeysDescripcionesParametroFactuPrincipal(this.parametrofactuprincipalLogic.getParametroFactuPrincipals());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			ParametroFactuPrincipalConstantesFunciones.refrescarForeignKeysDescripcionesParametroFactuPrincipal(this.parametrofactuprincipals);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(TipoParamFactuDescuento.class));
		classes.add(new Classe(TipoParamFactuListadoCliente.class));
		classes.add(new Classe(TipoParamFactuSecuenciaTrabajo.class));
		classes.add(new Classe(TipoDocumento.class));
		classes.add(new Classe(LibroContable.class));
		classes.add(new Classe(Moneda.class));
		classes.add(new Classe(Formato.class));
		classes.add(new Classe(CuentaContable.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//parametrofactuprincipalLogic.setParametroFactuPrincipals(this.parametrofactuprincipals);
			parametrofactuprincipalLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public ParametroFactuPrincipalParameterReturnGeneral getParametroFactuPrincipalParameterGeneral() {
		return this.parametrofactuprincipalParameterGeneral;
	}
	
	public void setParametroFactuPrincipalParameterGeneral(ParametroFactuPrincipalParameterReturnGeneral parametrofactuprincipalParameterGeneral) {
		this.parametrofactuprincipalParameterGeneral = parametrofactuprincipalParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoParametroFactuPrincipal() {
		return isPermisoTodoParametroFactuPrincipal;
	}

	public void setIsPermisoTodoParametroFactuPrincipal(Boolean isPermisoTodoParametroFactuPrincipal) {
		this.isPermisoTodoParametroFactuPrincipal = isPermisoTodoParametroFactuPrincipal;
	}

	public Boolean getIsPermisoNuevoParametroFactuPrincipal() {
		return isPermisoNuevoParametroFactuPrincipal;
	}

	public void setIsPermisoNuevoParametroFactuPrincipal(Boolean isPermisoNuevoParametroFactuPrincipal) {
		this.isPermisoNuevoParametroFactuPrincipal = isPermisoNuevoParametroFactuPrincipal;
	}

	public Boolean getIsPermisoActualizarParametroFactuPrincipal() {
		return isPermisoActualizarParametroFactuPrincipal;
	}

	public void setIsPermisoActualizarParametroFactuPrincipal(Boolean isPermisoActualizarParametroFactuPrincipal) {
		this.isPermisoActualizarParametroFactuPrincipal = isPermisoActualizarParametroFactuPrincipal;
	}

	public Boolean getIsPermisoEliminarParametroFactuPrincipal() {
		return isPermisoEliminarParametroFactuPrincipal;
	}

	public void setIsPermisoEliminarParametroFactuPrincipal(Boolean isPermisoEliminarParametroFactuPrincipal) {
		this.isPermisoEliminarParametroFactuPrincipal = isPermisoEliminarParametroFactuPrincipal;
	}

	public Boolean getIsPermisoGuardarCambiosParametroFactuPrincipal() {
		return isPermisoGuardarCambiosParametroFactuPrincipal;
	}

	public void setIsPermisoGuardarCambiosParametroFactuPrincipal(Boolean isPermisoGuardarCambiosParametroFactuPrincipal) {
		this.isPermisoGuardarCambiosParametroFactuPrincipal = isPermisoGuardarCambiosParametroFactuPrincipal;
	}
	
	public Boolean getIsPermisoConsultaParametroFactuPrincipal() {
		return isPermisoConsultaParametroFactuPrincipal;
	}

	public void setIsPermisoConsultaParametroFactuPrincipal(Boolean isPermisoConsultaParametroFactuPrincipal) {
		this.isPermisoConsultaParametroFactuPrincipal = isPermisoConsultaParametroFactuPrincipal;
	}

	public Boolean getIsPermisoBusquedaParametroFactuPrincipal() {
		return isPermisoBusquedaParametroFactuPrincipal;
	}

	public void setIsPermisoBusquedaParametroFactuPrincipal(Boolean isPermisoBusquedaParametroFactuPrincipal) {
		this.isPermisoBusquedaParametroFactuPrincipal = isPermisoBusquedaParametroFactuPrincipal;
	}

	public Boolean getIsPermisoReporteParametroFactuPrincipal() {
		return isPermisoReporteParametroFactuPrincipal;
	}

	public void setIsPermisoReporteParametroFactuPrincipal(Boolean isPermisoReporteParametroFactuPrincipal) {
		this.isPermisoReporteParametroFactuPrincipal = isPermisoReporteParametroFactuPrincipal;
	}
	
	public Boolean getIsPermisoPaginacionMedioParametroFactuPrincipal() {
		return isPermisoPaginacionMedioParametroFactuPrincipal;
	}

	public void setIsPermisoPaginacionMedioParametroFactuPrincipal(Boolean isPermisoPaginacionMedioParametroFactuPrincipal) {
		this.isPermisoPaginacionMedioParametroFactuPrincipal = isPermisoPaginacionMedioParametroFactuPrincipal;
	}
	
	public Boolean getIsPermisoPaginacionTodoParametroFactuPrincipal() {
		return isPermisoPaginacionTodoParametroFactuPrincipal;
	}

	public void setIsPermisoPaginacionTodoParametroFactuPrincipal(Boolean isPermisoPaginacionTodoParametroFactuPrincipal) {
		this.isPermisoPaginacionTodoParametroFactuPrincipal = isPermisoPaginacionTodoParametroFactuPrincipal;
	}
	
	public Boolean getIsPermisoPaginacionAltoParametroFactuPrincipal() {
		return isPermisoPaginacionAltoParametroFactuPrincipal;
	}

	public void setIsPermisoPaginacionAltoParametroFactuPrincipal(Boolean isPermisoPaginacionAltoParametroFactuPrincipal) {
		this.isPermisoPaginacionAltoParametroFactuPrincipal = isPermisoPaginacionAltoParametroFactuPrincipal;
	}
	
	public Boolean getIsPermisoCopiarParametroFactuPrincipal() {
		return isPermisoCopiarParametroFactuPrincipal;
	}

	public void setIsPermisoCopiarParametroFactuPrincipal(Boolean isPermisoCopiarParametroFactuPrincipal) {
		this.isPermisoCopiarParametroFactuPrincipal = isPermisoCopiarParametroFactuPrincipal;
	}
	
	public Boolean getIsPermisoVerFormParametroFactuPrincipal() {
		return isPermisoVerFormParametroFactuPrincipal;
	}

	public void setIsPermisoVerFormParametroFactuPrincipal(Boolean isPermisoVerFormParametroFactuPrincipal) {
		this.isPermisoVerFormParametroFactuPrincipal = isPermisoVerFormParametroFactuPrincipal;
	}
	
	public Boolean getIsPermisoDuplicarParametroFactuPrincipal() {
		return isPermisoDuplicarParametroFactuPrincipal;
	}

	public void setIsPermisoDuplicarParametroFactuPrincipal(Boolean isPermisoDuplicarParametroFactuPrincipal) {
		this.isPermisoDuplicarParametroFactuPrincipal = isPermisoDuplicarParametroFactuPrincipal;
	}
	
	public Boolean getIsPermisoOrdenParametroFactuPrincipal() {
		return isPermisoOrdenParametroFactuPrincipal;
	}

	public void setIsPermisoOrdenParametroFactuPrincipal(Boolean isPermisoOrdenParametroFactuPrincipal) {
		this.isPermisoOrdenParametroFactuPrincipal = isPermisoOrdenParametroFactuPrincipal;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoParametroFactuPrincipal() {
		return isVisibilidadCeldaNuevoParametroFactuPrincipal;
	}

	public void setIsVisibilidadCeldaNuevoParametroFactuPrincipal(Boolean isVisibilidadCeldaNuevoParametroFactuPrincipal) {
		this.isVisibilidadCeldaNuevoParametroFactuPrincipal = isVisibilidadCeldaNuevoParametroFactuPrincipal;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarParametroFactuPrincipal() {
		return isVisibilidadCeldaDuplicarParametroFactuPrincipal;
	}

	public void setIsVisibilidadCeldaDuplicarParametroFactuPrincipal(Boolean isVisibilidadCeldaDuplicarParametroFactuPrincipal) {
		this.isVisibilidadCeldaDuplicarParametroFactuPrincipal = isVisibilidadCeldaDuplicarParametroFactuPrincipal;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarParametroFactuPrincipal() {
		return isVisibilidadCeldaCopiarParametroFactuPrincipal;
	}

	public void setIsVisibilidadCeldaCopiarParametroFactuPrincipal(Boolean isVisibilidadCeldaCopiarParametroFactuPrincipal) {
		this.isVisibilidadCeldaCopiarParametroFactuPrincipal = isVisibilidadCeldaCopiarParametroFactuPrincipal;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormParametroFactuPrincipal() {
		return isVisibilidadCeldaVerFormParametroFactuPrincipal;
	}

	public void setIsVisibilidadCeldaVerFormParametroFactuPrincipal(Boolean isVisibilidadCeldaVerFormParametroFactuPrincipal) {
		this.isVisibilidadCeldaVerFormParametroFactuPrincipal = isVisibilidadCeldaVerFormParametroFactuPrincipal;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenParametroFactuPrincipal() {
		return isVisibilidadCeldaOrdenParametroFactuPrincipal;
	}

	public void setIsVisibilidadCeldaOrdenParametroFactuPrincipal(Boolean isVisibilidadCeldaOrdenParametroFactuPrincipal) {
		this.isVisibilidadCeldaOrdenParametroFactuPrincipal = isVisibilidadCeldaOrdenParametroFactuPrincipal;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal() {
		return isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal(Boolean isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal) {
		this.isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal = isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal;
	}
	
	public Boolean getIsVisibilidadCeldaModificarParametroFactuPrincipal() {
		return isVisibilidadCeldaModificarParametroFactuPrincipal;
	}

	public void setIsVisibilidadCeldaModificarParametroFactuPrincipal(Boolean isVisibilidadCeldaModificarParametroFactuPrincipal) {
		this.isVisibilidadCeldaModificarParametroFactuPrincipal = isVisibilidadCeldaModificarParametroFactuPrincipal;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarParametroFactuPrincipal() {
		return isVisibilidadCeldaActualizarParametroFactuPrincipal;
	}

	public void setIsVisibilidadCeldaActualizarParametroFactuPrincipal(Boolean isVisibilidadCeldaActualizarParametroFactuPrincipal) {
		this.isVisibilidadCeldaActualizarParametroFactuPrincipal = isVisibilidadCeldaActualizarParametroFactuPrincipal;
	}

	public Boolean getIsVisibilidadCeldaEliminarParametroFactuPrincipal() {
		return isVisibilidadCeldaEliminarParametroFactuPrincipal;
	}

	public void setIsVisibilidadCeldaEliminarParametroFactuPrincipal(Boolean isVisibilidadCeldaEliminarParametroFactuPrincipal) {
		this.isVisibilidadCeldaEliminarParametroFactuPrincipal = isVisibilidadCeldaEliminarParametroFactuPrincipal;
	}

	public Boolean getIsVisibilidadCeldaCancelarParametroFactuPrincipal() {
		return isVisibilidadCeldaCancelarParametroFactuPrincipal;
	}

	public void setIsVisibilidadCeldaCancelarParametroFactuPrincipal(Boolean isVisibilidadCeldaCancelarParametroFactuPrincipal) {
		this.isVisibilidadCeldaCancelarParametroFactuPrincipal = isVisibilidadCeldaCancelarParametroFactuPrincipal;
	}

	public Boolean getIsVisibilidadCeldaGuardarParametroFactuPrincipal() {
		return isVisibilidadCeldaGuardarParametroFactuPrincipal;
	}

	public void setIsVisibilidadCeldaGuardarParametroFactuPrincipal(Boolean isVisibilidadCeldaGuardarParametroFactuPrincipal) {
		this.isVisibilidadCeldaGuardarParametroFactuPrincipal = isVisibilidadCeldaGuardarParametroFactuPrincipal;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosParametroFactuPrincipal() {
		return isVisibilidadCeldaGuardarCambiosParametroFactuPrincipal;
	}

	public void setIsVisibilidadCeldaGuardarCambiosParametroFactuPrincipal(Boolean isVisibilidadCeldaGuardarCambiosParametroFactuPrincipal) {
		this.isVisibilidadCeldaGuardarCambiosParametroFactuPrincipal = isVisibilidadCeldaGuardarCambiosParametroFactuPrincipal;
	}
		
	public ParametroFactuPrincipalSessionBean getparametrofactuprincipalSessionBean() {
		return this.parametrofactuprincipalSessionBean;
	}
	
	public void setparametrofactuprincipalSessionBean(ParametroFactuPrincipalSessionBean parametrofactuprincipalSessionBean) {
		this.parametrofactuprincipalSessionBean=parametrofactuprincipalSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdCuentaContableBoni() {
		return this.isVisibilidadFK_IdCuentaContableBoni;
	}

	public void setisVisibilidadFK_IdCuentaContableBoni(Boolean isVisibilidadFK_IdCuentaContableBoni) {
		this.isVisibilidadFK_IdCuentaContableBoni=isVisibilidadFK_IdCuentaContableBoni;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableBoniDevol() {
		return this.isVisibilidadFK_IdCuentaContableBoniDevol;
	}

	public void setisVisibilidadFK_IdCuentaContableBoniDevol(Boolean isVisibilidadFK_IdCuentaContableBoniDevol) {
		this.isVisibilidadFK_IdCuentaContableBoniDevol=isVisibilidadFK_IdCuentaContableBoniDevol;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableFinan() {
		return this.isVisibilidadFK_IdCuentaContableFinan;
	}

	public void setisVisibilidadFK_IdCuentaContableFinan(Boolean isVisibilidadFK_IdCuentaContableFinan) {
		this.isVisibilidadFK_IdCuentaContableFinan=isVisibilidadFK_IdCuentaContableFinan;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableFleteVenta() {
		return this.isVisibilidadFK_IdCuentaContableFleteVenta;
	}

	public void setisVisibilidadFK_IdCuentaContableFleteVenta(Boolean isVisibilidadFK_IdCuentaContableFleteVenta) {
		this.isVisibilidadFK_IdCuentaContableFleteVenta=isVisibilidadFK_IdCuentaContableFleteVenta;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableIce() {
		return this.isVisibilidadFK_IdCuentaContableIce;
	}

	public void setisVisibilidadFK_IdCuentaContableIce(Boolean isVisibilidadFK_IdCuentaContableIce) {
		this.isVisibilidadFK_IdCuentaContableIce=isVisibilidadFK_IdCuentaContableIce;
	}

	public Boolean getisVisibilidadFK_IdCuentaContableOtroCargo() {
		return this.isVisibilidadFK_IdCuentaContableOtroCargo;
	}

	public void setisVisibilidadFK_IdCuentaContableOtroCargo(Boolean isVisibilidadFK_IdCuentaContableOtroCargo) {
		this.isVisibilidadFK_IdCuentaContableOtroCargo=isVisibilidadFK_IdCuentaContableOtroCargo;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdFormato() {
		return this.isVisibilidadFK_IdFormato;
	}

	public void setisVisibilidadFK_IdFormato(Boolean isVisibilidadFK_IdFormato) {
		this.isVisibilidadFK_IdFormato=isVisibilidadFK_IdFormato;
	}

	public Boolean getisVisibilidadFK_IdLibroContable() {
		return this.isVisibilidadFK_IdLibroContable;
	}

	public void setisVisibilidadFK_IdLibroContable(Boolean isVisibilidadFK_IdLibroContable) {
		this.isVisibilidadFK_IdLibroContable=isVisibilidadFK_IdLibroContable;
	}

	public Boolean getisVisibilidadFK_IdMoneda() {
		return this.isVisibilidadFK_IdMoneda;
	}

	public void setisVisibilidadFK_IdMoneda(Boolean isVisibilidadFK_IdMoneda) {
		this.isVisibilidadFK_IdMoneda=isVisibilidadFK_IdMoneda;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoDocumentoFactura() {
		return this.isVisibilidadFK_IdTipoDocumentoFactura;
	}

	public void setisVisibilidadFK_IdTipoDocumentoFactura(Boolean isVisibilidadFK_IdTipoDocumentoFactura) {
		this.isVisibilidadFK_IdTipoDocumentoFactura=isVisibilidadFK_IdTipoDocumentoFactura;
	}

	public Boolean getisVisibilidadFK_IdTipoDocumentoNotaCredito() {
		return this.isVisibilidadFK_IdTipoDocumentoNotaCredito;
	}

	public void setisVisibilidadFK_IdTipoDocumentoNotaCredito(Boolean isVisibilidadFK_IdTipoDocumentoNotaCredito) {
		this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isVisibilidadFK_IdTipoDocumentoNotaCredito;
	}

	public Boolean getisVisibilidadFK_IdTipoDocumentoNotaDebito() {
		return this.isVisibilidadFK_IdTipoDocumentoNotaDebito;
	}

	public void setisVisibilidadFK_IdTipoDocumentoNotaDebito(Boolean isVisibilidadFK_IdTipoDocumentoNotaDebito) {
		this.isVisibilidadFK_IdTipoDocumentoNotaDebito=isVisibilidadFK_IdTipoDocumentoNotaDebito;
	}

	public Boolean getisVisibilidadFK_IdTipoParamFactuDescuento() {
		return this.isVisibilidadFK_IdTipoParamFactuDescuento;
	}

	public void setisVisibilidadFK_IdTipoParamFactuDescuento(Boolean isVisibilidadFK_IdTipoParamFactuDescuento) {
		this.isVisibilidadFK_IdTipoParamFactuDescuento=isVisibilidadFK_IdTipoParamFactuDescuento;
	}

	public Boolean getisVisibilidadFK_IdTipoParamFactuListadoCliente() {
		return this.isVisibilidadFK_IdTipoParamFactuListadoCliente;
	}

	public void setisVisibilidadFK_IdTipoParamFactuListadoCliente(Boolean isVisibilidadFK_IdTipoParamFactuListadoCliente) {
		this.isVisibilidadFK_IdTipoParamFactuListadoCliente=isVisibilidadFK_IdTipoParamFactuListadoCliente;
	}

	public Boolean getisVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo() {
		return this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo;
	}

	public void setisVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo(Boolean isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo) {
		this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo=isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(ParametroFactuPrincipal parametrofactuprincipal)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(parametrofactuprincipal,null);
				this.setActualParaGuardarSucursalForeignKey(parametrofactuprincipal,null);
				this.setActualParaGuardarTipoParamFactuDescuentoForeignKey(parametrofactuprincipal,null);
				this.setActualParaGuardarTipoParamFactuListadoClienteForeignKey(parametrofactuprincipal,null);
				this.setActualParaGuardarTipoParamFactuSecuenciaTrabajoForeignKey(parametrofactuprincipal,null);
				this.setActualParaGuardarTipoDocumentoFacturaForeignKey(parametrofactuprincipal,null);
				this.setActualParaGuardarTipoDocumentoNotaCreditoForeignKey(parametrofactuprincipal,null);
				this.setActualParaGuardarTipoDocumentoNotaDebitoForeignKey(parametrofactuprincipal,null);
				this.setActualParaGuardarLibroContableForeignKey(parametrofactuprincipal,null);
				this.setActualParaGuardarMonedaForeignKey(parametrofactuprincipal,null);
				this.setActualParaGuardarFormatoForeignKey(parametrofactuprincipal,null);
				this.setActualParaGuardarCuentaContableFleteVentaForeignKey(parametrofactuprincipal,null);
				this.setActualParaGuardarCuentaContableOtroCargoForeignKey(parametrofactuprincipal,null);
				this.setActualParaGuardarCuentaContableFinanForeignKey(parametrofactuprincipal,null);
				this.setActualParaGuardarCuentaContableBoniForeignKey(parametrofactuprincipal,null);
				this.setActualParaGuardarCuentaContableBoniDevolForeignKey(parametrofactuprincipal,null);
				this.setActualParaGuardarCuentaContableIceForeignKey(parametrofactuprincipal,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(ParametroFactuPrincipal parametrofactuprincipal,ParametroFactuPrincipal parametrofactuprincipalAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalParametroFactuPrincipal(parametrofactuprincipal);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		parametrofactuprincipalAux.setId(parametrofactuprincipal.getId());
		parametrofactuprincipalAux.setVersionRow(parametrofactuprincipal.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessParametroFactuPrincipal();
		
			int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = parametrofactuprincipalValidator.getInvalidValues(this.parametrofactuprincipal);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			parametrofactuprincipalLogic.setDatosCliente(datosCliente);
			parametrofactuprincipalLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				parametrofactuprincipalAux=new  ParametroFactuPrincipal();
				
				parametrofactuprincipalAux.setIsNew(true);
				parametrofactuprincipalAux.setIsChanged(true);
				
				parametrofactuprincipalAux.setParametroFactuPrincipalOriginal(this.parametrofactuprincipal);
				
				parametrofactuprincipalAux.setId(this.parametrofactuprincipal.getId());	
				parametrofactuprincipalAux.setVersionRow(this.parametrofactuprincipal.getVersionRow());	
				parametrofactuprincipalAux.setid_empresa(this.parametrofactuprincipal.getid_empresa());	
				parametrofactuprincipalAux.setid_sucursal(this.parametrofactuprincipal.getid_sucursal());	
				parametrofactuprincipalAux.setid_tipo_param_factu_descuento(this.parametrofactuprincipal.getid_tipo_param_factu_descuento());	
				parametrofactuprincipalAux.setid_tipo_param_factu_listado_cliente(this.parametrofactuprincipal.getid_tipo_param_factu_listado_cliente());	
				parametrofactuprincipalAux.setid_tipo_param_factu_secuencia_trabajo(this.parametrofactuprincipal.getid_tipo_param_factu_secuencia_trabajo());	
				parametrofactuprincipalAux.setid_tipo_documento_factura(this.parametrofactuprincipal.getid_tipo_documento_factura());	
				parametrofactuprincipalAux.setid_tipo_documento_nota_credito(this.parametrofactuprincipal.getid_tipo_documento_nota_credito());	
				parametrofactuprincipalAux.setid_tipo_documento_nota_debito(this.parametrofactuprincipal.getid_tipo_documento_nota_debito());	
				parametrofactuprincipalAux.seten_linea(this.parametrofactuprincipal.geten_linea());	
				parametrofactuprincipalAux.setcon_cuenta_tipo_cliente(this.parametrofactuprincipal.getcon_cuenta_tipo_cliente());	
				parametrofactuprincipalAux.setcon_cliente_impuesto(this.parametrofactuprincipal.getcon_cliente_impuesto());	
				parametrofactuprincipalAux.setid_libro_contable(this.parametrofactuprincipal.getid_libro_contable());	
				parametrofactuprincipalAux.setid_moneda(this.parametrofactuprincipal.getid_moneda());	
				parametrofactuprincipalAux.setcon_impresion(this.parametrofactuprincipal.getcon_impresion());	
				parametrofactuprincipalAux.setid_formato(this.parametrofactuprincipal.getid_formato());	
				parametrofactuprincipalAux.setcon_secuencial_usuario(this.parametrofactuprincipal.getcon_secuencial_usuario());	
				parametrofactuprincipalAux.setcon_secuencial_editable(this.parametrofactuprincipal.getcon_secuencial_editable());	
				parametrofactuprincipalAux.setcon_precio_por_cliente(this.parametrofactuprincipal.getcon_precio_por_cliente());	
				parametrofactuprincipalAux.setcon_modificar_precio(this.parametrofactuprincipal.getcon_modificar_precio());	
				parametrofactuprincipalAux.setcon_modificar_servicio(this.parametrofactuprincipal.getcon_modificar_servicio());	
				parametrofactuprincipalAux.setcon_cambiar_unidad(this.parametrofactuprincipal.getcon_cambiar_unidad());	
				parametrofactuprincipalAux.setnumero_decimales_unidad(this.parametrofactuprincipal.getnumero_decimales_unidad());	
				parametrofactuprincipalAux.setcon_activar_serie(this.parametrofactuprincipal.getcon_activar_serie());	
				parametrofactuprincipalAux.setcon_activar_lote(this.parametrofactuprincipal.getcon_activar_lote());	
				parametrofactuprincipalAux.setcon_activar_multi_empresa(this.parametrofactuprincipal.getcon_activar_multi_empresa());	
				parametrofactuprincipalAux.setcon_centro_costos(this.parametrofactuprincipal.getcon_centro_costos());	
				parametrofactuprincipalAux.setcon_unidades(this.parametrofactuprincipal.getcon_unidades());	
				parametrofactuprincipalAux.setcon_cupo_disponible(this.parametrofactuprincipal.getcon_cupo_disponible());	
				parametrofactuprincipalAux.setcon_forma_pago(this.parametrofactuprincipal.getcon_forma_pago());	
				parametrofactuprincipalAux.setcon_envio_mail(this.parametrofactuprincipal.getcon_envio_mail());	
				parametrofactuprincipalAux.setcon_autorizar_proforma(this.parametrofactuprincipal.getcon_autorizar_proforma());	
				parametrofactuprincipalAux.setcon_bloqueo_pedido(this.parametrofactuprincipal.getcon_bloqueo_pedido());	
				parametrofactuprincipalAux.setcon_control_anticipo(this.parametrofactuprincipal.getcon_control_anticipo());	
				parametrofactuprincipalAux.setcon_factura_auto(this.parametrofactuprincipal.getcon_factura_auto());	
				parametrofactuprincipalAux.setcon_grabar_valor_cero(this.parametrofactuprincipal.getcon_grabar_valor_cero());	
				parametrofactuprincipalAux.setcon_agregar_item(this.parametrofactuprincipal.getcon_agregar_item());	
				parametrofactuprincipalAux.setnumero_copias(this.parametrofactuprincipal.getnumero_copias());	
				parametrofactuprincipalAux.setleyenda(this.parametrofactuprincipal.getleyenda());	
				parametrofactuprincipalAux.setcon_sin_factura(this.parametrofactuprincipal.getcon_sin_factura());	
				parametrofactuprincipalAux.setid_cuenta_contable_flete_venta(this.parametrofactuprincipal.getid_cuenta_contable_flete_venta());	
				
				if(this.parametrofactuprincipal.getid_cuenta_contable_otro_cargo()!=null && this.parametrofactuprincipal.getid_cuenta_contable_otro_cargo()>0L) {
					parametrofactuprincipalAux.setid_cuenta_contable_otro_cargo(this.parametrofactuprincipal.getid_cuenta_contable_otro_cargo());
				} else {
					parametrofactuprincipalAux.setid_cuenta_contable_otro_cargo(null);
				}	
				parametrofactuprincipalAux.setid_cuenta_contable_finan(this.parametrofactuprincipal.getid_cuenta_contable_finan());	
				parametrofactuprincipalAux.setid_cuenta_contable_boni(this.parametrofactuprincipal.getid_cuenta_contable_boni());	
				parametrofactuprincipalAux.setid_cuenta_contable_boni_devol(this.parametrofactuprincipal.getid_cuenta_contable_boni_devol());	
				parametrofactuprincipalAux.setid_cuenta_contable_ice(this.parametrofactuprincipal.getid_cuenta_contable_ice());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.parametrofactuprincipalSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(parametrofactuprincipalAux,parametrofactuprincipalLogic.getParametroFactuPrincipals());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrofactuprincipalAux,parametrofactuprincipals);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.parametrofactuprincipalSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalLogic.saveParametroFactuPrincipals();//WithConnection
						//parametrofactuprincipalLogic.getSetVersionRowParametroFactuPrincipals();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.parametrofactuprincipal,parametrofactuprincipalAux);
					
					this.refrescarForeignKeysDescripcionesParametroFactuPrincipal();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.parametrofactuprincipalSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE	
						
						if(!this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								parametrofactuprincipalLogic.saveParametroFactuPrincipalRelaciones(parametrofactuprincipalAux);//WithConnection
								//parametrofactuprincipalLogic.getSetVersionRowParametroFactuPrincipals();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.parametrofactuprincipal,parametrofactuprincipalAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE	
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.parametrofactuprincipalSessionBean.getEstaModoGuardarRelaciones() 
									|| this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(parametrofactuprincipalAux,parametrofactuprincipalLogic.getParametroFactuPrincipals());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(parametrofactuprincipalAux,parametrofactuprincipals);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.parametrofactuprincipal,parametrofactuprincipalAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				parametrofactuprincipalAux=new  ParametroFactuPrincipal();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado() 
					|| (this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado() && this.parametrofactuprincipal.getId()>=0)) {
						
					parametrofactuprincipalAux.setIsNew(false);
				}
				
				parametrofactuprincipalAux.setIsDeleted(false);
			
				parametrofactuprincipalAux.setId(this.parametrofactuprincipal.getId());	
				parametrofactuprincipalAux.setVersionRow(this.parametrofactuprincipal.getVersionRow());	
				parametrofactuprincipalAux.setid_empresa(this.parametrofactuprincipal.getid_empresa());	
				parametrofactuprincipalAux.setid_sucursal(this.parametrofactuprincipal.getid_sucursal());	
				parametrofactuprincipalAux.setid_tipo_param_factu_descuento(this.parametrofactuprincipal.getid_tipo_param_factu_descuento());	
				parametrofactuprincipalAux.setid_tipo_param_factu_listado_cliente(this.parametrofactuprincipal.getid_tipo_param_factu_listado_cliente());	
				parametrofactuprincipalAux.setid_tipo_param_factu_secuencia_trabajo(this.parametrofactuprincipal.getid_tipo_param_factu_secuencia_trabajo());	
				parametrofactuprincipalAux.setid_tipo_documento_factura(this.parametrofactuprincipal.getid_tipo_documento_factura());	
				parametrofactuprincipalAux.setid_tipo_documento_nota_credito(this.parametrofactuprincipal.getid_tipo_documento_nota_credito());	
				parametrofactuprincipalAux.setid_tipo_documento_nota_debito(this.parametrofactuprincipal.getid_tipo_documento_nota_debito());	
				parametrofactuprincipalAux.seten_linea(this.parametrofactuprincipal.geten_linea());	
				parametrofactuprincipalAux.setcon_cuenta_tipo_cliente(this.parametrofactuprincipal.getcon_cuenta_tipo_cliente());	
				parametrofactuprincipalAux.setcon_cliente_impuesto(this.parametrofactuprincipal.getcon_cliente_impuesto());	
				parametrofactuprincipalAux.setid_libro_contable(this.parametrofactuprincipal.getid_libro_contable());	
				parametrofactuprincipalAux.setid_moneda(this.parametrofactuprincipal.getid_moneda());	
				parametrofactuprincipalAux.setcon_impresion(this.parametrofactuprincipal.getcon_impresion());	
				parametrofactuprincipalAux.setid_formato(this.parametrofactuprincipal.getid_formato());	
				parametrofactuprincipalAux.setcon_secuencial_usuario(this.parametrofactuprincipal.getcon_secuencial_usuario());	
				parametrofactuprincipalAux.setcon_secuencial_editable(this.parametrofactuprincipal.getcon_secuencial_editable());	
				parametrofactuprincipalAux.setcon_precio_por_cliente(this.parametrofactuprincipal.getcon_precio_por_cliente());	
				parametrofactuprincipalAux.setcon_modificar_precio(this.parametrofactuprincipal.getcon_modificar_precio());	
				parametrofactuprincipalAux.setcon_modificar_servicio(this.parametrofactuprincipal.getcon_modificar_servicio());	
				parametrofactuprincipalAux.setcon_cambiar_unidad(this.parametrofactuprincipal.getcon_cambiar_unidad());	
				parametrofactuprincipalAux.setnumero_decimales_unidad(this.parametrofactuprincipal.getnumero_decimales_unidad());	
				parametrofactuprincipalAux.setcon_activar_serie(this.parametrofactuprincipal.getcon_activar_serie());	
				parametrofactuprincipalAux.setcon_activar_lote(this.parametrofactuprincipal.getcon_activar_lote());	
				parametrofactuprincipalAux.setcon_activar_multi_empresa(this.parametrofactuprincipal.getcon_activar_multi_empresa());	
				parametrofactuprincipalAux.setcon_centro_costos(this.parametrofactuprincipal.getcon_centro_costos());	
				parametrofactuprincipalAux.setcon_unidades(this.parametrofactuprincipal.getcon_unidades());	
				parametrofactuprincipalAux.setcon_cupo_disponible(this.parametrofactuprincipal.getcon_cupo_disponible());	
				parametrofactuprincipalAux.setcon_forma_pago(this.parametrofactuprincipal.getcon_forma_pago());	
				parametrofactuprincipalAux.setcon_envio_mail(this.parametrofactuprincipal.getcon_envio_mail());	
				parametrofactuprincipalAux.setcon_autorizar_proforma(this.parametrofactuprincipal.getcon_autorizar_proforma());	
				parametrofactuprincipalAux.setcon_bloqueo_pedido(this.parametrofactuprincipal.getcon_bloqueo_pedido());	
				parametrofactuprincipalAux.setcon_control_anticipo(this.parametrofactuprincipal.getcon_control_anticipo());	
				parametrofactuprincipalAux.setcon_factura_auto(this.parametrofactuprincipal.getcon_factura_auto());	
				parametrofactuprincipalAux.setcon_grabar_valor_cero(this.parametrofactuprincipal.getcon_grabar_valor_cero());	
				parametrofactuprincipalAux.setcon_agregar_item(this.parametrofactuprincipal.getcon_agregar_item());	
				parametrofactuprincipalAux.setnumero_copias(this.parametrofactuprincipal.getnumero_copias());	
				parametrofactuprincipalAux.setleyenda(this.parametrofactuprincipal.getleyenda());	
				parametrofactuprincipalAux.setcon_sin_factura(this.parametrofactuprincipal.getcon_sin_factura());	
				parametrofactuprincipalAux.setid_cuenta_contable_flete_venta(this.parametrofactuprincipal.getid_cuenta_contable_flete_venta());	
				
				if(this.parametrofactuprincipal.getid_cuenta_contable_otro_cargo()!=null && this.parametrofactuprincipal.getid_cuenta_contable_otro_cargo()>0L) {
					parametrofactuprincipalAux.setid_cuenta_contable_otro_cargo(this.parametrofactuprincipal.getid_cuenta_contable_otro_cargo());
				} else {
					parametrofactuprincipalAux.setid_cuenta_contable_otro_cargo(null);
				}	
				parametrofactuprincipalAux.setid_cuenta_contable_finan(this.parametrofactuprincipal.getid_cuenta_contable_finan());	
				parametrofactuprincipalAux.setid_cuenta_contable_boni(this.parametrofactuprincipal.getid_cuenta_contable_boni());	
				parametrofactuprincipalAux.setid_cuenta_contable_boni_devol(this.parametrofactuprincipal.getid_cuenta_contable_boni_devol());	
				parametrofactuprincipalAux.setid_cuenta_contable_ice(this.parametrofactuprincipal.getid_cuenta_contable_ice());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(parametrofactuprincipalAux,parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrofactuprincipalAux,parametrofactuprincipals);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.parametrofactuprincipalSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalLogic.saveParametroFactuPrincipals();//WithConnection
						//parametrofactuprincipalLogic.getSetVersionRowParametroFactuPrincipals();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.parametrofactuprincipal,parametrofactuprincipalAux);
					
					this.refrescarForeignKeysDescripcionesParametroFactuPrincipal();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.parametrofactuprincipalSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						if(!this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								parametrofactuprincipalLogic.saveParametroFactuPrincipalRelaciones(parametrofactuprincipalAux);//WithConnection
								//parametrofactuprincipalLogic.getSetVersionRowParametroFactuPrincipals();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.parametrofactuprincipal,parametrofactuprincipalAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						} else {
							
							
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.parametrofactuprincipalSessionBean.getEstaModoGuardarRelaciones() 
									|| this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(parametrofactuprincipalAux,parametrofactuprincipalLogic.getParametroFactuPrincipals());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(parametrofactuprincipalAux,parametrofactuprincipals);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.parametrofactuprincipal,parametrofactuprincipalAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				parametrofactuprincipalAux=new  ParametroFactuPrincipal();
				
				parametrofactuprincipalAux.setIsNew(false);
				parametrofactuprincipalAux.setIsChanged(false);
				
				parametrofactuprincipalAux.setIsDeleted(true);
				
				parametrofactuprincipalAux.setId(this.parametrofactuprincipal.getId());	
				parametrofactuprincipalAux.setVersionRow(this.parametrofactuprincipal.getVersionRow());	
				parametrofactuprincipalAux.setid_empresa(this.parametrofactuprincipal.getid_empresa());	
				parametrofactuprincipalAux.setid_sucursal(this.parametrofactuprincipal.getid_sucursal());	
				parametrofactuprincipalAux.setid_tipo_param_factu_descuento(this.parametrofactuprincipal.getid_tipo_param_factu_descuento());	
				parametrofactuprincipalAux.setid_tipo_param_factu_listado_cliente(this.parametrofactuprincipal.getid_tipo_param_factu_listado_cliente());	
				parametrofactuprincipalAux.setid_tipo_param_factu_secuencia_trabajo(this.parametrofactuprincipal.getid_tipo_param_factu_secuencia_trabajo());	
				parametrofactuprincipalAux.setid_tipo_documento_factura(this.parametrofactuprincipal.getid_tipo_documento_factura());	
				parametrofactuprincipalAux.setid_tipo_documento_nota_credito(this.parametrofactuprincipal.getid_tipo_documento_nota_credito());	
				parametrofactuprincipalAux.setid_tipo_documento_nota_debito(this.parametrofactuprincipal.getid_tipo_documento_nota_debito());	
				parametrofactuprincipalAux.seten_linea(this.parametrofactuprincipal.geten_linea());	
				parametrofactuprincipalAux.setcon_cuenta_tipo_cliente(this.parametrofactuprincipal.getcon_cuenta_tipo_cliente());	
				parametrofactuprincipalAux.setcon_cliente_impuesto(this.parametrofactuprincipal.getcon_cliente_impuesto());	
				parametrofactuprincipalAux.setid_libro_contable(this.parametrofactuprincipal.getid_libro_contable());	
				parametrofactuprincipalAux.setid_moneda(this.parametrofactuprincipal.getid_moneda());	
				parametrofactuprincipalAux.setcon_impresion(this.parametrofactuprincipal.getcon_impresion());	
				parametrofactuprincipalAux.setid_formato(this.parametrofactuprincipal.getid_formato());	
				parametrofactuprincipalAux.setcon_secuencial_usuario(this.parametrofactuprincipal.getcon_secuencial_usuario());	
				parametrofactuprincipalAux.setcon_secuencial_editable(this.parametrofactuprincipal.getcon_secuencial_editable());	
				parametrofactuprincipalAux.setcon_precio_por_cliente(this.parametrofactuprincipal.getcon_precio_por_cliente());	
				parametrofactuprincipalAux.setcon_modificar_precio(this.parametrofactuprincipal.getcon_modificar_precio());	
				parametrofactuprincipalAux.setcon_modificar_servicio(this.parametrofactuprincipal.getcon_modificar_servicio());	
				parametrofactuprincipalAux.setcon_cambiar_unidad(this.parametrofactuprincipal.getcon_cambiar_unidad());	
				parametrofactuprincipalAux.setnumero_decimales_unidad(this.parametrofactuprincipal.getnumero_decimales_unidad());	
				parametrofactuprincipalAux.setcon_activar_serie(this.parametrofactuprincipal.getcon_activar_serie());	
				parametrofactuprincipalAux.setcon_activar_lote(this.parametrofactuprincipal.getcon_activar_lote());	
				parametrofactuprincipalAux.setcon_activar_multi_empresa(this.parametrofactuprincipal.getcon_activar_multi_empresa());	
				parametrofactuprincipalAux.setcon_centro_costos(this.parametrofactuprincipal.getcon_centro_costos());	
				parametrofactuprincipalAux.setcon_unidades(this.parametrofactuprincipal.getcon_unidades());	
				parametrofactuprincipalAux.setcon_cupo_disponible(this.parametrofactuprincipal.getcon_cupo_disponible());	
				parametrofactuprincipalAux.setcon_forma_pago(this.parametrofactuprincipal.getcon_forma_pago());	
				parametrofactuprincipalAux.setcon_envio_mail(this.parametrofactuprincipal.getcon_envio_mail());	
				parametrofactuprincipalAux.setcon_autorizar_proforma(this.parametrofactuprincipal.getcon_autorizar_proforma());	
				parametrofactuprincipalAux.setcon_bloqueo_pedido(this.parametrofactuprincipal.getcon_bloqueo_pedido());	
				parametrofactuprincipalAux.setcon_control_anticipo(this.parametrofactuprincipal.getcon_control_anticipo());	
				parametrofactuprincipalAux.setcon_factura_auto(this.parametrofactuprincipal.getcon_factura_auto());	
				parametrofactuprincipalAux.setcon_grabar_valor_cero(this.parametrofactuprincipal.getcon_grabar_valor_cero());	
				parametrofactuprincipalAux.setcon_agregar_item(this.parametrofactuprincipal.getcon_agregar_item());	
				parametrofactuprincipalAux.setnumero_copias(this.parametrofactuprincipal.getnumero_copias());	
				parametrofactuprincipalAux.setleyenda(this.parametrofactuprincipal.getleyenda());	
				parametrofactuprincipalAux.setcon_sin_factura(this.parametrofactuprincipal.getcon_sin_factura());	
				parametrofactuprincipalAux.setid_cuenta_contable_flete_venta(this.parametrofactuprincipal.getid_cuenta_contable_flete_venta());	
				
				if(this.parametrofactuprincipal.getid_cuenta_contable_otro_cargo()!=null && this.parametrofactuprincipal.getid_cuenta_contable_otro_cargo()>0L) {
					parametrofactuprincipalAux.setid_cuenta_contable_otro_cargo(this.parametrofactuprincipal.getid_cuenta_contable_otro_cargo());
				} else {
					parametrofactuprincipalAux.setid_cuenta_contable_otro_cargo(null);
				}	
				parametrofactuprincipalAux.setid_cuenta_contable_finan(this.parametrofactuprincipal.getid_cuenta_contable_finan());	
				parametrofactuprincipalAux.setid_cuenta_contable_boni(this.parametrofactuprincipal.getid_cuenta_contable_boni());	
				parametrofactuprincipalAux.setid_cuenta_contable_boni_devol(this.parametrofactuprincipal.getid_cuenta_contable_boni_devol());	
				parametrofactuprincipalAux.setid_cuenta_contable_ice(this.parametrofactuprincipal.getid_cuenta_contable_ice());	
				
				if(this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.parametrofactuprincipalAux.getId()>=0) {	
						this.parametrofactuprincipalsEliminados.add(parametrofactuprincipalAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(parametrofactuprincipalAux,parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrofactuprincipalAux,parametrofactuprincipals);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.parametrofactuprincipalSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalLogic.saveParametroFactuPrincipals();//WithConnection
						//parametrofactuprincipalLogic.getSetVersionRowParametroFactuPrincipals();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.parametrofactuprincipalSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
						}
						//ARCHITECTURE
						
						
						if(!this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								parametrofactuprincipalLogic.saveParametroFactuPrincipalRelaciones(parametrofactuprincipalAux);//WithConnection
								//parametrofactuprincipalLogic.getSetVersionRowParametroFactuPrincipals();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							}
							//ARCHITECTURE
						}
					}  else {
							
						
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.parametrofactuprincipalSessionBean.getEstaModoGuardarRelaciones() 
								|| this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(parametrofactuprincipalAux,parametrofactuprincipalLogic.getParametroFactuPrincipals());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(parametrofactuprincipalAux,parametrofactuprincipals);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getParametroFactuPrincipals().addAll(this.parametrofactuprincipalsEliminados);
					
					parametrofactuprincipalLogic.saveParametroFactuPrincipals();//WithConnection
					//parametrofactuprincipalLogic.getSetVersionRowParametroFactuPrincipals();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesParametroFactuPrincipal();
				
				this.parametrofactuprincipalsEliminados= new ArrayList<ParametroFactuPrincipal>();		
			}
			
			if(this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Parametro Principal  GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Parametro Principal ",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.parametrofactuprincipal=parametrofactuprincipalAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessParametroFactuPrincipal();
      	}
		
	}	
	
	public void actualizarRelaciones(ParametroFactuPrincipal parametrofactuprincipalLocal) throws Exception {
		
		if(this.parametrofactuprincipalSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
			
			} else {
				
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(ParametroFactuPrincipal parametrofactuprincipalLocal) throws Exception {	
		if(this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				parametrofactuprincipalLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				parametrofactuprincipalLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoParamFactuDescuentoDetalleFormJInternalFrame.class)) {
				TipoParamFactuDescuentoBeanSwingJInternalFrame tipoparamfactudescuentoBeanSwingJInternalFrameLocal=(TipoParamFactuDescuentoBeanSwingJInternalFrame) ((TipoParamFactuDescuentoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoparamfactudescuentoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoParamFactuDescuento(tipoparamfactudescuentoBeanSwingJInternalFrameLocal.gettipoparamfactudescuento(),true);
				tipoparamfactudescuentoBeanSwingJInternalFrameLocal.actualizarLista(tipoparamfactudescuentoBeanSwingJInternalFrameLocal.tipoparamfactudescuento,this.tipoparamfactudescuentosForeignKey);

				tipoparamfactudescuentoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoparamfactudescuentoBeanSwingJInternalFrameLocal.tipoparamfactudescuento);

				parametrofactuprincipalLocal.setTipoParamFactuDescuento(tipoparamfactudescuentoBeanSwingJInternalFrameLocal.tipoparamfactudescuento);

				this.addItemDefectoCombosForeignKeyTipoParamFactuDescuento();
				this.cargarCombosFrameTipoParamFactuDescuentosForeignKey("Formulario");
				this.setActualTipoParamFactuDescuentoForeignKey(tipoparamfactudescuentoBeanSwingJInternalFrameLocal.tipoparamfactudescuento.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoParamFactuListadoClienteDetalleFormJInternalFrame.class)) {
				TipoParamFactuListadoClienteBeanSwingJInternalFrame tipoparamfactulistadoclienteBeanSwingJInternalFrameLocal=(TipoParamFactuListadoClienteBeanSwingJInternalFrame) ((TipoParamFactuListadoClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoparamfactulistadoclienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoParamFactuListadoCliente(tipoparamfactulistadoclienteBeanSwingJInternalFrameLocal.gettipoparamfactulistadocliente(),true);
				tipoparamfactulistadoclienteBeanSwingJInternalFrameLocal.actualizarLista(tipoparamfactulistadoclienteBeanSwingJInternalFrameLocal.tipoparamfactulistadocliente,this.tipoparamfactulistadoclientesForeignKey);

				tipoparamfactulistadoclienteBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoparamfactulistadoclienteBeanSwingJInternalFrameLocal.tipoparamfactulistadocliente);

				parametrofactuprincipalLocal.setTipoParamFactuListadoCliente(tipoparamfactulistadoclienteBeanSwingJInternalFrameLocal.tipoparamfactulistadocliente);

				this.addItemDefectoCombosForeignKeyTipoParamFactuListadoCliente();
				this.cargarCombosFrameTipoParamFactuListadoClientesForeignKey("Formulario");
				this.setActualTipoParamFactuListadoClienteForeignKey(tipoparamfactulistadoclienteBeanSwingJInternalFrameLocal.tipoparamfactulistadocliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoParamFactuSecuenciaTrabajoDetalleFormJInternalFrame.class)) {
				TipoParamFactuSecuenciaTrabajoBeanSwingJInternalFrame tipoparamfactusecuenciatrabajoBeanSwingJInternalFrameLocal=(TipoParamFactuSecuenciaTrabajoBeanSwingJInternalFrame) ((TipoParamFactuSecuenciaTrabajoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoparamfactusecuenciatrabajoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoParamFactuSecuenciaTrabajo(tipoparamfactusecuenciatrabajoBeanSwingJInternalFrameLocal.gettipoparamfactusecuenciatrabajo(),true);
				tipoparamfactusecuenciatrabajoBeanSwingJInternalFrameLocal.actualizarLista(tipoparamfactusecuenciatrabajoBeanSwingJInternalFrameLocal.tipoparamfactusecuenciatrabajo,this.tipoparamfactusecuenciatrabajosForeignKey);

				tipoparamfactusecuenciatrabajoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoparamfactusecuenciatrabajoBeanSwingJInternalFrameLocal.tipoparamfactusecuenciatrabajo);

				parametrofactuprincipalLocal.setTipoParamFactuSecuenciaTrabajo(tipoparamfactusecuenciatrabajoBeanSwingJInternalFrameLocal.tipoparamfactusecuenciatrabajo);

				this.addItemDefectoCombosForeignKeyTipoParamFactuSecuenciaTrabajo();
				this.cargarCombosFrameTipoParamFactuSecuenciaTrabajosForeignKey("Formulario");
				this.setActualTipoParamFactuSecuenciaTrabajoForeignKey(tipoparamfactusecuenciatrabajoBeanSwingJInternalFrameLocal.tipoparamfactusecuenciatrabajo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoDocumentoDetalleFormJInternalFrame.class)) {
				TipoDocumentoBeanSwingJInternalFrame tipodocumentofacturaBeanSwingJInternalFrameLocal=(TipoDocumentoBeanSwingJInternalFrame) ((TipoDocumentoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipodocumentofacturaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoDocumento(tipodocumentofacturaBeanSwingJInternalFrameLocal.gettipodocumento(),true);
				tipodocumentofacturaBeanSwingJInternalFrameLocal.actualizarLista(tipodocumentofacturaBeanSwingJInternalFrameLocal.tipodocumento,this.tipodocumentofacturasForeignKey);

				tipodocumentofacturaBeanSwingJInternalFrameLocal.actualizarRelaciones(tipodocumentofacturaBeanSwingJInternalFrameLocal.tipodocumento);

				parametrofactuprincipalLocal.setTipoDocumentoFactura(tipodocumentofacturaBeanSwingJInternalFrameLocal.tipodocumento);

				this.addItemDefectoCombosForeignKeyTipoDocumentoFactura();
				this.cargarCombosFrameTipoDocumentoFacturasForeignKey("Formulario");
				this.setActualTipoDocumentoFacturaForeignKey(tipodocumentofacturaBeanSwingJInternalFrameLocal.tipodocumento.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoDocumentoDetalleFormJInternalFrame.class)) {
				TipoDocumentoBeanSwingJInternalFrame tipodocumentonotacreditoBeanSwingJInternalFrameLocal=(TipoDocumentoBeanSwingJInternalFrame) ((TipoDocumentoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipodocumentonotacreditoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoDocumento(tipodocumentonotacreditoBeanSwingJInternalFrameLocal.gettipodocumento(),true);
				tipodocumentonotacreditoBeanSwingJInternalFrameLocal.actualizarLista(tipodocumentonotacreditoBeanSwingJInternalFrameLocal.tipodocumento,this.tipodocumentonotacreditosForeignKey);

				tipodocumentonotacreditoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipodocumentonotacreditoBeanSwingJInternalFrameLocal.tipodocumento);

				parametrofactuprincipalLocal.setTipoDocumentoNotaCredito(tipodocumentonotacreditoBeanSwingJInternalFrameLocal.tipodocumento);

				this.addItemDefectoCombosForeignKeyTipoDocumentoNotaCredito();
				this.cargarCombosFrameTipoDocumentoNotaCreditosForeignKey("Formulario");
				this.setActualTipoDocumentoNotaCreditoForeignKey(tipodocumentonotacreditoBeanSwingJInternalFrameLocal.tipodocumento.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoDocumentoDetalleFormJInternalFrame.class)) {
				TipoDocumentoBeanSwingJInternalFrame tipodocumentonotadebitoBeanSwingJInternalFrameLocal=(TipoDocumentoBeanSwingJInternalFrame) ((TipoDocumentoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipodocumentonotadebitoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoDocumento(tipodocumentonotadebitoBeanSwingJInternalFrameLocal.gettipodocumento(),true);
				tipodocumentonotadebitoBeanSwingJInternalFrameLocal.actualizarLista(tipodocumentonotadebitoBeanSwingJInternalFrameLocal.tipodocumento,this.tipodocumentonotadebitosForeignKey);

				tipodocumentonotadebitoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipodocumentonotadebitoBeanSwingJInternalFrameLocal.tipodocumento);

				parametrofactuprincipalLocal.setTipoDocumentoNotaDebito(tipodocumentonotadebitoBeanSwingJInternalFrameLocal.tipodocumento);

				this.addItemDefectoCombosForeignKeyTipoDocumentoNotaDebito();
				this.cargarCombosFrameTipoDocumentoNotaDebitosForeignKey("Formulario");
				this.setActualTipoDocumentoNotaDebitoForeignKey(tipodocumentonotadebitoBeanSwingJInternalFrameLocal.tipodocumento.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(LibroContableDetalleFormJInternalFrame.class)) {
				LibroContableBeanSwingJInternalFrame librocontableBeanSwingJInternalFrameLocal=(LibroContableBeanSwingJInternalFrame) ((LibroContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				librocontableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoLibroContable(librocontableBeanSwingJInternalFrameLocal.getlibrocontable(),true);
				librocontableBeanSwingJInternalFrameLocal.actualizarLista(librocontableBeanSwingJInternalFrameLocal.librocontable,this.librocontablesForeignKey);

				librocontableBeanSwingJInternalFrameLocal.actualizarRelaciones(librocontableBeanSwingJInternalFrameLocal.librocontable);

				parametrofactuprincipalLocal.setLibroContable(librocontableBeanSwingJInternalFrameLocal.librocontable);

				this.addItemDefectoCombosForeignKeyLibroContable();
				this.cargarCombosFrameLibroContablesForeignKey("Formulario");
				this.setActualLibroContableForeignKey(librocontableBeanSwingJInternalFrameLocal.librocontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MonedaDetalleFormJInternalFrame.class)) {
				MonedaBeanSwingJInternalFrame monedaBeanSwingJInternalFrameLocal=(MonedaBeanSwingJInternalFrame) ((MonedaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				monedaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMoneda(monedaBeanSwingJInternalFrameLocal.getmoneda(),true);
				monedaBeanSwingJInternalFrameLocal.actualizarLista(monedaBeanSwingJInternalFrameLocal.moneda,this.monedasForeignKey);

				monedaBeanSwingJInternalFrameLocal.actualizarRelaciones(monedaBeanSwingJInternalFrameLocal.moneda);

				parametrofactuprincipalLocal.setMoneda(monedaBeanSwingJInternalFrameLocal.moneda);

				this.addItemDefectoCombosForeignKeyMoneda();
				this.cargarCombosFrameMonedasForeignKey("Formulario");
				this.setActualMonedaForeignKey(monedaBeanSwingJInternalFrameLocal.moneda.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FormatoDetalleFormJInternalFrame.class)) {
				FormatoBeanSwingJInternalFrame formatoBeanSwingJInternalFrameLocal=(FormatoBeanSwingJInternalFrame) ((FormatoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				formatoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFormato(formatoBeanSwingJInternalFrameLocal.getformato(),true);
				formatoBeanSwingJInternalFrameLocal.actualizarLista(formatoBeanSwingJInternalFrameLocal.formato,this.formatosForeignKey);

				formatoBeanSwingJInternalFrameLocal.actualizarRelaciones(formatoBeanSwingJInternalFrameLocal.formato);

				parametrofactuprincipalLocal.setFormato(formatoBeanSwingJInternalFrameLocal.formato);

				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey("Formulario");
				this.setActualFormatoForeignKey(formatoBeanSwingJInternalFrameLocal.formato.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontablefleteventaBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontablefleteventaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontablefleteventaBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontablefleteventaBeanSwingJInternalFrameLocal.actualizarLista(cuentacontablefleteventaBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablefleteventasForeignKey);

				cuentacontablefleteventaBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontablefleteventaBeanSwingJInternalFrameLocal.cuentacontable);

				parametrofactuprincipalLocal.setCuentaContableFleteVenta(cuentacontablefleteventaBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableFleteVenta();
				this.cargarCombosFrameCuentaContableFleteVentasForeignKey("Formulario");
				this.setActualCuentaContableFleteVentaForeignKey(cuentacontablefleteventaBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableotrocargoBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableotrocargoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableotrocargoBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableotrocargoBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableotrocargoBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableotrocargosForeignKey);

				cuentacontableotrocargoBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableotrocargoBeanSwingJInternalFrameLocal.cuentacontable);

				parametrofactuprincipalLocal.setCuentaContableOtroCargo(cuentacontableotrocargoBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableOtroCargo();
				this.cargarCombosFrameCuentaContableOtroCargosForeignKey("Formulario");
				this.setActualCuentaContableOtroCargoForeignKey(cuentacontableotrocargoBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontablefinanBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontablefinanBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontablefinanBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontablefinanBeanSwingJInternalFrameLocal.actualizarLista(cuentacontablefinanBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablefinansForeignKey);

				cuentacontablefinanBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontablefinanBeanSwingJInternalFrameLocal.cuentacontable);

				parametrofactuprincipalLocal.setCuentaContableFinan(cuentacontablefinanBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableFinan();
				this.cargarCombosFrameCuentaContableFinansForeignKey("Formulario");
				this.setActualCuentaContableFinanForeignKey(cuentacontablefinanBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableboniBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableboniBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableboniBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableboniBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableboniBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablebonisForeignKey);

				cuentacontableboniBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableboniBeanSwingJInternalFrameLocal.cuentacontable);

				parametrofactuprincipalLocal.setCuentaContableBoni(cuentacontableboniBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableBoni();
				this.cargarCombosFrameCuentaContableBonisForeignKey("Formulario");
				this.setActualCuentaContableBoniForeignKey(cuentacontableboniBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontablebonidevolBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontablebonidevolBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontablebonidevolBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontablebonidevolBeanSwingJInternalFrameLocal.actualizarLista(cuentacontablebonidevolBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablebonidevolsForeignKey);

				cuentacontablebonidevolBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontablebonidevolBeanSwingJInternalFrameLocal.cuentacontable);

				parametrofactuprincipalLocal.setCuentaContableBoniDevol(cuentacontablebonidevolBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableBoniDevol();
				this.cargarCombosFrameCuentaContableBoniDevolsForeignKey("Formulario");
				this.setActualCuentaContableBoniDevolForeignKey(cuentacontablebonidevolBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableiceBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableiceBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableiceBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableiceBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableiceBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontableicesForeignKey);

				cuentacontableiceBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableiceBeanSwingJInternalFrameLocal.cuentacontable);

				parametrofactuprincipalLocal.setCuentaContableIce(cuentacontableiceBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContableIce();
				this.cargarCombosFrameCuentaContableIcesForeignKey("Formulario");
				this.setActualCuentaContableIceForeignKey(cuentacontableiceBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarParametroFactuPrincipalActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = parametrofactuprincipalValidator.getInvalidValues(this.parametrofactuprincipal);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(ParametroFactuPrincipal parametrofactuprincipal,List<ParametroFactuPrincipal> parametrofactuprincipals) throws Exception {
		try	{		
			ParametroFactuPrincipalConstantesFunciones.actualizarLista(parametrofactuprincipal,parametrofactuprincipals,this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(ParametroFactuPrincipal parametrofactuprincipal,List<ParametroFactuPrincipal> parametrofactuprincipals) throws Exception {
		try	{			
			ParametroFactuPrincipalConstantesFunciones.actualizarSelectedLista(parametrofactuprincipal,parametrofactuprincipals);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<ParametroFactuPrincipal> parametrofactuprincipalsLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				parametrofactuprincipalsLocal=this.parametrofactuprincipalLogic.getParametroFactuPrincipals();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				parametrofactuprincipalsLocal=this.parametrofactuprincipals;
			}
			//ARCHITECTURE
		
			for(ParametroFactuPrincipal parametrofactuprincipalLocal:parametrofactuprincipalsLocal) {
				if(this.permiteMantenimiento(parametrofactuprincipalLocal) && parametrofactuprincipalLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+ParametroFactuPrincipalConstantesFunciones.getParametroFactuPrincipalLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_empresaParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_sucursalParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.IDTIPOPARAMFACTUDESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_tipo_param_factu_descuentoParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.IDTIPOPARAMFACTULISTADOCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_tipo_param_factu_listado_clienteParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.IDTIPOPARAMFACTUSECUENCIATRABAJO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.IDTIPODOCUMENTOFACTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_tipo_documento_facturaParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.IDTIPODOCUMENTONOTACREDITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_tipo_documento_nota_creditoParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.IDTIPODOCUMENTONOTADEBITO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_tipo_documento_nota_debitoParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.ENLINEA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelen_lineaParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONCUENTATIPOCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_cuenta_tipo_clienteParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONCLIENTEIMPUESTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_cliente_impuestoParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.IDLIBROCONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_libro_contableParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.IDMONEDA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_monedaParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONIMPRESION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_impresionParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.IDFORMATO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_formatoParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONSECUENCIALUSUARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_secuencial_usuarioParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONSECUENCIALEDITABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_secuencial_editableParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONPRECIOPORCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_precio_por_clienteParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONMODIFICARPRECIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_modificar_precioParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONMODIFICARSERVICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_modificar_servicioParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONCAMBIARUNIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_cambiar_unidadParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.NUMERODECIMALESUNIDAD)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelnumero_decimales_unidadParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONACTIVARSERIE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_activar_serieParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONACTIVARLOTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_activar_loteParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONACTIVARMULTIEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_activar_multi_empresaParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONCENTROCOSTOS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_centro_costosParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONUNIDADES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_unidadesParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONCUPODISPONIBLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_cupo_disponibleParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONFORMAPAGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_forma_pagoParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONENVIOMAIL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_envio_mailParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONAUTORIZARPROFORMA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_autorizar_proformaParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONBLOQUEOPEDIDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_bloqueo_pedidoParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONCONTROLANTICIPO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_control_anticipoParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONFACTURAAUTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_factura_autoParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONGRABARVALORCERO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_grabar_valor_ceroParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONAGREGARITEM)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_agregar_itemParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.NUMEROCOPIAS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelnumero_copiasParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.LEYENDA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelleyendaParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.CONSINFACTURA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_sin_facturaParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.IDCUENTACONTABLEFLETEVENTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_cuenta_contable_flete_ventaParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.IDCUENTACONTABLEOTROCARGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_cuenta_contable_otro_cargoParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.IDCUENTACONTABLEFINAN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_cuenta_contable_finanParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.IDCUENTACONTABLEBONI)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_cuenta_contable_boniParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.IDCUENTACONTABLEBONIDEVOL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_cuenta_contable_boni_devolParametroFactuPrincipal,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(ParametroFactuPrincipalConstantesFunciones.IDCUENTACONTABLEICE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_cuenta_contable_iceParametroFactuPrincipal,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_empresaParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_sucursalParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_tipo_param_factu_descuentoParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_tipo_param_factu_listado_clienteParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_tipo_documento_facturaParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_tipo_documento_nota_creditoParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_tipo_documento_nota_debitoParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelen_lineaParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_cuenta_tipo_clienteParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_cliente_impuestoParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_libro_contableParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_monedaParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_impresionParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_formatoParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_secuencial_usuarioParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_secuencial_editableParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_precio_por_clienteParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_modificar_precioParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_modificar_servicioParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_cambiar_unidadParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelnumero_decimales_unidadParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_activar_serieParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_activar_loteParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_activar_multi_empresaParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_centro_costosParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_unidadesParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_cupo_disponibleParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_forma_pagoParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_envio_mailParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_autorizar_proformaParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_bloqueo_pedidoParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_control_anticipoParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_factura_autoParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_grabar_valor_ceroParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_agregar_itemParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelnumero_copiasParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelleyendaParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_sin_facturaParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_cuenta_contable_flete_ventaParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_cuenta_contable_otro_cargoParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_cuenta_contable_finanParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_cuenta_contable_boniParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_cuenta_contable_boni_devolParametroFactuPrincipal,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelid_cuenta_contable_iceParametroFactuPrincipal,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoParametroFactuPrincipal--;	
		
		
		this.parametrofactuprincipalAux=new ParametroFactuPrincipal();
		
		this.parametrofactuprincipalAux.setId(this.iIdNuevoParametroFactuPrincipal);
		this.parametrofactuprincipalAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.parametrofactuprincipalLogic.getParametroFactuPrincipals().add(this.parametrofactuprincipalAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.parametrofactuprincipals.add(this.parametrofactuprincipalAux);
		}
		//ARCHITECTURE
		
		this.parametrofactuprincipal=this.parametrofactuprincipalAux;
		
		if(ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioParametroFactuPrincipal(this.parametrofactuprincipal);
			this.setVariablesObjetoActualToFormularioForeignKeyParametroFactuPrincipal(this.parametrofactuprincipal);
		}
				
		//this.setDefaultControlesParametroFactuPrincipal();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyParametroFactuPrincipal();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyParametroFactuPrincipal();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyParametroFactuPrincipal();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipalBean,this.parametrofactuprincipal,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.parametrofactuprincipalSessionBean.getConGuardarRelaciones()) {
			classes=ParametroFactuPrincipalConstantesFunciones.getClassesRelationshipsOfParametroFactuPrincipal(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.parametrofactuprincipalReturnGeneral=parametrofactuprincipalLogic.procesarEventosParametroFactuPrincipalsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrofactuprincipalLogic.getParametroFactuPrincipals(),this.parametrofactuprincipal,this.parametrofactuprincipalParameterGeneral,this.isEsNuevoParametroFactuPrincipal,classes);//this.parametrofactuprincipalLogic.getParametroFactuPrincipal()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanParametroFactuPrincipal(this.parametrofactuprincipalReturnGeneral,this.parametrofactuprincipalBean,false);
		
		if(this.parametrofactuprincipalReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyParametroFactuPrincipal(this.parametrofactuprincipalReturnGeneral.getParametroFactuPrincipal());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioParametroFactuPrincipal(this.parametrofactuprincipalReturnGeneral.getParametroFactuPrincipal());
		}
		
		if(this.parametrofactuprincipalReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioParametroFactuPrincipal(this.parametrofactuprincipalReturnGeneral.getParametroFactuPrincipal(),classes);//this.parametrofactuprincipalBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyParametroFactuPrincipal();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyParametroFactuPrincipal();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.RecargarFormParametroFactuPrincipal(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingParametroFactuPrincipal(false);
						
			if(parametrofactuprincipalSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
								
			}
				
			//SI ES MANUAL
			if(ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroFactuPrincipal();
			}
			
			this.actualizarVisualTableDatosParametroFactuPrincipal();
			
			this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(this.getIndiceNuevoParametroFactuPrincipal(), this.getIndiceNuevoParametroFactuPrincipal());
			
			this.seleccionarFilaTablaParametroFactuPrincipalActual();
						
			this.actualizarEstadoCeldasBotonesParametroFactuPrincipal("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesParametroFactuPrincipal(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxen_lineaParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activaren_lineaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cuenta_tipo_clienteParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_cuenta_tipo_clienteParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cliente_impuestoParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_cliente_impuestoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_impresionParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_impresionParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_secuencial_usuarioParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_secuencial_usuarioParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_secuencial_editableParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_secuencial_editableParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_precio_por_clienteParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_precio_por_clienteParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_modificar_precioParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_modificar_precioParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_modificar_servicioParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_modificar_servicioParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cambiar_unidadParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_cambiar_unidadParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextFieldnumero_decimales_unidadParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarnumero_decimales_unidadParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_serieParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_activar_serieParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_loteParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_activar_loteParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_multi_empresaParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_activar_multi_empresaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_centro_costosParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_centro_costosParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_unidadesParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_unidadesParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cupo_disponibleParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_cupo_disponibleParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_forma_pagoParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_forma_pagoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_envio_mailParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_envio_mailParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_autorizar_proformaParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_autorizar_proformaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_bloqueo_pedidoParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_bloqueo_pedidoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_control_anticipoParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_control_anticipoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_factura_autoParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_factura_autoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_grabar_valor_ceroParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_grabar_valor_ceroParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_agregar_itemParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_agregar_itemParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextFieldnumero_copiasParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarnumero_copiasParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextArealeyendaParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarleyendaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_sin_facturaParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarcon_sin_facturaParametroFactuPrincipal);	
		//
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_empresaParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarid_empresaParametroFactuPrincipal);//
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_sucursalParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarid_sucursalParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarid_tipo_param_factu_descuentoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarid_tipo_param_factu_listado_clienteParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_facturaParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarid_tipo_documento_facturaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarid_tipo_documento_nota_creditoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarid_tipo_documento_nota_debitoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_libro_contableParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarid_libro_contableParametroFactuPrincipal);//
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_monedaParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarid_monedaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_formatoParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarid_formatoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_flete_ventaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_otro_cargoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_finanParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_finanParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boniParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_boniParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_boni_devolParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_iceParametroFactuPrincipal.setEnabled(isHabilitar && this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_iceParametroFactuPrincipal);
	};
	
	public void setDefaultControlesParametroFactuPrincipal() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoParametroFactuPrincipal(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.parametrofactuprincipalSessionBean.setConGuardarRelaciones(true);			
			this.parametrofactuprincipalSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jTabbedPaneRelacionesParametroFactuPrincipal.setVisible(true);
			
					
		} else {
			//this.parametrofactuprincipalSessionBean.setConGuardarRelaciones(false);			
			this.parametrofactuprincipalSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jTabbedPaneRelacionesParametroFactuPrincipal.setVisible(false);
			
			
		}
	};
	
	public int getIndiceNuevoParametroFactuPrincipal() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroFactuPrincipal parametrofactuprincipalAux:this.parametrofactuprincipalLogic.getParametroFactuPrincipals()) {
				if(parametrofactuprincipalAux.getId().equals(this.iIdNuevoParametroFactuPrincipal)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroFactuPrincipal parametrofactuprincipalAux:this.parametrofactuprincipals) {
				if(parametrofactuprincipalAux.getId().equals(this.iIdNuevoParametroFactuPrincipal)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualParametroFactuPrincipal(ParametroFactuPrincipal parametrofactuprincipal,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroFactuPrincipal parametrofactuprincipalAux:this.parametrofactuprincipalLogic.getParametroFactuPrincipals()) {
				if(parametrofactuprincipalAux.getId().equals(parametrofactuprincipal.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroFactuPrincipal parametrofactuprincipalAux:this.parametrofactuprincipals) {
				if(parametrofactuprincipalAux.getId().equals(parametrofactuprincipal.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalParametroFactuPrincipal(ParametroFactuPrincipal parametrofactuprincipalOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroFactuPrincipal parametrofactuprincipalAux:this.parametrofactuprincipalLogic.getParametroFactuPrincipals()) {
				if(parametrofactuprincipalAux.getParametroFactuPrincipalOriginal().getId().equals(parametrofactuprincipalOriginal.getId())) {
					existe=true;
					parametrofactuprincipalOriginal.setId(parametrofactuprincipalAux.getId());
					parametrofactuprincipalOriginal.setVersionRow(parametrofactuprincipalAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroFactuPrincipal parametrofactuprincipalAux:this.parametrofactuprincipals) {
				if(parametrofactuprincipalAux.getParametroFactuPrincipalOriginal().getId().equals(parametrofactuprincipalOriginal.getId())) {
					existe=true;
					parametrofactuprincipalOriginal.setId(parametrofactuprincipalAux.getId());
					parametrofactuprincipalOriginal.setVersionRow(parametrofactuprincipalAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosParametroFactuPrincipal(Boolean esParaCancelar) throws Exception {
		parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
		parametrofactuprincipalAux=new ParametroFactuPrincipal();
		
		if(!this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ParametroFactuPrincipal parametrofactuprincipalAux:this.parametrofactuprincipalLogic.getParametroFactuPrincipals()) {
					if(parametrofactuprincipalAux.getId()<0) {
						parametrofactuprincipalsAux.add(parametrofactuprincipalAux);
					}		
				}
				this.iIdNuevoParametroFactuPrincipal=0L;
				this.parametrofactuprincipalLogic.getParametroFactuPrincipals().removeAll(parametrofactuprincipalsAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroFactuPrincipal parametrofactuprincipalAux:this.parametrofactuprincipals) {
					if(parametrofactuprincipalAux.getId()<0) {
						parametrofactuprincipalsAux.add(parametrofactuprincipalAux);
					}		
				}
				this.iIdNuevoParametroFactuPrincipal=0L;
				this.parametrofactuprincipals.removeAll(parametrofactuprincipalsAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoParametroFactuPrincipal 
					&& this.parametrofactuprincipalLogic.getParametroFactuPrincipals().size()>0
					) {
					parametrofactuprincipalAux=this.parametrofactuprincipalLogic.getParametroFactuPrincipals().get(this.parametrofactuprincipalLogic.getParametroFactuPrincipals().size() - 1);
				
					if(parametrofactuprincipalAux.getId()<0) {
						this.parametrofactuprincipalLogic.getParametroFactuPrincipals().remove(parametrofactuprincipalAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoParametroFactuPrincipal && this.parametrofactuprincipals.size()>0) {
					parametrofactuprincipalAux=this.parametrofactuprincipals.get(this.parametrofactuprincipals.size() - 1);
				
					if(parametrofactuprincipalAux.getId()<0) {
						this.parametrofactuprincipals.remove(parametrofactuprincipalAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoParametroFactuPrincipal(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(parametrofactuprincipal.getId()<0) {
				this.parametrofactuprincipalLogic.getParametroFactuPrincipals().remove(this.parametrofactuprincipal);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(parametrofactuprincipal.getId()<0) {
				this.parametrofactuprincipals.remove(this.parametrofactuprincipal);
			}
		}			
	}
	
	public void setEstadosInicialesParametroFactuPrincipal(List<ParametroFactuPrincipal> parametrofactuprincipalsAux) throws Exception {
		ParametroFactuPrincipalConstantesFunciones.setEstadosInicialesParametroFactuPrincipal(parametrofactuprincipalsAux);
	}
	
	public void setEstadosInicialesParametroFactuPrincipal(ParametroFactuPrincipal parametrofactuprincipalAux) throws Exception {
		ParametroFactuPrincipalConstantesFunciones.setEstadosInicialesParametroFactuPrincipal(parametrofactuprincipalAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarParametroFactuPrincipalActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesParametroFactuPrincipal("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarParametroFactuPrincipalActual()) {
				if(!this.isEsNuevoParametroFactuPrincipal) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesParametroFactuPrincipal("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoParametroFactuPrincipal=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarParametroFactuPrincipalActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Parametro Principal  ?", "MANTENIMIENTO DE Parametro Principal ", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesParametroFactuPrincipal("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(ParametroFactuPrincipal parametrofactuprincipal) throws Exception {
		ParametroFactuPrincipalConstantesFunciones.seleccionarAsignar(this.parametrofactuprincipal,parametrofactuprincipal);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarParametroFactuPrincipal=this.isPermisoActualizarOriginalParametroFactuPrincipal;
			
			
			this.seleccionarAsignar(parametrofactuprincipal);
			
			

			idCuentaContableFleteVentaActual=parametrofactuprincipal.getid_cuenta_contable_flete_venta();
			this.seleccionarCuentaContableFleteVentaActual();

			idCuentaContableOtroCargoActual=parametrofactuprincipal.getid_cuenta_contable_otro_cargo();
			this.seleccionarCuentaContableOtroCargoActual();

			idCuentaContableFinanActual=parametrofactuprincipal.getid_cuenta_contable_finan();
			this.seleccionarCuentaContableFinanActual();

			idCuentaContableBoniActual=parametrofactuprincipal.getid_cuenta_contable_boni();
			this.seleccionarCuentaContableBoniActual();

			idCuentaContableBoniDevolActual=parametrofactuprincipal.getid_cuenta_contable_boni_devol();
			this.seleccionarCuentaContableBoniDevolActual();

			idCuentaContableIceActual=parametrofactuprincipal.getid_cuenta_contable_ice();
			this.seleccionarCuentaContableIceActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			ParametroFactuPrincipalConstantesFunciones.quitarEspaciosParametroFactuPrincipal(this.parametrofactuprincipal,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesParametroFactuPrincipal("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.parametrofactuprincipalSessionBean.setsFuncionBusquedaRapida(this.parametrofactuprincipalSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarCuentaContableFleteVentaActual() throws Exception {
		try	{
			CuentaContable cuentacontablefleteventaAux=new CuentaContable();

			if(this.idCuentaContableFleteVentaActual != null && this.idCuentaContableFleteVentaActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontablefleteventaLogic.getEntityWithConnection(this.idCuentaContableFleteVentaActual);
					cuentacontablefleteventaAux= cuentacontablefleteventaLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontablefleteventasForeignKey=new ArrayList<CuentaContable>();
				cuentacontablefleteventasForeignKey.add(cuentacontablefleteventaAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableOtroCargoActual() throws Exception {
		try	{
			CuentaContable cuentacontableotrocargoAux=new CuentaContable();

			if(this.idCuentaContableOtroCargoActual != null && this.idCuentaContableOtroCargoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableotrocargoLogic.getEntityWithConnection(this.idCuentaContableOtroCargoActual);
					cuentacontableotrocargoAux= cuentacontableotrocargoLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontableotrocargosForeignKey=new ArrayList<CuentaContable>();
				cuentacontableotrocargosForeignKey.add(cuentacontableotrocargoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableFinanActual() throws Exception {
		try	{
			CuentaContable cuentacontablefinanAux=new CuentaContable();

			if(this.idCuentaContableFinanActual != null && this.idCuentaContableFinanActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontablefinanLogic.getEntityWithConnection(this.idCuentaContableFinanActual);
					cuentacontablefinanAux= cuentacontablefinanLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontablefinansForeignKey=new ArrayList<CuentaContable>();
				cuentacontablefinansForeignKey.add(cuentacontablefinanAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableBoniActual() throws Exception {
		try	{
			CuentaContable cuentacontableboniAux=new CuentaContable();

			if(this.idCuentaContableBoniActual != null && this.idCuentaContableBoniActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableboniLogic.getEntityWithConnection(this.idCuentaContableBoniActual);
					cuentacontableboniAux= cuentacontableboniLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontablebonisForeignKey=new ArrayList<CuentaContable>();
				cuentacontablebonisForeignKey.add(cuentacontableboniAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableBoniDevolActual() throws Exception {
		try	{
			CuentaContable cuentacontablebonidevolAux=new CuentaContable();

			if(this.idCuentaContableBoniDevolActual != null && this.idCuentaContableBoniDevolActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontablebonidevolLogic.getEntityWithConnection(this.idCuentaContableBoniDevolActual);
					cuentacontablebonidevolAux= cuentacontablebonidevolLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontablebonidevolsForeignKey=new ArrayList<CuentaContable>();
				cuentacontablebonidevolsForeignKey.add(cuentacontablebonidevolAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableIceActual() throws Exception {
		try	{
			CuentaContable cuentacontableiceAux=new CuentaContable();

			if(this.idCuentaContableIceActual != null && this.idCuentaContableIceActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableiceLogic.getEntityWithConnection(this.idCuentaContableIceActual);
					cuentacontableiceAux= cuentacontableiceLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontableicesForeignKey=new ArrayList<CuentaContable>();
				cuentacontableicesForeignKey.add(cuentacontableiceAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoParametroFactuPrincipal) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosParametroFactuPrincipal(esParaCancelar);				
				this.cancelarNuevoParametroFactuPrincipal(esParaCancelar);								
			}
			
			this.parametrofactuprincipal=new ParametroFactuPrincipal();
			
			this.inicializarParametroFactuPrincipal();
			
			this.actualizarEstadoCeldasBotonesParametroFactuPrincipal("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarParametroFactuPrincipal() throws Exception {
		try {
			ParametroFactuPrincipalConstantesFunciones.inicializarParametroFactuPrincipal(this.parametrofactuprincipal);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.parametrofactuprincipalLogic.getParametroFactuPrincipals().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteParametroFactuPrincipals(String sAccionBusqueda,List<ParametroFactuPrincipal> parametrofactuprincipalsParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="ParametroFactuPrincipal"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="ParametroFactuPrincipalMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("ParametroFactuPrincipalMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="ParametroFactuPrincipal"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Parametro Principal s");		
		parameters.put("busquedapor", ParametroFactuPrincipalConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceParametroFactuPrincipal=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			ParametroFactuPrincipalConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			ParametroFactuPrincipalConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceParametroFactuPrincipal=new JRBeanArrayDataSource(ParametroFactuPrincipalJInternalFrame.TraerParametroFactuPrincipalBeans(parametrofactuprincipalsParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceParametroFactuPrincipal);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+ParametroFactuPrincipalConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+ParametroFactuPrincipalConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(ParametroFactuPrincipalBean.TraerParametroFactuPrincipalBeans(parametrofactuprincipalsParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteParametroFactuPrincipals(sAccionBusqueda,sTipoArchivoReporte,parametrofactuprincipalsParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalParametroFactuPrincipals(sAccionBusqueda,sTipoArchivoReporte,parametrofactuprincipalsParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoParametroFactuPrincipalActionPerformed(null);
					//this.generarExcelReporteParametroFactuPrincipals(sAccionBusqueda,sTipoArchivoReporte,parametrofactuprincipalsParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalParametroFactuPrincipals(sAccionBusqueda,sTipoArchivoReporte,parametrofactuprincipalsParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesParametroFactuPrincipals(sAccionBusqueda,sTipoArchivoReporte,parametrofactuprincipalsParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesParametroFactuPrincipals(sAccionBusqueda,sTipoArchivoReporte,parametrofactuprincipalsParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteParametroFactuPrincipals(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroFactuPrincipal> parametrofactuprincipalsParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactuprincipal";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroFactuPrincipals");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderParametroFactuPrincipal("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(ParametroFactuPrincipal parametrofactuprincipal : parametrofactuprincipalsParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			ParametroFactuPrincipalConstantesFunciones.generarExcelReporteDataParametroFactuPrincipal("NORMAL",row,workbook,parametrofactuprincipal,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Principal ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderParametroFactuPrincipal(String sTipo,Row row,Workbook workbook) {
		
		ParametroFactuPrincipalConstantesFunciones.generarExcelReporteHeaderParametroFactuPrincipal(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalParametroFactuPrincipals(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroFactuPrincipal> parametrofactuprincipalsParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactuprincipal_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroFactuPrincipals");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(ParametroFactuPrincipal parametrofactuprincipal : parametrofactuprincipalsParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.getParametroFactuPrincipalDescripcion(parametrofactuprincipal));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuprincipal.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuprincipal.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUDESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUDESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuprincipal.gettipoparamfactudescuento_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTULISTADOCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTULISTADOCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuprincipal.gettipoparamfactulistadocliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUSECUENCIATRABAJO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUSECUENCIATRABAJO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuprincipal.gettipoparamfactusecuenciatrabajo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuprincipal.gettipodocumentofactura_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuprincipal.gettipodocumentonotacredito_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTADEBITO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTADEBITO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuprincipal.gettipodocumentonotadebito_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_ENLINEA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_ENLINEA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.geten_linea()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUENTATIPOCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUENTATIPOCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_cuenta_tipo_cliente()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCLIENTEIMPUESTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCLIENTEIMPUESTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_cliente_impuesto()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_IDLIBROCONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDLIBROCONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuprincipal.getlibrocontable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_IDMONEDA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDMONEDA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuprincipal.getmoneda_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONIMPRESION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONIMPRESION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_impresion()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_IDFORMATO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDFORMATO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuprincipal.getformato_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALUSUARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALUSUARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_secuencial_usuario()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALEDITABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALEDITABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_secuencial_editable()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONPRECIOPORCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONPRECIOPORCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_precio_por_cliente()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARPRECIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARPRECIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_modificar_precio()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARSERVICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARSERVICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_modificar_servicio()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCAMBIARUNIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCAMBIARUNIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_cambiar_unidad()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_NUMERODECIMALESUNIDAD))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_NUMERODECIMALESUNIDAD);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuprincipal.getnumero_decimales_unidad());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARSERIE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARSERIE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_activar_serie()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARLOTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARLOTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_activar_lote()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARMULTIEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARMULTIEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_activar_multi_empresa()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCENTROCOSTOS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCENTROCOSTOS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_centro_costos()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONUNIDADES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONUNIDADES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_unidades()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUPODISPONIBLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUPODISPONIBLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_cupo_disponible()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONFORMAPAGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONFORMAPAGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_forma_pago()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONENVIOMAIL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONENVIOMAIL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_envio_mail()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONAUTORIZARPROFORMA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONAUTORIZARPROFORMA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_autorizar_proforma()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONBLOQUEOPEDIDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONBLOQUEOPEDIDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_bloqueo_pedido()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCONTROLANTICIPO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCONTROLANTICIPO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_control_anticipo()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONFACTURAAUTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONFACTURAAUTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_factura_auto()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONGRABARVALORCERO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONGRABARVALORCERO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_grabar_valor_cero()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONAGREGARITEM))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONAGREGARITEM);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_agregar_item()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_NUMEROCOPIAS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_NUMEROCOPIAS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuprincipal.getnumero_copias());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_LEYENDA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_LEYENDA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuprincipal.getleyenda());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_CONSINFACTURA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONSINFACTURA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(parametrofactuprincipal.getcon_sin_factura()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFLETEVENTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFLETEVENTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuprincipal.getcuentacontablefleteventa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEOTROCARGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEOTROCARGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuprincipal.getcuentacontableotrocargo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFINAN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFINAN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuprincipal.getcuentacontablefinan_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONI))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONI);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuprincipal.getcuentacontableboni_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONIDEVOL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONIDEVOL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuprincipal.getcuentacontablebonidevol_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEICE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEICE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(parametrofactuprincipal.getcuentacontableice_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Principal ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesParametroFactuPrincipals(String sAccionBusqueda,String sTipoArchivoReporte,List<ParametroFactuPrincipal> parametrofactuprincipalsParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<ParametroFactuPrincipal> parametrofactuprincipalsRespaldo=null;
		
		classes=ParametroFactuPrincipalConstantesFunciones.getClassesRelationshipsOfParametroFactuPrincipal(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.parametrofactuprincipalLogic.setDatosCliente(this.datosCliente);
		this.parametrofactuprincipalLogic.setDatosDeep(this.datosDeep);
		this.parametrofactuprincipalLogic.setIsConDeep(true);
		
		parametrofactuprincipalsRespaldo=this.parametrofactuprincipalLogic.getParametroFactuPrincipals();
		
		this.parametrofactuprincipalLogic.setParametroFactuPrincipals(parametrofactuprincipalsParaReportes);	
		this.parametrofactuprincipalLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		parametrofactuprincipalsParaReportes=this.parametrofactuprincipalLogic.getParametroFactuPrincipals();
		this.parametrofactuprincipalLogic.setParametroFactuPrincipals(parametrofactuprincipalsRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactuprincipal_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("ParametroFactuPrincipals");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderParametroFactuPrincipal("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(ParametroFactuPrincipal parametrofactuprincipal : parametrofactuprincipalsParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderParametroFactuPrincipal("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			ParametroFactuPrincipalConstantesFunciones.generarExcelReporteDataParametroFactuPrincipal("NORMAL",row,workbook,parametrofactuprincipal,cellStyleDataAux);
		
			
			
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.getParametroFactuPrincipalDescripcion(parametrofactuprincipal));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Principal ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessParametroFactuPrincipal() throws Exception {		
		this.startProcessParametroFactuPrincipal(true);
	}
	
	public void startProcessParametroFactuPrincipal(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasParametroFactuPrincipal ,this.jPanelParametrosReportesParametroFactuPrincipal, this.jScrollPanelDatosParametroFactuPrincipal,this.jPanelPaginacionParametroFactuPrincipal, this.jScrollPanelDatosEdicionParametroFactuPrincipal, this.jPanelAccionesParametroFactuPrincipal,this.jPanelAccionesFormularioParametroFactuPrincipal,this.jmenuBarParametroFactuPrincipal,this.jmenuBarDetalleParametroFactuPrincipal,this.jTtoolBarParametroFactuPrincipal,this.jTtoolBarDetalleParametroFactuPrincipal);		
		
		final JTabbedPane jTabbedPaneBusquedasParametroFactuPrincipal=this.jTabbedPaneBusquedasParametroFactuPrincipal; 
		
		final JPanel jPanelParametrosReportesParametroFactuPrincipal=this.jPanelParametrosReportesParametroFactuPrincipal;
		//final JScrollPane jScrollPanelDatosParametroFactuPrincipal=this.jScrollPanelDatosParametroFactuPrincipal;
		final JTable jTableDatosParametroFactuPrincipal=this.jTableDatosParametroFactuPrincipal;		
		final JPanel jPanelPaginacionParametroFactuPrincipal=this.jPanelPaginacionParametroFactuPrincipal;
		//final JScrollPane jScrollPanelDatosEdicionParametroFactuPrincipal=this.jScrollPanelDatosEdicionParametroFactuPrincipal;
		final JPanel jPanelAccionesParametroFactuPrincipal=this.jPanelAccionesParametroFactuPrincipal;
		
		JPanel jPanelCamposAuxiliarParametroFactuPrincipal=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarParametroFactuPrincipal=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
			jPanelCamposAuxiliarParametroFactuPrincipal=this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelCamposParametroFactuPrincipal;
			jPanelAccionesFormularioAuxiliarParametroFactuPrincipal=this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelAccionesFormularioParametroFactuPrincipal;
		}
		
		final JPanel jPanelCamposParametroFactuPrincipal=jPanelCamposAuxiliarParametroFactuPrincipal;
		final JPanel jPanelAccionesFormularioParametroFactuPrincipal=jPanelAccionesFormularioAuxiliarParametroFactuPrincipal;
		
		
		final JMenuBar jmenuBarParametroFactuPrincipal=this.jmenuBarParametroFactuPrincipal;
		final JToolBar jTtoolBarParametroFactuPrincipal=this.jTtoolBarParametroFactuPrincipal;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarParametroFactuPrincipal=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarParametroFactuPrincipal=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
			jmenuBarDetalleAuxiliarParametroFactuPrincipal=this.jInternalFrameDetalleFormParametroFactuPrincipal.jmenuBarDetalleParametroFactuPrincipal;
			jTtoolBarDetalleAuxiliarParametroFactuPrincipal=this.jInternalFrameDetalleFormParametroFactuPrincipal.jTtoolBarDetalleParametroFactuPrincipal;
		}
		
		final JMenuBar jmenuBarDetalleParametroFactuPrincipal=jmenuBarDetalleAuxiliarParametroFactuPrincipal;
		final JToolBar jTtoolBarDetalleParametroFactuPrincipal=jTtoolBarDetalleAuxiliarParametroFactuPrincipal;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasParametroFactuPrincipal;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesParametroFactuPrincipal;
			processRunnable.jTableDatos=jTableDatosParametroFactuPrincipal;
			processRunnable.jPanelCampos=jPanelCamposParametroFactuPrincipal;
			processRunnable.jPanelPaginacion=jPanelPaginacionParametroFactuPrincipal;
			processRunnable.jPanelAcciones=jPanelAccionesParametroFactuPrincipal;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioParametroFactuPrincipal;
			
			
			processRunnable.jmenuBar=jmenuBarParametroFactuPrincipal;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleParametroFactuPrincipal;
			processRunnable.jTtoolBar=jTtoolBarParametroFactuPrincipal;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleParametroFactuPrincipal;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasParametroFactuPrincipal ,jPanelParametrosReportesParametroFactuPrincipal,jTableDatosParametroFactuPrincipal, /*jScrollPanelDatosParametroFactuPrincipal,*/jPanelCamposParametroFactuPrincipal,jPanelPaginacionParametroFactuPrincipal, /*jScrollPanelDatosEdicionParametroFactuPrincipal,*/ jPanelAccionesParametroFactuPrincipal,jPanelAccionesFormularioParametroFactuPrincipal,jmenuBarParametroFactuPrincipal,jmenuBarDetalleParametroFactuPrincipal,jTtoolBarParametroFactuPrincipal,jTtoolBarDetalleParametroFactuPrincipal);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasParametroFactuPrincipal ,jPanelParametrosReportesParametroFactuPrincipal, jScrollPanelDatosParametroFactuPrincipal,jPanelPaginacionParametroFactuPrincipal, jScrollPanelDatosEdicionParametroFactuPrincipal, jPanelAccionesParametroFactuPrincipal,jPanelAccionesFormularioParametroFactuPrincipal,jmenuBarParametroFactuPrincipal,jmenuBarDetalleParametroFactuPrincipal,jTtoolBarParametroFactuPrincipal,jTtoolBarDetalleParametroFactuPrincipal);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessParametroFactuPrincipal() {// throws Exception 
		this.finishProcessParametroFactuPrincipal(true);
	}
	
	public void finishProcessParametroFactuPrincipal(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasParametroFactuPrincipal ,this.jPanelParametrosReportesParametroFactuPrincipal, this.jScrollPanelDatosParametroFactuPrincipal,this.jPanelPaginacionParametroFactuPrincipal, this.jScrollPanelDatosEdicionParametroFactuPrincipal, this.jPanelAccionesParametroFactuPrincipal,this.jPanelAccionesFormularioParametroFactuPrincipal,this.jmenuBarParametroFactuPrincipal,this.jmenuBarDetalleParametroFactuPrincipal,this.jTtoolBarParametroFactuPrincipal,this.jTtoolBarDetalleParametroFactuPrincipal);		
		
		final JTabbedPane jTabbedPaneBusquedasParametroFactuPrincipal=this.jTabbedPaneBusquedasParametroFactuPrincipal; 
		
		final JPanel jPanelParametrosReportesParametroFactuPrincipal=this.jPanelParametrosReportesParametroFactuPrincipal;
		//final JScrollPane jScrollPanelDatosParametroFactuPrincipal=this.jScrollPanelDatosParametroFactuPrincipal;
		final JTable jTableDatosParametroFactuPrincipal=this.jTableDatosParametroFactuPrincipal;		
		final JPanel jPanelPaginacionParametroFactuPrincipal=this.jPanelPaginacionParametroFactuPrincipal;
		//final JScrollPane jScrollPanelDatosEdicionParametroFactuPrincipal=this.jScrollPanelDatosEdicionParametroFactuPrincipal;
		final JPanel jPanelAccionesParametroFactuPrincipal=this.jPanelAccionesParametroFactuPrincipal;
		
		JPanel jPanelCamposAuxiliarParametroFactuPrincipal=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarParametroFactuPrincipal=new JPanel();
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
			jPanelCamposAuxiliarParametroFactuPrincipal=this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelCamposParametroFactuPrincipal;
			jPanelAccionesFormularioAuxiliarParametroFactuPrincipal=this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelAccionesFormularioParametroFactuPrincipal;
		}
		
		final JPanel jPanelCamposParametroFactuPrincipal=jPanelCamposAuxiliarParametroFactuPrincipal;
		final JPanel jPanelAccionesFormularioParametroFactuPrincipal=jPanelAccionesFormularioAuxiliarParametroFactuPrincipal;
		
		
		final JMenuBar jmenuBarParametroFactuPrincipal=this.jmenuBarParametroFactuPrincipal;		
		final JToolBar jTtoolBarParametroFactuPrincipal=this.jTtoolBarParametroFactuPrincipal;
				
		JMenuBar jmenuBarDetalleAuxiliarParametroFactuPrincipal=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarParametroFactuPrincipal=new JToolBar();
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
			jmenuBarDetalleAuxiliarParametroFactuPrincipal=this.jInternalFrameDetalleFormParametroFactuPrincipal.jmenuBarDetalleParametroFactuPrincipal;
			jTtoolBarDetalleAuxiliarParametroFactuPrincipal=this.jInternalFrameDetalleFormParametroFactuPrincipal.jTtoolBarDetalleParametroFactuPrincipal;		
		}
		
		final JMenuBar jmenuBarDetalleParametroFactuPrincipal=jmenuBarDetalleAuxiliarParametroFactuPrincipal;
		final JToolBar jTtoolBarDetalleParametroFactuPrincipal=jTtoolBarDetalleAuxiliarParametroFactuPrincipal;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasParametroFactuPrincipal;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesParametroFactuPrincipal;
			processRunnable.jTableDatos=jTableDatosParametroFactuPrincipal;
			processRunnable.jPanelCampos=jPanelCamposParametroFactuPrincipal;
			processRunnable.jPanelPaginacion=jPanelPaginacionParametroFactuPrincipal;
			processRunnable.jPanelAcciones=jPanelAccionesParametroFactuPrincipal;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioParametroFactuPrincipal;
			
			
			processRunnable.jmenuBar=jmenuBarParametroFactuPrincipal;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleParametroFactuPrincipal;
			processRunnable.jTtoolBar=jTtoolBarParametroFactuPrincipal;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleParametroFactuPrincipal;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasParametroFactuPrincipal ,jPanelParametrosReportesParametroFactuPrincipal, jTableDatosParametroFactuPrincipal,/*jScrollPanelDatosParametroFactuPrincipal,*/jPanelCamposParametroFactuPrincipal,jPanelPaginacionParametroFactuPrincipal, /*jScrollPanelDatosEdicionParametroFactuPrincipal,*/ jPanelAccionesParametroFactuPrincipal,jPanelAccionesFormularioParametroFactuPrincipal,jmenuBarParametroFactuPrincipal,jmenuBarDetalleParametroFactuPrincipal,jTtoolBarParametroFactuPrincipal,jTtoolBarDetalleParametroFactuPrincipal));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesParametroFactuPrincipal(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarParametroFactuPrincipal(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuParametroFactuPrincipal(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarParametroFactuPrincipal(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarParametroFactuPrincipal,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleParametroFactuPrincipal,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuParametroFactuPrincipal(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarParametroFactuPrincipal,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleParametroFactuPrincipal,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.parametrofactuprincipalConstantesFunciones.getsFinalQueryParametroFactuPrincipal();
		String  finalQueryPaginacionTodos=this.parametrofactuprincipalConstantesFunciones.getsFinalQueryParametroFactuPrincipal();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=ParametroFactuPrincipalConstantesFunciones.getArrayColumnasGlobalesNoParametroFactuPrincipal(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=ParametroFactuPrincipalConstantesFunciones.getArrayColumnasGlobalesParametroFactuPrincipal(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,ParametroFactuPrincipalConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.parametrofactuprincipalsEliminados= new ArrayList<ParametroFactuPrincipal>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessParametroFactuPrincipal();
		
				///*ParametroFactuPrincipalSessionBean*/this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			
			if(this.parametrofactuprincipalSessionBean==null) {
				this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=ParametroFactuPrincipalConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=ParametroFactuPrincipalConstantesFunciones.getClassesForeignKeysOfParametroFactuPrincipal(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/parametrofactuprincipal."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			parametrofactuprincipalsAux= new ArrayList<ParametroFactuPrincipal>();
			
				
			parametrofactuprincipalLogic.setDatosCliente(this.datosCliente);
			parametrofactuprincipalLogic.setDatosDeep(this.datosDeep);
			parametrofactuprincipalLogic.setIsConDeep(true);
			
			
			parametrofactuprincipalLogic.getParametroFactuPrincipalDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					parametrofactuprincipalLogic.getTodosParametroFactuPrincipals(finalQueryGlobal,pagination);
					
					//parametrofactuprincipalLogic.getTodosParametroFactuPrincipalsWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(parametrofactuprincipalLogic.getParametroFactuPrincipals()==null|| parametrofactuprincipalLogic.getParametroFactuPrincipals().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrofactuprincipalsAux= new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipalsAux.addAll(parametrofactuprincipalLogic.getParametroFactuPrincipals());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipalsAux= new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipalsAux.addAll(parametrofactuprincipals);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrofactuprincipalLogic.getTodosParametroFactuPrincipals(finalQueryGlobal+"",this.pagination);												
							
							//parametrofactuprincipalLogic.getTodosParametroFactuPrincipalsWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteParametroFactuPrincipals("Todos",parametrofactuprincipalLogic.getParametroFactuPrincipals() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							parametrofactuprincipalLogic.setParametroFactuPrincipals(new ArrayList<ParametroFactuPrincipal>());					
							parametrofactuprincipalLogic.getParametroFactuPrincipals().addAll(parametrofactuprincipalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipals=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipals.addAll(parametrofactuprincipalsAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idParametroFactuPrincipal=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idParametroFactuPrincipal=this.idActual;
				
				} else if(this.idParametroFactuPrincipalActual!=null && this.idParametroFactuPrincipalActual!=0L) {
					idParametroFactuPrincipal=idParametroFactuPrincipalActual;
				}
				
					
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndicePorId(idParametroFactuPrincipal);
				
				this.parametrofactuprincipals=new ArrayList<ParametroFactuPrincipal>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					parametrofactuprincipalLogic.getEntity(idParametroFactuPrincipal);
					
					//parametrofactuprincipalLogic.getEntityWithConnection(idParametroFactuPrincipal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuprincipalLogic.setParametroFactuPrincipals(new ArrayList<ParametroFactuPrincipal>());
					parametrofactuprincipalLogic.getParametroFactuPrincipals().add(parametrofactuprincipalLogic.getParametroFactuPrincipal());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuprincipals=new ArrayList<ParametroFactuPrincipal>();
					this.parametrofactuprincipals.add(parametrofactuprincipal);
				}
				
				if(parametrofactuprincipalLogic.getParametroFactuPrincipal()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdCuentaContableBoni")) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableBoni(id_cuenta_contable_boniFK_IdCuentaContableBoni);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdCuentaContableBoni(finalQueryGlobal,pagination,id_cuenta_contable_boniFK_IdCuentaContableBoni);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableBoni(id_cuenta_contable_boniFK_IdCuentaContableBoni);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableBoni(id_cuenta_contable_boniFK_IdCuentaContableBoni);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuprincipalLogic.getParametroFactuPrincipals()==null||parametrofactuprincipalLogic.getParametroFactuPrincipals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuprincipals==null|| parametrofactuprincipals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
						parametrofactuprincipalsAux.addAll(parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipalsAux.addAll(parametrofactuprincipals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdCuentaContableBoni(finalQueryGlobal,pagination,id_cuenta_contable_boniFK_IdCuentaContableBoni);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableBoni(id_cuenta_contable_boniFK_IdCuentaContableBoni);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableBoni(id_cuenta_contable_boniFK_IdCuentaContableBoni);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuPrincipals("FK_IdCuentaContableBoni",parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuPrincipals("FK_IdCuentaContableBoni",parametrofactuprincipals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalLogic.setParametroFactuPrincipals(new ArrayList<ParametroFactuPrincipal>());
						parametrofactuprincipalLogic.getParametroFactuPrincipals().addAll(parametrofactuprincipalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipals=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipals.addAll(parametrofactuprincipalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableBoniDevol")) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableBoniDevol(id_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevol);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdCuentaContableBoniDevol(finalQueryGlobal,pagination,id_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevol);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableBoniDevol(id_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevol);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableBoniDevol(id_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevol);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuprincipalLogic.getParametroFactuPrincipals()==null||parametrofactuprincipalLogic.getParametroFactuPrincipals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuprincipals==null|| parametrofactuprincipals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
						parametrofactuprincipalsAux.addAll(parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipalsAux.addAll(parametrofactuprincipals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdCuentaContableBoniDevol(finalQueryGlobal,pagination,id_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevol);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableBoniDevol(id_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevol);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableBoniDevol(id_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevol);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuPrincipals("FK_IdCuentaContableBoniDevol",parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuPrincipals("FK_IdCuentaContableBoniDevol",parametrofactuprincipals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalLogic.setParametroFactuPrincipals(new ArrayList<ParametroFactuPrincipal>());
						parametrofactuprincipalLogic.getParametroFactuPrincipals().addAll(parametrofactuprincipalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipals=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipals.addAll(parametrofactuprincipalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableFinan")) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableFinan(id_cuenta_contable_finanFK_IdCuentaContableFinan);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdCuentaContableFinan(finalQueryGlobal,pagination,id_cuenta_contable_finanFK_IdCuentaContableFinan);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableFinan(id_cuenta_contable_finanFK_IdCuentaContableFinan);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableFinan(id_cuenta_contable_finanFK_IdCuentaContableFinan);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuprincipalLogic.getParametroFactuPrincipals()==null||parametrofactuprincipalLogic.getParametroFactuPrincipals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuprincipals==null|| parametrofactuprincipals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
						parametrofactuprincipalsAux.addAll(parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipalsAux.addAll(parametrofactuprincipals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdCuentaContableFinan(finalQueryGlobal,pagination,id_cuenta_contable_finanFK_IdCuentaContableFinan);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableFinan(id_cuenta_contable_finanFK_IdCuentaContableFinan);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableFinan(id_cuenta_contable_finanFK_IdCuentaContableFinan);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuPrincipals("FK_IdCuentaContableFinan",parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuPrincipals("FK_IdCuentaContableFinan",parametrofactuprincipals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalLogic.setParametroFactuPrincipals(new ArrayList<ParametroFactuPrincipal>());
						parametrofactuprincipalLogic.getParametroFactuPrincipals().addAll(parametrofactuprincipalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipals=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipals.addAll(parametrofactuprincipalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableFleteVenta")) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableFleteVenta(id_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVenta);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdCuentaContableFleteVenta(finalQueryGlobal,pagination,id_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVenta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableFleteVenta(id_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVenta);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableFleteVenta(id_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVenta);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuprincipalLogic.getParametroFactuPrincipals()==null||parametrofactuprincipalLogic.getParametroFactuPrincipals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuprincipals==null|| parametrofactuprincipals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
						parametrofactuprincipalsAux.addAll(parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipalsAux.addAll(parametrofactuprincipals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdCuentaContableFleteVenta(finalQueryGlobal,pagination,id_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVenta);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableFleteVenta(id_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVenta);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableFleteVenta(id_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVenta);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuPrincipals("FK_IdCuentaContableFleteVenta",parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuPrincipals("FK_IdCuentaContableFleteVenta",parametrofactuprincipals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalLogic.setParametroFactuPrincipals(new ArrayList<ParametroFactuPrincipal>());
						parametrofactuprincipalLogic.getParametroFactuPrincipals().addAll(parametrofactuprincipalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipals=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipals.addAll(parametrofactuprincipalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableIce")) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIce(id_cuenta_contable_iceFK_IdCuentaContableIce);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdCuentaContableIce(finalQueryGlobal,pagination,id_cuenta_contable_iceFK_IdCuentaContableIce);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIce(id_cuenta_contable_iceFK_IdCuentaContableIce);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIce(id_cuenta_contable_iceFK_IdCuentaContableIce);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuprincipalLogic.getParametroFactuPrincipals()==null||parametrofactuprincipalLogic.getParametroFactuPrincipals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuprincipals==null|| parametrofactuprincipals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
						parametrofactuprincipalsAux.addAll(parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipalsAux.addAll(parametrofactuprincipals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdCuentaContableIce(finalQueryGlobal,pagination,id_cuenta_contable_iceFK_IdCuentaContableIce);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIce(id_cuenta_contable_iceFK_IdCuentaContableIce);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableIce(id_cuenta_contable_iceFK_IdCuentaContableIce);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuPrincipals("FK_IdCuentaContableIce",parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuPrincipals("FK_IdCuentaContableIce",parametrofactuprincipals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalLogic.setParametroFactuPrincipals(new ArrayList<ParametroFactuPrincipal>());
						parametrofactuprincipalLogic.getParametroFactuPrincipals().addAll(parametrofactuprincipalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipals=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipals.addAll(parametrofactuprincipalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCuentaContableOtroCargo")) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableOtroCargo(id_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdCuentaContableOtroCargo(finalQueryGlobal,pagination,id_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableOtroCargo(id_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableOtroCargo(id_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuprincipalLogic.getParametroFactuPrincipals()==null||parametrofactuprincipalLogic.getParametroFactuPrincipals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuprincipals==null|| parametrofactuprincipals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
						parametrofactuprincipalsAux.addAll(parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipalsAux.addAll(parametrofactuprincipals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdCuentaContableOtroCargo(finalQueryGlobal,pagination,id_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableOtroCargo(id_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdCuentaContableOtroCargo(id_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuPrincipals("FK_IdCuentaContableOtroCargo",parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuPrincipals("FK_IdCuentaContableOtroCargo",parametrofactuprincipals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalLogic.setParametroFactuPrincipals(new ArrayList<ParametroFactuPrincipal>());
						parametrofactuprincipalLogic.getParametroFactuPrincipals().addAll(parametrofactuprincipalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipals=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipals.addAll(parametrofactuprincipalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuprincipalLogic.getParametroFactuPrincipals()==null||parametrofactuprincipalLogic.getParametroFactuPrincipals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuprincipals==null|| parametrofactuprincipals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
						parametrofactuprincipalsAux.addAll(parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipalsAux.addAll(parametrofactuprincipals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuPrincipals("FK_IdEmpresa",parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuPrincipals("FK_IdEmpresa",parametrofactuprincipals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalLogic.setParametroFactuPrincipals(new ArrayList<ParametroFactuPrincipal>());
						parametrofactuprincipalLogic.getParametroFactuPrincipals().addAll(parametrofactuprincipalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipals=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipals.addAll(parametrofactuprincipalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdFormato")) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdFormato(finalQueryGlobal,pagination,id_formatoFK_IdFormato);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuprincipalLogic.getParametroFactuPrincipals()==null||parametrofactuprincipalLogic.getParametroFactuPrincipals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuprincipals==null|| parametrofactuprincipals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
						parametrofactuprincipalsAux.addAll(parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipalsAux.addAll(parametrofactuprincipals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdFormato(finalQueryGlobal,pagination,id_formatoFK_IdFormato);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuPrincipals("FK_IdFormato",parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuPrincipals("FK_IdFormato",parametrofactuprincipals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalLogic.setParametroFactuPrincipals(new ArrayList<ParametroFactuPrincipal>());
						parametrofactuprincipalLogic.getParametroFactuPrincipals().addAll(parametrofactuprincipalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipals=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipals.addAll(parametrofactuprincipalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdLibroContable")) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdLibroContable(id_libro_contableFK_IdLibroContable);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdLibroContable(finalQueryGlobal,pagination,id_libro_contableFK_IdLibroContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdLibroContable(id_libro_contableFK_IdLibroContable);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdLibroContable(id_libro_contableFK_IdLibroContable);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuprincipalLogic.getParametroFactuPrincipals()==null||parametrofactuprincipalLogic.getParametroFactuPrincipals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuprincipals==null|| parametrofactuprincipals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
						parametrofactuprincipalsAux.addAll(parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipalsAux.addAll(parametrofactuprincipals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdLibroContable(finalQueryGlobal,pagination,id_libro_contableFK_IdLibroContable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdLibroContable(id_libro_contableFK_IdLibroContable);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdLibroContable(id_libro_contableFK_IdLibroContable);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuPrincipals("FK_IdLibroContable",parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuPrincipals("FK_IdLibroContable",parametrofactuprincipals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalLogic.setParametroFactuPrincipals(new ArrayList<ParametroFactuPrincipal>());
						parametrofactuprincipalLogic.getParametroFactuPrincipals().addAll(parametrofactuprincipalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipals=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipals.addAll(parametrofactuprincipalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdMoneda")) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdMoneda(finalQueryGlobal,pagination,id_monedaFK_IdMoneda);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuprincipalLogic.getParametroFactuPrincipals()==null||parametrofactuprincipalLogic.getParametroFactuPrincipals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuprincipals==null|| parametrofactuprincipals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
						parametrofactuprincipalsAux.addAll(parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipalsAux.addAll(parametrofactuprincipals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdMoneda(finalQueryGlobal,pagination,id_monedaFK_IdMoneda);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuPrincipals("FK_IdMoneda",parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuPrincipals("FK_IdMoneda",parametrofactuprincipals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalLogic.setParametroFactuPrincipals(new ArrayList<ParametroFactuPrincipal>());
						parametrofactuprincipalLogic.getParametroFactuPrincipals().addAll(parametrofactuprincipalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipals=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipals.addAll(parametrofactuprincipalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuprincipalLogic.getParametroFactuPrincipals()==null||parametrofactuprincipalLogic.getParametroFactuPrincipals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuprincipals==null|| parametrofactuprincipals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
						parametrofactuprincipalsAux.addAll(parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipalsAux.addAll(parametrofactuprincipals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuPrincipals("FK_IdSucursal",parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuPrincipals("FK_IdSucursal",parametrofactuprincipals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalLogic.setParametroFactuPrincipals(new ArrayList<ParametroFactuPrincipal>());
						parametrofactuprincipalLogic.getParametroFactuPrincipals().addAll(parametrofactuprincipalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipals=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipals.addAll(parametrofactuprincipalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoDocumentoFactura")) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoFactura(id_tipo_documento_facturaFK_IdTipoDocumentoFactura);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdTipoDocumentoFactura(finalQueryGlobal,pagination,id_tipo_documento_facturaFK_IdTipoDocumentoFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoFactura(id_tipo_documento_facturaFK_IdTipoDocumentoFactura);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoFactura(id_tipo_documento_facturaFK_IdTipoDocumentoFactura);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuprincipalLogic.getParametroFactuPrincipals()==null||parametrofactuprincipalLogic.getParametroFactuPrincipals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuprincipals==null|| parametrofactuprincipals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
						parametrofactuprincipalsAux.addAll(parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipalsAux.addAll(parametrofactuprincipals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdTipoDocumentoFactura(finalQueryGlobal,pagination,id_tipo_documento_facturaFK_IdTipoDocumentoFactura);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoFactura(id_tipo_documento_facturaFK_IdTipoDocumentoFactura);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoFactura(id_tipo_documento_facturaFK_IdTipoDocumentoFactura);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuPrincipals("FK_IdTipoDocumentoFactura",parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuPrincipals("FK_IdTipoDocumentoFactura",parametrofactuprincipals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalLogic.setParametroFactuPrincipals(new ArrayList<ParametroFactuPrincipal>());
						parametrofactuprincipalLogic.getParametroFactuPrincipals().addAll(parametrofactuprincipalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipals=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipals.addAll(parametrofactuprincipalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoDocumentoNotaCredito")) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoNotaCredito(id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdTipoDocumentoNotaCredito(finalQueryGlobal,pagination,id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoNotaCredito(id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoNotaCredito(id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuprincipalLogic.getParametroFactuPrincipals()==null||parametrofactuprincipalLogic.getParametroFactuPrincipals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuprincipals==null|| parametrofactuprincipals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
						parametrofactuprincipalsAux.addAll(parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipalsAux.addAll(parametrofactuprincipals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdTipoDocumentoNotaCredito(finalQueryGlobal,pagination,id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoNotaCredito(id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoNotaCredito(id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuPrincipals("FK_IdTipoDocumentoNotaCredito",parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuPrincipals("FK_IdTipoDocumentoNotaCredito",parametrofactuprincipals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalLogic.setParametroFactuPrincipals(new ArrayList<ParametroFactuPrincipal>());
						parametrofactuprincipalLogic.getParametroFactuPrincipals().addAll(parametrofactuprincipalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipals=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipals.addAll(parametrofactuprincipalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoDocumentoNotaDebito")) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoNotaDebito(id_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebito);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdTipoDocumentoNotaDebito(finalQueryGlobal,pagination,id_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoNotaDebito(id_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebito);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoNotaDebito(id_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebito);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuprincipalLogic.getParametroFactuPrincipals()==null||parametrofactuprincipalLogic.getParametroFactuPrincipals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuprincipals==null|| parametrofactuprincipals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
						parametrofactuprincipalsAux.addAll(parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipalsAux.addAll(parametrofactuprincipals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdTipoDocumentoNotaDebito(finalQueryGlobal,pagination,id_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebito);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoNotaDebito(id_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebito);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoDocumentoNotaDebito(id_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebito);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuPrincipals("FK_IdTipoDocumentoNotaDebito",parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuPrincipals("FK_IdTipoDocumentoNotaDebito",parametrofactuprincipals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalLogic.setParametroFactuPrincipals(new ArrayList<ParametroFactuPrincipal>());
						parametrofactuprincipalLogic.getParametroFactuPrincipals().addAll(parametrofactuprincipalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipals=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipals.addAll(parametrofactuprincipalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoParamFactuDescuento")) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoParamFactuDescuento(id_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuento);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdTipoParamFactuDescuento(finalQueryGlobal,pagination,id_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuento);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoParamFactuDescuento(id_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuento);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoParamFactuDescuento(id_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuento);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuprincipalLogic.getParametroFactuPrincipals()==null||parametrofactuprincipalLogic.getParametroFactuPrincipals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuprincipals==null|| parametrofactuprincipals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
						parametrofactuprincipalsAux.addAll(parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipalsAux.addAll(parametrofactuprincipals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdTipoParamFactuDescuento(finalQueryGlobal,pagination,id_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuento);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoParamFactuDescuento(id_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuento);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoParamFactuDescuento(id_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuento);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuPrincipals("FK_IdTipoParamFactuDescuento",parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuPrincipals("FK_IdTipoParamFactuDescuento",parametrofactuprincipals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalLogic.setParametroFactuPrincipals(new ArrayList<ParametroFactuPrincipal>());
						parametrofactuprincipalLogic.getParametroFactuPrincipals().addAll(parametrofactuprincipalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipals=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipals.addAll(parametrofactuprincipalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoParamFactuListadoCliente")) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoParamFactuListadoCliente(id_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdTipoParamFactuListadoCliente(finalQueryGlobal,pagination,id_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoParamFactuListadoCliente(id_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoParamFactuListadoCliente(id_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuprincipalLogic.getParametroFactuPrincipals()==null||parametrofactuprincipalLogic.getParametroFactuPrincipals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuprincipals==null|| parametrofactuprincipals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
						parametrofactuprincipalsAux.addAll(parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipalsAux.addAll(parametrofactuprincipals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdTipoParamFactuListadoCliente(finalQueryGlobal,pagination,id_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoParamFactuListadoCliente(id_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoParamFactuListadoCliente(id_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuPrincipals("FK_IdTipoParamFactuListadoCliente",parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuPrincipals("FK_IdTipoParamFactuListadoCliente",parametrofactuprincipals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalLogic.setParametroFactuPrincipals(new ArrayList<ParametroFactuPrincipal>());
						parametrofactuprincipalLogic.getParametroFactuPrincipals().addAll(parametrofactuprincipalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipals=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipals.addAll(parametrofactuprincipalsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoParamFactuSecuenciaTrabajo")) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoParamFactuSecuenciaTrabajo(id_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdTipoParamFactuSecuenciaTrabajo(finalQueryGlobal,pagination,id_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoParamFactuSecuenciaTrabajo(id_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoParamFactuSecuenciaTrabajo(id_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=parametrofactuprincipalLogic.getParametroFactuPrincipals()==null||parametrofactuprincipalLogic.getParametroFactuPrincipals().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=parametrofactuprincipals==null|| parametrofactuprincipals.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
						parametrofactuprincipalsAux.addAll(parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipalsAux=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipalsAux.addAll(parametrofactuprincipals);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdTipoParamFactuSecuenciaTrabajo(finalQueryGlobal,pagination,id_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoParamFactuSecuenciaTrabajo(id_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=ParametroFactuPrincipalConstantesFunciones.getDetalleIndiceFK_IdTipoParamFactuSecuenciaTrabajo(id_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteParametroFactuPrincipals("FK_IdTipoParamFactuSecuenciaTrabajo",parametrofactuprincipalLogic.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteParametroFactuPrincipals("FK_IdTipoParamFactuSecuenciaTrabajo",parametrofactuprincipals);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalLogic.setParametroFactuPrincipals(new ArrayList<ParametroFactuPrincipal>());
						parametrofactuprincipalLogic.getParametroFactuPrincipals().addAll(parametrofactuprincipalsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipals=new ArrayList<ParametroFactuPrincipal>();
							parametrofactuprincipals.addAll(parametrofactuprincipalsAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesParametroFactuPrincipal();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessParametroFactuPrincipal();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=parametrofactuprincipalLogic.getParametroFactuPrincipals().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=parametrofactuprincipals.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=parametrofactuprincipalLogic.getParametroFactuPrincipals().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=parametrofactuprincipals.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(ParametroFactuPrincipal parametrofactuprincipal) {
		Boolean permite=true;
		
		if(this.parametrofactuprincipal.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=ParametroFactuPrincipalConstantesFunciones.getOrderByListaParametroFactuPrincipal();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=ParametroFactuPrincipalConstantesFunciones.getOrderByListaParametroFactuPrincipal();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalLogic.getParametroFactuPrincipals()) {
				if(parametrofactuprincipal.getsType().equals(Constantes2.S_TOTALES)) {
					parametrofactuprincipalTotales=parametrofactuprincipal;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroFactuPrincipal parametrofactuprincipal:this.parametrofactuprincipals) {
				if(parametrofactuprincipal.getsType().equals(Constantes2.S_TOTALES)) {
					parametrofactuprincipalTotales=parametrofactuprincipal;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.parametrofactuprincipalAux=new ParametroFactuPrincipal();
			this.parametrofactuprincipalAux.setsType(Constantes2.S_TOTALES);
			this.parametrofactuprincipalAux.setIsNew(false);
			this.parametrofactuprincipalAux.setIsChanged(false);
			this.parametrofactuprincipalAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				ParametroFactuPrincipalConstantesFunciones.TotalizarValoresFilaParametroFactuPrincipal(this.parametrofactuprincipalLogic.getParametroFactuPrincipals(),this.parametrofactuprincipalAux);
				
				this.parametrofactuprincipalLogic.getParametroFactuPrincipals().add(this.parametrofactuprincipalAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				ParametroFactuPrincipalConstantesFunciones.TotalizarValoresFilaParametroFactuPrincipal(this.parametrofactuprincipals,this.parametrofactuprincipalAux);
				
				this.parametrofactuprincipals.add(this.parametrofactuprincipalAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		parametrofactuprincipalTotales=new ParametroFactuPrincipal();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.parametrofactuprincipalLogic.getParametroFactuPrincipals().remove(parametrofactuprincipalTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.parametrofactuprincipals.remove(parametrofactuprincipalTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		parametrofactuprincipalTotales=new ParametroFactuPrincipal();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalLogic.getParametroFactuPrincipals()) {
				if(parametrofactuprincipal.getsType().equals(Constantes2.S_TOTALES)) {
					parametrofactuprincipalTotales=parametrofactuprincipal;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ParametroFactuPrincipalConstantesFunciones.TotalizarValoresFilaParametroFactuPrincipal(this.parametrofactuprincipalLogic.getParametroFactuPrincipals(),parametrofactuprincipalTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(ParametroFactuPrincipal parametrofactuprincipal:this.parametrofactuprincipals) {
				if(parametrofactuprincipal.getsType().equals(Constantes2.S_TOTALES)) {
					parametrofactuprincipalTotales=parametrofactuprincipal;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				ParametroFactuPrincipalConstantesFunciones.TotalizarValoresFilaParametroFactuPrincipal(this.parametrofactuprincipals,parametrofactuprincipalTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getParametroFactuPrincipalsFK_IdCuentaContableBoni()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableBoni";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuPrincipalsFK_IdCuentaContableBoniDevol()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableBoniDevol";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuPrincipalsFK_IdCuentaContableFinan()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableFinan";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuPrincipalsFK_IdCuentaContableFleteVenta()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableFleteVenta";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuPrincipalsFK_IdCuentaContableIce()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableIce";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuPrincipalsFK_IdCuentaContableOtroCargo()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContableOtroCargo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuPrincipalsFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuPrincipalsFK_IdFormato()throws Exception {
		try {
			sAccionBusqueda="FK_IdFormato";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuPrincipalsFK_IdLibroContable()throws Exception {
		try {
			sAccionBusqueda="FK_IdLibroContable";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuPrincipalsFK_IdMoneda()throws Exception {
		try {
			sAccionBusqueda="FK_IdMoneda";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuPrincipalsFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuPrincipalsFK_IdTipoDocumentoFactura()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoDocumentoFactura";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuPrincipalsFK_IdTipoDocumentoNotaCredito()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoDocumentoNotaCredito";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuPrincipalsFK_IdTipoDocumentoNotaDebito()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoDocumentoNotaDebito";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuPrincipalsFK_IdTipoParamFactuDescuento()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoParamFactuDescuento";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuPrincipalsFK_IdTipoParamFactuListadoCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoParamFactuListadoCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getParametroFactuPrincipalsFK_IdTipoParamFactuSecuenciaTrabajo()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoParamFactuSecuenciaTrabajo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getParametroFactuPrincipalsFK_IdCuentaContableBoni(String sFinalQuery,Long id_cuenta_contable_boni)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdCuentaContableBoni(sFinalQuery,this.pagination,id_cuenta_contable_boni);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuPrincipalsFK_IdCuentaContableBoniDevol(String sFinalQuery,Long id_cuenta_contable_boni_devol)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdCuentaContableBoniDevol(sFinalQuery,this.pagination,id_cuenta_contable_boni_devol);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuPrincipalsFK_IdCuentaContableFinan(String sFinalQuery,Long id_cuenta_contable_finan)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdCuentaContableFinan(sFinalQuery,this.pagination,id_cuenta_contable_finan);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuPrincipalsFK_IdCuentaContableFleteVenta(String sFinalQuery,Long id_cuenta_contable_flete_venta)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdCuentaContableFleteVenta(sFinalQuery,this.pagination,id_cuenta_contable_flete_venta);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuPrincipalsFK_IdCuentaContableIce(String sFinalQuery,Long id_cuenta_contable_ice)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdCuentaContableIce(sFinalQuery,this.pagination,id_cuenta_contable_ice);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuPrincipalsFK_IdCuentaContableOtroCargo(String sFinalQuery,Long id_cuenta_contable_otro_cargo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdCuentaContableOtroCargo(sFinalQuery,this.pagination,id_cuenta_contable_otro_cargo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuPrincipalsFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuPrincipalsFK_IdFormato(String sFinalQuery,Long id_formato)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdFormato(sFinalQuery,this.pagination,id_formato);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuPrincipalsFK_IdLibroContable(String sFinalQuery,Long id_libro_contable)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdLibroContable(sFinalQuery,this.pagination,id_libro_contable);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuPrincipalsFK_IdMoneda(String sFinalQuery,Long id_moneda)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdMoneda(sFinalQuery,this.pagination,id_moneda);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuPrincipalsFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuPrincipalsFK_IdTipoDocumentoFactura(String sFinalQuery,Long id_tipo_documento_factura)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdTipoDocumentoFactura(sFinalQuery,this.pagination,id_tipo_documento_factura);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuPrincipalsFK_IdTipoDocumentoNotaCredito(String sFinalQuery,Long id_tipo_documento_nota_credito)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdTipoDocumentoNotaCredito(sFinalQuery,this.pagination,id_tipo_documento_nota_credito);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuPrincipalsFK_IdTipoDocumentoNotaDebito(String sFinalQuery,Long id_tipo_documento_nota_debito)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdTipoDocumentoNotaDebito(sFinalQuery,this.pagination,id_tipo_documento_nota_debito);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuPrincipalsFK_IdTipoParamFactuDescuento(String sFinalQuery,Long id_tipo_param_factu_descuento)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdTipoParamFactuDescuento(sFinalQuery,this.pagination,id_tipo_param_factu_descuento);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuPrincipalsFK_IdTipoParamFactuListadoCliente(String sFinalQuery,Long id_tipo_param_factu_listado_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdTipoParamFactuListadoCliente(sFinalQuery,this.pagination,id_tipo_param_factu_listado_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getParametroFactuPrincipalsFK_IdTipoParamFactuSecuenciaTrabajo(String sFinalQuery,Long id_tipo_param_factu_secuencia_trabajo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuprincipalLogic.getParametroFactuPrincipalsFK_IdTipoParamFactuSecuenciaTrabajo(sFinalQuery,this.pagination,id_tipo_param_factu_secuencia_trabajo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosParametroFactuPrincipal() {
		this.isPermisoTodoParametroFactuPrincipal=false;
		this.isPermisoNuevoParametroFactuPrincipal=false;
		this.isPermisoActualizarParametroFactuPrincipal=false;
		this.isPermisoActualizarOriginalParametroFactuPrincipal=false;
		this.isPermisoEliminarParametroFactuPrincipal=false;
		this.isPermisoGuardarCambiosParametroFactuPrincipal=false;
		this.isPermisoConsultaParametroFactuPrincipal=false;
		this.isPermisoBusquedaParametroFactuPrincipal=false;
		this.isPermisoReporteParametroFactuPrincipal=false;		
		this.isPermisoOrdenParametroFactuPrincipal=false;		
		this.isPermisoPaginacionMedioParametroFactuPrincipal=false;		
		this.isPermisoPaginacionAltoParametroFactuPrincipal=false;
		this.isPermisoPaginacionTodoParametroFactuPrincipal=false;
		this.isPermisoCopiarParametroFactuPrincipal=false;		
		this.isPermisoVerFormParametroFactuPrincipal=false;		
		this.isPermisoDuplicarParametroFactuPrincipal=false;		
		this.isPermisoOrdenParametroFactuPrincipal=false;		
	}
	
	public void setPermisosUsuarioParametroFactuPrincipal(Boolean isPermiso) {
		this.isPermisoTodoParametroFactuPrincipal=isPermiso;
		this.isPermisoNuevoParametroFactuPrincipal=isPermiso;
		this.isPermisoActualizarParametroFactuPrincipal=isPermiso;
		this.isPermisoActualizarOriginalParametroFactuPrincipal=isPermiso;
		this.isPermisoEliminarParametroFactuPrincipal=isPermiso;
		this.isPermisoGuardarCambiosParametroFactuPrincipal=isPermiso;
		this.isPermisoConsultaParametroFactuPrincipal=isPermiso;
		this.isPermisoBusquedaParametroFactuPrincipal=isPermiso;
		this.isPermisoReporteParametroFactuPrincipal=isPermiso;
		this.isPermisoOrdenParametroFactuPrincipal=isPermiso;		
		this.isPermisoPaginacionMedioParametroFactuPrincipal=isPermiso;		
		this.isPermisoPaginacionAltoParametroFactuPrincipal=isPermiso;		
		this.isPermisoPaginacionTodoParametroFactuPrincipal=isPermiso;		
		this.isPermisoCopiarParametroFactuPrincipal=isPermiso;		
		this.isPermisoVerFormParametroFactuPrincipal=isPermiso;		
		this.isPermisoDuplicarParametroFactuPrincipal=isPermiso;
		this.isPermisoOrdenParametroFactuPrincipal=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioParametroFactuPrincipal(Boolean isPermiso) {
		//this.isPermisoTodoParametroFactuPrincipal=isPermiso;
		this.isPermisoNuevoParametroFactuPrincipal=isPermiso;
		this.isPermisoActualizarParametroFactuPrincipal=isPermiso;
		this.isPermisoActualizarOriginalParametroFactuPrincipal=isPermiso;
		this.isPermisoEliminarParametroFactuPrincipal=isPermiso;
		this.isPermisoGuardarCambiosParametroFactuPrincipal=isPermiso;
		//this.isPermisoConsultaParametroFactuPrincipal=isPermiso;
		//this.isPermisoBusquedaParametroFactuPrincipal=isPermiso;
		//this.isPermisoReporteParametroFactuPrincipal=isPermiso;
		//this.isPermisoOrdenParametroFactuPrincipal=isPermiso;		
		//this.isPermisoPaginacionMedioParametroFactuPrincipal=isPermiso;		
		//this.isPermisoPaginacionAltoParametroFactuPrincipal=isPermiso;		
		//this.isPermisoPaginacionTodoParametroFactuPrincipal=isPermiso;		
		//this.isPermisoCopiarParametroFactuPrincipal=isPermiso;		
		//this.isPermisoDuplicarParametroFactuPrincipal=isPermiso;
		//this.isPermisoOrdenParametroFactuPrincipal=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioParametroFactuPrincipalClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		
		if(ParametroFactuPrincipalJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebParametroFactuPrincipal(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioParametroFactuPrincipalClasesRelacionadas(Boolean conPermiso) throws Exception {
		
	}
	
	public Boolean verificarGetPermisosUsuarioParametroFactuPrincipalClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionParametroFactuPrincipalClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioParametroFactuPrincipalClasesRelacionadas() throws Exception {
		
	}
	
	public void setPermisosUsuarioParametroFactuPrincipal() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(ParametroFactuPrincipalJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, ParametroFactuPrincipalConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoParametroFactuPrincipal=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarParametroFactuPrincipal=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalParametroFactuPrincipal=this.isPermisoActualizarParametroFactuPrincipal;
			this.isPermisoEliminarParametroFactuPrincipal=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosParametroFactuPrincipal=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaParametroFactuPrincipal=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaParametroFactuPrincipal=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoParametroFactuPrincipal=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteParametroFactuPrincipal=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenParametroFactuPrincipal=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioParametroFactuPrincipal=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoParametroFactuPrincipal=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoParametroFactuPrincipal=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarParametroFactuPrincipal=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormParametroFactuPrincipal=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarParametroFactuPrincipal=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenParametroFactuPrincipal=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosParametroFactuPrincipal.setToolTipText(this.jTableDatosParametroFactuPrincipal.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioParametroFactuPrincipal(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioParametroFactuPrincipal(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(ParametroFactuPrincipalJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(ParametroFactuPrincipalJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioParametroFactuPrincipal() throws Exception {
		Reporte reporte=null;
		
		
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyParametroFactuPrincipalListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.tipoparamfactudescuentosForeignKey=new ArrayList();
				this.tipoparamfactulistadoclientesForeignKey=new ArrayList();
				this.tipoparamfactusecuenciatrabajosForeignKey=new ArrayList();
				this.tipodocumentofacturasForeignKey=new ArrayList();
				this.tipodocumentonotacreditosForeignKey=new ArrayList();
				this.tipodocumentonotadebitosForeignKey=new ArrayList();
				this.librocontablesForeignKey=new ArrayList();
				this.monedasForeignKey=new ArrayList();
				this.formatosForeignKey=new ArrayList();
				this.cuentacontablefleteventasForeignKey=new ArrayList();
				this.cuentacontableotrocargosForeignKey=new ArrayList();
				this.cuentacontablefinansForeignKey=new ArrayList();
				this.cuentacontablebonisForeignKey=new ArrayList();
				this.cuentacontablebonidevolsForeignKey=new ArrayList();
				this.cuentacontableicesForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyParametroFactuPrincipalListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(ParametroFactuPrincipalJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyParametroFactuPrincipalListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoParamFactuDescuentoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoParamFactuListadoClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoParamFactuSecuenciaTrabajoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoDocumentoFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoDocumentoNotaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoDocumentoNotaDebitoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyLibroContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMonedaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableFleteVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableOtroCargoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableFinanListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableBoniListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableBoniDevolListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableIceListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoParamFactuDescuentoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoparamfactudescuentosForeignKey==null||this.tipoparamfactudescuentosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoParamFactuDescuentoConstantesFunciones.getArrayColumnasGlobalesTipoParamFactuDescuento(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoParamFactuDescuentoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoParamFactuDescuentoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoParamFactuDescuentosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoParamFactuListadoClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoparamfactulistadoclientesForeignKey==null||this.tipoparamfactulistadoclientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoParamFactuListadoClienteConstantesFunciones.getArrayColumnasGlobalesTipoParamFactuListadoCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoParamFactuListadoClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoParamFactuListadoClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoParamFactuListadoClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoParamFactuSecuenciaTrabajoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipoparamfactusecuenciatrabajosForeignKey==null||this.tipoparamfactusecuenciatrabajosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoParamFactuSecuenciaTrabajoConstantesFunciones.getArrayColumnasGlobalesTipoParamFactuSecuenciaTrabajo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoParamFactuSecuenciaTrabajoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoParamFactuSecuenciaTrabajoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoParamFactuSecuenciaTrabajosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDocumentoFacturaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipodocumentofacturasForeignKey==null||this.tipodocumentofacturasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoDocumentoConstantesFunciones.getArrayColumnasGlobalesTipoDocumento(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDocumentoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoDocumentoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoDocumentoFacturasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDocumentoNotaCreditoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipodocumentonotacreditosForeignKey==null||this.tipodocumentonotacreditosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoDocumentoConstantesFunciones.getArrayColumnasGlobalesTipoDocumento(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDocumentoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoDocumentoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoDocumentoNotaCreditosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDocumentoNotaDebitoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipodocumentonotadebitosForeignKey==null||this.tipodocumentonotadebitosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoDocumentoConstantesFunciones.getArrayColumnasGlobalesTipoDocumento(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDocumentoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoDocumentoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoDocumentoNotaDebitosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLibroContableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.librocontablesForeignKey==null||this.librocontablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=LibroContableConstantesFunciones.getArrayColumnasGlobalesLibroContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LibroContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=LibroContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosLibroContablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMonedaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MonedaConstantesFunciones.SFINALQUERY;

				this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FormatoConstantesFunciones.SFINALQUERY;

				this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableFleteVentaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablefleteventasForeignKey==null||this.cuentacontablefleteventasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableFleteVentasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableOtroCargoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableotrocargosForeignKey==null||this.cuentacontableotrocargosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableOtroCargosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableFinanListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablefinansForeignKey==null||this.cuentacontablefinansForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableFinansForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableBoniListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablebonisForeignKey==null||this.cuentacontablebonisForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableBonisForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableBoniDevolListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablebonidevolsForeignKey==null||this.cuentacontablebonidevolsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableBoniDevolsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableIceListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontableicesForeignKey==null||this.cuentacontableicesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContableIcesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyParametroFactuPrincipalListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			ParametroFactuPrincipalParameterReturnGeneral parametrofactuprincipalReturnGeneral=new ParametroFactuPrincipalParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.parametrofactuprincipalConstantesFunciones.cargarid_empresaParametroFactuPrincipal)
					 || (this.esRecargarFks && this.parametrofactuprincipalConstantesFunciones.cargarid_empresaParametroFactuPrincipal)) {

					if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+parametrofactuprincipalSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.parametrofactuprincipalConstantesFunciones.cargarid_sucursalParametroFactuPrincipal)
					 || (this.esRecargarFks && this.parametrofactuprincipalConstantesFunciones.cargarid_sucursalParametroFactuPrincipal)) {

					if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+parametrofactuprincipalSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalTipoParamFactuDescuento="";

				if(((this.tipoparamfactudescuentosForeignKey==null||this.tipoparamfactudescuentosForeignKey.size()<=0) && this.parametrofactuprincipalConstantesFunciones.cargarid_tipo_param_factu_descuentoParametroFactuPrincipal)
					 || (this.esRecargarFks && this.parametrofactuprincipalConstantesFunciones.cargarid_tipo_param_factu_descuentoParametroFactuPrincipal)) {

					if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionTipoParamFactuDescuento()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoParamFactuDescuentoConstantesFunciones.getArrayColumnasGlobalesTipoParamFactuDescuento(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoParamFactuDescuento=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoParamFactuDescuentoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoParamFactuDescuento=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoParamFactuDescuento, "");
						finalQueryGlobalTipoParamFactuDescuento+=TipoParamFactuDescuentoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoParamFactuDescuentosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoParamFactuDescuento=" WHERE " + ConstantesSql.ID + "="+parametrofactuprincipalSessionBean.getlidTipoParamFactuDescuentoActual();
					}
				} else {
					finalQueryGlobalTipoParamFactuDescuento="NONE";
				}


				String finalQueryGlobalTipoParamFactuListadoCliente="";

				if(((this.tipoparamfactulistadoclientesForeignKey==null||this.tipoparamfactulistadoclientesForeignKey.size()<=0) && this.parametrofactuprincipalConstantesFunciones.cargarid_tipo_param_factu_listado_clienteParametroFactuPrincipal)
					 || (this.esRecargarFks && this.parametrofactuprincipalConstantesFunciones.cargarid_tipo_param_factu_listado_clienteParametroFactuPrincipal)) {

					if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionTipoParamFactuListadoCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoParamFactuListadoClienteConstantesFunciones.getArrayColumnasGlobalesTipoParamFactuListadoCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoParamFactuListadoCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoParamFactuListadoClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoParamFactuListadoCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoParamFactuListadoCliente, "");
						finalQueryGlobalTipoParamFactuListadoCliente+=TipoParamFactuListadoClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoParamFactuListadoClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoParamFactuListadoCliente=" WHERE " + ConstantesSql.ID + "="+parametrofactuprincipalSessionBean.getlidTipoParamFactuListadoClienteActual();
					}
				} else {
					finalQueryGlobalTipoParamFactuListadoCliente="NONE";
				}


				String finalQueryGlobalTipoParamFactuSecuenciaTrabajo="";

				if(((this.tipoparamfactusecuenciatrabajosForeignKey==null||this.tipoparamfactusecuenciatrabajosForeignKey.size()<=0) && this.parametrofactuprincipalConstantesFunciones.cargarid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal)
					 || (this.esRecargarFks && this.parametrofactuprincipalConstantesFunciones.cargarid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal)) {

					if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionTipoParamFactuSecuenciaTrabajo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoParamFactuSecuenciaTrabajoConstantesFunciones.getArrayColumnasGlobalesTipoParamFactuSecuenciaTrabajo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoParamFactuSecuenciaTrabajo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoParamFactuSecuenciaTrabajoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoParamFactuSecuenciaTrabajo=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoParamFactuSecuenciaTrabajo, "");
						finalQueryGlobalTipoParamFactuSecuenciaTrabajo+=TipoParamFactuSecuenciaTrabajoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoParamFactuSecuenciaTrabajosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoParamFactuSecuenciaTrabajo=" WHERE " + ConstantesSql.ID + "="+parametrofactuprincipalSessionBean.getlidTipoParamFactuSecuenciaTrabajoActual();
					}
				} else {
					finalQueryGlobalTipoParamFactuSecuenciaTrabajo="NONE";
				}


				String finalQueryGlobalTipoDocumentoFactura="";

				if(((this.tipodocumentofacturasForeignKey==null||this.tipodocumentofacturasForeignKey.size()<=0) && this.parametrofactuprincipalConstantesFunciones.cargarid_tipo_documento_facturaParametroFactuPrincipal)
					 || (this.esRecargarFks && this.parametrofactuprincipalConstantesFunciones.cargarid_tipo_documento_facturaParametroFactuPrincipal)) {

					if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoFactura()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoDocumentoConstantesFunciones.getArrayColumnasGlobalesTipoDocumento(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoDocumentoFactura=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDocumentoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoDocumentoFactura=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoDocumentoFactura, "");
						finalQueryGlobalTipoDocumentoFactura+=TipoDocumentoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoDocumentoFacturasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoDocumentoFactura=" WHERE " + ConstantesSql.ID + "="+parametrofactuprincipalSessionBean.getlidTipoDocumentoFacturaActual();
					}
				} else {
					finalQueryGlobalTipoDocumentoFactura="NONE";
				}


				String finalQueryGlobalTipoDocumentoNotaCredito="";

				if(((this.tipodocumentonotacreditosForeignKey==null||this.tipodocumentonotacreditosForeignKey.size()<=0) && this.parametrofactuprincipalConstantesFunciones.cargarid_tipo_documento_nota_creditoParametroFactuPrincipal)
					 || (this.esRecargarFks && this.parametrofactuprincipalConstantesFunciones.cargarid_tipo_documento_nota_creditoParametroFactuPrincipal)) {

					if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoNotaCredito()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoDocumentoConstantesFunciones.getArrayColumnasGlobalesTipoDocumento(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoDocumentoNotaCredito=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDocumentoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoDocumentoNotaCredito=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoDocumentoNotaCredito, "");
						finalQueryGlobalTipoDocumentoNotaCredito+=TipoDocumentoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoDocumentoNotaCreditosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoDocumentoNotaCredito=" WHERE " + ConstantesSql.ID + "="+parametrofactuprincipalSessionBean.getlidTipoDocumentoNotaCreditoActual();
					}
				} else {
					finalQueryGlobalTipoDocumentoNotaCredito="NONE";
				}


				String finalQueryGlobalTipoDocumentoNotaDebito="";

				if(((this.tipodocumentonotadebitosForeignKey==null||this.tipodocumentonotadebitosForeignKey.size()<=0) && this.parametrofactuprincipalConstantesFunciones.cargarid_tipo_documento_nota_debitoParametroFactuPrincipal)
					 || (this.esRecargarFks && this.parametrofactuprincipalConstantesFunciones.cargarid_tipo_documento_nota_debitoParametroFactuPrincipal)) {

					if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoNotaDebito()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoDocumentoConstantesFunciones.getArrayColumnasGlobalesTipoDocumento(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoDocumentoNotaDebito=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoDocumentoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoDocumentoNotaDebito=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoDocumentoNotaDebito, "");
						finalQueryGlobalTipoDocumentoNotaDebito+=TipoDocumentoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoDocumentoNotaDebitosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoDocumentoNotaDebito=" WHERE " + ConstantesSql.ID + "="+parametrofactuprincipalSessionBean.getlidTipoDocumentoNotaDebitoActual();
					}
				} else {
					finalQueryGlobalTipoDocumentoNotaDebito="NONE";
				}


				String finalQueryGlobalLibroContable="";

				if(((this.librocontablesForeignKey==null||this.librocontablesForeignKey.size()<=0) && this.parametrofactuprincipalConstantesFunciones.cargarid_libro_contableParametroFactuPrincipal)
					 || (this.esRecargarFks && this.parametrofactuprincipalConstantesFunciones.cargarid_libro_contableParametroFactuPrincipal)) {

					if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionLibroContable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=LibroContableConstantesFunciones.getArrayColumnasGlobalesLibroContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalLibroContable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,LibroContableConstantesFunciones.TABLENAME);

						finalQueryGlobalLibroContable=Funciones.GetFinalQueryAppend(finalQueryGlobalLibroContable, "");
						finalQueryGlobalLibroContable+=LibroContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosLibroContablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalLibroContable=" WHERE " + ConstantesSql.ID + "="+parametrofactuprincipalSessionBean.getlidLibroContableActual();
					}
				} else {
					finalQueryGlobalLibroContable="NONE";
				}


				String finalQueryGlobalMoneda="";

				if(((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0) && this.parametrofactuprincipalConstantesFunciones.cargarid_monedaParametroFactuPrincipal)
					 || (this.esRecargarFks && this.parametrofactuprincipalConstantesFunciones.cargarid_monedaParametroFactuPrincipal)) {

					if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMoneda=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

						finalQueryGlobalMoneda=Funciones.GetFinalQueryAppend(finalQueryGlobalMoneda, "");
						finalQueryGlobalMoneda+=MonedaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMoneda=" WHERE " + ConstantesSql.ID + "="+parametrofactuprincipalSessionBean.getlidMonedaActual();
					}
				} else {
					finalQueryGlobalMoneda="NONE";
				}


				String finalQueryGlobalFormato="";

				if(((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0) && this.parametrofactuprincipalConstantesFunciones.cargarid_formatoParametroFactuPrincipal)
					 || (this.esRecargarFks && this.parametrofactuprincipalConstantesFunciones.cargarid_formatoParametroFactuPrincipal)) {

					if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFormato=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

						finalQueryGlobalFormato=Funciones.GetFinalQueryAppend(finalQueryGlobalFormato, "");
						finalQueryGlobalFormato+=FormatoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFormato=" WHERE " + ConstantesSql.ID + "="+parametrofactuprincipalSessionBean.getlidFormatoActual();
					}
				} else {
					finalQueryGlobalFormato="NONE";
				}


				String finalQueryGlobalCuentaContableFleteVenta="";

				if(((this.cuentacontablefleteventasForeignKey==null||this.cuentacontablefleteventasForeignKey.size()<=0) && this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_flete_ventaParametroFactuPrincipal)
					 || (this.esRecargarFks && this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_flete_ventaParametroFactuPrincipal)) {

					if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableFleteVenta()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableFleteVenta=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableFleteVenta=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableFleteVenta, "");
						finalQueryGlobalCuentaContableFleteVenta+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableFleteVentasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableFleteVenta=" WHERE " + ConstantesSql.ID + "="+parametrofactuprincipalSessionBean.getlidCuentaContableFleteVentaActual();
					}
				} else {
					finalQueryGlobalCuentaContableFleteVenta="NONE";
				}


				String finalQueryGlobalCuentaContableOtroCargo="";

				if(((this.cuentacontableotrocargosForeignKey==null||this.cuentacontableotrocargosForeignKey.size()<=0) && this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_otro_cargoParametroFactuPrincipal)
					 || (this.esRecargarFks && this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_otro_cargoParametroFactuPrincipal)) {

					if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableOtroCargo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableOtroCargo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableOtroCargo=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableOtroCargo, "");
						finalQueryGlobalCuentaContableOtroCargo+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableOtroCargosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableOtroCargo=" WHERE " + ConstantesSql.ID + "="+parametrofactuprincipalSessionBean.getlidCuentaContableOtroCargoActual();
					}
				} else {
					finalQueryGlobalCuentaContableOtroCargo="NONE";
				}


				String finalQueryGlobalCuentaContableFinan="";

				if(((this.cuentacontablefinansForeignKey==null||this.cuentacontablefinansForeignKey.size()<=0) && this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_finanParametroFactuPrincipal)
					 || (this.esRecargarFks && this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_finanParametroFactuPrincipal)) {

					if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableFinan()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableFinan=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableFinan=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableFinan, "");
						finalQueryGlobalCuentaContableFinan+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableFinansForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableFinan=" WHERE " + ConstantesSql.ID + "="+parametrofactuprincipalSessionBean.getlidCuentaContableFinanActual();
					}
				} else {
					finalQueryGlobalCuentaContableFinan="NONE";
				}


				String finalQueryGlobalCuentaContableBoni="";

				if(((this.cuentacontablebonisForeignKey==null||this.cuentacontablebonisForeignKey.size()<=0) && this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_boniParametroFactuPrincipal)
					 || (this.esRecargarFks && this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_boniParametroFactuPrincipal)) {

					if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableBoni()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableBoni=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableBoni=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableBoni, "");
						finalQueryGlobalCuentaContableBoni+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableBonisForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableBoni=" WHERE " + ConstantesSql.ID + "="+parametrofactuprincipalSessionBean.getlidCuentaContableBoniActual();
					}
				} else {
					finalQueryGlobalCuentaContableBoni="NONE";
				}


				String finalQueryGlobalCuentaContableBoniDevol="";

				if(((this.cuentacontablebonidevolsForeignKey==null||this.cuentacontablebonidevolsForeignKey.size()<=0) && this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_boni_devolParametroFactuPrincipal)
					 || (this.esRecargarFks && this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_boni_devolParametroFactuPrincipal)) {

					if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableBoniDevol()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableBoniDevol=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableBoniDevol=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableBoniDevol, "");
						finalQueryGlobalCuentaContableBoniDevol+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableBoniDevolsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableBoniDevol=" WHERE " + ConstantesSql.ID + "="+parametrofactuprincipalSessionBean.getlidCuentaContableBoniDevolActual();
					}
				} else {
					finalQueryGlobalCuentaContableBoniDevol="NONE";
				}


				String finalQueryGlobalCuentaContableIce="";

				if(((this.cuentacontableicesForeignKey==null||this.cuentacontableicesForeignKey.size()<=0) && this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_iceParametroFactuPrincipal)
					 || (this.esRecargarFks && this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_iceParametroFactuPrincipal)) {

					if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIce()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContableIce=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContableIce=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContableIce, "");
						finalQueryGlobalCuentaContableIce+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContableIcesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContableIce=" WHERE " + ConstantesSql.ID + "="+parametrofactuprincipalSessionBean.getlidCuentaContableIceActual();
					}
				} else {
					finalQueryGlobalCuentaContableIce="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				parametrofactuprincipalReturnGeneral=parametrofactuprincipalLogic.cargarCombosLoteForeignKeyParametroFactuPrincipal(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalTipoParamFactuDescuento,finalQueryGlobalTipoParamFactuListadoCliente,finalQueryGlobalTipoParamFactuSecuenciaTrabajo,finalQueryGlobalTipoDocumentoFactura,finalQueryGlobalTipoDocumentoNotaCredito,finalQueryGlobalTipoDocumentoNotaDebito,finalQueryGlobalLibroContable,finalQueryGlobalMoneda,finalQueryGlobalFormato,finalQueryGlobalCuentaContableFleteVenta,finalQueryGlobalCuentaContableOtroCargo,finalQueryGlobalCuentaContableFinan,finalQueryGlobalCuentaContableBoni,finalQueryGlobalCuentaContableBoniDevol,finalQueryGlobalCuentaContableIce);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=parametrofactuprincipalReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=parametrofactuprincipalReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalTipoParamFactuDescuento.equals("NONE")) {
				this.tipoparamfactudescuentosForeignKey=parametrofactuprincipalReturnGeneral.gettipoparamfactudescuentosForeignKey();
			}

			if(!finalQueryGlobalTipoParamFactuListadoCliente.equals("NONE")) {
				this.tipoparamfactulistadoclientesForeignKey=parametrofactuprincipalReturnGeneral.gettipoparamfactulistadoclientesForeignKey();
			}

			if(!finalQueryGlobalTipoParamFactuSecuenciaTrabajo.equals("NONE")) {
				this.tipoparamfactusecuenciatrabajosForeignKey=parametrofactuprincipalReturnGeneral.gettipoparamfactusecuenciatrabajosForeignKey();
			}

			if(!finalQueryGlobalTipoDocumentoFactura.equals("NONE")) {
				this.tipodocumentofacturasForeignKey=parametrofactuprincipalReturnGeneral.gettipodocumentofacturasForeignKey();
			}

			if(!finalQueryGlobalTipoDocumentoNotaCredito.equals("NONE")) {
				this.tipodocumentonotacreditosForeignKey=parametrofactuprincipalReturnGeneral.gettipodocumentonotacreditosForeignKey();
			}

			if(!finalQueryGlobalTipoDocumentoNotaDebito.equals("NONE")) {
				this.tipodocumentonotadebitosForeignKey=parametrofactuprincipalReturnGeneral.gettipodocumentonotadebitosForeignKey();
			}

			if(!finalQueryGlobalLibroContable.equals("NONE")) {
				this.librocontablesForeignKey=parametrofactuprincipalReturnGeneral.getlibrocontablesForeignKey();
			}

			if(!finalQueryGlobalMoneda.equals("NONE")) {
				this.monedasForeignKey=parametrofactuprincipalReturnGeneral.getmonedasForeignKey();
			}

			if(!finalQueryGlobalFormato.equals("NONE")) {
				this.formatosForeignKey=parametrofactuprincipalReturnGeneral.getformatosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableFleteVenta.equals("NONE")) {
				this.cuentacontablefleteventasForeignKey=parametrofactuprincipalReturnGeneral.getcuentacontablefleteventasForeignKey();
			}

			if(!finalQueryGlobalCuentaContableOtroCargo.equals("NONE")) {
				this.cuentacontableotrocargosForeignKey=parametrofactuprincipalReturnGeneral.getcuentacontableotrocargosForeignKey();
			}

			if(!finalQueryGlobalCuentaContableFinan.equals("NONE")) {
				this.cuentacontablefinansForeignKey=parametrofactuprincipalReturnGeneral.getcuentacontablefinansForeignKey();
			}

			if(!finalQueryGlobalCuentaContableBoni.equals("NONE")) {
				this.cuentacontablebonisForeignKey=parametrofactuprincipalReturnGeneral.getcuentacontablebonisForeignKey();
			}

			if(!finalQueryGlobalCuentaContableBoniDevol.equals("NONE")) {
				this.cuentacontablebonidevolsForeignKey=parametrofactuprincipalReturnGeneral.getcuentacontablebonidevolsForeignKey();
			}

			if(!finalQueryGlobalCuentaContableIce.equals("NONE")) {
				this.cuentacontableicesForeignKey=parametrofactuprincipalReturnGeneral.getcuentacontableicesForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyParametroFactuPrincipal()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyTipoParamFactuDescuento();
			this.addItemDefectoCombosForeignKeyTipoParamFactuListadoCliente();
			this.addItemDefectoCombosForeignKeyTipoParamFactuSecuenciaTrabajo();
			this.addItemDefectoCombosForeignKeyTipoDocumentoFactura();
			this.addItemDefectoCombosForeignKeyTipoDocumentoNotaCredito();
			this.addItemDefectoCombosForeignKeyTipoDocumentoNotaDebito();
			this.addItemDefectoCombosForeignKeyLibroContable();
			this.addItemDefectoCombosForeignKeyMoneda();
			this.addItemDefectoCombosForeignKeyFormato();
			this.addItemDefectoCombosForeignKeyCuentaContableFleteVenta();
			this.addItemDefectoCombosForeignKeyCuentaContableOtroCargo();
			this.addItemDefectoCombosForeignKeyCuentaContableFinan();
			this.addItemDefectoCombosForeignKeyCuentaContableBoni();
			this.addItemDefectoCombosForeignKeyCuentaContableBoniDevol();
			this.addItemDefectoCombosForeignKeyCuentaContableIce();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.parametrofactuprincipalSessionBean==null) {
				this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoParamFactuDescuento()throws Exception {
		try {

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionTipoParamFactuDescuento()) {
				TipoParamFactuDescuento tipoparamfactudescuento=new TipoParamFactuDescuento();
				TipoParamFactuDescuentoConstantesFunciones.setTipoParamFactuDescuentoDescripcion(tipoparamfactudescuento,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoparamfactudescuento.setId(null);

				if(!TipoParamFactuDescuentoConstantesFunciones.ExisteEnLista(this.tipoparamfactudescuentosForeignKey,tipoparamfactudescuento,true)) {

					this.tipoparamfactudescuentosForeignKey.add(0,tipoparamfactudescuento);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoParamFactuListadoCliente()throws Exception {
		try {

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionTipoParamFactuListadoCliente()) {
				TipoParamFactuListadoCliente tipoparamfactulistadocliente=new TipoParamFactuListadoCliente();
				TipoParamFactuListadoClienteConstantesFunciones.setTipoParamFactuListadoClienteDescripcion(tipoparamfactulistadocliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoparamfactulistadocliente.setId(null);

				if(!TipoParamFactuListadoClienteConstantesFunciones.ExisteEnLista(this.tipoparamfactulistadoclientesForeignKey,tipoparamfactulistadocliente,true)) {

					this.tipoparamfactulistadoclientesForeignKey.add(0,tipoparamfactulistadocliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoParamFactuSecuenciaTrabajo()throws Exception {
		try {

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionTipoParamFactuSecuenciaTrabajo()) {
				TipoParamFactuSecuenciaTrabajo tipoparamfactusecuenciatrabajo=new TipoParamFactuSecuenciaTrabajo();
				TipoParamFactuSecuenciaTrabajoConstantesFunciones.setTipoParamFactuSecuenciaTrabajoDescripcion(tipoparamfactusecuenciatrabajo,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoparamfactusecuenciatrabajo.setId(null);

				if(!TipoParamFactuSecuenciaTrabajoConstantesFunciones.ExisteEnLista(this.tipoparamfactusecuenciatrabajosForeignKey,tipoparamfactusecuenciatrabajo,true)) {

					this.tipoparamfactusecuenciatrabajosForeignKey.add(0,tipoparamfactusecuenciatrabajo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoDocumentoFactura()throws Exception {
		try {

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoFactura()) {
				TipoDocumento tipodocumentofactura=new TipoDocumento();
				TipoDocumentoConstantesFunciones.setTipoDocumentoDescripcion(tipodocumentofactura,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipodocumentofactura.setId(null);

				if(!TipoDocumentoConstantesFunciones.ExisteEnLista(this.tipodocumentofacturasForeignKey,tipodocumentofactura,true)) {

					this.tipodocumentofacturasForeignKey.add(0,tipodocumentofactura);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoDocumentoNotaCredito()throws Exception {
		try {

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoNotaCredito()) {
				TipoDocumento tipodocumentonotacredito=new TipoDocumento();
				TipoDocumentoConstantesFunciones.setTipoDocumentoDescripcion(tipodocumentonotacredito,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipodocumentonotacredito.setId(null);

				if(!TipoDocumentoConstantesFunciones.ExisteEnLista(this.tipodocumentonotacreditosForeignKey,tipodocumentonotacredito,true)) {

					this.tipodocumentonotacreditosForeignKey.add(0,tipodocumentonotacredito);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoDocumentoNotaDebito()throws Exception {
		try {

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumentoNotaDebito()) {
				TipoDocumento tipodocumentonotadebito=new TipoDocumento();
				TipoDocumentoConstantesFunciones.setTipoDocumentoDescripcion(tipodocumentonotadebito,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipodocumentonotadebito.setId(null);

				if(!TipoDocumentoConstantesFunciones.ExisteEnLista(this.tipodocumentonotadebitosForeignKey,tipodocumentonotadebito,true)) {

					this.tipodocumentonotadebitosForeignKey.add(0,tipodocumentonotadebito);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyLibroContable()throws Exception {
		try {

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionLibroContable()) {
				LibroContable librocontable=new LibroContable();
				LibroContableConstantesFunciones.setLibroContableDescripcion(librocontable,Constantes.SMENSAJE_ESCOJA_OPCION);
				librocontable.setId(null);

				if(!LibroContableConstantesFunciones.ExisteEnLista(this.librocontablesForeignKey,librocontable,true)) {

					this.librocontablesForeignKey.add(0,librocontable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMoneda()throws Exception {
		try {

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				Moneda moneda=new Moneda();
				MonedaConstantesFunciones.setMonedaDescripcion(moneda,Constantes.SMENSAJE_ESCOJA_OPCION);
				moneda.setId(null);

				if(!MonedaConstantesFunciones.ExisteEnLista(this.monedasForeignKey,moneda,true)) {

					this.monedasForeignKey.add(0,moneda);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFormato()throws Exception {
		try {

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				Formato formato=new Formato();
				FormatoConstantesFunciones.setFormatoDescripcion(formato,Constantes.SMENSAJE_ESCOJA_OPCION);
				formato.setId(null);

				if(!FormatoConstantesFunciones.ExisteEnLista(this.formatosForeignKey,formato,true)) {

					this.formatosForeignKey.add(0,formato);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableFleteVenta()throws Exception {
		try {

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableFleteVenta()) {
				CuentaContable cuentacontablefleteventa=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontablefleteventa,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontablefleteventa.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablefleteventasForeignKey,cuentacontablefleteventa,true)) {

					this.cuentacontablefleteventasForeignKey.add(0,cuentacontablefleteventa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableOtroCargo()throws Exception {
		try {

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableOtroCargo()) {
				CuentaContable cuentacontableotrocargo=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableotrocargo,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableotrocargo.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableotrocargosForeignKey,cuentacontableotrocargo,true)) {

					this.cuentacontableotrocargosForeignKey.add(0,cuentacontableotrocargo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableFinan()throws Exception {
		try {

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableFinan()) {
				CuentaContable cuentacontablefinan=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontablefinan,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontablefinan.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablefinansForeignKey,cuentacontablefinan,true)) {

					this.cuentacontablefinansForeignKey.add(0,cuentacontablefinan);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableBoni()throws Exception {
		try {

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableBoni()) {
				CuentaContable cuentacontableboni=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableboni,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableboni.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablebonisForeignKey,cuentacontableboni,true)) {

					this.cuentacontablebonisForeignKey.add(0,cuentacontableboni);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableBoniDevol()throws Exception {
		try {

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableBoniDevol()) {
				CuentaContable cuentacontablebonidevol=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontablebonidevol,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontablebonidevol.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablebonidevolsForeignKey,cuentacontablebonidevol,true)) {

					this.cuentacontablebonidevolsForeignKey.add(0,cuentacontablebonidevol);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContableIce()throws Exception {
		try {

			if(!this.parametrofactuprincipalSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContableIce()) {
				CuentaContable cuentacontableice=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontableice,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontableice.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontableicesForeignKey,cuentacontableice,true)) {

					this.cuentacontableicesForeignKey.add(0,cuentacontableice);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyParametroFactuPrincipal()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyParametroFactuPrincipal(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyParametroFactuPrincipal()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualMonedaForeignKey(this.parametroGeneralUsuario.getid_moneda(),false,"Formulario");
			
			
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyParametroFactuPrincipal();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyParametroFactuPrincipal(ParametroFactuPrincipal parametrofactuprincipal)throws Exception {	
		try {
			
			this.setActualTipoParamFactuDescuentoForeignKey(parametrofactuprincipal.getid_tipo_param_factu_descuento(),false,"Formulario");
			this.setActualTipoParamFactuListadoClienteForeignKey(parametrofactuprincipal.getid_tipo_param_factu_listado_cliente(),false,"Formulario");
			this.setActualTipoParamFactuSecuenciaTrabajoForeignKey(parametrofactuprincipal.getid_tipo_param_factu_secuencia_trabajo(),false,"Formulario");
			this.setActualTipoDocumentoFacturaForeignKey(parametrofactuprincipal.getid_tipo_documento_factura(),false,"Formulario");
			this.setActualTipoDocumentoNotaCreditoForeignKey(parametrofactuprincipal.getid_tipo_documento_nota_credito(),false,"Formulario");
			this.setActualTipoDocumentoNotaDebitoForeignKey(parametrofactuprincipal.getid_tipo_documento_nota_debito(),false,"Formulario");
			this.setActualLibroContableForeignKey(parametrofactuprincipal.getid_libro_contable(),false,"Formulario");
			this.setActualFormatoForeignKey(parametrofactuprincipal.getid_formato(),false,"Formulario");
			this.setActualCuentaContableFleteVentaForeignKey(parametrofactuprincipal.getid_cuenta_contable_flete_venta(),false,"Formulario");
			this.setActualCuentaContableOtroCargoForeignKey(parametrofactuprincipal.getid_cuenta_contable_otro_cargo(),false,"Formulario");
			this.setActualCuentaContableFinanForeignKey(parametrofactuprincipal.getid_cuenta_contable_finan(),false,"Formulario");
			this.setActualCuentaContableBoniForeignKey(parametrofactuprincipal.getid_cuenta_contable_boni(),false,"Formulario");
			this.setActualCuentaContableBoniDevolForeignKey(parametrofactuprincipal.getid_cuenta_contable_boni_devol(),false,"Formulario");
			this.setActualCuentaContableIceForeignKey(parametrofactuprincipal.getid_cuenta_contable_ice(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyParametroFactuPrincipal(ParametroFactuPrincipal parametrofactuprincipal,String sTipoEvento)throws Exception {	
		try {
			
			

				if(parametrofactuprincipal.getCuentaContableFleteVenta()!=null && !sTipoEvento.equals("id_cuenta_contable_flete_ventaParametroFactuPrincipal")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontablefleteventasForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontablefleteventasForeignKey.add(parametrofactuprincipal.getCuentaContableFleteVenta());

					this.addItemDefectoCombosForeignKeyCuentaContableFleteVenta();
					this.cargarCombosFrameCuentaContableFleteVentasForeignKey("Todos");
				}

				if(parametrofactuprincipal.getCuentaContableOtroCargo()!=null && !sTipoEvento.equals("id_cuenta_contable_otro_cargoParametroFactuPrincipal")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontableotrocargosForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontableotrocargosForeignKey.add(parametrofactuprincipal.getCuentaContableOtroCargo());

					this.addItemDefectoCombosForeignKeyCuentaContableOtroCargo();
					this.cargarCombosFrameCuentaContableOtroCargosForeignKey("Todos");
				}

				if(parametrofactuprincipal.getCuentaContableFinan()!=null && !sTipoEvento.equals("id_cuenta_contable_finanParametroFactuPrincipal")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontablefinansForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontablefinansForeignKey.add(parametrofactuprincipal.getCuentaContableFinan());

					this.addItemDefectoCombosForeignKeyCuentaContableFinan();
					this.cargarCombosFrameCuentaContableFinansForeignKey("Todos");
				}

				if(parametrofactuprincipal.getCuentaContableBoni()!=null && !sTipoEvento.equals("id_cuenta_contable_boniParametroFactuPrincipal")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontablebonisForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontablebonisForeignKey.add(parametrofactuprincipal.getCuentaContableBoni());

					this.addItemDefectoCombosForeignKeyCuentaContableBoni();
					this.cargarCombosFrameCuentaContableBonisForeignKey("Todos");
				}

				if(parametrofactuprincipal.getCuentaContableBoniDevol()!=null && !sTipoEvento.equals("id_cuenta_contable_boni_devolParametroFactuPrincipal")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontablebonidevolsForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontablebonidevolsForeignKey.add(parametrofactuprincipal.getCuentaContableBoniDevol());

					this.addItemDefectoCombosForeignKeyCuentaContableBoniDevol();
					this.cargarCombosFrameCuentaContableBoniDevolsForeignKey("Todos");
				}

				if(parametrofactuprincipal.getCuentaContableIce()!=null && !sTipoEvento.equals("id_cuenta_contable_iceParametroFactuPrincipal")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontableicesForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontableicesForeignKey.add(parametrofactuprincipal.getCuentaContableIce());

					this.addItemDefectoCombosForeignKeyCuentaContableIce();
					this.cargarCombosFrameCuentaContableIcesForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyParametroFactuPrincipal()throws Exception {	
		try {
			
			this.setActualTipoParamFactuDescuentoForeignKey(this.parametrofactuprincipalConstantesFunciones.getid_tipo_param_factu_descuento(),false,"Formulario");
			this.setActualTipoParamFactuListadoClienteForeignKey(this.parametrofactuprincipalConstantesFunciones.getid_tipo_param_factu_listado_cliente(),false,"Formulario");
			this.setActualTipoParamFactuSecuenciaTrabajoForeignKey(this.parametrofactuprincipalConstantesFunciones.getid_tipo_param_factu_secuencia_trabajo(),false,"Formulario");
			this.setActualTipoDocumentoFacturaForeignKey(this.parametrofactuprincipalConstantesFunciones.getid_tipo_documento_factura(),false,"Formulario");
			this.setActualTipoDocumentoNotaCreditoForeignKey(this.parametrofactuprincipalConstantesFunciones.getid_tipo_documento_nota_credito(),false,"Formulario");
			this.setActualTipoDocumentoNotaDebitoForeignKey(this.parametrofactuprincipalConstantesFunciones.getid_tipo_documento_nota_debito(),false,"Formulario");
			this.setActualLibroContableForeignKey(this.parametrofactuprincipalConstantesFunciones.getid_libro_contable(),false,"Formulario");
			this.setActualFormatoForeignKey(this.parametrofactuprincipalConstantesFunciones.getid_formato(),false,"Formulario");
			this.setActualCuentaContableFleteVentaForeignKey(this.parametrofactuprincipalConstantesFunciones.getid_cuenta_contable_flete_venta(),false,"Formulario");
			this.setActualCuentaContableOtroCargoForeignKey(this.parametrofactuprincipalConstantesFunciones.getid_cuenta_contable_otro_cargo(),false,"Formulario");
			this.setActualCuentaContableFinanForeignKey(this.parametrofactuprincipalConstantesFunciones.getid_cuenta_contable_finan(),false,"Formulario");
			this.setActualCuentaContableBoniForeignKey(this.parametrofactuprincipalConstantesFunciones.getid_cuenta_contable_boni(),false,"Formulario");
			this.setActualCuentaContableBoniDevolForeignKey(this.parametrofactuprincipalConstantesFunciones.getid_cuenta_contable_boni_devol(),false,"Formulario");
			this.setActualCuentaContableIceForeignKey(this.parametrofactuprincipalConstantesFunciones.getid_cuenta_contable_ice(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyParametroFactuPrincipal()throws Exception {	
		try {
			
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyParametroFactuPrincipal()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyParametroFactuPrincipal()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroParametroFactuPrincipal()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyParametroFactuPrincipal()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameTipoParamFactuDescuentosForeignKey("Todos");
			this.cargarCombosFrameTipoParamFactuListadoClientesForeignKey("Todos");
			this.cargarCombosFrameTipoParamFactuSecuenciaTrabajosForeignKey("Todos");
			this.cargarCombosFrameTipoDocumentoFacturasForeignKey("Todos");
			this.cargarCombosFrameTipoDocumentoNotaCreditosForeignKey("Todos");
			this.cargarCombosFrameTipoDocumentoNotaDebitosForeignKey("Todos");
			this.cargarCombosFrameLibroContablesForeignKey("Todos");
			this.cargarCombosFrameMonedasForeignKey("Todos");
			this.cargarCombosFrameFormatosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableFleteVentasForeignKey("Todos");
			this.cargarCombosFrameCuentaContableOtroCargosForeignKey("Todos");
			this.cargarCombosFrameCuentaContableFinansForeignKey("Todos");
			this.cargarCombosFrameCuentaContableBonisForeignKey("Todos");
			this.cargarCombosFrameCuentaContableBoniDevolsForeignKey("Todos");
			this.cargarCombosFrameCuentaContableIcesForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyParametroFactuPrincipal(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoParamFactuDescuentosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoParamFactuListadoClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoParamFactuSecuenciaTrabajosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoDocumentoFacturasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoDocumentoNotaCreditosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoDocumentoNotaDebitosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameLibroContablesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMonedasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableFleteVentasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableOtroCargosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableFinansForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableBonisForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableBoniDevolsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContableIcesForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyParametroFactuPrincipal()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_empresaParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_empresaParametroFactuPrincipal.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_empresaParametroFactuPrincipal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_sucursalParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_sucursalParametroFactuPrincipal.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_sucursalParametroFactuPrincipal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipal.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipal.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_facturaParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_facturaParametroFactuPrincipal.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_facturaParametroFactuPrincipal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipal.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipal.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_libro_contableParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_libro_contableParametroFactuPrincipal.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_libro_contableParametroFactuPrincipal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_monedaParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_monedaParametroFactuPrincipal.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_monedaParametroFactuPrincipal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_formatoParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_formatoParametroFactuPrincipal.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_formatoParametroFactuPrincipal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipal.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipal.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_finanParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_finanParametroFactuPrincipal.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_finanParametroFactuPrincipal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boniParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boniParametroFactuPrincipal.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boniParametroFactuPrincipal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipal.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipal.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_iceParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_iceParametroFactuPrincipal.getItemCount()>0) {
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_iceParametroFactuPrincipal.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	


































	
	

	public ParametroFactuPrincipalBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public ParametroFactuPrincipalBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public ParametroFactuPrincipalBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean(); 
		this.parametrofactuprincipalConstantesFunciones=new ParametroFactuPrincipalConstantesFunciones(); 
		this.parametrofactuprincipalBean=new ParametroFactuPrincipal();//(this.parametrofactuprincipalConstantesFunciones); 		
		this.parametrofactuprincipalReturnGeneral=new ParametroFactuPrincipalParameterReturnGeneral(); 
		
		this.parametrofactuprincipalSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.parametrofactuprincipalSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public ParametroFactuPrincipalBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public ParametroFactuPrincipalBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public ParametroFactuPrincipalBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessParametroFactuPrincipal(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.parametrofactuprincipalConstantesFunciones=new ParametroFactuPrincipalConstantesFunciones(); 
			this.parametrofactuprincipalBean=new ParametroFactuPrincipal();//this.parametrofactuprincipalConstantesFunciones); 			
			this.parametrofactuprincipalReturnGeneral=new ParametroFactuPrincipalParameterReturnGeneral(); 
		
			ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Parametro Principal  Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.parametrofactuprincipal=new ParametroFactuPrincipal();
			this.parametrofactuprincipals = new ArrayList<ParametroFactuPrincipal>();
			this.parametrofactuprincipalsAux = new ArrayList<ParametroFactuPrincipal>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic=new ParametroFactuPrincipalLogic();
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}
			
			//this.parametrofactuprincipalSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.parametrofactuprincipalSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormParametroFactuPrincipal);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoParametroFactuPrincipal!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoParametroFactuPrincipal);	
					}
					
					if(this.jInternalFrameImportacionParametroFactuPrincipal!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionParametroFactuPrincipal);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByParametroFactuPrincipal!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByParametroFactuPrincipal);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormParametroFactuPrincipal);
				this.jInternalFrameDetalleFormParametroFactuPrincipal.setVisible(false);
				this.jInternalFrameDetalleFormParametroFactuPrincipal.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoParametroFactuPrincipal!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoParametroFactuPrincipal);
					this.jInternalFrameReporteDinamicoParametroFactuPrincipal.setVisible(false);
					this.jInternalFrameReporteDinamicoParametroFactuPrincipal.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionParametroFactuPrincipal!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionParametroFactuPrincipal);
					this.jInternalFrameImportacionParametroFactuPrincipal.setVisible(false);
					this.jInternalFrameImportacionParametroFactuPrincipal.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByParametroFactuPrincipal!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByParametroFactuPrincipal);
					this.jInternalFrameOrderByParametroFactuPrincipal.setVisible(false);
					this.jInternalFrameOrderByParametroFactuPrincipal.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idParametroFactuPrincipalActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=ParametroFactuPrincipalConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.parametrofactuprincipalReturnGeneral=new ParametroFactuPrincipalParameterReturnGeneral();
			
			this.parametrofactuprincipalParameterGeneral=new ParametroFactuPrincipalParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.parametrofactuprincipalLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(ParametroFactuPrincipalJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ParametroFactuPrincipalConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado(),this.parametrofactuprincipalSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,ParametroFactuPrincipalConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado(),this.parametrofactuprincipalSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoParametroFactuPrincipal=false;
			this.isVisibilidadCeldaDuplicarParametroFactuPrincipal=true;
			this.isVisibilidadCeldaCopiarParametroFactuPrincipal=true;
			this.isVisibilidadCeldaVerFormParametroFactuPrincipal=true;
			this.isVisibilidadCeldaOrdenParametroFactuPrincipal=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal=false;
			this.isVisibilidadCeldaModificarParametroFactuPrincipal=false;
			this.isVisibilidadCeldaActualizarParametroFactuPrincipal=false;
			this.isVisibilidadCeldaEliminarParametroFactuPrincipal=false;
			this.isVisibilidadCeldaCancelarParametroFactuPrincipal=false;
			this.isVisibilidadCeldaGuardarParametroFactuPrincipal=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuPrincipal=false;
			
			
			this.isVisibilidadFK_IdCuentaContableBoni=true;
			this.isVisibilidadFK_IdCuentaContableBoniDevol=true;
			this.isVisibilidadFK_IdCuentaContableFinan=true;
			this.isVisibilidadFK_IdCuentaContableFleteVenta=true;
			this.isVisibilidadFK_IdCuentaContableIce=true;
			this.isVisibilidadFK_IdCuentaContableOtroCargo=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdFormato=true;
			this.isVisibilidadFK_IdLibroContable=true;
			this.isVisibilidadFK_IdMoneda=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoDocumentoFactura=true;
			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=true;
			this.isVisibilidadFK_IdTipoDocumentoNotaDebito=true;
			this.isVisibilidadFK_IdTipoParamFactuDescuento=true;
			this.isVisibilidadFK_IdTipoParamFactuListadoCliente=true;
			this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesParametroFactuPrincipal("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosParametroFactuPrincipal();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioParametroFactuPrincipal(false);
			
			this.setPermisosUsuarioParametroFactuPrincipal();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado() 
				|| (this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado() && this.parametrofactuprincipalSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioParametroFactuPrincipalClasesRelacionadas();
			}
			
			if(this.parametrofactuprincipalSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioParametroFactuPrincipalClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosParametroFactuPrincipal();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualParametroFactuPrincipal();
			}
			
			if(!this.isPermisoBusquedaParametroFactuPrincipal) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(false);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(false);
				
				
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioParametroFactuPrincipal,this.isPermisoPaginacionMedioParametroFactuPrincipal,this.isPermisoPaginacionTodoParametroFactuPrincipal);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(ParametroFactuPrincipalConstantesFunciones.getTiposSeleccionarParametroFactuPrincipal());
				
				this.tiposColumnasSelect=ParametroFactuPrincipalConstantesFunciones.getTiposSeleccionarParametroFactuPrincipal(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioParametroFactuPrincipal();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(false,false,true);
				this.setAccionesUsuarioParametroFactuPrincipal(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(false,false,true);							
				this.setAccionesUsuarioParametroFactuPrincipal(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroFactuPrincipal() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.tipoparamfactudescuentoLogic=new TipoParamFactuDescuentoLogic();
			this.tipoparamfactulistadoclienteLogic=new TipoParamFactuListadoClienteLogic();
			this.tipoparamfactusecuenciatrabajoLogic=new TipoParamFactuSecuenciaTrabajoLogic();
			this.tipodocumentofacturaLogic=new TipoDocumentoLogic();
			this.tipodocumentonotacreditoLogic=new TipoDocumentoLogic();
			this.tipodocumentonotadebitoLogic=new TipoDocumentoLogic();
			this.librocontableLogic=new LibroContableLogic();
			this.monedaLogic=new MonedaLogic();
			this.formatoLogic=new FormatoLogic();
			this.cuentacontablefleteventaLogic=new CuentaContableLogic();
			this.cuentacontableotrocargoLogic=new CuentaContableLogic();
			this.cuentacontablefinanLogic=new CuentaContableLogic();
			this.cuentacontableboniLogic=new CuentaContableLogic();
			this.cuentacontablebonidevolLogic=new CuentaContableLogic();
			this.cuentacontableiceLogic=new CuentaContableLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				parametrofactuprincipalImplementable= (ParametroFactuPrincipalImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ParametroFactuPrincipalConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				parametrofactuprincipalImplementableHome= (ParametroFactuPrincipalImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+ParametroFactuPrincipalConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.parametrofactuprincipals= new ArrayList<ParametroFactuPrincipal>();
			this.parametrofactuprincipalsEliminados= new ArrayList<ParametroFactuPrincipal>();
						
			this.isEsNuevoParametroFactuPrincipal=false;
			this.esParaAccionDesdeFormularioParametroFactuPrincipal=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idCuentaContableFleteVentaActual=0L;
			this.idCuentaContableOtroCargoActual=0L;
			this.idCuentaContableFinanActual=0L;
			this.idCuentaContableBoniActual=0L;
			this.idCuentaContableBoniDevolActual=0L;
			this.idCuentaContableIceActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.tipoparamfactudescuentosForeignKey=new ArrayList<TipoParamFactuDescuento>() ;
			this.tipoparamfactulistadoclientesForeignKey=new ArrayList<TipoParamFactuListadoCliente>() ;
			this.tipoparamfactusecuenciatrabajosForeignKey=new ArrayList<TipoParamFactuSecuenciaTrabajo>() ;
			this.tipodocumentofacturasForeignKey=new ArrayList<TipoDocumento>() ;
			this.tipodocumentonotacreditosForeignKey=new ArrayList<TipoDocumento>() ;
			this.tipodocumentonotadebitosForeignKey=new ArrayList<TipoDocumento>() ;
			this.librocontablesForeignKey=new ArrayList<LibroContable>() ;
			this.monedasForeignKey=new ArrayList<Moneda>() ;
			this.formatosForeignKey=new ArrayList<Formato>() ;
			this.cuentacontablefleteventasForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableotrocargosForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontablefinansForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontablebonisForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontablebonidevolsForeignKey=new ArrayList<CuentaContable>() ;
			this.cuentacontableicesForeignKey=new ArrayList<CuentaContable>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyParametroFactuPrincipal(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroParametroFactuPrincipal();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=ParametroFactuPrincipalConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesParametroFactuPrincipal("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingParametroFactuPrincipal(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioParametroFactuPrincipal();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioParametroFactuPrincipal();
			}
			
			ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasParametroFactuPrincipal.getTabCount(); i++) {
					this.jTabbedPaneBusquedasParametroFactuPrincipal.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasParametroFactuPrincipal.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessParametroFactuPrincipal(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga ParametroFactuPrincipal: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectParametroFactuPrincipal() {
		Reporte reporte=new Reporte();
		
	
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesParametroFactuPrincipal")) {
				iIndex=this.jInternalFrameDetalleFormParametroFactuPrincipal.jTabbedPaneRelacionesParametroFactuPrincipal.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormParametroFactuPrincipal.jTabbedPaneRelacionesParametroFactuPrincipal.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();	
				
				
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessParametroFactuPrincipal();	
			}
		}
    }
	
	
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
	}		
	
	public void cargarCombosForeignKeyParametroFactuPrincipal(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyParametroFactuPrincipal(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyParametroFactuPrincipal(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyParametroFactuPrincipalListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyParametroFactuPrincipal();
		
		this.cargarCombosFrameForeignKeyParametroFactuPrincipal();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyParametroFactuPrincipal();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyParametroFactuPrincipal();
		}
	}
	
	

	public void cargarCombosForeignKeyTipoParamFactuDescuento(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoParamFactuDescuentoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoParamFactuDescuento();
				this.cargarCombosFrameTipoParamFactuDescuentosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoParamFactuDescuento(this.tipoparamfactudescuentosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoParamFactuListadoCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoParamFactuListadoClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoParamFactuListadoCliente();
				this.cargarCombosFrameTipoParamFactuListadoClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoParamFactuListadoCliente(this.tipoparamfactulistadoclientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoParamFactuSecuenciaTrabajo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoParamFactuSecuenciaTrabajoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoParamFactuSecuenciaTrabajo();
				this.cargarCombosFrameTipoParamFactuSecuenciaTrabajosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoParamFactuSecuenciaTrabajo(this.tipoparamfactusecuenciatrabajosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDocumentoFactura(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoDocumentoFacturaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoDocumentoFactura();
				this.cargarCombosFrameTipoDocumentoFacturasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoDocumentoFactura(this.tipodocumentofacturasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDocumentoNotaCredito(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoDocumentoNotaCreditoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoDocumentoNotaCredito();
				this.cargarCombosFrameTipoDocumentoNotaCreditosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoDocumentoNotaCredito(this.tipodocumentonotacreditosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDocumentoNotaDebito(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoDocumentoNotaDebitoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoDocumentoNotaDebito();
				this.cargarCombosFrameTipoDocumentoNotaDebitosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoDocumentoNotaDebito(this.tipodocumentonotadebitosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyLibroContable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyLibroContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyLibroContable();
				this.cargarCombosFrameLibroContablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaLibroContable(this.librocontablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormato(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFormato(this.formatosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableFleteVenta(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableFleteVentaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableFleteVenta();
				this.cargarCombosFrameCuentaContableFleteVentasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableFleteVenta(this.cuentacontablefleteventasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableOtroCargo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableOtroCargoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableOtroCargo();
				this.cargarCombosFrameCuentaContableOtroCargosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableOtroCargo(this.cuentacontableotrocargosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableFinan(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableFinanListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableFinan();
				this.cargarCombosFrameCuentaContableFinansForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableFinan(this.cuentacontablefinansForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableBoni(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableBoniListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableBoni();
				this.cargarCombosFrameCuentaContableBonisForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableBoni(this.cuentacontablebonisForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableBoniDevol(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableBoniDevolListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableBoniDevol();
				this.cargarCombosFrameCuentaContableBoniDevolsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableBoniDevol(this.cuentacontablebonidevolsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableIce(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableIceListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContableIce();
				this.cargarCombosFrameCuentaContableIcesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContableIce(this.cuentacontableicesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoParametroFactuPrincipalActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.parametrofactuprincipalSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormParametroFactuPrincipal==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
			
			
			if(jTableDatosParametroFactuPrincipal.getRowCount()>=1) {
				jTableDatosParametroFactuPrincipal.removeRowSelectionInterval(0, jTableDatosParametroFactuPrincipal.getRowCount()-1);						
			}
			
			this.isEsNuevoParametroFactuPrincipal=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoParametroFactuPrincipal(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesParametroFactuPrincipal(true);			
			//this.parametrofactuprincipal=new ParametroFactuPrincipal();
			//this.parametrofactuprincipal.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroFactuPrincipal(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroFactuPrincipal() ;
			
			if(ParametroFactuPrincipalJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroFactuPrincipal(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.parametrofactuprincipal);	
			this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuprincipal);				
			
			ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
			
			if(this.parametrofactuprincipalSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar ParametroFactuPrincipal: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarParametroFactuPrincipalActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<ParametroFactuPrincipal> parametrofactuprincipalsSeleccionados=new ArrayList<ParametroFactuPrincipal>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosParametroFactuPrincipal.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosParametroFactuPrincipal.getSelectedRows().length;			
			}
			
			parametrofactuprincipalsSeleccionados=this.getParametroFactuPrincipalsSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoParametroFactuPrincipal--;			
				//ParametroFactuPrincipal parametrofactuprincipalAux= new ParametroFactuPrincipal();			
				//parametrofactuprincipalAux.setId(this.iIdNuevoParametroFactuPrincipal);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//ParametroFactuPrincipal parametrofactuprincipalOrigen=new ParametroFactuPrincipal();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(ParametroFactuPrincipal parametrofactuprincipalOrigen : parametrofactuprincipalsSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							parametrofactuprincipalOrigen =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							parametrofactuprincipalOrigen =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaParametroFactuPrincipal();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.parametrofactuprincipal.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosParametroFactuPrincipal(parametrofactuprincipalOrigen,this.parametrofactuprincipal,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.parametrofactuprincipalLogic.getParametroFactuPrincipals().add(this.parametrofactuprincipalAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipals.add(this.parametrofactuprincipalAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaParametroFactuPrincipal(false);
				
				this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(this.getIndiceNuevoParametroFactuPrincipal(), this.getIndiceNuevoParametroFactuPrincipal());
				
				int iLastRow =  this.jTableDatosParametroFactuPrincipal.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosParametroFactuPrincipal.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosParametroFactuPrincipal.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroFactuPrincipal(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<ParametroFactuPrincipal> parametrofactuprincipalsSeleccionados=new ArrayList<ParametroFactuPrincipal>();									
		
			ParametroFactuPrincipal parametrofactuprincipalOrigen=new ParametroFactuPrincipal();
			ParametroFactuPrincipal parametrofactuprincipalDestino=new ParametroFactuPrincipal();
				
			parametrofactuprincipalsSeleccionados=this.getParametroFactuPrincipalsSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosParametroFactuPrincipal.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || parametrofactuprincipalsSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosParametroFactuPrincipal.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalOrigen =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						parametrofactuprincipalOrigen =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						parametrofactuprincipalDestino =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						parametrofactuprincipalDestino =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				parametrofactuprincipalOrigen =parametrofactuprincipalsSeleccionados.get(0);
				parametrofactuprincipalDestino =parametrofactuprincipalsSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosParametroFactuPrincipal(parametrofactuprincipalOrigen,parametrofactuprincipalDestino,true,false);
				
				parametrofactuprincipalDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(parametrofactuprincipalDestino,parametrofactuprincipalLogic.getParametroFactuPrincipals());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(parametrofactuprincipalDestino,parametrofactuprincipals);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaParametroFactuPrincipal(false);
				
				//this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(this.getIndiceNuevoParametroFactuPrincipal(), this.getIndiceNuevoParametroFactuPrincipal());
				
				int iLastRow =  this.jTableDatosParametroFactuPrincipal.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosParametroFactuPrincipal.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosParametroFactuPrincipal.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroFactuPrincipal(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormParametroFactuPrincipal==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormParametroFactuPrincipal.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesParametroFactuPrincipal.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasParametroFactuPrincipal.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesParametroFactuPrincipal.setVisible(!isVisible);
			this.jPanelPaginacionParametroFactuPrincipal.setVisible(!isVisible);
			this.jPanelAccionesParametroFactuPrincipal.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameParametroFactuPrincipal();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoParametroFactuPrincipal();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionParametroFactuPrincipal();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByParametroFactuPrincipal();
			
			this.abrirFrameOrderByParametroFactuPrincipal();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByParametroFactuPrincipal();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleParametroFactuPrincipal(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormParametroFactuPrincipal);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormParametroFactuPrincipal.isMaximum()) {
					this.jInternalFrameDetalleFormParametroFactuPrincipal.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormParametroFactuPrincipal.setSize(this.jInternalFrameDetalleFormParametroFactuPrincipal.iWidthFormulario,this.jInternalFrameDetalleFormParametroFactuPrincipal.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormParametroFactuPrincipal.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormParametroFactuPrincipal.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormParametroFactuPrincipal.isMaximum()) {
						this.jInternalFrameDetalleFormParametroFactuPrincipal.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jContentPaneDetalleParametroFactuPrincipal.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormParametroFactuPrincipal.jTabbedPaneRelacionesParametroFactuPrincipal.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormParametroFactuPrincipal.jContentPaneDetalleParametroFactuPrincipal.getWidth(),ParametroFactuPrincipalConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormParametroFactuPrincipal.jTabbedPaneRelacionesParametroFactuPrincipal.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormParametroFactuPrincipal.jContentPaneDetalleParametroFactuPrincipal.getWidth(),ParametroFactuPrincipalConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormParametroFactuPrincipal.jTabbedPaneRelacionesParametroFactuPrincipal.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormParametroFactuPrincipal.jContentPaneDetalleParametroFactuPrincipal.getWidth(),ParametroFactuPrincipalConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormParametroFactuPrincipal.setVisible(true);
	        this.jInternalFrameDetalleFormParametroFactuPrincipal.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByParametroFactuPrincipal() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByParametroFactuPrincipal==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByParametroFactuPrincipal=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByParametroFactuPrincipal,false,this);
				} else {
					this.jInternalFrameOrderByParametroFactuPrincipal=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByParametroFactuPrincipal,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByParametroFactuPrincipal);
				this.jInternalFrameOrderByParametroFactuPrincipal.setVisible(false);
				this.jInternalFrameOrderByParametroFactuPrincipal.setSelected(false);
				
				this.jInternalFrameOrderByParametroFactuPrincipal.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByParametroFactuPrincipal"));
				
				this.inicializarActualizarBindingTablaOrderByParametroFactuPrincipal();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionParametroFactuPrincipal() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionParametroFactuPrincipal==null) {
				
				this.jInternalFrameImportacionParametroFactuPrincipal=new ImportacionJInternalFrame(ParametroFactuPrincipalConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionParametroFactuPrincipal);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionParametroFactuPrincipal);
				this.jInternalFrameImportacionParametroFactuPrincipal.setVisible(false);
				this.jInternalFrameImportacionParametroFactuPrincipal.setSelected(false);


				this.jInternalFrameImportacionParametroFactuPrincipal.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionParametroFactuPrincipal"));
				this.jInternalFrameImportacionParametroFactuPrincipal.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionParametroFactuPrincipal"));
				this.jInternalFrameImportacionParametroFactuPrincipal.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionParametroFactuPrincipal"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoParametroFactuPrincipal() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoParametroFactuPrincipal==null) {
				this.jInternalFrameReporteDinamicoParametroFactuPrincipal=new ReporteDinamicoJInternalFrame(ParametroFactuPrincipalConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoParametroFactuPrincipal);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoParametroFactuPrincipal);
				this.jInternalFrameReporteDinamicoParametroFactuPrincipal.setVisible(false);
				this.jInternalFrameReporteDinamicoParametroFactuPrincipal.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroFactuPrincipal"));
				this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroFactuPrincipal"));
				this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroFactuPrincipal"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroFactuPrincipal();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		
					
	public void cerrarFrameDetalleParametroFactuPrincipal() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormParametroFactuPrincipal);
			
	       	this.jInternalFrameDetalleFormParametroFactuPrincipal.setVisible(false);
	        this.jInternalFrameDetalleFormParametroFactuPrincipal.setSelected(false);
			
			//this.jInternalFrameDetalleFormParametroFactuPrincipal.dispose();
			//this.jInternalFrameDetalleFormParametroFactuPrincipal=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoParametroFactuPrincipal() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoParametroFactuPrincipal.setVisible(true);
	        this.jInternalFrameReporteDinamicoParametroFactuPrincipal.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionParametroFactuPrincipal() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionParametroFactuPrincipal.setVisible(true);
	        this.jInternalFrameImportacionParametroFactuPrincipal.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByParametroFactuPrincipal() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByParametroFactuPrincipal.setVisible(true);
	        this.jInternalFrameOrderByParametroFactuPrincipal.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByParametroFactuPrincipal() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByParametroFactuPrincipal.setVisible(false);
	        this.jInternalFrameOrderByParametroFactuPrincipal.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoParametroFactuPrincipal() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoParametroFactuPrincipal.setVisible(false);
	        this.jInternalFrameReporteDinamicoParametroFactuPrincipal.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionParametroFactuPrincipal() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionParametroFactuPrincipal.setVisible(false);
	        this.jInternalFrameImportacionParametroFactuPrincipal.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCuentaContableFleteVenta(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableFleteVenta";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
						TitledBorder titledBorderCuentaContableFleteVenta=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableFleteVenta.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableFleteVenta(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableOtroCargo(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableOtroCargo";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
						TitledBorder titledBorderCuentaContableOtroCargo=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableOtroCargo.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableOtroCargo(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableFinan(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableFinan";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
						TitledBorder titledBorderCuentaContableFinan=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableFinan.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableFinan(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableBoni(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableBoni";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
						TitledBorder titledBorderCuentaContableBoni=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableBoni.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableBoni(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableBoniDevol(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableBoniDevol";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
						TitledBorder titledBorderCuentaContableBoniDevol=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableBoniDevol.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableBoniDevol(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCuentaContableIce(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContableIce";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
						TitledBorder titledBorderCuentaContableIce=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContableIce.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContableIce(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarParametroFactuPrincipal(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarParametroFactuPrincipal(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesParametroFactuPrincipal(true);
			//this.isEsNuevoParametroFactuPrincipal=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesParametroFactuPrincipal("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroFactuPrincipal(false) ;
			
			if(parametrofactuprincipalSessionBean.getConGuardarRelaciones()) {
			
			}
			
			if(ParametroFactuPrincipalJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroFactuPrincipal(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroFactuPrincipal(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaParametroFactuPrincipalActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarParametroFactuPrincipal(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormParametroFactuPrincipal==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesParametroFactuPrincipal(true);
			//this.isEsNuevoParametroFactuPrincipal=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.parametrofactuprincipal.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesParametroFactuPrincipal("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesParametroFactuPrincipal(false) ;
			
			if(ParametroFactuPrincipalJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleParametroFactuPrincipal(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroFactuPrincipal(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("CuentaContableFleteVenta")) {
				if(!this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_flete_ventaParametroFactuPrincipal) {
					this.cargarCombosCuentaContableFleteVentasForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
					this.cargarCombosFrameCuentaContableFleteVentasForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_flete_venta (id);

				this.recargarComboTablaCuentaContableFleteVenta(this.cuentacontablefleteventasForeignKey);

			}
			
			if(sType.equals("CuentaContableOtroCargo")) {
				if(!this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_otro_cargoParametroFactuPrincipal) {
					this.cargarCombosCuentaContableOtroCargosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
					this.cargarCombosFrameCuentaContableOtroCargosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_otro_cargo (id);

				this.recargarComboTablaCuentaContableOtroCargo(this.cuentacontableotrocargosForeignKey);

			}
			
			if(sType.equals("CuentaContableFinan")) {
				if(!this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_finanParametroFactuPrincipal) {
					this.cargarCombosCuentaContableFinansForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
					this.cargarCombosFrameCuentaContableFinansForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_finan (id);

				this.recargarComboTablaCuentaContableFinan(this.cuentacontablefinansForeignKey);

			}
			
			if(sType.equals("CuentaContableBoni")) {
				if(!this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_boniParametroFactuPrincipal) {
					this.cargarCombosCuentaContableBonisForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
					this.cargarCombosFrameCuentaContableBonisForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_boni (id);

				this.recargarComboTablaCuentaContableBoni(this.cuentacontablebonisForeignKey);

			}
			
			if(sType.equals("CuentaContableBoniDevol")) {
				if(!this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_boni_devolParametroFactuPrincipal) {
					this.cargarCombosCuentaContableBoniDevolsForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
					this.cargarCombosFrameCuentaContableBoniDevolsForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_boni_devol (id);

				this.recargarComboTablaCuentaContableBoniDevol(this.cuentacontablebonidevolsForeignKey);

			}
			
			if(sType.equals("CuentaContableIce")) {
				if(!this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_iceParametroFactuPrincipal) {
					this.cargarCombosCuentaContableIcesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
					this.cargarCombosFrameCuentaContableIcesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable_ice (id);

				this.recargarComboTablaCuentaContableIce(this.cuentacontableicesForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
			
	
	public void recargarComboTablaTipoParamFactuDescuento(List<TipoParamFactuDescuento> tipoparamfactudescuentosForeignKey)throws Exception{
		TableColumn tableColumnTipoParamFactuDescuento=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUDESCUENTO));
		TableCellEditor tableCellEditorTipoParamFactuDescuento =tableColumnTipoParamFactuDescuento.getCellEditor();

		TipoParamFactuDescuentoTableCell tipoparamfactudescuentoTableCellFk=(TipoParamFactuDescuentoTableCell)tableCellEditorTipoParamFactuDescuento;

		if(tipoparamfactudescuentoTableCellFk!=null) {
			tipoparamfactudescuentoTableCellFk.settipoparamfactudescuentosForeignKey(tipoparamfactudescuentosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuPrincipal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoparamfactudescuentoTableCellFk.setRowActual(intSelectedRow);
			//tipoparamfactudescuentoTableCellFk.settipoparamfactudescuentosForeignKeyActual(tipoparamfactudescuentosForeignKey);
		//}


		if(tipoparamfactudescuentoTableCellFk!=null) {
			tipoparamfactudescuentoTableCellFk.RecargarTipoParamFactuDescuentosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoParamFactuListadoCliente(List<TipoParamFactuListadoCliente> tipoparamfactulistadoclientesForeignKey)throws Exception{
		TableColumn tableColumnTipoParamFactuListadoCliente=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTULISTADOCLIENTE));
		TableCellEditor tableCellEditorTipoParamFactuListadoCliente =tableColumnTipoParamFactuListadoCliente.getCellEditor();

		TipoParamFactuListadoClienteTableCell tipoparamfactulistadoclienteTableCellFk=(TipoParamFactuListadoClienteTableCell)tableCellEditorTipoParamFactuListadoCliente;

		if(tipoparamfactulistadoclienteTableCellFk!=null) {
			tipoparamfactulistadoclienteTableCellFk.settipoparamfactulistadoclientesForeignKey(tipoparamfactulistadoclientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuPrincipal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoparamfactulistadoclienteTableCellFk.setRowActual(intSelectedRow);
			//tipoparamfactulistadoclienteTableCellFk.settipoparamfactulistadoclientesForeignKeyActual(tipoparamfactulistadoclientesForeignKey);
		//}


		if(tipoparamfactulistadoclienteTableCellFk!=null) {
			tipoparamfactulistadoclienteTableCellFk.RecargarTipoParamFactuListadoClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoParamFactuSecuenciaTrabajo(List<TipoParamFactuSecuenciaTrabajo> tipoparamfactusecuenciatrabajosForeignKey)throws Exception{
		TableColumn tableColumnTipoParamFactuSecuenciaTrabajo=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUSECUENCIATRABAJO));
		TableCellEditor tableCellEditorTipoParamFactuSecuenciaTrabajo =tableColumnTipoParamFactuSecuenciaTrabajo.getCellEditor();

		TipoParamFactuSecuenciaTrabajoTableCell tipoparamfactusecuenciatrabajoTableCellFk=(TipoParamFactuSecuenciaTrabajoTableCell)tableCellEditorTipoParamFactuSecuenciaTrabajo;

		if(tipoparamfactusecuenciatrabajoTableCellFk!=null) {
			tipoparamfactusecuenciatrabajoTableCellFk.settipoparamfactusecuenciatrabajosForeignKey(tipoparamfactusecuenciatrabajosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuPrincipal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoparamfactusecuenciatrabajoTableCellFk.setRowActual(intSelectedRow);
			//tipoparamfactusecuenciatrabajoTableCellFk.settipoparamfactusecuenciatrabajosForeignKeyActual(tipoparamfactusecuenciatrabajosForeignKey);
		//}


		if(tipoparamfactusecuenciatrabajoTableCellFk!=null) {
			tipoparamfactusecuenciatrabajoTableCellFk.RecargarTipoParamFactuSecuenciaTrabajosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoDocumentoFactura(List<TipoDocumento> tipodocumentofacturasForeignKey)throws Exception{
		TableColumn tableColumnTipoDocumentoFactura=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA));
		TableCellEditor tableCellEditorTipoDocumentoFactura =tableColumnTipoDocumentoFactura.getCellEditor();

		TipoDocumentoTableCell tipodocumentoTableCellFk=(TipoDocumentoTableCell)tableCellEditorTipoDocumentoFactura;

		if(tipodocumentoTableCellFk!=null) {
			tipodocumentoTableCellFk.settipodocumentosForeignKey(tipodocumentofacturasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuPrincipal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipodocumentoTableCellFk.setRowActual(intSelectedRow);
			//tipodocumentoTableCellFk.settipodocumentosForeignKeyActual(tipodocumentofacturasForeignKey);
		//}


		if(tipodocumentoTableCellFk!=null) {
			tipodocumentoTableCellFk.RecargarTipoDocumentosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoDocumentoNotaCredito(List<TipoDocumento> tipodocumentonotacreditosForeignKey)throws Exception{
		TableColumn tableColumnTipoDocumentoNotaCredito=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO));
		TableCellEditor tableCellEditorTipoDocumentoNotaCredito =tableColumnTipoDocumentoNotaCredito.getCellEditor();

		TipoDocumentoTableCell tipodocumentoTableCellFk=(TipoDocumentoTableCell)tableCellEditorTipoDocumentoNotaCredito;

		if(tipodocumentoTableCellFk!=null) {
			tipodocumentoTableCellFk.settipodocumentosForeignKey(tipodocumentonotacreditosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuPrincipal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipodocumentoTableCellFk.setRowActual(intSelectedRow);
			//tipodocumentoTableCellFk.settipodocumentosForeignKeyActual(tipodocumentonotacreditosForeignKey);
		//}


		if(tipodocumentoTableCellFk!=null) {
			tipodocumentoTableCellFk.RecargarTipoDocumentosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoDocumentoNotaDebito(List<TipoDocumento> tipodocumentonotadebitosForeignKey)throws Exception{
		TableColumn tableColumnTipoDocumentoNotaDebito=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTADEBITO));
		TableCellEditor tableCellEditorTipoDocumentoNotaDebito =tableColumnTipoDocumentoNotaDebito.getCellEditor();

		TipoDocumentoTableCell tipodocumentoTableCellFk=(TipoDocumentoTableCell)tableCellEditorTipoDocumentoNotaDebito;

		if(tipodocumentoTableCellFk!=null) {
			tipodocumentoTableCellFk.settipodocumentosForeignKey(tipodocumentonotadebitosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuPrincipal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipodocumentoTableCellFk.setRowActual(intSelectedRow);
			//tipodocumentoTableCellFk.settipodocumentosForeignKeyActual(tipodocumentonotadebitosForeignKey);
		//}


		if(tipodocumentoTableCellFk!=null) {
			tipodocumentoTableCellFk.RecargarTipoDocumentosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaLibroContable(List<LibroContable> librocontablesForeignKey)throws Exception{
		TableColumn tableColumnLibroContable=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDLIBROCONTABLE));
		TableCellEditor tableCellEditorLibroContable =tableColumnLibroContable.getCellEditor();

		LibroContableTableCell librocontableTableCellFk=(LibroContableTableCell)tableCellEditorLibroContable;

		if(librocontableTableCellFk!=null) {
			librocontableTableCellFk.setlibrocontablesForeignKey(librocontablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuPrincipal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//librocontableTableCellFk.setRowActual(intSelectedRow);
			//librocontableTableCellFk.setlibrocontablesForeignKeyActual(librocontablesForeignKey);
		//}


		if(librocontableTableCellFk!=null) {
			librocontableTableCellFk.RecargarLibroContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
		
	
	public void recargarComboTablaFormato(List<Formato> formatosForeignKey)throws Exception{
		TableColumn tableColumnFormato=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDFORMATO));
		TableCellEditor tableCellEditorFormato =tableColumnFormato.getCellEditor();

		FormatoTableCell formatoTableCellFk=(FormatoTableCell)tableCellEditorFormato;

		if(formatoTableCellFk!=null) {
			formatoTableCellFk.setformatosForeignKey(formatosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuPrincipal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//formatoTableCellFk.setRowActual(intSelectedRow);
			//formatoTableCellFk.setformatosForeignKeyActual(formatosForeignKey);
		//}


		if(formatoTableCellFk!=null) {
			formatoTableCellFk.RecargarFormatosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableFleteVenta(List<CuentaContable> cuentacontablefleteventasForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableFleteVenta=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFLETEVENTA));
		TableCellEditor tableCellEditorCuentaContableFleteVenta =tableColumnCuentaContableFleteVenta.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableFleteVenta;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablefleteventasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuPrincipal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablefleteventasForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableOtroCargo(List<CuentaContable> cuentacontableotrocargosForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableOtroCargo=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEOTROCARGO));
		TableCellEditor tableCellEditorCuentaContableOtroCargo =tableColumnCuentaContableOtroCargo.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableOtroCargo;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableotrocargosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuPrincipal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableotrocargosForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableFinan(List<CuentaContable> cuentacontablefinansForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableFinan=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFINAN));
		TableCellEditor tableCellEditorCuentaContableFinan =tableColumnCuentaContableFinan.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableFinan;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablefinansForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuPrincipal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablefinansForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableBoni(List<CuentaContable> cuentacontablebonisForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableBoni=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONI));
		TableCellEditor tableCellEditorCuentaContableBoni =tableColumnCuentaContableBoni.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableBoni;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablebonisForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuPrincipal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablebonisForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableBoniDevol(List<CuentaContable> cuentacontablebonidevolsForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableBoniDevol=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONIDEVOL));
		TableCellEditor tableCellEditorCuentaContableBoniDevol =tableColumnCuentaContableBoniDevol.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableBoniDevol;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablebonidevolsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuPrincipal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablebonidevolsForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContableIce(List<CuentaContable> cuentacontableicesForeignKey)throws Exception{
		TableColumn tableColumnCuentaContableIce=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEICE));
		TableCellEditor tableCellEditorCuentaContableIce =tableColumnCuentaContableIce.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContableIce;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontableicesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosParametroFactuPrincipal.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontableicesForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_flete_venta (Long id) throws Exception {
		this.setActualCuentaContableFleteVentaForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_otro_cargo (Long id) throws Exception {
		this.setActualCuentaContableOtroCargoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_finan (Long id) throws Exception {
		this.setActualCuentaContableFinanForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_boni (Long id) throws Exception {
		this.setActualCuentaContableBoniForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_boni_devol (Long id) throws Exception {
		this.setActualCuentaContableBoniDevolForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable_ice (Long id) throws Exception {
		this.setActualCuentaContableIceForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesParametroFactuPrincipal(false);
			
			//if(!this.isEsNuevoParametroFactuPrincipal) {								
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				
			}
			
			if(this.permiteMantenimiento(this.parametrofactuprincipal)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoParametroFactuPrincipal=true;
					this.inicializarActualizarBindingTablaParametroFactuPrincipal(false);
					this.isEsNuevoParametroFactuPrincipal=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoParametroFactuPrincipal=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoParametroFactuPrincipal=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesParametroFactuPrincipal(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroFactuPrincipal(false);
				
				this.habilitarDeshabilitarControlesParametroFactuPrincipal(false);
			
												
				
				if(ParametroFactuPrincipalJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleParametroFactuPrincipal();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoParametroFactuPrincipalActionPerformed(evt,parametrofactuprincipalSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualParametroFactuPrincipal(this.parametrofactuprincipal,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,parametrofactuprincipalSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.parametrofactuprincipal.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(ParametroFactuPrincipal.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuPrincipal.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				this.parametrofactuprincipal.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				this.parametrofactuprincipal.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.parametrofactuprincipal)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((ParametroFactuPrincipalModel) this.jTableDatosParametroFactuPrincipal.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoParametroFactuPrincipal=true;
				this.inicializarActualizarBindingTablaParametroFactuPrincipal(false);
				this.isEsNuevoParametroFactuPrincipal=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesParametroFactuPrincipal(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroFactuPrincipal(false);
				
				this.habilitarDeshabilitarControlesParametroFactuPrincipal(false);
				
				
				
				if(ParametroFactuPrincipalJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleParametroFactuPrincipal();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosParametroFactuPrincipal.getRowCount()>=1) {
				jTableDatosParametroFactuPrincipal.removeRowSelectionInterval(0, jTableDatosParametroFactuPrincipal.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesParametroFactuPrincipal(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaParametroFactuPrincipal(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesParametroFactuPrincipal(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualParametroFactuPrincipal(false) ;
			
			this.isEsNuevoParametroFactuPrincipal=false;
			
			if(ParametroFactuPrincipalJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleParametroFactuPrincipal();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingParametroFactuPrincipal(false);
				
				//SI ES MANUAL
				if(ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualParametroFactuPrincipal();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoParametroFactuPrincipal--;			
			//ParametroFactuPrincipal parametrofactuprincipalAux= new ParametroFactuPrincipal();			
			//parametrofactuprincipalAux.setId(this.iIdNuevoParametroFactuPrincipal);
			
			if(this.jInternalFrameDetalleFormParametroFactuPrincipal==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaParametroFactuPrincipal();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
			
			this.parametrofactuprincipal.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.parametrofactuprincipalLogic.getParametroFactuPrincipals().add(this.parametrofactuprincipalAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.parametrofactuprincipals.add(this.parametrofactuprincipalAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaParametroFactuPrincipal(false);
			
			this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(this.getIndiceNuevoParametroFactuPrincipal(), this.getIndiceNuevoParametroFactuPrincipal());
			
			int iLastRow =  this.jTableDatosParametroFactuPrincipal.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosParametroFactuPrincipal.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosParametroFactuPrincipal.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaParametroFactuPrincipal(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroFactuPrincipal(false);
			
			//SI ES MANUAL
			if(ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroFactuPrincipal();
			}
			
			//this.abrirFrameTreeParametroFactuPrincipal();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Parametro Principal S ?", "MANTENIMIENTO DE Parametro Principal ", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionParametroFactuPrincipal.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralParametroFactuPrincipal();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.parametrofactuprincipalReturnGeneral=parametrofactuprincipalLogic.procesarImportacionParametroFactuPrincipalsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.parametrofactuprincipalParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarParametroFactuPrincipalReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionParametroFactuPrincipal.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionParametroFactuPrincipal.setFileImportacion(this.jInternalFrameImportacionParametroFactuPrincipal.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionParametroFactuPrincipal.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionParametroFactuPrincipal.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionParametroFactuPrincipal.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionParametroFactuPrincipal.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<ParametroFactuPrincipal> parametrofactuprincipalsSeleccionados=new ArrayList<ParametroFactuPrincipal>();		

		parametrofactuprincipalsSeleccionados=this.getParametroFactuPrincipalsSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("ParametroFactuPrincipalBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"ParametroFactuPrincipalBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteParametroFactuPrincipals("Todos",parametrofactuprincipalsSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Principal ",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUDESCUENTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoParamFactuDescuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoParamFactuDescuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoParamFactuDescuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoParamFactuDescuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTULISTADOCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoParamFactuListadoCliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoParamFactuListadoCliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoParamFactuListadoCliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoParamFactuListadoCliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUSECUENCIATRABAJO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoParamFactuSecuenciaTrabajo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoParamFactuSecuenciaTrabajo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoParamFactuSecuenciaTrabajo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoParamFactuSecuenciaTrabajo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoDocumentoFactura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoDocumentoFactura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoDocumentoFactura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoDocumentoFactura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoDocumentoNotaCredito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoDocumentoNotaCredito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoDocumentoNotaCredito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoDocumentoNotaCredito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTADEBITO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoDocumentoNotaDebito_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoDocumentoNotaDebito_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoDocumentoNotaDebito_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoDocumentoNotaDebito_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_ENLINEA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Linea_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Linea_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Linea_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Linea_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUENTATIPOCLIENTE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nCuentaTipoCliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nCuentaTipoCliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nCuentaTipoCliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nCuentaTipoCliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCLIENTEIMPUESTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nClienteImpuesto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nClienteImpuesto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nClienteImpuesto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nClienteImpuesto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDLIBROCONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_LibroContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_LibroContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_LibroContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_LibroContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDMONEDA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Moneda_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Moneda_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Moneda_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Moneda_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONIMPRESION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nImpresion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nImpresion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nImpresion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nImpresion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDFORMATO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Formato_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Formato_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Formato_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Formato_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALUSUARIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nSecuencialUsuario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nSecuencialUsuario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nSecuencialUsuario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nSecuencialUsuario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALEDITABLE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nSecuencialEditable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nSecuencialEditable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nSecuencialEditable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nSecuencialEditable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONPRECIOPORCLIENTE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nPrecioPorCliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nPrecioPorCliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nPrecioPorCliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nPrecioPorCliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARPRECIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nModificarPrecio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nModificarPrecio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nModificarPrecio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nModificarPrecio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARSERVICIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nModificarServicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nModificarServicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nModificarServicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nModificarServicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCAMBIARUNIDAD:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nCambiarUnidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nCambiarUnidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nCambiarUnidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nCambiarUnidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_NUMERODECIMALESUNIDAD:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroDecimalesUnidad_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroDecimalesUnidad_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroDecimalesUnidad_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroDecimalesUnidad_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARSERIE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nActivarSerie_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nActivarSerie_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nActivarSerie_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nActivarSerie_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARLOTE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nActivarLote_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nActivarLote_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nActivarLote_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nActivarLote_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARMULTIEMPRESA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nActivarMultiEmpresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nActivarMultiEmpresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nActivarMultiEmpresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nActivarMultiEmpresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCENTROCOSTOS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nCentroCostos_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nCentroCostos_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nCentroCostos_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nCentroCostos_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONUNIDADES:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nUnidades_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nUnidades_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nUnidades_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nUnidades_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUPODISPONIBLE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nCupoDisponible_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nCupoDisponible_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nCupoDisponible_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nCupoDisponible_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONFORMAPAGO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nFormaPago_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nFormaPago_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nFormaPago_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nFormaPago_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONENVIOMAIL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nEnvioMail_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nEnvioMail_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nEnvioMail_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nEnvioMail_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONAUTORIZARPROFORMA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nAutorizarProforma_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nAutorizarProforma_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nAutorizarProforma_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nAutorizarProforma_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONBLOQUEOPEDIDO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nBloqueoPedido_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nBloqueoPedido_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nBloqueoPedido_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nBloqueoPedido_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCONTROLANTICIPO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nControlAnticipo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nControlAnticipo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nControlAnticipo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nControlAnticipo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONFACTURAAUTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nFacturaAuto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nFacturaAuto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nFacturaAuto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nFacturaAuto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONGRABARVALORCERO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nGrabarValorCero_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nGrabarValorCero_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nGrabarValorCero_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nGrabarValorCero_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONAGREGARITEM:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nAgregarItem_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nAgregarItem_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nAgregarItem_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nAgregarItem_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_NUMEROCOPIAS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroCopias_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroCopias_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroCopias_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroCopias_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_LEYENDA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_yenda_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_yenda_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_yenda_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_yenda_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONSINFACTURA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nSinFactura_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nSinFactura_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nSinFactura_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nSinFactura_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFLETEVENTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableFleteVenta_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableFleteVenta_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableFleteVenta_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableFleteVenta_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEOTROCARGO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableOtroCargo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableOtroCargo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableOtroCargo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableOtroCargo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFINAN:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableFinan_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableFinan_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableFinan_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableFinan_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONI:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableBoni_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableBoni_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableBoni_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableBoni_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONIDEVOL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableBoniDevol_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableBoniDevol_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableBoniDevol_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableBoniDevol_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEICE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContableIce_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContableIce_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContableIce_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContableIce_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUDESCUENTO:
					sNombreCampoCategoria="id_tipo_param_factu_descuento";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTULISTADOCLIENTE:
					sNombreCampoCategoria="id_tipo_param_factu_listado_cliente";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUSECUENCIATRABAJO:
					sNombreCampoCategoria="id_tipo_param_factu_secuencia_trabajo";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA:
					sNombreCampoCategoria="id_tipo_documento_factura";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO:
					sNombreCampoCategoria="id_tipo_documento_nota_credito";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTADEBITO:
					sNombreCampoCategoria="id_tipo_documento_nota_debito";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_ENLINEA:
					sNombreCampoCategoria="en_linea";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUENTATIPOCLIENTE:
					sNombreCampoCategoria="con_cuenta_tipo_cliente";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCLIENTEIMPUESTO:
					sNombreCampoCategoria="con_cliente_impuesto";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDLIBROCONTABLE:
					sNombreCampoCategoria="id_libro_contable";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoria="id_moneda";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONIMPRESION:
					sNombreCampoCategoria="con_impresion";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoria="id_formato";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALUSUARIO:
					sNombreCampoCategoria="con_secuencial_usuario";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALEDITABLE:
					sNombreCampoCategoria="con_secuencial_editable";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONPRECIOPORCLIENTE:
					sNombreCampoCategoria="con_precio_por_cliente";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARPRECIO:
					sNombreCampoCategoria="con_modificar_precio";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARSERVICIO:
					sNombreCampoCategoria="con_modificar_servicio";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCAMBIARUNIDAD:
					sNombreCampoCategoria="con_cambiar_unidad";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_NUMERODECIMALESUNIDAD:
					sNombreCampoCategoria="numero_decimales_unidad";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARSERIE:
					sNombreCampoCategoria="con_activar_serie";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARLOTE:
					sNombreCampoCategoria="con_activar_lote";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARMULTIEMPRESA:
					sNombreCampoCategoria="con_activar_multi_empresa";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCENTROCOSTOS:
					sNombreCampoCategoria="con_centro_costos";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONUNIDADES:
					sNombreCampoCategoria="con_unidades";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUPODISPONIBLE:
					sNombreCampoCategoria="con_cupo_disponible";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONFORMAPAGO:
					sNombreCampoCategoria="con_forma_pago";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONENVIOMAIL:
					sNombreCampoCategoria="con_envio_mail";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONAUTORIZARPROFORMA:
					sNombreCampoCategoria="con_autorizar_proforma";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONBLOQUEOPEDIDO:
					sNombreCampoCategoria="con_bloqueo_pedido";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCONTROLANTICIPO:
					sNombreCampoCategoria="con_control_anticipo";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONFACTURAAUTO:
					sNombreCampoCategoria="con_factura_auto";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONGRABARVALORCERO:
					sNombreCampoCategoria="con_grabar_valor_cero";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONAGREGARITEM:
					sNombreCampoCategoria="con_agregar_item";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_NUMEROCOPIAS:
					sNombreCampoCategoria="numero_copias";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_LEYENDA:
					sNombreCampoCategoria="leyenda";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONSINFACTURA:
					sNombreCampoCategoria="con_sin_factura";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFLETEVENTA:
					sNombreCampoCategoria="id_cuenta_contable_flete_venta";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEOTROCARGO:
					sNombreCampoCategoria="id_cuenta_contable_otro_cargo";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFINAN:
					sNombreCampoCategoria="id_cuenta_contable_finan";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONI:
					sNombreCampoCategoria="id_cuenta_contable_boni";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONIDEVOL:
					sNombreCampoCategoria="id_cuenta_contable_boni_devol";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEICE:
					sNombreCampoCategoria="id_cuenta_contable_ice";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUDESCUENTO:
					sNombreCampoCategoriaValor="id_tipo_param_factu_descuento";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTULISTADOCLIENTE:
					sNombreCampoCategoriaValor="id_tipo_param_factu_listado_cliente";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUSECUENCIATRABAJO:
					sNombreCampoCategoriaValor="id_tipo_param_factu_secuencia_trabajo";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA:
					sNombreCampoCategoriaValor="id_tipo_documento_factura";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO:
					sNombreCampoCategoriaValor="id_tipo_documento_nota_credito";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTADEBITO:
					sNombreCampoCategoriaValor="id_tipo_documento_nota_debito";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_ENLINEA:
					sNombreCampoCategoriaValor="en_linea";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUENTATIPOCLIENTE:
					sNombreCampoCategoriaValor="con_cuenta_tipo_cliente";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCLIENTEIMPUESTO:
					sNombreCampoCategoriaValor="con_cliente_impuesto";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDLIBROCONTABLE:
					sNombreCampoCategoriaValor="id_libro_contable";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoriaValor="id_moneda";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONIMPRESION:
					sNombreCampoCategoriaValor="con_impresion";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoriaValor="id_formato";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALUSUARIO:
					sNombreCampoCategoriaValor="con_secuencial_usuario";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALEDITABLE:
					sNombreCampoCategoriaValor="con_secuencial_editable";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONPRECIOPORCLIENTE:
					sNombreCampoCategoriaValor="con_precio_por_cliente";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARPRECIO:
					sNombreCampoCategoriaValor="con_modificar_precio";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARSERVICIO:
					sNombreCampoCategoriaValor="con_modificar_servicio";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCAMBIARUNIDAD:
					sNombreCampoCategoriaValor="con_cambiar_unidad";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_NUMERODECIMALESUNIDAD:
					sNombreCampoCategoriaValor="numero_decimales_unidad";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARSERIE:
					sNombreCampoCategoriaValor="con_activar_serie";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARLOTE:
					sNombreCampoCategoriaValor="con_activar_lote";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARMULTIEMPRESA:
					sNombreCampoCategoriaValor="con_activar_multi_empresa";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCENTROCOSTOS:
					sNombreCampoCategoriaValor="con_centro_costos";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONUNIDADES:
					sNombreCampoCategoriaValor="con_unidades";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUPODISPONIBLE:
					sNombreCampoCategoriaValor="con_cupo_disponible";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONFORMAPAGO:
					sNombreCampoCategoriaValor="con_forma_pago";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONENVIOMAIL:
					sNombreCampoCategoriaValor="con_envio_mail";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONAUTORIZARPROFORMA:
					sNombreCampoCategoriaValor="con_autorizar_proforma";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONBLOQUEOPEDIDO:
					sNombreCampoCategoriaValor="con_bloqueo_pedido";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCONTROLANTICIPO:
					sNombreCampoCategoriaValor="con_control_anticipo";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONFACTURAAUTO:
					sNombreCampoCategoriaValor="con_factura_auto";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONGRABARVALORCERO:
					sNombreCampoCategoriaValor="con_grabar_valor_cero";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONAGREGARITEM:
					sNombreCampoCategoriaValor="con_agregar_item";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_NUMEROCOPIAS:
					sNombreCampoCategoriaValor="numero_copias";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_LEYENDA:
					sNombreCampoCategoriaValor="leyenda";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONSINFACTURA:
					sNombreCampoCategoriaValor="con_sin_factura";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFLETEVENTA:
					sNombreCampoCategoriaValor="id_cuenta_contable_flete_venta";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEOTROCARGO:
					sNombreCampoCategoriaValor="id_cuenta_contable_otro_cargo";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFINAN:
					sNombreCampoCategoriaValor="id_cuenta_contable_finan";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONI:
					sNombreCampoCategoriaValor="id_cuenta_contable_boni";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONIDEVOL:
					sNombreCampoCategoriaValor="id_cuenta_contable_boni_devol";
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEICE:
					sNombreCampoCategoriaValor="id_cuenta_contable_ice";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUDESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"T  Descuento General",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_param_factu_descuento");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTULISTADOCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"T  Listado Cliente/Prov",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_param_factu_listado_cliente");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUSECUENCIATRABAJO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"T Secuencia De Trabajo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_param_factu_secuencia_trabajo");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"T Documento Factura",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_documento_factura");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"T Doc Nota Credito",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_documento_nota_credito");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTADEBITO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"T Doc Nota Debito",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_documento_nota_debito");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_ENLINEA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Contabilizacion En Linea",sNombreCampoCategoria,sNombreCampoCategoriaValor,"en_linea");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUENTATIPOCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cuenta Tipo Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_cuenta_tipo_cliente");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCLIENTEIMPUESTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente Impuesto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_cliente_impuesto");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDLIBROCONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Libro Contable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_libro_contable");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDMONEDA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Moneda",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_moneda");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONIMPRESION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Impresion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_impresion");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDFORMATO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Formato",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_formato");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALUSUARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Secuencial Usuario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_secuencial_usuario");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALEDITABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Secuencial Editable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_secuencial_editable");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONPRECIOPORCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Precio Por Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_precio_por_cliente");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARPRECIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Modificar Precio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_modificar_precio");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARSERVICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Modificar Servicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_modificar_servicio");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCAMBIARUNIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cambiar Unidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_cambiar_unidad");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_NUMERODECIMALESUNIDAD:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"No Decimales Unidad",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_decimales_unidad");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARSERIE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Activar Serie",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_activar_serie");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARLOTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Activar Lote",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_activar_lote");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARMULTIEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Activar Multi Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_activar_multi_empresa");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCENTROCOSTOS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Centro Costos",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_centro_costos");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONUNIDADES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Convertir Unidades",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_unidades");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUPODISPONIBLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cupo Disponible",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_cupo_disponible");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONFORMAPAGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Activar Forma Pago",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_forma_pago");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONENVIOMAIL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Envio Mail",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_envio_mail");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONAUTORIZARPROFORMA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Autorizar Proforma",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_autorizar_proforma");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONBLOQUEOPEDIDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Bloqueo Pedido",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_bloqueo_pedido");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCONTROLANTICIPO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Control Anticipo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_control_anticipo");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONFACTURAAUTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Facturacion Auto.",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_factura_auto");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONGRABARVALORCERO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Grabar Valor 0",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_grabar_valor_cero");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONAGREGARITEM:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Agregar Item",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_agregar_item");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_NUMEROCOPIAS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"No Copias",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_copias");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_LEYENDA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Leyenda",sNombreCampoCategoria,sNombreCampoCategoriaValor,"leyenda");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONSINFACTURA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sin Factura",sNombreCampoCategoria,sNombreCampoCategoriaValor,"con_sin_factura");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFLETEVENTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"C. C. Flete En  Venta",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_flete_venta");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEOTROCARGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"C C. Otros Cargos",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_otro_cargo");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFINAN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"C.C.Financiamiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_finan");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONI:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"C. C. Bonificaciones",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_boni");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONIDEVOL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"C. C. Dev. Bonificaciones",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_boni_devol");
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEICE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"C Contable Ice",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable_ice");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<ParametroFactuPrincipal> parametrofactuprincipalsSeleccionados=new ArrayList<ParametroFactuPrincipal>();		
		
		parametrofactuprincipalsSeleccionados=this.getParametroFactuPrincipalsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactuprincipal";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("ParametroFactuPrincipals");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUDESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUDESCUENTO);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.gettipoparamfactudescuento_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTULISTADOCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTULISTADOCLIENTE);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.gettipoparamfactulistadocliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUSECUENCIATRABAJO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUSECUENCIATRABAJO);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.gettipoparamfactusecuenciatrabajo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.gettipodocumentofactura_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.gettipodocumentonotacredito_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTADEBITO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTADEBITO);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.gettipodocumentonotadebito_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_ENLINEA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_ENLINEA);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.geten_linea());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUENTATIPOCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUENTATIPOCLIENTE);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_cuenta_tipo_cliente());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCLIENTEIMPUESTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCLIENTEIMPUESTO);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_cliente_impuesto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDLIBROCONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDLIBROCONTABLE);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getlibrocontable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDMONEDA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDMONEDA);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getmoneda_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONIMPRESION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONIMPRESION);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_impresion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDFORMATO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDFORMATO);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getformato_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALUSUARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALUSUARIO);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_secuencial_usuario());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALEDITABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALEDITABLE);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_secuencial_editable());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONPRECIOPORCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONPRECIOPORCLIENTE);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_precio_por_cliente());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARPRECIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARPRECIO);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_modificar_precio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARSERVICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARSERVICIO);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_modificar_servicio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCAMBIARUNIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCAMBIARUNIDAD);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_cambiar_unidad());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_NUMERODECIMALESUNIDAD:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_NUMERODECIMALESUNIDAD);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getnumero_decimales_unidad());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARSERIE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARSERIE);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_activar_serie());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARLOTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARLOTE);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_activar_lote());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARMULTIEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARMULTIEMPRESA);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_activar_multi_empresa());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCENTROCOSTOS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCENTROCOSTOS);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_centro_costos());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONUNIDADES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONUNIDADES);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_unidades());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUPODISPONIBLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUPODISPONIBLE);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_cupo_disponible());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONFORMAPAGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONFORMAPAGO);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_forma_pago());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONENVIOMAIL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONENVIOMAIL);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_envio_mail());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONAUTORIZARPROFORMA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONAUTORIZARPROFORMA);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_autorizar_proforma());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONBLOQUEOPEDIDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONBLOQUEOPEDIDO);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_bloqueo_pedido());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONCONTROLANTICIPO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCONTROLANTICIPO);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_control_anticipo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONFACTURAAUTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONFACTURAAUTO);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_factura_auto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONGRABARVALORCERO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONGRABARVALORCERO);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_grabar_valor_cero());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONAGREGARITEM:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONAGREGARITEM);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_agregar_item());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_NUMEROCOPIAS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_NUMEROCOPIAS);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getnumero_copias());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_LEYENDA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_LEYENDA);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getleyenda());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_CONSINFACTURA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONSINFACTURA);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcon_sin_factura());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFLETEVENTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFLETEVENTA);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcuentacontablefleteventa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEOTROCARGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEOTROCARGO);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcuentacontableotrocargo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFINAN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFINAN);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcuentacontablefinan_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONI:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONI);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcuentacontableboni_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONIDEVOL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONIDEVOL);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcuentacontablebonidevol_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEICE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEICE);
					iRow++;

					for(ParametroFactuPrincipal parametrofactuprincipal:parametrofactuprincipalsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(parametrofactuprincipal.getcuentacontableice_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelParametroFactuPrincipal(row);				
			//	iRow++;
			//}				
			
			//for(ParametroFactuPrincipal parametrofactuprincipalAux:parametrofactuprincipalsSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelParametroFactuPrincipal(parametrofactuprincipalAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Principal ",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroFactuPrincipal(false);
			
			//SI ES MANUAL
			if(ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualParametroFactuPrincipal();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroFactuPrincipal(false);
			
			//SI ES MANUAL
			if(ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualParametroFactuPrincipal();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingParametroFactuPrincipal(false);
			
			//SI ES MANUAL
			if(ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualParametroFactuPrincipal();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaParametroFactuPrincipal() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosParametroFactuPrincipal.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosParametroFactuPrincipal.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosParametroFactuPrincipal.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosParametroFactuPrincipal.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosParametroFactuPrincipal.setMinimumSize(dimensionMinimum);
		this.jTableDatosParametroFactuPrincipal.setMaximumSize(dimensionMaximum);
		this.jTableDatosParametroFactuPrincipal.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingParametroFactuPrincipal(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingParametroFactuPrincipal(esInicializar,true);
	}
	
	public void inicializarActualizarBindingParametroFactuPrincipal(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaParametroFactuPrincipal(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesParametroFactuPrincipal(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasParametroFactuPrincipal(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroFactuPrincipal(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesParametroFactuPrincipal(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualParametroFactuPrincipal() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaParametroFactuPrincipal();
		
		this.inicializarActualizarBindingBotonesManualParametroFactuPrincipal(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualParametroFactuPrincipal();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesParametroFactuPrincipal() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualParametroFactuPrincipal(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualParametroFactuPrincipal(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosParametroFactuPrincipal.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosParametroFactuPrincipal.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteParametroFactuPrincipal.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxPostAccionNuevoParametroFactuPrincipal.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxPostAccionSinCerrarParametroFactuPrincipal.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxPostAccionSinMensajeParametroFactuPrincipal.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosParametroFactuPrincipal.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosParametroFactuPrincipal.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteParametroFactuPrincipal.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxPostAccionNuevoParametroFactuPrincipal.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxPostAccionSinCerrarParametroFactuPrincipal.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxPostAccionSinMensajeParametroFactuPrincipal.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionParametroFactuPrincipal.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionParametroFactuPrincipal.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxTiposAccionesFormularioParametroFactuPrincipal.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesParametroFactuPrincipal.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoParametroFactuPrincipal!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesParametroFactuPrincipal.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesParametroFactuPrincipal.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarParametroFactuPrincipal.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesParametroFactuPrincipal.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoParametroFactuPrincipal!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesParametroFactuPrincipal.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralParametroFactuPrincipal.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesParametroFactuPrincipal(Boolean esInicializar) throws Exception {
		try	{	
			if(ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualParametroFactuPrincipal(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesParametroFactuPrincipal() throws Exception {
		try	{
			if(ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualParametroFactuPrincipal();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleParametroFactuPrincipal() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxTiposAccionesFormularioParametroFactuPrincipal.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxTiposAccionesFormularioParametroFactuPrincipal.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualParametroFactuPrincipal() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesParametroFactuPrincipal.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesParametroFactuPrincipal.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesParametroFactuPrincipal.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesParametroFactuPrincipal.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesParametroFactuPrincipal.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesParametroFactuPrincipal.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionParametroFactuPrincipal.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionParametroFactuPrincipal.addItem(reporte);
			}
			
			
			if(!this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionParametroFactuPrincipal.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionParametroFactuPrincipal.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesParametroFactuPrincipal.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesParametroFactuPrincipal.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesParametroFactuPrincipal.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesParametroFactuPrincipal.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxTiposAccionesFormularioParametroFactuPrincipal.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxTiposAccionesFormularioParametroFactuPrincipal.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarParametroFactuPrincipal.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarParametroFactuPrincipal.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarParametroFactuPrincipal.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroFactuPrincipal();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualParametroFactuPrincipal() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoParametroFactuPrincipal!=null) {
				this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoParametroFactuPrincipal!=null) {
				this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoParametroFactuPrincipal!=null) {
				
				if(this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualParametroFactuPrincipal()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_cuenta_contable_boniFK_IdCuentaContableBoniParametroFactuPrincipal.getSelectedItem()!=null){this.id_cuenta_contable_boniFK_IdCuentaContableBoni=((CuentaContable)this.jComboBoxid_cuenta_contable_boniFK_IdCuentaContableBoniParametroFactuPrincipal.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevolParametroFactuPrincipal.getSelectedItem()!=null){this.id_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevol=((CuentaContable)this.jComboBoxid_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevolParametroFactuPrincipal.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_finanFK_IdCuentaContableFinanParametroFactuPrincipal.getSelectedItem()!=null){this.id_cuenta_contable_finanFK_IdCuentaContableFinan=((CuentaContable)this.jComboBoxid_cuenta_contable_finanFK_IdCuentaContableFinanParametroFactuPrincipal.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVentaParametroFactuPrincipal.getSelectedItem()!=null){this.id_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVenta=((CuentaContable)this.jComboBoxid_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVentaParametroFactuPrincipal.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceParametroFactuPrincipal.getSelectedItem()!=null){this.id_cuenta_contable_iceFK_IdCuentaContableIce=((CuentaContable)this.jComboBoxid_cuenta_contable_iceFK_IdCuentaContableIceParametroFactuPrincipal.getSelectedItem()).getId();}
		if(this.jComboBoxid_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargoParametroFactuPrincipal.getSelectedItem()!=null){this.id_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargo=((CuentaContable)this.jComboBoxid_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargoParametroFactuPrincipal.getSelectedItem()).getId();}
		if(this.jComboBoxid_formatoFK_IdFormatoParametroFactuPrincipal.getSelectedItem()!=null){this.id_formatoFK_IdFormato=((Formato)this.jComboBoxid_formatoFK_IdFormatoParametroFactuPrincipal.getSelectedItem()).getId();}
		if(this.jComboBoxid_libro_contableFK_IdLibroContableParametroFactuPrincipal.getSelectedItem()!=null){this.id_libro_contableFK_IdLibroContable=((LibroContable)this.jComboBoxid_libro_contableFK_IdLibroContableParametroFactuPrincipal.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaParametroFactuPrincipal.getSelectedItem()!=null){this.id_tipo_documento_facturaFK_IdTipoDocumentoFactura=((TipoDocumento)this.jComboBoxid_tipo_documento_facturaFK_IdTipoDocumentoFacturaParametroFactuPrincipal.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal.getSelectedItem()!=null){this.id_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito=((TipoDocumento)this.jComboBoxid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal.getSelectedItem()!=null){this.id_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebito=((TipoDocumento)this.jComboBoxid_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuentoParametroFactuPrincipal.getSelectedItem()!=null){this.id_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuento=((TipoParamFactuDescuento)this.jComboBoxid_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuentoParametroFactuPrincipal.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal.getSelectedItem()!=null){this.id_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoCliente=((TipoParamFactuListadoCliente)this.jComboBoxid_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal.getSelectedItem()!=null){this.id_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajo=((TipoParamFactuSecuenciaTrabajo)this.jComboBoxid_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasParametroFactuPrincipal(Boolean esInicializar) throws Exception {				
		if(ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualParametroFactuPrincipal();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaParametroFactuPrincipal() throws Exception {
		this.inicializarActualizarBindingTablaParametroFactuPrincipal(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByParametroFactuPrincipal() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByParametroFactuPrincipal.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByParametroFactuPrincipal.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroFactuPrincipal.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByParametroFactuPrincipal.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroFactuPrincipal.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosParametroFactuPrincipalOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipalOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByParametroFactuPrincipal.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByParametroFactuPrincipal.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByParametroFactuPrincipal.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaParametroFactuPrincipal(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=parametrofactuprincipalLogic.getParametroFactuPrincipals().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=parametrofactuprincipals.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosParametroFactuPrincipal.setModel(new ParametroFactuPrincipalModel(this.parametrofactuprincipalLogic.getParametroFactuPrincipals(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosParametroFactuPrincipal.setModel(new ParametroFactuPrincipalModel(this.parametrofactuprincipals,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByParametroFactuPrincipal!=null && this.jInternalFrameOrderByParametroFactuPrincipal.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByParametroFactuPrincipal();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+ParametroFactuPrincipalConstantesFunciones.SCLASSWEBTITULO,parametrofactuprincipalConstantesFunciones.resaltarSeleccionarParametroFactuPrincipal,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+ParametroFactuPrincipalConstantesFunciones.SCLASSWEBTITULO,parametrofactuprincipalConstantesFunciones.resaltarSeleccionarParametroFactuPrincipal,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_ID));

		if(this.parametrofactuprincipalConstantesFunciones.mostraridParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrofactuprincipalConstantesFunciones.resaltaridParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activaridParametroFactuPrincipal,this,true,"idParametroFactuPrincipal","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltaridParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activaridParametroFactuPrincipal,this,true,"idParametroFactuPrincipal","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDEMPRESA));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarid_empresaParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_empresaParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_empresaParametroFactuPrincipal));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_empresaParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_empresaParametroFactuPrincipal,false,"id_empresaParametroFactuPrincipal","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarid_sucursalParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_sucursalParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_sucursalParametroFactuPrincipal));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_sucursalParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_sucursalParametroFactuPrincipal,false,"id_sucursalParametroFactuPrincipal","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUDESCUENTO));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarid_tipo_param_factu_descuentoParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUDESCUENTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoParamFactuDescuentoTableCell(this.tipoparamfactudescuentosForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_param_factu_descuentoParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_tipo_param_factu_descuentoParametroFactuPrincipal));
			tableColumn.setCellEditor(new TipoParamFactuDescuentoTableCell(this.tipoparamfactudescuentosForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_param_factu_descuentoParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_tipo_param_factu_descuentoParametroFactuPrincipal,true,"id_tipo_param_factu_descuentoParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTULISTADOCLIENTE));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarid_tipo_param_factu_listado_clienteParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTULISTADOCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoParamFactuListadoClienteTableCell(this.tipoparamfactulistadoclientesForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_param_factu_listado_clienteParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_tipo_param_factu_listado_clienteParametroFactuPrincipal));
			tableColumn.setCellEditor(new TipoParamFactuListadoClienteTableCell(this.tipoparamfactulistadoclientesForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_param_factu_listado_clienteParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_tipo_param_factu_listado_clienteParametroFactuPrincipal,true,"id_tipo_param_factu_listado_clienteParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUSECUENCIATRABAJO));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUSECUENCIATRABAJO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoParamFactuSecuenciaTrabajoTableCell(this.tipoparamfactusecuenciatrabajosForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal));
			tableColumn.setCellEditor(new TipoParamFactuSecuenciaTrabajoTableCell(this.tipoparamfactusecuenciatrabajosForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal,true,"id_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarid_tipo_documento_facturaParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoDocumentoTableCell(this.tipodocumentofacturasForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_documento_facturaParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_tipo_documento_facturaParametroFactuPrincipal));
			tableColumn.setCellEditor(new TipoDocumentoTableCell(this.tipodocumentofacturasForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_documento_facturaParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_tipo_documento_facturaParametroFactuPrincipal,true,"id_tipo_documento_facturaParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarid_tipo_documento_nota_creditoParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoDocumentoTableCell(this.tipodocumentonotacreditosForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_documento_nota_creditoParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_tipo_documento_nota_creditoParametroFactuPrincipal));
			tableColumn.setCellEditor(new TipoDocumentoTableCell(this.tipodocumentonotacreditosForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_documento_nota_creditoParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_tipo_documento_nota_creditoParametroFactuPrincipal,true,"id_tipo_documento_nota_creditoParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTADEBITO));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarid_tipo_documento_nota_debitoParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTADEBITO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoDocumentoTableCell(this.tipodocumentonotadebitosForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_documento_nota_debitoParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_tipo_documento_nota_debitoParametroFactuPrincipal));
			tableColumn.setCellEditor(new TipoDocumentoTableCell(this.tipodocumentonotadebitosForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_documento_nota_debitoParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_tipo_documento_nota_debitoParametroFactuPrincipal,true,"id_tipo_documento_nota_debitoParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_ENLINEA));

		if(this.parametrofactuprincipalConstantesFunciones.mostraren_lineaParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_ENLINEA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltaren_lineaParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activaren_lineaParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltaren_lineaParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activaren_lineaParametroFactuPrincipal,this,true,"en_lineaParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUENTATIPOCLIENTE));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_cuenta_tipo_clienteParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUENTATIPOCLIENTE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_cuenta_tipo_clienteParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_cuenta_tipo_clienteParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_cuenta_tipo_clienteParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_cuenta_tipo_clienteParametroFactuPrincipal,this,true,"con_cuenta_tipo_clienteParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONCLIENTEIMPUESTO));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_cliente_impuestoParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONCLIENTEIMPUESTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_cliente_impuestoParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_cliente_impuestoParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_cliente_impuestoParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_cliente_impuestoParametroFactuPrincipal,this,true,"con_cliente_impuestoParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDLIBROCONTABLE));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarid_libro_contableParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_IDLIBROCONTABLE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new LibroContableTableCell(this.librocontablesForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_libro_contableParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_libro_contableParametroFactuPrincipal));
			tableColumn.setCellEditor(new LibroContableTableCell(this.librocontablesForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_libro_contableParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_libro_contableParametroFactuPrincipal,true,"id_libro_contableParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDMONEDA));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarid_monedaParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_IDMONEDA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MonedaTableCell(this.monedasForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_monedaParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_monedaParametroFactuPrincipal));
			tableColumn.setCellEditor(new MonedaTableCell(this.monedasForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_monedaParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_monedaParametroFactuPrincipal,false,"id_monedaParametroFactuPrincipal","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONIMPRESION));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_impresionParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONIMPRESION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_impresionParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_impresionParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_impresionParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_impresionParametroFactuPrincipal,this,true,"con_impresionParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDFORMATO));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarid_formatoParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_IDFORMATO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FormatoTableCell(this.formatosForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_formatoParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_formatoParametroFactuPrincipal));
			tableColumn.setCellEditor(new FormatoTableCell(this.formatosForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_formatoParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_formatoParametroFactuPrincipal,true,"id_formatoParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALUSUARIO));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_secuencial_usuarioParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALUSUARIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_secuencial_usuarioParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_secuencial_usuarioParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_secuencial_usuarioParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_secuencial_usuarioParametroFactuPrincipal,this,true,"con_secuencial_usuarioParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALEDITABLE));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_secuencial_editableParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALEDITABLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_secuencial_editableParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_secuencial_editableParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_secuencial_editableParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_secuencial_editableParametroFactuPrincipal,this,true,"con_secuencial_editableParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONPRECIOPORCLIENTE));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_precio_por_clienteParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONPRECIOPORCLIENTE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_precio_por_clienteParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_precio_por_clienteParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_precio_por_clienteParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_precio_por_clienteParametroFactuPrincipal,this,true,"con_precio_por_clienteParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARPRECIO));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_modificar_precioParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARPRECIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_modificar_precioParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_modificar_precioParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_modificar_precioParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_modificar_precioParametroFactuPrincipal,this,true,"con_modificar_precioParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARSERVICIO));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_modificar_servicioParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARSERVICIO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_modificar_servicioParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_modificar_servicioParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_modificar_servicioParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_modificar_servicioParametroFactuPrincipal,this,true,"con_modificar_servicioParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONCAMBIARUNIDAD));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_cambiar_unidadParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONCAMBIARUNIDAD,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_cambiar_unidadParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_cambiar_unidadParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_cambiar_unidadParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_cambiar_unidadParametroFactuPrincipal,this,true,"con_cambiar_unidadParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_NUMERODECIMALESUNIDAD));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarnumero_decimales_unidadParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_NUMERODECIMALESUNIDAD,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarnumero_decimales_unidadParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarnumero_decimales_unidadParametroFactuPrincipal,this,true,"numero_decimales_unidadParametroFactuPrincipal","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarnumero_decimales_unidadParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarnumero_decimales_unidadParametroFactuPrincipal,this,true,"numero_decimales_unidadParametroFactuPrincipal","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARSERIE));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_activar_serieParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARSERIE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_activar_serieParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_activar_serieParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_activar_serieParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_activar_serieParametroFactuPrincipal,this,true,"con_activar_serieParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARLOTE));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_activar_loteParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARLOTE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_activar_loteParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_activar_loteParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_activar_loteParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_activar_loteParametroFactuPrincipal,this,true,"con_activar_loteParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARMULTIEMPRESA));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_activar_multi_empresaParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARMULTIEMPRESA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_activar_multi_empresaParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_activar_multi_empresaParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_activar_multi_empresaParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_activar_multi_empresaParametroFactuPrincipal,this,true,"con_activar_multi_empresaParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONCENTROCOSTOS));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_centro_costosParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONCENTROCOSTOS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_centro_costosParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_centro_costosParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_centro_costosParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_centro_costosParametroFactuPrincipal,this,true,"con_centro_costosParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONUNIDADES));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_unidadesParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONUNIDADES,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_unidadesParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_unidadesParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_unidadesParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_unidadesParametroFactuPrincipal,this,true,"con_unidadesParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUPODISPONIBLE));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_cupo_disponibleParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUPODISPONIBLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_cupo_disponibleParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_cupo_disponibleParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_cupo_disponibleParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_cupo_disponibleParametroFactuPrincipal,this,true,"con_cupo_disponibleParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONFORMAPAGO));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_forma_pagoParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONFORMAPAGO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_forma_pagoParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_forma_pagoParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_forma_pagoParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_forma_pagoParametroFactuPrincipal,this,true,"con_forma_pagoParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONENVIOMAIL));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_envio_mailParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONENVIOMAIL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_envio_mailParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_envio_mailParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_envio_mailParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_envio_mailParametroFactuPrincipal,this,true,"con_envio_mailParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONAUTORIZARPROFORMA));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_autorizar_proformaParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONAUTORIZARPROFORMA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_autorizar_proformaParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_autorizar_proformaParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_autorizar_proformaParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_autorizar_proformaParametroFactuPrincipal,this,true,"con_autorizar_proformaParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONBLOQUEOPEDIDO));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_bloqueo_pedidoParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONBLOQUEOPEDIDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_bloqueo_pedidoParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_bloqueo_pedidoParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_bloqueo_pedidoParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_bloqueo_pedidoParametroFactuPrincipal,this,true,"con_bloqueo_pedidoParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONCONTROLANTICIPO));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_control_anticipoParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONCONTROLANTICIPO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_control_anticipoParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_control_anticipoParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_control_anticipoParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_control_anticipoParametroFactuPrincipal,this,true,"con_control_anticipoParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONFACTURAAUTO));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_factura_autoParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONFACTURAAUTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_factura_autoParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_factura_autoParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_factura_autoParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_factura_autoParametroFactuPrincipal,this,true,"con_factura_autoParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONGRABARVALORCERO));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_grabar_valor_ceroParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONGRABARVALORCERO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_grabar_valor_ceroParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_grabar_valor_ceroParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_grabar_valor_ceroParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_grabar_valor_ceroParametroFactuPrincipal,this,true,"con_grabar_valor_ceroParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONAGREGARITEM));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_agregar_itemParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONAGREGARITEM,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_agregar_itemParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_agregar_itemParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_agregar_itemParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_agregar_itemParametroFactuPrincipal,this,true,"con_agregar_itemParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_NUMEROCOPIAS));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarnumero_copiasParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_NUMEROCOPIAS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarnumero_copiasParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarnumero_copiasParametroFactuPrincipal,this,true,"numero_copiasParametroFactuPrincipal","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarnumero_copiasParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarnumero_copiasParametroFactuPrincipal,this,true,"numero_copiasParametroFactuPrincipal","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_LEYENDA));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarleyendaParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_LEYENDA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarleyendaParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarleyendaParametroFactuPrincipal,this,true,"leyendaParametroFactuPrincipal","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarleyendaParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarleyendaParametroFactuPrincipal,this,true,"leyendaParametroFactuPrincipal","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_CONSINFACTURA));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarcon_sin_facturaParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_CONSINFACTURA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_sin_facturaParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_sin_facturaParametroFactuPrincipal));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.parametrofactuprincipalConstantesFunciones.resaltarcon_sin_facturaParametroFactuPrincipal,this.parametrofactuprincipalConstantesFunciones.activarcon_sin_facturaParametroFactuPrincipal,this,true,"con_sin_facturaParametroFactuPrincipal","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFLETEVENTA));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_flete_ventaParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFLETEVENTA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablefleteventasForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_flete_ventaParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_flete_ventaParametroFactuPrincipal));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablefleteventasForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_flete_ventaParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_flete_ventaParametroFactuPrincipal,true,"id_cuenta_contable_flete_ventaParametroFactuPrincipal","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEOTROCARGO));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_otro_cargoParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEOTROCARGO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableotrocargosForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_otro_cargoParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_otro_cargoParametroFactuPrincipal));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableotrocargosForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_otro_cargoParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_otro_cargoParametroFactuPrincipal,true,"id_cuenta_contable_otro_cargoParametroFactuPrincipal","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFINAN));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_finanParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFINAN,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablefinansForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_finanParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_finanParametroFactuPrincipal));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablefinansForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_finanParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_finanParametroFactuPrincipal,true,"id_cuenta_contable_finanParametroFactuPrincipal","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONI));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_boniParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONI,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablebonisForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_boniParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_boniParametroFactuPrincipal));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablebonisForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_boniParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_boniParametroFactuPrincipal,true,"id_cuenta_contable_boniParametroFactuPrincipal","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONIDEVOL));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_boni_devolParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONIDEVOL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablebonidevolsForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_boni_devolParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_boni_devolParametroFactuPrincipal));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablebonidevolsForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_boni_devolParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_boni_devolParametroFactuPrincipal,true,"id_cuenta_contable_boni_devolParametroFactuPrincipal","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEICE));

		if(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_iceParametroFactuPrincipal && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEICE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontableicesForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_iceParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_iceParametroFactuPrincipal));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontableicesForeignKey,this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_iceParametroFactuPrincipal,this,this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_iceParametroFactuPrincipal,true,"id_cuenta_contable_iceParametroFactuPrincipal","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new ParametroFactuPrincipalPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosParametroFactuPrincipal.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()));
		
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosParametroFactuPrincipal.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarParametroFactuPrincipal && this.isPermisoGuardarCambiosParametroFactuPrincipal) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier(Constantes2.S_ELI);
					tableColumn.setHeaderValue(sLabelColumnAccionEli);
					tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()));
					tableColumn.setCellEditor(new IdTableCell(this,false,true,this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()));
			
					tableColumn.setPreferredWidth(65); 	 
					tableColumn.setWidth(65); 	 
					tableColumn.setMinWidth(65); 
					tableColumn.setMaxWidth(65);
					
					this.iWidthTableDefinicion+=65;
						
					this.jTableDatosParametroFactuPrincipal.addColumn(tableColumn);
				}
			}			
						
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosParametroFactuPrincipal.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarParametroFactuPrincipal && this.isPermisoGuardarCambiosParametroFactuPrincipal) {
				iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		iUltimaColumna++;	
		
				
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarParametroFactuPrincipal && this.isPermisoGuardarCambiosParametroFactuPrincipal) {
				//REUBICA ELIMINAR SIMPLE
				jTableDatosParametroFactuPrincipal.moveColumn(this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		jTableDatosParametroFactuPrincipal.moveColumn(this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosParametroFactuPrincipal.moveColumn(this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosParametroFactuPrincipal.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosParametroFactuPrincipal.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosParametroFactuPrincipal,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosParametroFactuPrincipal.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosParametroFactuPrincipal.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosParametroFactuPrincipal.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=parametrofactuprincipalLogic.getParametroFactuPrincipals().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=parametrofactuprincipals.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosParametroFactuPrincipal.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosParametroFactuPrincipal.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosParametroFactuPrincipal();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoParametroFactuPrincipal=false;
					
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
			
				if(this.parametrofactuprincipalSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormParametroFactuPrincipal==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosParametroFactuPrincipal.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosParametroFactuPrincipal.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.parametrofactuprincipal.getsType().equals("DUPLICADO")
				   || this.parametrofactuprincipal.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoParametroFactuPrincipal=true;
				
				} else {
					this.isEsNuevoParametroFactuPrincipal=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
					if(this.parametrofactuprincipal.getId()>=0 && !this.parametrofactuprincipal.getIsNew()) {						
						this.isEsNuevoParametroFactuPrincipal=false;
						
					} else {
						this.isEsNuevoParametroFactuPrincipal=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoParametroFactuPrincipal(esRelaciones);						
				
				this.seleccionarParametroFactuPrincipal(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.parametrofactuprincipal.getId()<0) {
					this.isEsNuevoParametroFactuPrincipal=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarParametroFactuPrincipal(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarParametroFactuPrincipal(evt,rowIndex);
				}	
				
				if(this.parametrofactuprincipalSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion ParametroFactuPrincipal: " + this.dDif); 
					}
				}								
				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarParametroFactuPrincipal(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.parametrofactuprincipal)) {
					if(this.parametrofactuprincipal.getId()>0) {
						this.parametrofactuprincipal.setIsDeleted(true);
						
						this.parametrofactuprincipalsEliminados.add(this.parametrofactuprincipal);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.parametrofactuprincipalLogic.getParametroFactuPrincipals().remove(this.parametrofactuprincipal);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipals.remove(this.parametrofactuprincipal);				
					}
					
					
					((ParametroFactuPrincipalModel) this.jTableDatosParametroFactuPrincipal.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaParametroFactuPrincipal(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarParametroFactuPrincipal(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoParametroFactuPrincipal) {
			
			if(this.jInternalFrameDetalleFormParametroFactuPrincipal==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosParametroFactuPrincipal.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosParametroFactuPrincipal.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioParametroFactuPrincipal(this.parametrofactuprincipal);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.parametrofactuprincipalConstantesFunciones.cargarid_empresaParametroFactuPrincipal || this.parametrofactuprincipalConstantesFunciones.event_dependid_empresaParametroFactuPrincipal) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.parametrofactuprincipal.getid_empresa());
									//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(parametrofactuprincipal.getEmpresa()!=null) {
							this.empresasForeignKey.add(parametrofactuprincipal.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.parametrofactuprincipal.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.parametrofactuprincipalConstantesFunciones.cargarid_sucursalParametroFactuPrincipal || this.parametrofactuprincipalConstantesFunciones.event_dependid_sucursalParametroFactuPrincipal) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.parametrofactuprincipal.getid_sucursal());
									//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(parametrofactuprincipal.getSucursal()!=null) {
							this.sucursalsForeignKey.add(parametrofactuprincipal.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.parametrofactuprincipal.getid_sucursal(),false,"Formulario");

					//TipoParamFactuDescuento
					if(!this.parametrofactuprincipalConstantesFunciones.cargarid_tipo_param_factu_descuentoParametroFactuPrincipal || this.parametrofactuprincipalConstantesFunciones.event_dependid_tipo_param_factu_descuentoParametroFactuPrincipal) {
						//this.cargarCombosTipoParamFactuDescuentosForeignKeyLista(" where id="+this.parametrofactuprincipal.getid_tipo_param_factu_descuento());
									//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
						this.tipoparamfactudescuentosForeignKey=new ArrayList<TipoParamFactuDescuento>();

						if(parametrofactuprincipal.getTipoParamFactuDescuento()!=null) {
							this.tipoparamfactudescuentosForeignKey.add(parametrofactuprincipal.getTipoParamFactuDescuento());
						}

						this.addItemDefectoCombosForeignKeyTipoParamFactuDescuento();
						this.cargarCombosFrameTipoParamFactuDescuentosForeignKey("Todos");
					}
					this.setActualTipoParamFactuDescuentoForeignKey(this.parametrofactuprincipal.getid_tipo_param_factu_descuento(),false,"Formulario");

					//TipoParamFactuListadoCliente
					if(!this.parametrofactuprincipalConstantesFunciones.cargarid_tipo_param_factu_listado_clienteParametroFactuPrincipal || this.parametrofactuprincipalConstantesFunciones.event_dependid_tipo_param_factu_listado_clienteParametroFactuPrincipal) {
						//this.cargarCombosTipoParamFactuListadoClientesForeignKeyLista(" where id="+this.parametrofactuprincipal.getid_tipo_param_factu_listado_cliente());
									//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
						this.tipoparamfactulistadoclientesForeignKey=new ArrayList<TipoParamFactuListadoCliente>();

						if(parametrofactuprincipal.getTipoParamFactuListadoCliente()!=null) {
							this.tipoparamfactulistadoclientesForeignKey.add(parametrofactuprincipal.getTipoParamFactuListadoCliente());
						}

						this.addItemDefectoCombosForeignKeyTipoParamFactuListadoCliente();
						this.cargarCombosFrameTipoParamFactuListadoClientesForeignKey("Todos");
					}
					this.setActualTipoParamFactuListadoClienteForeignKey(this.parametrofactuprincipal.getid_tipo_param_factu_listado_cliente(),false,"Formulario");

					//TipoParamFactuSecuenciaTrabajo
					if(!this.parametrofactuprincipalConstantesFunciones.cargarid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal || this.parametrofactuprincipalConstantesFunciones.event_dependid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal) {
						//this.cargarCombosTipoParamFactuSecuenciaTrabajosForeignKeyLista(" where id="+this.parametrofactuprincipal.getid_tipo_param_factu_secuencia_trabajo());
									//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
						this.tipoparamfactusecuenciatrabajosForeignKey=new ArrayList<TipoParamFactuSecuenciaTrabajo>();

						if(parametrofactuprincipal.getTipoParamFactuSecuenciaTrabajo()!=null) {
							this.tipoparamfactusecuenciatrabajosForeignKey.add(parametrofactuprincipal.getTipoParamFactuSecuenciaTrabajo());
						}

						this.addItemDefectoCombosForeignKeyTipoParamFactuSecuenciaTrabajo();
						this.cargarCombosFrameTipoParamFactuSecuenciaTrabajosForeignKey("Todos");
					}
					this.setActualTipoParamFactuSecuenciaTrabajoForeignKey(this.parametrofactuprincipal.getid_tipo_param_factu_secuencia_trabajo(),false,"Formulario");

					//TipoDocumentoFactura
					if(!this.parametrofactuprincipalConstantesFunciones.cargarid_tipo_documento_facturaParametroFactuPrincipal || this.parametrofactuprincipalConstantesFunciones.event_dependid_tipo_documento_facturaParametroFactuPrincipal) {
						//this.cargarCombosTipoDocumentoFacturasForeignKeyLista(" where id="+this.parametrofactuprincipal.getid_tipo_documento_factura());
									//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
						this.tipodocumentofacturasForeignKey=new ArrayList<TipoDocumento>();

						if(parametrofactuprincipal.getTipoDocumentoFactura()!=null) {
							this.tipodocumentofacturasForeignKey.add(parametrofactuprincipal.getTipoDocumentoFactura());
						}

						this.addItemDefectoCombosForeignKeyTipoDocumentoFactura();
						this.cargarCombosFrameTipoDocumentoFacturasForeignKey("Todos");
					}
					this.setActualTipoDocumentoFacturaForeignKey(this.parametrofactuprincipal.getid_tipo_documento_factura(),false,"Formulario");

					//TipoDocumentoNotaCredito
					if(!this.parametrofactuprincipalConstantesFunciones.cargarid_tipo_documento_nota_creditoParametroFactuPrincipal || this.parametrofactuprincipalConstantesFunciones.event_dependid_tipo_documento_nota_creditoParametroFactuPrincipal) {
						//this.cargarCombosTipoDocumentoNotaCreditosForeignKeyLista(" where id="+this.parametrofactuprincipal.getid_tipo_documento_nota_credito());
									//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
						this.tipodocumentonotacreditosForeignKey=new ArrayList<TipoDocumento>();

						if(parametrofactuprincipal.getTipoDocumentoNotaCredito()!=null) {
							this.tipodocumentonotacreditosForeignKey.add(parametrofactuprincipal.getTipoDocumentoNotaCredito());
						}

						this.addItemDefectoCombosForeignKeyTipoDocumentoNotaCredito();
						this.cargarCombosFrameTipoDocumentoNotaCreditosForeignKey("Todos");
					}
					this.setActualTipoDocumentoNotaCreditoForeignKey(this.parametrofactuprincipal.getid_tipo_documento_nota_credito(),false,"Formulario");

					//TipoDocumentoNotaDebito
					if(!this.parametrofactuprincipalConstantesFunciones.cargarid_tipo_documento_nota_debitoParametroFactuPrincipal || this.parametrofactuprincipalConstantesFunciones.event_dependid_tipo_documento_nota_debitoParametroFactuPrincipal) {
						//this.cargarCombosTipoDocumentoNotaDebitosForeignKeyLista(" where id="+this.parametrofactuprincipal.getid_tipo_documento_nota_debito());
									//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
						this.tipodocumentonotadebitosForeignKey=new ArrayList<TipoDocumento>();

						if(parametrofactuprincipal.getTipoDocumentoNotaDebito()!=null) {
							this.tipodocumentonotadebitosForeignKey.add(parametrofactuprincipal.getTipoDocumentoNotaDebito());
						}

						this.addItemDefectoCombosForeignKeyTipoDocumentoNotaDebito();
						this.cargarCombosFrameTipoDocumentoNotaDebitosForeignKey("Todos");
					}
					this.setActualTipoDocumentoNotaDebitoForeignKey(this.parametrofactuprincipal.getid_tipo_documento_nota_debito(),false,"Formulario");

					//LibroContable
					if(!this.parametrofactuprincipalConstantesFunciones.cargarid_libro_contableParametroFactuPrincipal || this.parametrofactuprincipalConstantesFunciones.event_dependid_libro_contableParametroFactuPrincipal) {
						//this.cargarCombosLibroContablesForeignKeyLista(" where id="+this.parametrofactuprincipal.getid_libro_contable());
									//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
						this.librocontablesForeignKey=new ArrayList<LibroContable>();

						if(parametrofactuprincipal.getLibroContable()!=null) {
							this.librocontablesForeignKey.add(parametrofactuprincipal.getLibroContable());
						}

						this.addItemDefectoCombosForeignKeyLibroContable();
						this.cargarCombosFrameLibroContablesForeignKey("Todos");
					}
					this.setActualLibroContableForeignKey(this.parametrofactuprincipal.getid_libro_contable(),false,"Formulario");

					//Moneda
					if(!this.parametrofactuprincipalConstantesFunciones.cargarid_monedaParametroFactuPrincipal || this.parametrofactuprincipalConstantesFunciones.event_dependid_monedaParametroFactuPrincipal) {
						//this.cargarCombosMonedasForeignKeyLista(" where id="+this.parametrofactuprincipal.getid_moneda());
									//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
						this.monedasForeignKey=new ArrayList<Moneda>();

						if(parametrofactuprincipal.getMoneda()!=null) {
							this.monedasForeignKey.add(parametrofactuprincipal.getMoneda());
						}

						this.addItemDefectoCombosForeignKeyMoneda();
						this.cargarCombosFrameMonedasForeignKey("Todos");
					}
					this.setActualMonedaForeignKey(this.parametrofactuprincipal.getid_moneda(),false,"Formulario");

					//Formato
					if(!this.parametrofactuprincipalConstantesFunciones.cargarid_formatoParametroFactuPrincipal || this.parametrofactuprincipalConstantesFunciones.event_dependid_formatoParametroFactuPrincipal) {
						//this.cargarCombosFormatosForeignKeyLista(" where id="+this.parametrofactuprincipal.getid_formato());
									//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
						this.formatosForeignKey=new ArrayList<Formato>();

						if(parametrofactuprincipal.getFormato()!=null) {
							this.formatosForeignKey.add(parametrofactuprincipal.getFormato());
						}

						this.addItemDefectoCombosForeignKeyFormato();
						this.cargarCombosFrameFormatosForeignKey("Todos");
					}
					this.setActualFormatoForeignKey(this.parametrofactuprincipal.getid_formato(),false,"Formulario");

					//CuentaContableFleteVenta
					if(!this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_flete_ventaParametroFactuPrincipal || this.parametrofactuprincipalConstantesFunciones.event_dependid_cuenta_contable_flete_ventaParametroFactuPrincipal) {
						//this.cargarCombosCuentaContableFleteVentasForeignKeyLista(" where id="+this.parametrofactuprincipal.getid_cuenta_contable_flete_venta());
									//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
						this.cuentacontablefleteventasForeignKey=new ArrayList<CuentaContable>();

						if(parametrofactuprincipal.getCuentaContableFleteVenta()!=null) {
							this.cuentacontablefleteventasForeignKey.add(parametrofactuprincipal.getCuentaContableFleteVenta());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableFleteVenta();
						this.cargarCombosFrameCuentaContableFleteVentasForeignKey("Todos");
					}
					this.setActualCuentaContableFleteVentaForeignKey(this.parametrofactuprincipal.getid_cuenta_contable_flete_venta(),false,"Formulario");

					//CuentaContableOtroCargo
					if(!this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_otro_cargoParametroFactuPrincipal || this.parametrofactuprincipalConstantesFunciones.event_dependid_cuenta_contable_otro_cargoParametroFactuPrincipal) {
						//this.cargarCombosCuentaContableOtroCargosForeignKeyLista(" where id="+this.parametrofactuprincipal.getid_cuenta_contable_otro_cargo());
									//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
						this.cuentacontableotrocargosForeignKey=new ArrayList<CuentaContable>();

						if(parametrofactuprincipal.getCuentaContableOtroCargo()!=null) {
							this.cuentacontableotrocargosForeignKey.add(parametrofactuprincipal.getCuentaContableOtroCargo());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableOtroCargo();
						this.cargarCombosFrameCuentaContableOtroCargosForeignKey("Todos");
					}
					this.setActualCuentaContableOtroCargoForeignKey(this.parametrofactuprincipal.getid_cuenta_contable_otro_cargo(),false,"Formulario");

					//CuentaContableFinan
					if(!this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_finanParametroFactuPrincipal || this.parametrofactuprincipalConstantesFunciones.event_dependid_cuenta_contable_finanParametroFactuPrincipal) {
						//this.cargarCombosCuentaContableFinansForeignKeyLista(" where id="+this.parametrofactuprincipal.getid_cuenta_contable_finan());
									//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
						this.cuentacontablefinansForeignKey=new ArrayList<CuentaContable>();

						if(parametrofactuprincipal.getCuentaContableFinan()!=null) {
							this.cuentacontablefinansForeignKey.add(parametrofactuprincipal.getCuentaContableFinan());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableFinan();
						this.cargarCombosFrameCuentaContableFinansForeignKey("Todos");
					}
					this.setActualCuentaContableFinanForeignKey(this.parametrofactuprincipal.getid_cuenta_contable_finan(),false,"Formulario");

					//CuentaContableBoni
					if(!this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_boniParametroFactuPrincipal || this.parametrofactuprincipalConstantesFunciones.event_dependid_cuenta_contable_boniParametroFactuPrincipal) {
						//this.cargarCombosCuentaContableBonisForeignKeyLista(" where id="+this.parametrofactuprincipal.getid_cuenta_contable_boni());
									//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
						this.cuentacontablebonisForeignKey=new ArrayList<CuentaContable>();

						if(parametrofactuprincipal.getCuentaContableBoni()!=null) {
							this.cuentacontablebonisForeignKey.add(parametrofactuprincipal.getCuentaContableBoni());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableBoni();
						this.cargarCombosFrameCuentaContableBonisForeignKey("Todos");
					}
					this.setActualCuentaContableBoniForeignKey(this.parametrofactuprincipal.getid_cuenta_contable_boni(),false,"Formulario");

					//CuentaContableBoniDevol
					if(!this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_boni_devolParametroFactuPrincipal || this.parametrofactuprincipalConstantesFunciones.event_dependid_cuenta_contable_boni_devolParametroFactuPrincipal) {
						//this.cargarCombosCuentaContableBoniDevolsForeignKeyLista(" where id="+this.parametrofactuprincipal.getid_cuenta_contable_boni_devol());
									//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
						this.cuentacontablebonidevolsForeignKey=new ArrayList<CuentaContable>();

						if(parametrofactuprincipal.getCuentaContableBoniDevol()!=null) {
							this.cuentacontablebonidevolsForeignKey.add(parametrofactuprincipal.getCuentaContableBoniDevol());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableBoniDevol();
						this.cargarCombosFrameCuentaContableBoniDevolsForeignKey("Todos");
					}
					this.setActualCuentaContableBoniDevolForeignKey(this.parametrofactuprincipal.getid_cuenta_contable_boni_devol(),false,"Formulario");

					//CuentaContableIce
					if(!this.parametrofactuprincipalConstantesFunciones.cargarid_cuenta_contable_iceParametroFactuPrincipal || this.parametrofactuprincipalConstantesFunciones.event_dependid_cuenta_contable_iceParametroFactuPrincipal) {
						//this.cargarCombosCuentaContableIcesForeignKeyLista(" where id="+this.parametrofactuprincipal.getid_cuenta_contable_ice());
									//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
						this.cuentacontableicesForeignKey=new ArrayList<CuentaContable>();

						if(parametrofactuprincipal.getCuentaContableIce()!=null) {
							this.cuentacontableicesForeignKey.add(parametrofactuprincipal.getCuentaContableIce());
						}

						this.addItemDefectoCombosForeignKeyCuentaContableIce();
						this.cargarCombosFrameCuentaContableIcesForeignKey("Todos");
					}
					this.setActualCuentaContableIceForeignKey(this.parametrofactuprincipal.getid_cuenta_contable_ice(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesParametroFactuPrincipal("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesParametroFactuPrincipal(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualParametroFactuPrincipal() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoParametroFactuPrincipal(ParametroFactuPrincipal parametrofactuprincipal) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoParametroFactuPrincipal(parametrofactuprincipal,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoParametroFactuPrincipal(ParametroFactuPrincipal parametrofactuprincipal,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioParametroFactuPrincipal(parametrofactuprincipal);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyParametroFactuPrincipal(parametrofactuprincipal,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyParametroFactuPrincipal(parametrofactuprincipal);
	}
	
	public void setVariablesObjetoActualToFormularioParametroFactuPrincipal(ParametroFactuPrincipal parametrofactuprincipal) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormParametroFactuPrincipal==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelidParametroFactuPrincipal.setText(parametrofactuprincipal.getId().toString());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxen_lineaParametroFactuPrincipal.setSelected(parametrofactuprincipal.geten_linea());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cuenta_tipo_clienteParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_cuenta_tipo_cliente());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cliente_impuestoParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_cliente_impuesto());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_impresionParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_impresion());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_secuencial_usuarioParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_secuencial_usuario());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_secuencial_editableParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_secuencial_editable());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_precio_por_clienteParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_precio_por_cliente());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_modificar_precioParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_modificar_precio());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_modificar_servicioParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_modificar_servicio());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cambiar_unidadParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_cambiar_unidad());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextFieldnumero_decimales_unidadParametroFactuPrincipal.setText(parametrofactuprincipal.getnumero_decimales_unidad().toString());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_serieParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_activar_serie());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_loteParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_activar_lote());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_multi_empresaParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_activar_multi_empresa());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_centro_costosParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_centro_costos());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_unidadesParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_unidades());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cupo_disponibleParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_cupo_disponible());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_forma_pagoParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_forma_pago());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_envio_mailParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_envio_mail());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_autorizar_proformaParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_autorizar_proforma());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_bloqueo_pedidoParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_bloqueo_pedido());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_control_anticipoParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_control_anticipo());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_factura_autoParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_factura_auto());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_grabar_valor_ceroParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_grabar_valor_cero());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_agregar_itemParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_agregar_item());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextFieldnumero_copiasParametroFactuPrincipal.setText(parametrofactuprincipal.getnumero_copias().toString());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextArealeyendaParametroFactuPrincipal.setText(parametrofactuprincipal.getleyenda());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_sin_facturaParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_sin_factura());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,ParametroFactuPrincipal parametrofactuprincipalLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,parametrofactuprincipalLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,ParametroFactuPrincipal parametrofactuprincipalLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				parametrofactuprincipalLocal=this.parametrofactuprincipal;
			} else {
				parametrofactuprincipalLocal=this.parametrofactuprincipalAnterior;
			}
		}
		
		if(this.permiteMantenimiento(parametrofactuprincipalLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoParametroFactuPrincipal(parametrofactuprincipalLocal,true);
					
					if(parametrofactuprincipalSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(parametrofactuprincipalLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(parametrofactuprincipalLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoParametroFactuPrincipal(ParametroFactuPrincipal parametrofactuprincipal,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(parametrofactuprincipal,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(parametrofactuprincipal);
	}
	
	public void setVariablesFormularioToObjetoActualParametroFactuPrincipal(ParametroFactuPrincipal parametrofactuprincipal,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(parametrofactuprincipal,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualParametroFactuPrincipal(ParametroFactuPrincipal parametrofactuprincipal,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormParametroFactuPrincipal==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelidParametroFactuPrincipal.getText()==null || this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelidParametroFactuPrincipal.getText()=="" || this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelidParametroFactuPrincipal.getText()=="Id") {
				this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelidParametroFactuPrincipal.setText("0");
			}

			if(conColumnasBase) {parametrofactuprincipal.setId(Long.parseLong(this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelidParametroFactuPrincipal.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelIdParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.seten_linea(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxen_lineaParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_ENLINEA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelen_lineaParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_cuenta_tipo_cliente(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cuenta_tipo_clienteParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUENTATIPOCLIENTE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_cuenta_tipo_clienteParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_cliente_impuesto(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cliente_impuestoParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONCLIENTEIMPUESTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_cliente_impuestoParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_impresion(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_impresionParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONIMPRESION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_impresionParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_secuencial_usuario(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_secuencial_usuarioParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALUSUARIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_secuencial_usuarioParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_secuencial_editable(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_secuencial_editableParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALEDITABLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_secuencial_editableParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_precio_por_cliente(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_precio_por_clienteParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONPRECIOPORCLIENTE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_precio_por_clienteParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_modificar_precio(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_modificar_precioParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARPRECIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_modificar_precioParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_modificar_servicio(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_modificar_servicioParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARSERVICIO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_modificar_servicioParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_cambiar_unidad(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cambiar_unidadParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONCAMBIARUNIDAD+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_cambiar_unidadParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setnumero_decimales_unidad(Integer.parseInt(this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextFieldnumero_decimales_unidadParametroFactuPrincipal.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_NUMERODECIMALESUNIDAD+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelnumero_decimales_unidadParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_activar_serie(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_serieParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARSERIE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_activar_serieParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_activar_lote(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_loteParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARLOTE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_activar_loteParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_activar_multi_empresa(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_multi_empresaParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARMULTIEMPRESA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_activar_multi_empresaParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_centro_costos(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_centro_costosParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONCENTROCOSTOS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_centro_costosParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_unidades(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_unidadesParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONUNIDADES+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_unidadesParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_cupo_disponible(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cupo_disponibleParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUPODISPONIBLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_cupo_disponibleParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_forma_pago(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_forma_pagoParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONFORMAPAGO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_forma_pagoParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_envio_mail(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_envio_mailParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONENVIOMAIL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_envio_mailParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_autorizar_proforma(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_autorizar_proformaParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONAUTORIZARPROFORMA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_autorizar_proformaParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_bloqueo_pedido(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_bloqueo_pedidoParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONBLOQUEOPEDIDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_bloqueo_pedidoParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_control_anticipo(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_control_anticipoParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONCONTROLANTICIPO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_control_anticipoParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_factura_auto(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_factura_autoParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONFACTURAAUTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_factura_autoParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_grabar_valor_cero(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_grabar_valor_ceroParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONGRABARVALORCERO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_grabar_valor_ceroParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_agregar_item(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_agregar_itemParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONAGREGARITEM+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_agregar_itemParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setnumero_copias(Integer.parseInt(this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextFieldnumero_copiasParametroFactuPrincipal.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_NUMEROCOPIAS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelnumero_copiasParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setleyenda(this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextArealeyendaParametroFactuPrincipal.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_LEYENDA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelleyendaParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			parametrofactuprincipal.setcon_sin_factura(this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_sin_facturaParametroFactuPrincipal.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+ParametroFactuPrincipalConstantesFunciones.LABEL_CONSINFACTURA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelcon_sin_facturaParametroFactuPrincipal,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualParametroFactuPrincipal(ParametroFactuPrincipal parametrofactuprincipalBean,ParametroFactuPrincipal parametrofactuprincipal,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conDefault || (!conDefault && parametrofactuprincipalBean.getid_tipo_param_factu_descuento()!=null && !parametrofactuprincipalBean.getid_tipo_param_factu_descuento().equals(-1L))) {parametrofactuprincipal.setid_tipo_param_factu_descuento(parametrofactuprincipalBean.getid_tipo_param_factu_descuento());}
			if(conDefault || (!conDefault && parametrofactuprincipalBean.getid_tipo_param_factu_listado_cliente()!=null && !parametrofactuprincipalBean.getid_tipo_param_factu_listado_cliente().equals(-1L))) {parametrofactuprincipal.setid_tipo_param_factu_listado_cliente(parametrofactuprincipalBean.getid_tipo_param_factu_listado_cliente());}
			if(conDefault || (!conDefault && parametrofactuprincipalBean.getid_tipo_param_factu_secuencia_trabajo()!=null && !parametrofactuprincipalBean.getid_tipo_param_factu_secuencia_trabajo().equals(-1L))) {parametrofactuprincipal.setid_tipo_param_factu_secuencia_trabajo(parametrofactuprincipalBean.getid_tipo_param_factu_secuencia_trabajo());}
			if(conDefault || (!conDefault && parametrofactuprincipalBean.getid_tipo_documento_factura()!=null && !parametrofactuprincipalBean.getid_tipo_documento_factura().equals(-1L))) {parametrofactuprincipal.setid_tipo_documento_factura(parametrofactuprincipalBean.getid_tipo_documento_factura());}
			if(conDefault || (!conDefault && parametrofactuprincipalBean.getid_tipo_documento_nota_credito()!=null && !parametrofactuprincipalBean.getid_tipo_documento_nota_credito().equals(-1L))) {parametrofactuprincipal.setid_tipo_documento_nota_credito(parametrofactuprincipalBean.getid_tipo_documento_nota_credito());}
			if(conDefault || (!conDefault && parametrofactuprincipalBean.getid_tipo_documento_nota_debito()!=null && !parametrofactuprincipalBean.getid_tipo_documento_nota_debito().equals(-1L))) {parametrofactuprincipal.setid_tipo_documento_nota_debito(parametrofactuprincipalBean.getid_tipo_documento_nota_debito());}
			if(conDefault || (!conDefault && parametrofactuprincipalBean.getid_libro_contable()!=null && !parametrofactuprincipalBean.getid_libro_contable().equals(-1L))) {parametrofactuprincipal.setid_libro_contable(parametrofactuprincipalBean.getid_libro_contable());}
			if(conDefault || (!conDefault && parametrofactuprincipalBean.getid_formato()!=null && !parametrofactuprincipalBean.getid_formato().equals(-1L))) {parametrofactuprincipal.setid_formato(parametrofactuprincipalBean.getid_formato());}
			if(conDefault || (!conDefault && parametrofactuprincipalBean.getid_cuenta_contable_flete_venta()!=null && !parametrofactuprincipalBean.getid_cuenta_contable_flete_venta().equals(-1L))) {parametrofactuprincipal.setid_cuenta_contable_flete_venta(parametrofactuprincipalBean.getid_cuenta_contable_flete_venta());}
			if(conDefault || (!conDefault && parametrofactuprincipalBean.getid_cuenta_contable_otro_cargo()!=null && !parametrofactuprincipalBean.getid_cuenta_contable_otro_cargo().equals(-1L))) {parametrofactuprincipal.setid_cuenta_contable_otro_cargo(parametrofactuprincipalBean.getid_cuenta_contable_otro_cargo());}
			if(conDefault || (!conDefault && parametrofactuprincipalBean.getid_cuenta_contable_finan()!=null && !parametrofactuprincipalBean.getid_cuenta_contable_finan().equals(-1L))) {parametrofactuprincipal.setid_cuenta_contable_finan(parametrofactuprincipalBean.getid_cuenta_contable_finan());}
			if(conDefault || (!conDefault && parametrofactuprincipalBean.getid_cuenta_contable_boni()!=null && !parametrofactuprincipalBean.getid_cuenta_contable_boni().equals(-1L))) {parametrofactuprincipal.setid_cuenta_contable_boni(parametrofactuprincipalBean.getid_cuenta_contable_boni());}
			if(conDefault || (!conDefault && parametrofactuprincipalBean.getid_cuenta_contable_boni_devol()!=null && !parametrofactuprincipalBean.getid_cuenta_contable_boni_devol().equals(-1L))) {parametrofactuprincipal.setid_cuenta_contable_boni_devol(parametrofactuprincipalBean.getid_cuenta_contable_boni_devol());}
			if(conDefault || (!conDefault && parametrofactuprincipalBean.getid_cuenta_contable_ice()!=null && !parametrofactuprincipalBean.getid_cuenta_contable_ice().equals(-1L))) {parametrofactuprincipal.setid_cuenta_contable_ice(parametrofactuprincipalBean.getid_cuenta_contable_ice());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosParametroFactuPrincipal(ParametroFactuPrincipal parametrofactuprincipalOrigen,ParametroFactuPrincipal parametrofactuprincipal,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getId()!=null && !parametrofactuprincipalOrigen.getId().equals(0L))) {parametrofactuprincipal.setId(parametrofactuprincipalOrigen.getId());}}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getid_tipo_param_factu_descuento()!=null && !parametrofactuprincipalOrigen.getid_tipo_param_factu_descuento().equals(-1L))) {parametrofactuprincipal.setid_tipo_param_factu_descuento(parametrofactuprincipalOrigen.getid_tipo_param_factu_descuento());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getid_tipo_param_factu_listado_cliente()!=null && !parametrofactuprincipalOrigen.getid_tipo_param_factu_listado_cliente().equals(-1L))) {parametrofactuprincipal.setid_tipo_param_factu_listado_cliente(parametrofactuprincipalOrigen.getid_tipo_param_factu_listado_cliente());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getid_tipo_param_factu_secuencia_trabajo()!=null && !parametrofactuprincipalOrigen.getid_tipo_param_factu_secuencia_trabajo().equals(-1L))) {parametrofactuprincipal.setid_tipo_param_factu_secuencia_trabajo(parametrofactuprincipalOrigen.getid_tipo_param_factu_secuencia_trabajo());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getid_tipo_documento_factura()!=null && !parametrofactuprincipalOrigen.getid_tipo_documento_factura().equals(-1L))) {parametrofactuprincipal.setid_tipo_documento_factura(parametrofactuprincipalOrigen.getid_tipo_documento_factura());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getid_tipo_documento_nota_credito()!=null && !parametrofactuprincipalOrigen.getid_tipo_documento_nota_credito().equals(-1L))) {parametrofactuprincipal.setid_tipo_documento_nota_credito(parametrofactuprincipalOrigen.getid_tipo_documento_nota_credito());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getid_tipo_documento_nota_debito()!=null && !parametrofactuprincipalOrigen.getid_tipo_documento_nota_debito().equals(-1L))) {parametrofactuprincipal.setid_tipo_documento_nota_debito(parametrofactuprincipalOrigen.getid_tipo_documento_nota_debito());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.geten_linea()!=null && !parametrofactuprincipalOrigen.geten_linea().equals(false))) {parametrofactuprincipal.seten_linea(parametrofactuprincipalOrigen.geten_linea());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_cuenta_tipo_cliente()!=null && !parametrofactuprincipalOrigen.getcon_cuenta_tipo_cliente().equals(false))) {parametrofactuprincipal.setcon_cuenta_tipo_cliente(parametrofactuprincipalOrigen.getcon_cuenta_tipo_cliente());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_cliente_impuesto()!=null && !parametrofactuprincipalOrigen.getcon_cliente_impuesto().equals(false))) {parametrofactuprincipal.setcon_cliente_impuesto(parametrofactuprincipalOrigen.getcon_cliente_impuesto());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getid_libro_contable()!=null && !parametrofactuprincipalOrigen.getid_libro_contable().equals(-1L))) {parametrofactuprincipal.setid_libro_contable(parametrofactuprincipalOrigen.getid_libro_contable());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_impresion()!=null && !parametrofactuprincipalOrigen.getcon_impresion().equals(false))) {parametrofactuprincipal.setcon_impresion(parametrofactuprincipalOrigen.getcon_impresion());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getid_formato()!=null && !parametrofactuprincipalOrigen.getid_formato().equals(-1L))) {parametrofactuprincipal.setid_formato(parametrofactuprincipalOrigen.getid_formato());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_secuencial_usuario()!=null && !parametrofactuprincipalOrigen.getcon_secuencial_usuario().equals(false))) {parametrofactuprincipal.setcon_secuencial_usuario(parametrofactuprincipalOrigen.getcon_secuencial_usuario());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_secuencial_editable()!=null && !parametrofactuprincipalOrigen.getcon_secuencial_editable().equals(false))) {parametrofactuprincipal.setcon_secuencial_editable(parametrofactuprincipalOrigen.getcon_secuencial_editable());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_precio_por_cliente()!=null && !parametrofactuprincipalOrigen.getcon_precio_por_cliente().equals(false))) {parametrofactuprincipal.setcon_precio_por_cliente(parametrofactuprincipalOrigen.getcon_precio_por_cliente());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_modificar_precio()!=null && !parametrofactuprincipalOrigen.getcon_modificar_precio().equals(false))) {parametrofactuprincipal.setcon_modificar_precio(parametrofactuprincipalOrigen.getcon_modificar_precio());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_modificar_servicio()!=null && !parametrofactuprincipalOrigen.getcon_modificar_servicio().equals(false))) {parametrofactuprincipal.setcon_modificar_servicio(parametrofactuprincipalOrigen.getcon_modificar_servicio());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_cambiar_unidad()!=null && !parametrofactuprincipalOrigen.getcon_cambiar_unidad().equals(false))) {parametrofactuprincipal.setcon_cambiar_unidad(parametrofactuprincipalOrigen.getcon_cambiar_unidad());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getnumero_decimales_unidad()!=null && !parametrofactuprincipalOrigen.getnumero_decimales_unidad().equals(0))) {parametrofactuprincipal.setnumero_decimales_unidad(parametrofactuprincipalOrigen.getnumero_decimales_unidad());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_activar_serie()!=null && !parametrofactuprincipalOrigen.getcon_activar_serie().equals(false))) {parametrofactuprincipal.setcon_activar_serie(parametrofactuprincipalOrigen.getcon_activar_serie());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_activar_lote()!=null && !parametrofactuprincipalOrigen.getcon_activar_lote().equals(false))) {parametrofactuprincipal.setcon_activar_lote(parametrofactuprincipalOrigen.getcon_activar_lote());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_activar_multi_empresa()!=null && !parametrofactuprincipalOrigen.getcon_activar_multi_empresa().equals(false))) {parametrofactuprincipal.setcon_activar_multi_empresa(parametrofactuprincipalOrigen.getcon_activar_multi_empresa());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_centro_costos()!=null && !parametrofactuprincipalOrigen.getcon_centro_costos().equals(false))) {parametrofactuprincipal.setcon_centro_costos(parametrofactuprincipalOrigen.getcon_centro_costos());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_unidades()!=null && !parametrofactuprincipalOrigen.getcon_unidades().equals(false))) {parametrofactuprincipal.setcon_unidades(parametrofactuprincipalOrigen.getcon_unidades());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_cupo_disponible()!=null && !parametrofactuprincipalOrigen.getcon_cupo_disponible().equals(false))) {parametrofactuprincipal.setcon_cupo_disponible(parametrofactuprincipalOrigen.getcon_cupo_disponible());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_forma_pago()!=null && !parametrofactuprincipalOrigen.getcon_forma_pago().equals(false))) {parametrofactuprincipal.setcon_forma_pago(parametrofactuprincipalOrigen.getcon_forma_pago());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_envio_mail()!=null && !parametrofactuprincipalOrigen.getcon_envio_mail().equals(false))) {parametrofactuprincipal.setcon_envio_mail(parametrofactuprincipalOrigen.getcon_envio_mail());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_autorizar_proforma()!=null && !parametrofactuprincipalOrigen.getcon_autorizar_proforma().equals(false))) {parametrofactuprincipal.setcon_autorizar_proforma(parametrofactuprincipalOrigen.getcon_autorizar_proforma());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_bloqueo_pedido()!=null && !parametrofactuprincipalOrigen.getcon_bloqueo_pedido().equals(false))) {parametrofactuprincipal.setcon_bloqueo_pedido(parametrofactuprincipalOrigen.getcon_bloqueo_pedido());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_control_anticipo()!=null && !parametrofactuprincipalOrigen.getcon_control_anticipo().equals(false))) {parametrofactuprincipal.setcon_control_anticipo(parametrofactuprincipalOrigen.getcon_control_anticipo());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_factura_auto()!=null && !parametrofactuprincipalOrigen.getcon_factura_auto().equals(false))) {parametrofactuprincipal.setcon_factura_auto(parametrofactuprincipalOrigen.getcon_factura_auto());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_grabar_valor_cero()!=null && !parametrofactuprincipalOrigen.getcon_grabar_valor_cero().equals(false))) {parametrofactuprincipal.setcon_grabar_valor_cero(parametrofactuprincipalOrigen.getcon_grabar_valor_cero());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_agregar_item()!=null && !parametrofactuprincipalOrigen.getcon_agregar_item().equals(false))) {parametrofactuprincipal.setcon_agregar_item(parametrofactuprincipalOrigen.getcon_agregar_item());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getnumero_copias()!=null && !parametrofactuprincipalOrigen.getnumero_copias().equals(0))) {parametrofactuprincipal.setnumero_copias(parametrofactuprincipalOrigen.getnumero_copias());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getleyenda()!=null && !parametrofactuprincipalOrigen.getleyenda().equals(""))) {parametrofactuprincipal.setleyenda(parametrofactuprincipalOrigen.getleyenda());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getcon_sin_factura()!=null && !parametrofactuprincipalOrigen.getcon_sin_factura().equals(false))) {parametrofactuprincipal.setcon_sin_factura(parametrofactuprincipalOrigen.getcon_sin_factura());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getid_cuenta_contable_flete_venta()!=null && !parametrofactuprincipalOrigen.getid_cuenta_contable_flete_venta().equals(-1L))) {parametrofactuprincipal.setid_cuenta_contable_flete_venta(parametrofactuprincipalOrigen.getid_cuenta_contable_flete_venta());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getid_cuenta_contable_otro_cargo()!=null && !parametrofactuprincipalOrigen.getid_cuenta_contable_otro_cargo().equals(-1L))) {parametrofactuprincipal.setid_cuenta_contable_otro_cargo(parametrofactuprincipalOrigen.getid_cuenta_contable_otro_cargo());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getid_cuenta_contable_finan()!=null && !parametrofactuprincipalOrigen.getid_cuenta_contable_finan().equals(-1L))) {parametrofactuprincipal.setid_cuenta_contable_finan(parametrofactuprincipalOrigen.getid_cuenta_contable_finan());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getid_cuenta_contable_boni()!=null && !parametrofactuprincipalOrigen.getid_cuenta_contable_boni().equals(-1L))) {parametrofactuprincipal.setid_cuenta_contable_boni(parametrofactuprincipalOrigen.getid_cuenta_contable_boni());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getid_cuenta_contable_boni_devol()!=null && !parametrofactuprincipalOrigen.getid_cuenta_contable_boni_devol().equals(-1L))) {parametrofactuprincipal.setid_cuenta_contable_boni_devol(parametrofactuprincipalOrigen.getid_cuenta_contable_boni_devol());}
			if(conDefault || (!conDefault && parametrofactuprincipalOrigen.getid_cuenta_contable_ice()!=null && !parametrofactuprincipalOrigen.getid_cuenta_contable_ice().equals(-1L))) {parametrofactuprincipal.setid_cuenta_contable_ice(parametrofactuprincipalOrigen.getid_cuenta_contable_ice());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioParametroFactuPrincipal(ParametroFactuPrincipal parametrofactuprincipal) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelidParametroFactuPrincipal.setText(parametrofactuprincipal.getId().toString());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxen_lineaParametroFactuPrincipal.setSelected(parametrofactuprincipal.geten_linea());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cuenta_tipo_clienteParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_cuenta_tipo_cliente());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cliente_impuestoParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_cliente_impuesto());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_impresionParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_impresion());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_secuencial_usuarioParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_secuencial_usuario());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_secuencial_editableParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_secuencial_editable());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_precio_por_clienteParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_precio_por_cliente());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_modificar_precioParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_modificar_precio());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_modificar_servicioParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_modificar_servicio());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cambiar_unidadParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_cambiar_unidad());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextFieldnumero_decimales_unidadParametroFactuPrincipal.setText(parametrofactuprincipal.getnumero_decimales_unidad().toString());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_serieParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_activar_serie());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_loteParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_activar_lote());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_multi_empresaParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_activar_multi_empresa());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_centro_costosParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_centro_costos());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_unidadesParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_unidades());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cupo_disponibleParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_cupo_disponible());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_forma_pagoParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_forma_pago());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_envio_mailParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_envio_mail());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_autorizar_proformaParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_autorizar_proforma());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_bloqueo_pedidoParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_bloqueo_pedido());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_control_anticipoParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_control_anticipo());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_factura_autoParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_factura_auto());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_grabar_valor_ceroParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_grabar_valor_cero());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_agregar_itemParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_agregar_item());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextFieldnumero_copiasParametroFactuPrincipal.setText(parametrofactuprincipal.getnumero_copias().toString());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextArealeyendaParametroFactuPrincipal.setText(parametrofactuprincipal.getleyenda());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_sin_facturaParametroFactuPrincipal.setSelected(parametrofactuprincipal.getcon_sin_factura());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioParametroFactuPrincipal(ParametroFactuPrincipalBean parametrofactuprincipalBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelidParametroFactuPrincipal.setText(parametrofactuprincipalBean.getId().toString());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxen_lineaParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.geten_linea());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cuenta_tipo_clienteParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_cuenta_tipo_cliente());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cliente_impuestoParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_cliente_impuesto());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_impresionParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_impresion());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_secuencial_usuarioParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_secuencial_usuario());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_secuencial_editableParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_secuencial_editable());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_precio_por_clienteParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_precio_por_cliente());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_modificar_precioParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_modificar_precio());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_modificar_servicioParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_modificar_servicio());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cambiar_unidadParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_cambiar_unidad());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextFieldnumero_decimales_unidadParametroFactuPrincipal.setText(parametrofactuprincipalBean.getnumero_decimales_unidad().toString());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_serieParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_activar_serie());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_loteParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_activar_lote());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_multi_empresaParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_activar_multi_empresa());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_centro_costosParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_centro_costos());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_unidadesParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_unidades());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cupo_disponibleParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_cupo_disponible());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_forma_pagoParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_forma_pago());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_envio_mailParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_envio_mail());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_autorizar_proformaParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_autorizar_proforma());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_bloqueo_pedidoParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_bloqueo_pedido());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_control_anticipoParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_control_anticipo());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_factura_autoParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_factura_auto());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_grabar_valor_ceroParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_grabar_valor_cero());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_agregar_itemParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_agregar_item());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextFieldnumero_copiasParametroFactuPrincipal.setText(parametrofactuprincipalBean.getnumero_copias().toString());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextArealeyendaParametroFactuPrincipal.setText(parametrofactuprincipalBean.getleyenda());
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_sin_facturaParametroFactuPrincipal.setSelected(parametrofactuprincipalBean.getcon_sin_factura());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanParametroFactuPrincipal(ParametroFactuPrincipalParameterReturnGeneral parametrofactuprincipalReturnGeneral,ParametroFactuPrincipalBean parametrofactuprincipalBean,Boolean conDefault) throws Exception { 
		try {
			ParametroFactuPrincipal parametrofactuprincipalLocal=new ParametroFactuPrincipal();
			
			parametrofactuprincipalLocal=parametrofactuprincipalReturnGeneral.getParametroFactuPrincipal();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && parametrofactuprincipalLocal.getId()!=null && !parametrofactuprincipalLocal.getId().equals(0L))) {parametrofactuprincipalBean.setId(parametrofactuprincipalLocal.getId());}}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getid_tipo_param_factu_descuento()!=null && !parametrofactuprincipalLocal.getid_tipo_param_factu_descuento().equals(-1L))) {parametrofactuprincipalBean.setid_tipo_param_factu_descuento(parametrofactuprincipalLocal.getid_tipo_param_factu_descuento());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getid_tipo_param_factu_listado_cliente()!=null && !parametrofactuprincipalLocal.getid_tipo_param_factu_listado_cliente().equals(-1L))) {parametrofactuprincipalBean.setid_tipo_param_factu_listado_cliente(parametrofactuprincipalLocal.getid_tipo_param_factu_listado_cliente());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getid_tipo_param_factu_secuencia_trabajo()!=null && !parametrofactuprincipalLocal.getid_tipo_param_factu_secuencia_trabajo().equals(-1L))) {parametrofactuprincipalBean.setid_tipo_param_factu_secuencia_trabajo(parametrofactuprincipalLocal.getid_tipo_param_factu_secuencia_trabajo());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getid_tipo_documento_factura()!=null && !parametrofactuprincipalLocal.getid_tipo_documento_factura().equals(-1L))) {parametrofactuprincipalBean.setid_tipo_documento_factura(parametrofactuprincipalLocal.getid_tipo_documento_factura());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getid_tipo_documento_nota_credito()!=null && !parametrofactuprincipalLocal.getid_tipo_documento_nota_credito().equals(-1L))) {parametrofactuprincipalBean.setid_tipo_documento_nota_credito(parametrofactuprincipalLocal.getid_tipo_documento_nota_credito());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getid_tipo_documento_nota_debito()!=null && !parametrofactuprincipalLocal.getid_tipo_documento_nota_debito().equals(-1L))) {parametrofactuprincipalBean.setid_tipo_documento_nota_debito(parametrofactuprincipalLocal.getid_tipo_documento_nota_debito());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.geten_linea()!=null && !parametrofactuprincipalLocal.geten_linea().equals(false))) {parametrofactuprincipalBean.seten_linea(parametrofactuprincipalLocal.geten_linea());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_cuenta_tipo_cliente()!=null && !parametrofactuprincipalLocal.getcon_cuenta_tipo_cliente().equals(false))) {parametrofactuprincipalBean.setcon_cuenta_tipo_cliente(parametrofactuprincipalLocal.getcon_cuenta_tipo_cliente());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_cliente_impuesto()!=null && !parametrofactuprincipalLocal.getcon_cliente_impuesto().equals(false))) {parametrofactuprincipalBean.setcon_cliente_impuesto(parametrofactuprincipalLocal.getcon_cliente_impuesto());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getid_libro_contable()!=null && !parametrofactuprincipalLocal.getid_libro_contable().equals(-1L))) {parametrofactuprincipalBean.setid_libro_contable(parametrofactuprincipalLocal.getid_libro_contable());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_impresion()!=null && !parametrofactuprincipalLocal.getcon_impresion().equals(false))) {parametrofactuprincipalBean.setcon_impresion(parametrofactuprincipalLocal.getcon_impresion());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getid_formato()!=null && !parametrofactuprincipalLocal.getid_formato().equals(-1L))) {parametrofactuprincipalBean.setid_formato(parametrofactuprincipalLocal.getid_formato());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_secuencial_usuario()!=null && !parametrofactuprincipalLocal.getcon_secuencial_usuario().equals(false))) {parametrofactuprincipalBean.setcon_secuencial_usuario(parametrofactuprincipalLocal.getcon_secuencial_usuario());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_secuencial_editable()!=null && !parametrofactuprincipalLocal.getcon_secuencial_editable().equals(false))) {parametrofactuprincipalBean.setcon_secuencial_editable(parametrofactuprincipalLocal.getcon_secuencial_editable());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_precio_por_cliente()!=null && !parametrofactuprincipalLocal.getcon_precio_por_cliente().equals(false))) {parametrofactuprincipalBean.setcon_precio_por_cliente(parametrofactuprincipalLocal.getcon_precio_por_cliente());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_modificar_precio()!=null && !parametrofactuprincipalLocal.getcon_modificar_precio().equals(false))) {parametrofactuprincipalBean.setcon_modificar_precio(parametrofactuprincipalLocal.getcon_modificar_precio());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_modificar_servicio()!=null && !parametrofactuprincipalLocal.getcon_modificar_servicio().equals(false))) {parametrofactuprincipalBean.setcon_modificar_servicio(parametrofactuprincipalLocal.getcon_modificar_servicio());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_cambiar_unidad()!=null && !parametrofactuprincipalLocal.getcon_cambiar_unidad().equals(false))) {parametrofactuprincipalBean.setcon_cambiar_unidad(parametrofactuprincipalLocal.getcon_cambiar_unidad());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getnumero_decimales_unidad()!=null && !parametrofactuprincipalLocal.getnumero_decimales_unidad().equals(0))) {parametrofactuprincipalBean.setnumero_decimales_unidad(parametrofactuprincipalLocal.getnumero_decimales_unidad());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_activar_serie()!=null && !parametrofactuprincipalLocal.getcon_activar_serie().equals(false))) {parametrofactuprincipalBean.setcon_activar_serie(parametrofactuprincipalLocal.getcon_activar_serie());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_activar_lote()!=null && !parametrofactuprincipalLocal.getcon_activar_lote().equals(false))) {parametrofactuprincipalBean.setcon_activar_lote(parametrofactuprincipalLocal.getcon_activar_lote());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_activar_multi_empresa()!=null && !parametrofactuprincipalLocal.getcon_activar_multi_empresa().equals(false))) {parametrofactuprincipalBean.setcon_activar_multi_empresa(parametrofactuprincipalLocal.getcon_activar_multi_empresa());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_centro_costos()!=null && !parametrofactuprincipalLocal.getcon_centro_costos().equals(false))) {parametrofactuprincipalBean.setcon_centro_costos(parametrofactuprincipalLocal.getcon_centro_costos());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_unidades()!=null && !parametrofactuprincipalLocal.getcon_unidades().equals(false))) {parametrofactuprincipalBean.setcon_unidades(parametrofactuprincipalLocal.getcon_unidades());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_cupo_disponible()!=null && !parametrofactuprincipalLocal.getcon_cupo_disponible().equals(false))) {parametrofactuprincipalBean.setcon_cupo_disponible(parametrofactuprincipalLocal.getcon_cupo_disponible());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_forma_pago()!=null && !parametrofactuprincipalLocal.getcon_forma_pago().equals(false))) {parametrofactuprincipalBean.setcon_forma_pago(parametrofactuprincipalLocal.getcon_forma_pago());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_envio_mail()!=null && !parametrofactuprincipalLocal.getcon_envio_mail().equals(false))) {parametrofactuprincipalBean.setcon_envio_mail(parametrofactuprincipalLocal.getcon_envio_mail());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_autorizar_proforma()!=null && !parametrofactuprincipalLocal.getcon_autorizar_proforma().equals(false))) {parametrofactuprincipalBean.setcon_autorizar_proforma(parametrofactuprincipalLocal.getcon_autorizar_proforma());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_bloqueo_pedido()!=null && !parametrofactuprincipalLocal.getcon_bloqueo_pedido().equals(false))) {parametrofactuprincipalBean.setcon_bloqueo_pedido(parametrofactuprincipalLocal.getcon_bloqueo_pedido());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_control_anticipo()!=null && !parametrofactuprincipalLocal.getcon_control_anticipo().equals(false))) {parametrofactuprincipalBean.setcon_control_anticipo(parametrofactuprincipalLocal.getcon_control_anticipo());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_factura_auto()!=null && !parametrofactuprincipalLocal.getcon_factura_auto().equals(false))) {parametrofactuprincipalBean.setcon_factura_auto(parametrofactuprincipalLocal.getcon_factura_auto());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_grabar_valor_cero()!=null && !parametrofactuprincipalLocal.getcon_grabar_valor_cero().equals(false))) {parametrofactuprincipalBean.setcon_grabar_valor_cero(parametrofactuprincipalLocal.getcon_grabar_valor_cero());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_agregar_item()!=null && !parametrofactuprincipalLocal.getcon_agregar_item().equals(false))) {parametrofactuprincipalBean.setcon_agregar_item(parametrofactuprincipalLocal.getcon_agregar_item());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getnumero_copias()!=null && !parametrofactuprincipalLocal.getnumero_copias().equals(0))) {parametrofactuprincipalBean.setnumero_copias(parametrofactuprincipalLocal.getnumero_copias());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getleyenda()!=null && !parametrofactuprincipalLocal.getleyenda().equals(""))) {parametrofactuprincipalBean.setleyenda(parametrofactuprincipalLocal.getleyenda());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getcon_sin_factura()!=null && !parametrofactuprincipalLocal.getcon_sin_factura().equals(false))) {parametrofactuprincipalBean.setcon_sin_factura(parametrofactuprincipalLocal.getcon_sin_factura());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getid_cuenta_contable_flete_venta()!=null && !parametrofactuprincipalLocal.getid_cuenta_contable_flete_venta().equals(-1L))) {parametrofactuprincipalBean.setid_cuenta_contable_flete_venta(parametrofactuprincipalLocal.getid_cuenta_contable_flete_venta());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getid_cuenta_contable_otro_cargo()!=null && !parametrofactuprincipalLocal.getid_cuenta_contable_otro_cargo().equals(-1L))) {parametrofactuprincipalBean.setid_cuenta_contable_otro_cargo(parametrofactuprincipalLocal.getid_cuenta_contable_otro_cargo());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getid_cuenta_contable_finan()!=null && !parametrofactuprincipalLocal.getid_cuenta_contable_finan().equals(-1L))) {parametrofactuprincipalBean.setid_cuenta_contable_finan(parametrofactuprincipalLocal.getid_cuenta_contable_finan());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getid_cuenta_contable_boni()!=null && !parametrofactuprincipalLocal.getid_cuenta_contable_boni().equals(-1L))) {parametrofactuprincipalBean.setid_cuenta_contable_boni(parametrofactuprincipalLocal.getid_cuenta_contable_boni());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getid_cuenta_contable_boni_devol()!=null && !parametrofactuprincipalLocal.getid_cuenta_contable_boni_devol().equals(-1L))) {parametrofactuprincipalBean.setid_cuenta_contable_boni_devol(parametrofactuprincipalLocal.getid_cuenta_contable_boni_devol());}
			if(conDefault || (!conDefault && parametrofactuprincipalLocal.getid_cuenta_contable_ice()!=null && !parametrofactuprincipalLocal.getid_cuenta_contable_ice().equals(-1L))) {parametrofactuprincipalBean.setid_cuenta_contable_ice(parametrofactuprincipalLocal.getid_cuenta_contable_ice());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxParametroFactuPrincipalGenerico(Long idParametroFactuPrincipalSeleccionado,JComboBox jComboBoxParametroFactuPrincipal,List<ParametroFactuPrincipal> parametrofactuprincipalsLocal)throws Exception {
		try {
			ParametroFactuPrincipal  parametrofactuprincipalTemp=null;

			for(ParametroFactuPrincipal parametrofactuprincipalAux:parametrofactuprincipalsLocal) {
				if(parametrofactuprincipalAux.getId()!=null && parametrofactuprincipalAux.getId().equals(idParametroFactuPrincipalSeleccionado)) {
					parametrofactuprincipalTemp=parametrofactuprincipalAux;
					break;
				}
			}

			jComboBoxParametroFactuPrincipal.setSelectedItem(parametrofactuprincipalTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxParametroFactuPrincipalGenerico(JComboBox jComboBoxParametroFactuPrincipal,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxParametroFactuPrincipal.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxParametroFactuPrincipal.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxParametroFactuPrincipal.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxParametroFactuPrincipal.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxParametroFactuPrincipal.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxParametroFactuPrincipal.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxParametroFactuPrincipal.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxParametroFactuPrincipal.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxParametroFactuPrincipal.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxParametroFactuPrincipal.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrofactuprincipal=(ParametroFactuPrincipal) parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			parametrofactuprincipal =(ParametroFactuPrincipal) parametrofactuprincipals.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!parametrofactuprincipal.getIsNew() && !parametrofactuprincipal.getIsChanged() && !parametrofactuprincipal.getIsDeleted()) {
				sDescripcion=parametrofactuprincipal.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuprincipal.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!parametrofactuprincipal.getIsNew() && !parametrofactuprincipal.getIsChanged() && !parametrofactuprincipal.getIsDeleted()) {
				sDescripcion=parametrofactuprincipal.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuprincipal.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("TipoParamFactuDescuento")) {
			//sDescripcion=this.getActualTipoParamFactuDescuentoForeignKeyDescripcion((Long)value);
			if(!parametrofactuprincipal.getIsNew() && !parametrofactuprincipal.getIsChanged() && !parametrofactuprincipal.getIsDeleted()) {
				sDescripcion=parametrofactuprincipal.gettipoparamfactudescuento_descripcion();
			} else {
				//sDescripcion=this.getActualTipoParamFactuDescuentoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuprincipal.gettipoparamfactudescuento_descripcion();
			}
		}

		if(sTipo.equals("TipoParamFactuListadoCliente")) {
			//sDescripcion=this.getActualTipoParamFactuListadoClienteForeignKeyDescripcion((Long)value);
			if(!parametrofactuprincipal.getIsNew() && !parametrofactuprincipal.getIsChanged() && !parametrofactuprincipal.getIsDeleted()) {
				sDescripcion=parametrofactuprincipal.gettipoparamfactulistadocliente_descripcion();
			} else {
				//sDescripcion=this.getActualTipoParamFactuListadoClienteForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuprincipal.gettipoparamfactulistadocliente_descripcion();
			}
		}

		if(sTipo.equals("TipoParamFactuSecuenciaTrabajo")) {
			//sDescripcion=this.getActualTipoParamFactuSecuenciaTrabajoForeignKeyDescripcion((Long)value);
			if(!parametrofactuprincipal.getIsNew() && !parametrofactuprincipal.getIsChanged() && !parametrofactuprincipal.getIsDeleted()) {
				sDescripcion=parametrofactuprincipal.gettipoparamfactusecuenciatrabajo_descripcion();
			} else {
				//sDescripcion=this.getActualTipoParamFactuSecuenciaTrabajoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuprincipal.gettipoparamfactusecuenciatrabajo_descripcion();
			}
		}

		if(sTipo.equals("TipoDocumentoFactura")) {
			//sDescripcion=this.getActualTipoDocumentoFacturaForeignKeyDescripcion((Long)value);
			if(!parametrofactuprincipal.getIsNew() && !parametrofactuprincipal.getIsChanged() && !parametrofactuprincipal.getIsDeleted()) {
				sDescripcion=parametrofactuprincipal.gettipodocumentofactura_descripcion();
			} else {
				//sDescripcion=this.getActualTipoDocumentoFacturaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuprincipal.gettipodocumentofactura_descripcion();
			}
		}

		if(sTipo.equals("TipoDocumentoNotaCredito")) {
			//sDescripcion=this.getActualTipoDocumentoNotaCreditoForeignKeyDescripcion((Long)value);
			if(!parametrofactuprincipal.getIsNew() && !parametrofactuprincipal.getIsChanged() && !parametrofactuprincipal.getIsDeleted()) {
				sDescripcion=parametrofactuprincipal.gettipodocumentonotacredito_descripcion();
			} else {
				//sDescripcion=this.getActualTipoDocumentoNotaCreditoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuprincipal.gettipodocumentonotacredito_descripcion();
			}
		}

		if(sTipo.equals("TipoDocumentoNotaDebito")) {
			//sDescripcion=this.getActualTipoDocumentoNotaDebitoForeignKeyDescripcion((Long)value);
			if(!parametrofactuprincipal.getIsNew() && !parametrofactuprincipal.getIsChanged() && !parametrofactuprincipal.getIsDeleted()) {
				sDescripcion=parametrofactuprincipal.gettipodocumentonotadebito_descripcion();
			} else {
				//sDescripcion=this.getActualTipoDocumentoNotaDebitoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuprincipal.gettipodocumentonotadebito_descripcion();
			}
		}

		if(sTipo.equals("LibroContable")) {
			//sDescripcion=this.getActualLibroContableForeignKeyDescripcion((Long)value);
			if(!parametrofactuprincipal.getIsNew() && !parametrofactuprincipal.getIsChanged() && !parametrofactuprincipal.getIsDeleted()) {
				sDescripcion=parametrofactuprincipal.getlibrocontable_descripcion();
			} else {
				//sDescripcion=this.getActualLibroContableForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuprincipal.getlibrocontable_descripcion();
			}
		}

		if(sTipo.equals("Moneda")) {
			//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
			if(!parametrofactuprincipal.getIsNew() && !parametrofactuprincipal.getIsChanged() && !parametrofactuprincipal.getIsDeleted()) {
				sDescripcion=parametrofactuprincipal.getmoneda_descripcion();
			} else {
				//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuprincipal.getmoneda_descripcion();
			}
		}

		if(sTipo.equals("Formato")) {
			//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
			if(!parametrofactuprincipal.getIsNew() && !parametrofactuprincipal.getIsChanged() && !parametrofactuprincipal.getIsDeleted()) {
				sDescripcion=parametrofactuprincipal.getformato_descripcion();
			} else {
				//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuprincipal.getformato_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableFleteVenta")) {
			//sDescripcion=this.getActualCuentaContableFleteVentaForeignKeyDescripcion((Long)value);
			if(!parametrofactuprincipal.getIsNew() && !parametrofactuprincipal.getIsChanged() && !parametrofactuprincipal.getIsDeleted()) {
				sDescripcion=parametrofactuprincipal.getcuentacontablefleteventa_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableFleteVentaForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuprincipal.getcuentacontablefleteventa_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableOtroCargo")) {
			//sDescripcion=this.getActualCuentaContableOtroCargoForeignKeyDescripcion((Long)value);
			if(!parametrofactuprincipal.getIsNew() && !parametrofactuprincipal.getIsChanged() && !parametrofactuprincipal.getIsDeleted()) {
				sDescripcion=parametrofactuprincipal.getcuentacontableotrocargo_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableOtroCargoForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuprincipal.getcuentacontableotrocargo_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableFinan")) {
			//sDescripcion=this.getActualCuentaContableFinanForeignKeyDescripcion((Long)value);
			if(!parametrofactuprincipal.getIsNew() && !parametrofactuprincipal.getIsChanged() && !parametrofactuprincipal.getIsDeleted()) {
				sDescripcion=parametrofactuprincipal.getcuentacontablefinan_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableFinanForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuprincipal.getcuentacontablefinan_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableBoni")) {
			//sDescripcion=this.getActualCuentaContableBoniForeignKeyDescripcion((Long)value);
			if(!parametrofactuprincipal.getIsNew() && !parametrofactuprincipal.getIsChanged() && !parametrofactuprincipal.getIsDeleted()) {
				sDescripcion=parametrofactuprincipal.getcuentacontableboni_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableBoniForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuprincipal.getcuentacontableboni_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableBoniDevol")) {
			//sDescripcion=this.getActualCuentaContableBoniDevolForeignKeyDescripcion((Long)value);
			if(!parametrofactuprincipal.getIsNew() && !parametrofactuprincipal.getIsChanged() && !parametrofactuprincipal.getIsDeleted()) {
				sDescripcion=parametrofactuprincipal.getcuentacontablebonidevol_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableBoniDevolForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuprincipal.getcuentacontablebonidevol_descripcion();
			}
		}

		if(sTipo.equals("CuentaContableIce")) {
			//sDescripcion=this.getActualCuentaContableIceForeignKeyDescripcion((Long)value);
			if(!parametrofactuprincipal.getIsNew() && !parametrofactuprincipal.getIsChanged() && !parametrofactuprincipal.getIsDeleted()) {
				sDescripcion=parametrofactuprincipal.getcuentacontableice_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableIceForeignKeyDescripcion((Long)value);
				sDescripcion=parametrofactuprincipal.getcuentacontableice_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		ParametroFactuPrincipal parametrofactuprincipalRow=new ParametroFactuPrincipal();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrofactuprincipalRow=(ParametroFactuPrincipal) parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			parametrofactuprincipalRow=(ParametroFactuPrincipal) parametrofactuprincipals.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualParametroFactuPrincipal(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaNuevoParametroFactuPrincipal && this.isPermisoNuevoParametroFactuPrincipal));			
			this.jButtonDuplicarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaDuplicarParametroFactuPrincipal && this.isPermisoDuplicarParametroFactuPrincipal));			
			this.jButtonCopiarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaCopiarParametroFactuPrincipal && this.isPermisoCopiarParametroFactuPrincipal));
			this.jButtonVerFormParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaVerFormParametroFactuPrincipal && this.isPermisoVerFormParametroFactuPrincipal));
			
			this.jButtonAbrirOrderByParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaOrdenParametroFactuPrincipal && this.isPermisoOrdenParametroFactuPrincipal));			
			
			this.jButtonNuevoRelacionesParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal && this.isPermisoNuevoParametroFactuPrincipal));			
			this.jButtonNuevoGuardarCambiosParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaNuevoParametroFactuPrincipal && this.isPermisoNuevoParametroFactuPrincipal && this.isPermisoGuardarCambiosParametroFactuPrincipal));
			
			if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonModificarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaModificarParametroFactuPrincipal && this.isPermisoActualizarParametroFactuPrincipal));	
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonActualizarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaActualizarParametroFactuPrincipal && this.isPermisoActualizarParametroFactuPrincipal));	
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonEliminarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaEliminarParametroFactuPrincipal && this.isPermisoEliminarParametroFactuPrincipal));
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonCancelarParametroFactuPrincipal.setVisible(this.isVisibilidadCeldaCancelarParametroFactuPrincipal);							
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonGuardarCambiosParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaGuardarParametroFactuPrincipal && this.isPermisoGuardarCambiosParametroFactuPrincipal));			
			
			}
						
			this.jButtonGuardarCambiosTablaParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroFactuPrincipal && this.isPermisoGuardarCambiosParametroFactuPrincipal));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaNuevoParametroFactuPrincipal && this.isPermisoNuevoParametroFactuPrincipal));						
			this.jButtonDuplicarToolBarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaDuplicarParametroFactuPrincipal && this.isPermisoDuplicarParametroFactuPrincipal));						
			this.jButtonCopiarToolBarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaCopiarParametroFactuPrincipal && this.isPermisoCopiarParametroFactuPrincipal));			
			this.jButtonVerFormToolBarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaVerFormParametroFactuPrincipal && this.isPermisoVerFormParametroFactuPrincipal));			
			this.jButtonAbrirOrderByToolBarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaOrdenParametroFactuPrincipal && this.isPermisoOrdenParametroFactuPrincipal));
			this.jButtonNuevoRelacionesToolBarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal && this.isPermisoNuevoParametroFactuPrincipal));			
			this.jButtonNuevoGuardarCambiosToolBarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaNuevoParametroFactuPrincipal && this.isPermisoNuevoParametroFactuPrincipal && this.isPermisoGuardarCambiosParametroFactuPrincipal));			
			
			if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonModificarToolBarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaModificarParametroFactuPrincipal && this.isPermisoActualizarParametroFactuPrincipal));	
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonActualizarToolBarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaActualizarParametroFactuPrincipal  && this.isPermisoActualizarParametroFactuPrincipal));	
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonEliminarToolBarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaEliminarParametroFactuPrincipal && this.isPermisoEliminarParametroFactuPrincipal));
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonCancelarToolBarParametroFactuPrincipal.setVisible(this.isVisibilidadCeldaCancelarParametroFactuPrincipal);				
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonGuardarCambiosToolBarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaGuardarParametroFactuPrincipal && this.isPermisoGuardarCambiosParametroFactuPrincipal));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroFactuPrincipal && this.isPermisoGuardarCambiosParametroFactuPrincipal));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaNuevoParametroFactuPrincipal && this.isPermisoNuevoParametroFactuPrincipal));			
			this.jMenuItemDuplicarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaDuplicarParametroFactuPrincipal && this.isPermisoDuplicarParametroFactuPrincipal));			
			this.jMenuItemCopiarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaCopiarParametroFactuPrincipal && this.isPermisoCopiarParametroFactuPrincipal));			
			this.jMenuItemVerFormParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaVerFormParametroFactuPrincipal && this.isPermisoVerFormParametroFactuPrincipal));			
			this.jMenuItemAbrirOrderByParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaOrdenParametroFactuPrincipal && this.isPermisoOrdenParametroFactuPrincipal));			
			//this.jMenuItemMostrarOcultarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaOrdenParametroFactuPrincipal && this.isPermisoOrdenParametroFactuPrincipal));
			this.jMenuItemDetalleAbrirOrderByParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaOrdenParametroFactuPrincipal && this.isPermisoOrdenParametroFactuPrincipal));			
			//this.jMenuItemDetalleMostrarOcultarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaOrdenParametroFactuPrincipal && this.isPermisoOrdenParametroFactuPrincipal));			
			this.jMenuItemNuevoRelacionesParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal && this.isPermisoNuevoParametroFactuPrincipal));			
			this.jMenuItemNuevoGuardarCambiosParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaNuevoParametroFactuPrincipal && this.isPermisoNuevoParametroFactuPrincipal && this.isPermisoGuardarCambiosParametroFactuPrincipal));									
			
			if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jMenuItemModificarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaModificarParametroFactuPrincipal && this.isPermisoActualizarParametroFactuPrincipal));	
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jMenuItemActualizarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaActualizarParametroFactuPrincipal && this.isPermisoActualizarParametroFactuPrincipal));	
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jMenuItemEliminarParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaEliminarParametroFactuPrincipal && this.isPermisoEliminarParametroFactuPrincipal));
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jMenuItemCancelarParametroFactuPrincipal.setVisible(this.isVisibilidadCeldaCancelarParametroFactuPrincipal);				
			}
			
			this.jMenuItemGuardarCambiosParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaGuardarParametroFactuPrincipal && this.isPermisoGuardarCambiosParametroFactuPrincipal));						
			this.jMenuItemGuardarCambiosTablaParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaGuardarCambiosParametroFactuPrincipal && this.isPermisoGuardarCambiosParametroFactuPrincipal));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoParametroFactuPrincipal=this.jButtonNuevoParametroFactuPrincipal.isVisible();
			this.isVisibilidadCeldaDuplicarParametroFactuPrincipal=this.jButtonDuplicarParametroFactuPrincipal.isVisible();
			this.isVisibilidadCeldaCopiarParametroFactuPrincipal=this.jButtonCopiarParametroFactuPrincipal.isVisible();
			this.isVisibilidadCeldaVerFormParametroFactuPrincipal=this.jButtonVerFormParametroFactuPrincipal.isVisible();
			
			this.isVisibilidadCeldaOrdenParametroFactuPrincipal=this.jButtonAbrirOrderByParametroFactuPrincipal.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal=this.jButtonNuevoRelacionesParametroFactuPrincipal.isVisible();
			this.isVisibilidadCeldaModificarParametroFactuPrincipal=this.jButtonModificarParametroFactuPrincipal.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
			this.isVisibilidadCeldaActualizarParametroFactuPrincipal=this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonActualizarParametroFactuPrincipal.isVisible();
			this.isVisibilidadCeldaEliminarParametroFactuPrincipal=this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonEliminarParametroFactuPrincipal.isVisible();
			this.isVisibilidadCeldaCancelarParametroFactuPrincipal=this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonCancelarParametroFactuPrincipal.isVisible();
			this.isVisibilidadCeldaGuardarParametroFactuPrincipal=this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonGuardarCambiosParametroFactuPrincipal.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosParametroFactuPrincipal=this.jButtonGuardarCambiosTablaParametroFactuPrincipal.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoParametroFactuPrincipal=this.jButtonNuevoToolBarParametroFactuPrincipal.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal=this.jButtonNuevoRelacionesToolBarParametroFactuPrincipal.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
			this.isVisibilidadCeldaModificarParametroFactuPrincipal=this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonModificarToolBarParametroFactuPrincipal.isVisible();
			this.isVisibilidadCeldaActualizarParametroFactuPrincipal=this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonActualizarToolBarParametroFactuPrincipal.isVisible();
			this.isVisibilidadCeldaEliminarParametroFactuPrincipal=this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonEliminarToolBarParametroFactuPrincipal.isVisible();
			this.isVisibilidadCeldaCancelarParametroFactuPrincipal=this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonCancelarToolBarParametroFactuPrincipal.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarParametroFactuPrincipal=this.jButtonGuardarCambiosToolBarParametroFactuPrincipal.isVisible();
			this.isVisibilidadCeldaGuardarCambiosParametroFactuPrincipal=this.jButtonGuardarCambiosTablaToolBarParametroFactuPrincipal.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoParametroFactuPrincipal=this.jMenuItemNuevoParametroFactuPrincipal.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal=this.jMenuItemNuevoRelacionesParametroFactuPrincipal.isVisible();
			
			if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
			this.isVisibilidadCeldaModificarParametroFactuPrincipal=this.jInternalFrameDetalleFormParametroFactuPrincipal.jMenuItemModificarParametroFactuPrincipal.isVisible();
			this.isVisibilidadCeldaActualizarParametroFactuPrincipal=this.jInternalFrameDetalleFormParametroFactuPrincipal.jMenuItemActualizarParametroFactuPrincipal.isVisible();
			this.isVisibilidadCeldaEliminarParametroFactuPrincipal=this.jInternalFrameDetalleFormParametroFactuPrincipal.jMenuItemEliminarParametroFactuPrincipal.isVisible();
			this.isVisibilidadCeldaCancelarParametroFactuPrincipal=this.jInternalFrameDetalleFormParametroFactuPrincipal.jMenuItemCancelarParametroFactuPrincipal.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarParametroFactuPrincipal=this.jMenuItemGuardarCambiosParametroFactuPrincipal.isVisible();
			this.isVisibilidadCeldaGuardarCambiosParametroFactuPrincipal=this.jMenuItemGuardarCambiosTablaParametroFactuPrincipal.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesParametroFactuPrincipal(Boolean esInicializar) {
		if(ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {			
			if(this.parametrofactuprincipalSessionBean.getConGuardarRelaciones()) {
				//if(this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesParametroFactuPrincipal();
			}
			
			this.inicializarActualizarBindingBotonesManualParametroFactuPrincipal(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualParametroFactuPrincipal() {
		this.jButtonNuevoParametroFactuPrincipal.setVisible(this.isPermisoNuevoParametroFactuPrincipal);			
		this.jButtonDuplicarParametroFactuPrincipal.setVisible(this.isPermisoDuplicarParametroFactuPrincipal);			
		this.jButtonCopiarParametroFactuPrincipal.setVisible(this.isPermisoCopiarParametroFactuPrincipal);			
		this.jButtonVerFormParametroFactuPrincipal.setVisible(this.isPermisoVerFormParametroFactuPrincipal);			
		
		this.jButtonAbrirOrderByParametroFactuPrincipal.setVisible(this.isPermisoOrdenParametroFactuPrincipal);					
		
		this.jButtonNuevoRelacionesParametroFactuPrincipal.setVisible(this.isPermisoNuevoParametroFactuPrincipal);			
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonModificarParametroFactuPrincipal.setVisible(this.isPermisoActualizarParametroFactuPrincipal);	
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonActualizarParametroFactuPrincipal.setVisible(this.isPermisoActualizarParametroFactuPrincipal);	
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonEliminarParametroFactuPrincipal.setVisible(this.isPermisoEliminarParametroFactuPrincipal);
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonCancelarParametroFactuPrincipal.setVisible(this.isVisibilidadCeldaCancelarParametroFactuPrincipal);						
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonGuardarCambiosParametroFactuPrincipal.setVisible(this.isPermisoGuardarCambiosParametroFactuPrincipal);							
		}
		
		this.jButtonGuardarCambiosTablaParametroFactuPrincipal.setVisible(this.isPermisoActualizarParametroFactuPrincipal);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleParametroFactuPrincipal() {
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonModificarParametroFactuPrincipal.setVisible(this.isPermisoActualizarParametroFactuPrincipal);	
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonActualizarParametroFactuPrincipal.setVisible(this.isPermisoActualizarParametroFactuPrincipal);	
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonEliminarParametroFactuPrincipal.setVisible(this.isPermisoEliminarParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonCancelarParametroFactuPrincipal.setVisible(this.isVisibilidadCeldaCancelarParametroFactuPrincipal);							
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonGuardarCambiosParametroFactuPrincipal.setVisible((this.isVisibilidadCeldaGuardarParametroFactuPrincipal && this.isPermisoGuardarCambiosParametroFactuPrincipal));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosParametroFactuPrincipal() {
		if(ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualParametroFactuPrincipal();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesParametroFactuPrincipal() {
	}
	
	public void jTableDatosParametroFactuPrincipalListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarParametroFactuPrincipal(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.parametrofactuprincipal.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaParametroFactuPrincipalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebParametroFactuPrincipal(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuPrincipal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.parametrofactuprincipalLogic.getConnexion());

				if(this.parametrofactuprincipal.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.parametrofactuprincipal.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.parametrofactuprincipal.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalParametroFactuPrincipalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebParametroFactuPrincipal(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuPrincipal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.parametrofactuprincipalLogic.getConnexion());

				if(this.parametrofactuprincipal.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.parametrofactuprincipal.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.parametrofactuprincipal.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_param_factu_descuentoParametroFactuPrincipalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoparamfactudescuento=true;

			idTienePermisotipoparamfactudescuento=this.tienePermisosUsuarioEnPaginaWebParametroFactuPrincipal(TipoParamFactuDescuentoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoparamfactudescuento) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuPrincipal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);

				this.tipoparamfactudescuentoBeanSwingJInternalFrame=new TipoParamFactuDescuentoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoparamfactudescuentoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoparamfactudescuentoBeanSwingJInternalFrame.getTipoParamFactuDescuentoLogic().setConnexion(this.parametrofactuprincipalLogic.getConnexion());

				if(this.parametrofactuprincipal.getid_tipo_param_factu_descuento()!=null) {
					this.tipoparamfactudescuentoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoparamfactudescuentoBeanSwingJInternalFrame.setIdActual(this.parametrofactuprincipal.getid_tipo_param_factu_descuento());
					this.tipoparamfactudescuentoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoparamfactudescuentoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoparamfactudescuentoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoParamFactuDescuento();
				}

				JInternalFrameBase jinternalFrame =this.tipoparamfactudescuentoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				TitledBorder titledBordertipoparamfactudescuento=(TitledBorder)this.tipoparamfactudescuentoBeanSwingJInternalFrame.jScrollPanelDatosTipoParamFactuDescuento.getBorder();

				titledBordertipoparamfactudescuento.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Tipo Descuento");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_param_factu_descuentoParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getid_tipo_param_factu_descuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_param_factu_descuento = "+this.parametrofactuprincipal.getid_tipo_param_factu_descuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_param_factu_listado_clienteParametroFactuPrincipalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoparamfactulistadocliente=true;

			idTienePermisotipoparamfactulistadocliente=this.tienePermisosUsuarioEnPaginaWebParametroFactuPrincipal(TipoParamFactuListadoClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoparamfactulistadocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuPrincipal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);

				this.tipoparamfactulistadoclienteBeanSwingJInternalFrame=new TipoParamFactuListadoClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoparamfactulistadoclienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoparamfactulistadoclienteBeanSwingJInternalFrame.getTipoParamFactuListadoClienteLogic().setConnexion(this.parametrofactuprincipalLogic.getConnexion());

				if(this.parametrofactuprincipal.getid_tipo_param_factu_listado_cliente()!=null) {
					this.tipoparamfactulistadoclienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoparamfactulistadoclienteBeanSwingJInternalFrame.setIdActual(this.parametrofactuprincipal.getid_tipo_param_factu_listado_cliente());
					this.tipoparamfactulistadoclienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoparamfactulistadoclienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoparamfactulistadoclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoParamFactuListadoCliente();
				}

				JInternalFrameBase jinternalFrame =this.tipoparamfactulistadoclienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				TitledBorder titledBordertipoparamfactulistadocliente=(TitledBorder)this.tipoparamfactulistadoclienteBeanSwingJInternalFrame.jScrollPanelDatosTipoParamFactuListadoCliente.getBorder();

				titledBordertipoparamfactulistadocliente.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Tipo Listado Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_param_factu_listado_clienteParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getid_tipo_param_factu_listado_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_param_factu_listado_cliente = "+this.parametrofactuprincipal.getid_tipo_param_factu_listado_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoparamfactusecuenciatrabajo=true;

			idTienePermisotipoparamfactusecuenciatrabajo=this.tienePermisosUsuarioEnPaginaWebParametroFactuPrincipal(TipoParamFactuSecuenciaTrabajoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoparamfactusecuenciatrabajo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuPrincipal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);

				this.tipoparamfactusecuenciatrabajoBeanSwingJInternalFrame=new TipoParamFactuSecuenciaTrabajoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoparamfactusecuenciatrabajoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoparamfactusecuenciatrabajoBeanSwingJInternalFrame.getTipoParamFactuSecuenciaTrabajoLogic().setConnexion(this.parametrofactuprincipalLogic.getConnexion());

				if(this.parametrofactuprincipal.getid_tipo_param_factu_secuencia_trabajo()!=null) {
					this.tipoparamfactusecuenciatrabajoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoparamfactusecuenciatrabajoBeanSwingJInternalFrame.setIdActual(this.parametrofactuprincipal.getid_tipo_param_factu_secuencia_trabajo());
					this.tipoparamfactusecuenciatrabajoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoparamfactusecuenciatrabajoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoparamfactusecuenciatrabajoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoParamFactuSecuenciaTrabajo();
				}

				JInternalFrameBase jinternalFrame =this.tipoparamfactusecuenciatrabajoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				TitledBorder titledBordertipoparamfactusecuenciatrabajo=(TitledBorder)this.tipoparamfactusecuenciatrabajoBeanSwingJInternalFrame.jScrollPanelDatosTipoParamFactuSecuenciaTrabajo.getBorder();

				titledBordertipoparamfactusecuenciatrabajo.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Tipo Secuencia Trabajo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getid_tipo_param_factu_secuencia_trabajo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_param_factu_secuencia_trabajo = "+this.parametrofactuprincipal.getid_tipo_param_factu_secuencia_trabajo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_documento_facturaParametroFactuPrincipalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipodocumentofactura=true;

			idTienePermisotipodocumentofactura=this.tienePermisosUsuarioEnPaginaWebParametroFactuPrincipal(TipoDocumentoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipodocumentofactura) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuPrincipal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);

				this.tipodocumentofacturaBeanSwingJInternalFrame=new TipoDocumentoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipodocumentofacturaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipodocumentofacturaBeanSwingJInternalFrame.getTipoDocumentoLogic().setConnexion(this.parametrofactuprincipalLogic.getConnexion());

				if(this.parametrofactuprincipal.getid_tipo_documento_factura()!=null) {
					this.tipodocumentofacturaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipodocumentofacturaBeanSwingJInternalFrame.setIdActual(this.parametrofactuprincipal.getid_tipo_documento_factura());
					this.tipodocumentofacturaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipodocumentofacturaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipodocumentofacturaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoDocumento();
				}

				JInternalFrameBase jinternalFrame =this.tipodocumentofacturaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				TitledBorder titledBordertipodocumentofactura=(TitledBorder)this.tipodocumentofacturaBeanSwingJInternalFrame.jScrollPanelDatosTipoDocumento.getBorder();

				titledBordertipodocumentofactura.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Tipo Documento");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_documento_facturaParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getid_tipo_documento_factura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_documento_factura = "+this.parametrofactuprincipal.getid_tipo_documento_factura().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_documento_nota_creditoParametroFactuPrincipalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipodocumentonotacredito=true;

			idTienePermisotipodocumentonotacredito=this.tienePermisosUsuarioEnPaginaWebParametroFactuPrincipal(TipoDocumentoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipodocumentonotacredito) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuPrincipal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);

				this.tipodocumentonotacreditoBeanSwingJInternalFrame=new TipoDocumentoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipodocumentonotacreditoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipodocumentonotacreditoBeanSwingJInternalFrame.getTipoDocumentoLogic().setConnexion(this.parametrofactuprincipalLogic.getConnexion());

				if(this.parametrofactuprincipal.getid_tipo_documento_nota_credito()!=null) {
					this.tipodocumentonotacreditoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipodocumentonotacreditoBeanSwingJInternalFrame.setIdActual(this.parametrofactuprincipal.getid_tipo_documento_nota_credito());
					this.tipodocumentonotacreditoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipodocumentonotacreditoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipodocumentonotacreditoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoDocumento();
				}

				JInternalFrameBase jinternalFrame =this.tipodocumentonotacreditoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				TitledBorder titledBordertipodocumentonotacredito=(TitledBorder)this.tipodocumentonotacreditoBeanSwingJInternalFrame.jScrollPanelDatosTipoDocumento.getBorder();

				titledBordertipodocumentonotacredito.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Tipo Documento");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_documento_nota_creditoParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getid_tipo_documento_nota_credito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_documento_nota_credito = "+this.parametrofactuprincipal.getid_tipo_documento_nota_credito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_documento_nota_debitoParametroFactuPrincipalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipodocumentonotadebito=true;

			idTienePermisotipodocumentonotadebito=this.tienePermisosUsuarioEnPaginaWebParametroFactuPrincipal(TipoDocumentoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipodocumentonotadebito) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuPrincipal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);

				this.tipodocumentonotadebitoBeanSwingJInternalFrame=new TipoDocumentoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipodocumentonotadebitoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipodocumentonotadebitoBeanSwingJInternalFrame.getTipoDocumentoLogic().setConnexion(this.parametrofactuprincipalLogic.getConnexion());

				if(this.parametrofactuprincipal.getid_tipo_documento_nota_debito()!=null) {
					this.tipodocumentonotadebitoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipodocumentonotadebitoBeanSwingJInternalFrame.setIdActual(this.parametrofactuprincipal.getid_tipo_documento_nota_debito());
					this.tipodocumentonotadebitoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipodocumentonotadebitoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipodocumentonotadebitoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoDocumento();
				}

				JInternalFrameBase jinternalFrame =this.tipodocumentonotadebitoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				TitledBorder titledBordertipodocumentonotadebito=(TitledBorder)this.tipodocumentonotadebitoBeanSwingJInternalFrame.jScrollPanelDatosTipoDocumento.getBorder();

				titledBordertipodocumentonotadebito.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Tipo Documento");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_documento_nota_debitoParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getid_tipo_documento_nota_debito()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_documento_nota_debito = "+this.parametrofactuprincipal.getid_tipo_documento_nota_debito().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonen_lineaParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.geten_linea()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where en_linea = "+this.parametrofactuprincipal.geten_linea().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_cuenta_tipo_clienteParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_cuenta_tipo_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_cuenta_tipo_cliente = "+this.parametrofactuprincipal.getcon_cuenta_tipo_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_cliente_impuestoParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_cliente_impuesto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_cliente_impuesto = "+this.parametrofactuprincipal.getcon_cliente_impuesto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_libro_contableParametroFactuPrincipalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisolibrocontable=true;

			idTienePermisolibrocontable=this.tienePermisosUsuarioEnPaginaWebParametroFactuPrincipal(LibroContableConstantesFunciones.CLASSNAME);

			if(idTienePermisolibrocontable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuPrincipal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);

				this.librocontableBeanSwingJInternalFrame=new LibroContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.librocontableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.librocontableBeanSwingJInternalFrame.getLibroContableLogic().setConnexion(this.parametrofactuprincipalLogic.getConnexion());

				if(this.parametrofactuprincipal.getid_libro_contable()!=null) {
					this.librocontableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.librocontableBeanSwingJInternalFrame.setIdActual(this.parametrofactuprincipal.getid_libro_contable());
					this.librocontableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.librocontableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.librocontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaLibroContable();
				}

				JInternalFrameBase jinternalFrame =this.librocontableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				TitledBorder titledBorderlibrocontable=(TitledBorder)this.librocontableBeanSwingJInternalFrame.jScrollPanelDatosLibroContable.getBorder();

				titledBorderlibrocontable.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Libro Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_libro_contableParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getid_libro_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_libro_contable = "+this.parametrofactuprincipal.getid_libro_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_monedaParametroFactuPrincipalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomoneda=true;

			idTienePermisomoneda=this.tienePermisosUsuarioEnPaginaWebParametroFactuPrincipal(MonedaConstantesFunciones.CLASSNAME);

			if(idTienePermisomoneda) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuPrincipal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);

				this.monedaBeanSwingJInternalFrame=new MonedaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.monedaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.monedaBeanSwingJInternalFrame.getMonedaLogic().setConnexion(this.parametrofactuprincipalLogic.getConnexion());

				if(this.parametrofactuprincipal.getid_moneda()!=null) {
					this.monedaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.monedaBeanSwingJInternalFrame.setIdActual(this.parametrofactuprincipal.getid_moneda());
					this.monedaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.inicializarActualizarBindingTablaMoneda();
				}

				JInternalFrameBase jinternalFrame =this.monedaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				TitledBorder titledBordermoneda=(TitledBorder)this.monedaBeanSwingJInternalFrame.jScrollPanelDatosMoneda.getBorder();

				titledBordermoneda.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Moneda");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_monedaParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getid_moneda()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_moneda = "+this.parametrofactuprincipal.getid_moneda().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_impresionParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_impresion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_impresion = "+this.parametrofactuprincipal.getcon_impresion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_formatoParametroFactuPrincipalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoformato=true;

			idTienePermisoformato=this.tienePermisosUsuarioEnPaginaWebParametroFactuPrincipal(FormatoConstantesFunciones.CLASSNAME);

			if(idTienePermisoformato) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuPrincipal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);

				this.formatoBeanSwingJInternalFrame=new FormatoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.formatoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.formatoBeanSwingJInternalFrame.getFormatoLogic().setConnexion(this.parametrofactuprincipalLogic.getConnexion());

				if(this.parametrofactuprincipal.getid_formato()!=null) {
					this.formatoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.formatoBeanSwingJInternalFrame.setIdActual(this.parametrofactuprincipal.getid_formato());
					this.formatoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormato();
				}

				JInternalFrameBase jinternalFrame =this.formatoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				TitledBorder titledBorderformato=(TitledBorder)this.formatoBeanSwingJInternalFrame.jScrollPanelDatosFormato.getBorder();

				titledBorderformato.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Formato");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_formatoParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getid_formato()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_formato = "+this.parametrofactuprincipal.getid_formato().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_secuencial_usuarioParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_secuencial_usuario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_secuencial_usuario = "+this.parametrofactuprincipal.getcon_secuencial_usuario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_secuencial_editableParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_secuencial_editable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_secuencial_editable = "+this.parametrofactuprincipal.getcon_secuencial_editable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_precio_por_clienteParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_precio_por_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_precio_por_cliente = "+this.parametrofactuprincipal.getcon_precio_por_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_modificar_precioParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_modificar_precio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_modificar_precio = "+this.parametrofactuprincipal.getcon_modificar_precio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_modificar_servicioParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_modificar_servicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_modificar_servicio = "+this.parametrofactuprincipal.getcon_modificar_servicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_cambiar_unidadParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_cambiar_unidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_cambiar_unidad = "+this.parametrofactuprincipal.getcon_cambiar_unidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_decimales_unidadParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getnumero_decimales_unidad()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_decimales_unidad = "+this.parametrofactuprincipal.getnumero_decimales_unidad().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_activar_serieParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_activar_serie()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_activar_serie = "+this.parametrofactuprincipal.getcon_activar_serie().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_activar_loteParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_activar_lote()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_activar_lote = "+this.parametrofactuprincipal.getcon_activar_lote().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_activar_multi_empresaParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_activar_multi_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_activar_multi_empresa = "+this.parametrofactuprincipal.getcon_activar_multi_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_centro_costosParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_centro_costos()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_centro_costos = "+this.parametrofactuprincipal.getcon_centro_costos().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_unidadesParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_unidades()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_unidades = "+this.parametrofactuprincipal.getcon_unidades().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_cupo_disponibleParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_cupo_disponible()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_cupo_disponible = "+this.parametrofactuprincipal.getcon_cupo_disponible().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_forma_pagoParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_forma_pago()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_forma_pago = "+this.parametrofactuprincipal.getcon_forma_pago().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_envio_mailParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_envio_mail()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_envio_mail = "+this.parametrofactuprincipal.getcon_envio_mail().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_autorizar_proformaParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_autorizar_proforma()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_autorizar_proforma = "+this.parametrofactuprincipal.getcon_autorizar_proforma().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_bloqueo_pedidoParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_bloqueo_pedido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_bloqueo_pedido = "+this.parametrofactuprincipal.getcon_bloqueo_pedido().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_control_anticipoParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_control_anticipo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_control_anticipo = "+this.parametrofactuprincipal.getcon_control_anticipo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_factura_autoParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_factura_auto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_factura_auto = "+this.parametrofactuprincipal.getcon_factura_auto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_grabar_valor_ceroParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_grabar_valor_cero()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_grabar_valor_cero = "+this.parametrofactuprincipal.getcon_grabar_valor_cero().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_agregar_itemParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_agregar_item()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_agregar_item = "+this.parametrofactuprincipal.getcon_agregar_item().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_copiasParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getnumero_copias()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_copias = "+this.parametrofactuprincipal.getnumero_copias().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonleyendaParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getleyenda()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where leyenda like '%"+this.parametrofactuprincipal.getleyenda()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncon_sin_facturaParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getcon_sin_factura()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where con_sin_factura = "+this.parametrofactuprincipal.getcon_sin_factura().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontablefleteventaBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontablefleteventaBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontablefleteventaBeanSwingJInternalFrame.sTipoBusqueda="CuentaContableFleteVenta";

			if(!this.sFinalQueryGeneral_cuentacontablefleteventa.equals("")) {
				this.cuentacontablefleteventaBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontablefleteventa);
				this.cuentacontablefleteventaBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontablefleteventaBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontablefleteventaBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontablefleteventaBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableFleteVenta.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontablefleteventaBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroFactuPrincipal=null;
			TitledBorder titledBordercuentacontablefleteventa=null;

			if(!this.jScrollPanelDatosParametroFactuPrincipal.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				titledBordercuentacontablefleteventa=(TitledBorder)this.cuentacontablefleteventaBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablefleteventa.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontablefleteventa=true;

			idTienePermisocuentacontablefleteventa=this.tienePermisosUsuarioEnPaginaWebParametroFactuPrincipal(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontablefleteventa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuPrincipal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);

				this.cuentacontablefleteventaBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontablefleteventaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontablefleteventaBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.parametrofactuprincipalLogic.getConnexion());

				if(this.parametrofactuprincipal.getid_cuenta_contable_flete_venta()!=null) {
					this.cuentacontablefleteventaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontablefleteventaBeanSwingJInternalFrame.setIdActual(this.parametrofactuprincipal.getid_cuenta_contable_flete_venta());
					this.cuentacontablefleteventaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontablefleteventaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontablefleteventaBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontablefleteventaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				TitledBorder titledBordercuentacontablefleteventa=(TitledBorder)this.cuentacontablefleteventaBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablefleteventa.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getid_cuenta_contable_flete_venta()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_flete_venta = "+this.parametrofactuprincipal.getid_cuenta_contable_flete_venta().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableotrocargoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableotrocargoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableotrocargoBeanSwingJInternalFrame.sTipoBusqueda="CuentaContableOtroCargo";

			if(!this.sFinalQueryGeneral_cuentacontableotrocargo.equals("")) {
				this.cuentacontableotrocargoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontableotrocargo);
				this.cuentacontableotrocargoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableotrocargoBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableotrocargoBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableotrocargoBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableOtroCargo.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableotrocargoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroFactuPrincipal=null;
			TitledBorder titledBordercuentacontableotrocargo=null;

			if(!this.jScrollPanelDatosParametroFactuPrincipal.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				titledBordercuentacontableotrocargo=(TitledBorder)this.cuentacontableotrocargoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableotrocargo.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableotrocargo=true;

			idTienePermisocuentacontableotrocargo=this.tienePermisosUsuarioEnPaginaWebParametroFactuPrincipal(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableotrocargo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuPrincipal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);

				this.cuentacontableotrocargoBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableotrocargoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableotrocargoBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.parametrofactuprincipalLogic.getConnexion());

				if(this.parametrofactuprincipal.getid_cuenta_contable_otro_cargo()!=null) {
					this.cuentacontableotrocargoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableotrocargoBeanSwingJInternalFrame.setIdActual(this.parametrofactuprincipal.getid_cuenta_contable_otro_cargo());
					this.cuentacontableotrocargoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableotrocargoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableotrocargoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableotrocargoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				TitledBorder titledBordercuentacontableotrocargo=(TitledBorder)this.cuentacontableotrocargoBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableotrocargo.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getid_cuenta_contable_otro_cargo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_otro_cargo = "+this.parametrofactuprincipal.getid_cuenta_contable_otro_cargo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_finanParametroFactuPrincipalActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontablefinanBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontablefinanBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontablefinanBeanSwingJInternalFrame.sTipoBusqueda="CuentaContableFinan";

			if(!this.sFinalQueryGeneral_cuentacontablefinan.equals("")) {
				this.cuentacontablefinanBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontablefinan);
				this.cuentacontablefinanBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontablefinanBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontablefinanBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontablefinanBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableFinan.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontablefinanBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroFactuPrincipal=null;
			TitledBorder titledBordercuentacontablefinan=null;

			if(!this.jScrollPanelDatosParametroFactuPrincipal.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				titledBordercuentacontablefinan=(TitledBorder)this.cuentacontablefinanBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablefinan.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_finanParametroFactuPrincipalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontablefinan=true;

			idTienePermisocuentacontablefinan=this.tienePermisosUsuarioEnPaginaWebParametroFactuPrincipal(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontablefinan) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuPrincipal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);

				this.cuentacontablefinanBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontablefinanBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontablefinanBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.parametrofactuprincipalLogic.getConnexion());

				if(this.parametrofactuprincipal.getid_cuenta_contable_finan()!=null) {
					this.cuentacontablefinanBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontablefinanBeanSwingJInternalFrame.setIdActual(this.parametrofactuprincipal.getid_cuenta_contable_finan());
					this.cuentacontablefinanBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontablefinanBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontablefinanBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontablefinanBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				TitledBorder titledBordercuentacontablefinan=(TitledBorder)this.cuentacontablefinanBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablefinan.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_finanParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getid_cuenta_contable_finan()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_finan = "+this.parametrofactuprincipal.getid_cuenta_contable_finan().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_boniParametroFactuPrincipalActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableboniBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableboniBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableboniBeanSwingJInternalFrame.sTipoBusqueda="CuentaContableBoni";

			if(!this.sFinalQueryGeneral_cuentacontableboni.equals("")) {
				this.cuentacontableboniBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontableboni);
				this.cuentacontableboniBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableboniBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableboniBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableboniBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableBoni.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableboniBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroFactuPrincipal=null;
			TitledBorder titledBordercuentacontableboni=null;

			if(!this.jScrollPanelDatosParametroFactuPrincipal.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				titledBordercuentacontableboni=(TitledBorder)this.cuentacontableboniBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableboni.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_boniParametroFactuPrincipalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableboni=true;

			idTienePermisocuentacontableboni=this.tienePermisosUsuarioEnPaginaWebParametroFactuPrincipal(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableboni) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuPrincipal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);

				this.cuentacontableboniBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableboniBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableboniBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.parametrofactuprincipalLogic.getConnexion());

				if(this.parametrofactuprincipal.getid_cuenta_contable_boni()!=null) {
					this.cuentacontableboniBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableboniBeanSwingJInternalFrame.setIdActual(this.parametrofactuprincipal.getid_cuenta_contable_boni());
					this.cuentacontableboniBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableboniBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableboniBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableboniBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				TitledBorder titledBordercuentacontableboni=(TitledBorder)this.cuentacontableboniBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableboni.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_boniParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getid_cuenta_contable_boni()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_boni = "+this.parametrofactuprincipal.getid_cuenta_contable_boni().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontablebonidevolBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontablebonidevolBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontablebonidevolBeanSwingJInternalFrame.sTipoBusqueda="CuentaContableBoniDevol";

			if(!this.sFinalQueryGeneral_cuentacontablebonidevol.equals("")) {
				this.cuentacontablebonidevolBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontablebonidevol);
				this.cuentacontablebonidevolBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontablebonidevolBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontablebonidevolBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontablebonidevolBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableBoniDevol.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontablebonidevolBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroFactuPrincipal=null;
			TitledBorder titledBordercuentacontablebonidevol=null;

			if(!this.jScrollPanelDatosParametroFactuPrincipal.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				titledBordercuentacontablebonidevol=(TitledBorder)this.cuentacontablebonidevolBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablebonidevol.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontablebonidevol=true;

			idTienePermisocuentacontablebonidevol=this.tienePermisosUsuarioEnPaginaWebParametroFactuPrincipal(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontablebonidevol) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuPrincipal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);

				this.cuentacontablebonidevolBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontablebonidevolBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontablebonidevolBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.parametrofactuprincipalLogic.getConnexion());

				if(this.parametrofactuprincipal.getid_cuenta_contable_boni_devol()!=null) {
					this.cuentacontablebonidevolBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontablebonidevolBeanSwingJInternalFrame.setIdActual(this.parametrofactuprincipal.getid_cuenta_contable_boni_devol());
					this.cuentacontablebonidevolBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontablebonidevolBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontablebonidevolBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontablebonidevolBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				TitledBorder titledBordercuentacontablebonidevol=(TitledBorder)this.cuentacontablebonidevolBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontablebonidevol.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getid_cuenta_contable_boni_devol()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_boni_devol = "+this.parametrofactuprincipal.getid_cuenta_contable_boni_devol().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contable_iceParametroFactuPrincipalActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableiceBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableiceBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableiceBeanSwingJInternalFrame.sTipoBusqueda="CuentaContableIce";

			if(!this.sFinalQueryGeneral_cuentacontableice.equals("")) {
				this.cuentacontableiceBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontableice);
				this.cuentacontableiceBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableiceBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableiceBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableiceBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContableIce.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableiceBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderParametroFactuPrincipal=null;
			TitledBorder titledBordercuentacontableice=null;

			if(!this.jScrollPanelDatosParametroFactuPrincipal.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				titledBordercuentacontableice=(TitledBorder)this.cuentacontableiceBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableice.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contable_iceParametroFactuPrincipalUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontableice=true;

			idTienePermisocuentacontableice=this.tienePermisosUsuarioEnPaginaWebParametroFactuPrincipal(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontableice) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosParametroFactuPrincipal.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosParametroFactuPrincipal.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);

				this.cuentacontableiceBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableiceBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableiceBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.parametrofactuprincipalLogic.getConnexion());

				if(this.parametrofactuprincipal.getid_cuenta_contable_ice()!=null) {
					this.cuentacontableiceBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableiceBeanSwingJInternalFrame.setIdActual(this.parametrofactuprincipal.getid_cuenta_contable_ice());
					this.cuentacontableiceBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableiceBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableiceBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableiceBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderParametroFactuPrincipal=(TitledBorder)this.jScrollPanelDatosParametroFactuPrincipal.getBorder();
				TitledBorder titledBordercuentacontableice=(TitledBorder)this.cuentacontableiceBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontableice.setTitle(titledBorderParametroFactuPrincipal.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contable_iceParametroFactuPrincipalBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.getparametrofactuprincipal(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.parametrofactuprincipal==null) {
						this.parametrofactuprincipal = new ParametroFactuPrincipal();
					}

					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);
				}

				if(this.parametrofactuprincipal.getid_cuenta_contable_ice()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable_ice = "+this.parametrofactuprincipal.getid_cuenta_contable_ice().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingParametroFactuPrincipal(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdCuentaContableBoniParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);

			this.getParametroFactuPrincipalsFK_IdCuentaContableBoni();

			this.inicializarActualizarBindingParametroFactuPrincipal(false);

			//if(ParametroFactuPrincipalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableBoniDevolParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);

			this.getParametroFactuPrincipalsFK_IdCuentaContableBoniDevol();

			this.inicializarActualizarBindingParametroFactuPrincipal(false);

			//if(ParametroFactuPrincipalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableFinanParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);

			this.getParametroFactuPrincipalsFK_IdCuentaContableFinan();

			this.inicializarActualizarBindingParametroFactuPrincipal(false);

			//if(ParametroFactuPrincipalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableFleteVentaParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);

			this.getParametroFactuPrincipalsFK_IdCuentaContableFleteVenta();

			this.inicializarActualizarBindingParametroFactuPrincipal(false);

			//if(ParametroFactuPrincipalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableIceParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);

			this.getParametroFactuPrincipalsFK_IdCuentaContableIce();

			this.inicializarActualizarBindingParametroFactuPrincipal(false);

			//if(ParametroFactuPrincipalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableOtroCargoParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);

			this.getParametroFactuPrincipalsFK_IdCuentaContableOtroCargo();

			this.inicializarActualizarBindingParametroFactuPrincipal(false);

			//if(ParametroFactuPrincipalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);

			this.getParametroFactuPrincipalsFK_IdEmpresa();

			this.inicializarActualizarBindingParametroFactuPrincipal(false);

			//if(ParametroFactuPrincipalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFormatoParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);

			this.getParametroFactuPrincipalsFK_IdFormato();

			this.inicializarActualizarBindingParametroFactuPrincipal(false);

			//if(ParametroFactuPrincipalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdLibroContableParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);

			this.getParametroFactuPrincipalsFK_IdLibroContable();

			this.inicializarActualizarBindingParametroFactuPrincipal(false);

			//if(ParametroFactuPrincipalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMonedaParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);

			this.getParametroFactuPrincipalsFK_IdMoneda();

			this.inicializarActualizarBindingParametroFactuPrincipal(false);

			//if(ParametroFactuPrincipalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);

			this.getParametroFactuPrincipalsFK_IdSucursal();

			this.inicializarActualizarBindingParametroFactuPrincipal(false);

			//if(ParametroFactuPrincipalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoDocumentoFacturaParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);

			this.getParametroFactuPrincipalsFK_IdTipoDocumentoFactura();

			this.inicializarActualizarBindingParametroFactuPrincipal(false);

			//if(ParametroFactuPrincipalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);

			this.getParametroFactuPrincipalsFK_IdTipoDocumentoNotaCredito();

			this.inicializarActualizarBindingParametroFactuPrincipal(false);

			//if(ParametroFactuPrincipalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);

			this.getParametroFactuPrincipalsFK_IdTipoDocumentoNotaDebito();

			this.inicializarActualizarBindingParametroFactuPrincipal(false);

			//if(ParametroFactuPrincipalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoParamFactuDescuentoParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);

			this.getParametroFactuPrincipalsFK_IdTipoParamFactuDescuento();

			this.inicializarActualizarBindingParametroFactuPrincipal(false);

			//if(ParametroFactuPrincipalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoParamFactuListadoClienteParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);

			this.getParametroFactuPrincipalsFK_IdTipoParamFactuListadoCliente();

			this.inicializarActualizarBindingParametroFactuPrincipal(false);

			//if(ParametroFactuPrincipalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipalActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);

			this.getParametroFactuPrincipalsFK_IdTipoParamFactuSecuenciaTrabajo();

			this.inicializarActualizarBindingParametroFactuPrincipal(false);

			//if(ParametroFactuPrincipalBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.parametrofactuprincipalLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameParametroFactuPrincipal() {
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
			
		
		
		}
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
			this.jInternalFrameDetalleFormParametroFactuPrincipal.setVisible(false);	    			
			this.jInternalFrameDetalleFormParametroFactuPrincipal.dispose();
			this.jInternalFrameDetalleFormParametroFactuPrincipal=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoParametroFactuPrincipal!=null) {
			this.jInternalFrameReporteDinamicoParametroFactuPrincipal.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoParametroFactuPrincipal.dispose();
			this.jInternalFrameReporteDinamicoParametroFactuPrincipal=null;
		}
		
		if(this.jInternalFrameImportacionParametroFactuPrincipal!=null) {
			this.jInternalFrameImportacionParametroFactuPrincipal.setVisible(false);	    			
			this.jInternalFrameImportacionParametroFactuPrincipal.dispose();
			this.jInternalFrameImportacionParametroFactuPrincipal=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessParametroFactuPrincipal();
			
			ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
			
			
			if(sTipo.equals("NuevoParametroFactuPrincipal")) {
				jButtonNuevoParametroFactuPrincipalActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarParametroFactuPrincipal")) {
				jButtonDuplicarParametroFactuPrincipalActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarParametroFactuPrincipal")) {
				jButtonCopiarParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("VerFormParametroFactuPrincipal")) {
				jButtonVerFormParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarParametroFactuPrincipal")) {
				jButtonNuevoParametroFactuPrincipalActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarParametroFactuPrincipal")) {
				jButtonDuplicarParametroFactuPrincipalActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoParametroFactuPrincipal")) {
				jButtonNuevoParametroFactuPrincipalActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarParametroFactuPrincipal")) {
				jButtonDuplicarParametroFactuPrincipalActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesParametroFactuPrincipal")) {
				jButtonNuevoParametroFactuPrincipalActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarParametroFactuPrincipal")) {
				jButtonNuevoParametroFactuPrincipalActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesParametroFactuPrincipal")) {
				jButtonNuevoParametroFactuPrincipalActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarParametroFactuPrincipal")) {
				jButtonModificarParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarParametroFactuPrincipal")) {
				jButtonModificarParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarParametroFactuPrincipal")) {
				jButtonModificarParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("ActualizarParametroFactuPrincipal")) {
				jButtonActualizarParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarParametroFactuPrincipal")) {
				jButtonActualizarParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarParametroFactuPrincipal")) {
				jButtonActualizarParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("EliminarParametroFactuPrincipal")) {
				jButtonEliminarParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarParametroFactuPrincipal")) {
				jButtonEliminarParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarParametroFactuPrincipal")) {
				jButtonEliminarParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("CancelarParametroFactuPrincipal")) {
				jButtonCancelarParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarParametroFactuPrincipal")) {
				jButtonCancelarParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarParametroFactuPrincipal")) {
				jButtonCancelarParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("CerrarParametroFactuPrincipal")) {
				jButtonCerrarParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarParametroFactuPrincipal")) {
				jButtonCerrarParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarParametroFactuPrincipal")) {
				jButtonCerrarParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarParametroFactuPrincipal")) {
				jButtonMostrarOcultarParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarParametroFactuPrincipal")) {
				jButtonCancelarParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosParametroFactuPrincipal")) {
				jButtonGuardarCambiosParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarParametroFactuPrincipal")) {
				jButtonGuardarCambiosParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarParametroFactuPrincipal")) {
				jButtonCopiarParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarParametroFactuPrincipal")) {
				jButtonVerFormParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosParametroFactuPrincipal")) {
				jButtonGuardarCambiosParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarParametroFactuPrincipal")) {
				jButtonCopiarParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormParametroFactuPrincipal")) {
				jButtonVerFormParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaParametroFactuPrincipal")) {
				jButtonGuardarCambiosParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarParametroFactuPrincipal")) {
				jButtonGuardarCambiosParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaParametroFactuPrincipal")) {
				jButtonGuardarCambiosParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionParametroFactuPrincipal")) {
				jButtonRecargarInformacionParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarParametroFactuPrincipal")) {
				jButtonRecargarInformacionParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionParametroFactuPrincipal")) {
				jButtonRecargarInformacionParametroFactuPrincipalActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresParametroFactuPrincipal")) {
				jButtonAnterioresParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarParametroFactuPrincipal")) {
				jButtonAnterioresParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreParametroFactuPrincipal")) {
				jButtonAnterioresParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("SiguientesParametroFactuPrincipal")) {
				jButtonSiguientesParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarParametroFactuPrincipal")) {
				jButtonSiguientesParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesParametroFactuPrincipal")) {
				jButtonSiguientesParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByParametroFactuPrincipal") || sTipo.equals("MenuItemDetalleAbrirOrderByParametroFactuPrincipal")) {
				jButtonAbrirOrderByParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarParametroFactuPrincipal") || sTipo.equals("MenuItemDetalleMostrarOcultarParametroFactuPrincipal")) {
				jButtonMostrarOcultarParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosParametroFactuPrincipal")) {
				jButtonNuevoGuardarCambiosParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarParametroFactuPrincipal")) {
				jButtonNuevoGuardarCambiosParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosParametroFactuPrincipal")) {
				jButtonNuevoGuardarCambiosParametroFactuPrincipalActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoParametroFactuPrincipal")) {
				jButtonCerrarReporteDinamicoParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoParametroFactuPrincipal")) {
				jButtonGenerarReporteDinamicoParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoParametroFactuPrincipal")) {
				
				jButtonGenerarExcelReporteDinamicoParametroFactuPrincipalActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionParametroFactuPrincipal")) {
				jButtonCerrarImportacionParametroFactuPrincipalActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionParametroFactuPrincipal")) {
				
				jButtonGenerarImportacionParametroFactuPrincipalActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionParametroFactuPrincipal")) {
				
				jButtonAbrirImportacionParametroFactuPrincipalActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesParametroFactuPrincipal")) {
				jComboBoxTiposAccionesParametroFactuPrincipalActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesParametroFactuPrincipal")) {
				jComboBoxTiposRelacionesParametroFactuPrincipalActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioParametroFactuPrincipal")) {
				jComboBoxTiposAccionesParametroFactuPrincipalActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarParametroFactuPrincipal")) {
				
				jComboBoxTiposSeleccionarParametroFactuPrincipalActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralParametroFactuPrincipal")) {
				jTextFieldValorCampoGeneralParametroFactuPrincipalActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByParametroFactuPrincipal")) {
				jButtonAbrirOrderByParametroFactuPrincipalActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarParametroFactuPrincipal")) {
				jButtonAbrirOrderByParametroFactuPrincipalActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByParametroFactuPrincipal")) {
				jButtonCerrarOrderByParametroFactuPrincipalActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idParametroFactuPrincipalBusqueda")) {
				this.jButtonidParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaParametroFactuPrincipalUpdate")) {
				this.jButtonid_empresaParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaParametroFactuPrincipalBusqueda")) {
				this.jButtonid_empresaParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalParametroFactuPrincipalUpdate")) {
				this.jButtonid_sucursalParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalParametroFactuPrincipalBusqueda")) {
				this.jButtonid_sucursalParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_param_factu_descuentoParametroFactuPrincipalUpdate")) {
				this.jButtonid_tipo_param_factu_descuentoParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_param_factu_descuentoParametroFactuPrincipalBusqueda")) {
				this.jButtonid_tipo_param_factu_descuentoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_param_factu_listado_clienteParametroFactuPrincipalUpdate")) {
				this.jButtonid_tipo_param_factu_listado_clienteParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_param_factu_listado_clienteParametroFactuPrincipalBusqueda")) {
				this.jButtonid_tipo_param_factu_listado_clienteParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalUpdate")) {
				this.jButtonid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalBusqueda")) {
				this.jButtonid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_documento_facturaParametroFactuPrincipalUpdate")) {
				this.jButtonid_tipo_documento_facturaParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_documento_facturaParametroFactuPrincipalBusqueda")) {
				this.jButtonid_tipo_documento_facturaParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_documento_nota_creditoParametroFactuPrincipalUpdate")) {
				this.jButtonid_tipo_documento_nota_creditoParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_documento_nota_creditoParametroFactuPrincipalBusqueda")) {
				this.jButtonid_tipo_documento_nota_creditoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_documento_nota_debitoParametroFactuPrincipalUpdate")) {
				this.jButtonid_tipo_documento_nota_debitoParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_documento_nota_debitoParametroFactuPrincipalBusqueda")) {
				this.jButtonid_tipo_documento_nota_debitoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("en_lineaParametroFactuPrincipalBusqueda")) {
				this.jButtonen_lineaParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_cuenta_tipo_clienteParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_cuenta_tipo_clienteParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_cliente_impuestoParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_cliente_impuestoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_libro_contableParametroFactuPrincipalUpdate")) {
				this.jButtonid_libro_contableParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_libro_contableParametroFactuPrincipalBusqueda")) {
				this.jButtonid_libro_contableParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaParametroFactuPrincipalUpdate")) {
				this.jButtonid_monedaParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaParametroFactuPrincipalBusqueda")) {
				this.jButtonid_monedaParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_impresionParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_impresionParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoParametroFactuPrincipalUpdate")) {
				this.jButtonid_formatoParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoParametroFactuPrincipalBusqueda")) {
				this.jButtonid_formatoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_secuencial_usuarioParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_secuencial_usuarioParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_secuencial_editableParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_secuencial_editableParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_precio_por_clienteParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_precio_por_clienteParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_modificar_precioParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_modificar_precioParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_modificar_servicioParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_modificar_servicioParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_cambiar_unidadParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_cambiar_unidadParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_decimales_unidadParametroFactuPrincipalBusqueda")) {
				this.jButtonnumero_decimales_unidadParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_activar_serieParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_activar_serieParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_activar_loteParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_activar_loteParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_activar_multi_empresaParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_activar_multi_empresaParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_centro_costosParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_centro_costosParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_unidadesParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_unidadesParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_cupo_disponibleParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_cupo_disponibleParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_forma_pagoParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_forma_pagoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_envio_mailParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_envio_mailParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_autorizar_proformaParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_autorizar_proformaParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_bloqueo_pedidoParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_bloqueo_pedidoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_control_anticipoParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_control_anticipoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_factura_autoParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_factura_autoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_grabar_valor_ceroParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_grabar_valor_ceroParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_agregar_itemParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_agregar_itemParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_copiasParametroFactuPrincipalBusqueda")) {
				this.jButtonnumero_copiasParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("leyendaParametroFactuPrincipalBusqueda")) {
				this.jButtonleyendaParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_sin_facturaParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_sin_facturaParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_flete_ventaParametroFactuPrincipal")) {
				this.jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_flete_ventaParametroFactuPrincipalArbol")) {
				this.abrirFrameTreeCuentaContableFleteVenta("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_flete_ventaParametroFactuPrincipalUpdate")) {
				this.jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_flete_ventaParametroFactuPrincipalBusqueda")) {
				this.jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_otro_cargoParametroFactuPrincipal")) {
				this.jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_otro_cargoParametroFactuPrincipalArbol")) {
				this.abrirFrameTreeCuentaContableOtroCargo("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_otro_cargoParametroFactuPrincipalUpdate")) {
				this.jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_otro_cargoParametroFactuPrincipalBusqueda")) {
				this.jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_finanParametroFactuPrincipal")) {
				this.jButtonid_cuenta_contable_finanParametroFactuPrincipalActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_finanParametroFactuPrincipalArbol")) {
				this.abrirFrameTreeCuentaContableFinan("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_finanParametroFactuPrincipalUpdate")) {
				this.jButtonid_cuenta_contable_finanParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_finanParametroFactuPrincipalBusqueda")) {
				this.jButtonid_cuenta_contable_finanParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_boniParametroFactuPrincipal")) {
				this.jButtonid_cuenta_contable_boniParametroFactuPrincipalActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_boniParametroFactuPrincipalArbol")) {
				this.abrirFrameTreeCuentaContableBoni("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_boniParametroFactuPrincipalUpdate")) {
				this.jButtonid_cuenta_contable_boniParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_boniParametroFactuPrincipalBusqueda")) {
				this.jButtonid_cuenta_contable_boniParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_boni_devolParametroFactuPrincipal")) {
				this.jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_boni_devolParametroFactuPrincipalArbol")) {
				this.abrirFrameTreeCuentaContableBoniDevol("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_boni_devolParametroFactuPrincipalUpdate")) {
				this.jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_boni_devolParametroFactuPrincipalBusqueda")) {
				this.jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_iceParametroFactuPrincipal")) {
				this.jButtonid_cuenta_contable_iceParametroFactuPrincipalActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_iceParametroFactuPrincipalArbol")) {
				this.abrirFrameTreeCuentaContableIce("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_iceParametroFactuPrincipalUpdate")) {
				this.jButtonid_cuenta_contable_iceParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_iceParametroFactuPrincipalBusqueda")) {
				this.jButtonid_cuenta_contable_iceParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_cuenta_contable_boniParametroFactuPrincipal")) {
				this.jButtonid_cuenta_contable_boniParametroFactuPrincipalActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contable_boni_devolParametroFactuPrincipal")) {
				this.jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contable_finanParametroFactuPrincipal")) {
				this.jButtonid_cuenta_contable_finanParametroFactuPrincipalActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contable_flete_ventaParametroFactuPrincipal")) {
				this.jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contable_iceParametroFactuPrincipal")) {
				this.jButtonid_cuenta_contable_iceParametroFactuPrincipalActionPerformed(evt);
			}
			else if(sTipo.equals("id_cuenta_contable_otro_cargoParametroFactuPrincipal")) {
				this.jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdCuentaContableBoniParametroFactuPrincipal")) {
				this.jButtonFK_IdCuentaContableBoniParametroFactuPrincipalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableBoniDevolParametroFactuPrincipal")) {
				this.jButtonFK_IdCuentaContableBoniDevolParametroFactuPrincipalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableFinanParametroFactuPrincipal")) {
				this.jButtonFK_IdCuentaContableFinanParametroFactuPrincipalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableFleteVentaParametroFactuPrincipal")) {
				this.jButtonFK_IdCuentaContableFleteVentaParametroFactuPrincipalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableIceParametroFactuPrincipal")) {
				this.jButtonFK_IdCuentaContableIceParametroFactuPrincipalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdCuentaContableOtroCargoParametroFactuPrincipal")) {
				this.jButtonFK_IdCuentaContableOtroCargoParametroFactuPrincipalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdFormatoParametroFactuPrincipal")) {
				this.jButtonFK_IdFormatoParametroFactuPrincipalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdLibroContableParametroFactuPrincipal")) {
				this.jButtonFK_IdLibroContableParametroFactuPrincipalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoDocumentoFacturaParametroFactuPrincipal")) {
				this.jButtonFK_IdTipoDocumentoFacturaParametroFactuPrincipalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal")) {
				this.jButtonFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal")) {
				this.jButtonFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoParamFactuDescuentoParametroFactuPrincipal")) {
				this.jButtonFK_IdTipoParamFactuDescuentoParametroFactuPrincipalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoParamFactuListadoClienteParametroFactuPrincipal")) {
				this.jButtonFK_IdTipoParamFactuListadoClienteParametroFactuPrincipalActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal")) {
				this.jButtonFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipalActionPerformed(evt);
			}
			
			;
			
			
			ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessParametroFactuPrincipal();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuPrincipalActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuprincipal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuprincipal);
				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
				
				


				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuPrincipal.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuPrincipal.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			ParametroFactuPrincipal parametrofactuprincipalLocal=null;
			
			if(!this.getEsControlTabla()) {
				parametrofactuprincipalLocal=this.parametrofactuprincipal;
			} else {
				parametrofactuprincipalLocal=this.parametrofactuprincipalAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuprincipal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuprincipal);
				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
							
				
				


				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuPrincipal.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuPrincipal.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuPrincipalActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalAnterior =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactuprincipalAnterior =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuPrincipalActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuprincipal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuprincipal);
				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
								
						
				


				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuPrincipal.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuPrincipal.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuprincipal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuprincipal);
				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
								
				
				


				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuPrincipal.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuPrincipal.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuPrincipalActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalAnterior =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactuprincipalAnterior =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuprincipal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuprincipal);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuPrincipalActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalAnterior =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactuprincipalAnterior =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuPrincipalActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuprincipal);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuprincipal);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuprincipal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuprincipal);
				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
							
				
				


				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuPrincipal.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuPrincipal.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuPrincipalActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipalAnterior =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.parametrofactuprincipalAnterior =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuPrincipalActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuprincipal);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuprincipal);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuprincipal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuprincipal);
				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
								
				
				


				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuPrincipal.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuPrincipal.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuPrincipalActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalAnterior =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactuprincipalAnterior =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuPrincipalActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuprincipal);
			
			this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuprincipal);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuPrincipalActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuprincipal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuprincipal);
				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosParametroFactuPrincipal")) {
					jCheckBoxSeleccionarTodosParametroFactuPrincipalItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosParametroFactuPrincipal")) {
					jCheckBoxSeleccionadosParametroFactuPrincipalItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarParametroFactuPrincipal")) {
					
				}
				
				


				
				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuPrincipal.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuPrincipal.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuprincipal);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuprincipal);
				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
												
				
				


				
				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuPrincipal.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuPrincipal.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuPrincipalActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.parametrofactuprincipalAnterior =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.parametrofactuprincipalAnterior =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuPrincipalActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuprincipal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuprincipal);
				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
				
				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaParametroFactuPrincipalActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuprincipal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuprincipal);
				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuPrincipal.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuPrincipal.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.parametrofactuprincipal);
				
				this.actualizarInformacion("INFO_PADRE",false,this.parametrofactuprincipal);
				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(ParametroFactuPrincipal.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",ParametroFactuPrincipal.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaParametroFactuPrincipalActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.parametrofactuprincipalAnterior =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.parametrofactuprincipalAnterior =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarParametroFactuPrincipal")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosParametroFactuPrincipalListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosParametroFactuPrincipal.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.parametrofactuprincipal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.parametrofactuprincipal);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarParametroFactuPrincipal")) {
				
				}
				
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarParametroFactuPrincipal")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosParametroFactuPrincipal.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarParametroFactuPrincipal")) {
			
			}
			
			ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessParametroFactuPrincipal();
			
			ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
			
			if(sTipo.equals("NuevoParametroFactuPrincipal")) {
				jButtonNuevoParametroFactuPrincipalActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarParametroFactuPrincipal")) {
				jButtonDuplicarParametroFactuPrincipalActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarParametroFactuPrincipal")) {
				jButtonCopiarParametroFactuPrincipalActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormParametroFactuPrincipal")) {
				jButtonVerFormParametroFactuPrincipalActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesParametroFactuPrincipal")) {
				jButtonNuevoParametroFactuPrincipalActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarParametroFactuPrincipal")) {
				jButtonModificarParametroFactuPrincipalActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarParametroFactuPrincipal")) {
				jButtonActualizarParametroFactuPrincipalActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarParametroFactuPrincipal")) {
				jButtonEliminarParametroFactuPrincipalActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaParametroFactuPrincipal")) {
				jButtonGuardarCambiosParametroFactuPrincipalActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarParametroFactuPrincipal")) {
				jButtonCancelarParametroFactuPrincipalActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarParametroFactuPrincipal")) {
				jButtonCerrarParametroFactuPrincipalActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosParametroFactuPrincipal")) {
				jButtonGuardarCambiosParametroFactuPrincipalActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosParametroFactuPrincipal")) {
				jButtonNuevoGuardarCambiosParametroFactuPrincipalActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByParametroFactuPrincipal")) {
				jButtonAbrirOrderByParametroFactuPrincipalActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionParametroFactuPrincipal")) {
				jButtonRecargarInformacionParametroFactuPrincipalActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresParametroFactuPrincipal")) {
				jButtonAnterioresParametroFactuPrincipalActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesParametroFactuPrincipal")) {
				jButtonSiguientesParametroFactuPrincipalActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idParametroFactuPrincipalBusqueda")) {
				this.jButtonidParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaParametroFactuPrincipalUpdate")) {
				this.jButtonid_empresaParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaParametroFactuPrincipalBusqueda")) {
				this.jButtonid_empresaParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalParametroFactuPrincipalUpdate")) {
				this.jButtonid_sucursalParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalParametroFactuPrincipalBusqueda")) {
				this.jButtonid_sucursalParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_param_factu_descuentoParametroFactuPrincipalUpdate")) {
				this.jButtonid_tipo_param_factu_descuentoParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_param_factu_descuentoParametroFactuPrincipalBusqueda")) {
				this.jButtonid_tipo_param_factu_descuentoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_param_factu_listado_clienteParametroFactuPrincipalUpdate")) {
				this.jButtonid_tipo_param_factu_listado_clienteParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_param_factu_listado_clienteParametroFactuPrincipalBusqueda")) {
				this.jButtonid_tipo_param_factu_listado_clienteParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalUpdate")) {
				this.jButtonid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalBusqueda")) {
				this.jButtonid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_documento_facturaParametroFactuPrincipalUpdate")) {
				this.jButtonid_tipo_documento_facturaParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_documento_facturaParametroFactuPrincipalBusqueda")) {
				this.jButtonid_tipo_documento_facturaParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_documento_nota_creditoParametroFactuPrincipalUpdate")) {
				this.jButtonid_tipo_documento_nota_creditoParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_documento_nota_creditoParametroFactuPrincipalBusqueda")) {
				this.jButtonid_tipo_documento_nota_creditoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_documento_nota_debitoParametroFactuPrincipalUpdate")) {
				this.jButtonid_tipo_documento_nota_debitoParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_documento_nota_debitoParametroFactuPrincipalBusqueda")) {
				this.jButtonid_tipo_documento_nota_debitoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("en_lineaParametroFactuPrincipalBusqueda")) {
				this.jButtonen_lineaParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_cuenta_tipo_clienteParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_cuenta_tipo_clienteParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_cliente_impuestoParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_cliente_impuestoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_libro_contableParametroFactuPrincipalUpdate")) {
				this.jButtonid_libro_contableParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_libro_contableParametroFactuPrincipalBusqueda")) {
				this.jButtonid_libro_contableParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaParametroFactuPrincipalUpdate")) {
				this.jButtonid_monedaParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaParametroFactuPrincipalBusqueda")) {
				this.jButtonid_monedaParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_impresionParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_impresionParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoParametroFactuPrincipalUpdate")) {
				this.jButtonid_formatoParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoParametroFactuPrincipalBusqueda")) {
				this.jButtonid_formatoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_secuencial_usuarioParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_secuencial_usuarioParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_secuencial_editableParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_secuencial_editableParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_precio_por_clienteParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_precio_por_clienteParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_modificar_precioParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_modificar_precioParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_modificar_servicioParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_modificar_servicioParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_cambiar_unidadParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_cambiar_unidadParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_decimales_unidadParametroFactuPrincipalBusqueda")) {
				this.jButtonnumero_decimales_unidadParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_activar_serieParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_activar_serieParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_activar_loteParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_activar_loteParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_activar_multi_empresaParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_activar_multi_empresaParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_centro_costosParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_centro_costosParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_unidadesParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_unidadesParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_cupo_disponibleParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_cupo_disponibleParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_forma_pagoParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_forma_pagoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_envio_mailParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_envio_mailParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_autorizar_proformaParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_autorizar_proformaParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_bloqueo_pedidoParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_bloqueo_pedidoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_control_anticipoParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_control_anticipoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_factura_autoParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_factura_autoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_grabar_valor_ceroParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_grabar_valor_ceroParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_agregar_itemParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_agregar_itemParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_copiasParametroFactuPrincipalBusqueda")) {
				this.jButtonnumero_copiasParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("leyendaParametroFactuPrincipalBusqueda")) {
				this.jButtonleyendaParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("con_sin_facturaParametroFactuPrincipalBusqueda")) {
				this.jButtoncon_sin_facturaParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_flete_ventaParametroFactuPrincipal")) {
				this.jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_flete_ventaParametroFactuPrincipalArbol")) {
				this.abrirFrameTreeCuentaContableFleteVenta("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_flete_ventaParametroFactuPrincipalUpdate")) {
				this.jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_flete_ventaParametroFactuPrincipalBusqueda")) {
				this.jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_otro_cargoParametroFactuPrincipal")) {
				this.jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_otro_cargoParametroFactuPrincipalArbol")) {
				this.abrirFrameTreeCuentaContableOtroCargo("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_otro_cargoParametroFactuPrincipalUpdate")) {
				this.jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_otro_cargoParametroFactuPrincipalBusqueda")) {
				this.jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_finanParametroFactuPrincipal")) {
				this.jButtonid_cuenta_contable_finanParametroFactuPrincipalActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_finanParametroFactuPrincipalArbol")) {
				this.abrirFrameTreeCuentaContableFinan("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_finanParametroFactuPrincipalUpdate")) {
				this.jButtonid_cuenta_contable_finanParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_finanParametroFactuPrincipalBusqueda")) {
				this.jButtonid_cuenta_contable_finanParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_boniParametroFactuPrincipal")) {
				this.jButtonid_cuenta_contable_boniParametroFactuPrincipalActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_boniParametroFactuPrincipalArbol")) {
				this.abrirFrameTreeCuentaContableBoni("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_boniParametroFactuPrincipalUpdate")) {
				this.jButtonid_cuenta_contable_boniParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_boniParametroFactuPrincipalBusqueda")) {
				this.jButtonid_cuenta_contable_boniParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_boni_devolParametroFactuPrincipal")) {
				this.jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_boni_devolParametroFactuPrincipalArbol")) {
				this.abrirFrameTreeCuentaContableBoniDevol("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_boni_devolParametroFactuPrincipalUpdate")) {
				this.jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_boni_devolParametroFactuPrincipalBusqueda")) {
				this.jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contable_iceParametroFactuPrincipal")) {
				this.jButtonid_cuenta_contable_iceParametroFactuPrincipalActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contable_iceParametroFactuPrincipalArbol")) {
				this.abrirFrameTreeCuentaContableIce("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contable_iceParametroFactuPrincipalUpdate")) {
				this.jButtonid_cuenta_contable_iceParametroFactuPrincipalUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contable_iceParametroFactuPrincipalBusqueda")) {
				this.jButtonid_cuenta_contable_iceParametroFactuPrincipalBusquedaActionPerformed(evt);
			}
			
			ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessParametroFactuPrincipal();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameParametroFactuPrincipal")) {
				closingInternalFrameParametroFactuPrincipal();
				
			} else if(sTipo.equals("jButtonCancelarParametroFactuPrincipal")) {
				JInternalFrameBase jInternalFrameDetalleFormParametroFactuPrincipal = (JInternalFrameBase)evt.getSource();
	            	
	            ParametroFactuPrincipalBeanSwingJInternalFrame jInternalFrameParent=(ParametroFactuPrincipalBeanSwingJInternalFrame)jInternalFrameDetalleFormParametroFactuPrincipal.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarParametroFactuPrincipalActionPerformed(null);
			}
			
			ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.parametrofactuprincipal,new Object(),this.parametrofactuprincipalParameterGeneral,this.parametrofactuprincipalReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormParametroFactuPrincipal(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormParametroFactuPrincipal(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormParametroFactuPrincipal(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.parametrofactuprincipal)) {
			if(!esControlTabla) {
				if(ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);			
				}
				
				if(this.parametrofactuprincipalSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.parametrofactuprincipalReturnGeneral=parametrofactuprincipalLogic.procesarEventosParametroFactuPrincipalsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrofactuprincipalLogic.getParametroFactuPrincipals(),this.parametrofactuprincipal,this.parametrofactuprincipalParameterGeneral,this.isEsNuevoParametroFactuPrincipal,classes);//this.parametrofactuprincipalLogic.getParametroFactuPrincipal()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanParametroFactuPrincipal(this.parametrofactuprincipalReturnGeneral,this.parametrofactuprincipalBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.parametrofactuprincipalSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanParametroFactuPrincipal(classes,this.parametrofactuprincipalReturnGeneral,this.parametrofactuprincipalBean,false);
					}
						
					if(this.parametrofactuprincipalReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyParametroFactuPrincipal(this.parametrofactuprincipalReturnGeneral.getParametroFactuPrincipal());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioParametroFactuPrincipal(this.parametrofactuprincipalReturnGeneral.getParametroFactuPrincipal());	
					}
						
					if(this.parametrofactuprincipalReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioParametroFactuPrincipal(this.parametrofactuprincipalReturnGeneral.getParametroFactuPrincipal(),classes);//this.parametrofactuprincipalBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioParametroFactuPrincipal(this.parametrofactuprincipal,classes);//this.parametrofactuprincipalBean);									
				}
			
				if(ParametroFactuPrincipalJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualParametroFactuPrincipal(this.parametrofactuprincipal,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysParametroFactuPrincipal(this.parametrofactuprincipal);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.parametrofactuprincipalAnterior!=null) {
						this.parametrofactuprincipal=this.parametrofactuprincipalAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.parametrofactuprincipalReturnGeneral=parametrofactuprincipalLogic.procesarEventosParametroFactuPrincipalsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrofactuprincipalLogic.getParametroFactuPrincipals(),this.parametrofactuprincipal,this.parametrofactuprincipalParameterGeneral,this.isEsNuevoParametroFactuPrincipal,classes);//this.parametrofactuprincipalLogic.getParametroFactuPrincipal()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.parametrofactuprincipalSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.parametrofactuprincipalReturnGeneral.getParametroFactuPrincipal(),parametrofactuprincipalLogic.getParametroFactuPrincipals());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.parametrofactuprincipalReturnGeneral.getParametroFactuPrincipal(),this.parametrofactuprincipals);
				}
				//ARCHITECTURE
				
				//this.jTableDatosParametroFactuPrincipal.repaint();
				
				//((AbstractTableModel) this.jTableDatosParametroFactuPrincipal.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosParametroFactuPrincipal();
			}
		}
	}
	
	public void actualizarVisualTableDatosParametroFactuPrincipal() throws Exception {
		
		ParametroFactuPrincipalModel parametrofactuprincipalModel=(ParametroFactuPrincipalModel)this.jTableDatosParametroFactuPrincipal.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			parametrofactuprincipalModel.parametrofactuprincipals=this.parametrofactuprincipalLogic.getParametroFactuPrincipals();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			parametrofactuprincipalModel.parametrofactuprincipals=this.parametrofactuprincipals;
		}
		
		
		((ParametroFactuPrincipalModel) this.jTableDatosParametroFactuPrincipal.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaParametroFactuPrincipal() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getparametrofactuprincipalAnterior(),this.parametrofactuprincipalLogic.getParametroFactuPrincipals());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getparametrofactuprincipalAnterior(),this.parametrofactuprincipals);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosParametroFactuPrincipal();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioParametroFactuPrincipal(ParametroFactuPrincipal parametrofactuprincipal,ArrayList<Classe> classes) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrofactuprincipal,new Object(),generalEntityParameterGeneral,this.parametrofactuprincipalReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.parametrofactuprincipalSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=ParametroFactuPrincipalConstantesFunciones.getClassesRelationshipsOfParametroFactuPrincipal(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=ParametroFactuPrincipalConstantesFunciones.getClassesRelationshipsFromStringsOfParametroFactuPrincipal(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormParametroFactuPrincipal(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.parametrofactuprincipal,new Object(),generalEntityParameterGeneral,this.parametrofactuprincipalReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioParametroFactuPrincipal(ParametroFactuPrincipalBean parametrofactuprincipalBean) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanParametroFactuPrincipal(ArrayList<Classe> classes,ParametroFactuPrincipalReturnGeneral parametrofactuprincipalReturnGeneral,ParametroFactuPrincipalBean parametrofactuprincipalBean,Boolean conDefault) throws Exception {
		
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualParametroFactuPrincipal(ParametroFactuPrincipal parametrofactuprincipal,ArrayList<Classe> classes) throws Exception {
		
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.parametrofactuprincipal)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormParametroFactuPrincipal = new ParametroFactuPrincipalDetalleFormJInternalFrame(jDesktopPane,this.parametrofactuprincipalSessionBean.getConGuardarRelaciones(),this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.setVisible(false);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.setSelected(false);						
		
		this.jInternalFrameDetalleFormParametroFactuPrincipal.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormParametroFactuPrincipal.parametrofactuprincipalLogic=this.parametrofactuprincipalLogic;
		
		this.cargarCombosFrameForeignKeyParametroFactuPrincipal("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleParametroFactuPrincipal();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleParametroFactuPrincipal();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyParametroFactuPrincipal("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyParametroFactuPrincipal();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormParametroFactuPrincipal.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarParametroFactuPrincipal"));
		
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonModificarParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"ModificarParametroFactuPrincipal"));

		
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonModificarToolBarParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"ModificarToolBarParametroFactuPrincipal"));
					
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jMenuItemModificarParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"MenuItemModificarParametroFactuPrincipal"));		
		
		
		
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonActualizarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"ActualizarParametroFactuPrincipal"));
		
		
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonActualizarToolBarParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"ActualizarToolBarParametroFactuPrincipal"));
						
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jMenuItemActualizarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemActualizarParametroFactuPrincipal"));		
		
		
		
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonEliminarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"EliminarParametroFactuPrincipal"));
		
		
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonEliminarToolBarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"EliminarToolBarParametroFactuPrincipal"));
								
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jMenuItemEliminarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemEliminarParametroFactuPrincipal"));		
		
		
		
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonCancelarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"CancelarParametroFactuPrincipal"));
		
		
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonCancelarToolBarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"CancelarToolBarParametroFactuPrincipal"));
					
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jMenuItemCancelarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemCancelarParametroFactuPrincipal"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jMenuItemDetalleCerrarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarParametroFactuPrincipal"));		
		
		
		
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonGuardarCambiosToolBarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroFactuPrincipal"));
		
		
		
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonGuardarCambiosToolBarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroFactuPrincipal"));
		
		
		
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxTiposAccionesFormularioParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioParametroFactuPrincipal"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonidParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"idParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_empresaParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_empresaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_sucursalParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_sucursalParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_param_factu_descuentoParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_descuentoParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_param_factu_descuentoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_descuentoParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_param_factu_listado_clienteParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_listado_clienteParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_param_factu_listado_clienteParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_listado_clienteParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_documento_facturaParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_facturaParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_documento_facturaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_facturaParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_documento_nota_creditoParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_creditoParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_documento_nota_creditoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_creditoParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_documento_nota_debitoParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_debitoParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_documento_nota_debitoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_debitoParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonen_lineaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"en_lineaParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_cuenta_tipo_clienteParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_cuenta_tipo_clienteParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_cliente_impuestoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_cliente_impuestoParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_libro_contableParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_libro_contableParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_libro_contableParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_libro_contableParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_monedaParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_monedaParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_monedaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_impresionParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_impresionParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_formatoParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_formatoParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_formatoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_secuencial_usuarioParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_secuencial_usuarioParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_secuencial_editableParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_secuencial_editableParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_precio_por_clienteParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_precio_por_clienteParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_modificar_precioParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_modificar_precioParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_modificar_servicioParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_modificar_servicioParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_cambiar_unidadParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_cambiar_unidadParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonnumero_decimales_unidadParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"numero_decimales_unidadParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_activar_serieParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_activar_serieParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_activar_loteParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_activar_loteParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_activar_multi_empresaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_activar_multi_empresaParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_centro_costosParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_centro_costosParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_unidadesParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_unidadesParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_cupo_disponibleParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_cupo_disponibleParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_forma_pagoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_forma_pagoParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_envio_mailParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_envio_mailParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_autorizar_proformaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_autorizar_proformaParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_bloqueo_pedidoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_bloqueo_pedidoParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_control_anticipoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_control_anticipoParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_factura_autoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_factura_autoParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_grabar_valor_ceroParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_grabar_valor_ceroParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_agregar_itemParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_agregar_itemParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonnumero_copiasParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"numero_copiasParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonleyendaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"leyendaParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_sin_facturaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_sin_facturaParametroFactuPrincipalBusqueda"));
		//jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_flete_ventaParametroFactuPrincipal"));
		//jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableFleteVenta("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_flete_ventaParametroFactuPrincipalArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_flete_ventaParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_flete_ventaParametroFactuPrincipalBusqueda"));
		//jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_otro_cargoParametroFactuPrincipal"));
		//jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableOtroCargo("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_otro_cargoParametroFactuPrincipalArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_otro_cargoParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_otro_cargoParametroFactuPrincipalBusqueda"));
		//jButtonid_cuenta_contable_finanParametroFactuPrincipal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_finanParametroFactuPrincipalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_finanParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_finanParametroFactuPrincipal"));
		//jButtonid_cuenta_contable_finanParametroFactuPrincipalArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableFinan("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_finanParametroFactuPrincipalArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_finanParametroFactuPrincipalArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_finanParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_finanParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_finanParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_finanParametroFactuPrincipalBusqueda"));
		//jButtonid_cuenta_contable_boniParametroFactuPrincipal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_boniParametroFactuPrincipalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boniParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boniParametroFactuPrincipal"));
		//jButtonid_cuenta_contable_boniParametroFactuPrincipalArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableBoni("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boniParametroFactuPrincipalArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boniParametroFactuPrincipalArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boniParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boniParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boniParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boniParametroFactuPrincipalBusqueda"));
		//jButtonid_cuenta_contable_boni_devolParametroFactuPrincipal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boni_devolParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boni_devolParametroFactuPrincipal"));
		//jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableBoniDevol("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boni_devolParametroFactuPrincipalArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boni_devolParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boni_devolParametroFactuPrincipalBusqueda"));
		//jButtonid_cuenta_contable_iceParametroFactuPrincipal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_iceParametroFactuPrincipalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_iceParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iceParametroFactuPrincipal"));
		//jButtonid_cuenta_contable_iceParametroFactuPrincipalArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableIce("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_iceParametroFactuPrincipalArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iceParametroFactuPrincipalArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_iceParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iceParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_iceParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iceParametroFactuPrincipalBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jTabbedPaneRelacionesParametroFactuPrincipal.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesParametroFactuPrincipal"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameParametroFactuPrincipal"));
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuPrincipal.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarParametroFactuPrincipal"));
		}
		
		this.jTableDatosParametroFactuPrincipal.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarParametroFactuPrincipal"));
		
		this.jTableDatosParametroFactuPrincipal.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarParametroFactuPrincipal"));
		
		this.jButtonNuevoParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"NuevoParametroFactuPrincipal"));
		
		this.jButtonDuplicarParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"DuplicarParametroFactuPrincipal"));
		
		this.jButtonCopiarParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"CopiarParametroFactuPrincipal"));
		
		this.jButtonVerFormParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"VerFormParametroFactuPrincipal"));
		
		
		this.jButtonNuevoToolBarParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"NuevoToolBarParametroFactuPrincipal"));
			
		this.jButtonDuplicarToolBarParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"DuplicarToolBarParametroFactuPrincipal"));
			
		this.jMenuItemNuevoParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemNuevoParametroFactuPrincipal"));
			
		this.jMenuItemDuplicarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarParametroFactuPrincipal"));		
		
		
		this.jButtonNuevoRelacionesParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"NuevoRelacionesParametroFactuPrincipal"));
		
		
		this.jButtonNuevoRelacionesToolBarParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarParametroFactuPrincipal"));
			
		this.jMenuItemNuevoRelacionesParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesParametroFactuPrincipal"));		
		
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonModificarParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"ModificarParametroFactuPrincipal"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonModificarToolBarParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"ModificarToolBarParametroFactuPrincipal"));
			
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jMenuItemModificarParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"MenuItemModificarParametroFactuPrincipal"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonActualizarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"ActualizarParametroFactuPrincipal"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonActualizarToolBarParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"ActualizarToolBarParametroFactuPrincipal"));
				
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jMenuItemActualizarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemActualizarParametroFactuPrincipal"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonEliminarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"EliminarParametroFactuPrincipal"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonEliminarToolBarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"EliminarToolBarParametroFactuPrincipal"));
						
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jMenuItemEliminarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemEliminarParametroFactuPrincipal"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonCancelarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"CancelarParametroFactuPrincipal"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonCancelarToolBarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"CancelarToolBarParametroFactuPrincipal"));
			
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jMenuItemCancelarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemCancelarParametroFactuPrincipal"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarParametroFactuPrincipal"));		
		
		
		this.jButtonCerrarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"CerrarParametroFactuPrincipal"));
		
		
		this.jButtonCerrarToolBarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"CerrarToolBarParametroFactuPrincipal"));
			
		this.jMenuItemCerrarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemCerrarParametroFactuPrincipal"));
			
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jMenuItemDetalleCerrarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarParametroFactuPrincipal"));		
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonGuardarCambiosParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"GuardarCambiosParametroFactuPrincipal"));
		}
		
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonGuardarCambiosToolBarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarParametroFactuPrincipal"));
		}
		
		this.jButtonCopiarToolBarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"CopiarToolBarParametroFactuPrincipal"));
			
		this.jButtonVerFormToolBarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"VerFormToolBarParametroFactuPrincipal"));
		
		this.jMenuItemGuardarCambiosParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosParametroFactuPrincipal"));
			
		this.jMenuItemCopiarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemCopiarParametroFactuPrincipal"));		
		
		this.jMenuItemVerFormParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemVerFormParametroFactuPrincipal"));		
		
		
		this.jButtonGuardarCambiosTablaParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaParametroFactuPrincipal"));
		
		
		this.jButtonGuardarCambiosTablaToolBarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarParametroFactuPrincipal"));
			
		this.jMenuItemGuardarCambiosTablaParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaParametroFactuPrincipal"));		
		
		
		
		this.jButtonRecargarInformacionParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"RecargarInformacionParametroFactuPrincipal"));
					
		this.jButtonRecargarInformacionToolBarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarParametroFactuPrincipal"));
		
		this.jMenuItemRecargarInformacionParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionParametroFactuPrincipal"));		
		
		
		
		this.jButtonAnterioresParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"AnterioresParametroFactuPrincipal"));
		
		
		this.jButtonAnterioresToolBarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"AnterioresToolBarParametroFactuPrincipal"));
		
		this.jMenuItemAnterioresParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresParametroFactuPrincipal"));		
		
		
		this.jButtonSiguientesParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"SiguientesParametroFactuPrincipal"));
		
		
		this.jButtonSiguientesToolBarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"SiguientesToolBarParametroFactuPrincipal"));
			
		this.jMenuItemSiguientesParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesParametroFactuPrincipal"));
			
		this.jMenuItemAbrirOrderByParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByParametroFactuPrincipal"));
			
		this.jMenuItemMostrarOcultarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarParametroFactuPrincipal"));
			
		this.jMenuItemDetalleAbrirOrderByParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByParametroFactuPrincipal"));
			
		this.jMenuItemDetalleMostarOcultarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarParametroFactuPrincipal"));		
		
		
		this.jButtonNuevoGuardarCambiosParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosParametroFactuPrincipal"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarParametroFactuPrincipal"));
			
		this.jMenuItemNuevoGuardarCambiosParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosParametroFactuPrincipal"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosParametroFactuPrincipal.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosParametroFactuPrincipal"));

		this.jCheckBoxSeleccionadosParametroFactuPrincipal.addItemListener(new CheckBoxItemListener(this,"SeleccionadosParametroFactuPrincipal"));
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxTiposAccionesFormularioParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioParametroFactuPrincipal"));
		}
		
		
		this.jComboBoxTiposRelacionesParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"TiposRelacionesParametroFactuPrincipal"));
			
		this.jComboBoxTiposAccionesParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"TiposAccionesParametroFactuPrincipal"));
					
		this.jComboBoxTiposSeleccionarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"TiposSeleccionarParametroFactuPrincipal"));
			
		this.jTextFieldValorCampoGeneralParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralParametroFactuPrincipal"));		
		
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonidParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"idParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_empresaParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_empresaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_sucursalParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_sucursalParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_param_factu_descuentoParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_descuentoParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_param_factu_descuentoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_descuentoParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_param_factu_listado_clienteParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_listado_clienteParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_param_factu_listado_clienteParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_listado_clienteParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_documento_facturaParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_facturaParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_documento_facturaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_facturaParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_documento_nota_creditoParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_creditoParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_documento_nota_creditoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_creditoParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_documento_nota_debitoParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_debitoParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_documento_nota_debitoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_debitoParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonen_lineaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"en_lineaParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_cuenta_tipo_clienteParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_cuenta_tipo_clienteParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_cliente_impuestoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_cliente_impuestoParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_libro_contableParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_libro_contableParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_libro_contableParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_libro_contableParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_monedaParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_monedaParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_monedaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_impresionParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_impresionParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_formatoParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_formatoParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_formatoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_secuencial_usuarioParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_secuencial_usuarioParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_secuencial_editableParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_secuencial_editableParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_precio_por_clienteParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_precio_por_clienteParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_modificar_precioParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_modificar_precioParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_modificar_servicioParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_modificar_servicioParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_cambiar_unidadParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_cambiar_unidadParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonnumero_decimales_unidadParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"numero_decimales_unidadParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_activar_serieParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_activar_serieParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_activar_loteParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_activar_loteParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_activar_multi_empresaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_activar_multi_empresaParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_centro_costosParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_centro_costosParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_unidadesParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_unidadesParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_cupo_disponibleParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_cupo_disponibleParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_forma_pagoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_forma_pagoParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_envio_mailParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_envio_mailParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_autorizar_proformaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_autorizar_proformaParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_bloqueo_pedidoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_bloqueo_pedidoParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_control_anticipoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_control_anticipoParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_factura_autoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_factura_autoParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_grabar_valor_ceroParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_grabar_valor_ceroParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_agregar_itemParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_agregar_itemParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonnumero_copiasParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"numero_copiasParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonleyendaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"leyendaParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_sin_facturaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_sin_facturaParametroFactuPrincipalBusqueda"));
		//jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_flete_ventaParametroFactuPrincipal"));
		//jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableFleteVenta("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_flete_ventaParametroFactuPrincipalArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_flete_ventaParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_flete_ventaParametroFactuPrincipalBusqueda"));
		//jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_otro_cargoParametroFactuPrincipal"));
		//jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableOtroCargo("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_otro_cargoParametroFactuPrincipalArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_otro_cargoParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_otro_cargoParametroFactuPrincipalBusqueda"));
		//jButtonid_cuenta_contable_finanParametroFactuPrincipal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_finanParametroFactuPrincipalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_finanParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_finanParametroFactuPrincipal"));
		//jButtonid_cuenta_contable_finanParametroFactuPrincipalArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableFinan("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_finanParametroFactuPrincipalArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_finanParametroFactuPrincipalArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_finanParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_finanParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_finanParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_finanParametroFactuPrincipalBusqueda"));
		//jButtonid_cuenta_contable_boniParametroFactuPrincipal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_boniParametroFactuPrincipalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boniParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boniParametroFactuPrincipal"));
		//jButtonid_cuenta_contable_boniParametroFactuPrincipalArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableBoni("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boniParametroFactuPrincipalArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boniParametroFactuPrincipalArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boniParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boniParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boniParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boniParametroFactuPrincipalBusqueda"));
		//jButtonid_cuenta_contable_boni_devolParametroFactuPrincipal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boni_devolParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boni_devolParametroFactuPrincipal"));
		//jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableBoniDevol("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boni_devolParametroFactuPrincipalArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boni_devolParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boni_devolParametroFactuPrincipalBusqueda"));
		//jButtonid_cuenta_contable_iceParametroFactuPrincipal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_iceParametroFactuPrincipalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_iceParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iceParametroFactuPrincipal"));
		//jButtonid_cuenta_contable_iceParametroFactuPrincipalArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableIce("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_iceParametroFactuPrincipalArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iceParametroFactuPrincipalArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_iceParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iceParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_iceParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iceParametroFactuPrincipalBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdCuentaContableBoniParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableBoniParametroFactuPrincipal"));

			this.jButtonBuscarFK_IdCuentaContableBoniid_cuenta_contable_boniParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boniParametroFactuPrincipal"));

			this.jButtonFK_IdCuentaContableBoniDevolParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableBoniDevolParametroFactuPrincipal"));

			this.jButtonBuscarFK_IdCuentaContableBoniDevolid_cuenta_contable_boni_devolParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boni_devolParametroFactuPrincipal"));

			this.jButtonFK_IdCuentaContableFinanParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableFinanParametroFactuPrincipal"));

			this.jButtonBuscarFK_IdCuentaContableFinanid_cuenta_contable_finanParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_finanParametroFactuPrincipal"));

			this.jButtonFK_IdCuentaContableFleteVentaParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableFleteVentaParametroFactuPrincipal"));

			this.jButtonBuscarFK_IdCuentaContableFleteVentaid_cuenta_contable_flete_ventaParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_flete_ventaParametroFactuPrincipal"));

			this.jButtonFK_IdCuentaContableIceParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableIceParametroFactuPrincipal"));

			this.jButtonBuscarFK_IdCuentaContableIceid_cuenta_contable_iceParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iceParametroFactuPrincipal"));

			this.jButtonFK_IdCuentaContableOtroCargoParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableOtroCargoParametroFactuPrincipal"));

			this.jButtonBuscarFK_IdCuentaContableOtroCargoid_cuenta_contable_otro_cargoParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_otro_cargoParametroFactuPrincipal"));

			this.jButtonFK_IdFormatoParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdFormatoParametroFactuPrincipal"));

			this.jButtonFK_IdLibroContableParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdLibroContableParametroFactuPrincipal"));

			this.jButtonFK_IdTipoDocumentoFacturaParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdTipoDocumentoFacturaParametroFactuPrincipal"));

			this.jButtonFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal"));

			this.jButtonFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal"));

			this.jButtonFK_IdTipoParamFactuDescuentoParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdTipoParamFactuDescuentoParametroFactuPrincipal"));

			this.jButtonFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdTipoParamFactuListadoClienteParametroFactuPrincipal"));

			this.jButtonFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoParametroFactuPrincipal!=null) {
				this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroFactuPrincipal"));
				this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroFactuPrincipal"));
				this.jInternalFrameReporteDinamicoParametroFactuPrincipal.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroFactuPrincipal"));
			}
			
			//this.jButtonCerrarReporteDinamicoParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoParametroFactuPrincipal"));				
			//this.jButtonGenerarReporteDinamicoParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoParametroFactuPrincipal"));
			//this.jButtonGenerarExcelReporteDinamicoParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoParametroFactuPrincipal"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionParametroFactuPrincipal!=null) {
				this.jInternalFrameImportacionParametroFactuPrincipal.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionParametroFactuPrincipal"));
				this.jInternalFrameImportacionParametroFactuPrincipal.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionParametroFactuPrincipal"));
				this.jInternalFrameImportacionParametroFactuPrincipal.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionParametroFactuPrincipal"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"AbrirOrderByParametroFactuPrincipal"));
			
			this.jButtonAbrirOrderByToolBarParametroFactuPrincipal.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarParametroFactuPrincipal"));			
			
			if(this.jInternalFrameOrderByParametroFactuPrincipal!=null) {
				this.jInternalFrameOrderByParametroFactuPrincipal.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByParametroFactuPrincipal"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jTabbedPaneRelacionesParametroFactuPrincipal.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesParametroFactuPrincipal"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameParametroFactuPrincipal();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormParametroFactuPrincipal.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormParametroFactuPrincipal = (JInternalFrameBase)event.getSource();
	            	
	            ParametroFactuPrincipalBeanSwingJInternalFrame jInternalFrameParent=(ParametroFactuPrincipalBeanSwingJInternalFrame)jInternalFrameDetalleFormParametroFactuPrincipal.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarParametroFactuPrincipalActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosParametroFactuPrincipal.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosParametroFactuPrincipalListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosParametroFactuPrincipal.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosParametroFactuPrincipal.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuPrincipalActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuPrincipalActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuPrincipalActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoParametroFactuPrincipal";
		inputMap = this.jButtonNuevoParametroFactuPrincipal.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoParametroFactuPrincipal.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoParametroFactuPrincipalActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuPrincipalActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuPrincipalActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoParametroFactuPrincipalActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesParametroFactuPrincipal";
		inputMap = this.jButtonNuevoRelacionesParametroFactuPrincipal.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesParametroFactuPrincipal.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoParametroFactuPrincipalActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarParametroFactuPrincipal";
		inputMap = this.jButtonModificarParametroFactuPrincipal.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarParametroFactuPrincipal.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarParametroFactuPrincipalActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarParametroFactuPrincipal";
		inputMap = this.jButtonActualizarParametroFactuPrincipal.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarParametroFactuPrincipal.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarParametroFactuPrincipalActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarParametroFactuPrincipal";
		inputMap = this.jButtonEliminarParametroFactuPrincipal.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarParametroFactuPrincipal.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarParametroFactuPrincipalActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarParametroFactuPrincipal";
		inputMap = this.jButtonCancelarParametroFactuPrincipal.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarParametroFactuPrincipal.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarParametroFactuPrincipalActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarParametroFactuPrincipal";
		inputMap = this.jButtonCerrarParametroFactuPrincipal.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarParametroFactuPrincipal.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarParametroFactuPrincipalActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonGuardarCambiosParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosParametroFactuPrincipal";
		inputMap = this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonGuardarCambiosParametroFactuPrincipal.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonGuardarCambiosParametroFactuPrincipal.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosParametroFactuPrincipalActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosParametroFactuPrincipal.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosParametroFactuPrincipalItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesParametroFactuPrincipal.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesParametroFactuPrincipalActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarParametroFactuPrincipal.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarParametroFactuPrincipalActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralParametroFactuPrincipal.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralParametroFactuPrincipalActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonidParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"idParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_empresaParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_empresaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_sucursalParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_sucursalParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_param_factu_descuentoParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_descuentoParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_param_factu_descuentoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_descuentoParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_param_factu_listado_clienteParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_listado_clienteParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_param_factu_listado_clienteParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_listado_clienteParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_param_factu_secuencia_trabajoParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_documento_facturaParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_facturaParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_documento_facturaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_facturaParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_documento_nota_creditoParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_creditoParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_documento_nota_creditoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_creditoParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_documento_nota_debitoParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_debitoParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_tipo_documento_nota_debitoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documento_nota_debitoParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonen_lineaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"en_lineaParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_cuenta_tipo_clienteParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_cuenta_tipo_clienteParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_cliente_impuestoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_cliente_impuestoParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_libro_contableParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_libro_contableParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_libro_contableParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_libro_contableParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_monedaParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_monedaParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_monedaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_impresionParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_impresionParametroFactuPrincipalBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_formatoParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_formatoParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_formatoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_secuencial_usuarioParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_secuencial_usuarioParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_secuencial_editableParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_secuencial_editableParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_precio_por_clienteParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_precio_por_clienteParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_modificar_precioParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_modificar_precioParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_modificar_servicioParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_modificar_servicioParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_cambiar_unidadParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_cambiar_unidadParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonnumero_decimales_unidadParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"numero_decimales_unidadParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_activar_serieParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_activar_serieParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_activar_loteParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_activar_loteParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_activar_multi_empresaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_activar_multi_empresaParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_centro_costosParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_centro_costosParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_unidadesParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_unidadesParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_cupo_disponibleParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_cupo_disponibleParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_forma_pagoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_forma_pagoParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_envio_mailParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_envio_mailParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_autorizar_proformaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_autorizar_proformaParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_bloqueo_pedidoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_bloqueo_pedidoParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_control_anticipoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_control_anticipoParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_factura_autoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_factura_autoParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_grabar_valor_ceroParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_grabar_valor_ceroParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_agregar_itemParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_agregar_itemParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonnumero_copiasParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"numero_copiasParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonleyendaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"leyendaParametroFactuPrincipalBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtoncon_sin_facturaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"con_sin_facturaParametroFactuPrincipalBusqueda"));
		//jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_flete_ventaParametroFactuPrincipal"));
		//jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableFleteVenta("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_flete_ventaParametroFactuPrincipalArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_flete_ventaParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_flete_ventaParametroFactuPrincipalBusqueda"));
		//jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_otro_cargoParametroFactuPrincipal"));
		//jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableOtroCargo("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_otro_cargoParametroFactuPrincipalArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_otro_cargoParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_otro_cargoParametroFactuPrincipalBusqueda"));
		//jButtonid_cuenta_contable_finanParametroFactuPrincipal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_finanParametroFactuPrincipalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_finanParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_finanParametroFactuPrincipal"));
		//jButtonid_cuenta_contable_finanParametroFactuPrincipalArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableFinan("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_finanParametroFactuPrincipalArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_finanParametroFactuPrincipalArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_finanParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_finanParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_finanParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_finanParametroFactuPrincipalBusqueda"));
		//jButtonid_cuenta_contable_boniParametroFactuPrincipal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_boniParametroFactuPrincipalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boniParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boniParametroFactuPrincipal"));
		//jButtonid_cuenta_contable_boniParametroFactuPrincipalArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableBoni("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boniParametroFactuPrincipalArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boniParametroFactuPrincipalArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boniParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boniParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boniParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boniParametroFactuPrincipalBusqueda"));
		//jButtonid_cuenta_contable_boni_devolParametroFactuPrincipal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boni_devolParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boni_devolParametroFactuPrincipal"));
		//jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableBoniDevol("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boni_devolParametroFactuPrincipalArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boni_devolParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boni_devolParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boni_devolParametroFactuPrincipalBusqueda"));
		//jButtonid_cuenta_contable_iceParametroFactuPrincipal.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contable_iceParametroFactuPrincipalActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_iceParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iceParametroFactuPrincipal"));
		//jButtonid_cuenta_contable_iceParametroFactuPrincipalArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContableIce("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_iceParametroFactuPrincipalArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iceParametroFactuPrincipalArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_iceParametroFactuPrincipalUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iceParametroFactuPrincipalUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_iceParametroFactuPrincipalBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iceParametroFactuPrincipalBusqueda"));
		
		
		this.jButtonFK_IdCuentaContableBoniParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableBoniParametroFactuPrincipal"));

		this.jButtonBuscarFK_IdCuentaContableBoniid_cuenta_contable_boniParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boniParametroFactuPrincipal"));

		this.jButtonFK_IdCuentaContableBoniDevolParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableBoniDevolParametroFactuPrincipal"));

		this.jButtonBuscarFK_IdCuentaContableBoniDevolid_cuenta_contable_boni_devolParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_boni_devolParametroFactuPrincipal"));

		this.jButtonFK_IdCuentaContableFinanParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableFinanParametroFactuPrincipal"));

		this.jButtonBuscarFK_IdCuentaContableFinanid_cuenta_contable_finanParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_finanParametroFactuPrincipal"));

		this.jButtonFK_IdCuentaContableFleteVentaParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableFleteVentaParametroFactuPrincipal"));

		this.jButtonBuscarFK_IdCuentaContableFleteVentaid_cuenta_contable_flete_ventaParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_flete_ventaParametroFactuPrincipal"));

		this.jButtonFK_IdCuentaContableIceParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableIceParametroFactuPrincipal"));

		this.jButtonBuscarFK_IdCuentaContableIceid_cuenta_contable_iceParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_iceParametroFactuPrincipal"));

		this.jButtonFK_IdCuentaContableOtroCargoParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdCuentaContableOtroCargoParametroFactuPrincipal"));

		this.jButtonBuscarFK_IdCuentaContableOtroCargoid_cuenta_contable_otro_cargoParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"id_cuenta_contable_otro_cargoParametroFactuPrincipal"));

		this.jButtonFK_IdFormatoParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdFormatoParametroFactuPrincipal"));

		this.jButtonFK_IdLibroContableParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdLibroContableParametroFactuPrincipal"));

		this.jButtonFK_IdTipoDocumentoFacturaParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdTipoDocumentoFacturaParametroFactuPrincipal"));

		this.jButtonFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal"));

		this.jButtonFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal"));

		this.jButtonFK_IdTipoParamFactuDescuentoParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdTipoParamFactuDescuentoParametroFactuPrincipal"));

		this.jButtonFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdTipoParamFactuListadoClienteParametroFactuPrincipal"));

		this.jButtonFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal.addActionListener(new ButtonActionListener(this,"FK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionParametroFactuPrincipal.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionParametroFactuPrincipalActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarParametroFactuPrincipalActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarParametroFactuPrincipal.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosParametroFactuPrincipal(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(ParametroFactuPrincipal parametrofactuprincipalAux:this.parametrofactuprincipalLogic.getParametroFactuPrincipals()) {
					parametrofactuprincipalAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroFactuPrincipal parametrofactuprincipalAux:parametrofactuprincipals) {
					parametrofactuprincipalAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosParametroFactuPrincipalItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ParametroFactuPrincipal parametrofactuprincipalAux:this.parametrofactuprincipalLogic.getParametroFactuPrincipals()) {
						parametrofactuprincipalAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroFactuPrincipal parametrofactuprincipalAux:parametrofactuprincipals) {
						parametrofactuprincipalAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(ParametroFactuPrincipal parametrofactuprincipalAux:this.parametrofactuprincipalLogic.getParametroFactuPrincipals()) {
					
						if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_ENLINEA)) {
							existe=true;
							parametrofactuprincipalAux.seten_linea(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUENTATIPOCLIENTE)) {
							existe=true;
							parametrofactuprincipalAux.setcon_cuenta_tipo_cliente(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCLIENTEIMPUESTO)) {
							existe=true;
							parametrofactuprincipalAux.setcon_cliente_impuesto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONIMPRESION)) {
							existe=true;
							parametrofactuprincipalAux.setcon_impresion(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALUSUARIO)) {
							existe=true;
							parametrofactuprincipalAux.setcon_secuencial_usuario(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALEDITABLE)) {
							existe=true;
							parametrofactuprincipalAux.setcon_secuencial_editable(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONPRECIOPORCLIENTE)) {
							existe=true;
							parametrofactuprincipalAux.setcon_precio_por_cliente(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARPRECIO)) {
							existe=true;
							parametrofactuprincipalAux.setcon_modificar_precio(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARSERVICIO)) {
							existe=true;
							parametrofactuprincipalAux.setcon_modificar_servicio(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCAMBIARUNIDAD)) {
							existe=true;
							parametrofactuprincipalAux.setcon_cambiar_unidad(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARSERIE)) {
							existe=true;
							parametrofactuprincipalAux.setcon_activar_serie(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARLOTE)) {
							existe=true;
							parametrofactuprincipalAux.setcon_activar_lote(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARMULTIEMPRESA)) {
							existe=true;
							parametrofactuprincipalAux.setcon_activar_multi_empresa(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCENTROCOSTOS)) {
							existe=true;
							parametrofactuprincipalAux.setcon_centro_costos(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONUNIDADES)) {
							existe=true;
							parametrofactuprincipalAux.setcon_unidades(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUPODISPONIBLE)) {
							existe=true;
							parametrofactuprincipalAux.setcon_cupo_disponible(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONFORMAPAGO)) {
							existe=true;
							parametrofactuprincipalAux.setcon_forma_pago(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONENVIOMAIL)) {
							existe=true;
							parametrofactuprincipalAux.setcon_envio_mail(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONAUTORIZARPROFORMA)) {
							existe=true;
							parametrofactuprincipalAux.setcon_autorizar_proforma(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONBLOQUEOPEDIDO)) {
							existe=true;
							parametrofactuprincipalAux.setcon_bloqueo_pedido(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCONTROLANTICIPO)) {
							existe=true;
							parametrofactuprincipalAux.setcon_control_anticipo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONFACTURAAUTO)) {
							existe=true;
							parametrofactuprincipalAux.setcon_factura_auto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONGRABARVALORCERO)) {
							existe=true;
							parametrofactuprincipalAux.setcon_grabar_valor_cero(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONAGREGARITEM)) {
							existe=true;
							parametrofactuprincipalAux.setcon_agregar_item(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONSINFACTURA)) {
							existe=true;
							parametrofactuprincipalAux.setcon_sin_factura(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroFactuPrincipal parametrofactuprincipalAux:parametrofactuprincipals) {
						
						if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_ENLINEA)) {
							existe=true;
							parametrofactuprincipalAux.seten_linea(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUENTATIPOCLIENTE)) {
							existe=true;
							parametrofactuprincipalAux.setcon_cuenta_tipo_cliente(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCLIENTEIMPUESTO)) {
							existe=true;
							parametrofactuprincipalAux.setcon_cliente_impuesto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONIMPRESION)) {
							existe=true;
							parametrofactuprincipalAux.setcon_impresion(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALUSUARIO)) {
							existe=true;
							parametrofactuprincipalAux.setcon_secuencial_usuario(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALEDITABLE)) {
							existe=true;
							parametrofactuprincipalAux.setcon_secuencial_editable(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONPRECIOPORCLIENTE)) {
							existe=true;
							parametrofactuprincipalAux.setcon_precio_por_cliente(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARPRECIO)) {
							existe=true;
							parametrofactuprincipalAux.setcon_modificar_precio(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARSERVICIO)) {
							existe=true;
							parametrofactuprincipalAux.setcon_modificar_servicio(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCAMBIARUNIDAD)) {
							existe=true;
							parametrofactuprincipalAux.setcon_cambiar_unidad(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARSERIE)) {
							existe=true;
							parametrofactuprincipalAux.setcon_activar_serie(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARLOTE)) {
							existe=true;
							parametrofactuprincipalAux.setcon_activar_lote(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARMULTIEMPRESA)) {
							existe=true;
							parametrofactuprincipalAux.setcon_activar_multi_empresa(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCENTROCOSTOS)) {
							existe=true;
							parametrofactuprincipalAux.setcon_centro_costos(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONUNIDADES)) {
							existe=true;
							parametrofactuprincipalAux.setcon_unidades(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUPODISPONIBLE)) {
							existe=true;
							parametrofactuprincipalAux.setcon_cupo_disponible(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONFORMAPAGO)) {
							existe=true;
							parametrofactuprincipalAux.setcon_forma_pago(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONENVIOMAIL)) {
							existe=true;
							parametrofactuprincipalAux.setcon_envio_mail(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONAUTORIZARPROFORMA)) {
							existe=true;
							parametrofactuprincipalAux.setcon_autorizar_proforma(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONBLOQUEOPEDIDO)) {
							existe=true;
							parametrofactuprincipalAux.setcon_bloqueo_pedido(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCONTROLANTICIPO)) {
							existe=true;
							parametrofactuprincipalAux.setcon_control_anticipo(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONFACTURAAUTO)) {
							existe=true;
							parametrofactuprincipalAux.setcon_factura_auto(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONGRABARVALORCERO)) {
							existe=true;
							parametrofactuprincipalAux.setcon_grabar_valor_cero(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONAGREGARITEM)) {
							existe=true;
							parametrofactuprincipalAux.setcon_agregar_item(this.isSeleccionarTodos);
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONSINFACTURA)) {
							existe=true;
							parametrofactuprincipalAux.setcon_sin_factura(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaParametroFactuPrincipal(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosParametroFactuPrincipal.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosParametroFactuPrincipal.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosParametroFactuPrincipalItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosParametroFactuPrincipal.getSelectedRows();
			
			ParametroFactuPrincipal parametrofactuprincipalLocal=new ParametroFactuPrincipal();
			
			//this.seleccionarTodosParametroFactuPrincipal(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					parametrofactuprincipalLocal =(ParametroFactuPrincipal) this.parametrofactuprincipalLogic.getParametroFactuPrincipals().toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					parametrofactuprincipalLocal =(ParametroFactuPrincipal) this.parametrofactuprincipals.toArray()[this.jTableDatosParametroFactuPrincipal.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				parametrofactuprincipalLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(ParametroFactuPrincipal parametrofactuprincipalAux:this.parametrofactuprincipalLogic.getParametroFactuPrincipals()) {
						parametrofactuprincipalAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(ParametroFactuPrincipal parametrofactuprincipalAux:parametrofactuprincipals) {
						parametrofactuprincipalAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaParametroFactuPrincipal(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosParametroFactuPrincipal.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosParametroFactuPrincipal.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosParametroFactuPrincipal,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualParametroFactuPrincipalItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarParametroFactuPrincipalParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralParametroFactuPrincipalActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralParametroFactuPrincipal.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(ParametroFactuPrincipal parametrofactuprincipalAux:this.parametrofactuprincipalLogic.getParametroFactuPrincipals()) {
				
						if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_NUMERODECIMALESUNIDAD)) {
							existe=true;
							parametrofactuprincipalAux.setnumero_decimales_unidad(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_NUMEROCOPIAS)) {
							existe=true;
							parametrofactuprincipalAux.setnumero_copias(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_LEYENDA)) {
							existe=true;
							parametrofactuprincipalAux.setleyenda(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroFactuPrincipal parametrofactuprincipalAux:parametrofactuprincipals) {
					
						if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_NUMERODECIMALESUNIDAD)) {
							existe=true;
							parametrofactuprincipalAux.setnumero_decimales_unidad(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_NUMEROCOPIAS)) {
							existe=true;
							parametrofactuprincipalAux.setnumero_copias(Integer.parseInt(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_LEYENDA)) {
							existe=true;
							parametrofactuprincipalAux.setleyenda(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaParametroFactuPrincipal(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesParametroFactuPrincipalActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioParametroFactuPrincipal=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesParametroFactuPrincipal.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxTiposAccionesFormularioParametroFactuPrincipal.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteParametroFactuPrincipal) {				
					conSplash=true;//false;										
					
					//this.startProcessParametroFactuPrincipal(conSplash);
				
					this.generarReporteParametroFactuPrincipalsSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroFactuPrincipal.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxTiposAccionesFormularioParametroFactuPrincipal.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoParametroFactuPrincipalsSeleccionados();
				//this.jComboBoxTiposAccionesParametroFactuPrincipal.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoParametroFactuPrincipalsSeleccionados(false);
				//this.jComboBoxTiposAccionesParametroFactuPrincipal.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoParametroFactuPrincipalsSeleccionados(true);
				//this.jComboBoxTiposAccionesParametroFactuPrincipal.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessParametroFactuPrincipal();
				
				this.exportarParametroFactuPrincipalsSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroFactuPrincipal.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxTiposAccionesFormularioParametroFactuPrincipal.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionParametroFactuPrincipals();
				//this.importarParametroFactuPrincipals();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroFactuPrincipal.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxTiposAccionesFormularioParametroFactuPrincipal.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessParametroFactuPrincipal();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelParametroFactuPrincipalsSeleccionados();
				//this.jComboBoxTiposAccionesParametroFactuPrincipal.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Parametro Principal ", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessParametroFactuPrincipal();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoParametroFactuPrincipal)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyParametroFactuPrincipal(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Parametro Principal ",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesParametroFactuPrincipal.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxTiposAccionesFormularioParametroFactuPrincipal.setSelectedIndex(0);					
				}	
			} 			
			else if(ParametroFactuPrincipalBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteParametroFactuPrincipal) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessParametroFactuPrincipal(conSplash);
					
						//this.actualizarParametrosGeneralParametroFactuPrincipal();
						
						this.generarReporteProcesoAccionParametroFactuPrincipalsSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesParametroFactuPrincipal.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxTiposAccionesFormularioParametroFactuPrincipal.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Parametro Principal S SELECCIONADOS?", "MANTENIMIENTO DE Parametro Principal ", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessParametroFactuPrincipal();
				
						this.actualizarParametrosGeneralParametroFactuPrincipal();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.parametrofactuprincipalReturnGeneral=parametrofactuprincipalLogic.procesarAccionParametroFactuPrincipalsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.parametrofactuprincipalLogic.getParametroFactuPrincipals(),this.parametrofactuprincipalParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarParametroFactuPrincipalReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesParametroFactuPrincipal.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxTiposAccionesFormularioParametroFactuPrincipal.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralParametroFactuPrincipal();
					
					ParametroFactuPrincipalBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarParametroFactuPrincipalReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesParametroFactuPrincipal.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxTiposAccionesFormularioParametroFactuPrincipal.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessParametroFactuPrincipal(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesParametroFactuPrincipalActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessParametroFactuPrincipal();
			
			if(this.jInternalFrameDetalleFormParametroFactuPrincipal==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<ParametroFactuPrincipal> parametrofactuprincipalsSeleccionados=new ArrayList<ParametroFactuPrincipal>();		
			ParametroFactuPrincipal parametrofactuprincipal=new ParametroFactuPrincipal();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingParametroFactuPrincipal(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesParametroFactuPrincipal.getSelectedItem();
			
			
			
			
			parametrofactuprincipalsSeleccionados=this.getParametroFactuPrincipalsSeleccionados(true);
			//this.sTipoAccion;
			
			if(parametrofactuprincipalsSeleccionados.size()==1) {
				for(ParametroFactuPrincipal parametrofactuprincipalAux:parametrofactuprincipalsSeleccionados) {
					parametrofactuprincipal=parametrofactuprincipalAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessParametroFactuPrincipal();
			
      		//this.finishProcessParametroFactuPrincipal(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarParametroFactuPrincipalReturnGeneral() throws Exception {
		if(this.parametrofactuprincipalReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.parametrofactuprincipalReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.parametrofactuprincipalReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.parametrofactuprincipalReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.parametrofactuprincipalReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.parametrofactuprincipalReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingParametroFactuPrincipal(false);
		}
		
		if(this.parametrofactuprincipalReturnGeneral.getConRetornoLista() || this.parametrofactuprincipalReturnGeneral.getConRetornoObjeto()) {
			if(this.parametrofactuprincipalReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.parametrofactuprincipalLogic.setParametroFactuPrincipals(this.parametrofactuprincipalReturnGeneral.getParametroFactuPrincipals());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.parametrofactuprincipalReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.parametrofactuprincipalLogic.setParametroFactuPrincipal(this.parametrofactuprincipalReturnGeneral.getParametroFactuPrincipal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingParametroFactuPrincipal(false);
		}
	}
	
	public void actualizarParametrosGeneralParametroFactuPrincipal() throws Exception {
		
		
	}
	
	public ArrayList<ParametroFactuPrincipal> getParametroFactuPrincipalsSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<ParametroFactuPrincipal> parametrofactuprincipalsSeleccionados=new ArrayList<ParametroFactuPrincipal>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioParametroFactuPrincipal) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(ParametroFactuPrincipal parametrofactuprincipalAux:parametrofactuprincipalLogic.getParametroFactuPrincipals()) {
					if(parametrofactuprincipalAux.getIsSelected()) {
						parametrofactuprincipalsSeleccionados.add(parametrofactuprincipalAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(ParametroFactuPrincipal parametrofactuprincipalAux:this.parametrofactuprincipals) {
					if(parametrofactuprincipalAux.getIsSelected()) {
						parametrofactuprincipalsSeleccionados.add(parametrofactuprincipalAux);				
					}
				}
			}
			
			if(parametrofactuprincipalsSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						parametrofactuprincipalsSeleccionados.addAll(this.parametrofactuprincipalLogic.getParametroFactuPrincipals());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						parametrofactuprincipalsSeleccionados.addAll(this.parametrofactuprincipals);				
					}
				}
			}
		} else {
			parametrofactuprincipalsSeleccionados.add(this.parametrofactuprincipal);
		}
		
		return parametrofactuprincipalsSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteParametroFactuPrincipalsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalParametroFactuPrincipalsSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoParametroFactuPrincipalsSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoParametroFactuPrincipalsSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoParametroFactuPrincipalsSeleccionados(true);
		}
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Parametro Principal ",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesParametroFactuPrincipalsSeleccionados() throws Exception {
		ArrayList<ParametroFactuPrincipal> parametrofactuprincipalsSeleccionados=new ArrayList<ParametroFactuPrincipal>();		
		
		parametrofactuprincipalsSeleccionados=this.getParametroFactuPrincipalsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteParametroFactuPrincipals("Todos",parametrofactuprincipalsSeleccionados);
		
	}	
	
	public void generarReporteNormalParametroFactuPrincipalsSeleccionados() throws Exception {
		ArrayList<ParametroFactuPrincipal> parametrofactuprincipalsSeleccionados=new ArrayList<ParametroFactuPrincipal>();		
		
		parametrofactuprincipalsSeleccionados=this.getParametroFactuPrincipalsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteParametroFactuPrincipals("Todos",parametrofactuprincipalsSeleccionados);
	}		
	
	public void generarReporteProcesoAccionParametroFactuPrincipalsSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<ParametroFactuPrincipal> parametrofactuprincipalsSeleccionados=new ArrayList<ParametroFactuPrincipal>();
		
		parametrofactuprincipalsSeleccionados=this.getParametroFactuPrincipalsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteParametroFactuPrincipals("Todos",parametrofactuprincipalsSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoParametroFactuPrincipalsSeleccionados() throws Exception {
		ArrayList<ParametroFactuPrincipal> parametrofactuprincipalsSeleccionados=new ArrayList<ParametroFactuPrincipal>();		
		
		
		this.abrirInicializarFrameReporteDinamicoParametroFactuPrincipal();
		
		
		parametrofactuprincipalsSeleccionados=this.getParametroFactuPrincipalsSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoParametroFactuPrincipal();
		
		
		//this.generarReporteParametroFactuPrincipals("Todos",parametrofactuprincipalsSeleccionados ,parametrofactuprincipalImplementable,parametrofactuprincipalImplementableHome);
	}
	
	public void mostrarImportacionParametroFactuPrincipals() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionParametroFactuPrincipal();
		
		this.abrirFrameImportacionParametroFactuPrincipal();		
		
			
		//this.generarReporteParametroFactuPrincipals("Todos",parametrofactuprincipalsSeleccionados ,parametrofactuprincipalImplementable,parametrofactuprincipalImplementableHome);
	}
	
	public void importarParametroFactuPrincipals() throws Exception {		
	
	}
	
	public void exportarParametroFactuPrincipalsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelParametroFactuPrincipalsSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoParametroFactuPrincipalsSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlParametroFactuPrincipalsSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Parametro Principal ",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoParametroFactuPrincipalsSeleccionados() throws Exception {
		ArrayList<ParametroFactuPrincipal> parametrofactuprincipalsSeleccionados=new ArrayList<ParametroFactuPrincipal>();		
		
		parametrofactuprincipalsSeleccionados=this.getParametroFactuPrincipalsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactuprincipal."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarParametroFactuPrincipal(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(ParametroFactuPrincipal parametrofactuprincipalAux:parametrofactuprincipalsSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarParametroFactuPrincipal(parametrofactuprincipalAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//parametrofactuprincipalAux.setsDetalleGeneralEntityReporte(parametrofactuprincipalAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Principal ",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarParametroFactuPrincipal(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUDESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTULISTADOCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUSECUENCIATRABAJO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTADEBITO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_ENLINEA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUENTATIPOCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONCLIENTEIMPUESTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_IDLIBROCONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_IDMONEDA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONIMPRESION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_IDFORMATO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALUSUARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALEDITABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONPRECIOPORCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARPRECIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARSERVICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONCAMBIARUNIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_NUMERODECIMALESUNIDAD;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARSERIE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARLOTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARMULTIEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONCENTROCOSTOS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONUNIDADES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUPODISPONIBLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONFORMAPAGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONENVIOMAIL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONAUTORIZARPROFORMA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONBLOQUEOPEDIDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONCONTROLANTICIPO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONFACTURAAUTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONGRABARVALORCERO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONAGREGARITEM;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_NUMEROCOPIAS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_LEYENDA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_CONSINFACTURA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFLETEVENTA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEOTROCARGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFINAN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONI;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONIDEVOL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEICE;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarParametroFactuPrincipal(ParametroFactuPrincipal parametrofactuprincipal,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=parametrofactuprincipal.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.gettipoparamfactudescuento_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.gettipoparamfactulistadocliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.gettipoparamfactusecuenciatrabajo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.gettipodocumentofactura_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.gettipodocumentonotacredito_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.gettipodocumentonotadebito_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.geten_linea().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_cuenta_tipo_cliente().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_cliente_impuesto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getlibrocontable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getmoneda_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_impresion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getformato_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_secuencial_usuario().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_secuencial_editable().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_precio_por_cliente().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_modificar_precio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_modificar_servicio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_cambiar_unidad().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getnumero_decimales_unidad().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_activar_serie().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_activar_lote().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_activar_multi_empresa().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_centro_costos().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_unidades().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_cupo_disponible().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_forma_pago().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_envio_mail().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_autorizar_proforma().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_bloqueo_pedido().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_control_anticipo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_factura_auto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_grabar_valor_cero().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_agregar_item().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getnumero_copias().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getleyenda();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcon_sin_factura().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcuentacontablefleteventa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcuentacontableotrocargo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcuentacontablefinan_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcuentacontableboni_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcuentacontablebonidevol_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=parametrofactuprincipal.getcuentacontableice_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelParametroFactuPrincipalsSeleccionados() throws Exception {
		ArrayList<ParametroFactuPrincipal> parametrofactuprincipalsSeleccionados=new ArrayList<ParametroFactuPrincipal>();		
		
		parametrofactuprincipalsSeleccionados=this.getParametroFactuPrincipalsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactuprincipal.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("ParametroFactuPrincipals");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelParametroFactuPrincipal(row);				
				iRow++;
			}				
			
			for(ParametroFactuPrincipal parametrofactuprincipalAux:parametrofactuprincipalsSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelParametroFactuPrincipal(parametrofactuprincipalAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Principal ",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlParametroFactuPrincipalsSeleccionados() throws Exception {
		ArrayList<ParametroFactuPrincipal> parametrofactuprincipalsSeleccionados=new ArrayList<ParametroFactuPrincipal>();		
		
		parametrofactuprincipalsSeleccionados=this.getParametroFactuPrincipalsSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"parametrofactuprincipal.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("parametrofactuprincipals");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("parametrofactuprincipal");
			//elementRoot.appendChild(element);
		
			for(ParametroFactuPrincipal parametrofactuprincipalAux:parametrofactuprincipalsSeleccionados) {
				element = document.createElement("parametrofactuprincipal");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlParametroFactuPrincipal(parametrofactuprincipalAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Parametro Principal ",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelParametroFactuPrincipal(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUDESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTULISTADOCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUSECUENCIATRABAJO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTADEBITO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_ENLINEA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUENTATIPOCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCLIENTEIMPUESTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDLIBROCONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDMONEDA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONIMPRESION);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDFORMATO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALUSUARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALEDITABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONPRECIOPORCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARPRECIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARSERVICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCAMBIARUNIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_NUMERODECIMALESUNIDAD);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARSERIE);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARLOTE);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARMULTIEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCENTROCOSTOS);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONUNIDADES);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUPODISPONIBLE);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONFORMAPAGO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONENVIOMAIL);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONAUTORIZARPROFORMA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONBLOQUEOPEDIDO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCONTROLANTICIPO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONFACTURAAUTO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONGRABARVALORCERO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONAGREGARITEM);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_NUMEROCOPIAS);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_LEYENDA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_CONSINFACTURA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFLETEVENTA);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEOTROCARGO);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFINAN);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONI);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONIDEVOL);
		cell = row.createCell(iColumn++);cell.setCellValue(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEICE);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelParametroFactuPrincipal(ParametroFactuPrincipal parametrofactuprincipal,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.gettipoparamfactudescuento_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.gettipoparamfactulistadocliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.gettipoparamfactusecuenciatrabajo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.gettipodocumentofactura_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.gettipodocumentonotacredito_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.gettipodocumentonotadebito_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.geten_linea());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_cuenta_tipo_cliente());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_cliente_impuesto());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getlibrocontable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getmoneda_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_impresion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getformato_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_secuencial_usuario());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_secuencial_editable());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_precio_por_cliente());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_modificar_precio());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_modificar_servicio());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_cambiar_unidad());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getnumero_decimales_unidad());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_activar_serie());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_activar_lote());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_activar_multi_empresa());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_centro_costos());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_unidades());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_cupo_disponible());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_forma_pago());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_envio_mail());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_autorizar_proforma());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_bloqueo_pedido());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_control_anticipo());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_factura_auto());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_grabar_valor_cero());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_agregar_item());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getnumero_copias());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getleyenda());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcon_sin_factura());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcuentacontablefleteventa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcuentacontableotrocargo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcuentacontablefinan_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcuentacontableboni_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcuentacontablebonidevol_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(parametrofactuprincipal.getcuentacontableice_descripcion());				
	}
	
	public void setFilaDatosExportarXmlParametroFactuPrincipal(ParametroFactuPrincipal parametrofactuprincipal,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(ParametroFactuPrincipalConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(parametrofactuprincipal.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(ParametroFactuPrincipalConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(parametrofactuprincipal.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(ParametroFactuPrincipalConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(parametrofactuprincipal.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(ParametroFactuPrincipalConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(parametrofactuprincipal.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementtipoparamfactudescuento_descripcion = document.createElement(ParametroFactuPrincipalConstantesFunciones.IDTIPOPARAMFACTUDESCUENTO);
		elementtipoparamfactudescuento_descripcion.appendChild(document.createTextNode(parametrofactuprincipal.gettipoparamfactudescuento_descripcion()));
		element.appendChild(elementtipoparamfactudescuento_descripcion);

		Element elementtipoparamfactulistadocliente_descripcion = document.createElement(ParametroFactuPrincipalConstantesFunciones.IDTIPOPARAMFACTULISTADOCLIENTE);
		elementtipoparamfactulistadocliente_descripcion.appendChild(document.createTextNode(parametrofactuprincipal.gettipoparamfactulistadocliente_descripcion()));
		element.appendChild(elementtipoparamfactulistadocliente_descripcion);

		Element elementtipoparamfactusecuenciatrabajo_descripcion = document.createElement(ParametroFactuPrincipalConstantesFunciones.IDTIPOPARAMFACTUSECUENCIATRABAJO);
		elementtipoparamfactusecuenciatrabajo_descripcion.appendChild(document.createTextNode(parametrofactuprincipal.gettipoparamfactusecuenciatrabajo_descripcion()));
		element.appendChild(elementtipoparamfactusecuenciatrabajo_descripcion);

		Element elementtipodocumentofactura_descripcion = document.createElement(ParametroFactuPrincipalConstantesFunciones.IDTIPODOCUMENTOFACTURA);
		elementtipodocumentofactura_descripcion.appendChild(document.createTextNode(parametrofactuprincipal.gettipodocumentofactura_descripcion()));
		element.appendChild(elementtipodocumentofactura_descripcion);

		Element elementtipodocumentonotacredito_descripcion = document.createElement(ParametroFactuPrincipalConstantesFunciones.IDTIPODOCUMENTONOTACREDITO);
		elementtipodocumentonotacredito_descripcion.appendChild(document.createTextNode(parametrofactuprincipal.gettipodocumentonotacredito_descripcion()));
		element.appendChild(elementtipodocumentonotacredito_descripcion);

		Element elementtipodocumentonotadebito_descripcion = document.createElement(ParametroFactuPrincipalConstantesFunciones.IDTIPODOCUMENTONOTADEBITO);
		elementtipodocumentonotadebito_descripcion.appendChild(document.createTextNode(parametrofactuprincipal.gettipodocumentonotadebito_descripcion()));
		element.appendChild(elementtipodocumentonotadebito_descripcion);

		Element elementen_linea = document.createElement(ParametroFactuPrincipalConstantesFunciones.ENLINEA);
		elementen_linea.appendChild(document.createTextNode(parametrofactuprincipal.geten_linea().toString().trim()));
		element.appendChild(elementen_linea);

		Element elementcon_cuenta_tipo_cliente = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONCUENTATIPOCLIENTE);
		elementcon_cuenta_tipo_cliente.appendChild(document.createTextNode(parametrofactuprincipal.getcon_cuenta_tipo_cliente().toString().trim()));
		element.appendChild(elementcon_cuenta_tipo_cliente);

		Element elementcon_cliente_impuesto = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONCLIENTEIMPUESTO);
		elementcon_cliente_impuesto.appendChild(document.createTextNode(parametrofactuprincipal.getcon_cliente_impuesto().toString().trim()));
		element.appendChild(elementcon_cliente_impuesto);

		Element elementlibrocontable_descripcion = document.createElement(ParametroFactuPrincipalConstantesFunciones.IDLIBROCONTABLE);
		elementlibrocontable_descripcion.appendChild(document.createTextNode(parametrofactuprincipal.getlibrocontable_descripcion()));
		element.appendChild(elementlibrocontable_descripcion);

		Element elementmoneda_descripcion = document.createElement(ParametroFactuPrincipalConstantesFunciones.IDMONEDA);
		elementmoneda_descripcion.appendChild(document.createTextNode(parametrofactuprincipal.getmoneda_descripcion()));
		element.appendChild(elementmoneda_descripcion);

		Element elementcon_impresion = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONIMPRESION);
		elementcon_impresion.appendChild(document.createTextNode(parametrofactuprincipal.getcon_impresion().toString().trim()));
		element.appendChild(elementcon_impresion);

		Element elementformato_descripcion = document.createElement(ParametroFactuPrincipalConstantesFunciones.IDFORMATO);
		elementformato_descripcion.appendChild(document.createTextNode(parametrofactuprincipal.getformato_descripcion()));
		element.appendChild(elementformato_descripcion);

		Element elementcon_secuencial_usuario = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONSECUENCIALUSUARIO);
		elementcon_secuencial_usuario.appendChild(document.createTextNode(parametrofactuprincipal.getcon_secuencial_usuario().toString().trim()));
		element.appendChild(elementcon_secuencial_usuario);

		Element elementcon_secuencial_editable = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONSECUENCIALEDITABLE);
		elementcon_secuencial_editable.appendChild(document.createTextNode(parametrofactuprincipal.getcon_secuencial_editable().toString().trim()));
		element.appendChild(elementcon_secuencial_editable);

		Element elementcon_precio_por_cliente = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONPRECIOPORCLIENTE);
		elementcon_precio_por_cliente.appendChild(document.createTextNode(parametrofactuprincipal.getcon_precio_por_cliente().toString().trim()));
		element.appendChild(elementcon_precio_por_cliente);

		Element elementcon_modificar_precio = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONMODIFICARPRECIO);
		elementcon_modificar_precio.appendChild(document.createTextNode(parametrofactuprincipal.getcon_modificar_precio().toString().trim()));
		element.appendChild(elementcon_modificar_precio);

		Element elementcon_modificar_servicio = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONMODIFICARSERVICIO);
		elementcon_modificar_servicio.appendChild(document.createTextNode(parametrofactuprincipal.getcon_modificar_servicio().toString().trim()));
		element.appendChild(elementcon_modificar_servicio);

		Element elementcon_cambiar_unidad = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONCAMBIARUNIDAD);
		elementcon_cambiar_unidad.appendChild(document.createTextNode(parametrofactuprincipal.getcon_cambiar_unidad().toString().trim()));
		element.appendChild(elementcon_cambiar_unidad);

		Element elementnumero_decimales_unidad = document.createElement(ParametroFactuPrincipalConstantesFunciones.NUMERODECIMALESUNIDAD);
		elementnumero_decimales_unidad.appendChild(document.createTextNode(parametrofactuprincipal.getnumero_decimales_unidad().toString().trim()));
		element.appendChild(elementnumero_decimales_unidad);

		Element elementcon_activar_serie = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONACTIVARSERIE);
		elementcon_activar_serie.appendChild(document.createTextNode(parametrofactuprincipal.getcon_activar_serie().toString().trim()));
		element.appendChild(elementcon_activar_serie);

		Element elementcon_activar_lote = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONACTIVARLOTE);
		elementcon_activar_lote.appendChild(document.createTextNode(parametrofactuprincipal.getcon_activar_lote().toString().trim()));
		element.appendChild(elementcon_activar_lote);

		Element elementcon_activar_multi_empresa = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONACTIVARMULTIEMPRESA);
		elementcon_activar_multi_empresa.appendChild(document.createTextNode(parametrofactuprincipal.getcon_activar_multi_empresa().toString().trim()));
		element.appendChild(elementcon_activar_multi_empresa);

		Element elementcon_centro_costos = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONCENTROCOSTOS);
		elementcon_centro_costos.appendChild(document.createTextNode(parametrofactuprincipal.getcon_centro_costos().toString().trim()));
		element.appendChild(elementcon_centro_costos);

		Element elementcon_unidades = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONUNIDADES);
		elementcon_unidades.appendChild(document.createTextNode(parametrofactuprincipal.getcon_unidades().toString().trim()));
		element.appendChild(elementcon_unidades);

		Element elementcon_cupo_disponible = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONCUPODISPONIBLE);
		elementcon_cupo_disponible.appendChild(document.createTextNode(parametrofactuprincipal.getcon_cupo_disponible().toString().trim()));
		element.appendChild(elementcon_cupo_disponible);

		Element elementcon_forma_pago = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONFORMAPAGO);
		elementcon_forma_pago.appendChild(document.createTextNode(parametrofactuprincipal.getcon_forma_pago().toString().trim()));
		element.appendChild(elementcon_forma_pago);

		Element elementcon_envio_mail = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONENVIOMAIL);
		elementcon_envio_mail.appendChild(document.createTextNode(parametrofactuprincipal.getcon_envio_mail().toString().trim()));
		element.appendChild(elementcon_envio_mail);

		Element elementcon_autorizar_proforma = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONAUTORIZARPROFORMA);
		elementcon_autorizar_proforma.appendChild(document.createTextNode(parametrofactuprincipal.getcon_autorizar_proforma().toString().trim()));
		element.appendChild(elementcon_autorizar_proforma);

		Element elementcon_bloqueo_pedido = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONBLOQUEOPEDIDO);
		elementcon_bloqueo_pedido.appendChild(document.createTextNode(parametrofactuprincipal.getcon_bloqueo_pedido().toString().trim()));
		element.appendChild(elementcon_bloqueo_pedido);

		Element elementcon_control_anticipo = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONCONTROLANTICIPO);
		elementcon_control_anticipo.appendChild(document.createTextNode(parametrofactuprincipal.getcon_control_anticipo().toString().trim()));
		element.appendChild(elementcon_control_anticipo);

		Element elementcon_factura_auto = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONFACTURAAUTO);
		elementcon_factura_auto.appendChild(document.createTextNode(parametrofactuprincipal.getcon_factura_auto().toString().trim()));
		element.appendChild(elementcon_factura_auto);

		Element elementcon_grabar_valor_cero = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONGRABARVALORCERO);
		elementcon_grabar_valor_cero.appendChild(document.createTextNode(parametrofactuprincipal.getcon_grabar_valor_cero().toString().trim()));
		element.appendChild(elementcon_grabar_valor_cero);

		Element elementcon_agregar_item = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONAGREGARITEM);
		elementcon_agregar_item.appendChild(document.createTextNode(parametrofactuprincipal.getcon_agregar_item().toString().trim()));
		element.appendChild(elementcon_agregar_item);

		Element elementnumero_copias = document.createElement(ParametroFactuPrincipalConstantesFunciones.NUMEROCOPIAS);
		elementnumero_copias.appendChild(document.createTextNode(parametrofactuprincipal.getnumero_copias().toString().trim()));
		element.appendChild(elementnumero_copias);

		Element elementleyenda = document.createElement(ParametroFactuPrincipalConstantesFunciones.LEYENDA);
		elementleyenda.appendChild(document.createTextNode(parametrofactuprincipal.getleyenda().trim()));
		element.appendChild(elementleyenda);

		Element elementcon_sin_factura = document.createElement(ParametroFactuPrincipalConstantesFunciones.CONSINFACTURA);
		elementcon_sin_factura.appendChild(document.createTextNode(parametrofactuprincipal.getcon_sin_factura().toString().trim()));
		element.appendChild(elementcon_sin_factura);

		Element elementcuentacontablefleteventa_descripcion = document.createElement(ParametroFactuPrincipalConstantesFunciones.IDCUENTACONTABLEFLETEVENTA);
		elementcuentacontablefleteventa_descripcion.appendChild(document.createTextNode(parametrofactuprincipal.getcuentacontablefleteventa_descripcion()));
		element.appendChild(elementcuentacontablefleteventa_descripcion);

		Element elementcuentacontableotrocargo_descripcion = document.createElement(ParametroFactuPrincipalConstantesFunciones.IDCUENTACONTABLEOTROCARGO);
		elementcuentacontableotrocargo_descripcion.appendChild(document.createTextNode(parametrofactuprincipal.getcuentacontableotrocargo_descripcion()));
		element.appendChild(elementcuentacontableotrocargo_descripcion);

		Element elementcuentacontablefinan_descripcion = document.createElement(ParametroFactuPrincipalConstantesFunciones.IDCUENTACONTABLEFINAN);
		elementcuentacontablefinan_descripcion.appendChild(document.createTextNode(parametrofactuprincipal.getcuentacontablefinan_descripcion()));
		element.appendChild(elementcuentacontablefinan_descripcion);

		Element elementcuentacontableboni_descripcion = document.createElement(ParametroFactuPrincipalConstantesFunciones.IDCUENTACONTABLEBONI);
		elementcuentacontableboni_descripcion.appendChild(document.createTextNode(parametrofactuprincipal.getcuentacontableboni_descripcion()));
		element.appendChild(elementcuentacontableboni_descripcion);

		Element elementcuentacontablebonidevol_descripcion = document.createElement(ParametroFactuPrincipalConstantesFunciones.IDCUENTACONTABLEBONIDEVOL);
		elementcuentacontablebonidevol_descripcion.appendChild(document.createTextNode(parametrofactuprincipal.getcuentacontablebonidevol_descripcion()));
		element.appendChild(elementcuentacontablebonidevol_descripcion);

		Element elementcuentacontableice_descripcion = document.createElement(ParametroFactuPrincipalConstantesFunciones.IDCUENTACONTABLEICE);
		elementcuentacontableice_descripcion.appendChild(document.createTextNode(parametrofactuprincipal.getcuentacontableice_descripcion()));
		element.appendChild(elementcuentacontableice_descripcion);
	}
	
	public void generarReporteGroupGenericoParametroFactuPrincipalsSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<ParametroFactuPrincipal> parametrofactuprincipalsSeleccionados=new ArrayList<ParametroFactuPrincipal>();
		
		parametrofactuprincipalsSeleccionados=this.getParametroFactuPrincipalsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoParametroFactuPrincipal(parametrofactuprincipalsSeleccionados);
		
		this.generarReporteParametroFactuPrincipals("Todos",parametrofactuprincipalsSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoParametroFactuPrincipal(ArrayList<ParametroFactuPrincipal> parametrofactuprincipalsSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(ParametroFactuPrincipal parametrofactuprincipalAux:parametrofactuprincipalsSeleccionados) {
				parametrofactuprincipalAux.setsDetalleGeneralEntityReporte(parametrofactuprincipalAux.toString());
			
				if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(parametrofactuprincipalAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(parametrofactuprincipalAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUDESCUENTO)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(parametrofactuprincipalAux.gettipoparamfactudescuento_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTULISTADOCLIENTE)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(parametrofactuprincipalAux.gettipoparamfactulistadocliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPOPARAMFACTUSECUENCIATRABAJO)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(parametrofactuprincipalAux.gettipoparamfactusecuenciatrabajo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTOFACTURA)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(parametrofactuprincipalAux.gettipodocumentofactura_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTACREDITO)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(parametrofactuprincipalAux.gettipodocumentonotacredito_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_IDTIPODOCUMENTONOTADEBITO)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(parametrofactuprincipalAux.gettipodocumentonotadebito_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_ENLINEA)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.geten_linea()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUENTATIPOCLIENTE)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_cuenta_tipo_cliente()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCLIENTEIMPUESTO)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_cliente_impuesto()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_IDLIBROCONTABLE)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(parametrofactuprincipalAux.getlibrocontable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_IDMONEDA)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(parametrofactuprincipalAux.getmoneda_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONIMPRESION)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_impresion()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_IDFORMATO)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(parametrofactuprincipalAux.getformato_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALUSUARIO)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_secuencial_usuario()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONSECUENCIALEDITABLE)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_secuencial_editable()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONPRECIOPORCLIENTE)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_precio_por_cliente()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARPRECIO)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_modificar_precio()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONMODIFICARSERVICIO)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_modificar_servicio()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCAMBIARUNIDAD)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_cambiar_unidad()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_NUMERODECIMALESUNIDAD)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(parametrofactuprincipalAux.getnumero_decimales_unidad().toString());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARSERIE)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_activar_serie()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARLOTE)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_activar_lote()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONACTIVARMULTIEMPRESA)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_activar_multi_empresa()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCENTROCOSTOS)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_centro_costos()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONUNIDADES)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_unidades()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCUPODISPONIBLE)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_cupo_disponible()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONFORMAPAGO)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_forma_pago()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONENVIOMAIL)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_envio_mail()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONAUTORIZARPROFORMA)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_autorizar_proforma()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONBLOQUEOPEDIDO)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_bloqueo_pedido()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONCONTROLANTICIPO)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_control_anticipo()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONFACTURAAUTO)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_factura_auto()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONGRABARVALORCERO)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_grabar_valor_cero()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONAGREGARITEM)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_agregar_item()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_NUMEROCOPIAS)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(parametrofactuprincipalAux.getnumero_copias().toString());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_LEYENDA)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(parametrofactuprincipalAux.getleyenda());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_CONSINFACTURA)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(parametrofactuprincipalAux.getcon_sin_factura()));
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFLETEVENTA)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(parametrofactuprincipalAux.getcuentacontablefleteventa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEOTROCARGO)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(parametrofactuprincipalAux.getcuentacontableotrocargo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEFINAN)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(parametrofactuprincipalAux.getcuentacontablefinan_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONI)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(parametrofactuprincipalAux.getcuentacontableboni_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEBONIDEVOL)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(parametrofactuprincipalAux.getcuentacontablebonidevol_descripcion());
				}
				 else if(sTipoSeleccionar.equals(ParametroFactuPrincipalConstantesFunciones.LABEL_IDCUENTACONTABLEICE)) {
					existe=true;
					parametrofactuprincipalAux.setsDescripcionGeneralEntityReporte1(parametrofactuprincipalAux.getcuentacontableice_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,ParametroFactuPrincipalConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesParametroFactuPrincipal(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoParametroFactuPrincipal=true;
				this.isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal=true;
				this.isVisibilidadCeldaGuardarCambiosParametroFactuPrincipal=true;
			}
			
			this.isVisibilidadCeldaModificarParametroFactuPrincipal=false;
			this.isVisibilidadCeldaActualizarParametroFactuPrincipal=false;
			this.isVisibilidadCeldaEliminarParametroFactuPrincipal=false;
			this.isVisibilidadCeldaCancelarParametroFactuPrincipal=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuPrincipal=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuPrincipal=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoParametroFactuPrincipal=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuPrincipal=false;
			this.isVisibilidadCeldaModificarParametroFactuPrincipal=false;
			this.isVisibilidadCeldaActualizarParametroFactuPrincipal=true;
			this.isVisibilidadCeldaEliminarParametroFactuPrincipal=false;
			this.isVisibilidadCeldaCancelarParametroFactuPrincipal=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuPrincipal=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuPrincipal=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoParametroFactuPrincipal=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuPrincipal=false;
			this.isVisibilidadCeldaModificarParametroFactuPrincipal=false;
			this.isVisibilidadCeldaActualizarParametroFactuPrincipal=true;
			this.isVisibilidadCeldaEliminarParametroFactuPrincipal=true;
			this.isVisibilidadCeldaCancelarParametroFactuPrincipal=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuPrincipal=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuPrincipal=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoParametroFactuPrincipal=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuPrincipal=false;
			this.isVisibilidadCeldaModificarParametroFactuPrincipal=false;
			this.isVisibilidadCeldaActualizarParametroFactuPrincipal=true;
			this.isVisibilidadCeldaEliminarParametroFactuPrincipal=false;
			this.isVisibilidadCeldaCancelarParametroFactuPrincipal=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuPrincipal=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuPrincipal=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoParametroFactuPrincipal=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal=true;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuPrincipal=true;
			this.isVisibilidadCeldaModificarParametroFactuPrincipal=false;
			this.isVisibilidadCeldaActualizarParametroFactuPrincipal=false;
			this.isVisibilidadCeldaEliminarParametroFactuPrincipal=false;
			this.isVisibilidadCeldaCancelarParametroFactuPrincipal=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuPrincipal=true;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuPrincipal=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoParametroFactuPrincipal=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuPrincipal=false;
			this.isVisibilidadCeldaActualizarParametroFactuPrincipal=false;
			this.isVisibilidadCeldaEliminarParametroFactuPrincipal=false;
			this.isVisibilidadCeldaCancelarParametroFactuPrincipal=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuPrincipal=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuPrincipal=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoParametroFactuPrincipal=false;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuPrincipal=false;
			this.isVisibilidadCeldaModificarParametroFactuPrincipal=true;
			this.isVisibilidadCeldaActualizarParametroFactuPrincipal=false;
			this.isVisibilidadCeldaEliminarParametroFactuPrincipal=false;
			this.isVisibilidadCeldaCancelarParametroFactuPrincipal=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarParametroFactuPrincipal=false;
				} else {
					this.isVisibilidadCeldaGuardarParametroFactuPrincipal=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(ParametroFactuPrincipalJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoParametroFactuPrincipal=true;
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal=true;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuPrincipal=true;
		} else {
			this.actualizarEstadoPanelsParametroFactuPrincipal(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarParametroFactuPrincipal=false;
			//this.isVisibilidadCeldaVerFormParametroFactuPrincipal=false;
			this.isVisibilidadCeldaDuplicarParametroFactuPrincipal=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!parametrofactuprincipalSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal=false;
		} else {
			this.isVisibilidadCeldaNuevoParametroFactuPrincipal=false;
			this.isVisibilidadCeldaGuardarCambiosParametroFactuPrincipal=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
			if(!parametrofactuprincipalSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal=false;												
			}
			
			this.jButtonCerrarParametroFactuPrincipal.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesParametroFactuPrincipal=false;
		}
		
		if(!this.permiteMantenimiento(this.parametrofactuprincipal)) {
			this.isVisibilidadCeldaActualizarParametroFactuPrincipal=false;
			this.isVisibilidadCeldaEliminarParametroFactuPrincipal=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesParametroFactuPrincipal() {
	}
	
	public void actualizarEstadoPanelsParametroFactuPrincipal(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionParametroFactuPrincipal!=null) {
				this.jScrollPanelDatosEdicionParametroFactuPrincipal.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuPrincipal!=null) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuPrincipal!=null) {
				this.jScrollPanelDatosParametroFactuPrincipal.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroFactuPrincipal!=null) {
				this.jPanelPaginacionParametroFactuPrincipal.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroFactuPrincipal!=null) {
				this.jPanelParametrosReportesParametroFactuPrincipal.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionParametroFactuPrincipal!=null) {
				this.jScrollPanelDatosEdicionParametroFactuPrincipal.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuPrincipal!=null) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosParametroFactuPrincipal!=null) {
				this.jScrollPanelDatosParametroFactuPrincipal.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroFactuPrincipal!=null) {
				this.jPanelPaginacionParametroFactuPrincipal.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroFactuPrincipal!=null) {
				this.jPanelParametrosReportesParametroFactuPrincipal.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionParametroFactuPrincipal!=null) {
				this.jScrollPanelDatosEdicionParametroFactuPrincipal.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuPrincipal!=null) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuPrincipal!=null) {
				this.jScrollPanelDatosParametroFactuPrincipal.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroFactuPrincipal!=null) {
				this.jPanelPaginacionParametroFactuPrincipal.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroFactuPrincipal!=null) {
				this.jPanelParametrosReportesParametroFactuPrincipal.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionParametroFactuPrincipal!=null) {
				this.jScrollPanelDatosEdicionParametroFactuPrincipal.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuPrincipal!=null) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuPrincipal!=null) {
				this.jScrollPanelDatosParametroFactuPrincipal.setVisible(false);
			}
			
			if(this.jPanelPaginacionParametroFactuPrincipal!=null) {
				this.jPanelPaginacionParametroFactuPrincipal.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesParametroFactuPrincipal!=null) {
				this.jPanelParametrosReportesParametroFactuPrincipal.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionParametroFactuPrincipal!=null) {
				this.jScrollPanelDatosEdicionParametroFactuPrincipal.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuPrincipal!=null) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuPrincipal!=null) {
				this.jScrollPanelDatosParametroFactuPrincipal.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroFactuPrincipal!=null) {
				this.jPanelPaginacionParametroFactuPrincipal.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroFactuPrincipal!=null) {
				this.jPanelParametrosReportesParametroFactuPrincipal.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionParametroFactuPrincipal!=null) {
				this.jScrollPanelDatosEdicionParametroFactuPrincipal.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuPrincipal!=null) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuPrincipal!=null) {
				this.jScrollPanelDatosParametroFactuPrincipal.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroFactuPrincipal!=null) {
				this.jPanelPaginacionParametroFactuPrincipal.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroFactuPrincipal!=null) {
				this.jPanelParametrosReportesParametroFactuPrincipal.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionParametroFactuPrincipal!=null) {
				this.jScrollPanelDatosEdicionParametroFactuPrincipal.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuPrincipal!=null) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosParametroFactuPrincipal!=null) {
				this.jScrollPanelDatosParametroFactuPrincipal.setVisible(true);
			}
			
			if(this.jPanelPaginacionParametroFactuPrincipal!=null) {
				this.jPanelPaginacionParametroFactuPrincipal.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesParametroFactuPrincipal!=null) {
				this.jPanelParametrosReportesParametroFactuPrincipal.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasParametroFactuPrincipal!=null) {
					this.jTabbedPaneBusquedasParametroFactuPrincipal.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesParametroFactuPrincipal!=null) {
				this.jPanelParametrosReportesParametroFactuPrincipal.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.parametrofactuprincipalSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasParametroFactuPrincipal!=null) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesParametroFactuPrincipal!=null) {
				this.jPanelParametrosReportesParametroFactuPrincipal.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdCuentaContableBoni=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoni) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableBoniDevol=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoniDevol) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniDevolParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFinan=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFinan) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFinanParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFleteVenta=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFleteVenta) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFleteVentaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableIceParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableOtroCargo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtroCargo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableOtroCargoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdFormato=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdFormatoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdLibroContable=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdLibroContable) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdLibroContableParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoFacturaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaDebito=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaDebito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuDescuento=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuDescuento) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuListadoCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuListadoCliente) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdCuentaContableBoni=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoni) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableBoniDevol=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoniDevol) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniDevolParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFinan=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFinan) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFinanParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFleteVenta=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFleteVenta) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFleteVentaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableIceParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableOtroCargo=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtroCargo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableOtroCargoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdFormato=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdFormatoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdLibroContable=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdLibroContable) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdLibroContableParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoFacturaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaDebito=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaDebito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuDescuento=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuDescuento) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuListadoCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuListadoCliente) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoParamFactuDescuento(Boolean isParaTipoParamFactuDescuento){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoParamFactuDescuentoNegation=!isParaTipoParamFactuDescuento;

			this.isVisibilidadFK_IdCuentaContableBoni=isParaTipoParamFactuDescuentoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoni) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableBoniDevol=isParaTipoParamFactuDescuentoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoniDevol) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniDevolParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFinan=isParaTipoParamFactuDescuentoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFinan) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFinanParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFleteVenta=isParaTipoParamFactuDescuentoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFleteVenta) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFleteVentaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaTipoParamFactuDescuentoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableIceParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableOtroCargo=isParaTipoParamFactuDescuentoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtroCargo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableOtroCargoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdFormato=isParaTipoParamFactuDescuentoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdFormatoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdLibroContable=isParaTipoParamFactuDescuentoNegation;
			if(!this.isVisibilidadFK_IdLibroContable) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdLibroContableParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaTipoParamFactuDescuentoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoFacturaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaTipoParamFactuDescuentoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaDebito=isParaTipoParamFactuDescuentoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaDebito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuDescuento=isParaTipoParamFactuDescuento;
			if(!this.isVisibilidadFK_IdTipoParamFactuDescuento) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuListadoCliente=isParaTipoParamFactuDescuentoNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuListadoCliente) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo=isParaTipoParamFactuDescuentoNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoParamFactuListadoCliente(Boolean isParaTipoParamFactuListadoCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoParamFactuListadoClienteNegation=!isParaTipoParamFactuListadoCliente;

			this.isVisibilidadFK_IdCuentaContableBoni=isParaTipoParamFactuListadoClienteNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoni) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableBoniDevol=isParaTipoParamFactuListadoClienteNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoniDevol) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniDevolParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFinan=isParaTipoParamFactuListadoClienteNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFinan) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFinanParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFleteVenta=isParaTipoParamFactuListadoClienteNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFleteVenta) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFleteVentaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaTipoParamFactuListadoClienteNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableIceParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableOtroCargo=isParaTipoParamFactuListadoClienteNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtroCargo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableOtroCargoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdFormato=isParaTipoParamFactuListadoClienteNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdFormatoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdLibroContable=isParaTipoParamFactuListadoClienteNegation;
			if(!this.isVisibilidadFK_IdLibroContable) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdLibroContableParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaTipoParamFactuListadoClienteNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoFacturaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaTipoParamFactuListadoClienteNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaDebito=isParaTipoParamFactuListadoClienteNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaDebito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuDescuento=isParaTipoParamFactuListadoClienteNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuDescuento) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuListadoCliente=isParaTipoParamFactuListadoCliente;
			if(!this.isVisibilidadFK_IdTipoParamFactuListadoCliente) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo=isParaTipoParamFactuListadoClienteNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoParamFactuSecuenciaTrabajo(Boolean isParaTipoParamFactuSecuenciaTrabajo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoParamFactuSecuenciaTrabajoNegation=!isParaTipoParamFactuSecuenciaTrabajo;

			this.isVisibilidadFK_IdCuentaContableBoni=isParaTipoParamFactuSecuenciaTrabajoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoni) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableBoniDevol=isParaTipoParamFactuSecuenciaTrabajoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoniDevol) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniDevolParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFinan=isParaTipoParamFactuSecuenciaTrabajoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFinan) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFinanParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFleteVenta=isParaTipoParamFactuSecuenciaTrabajoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFleteVenta) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFleteVentaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaTipoParamFactuSecuenciaTrabajoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableIceParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableOtroCargo=isParaTipoParamFactuSecuenciaTrabajoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtroCargo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableOtroCargoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdFormato=isParaTipoParamFactuSecuenciaTrabajoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdFormatoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdLibroContable=isParaTipoParamFactuSecuenciaTrabajoNegation;
			if(!this.isVisibilidadFK_IdLibroContable) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdLibroContableParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaTipoParamFactuSecuenciaTrabajoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoFacturaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaTipoParamFactuSecuenciaTrabajoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaDebito=isParaTipoParamFactuSecuenciaTrabajoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaDebito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuDescuento=isParaTipoParamFactuSecuenciaTrabajoNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuDescuento) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuListadoCliente=isParaTipoParamFactuSecuenciaTrabajoNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuListadoCliente) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo=isParaTipoParamFactuSecuenciaTrabajo;
			if(!this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoDocumentoFactura(Boolean isParaTipoDocumentoFactura){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoDocumentoFacturaNegation=!isParaTipoDocumentoFactura;

			this.isVisibilidadFK_IdCuentaContableBoni=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoni) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableBoniDevol=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoniDevol) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniDevolParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFinan=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFinan) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFinanParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFleteVenta=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFleteVenta) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFleteVentaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableIceParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableOtroCargo=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtroCargo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableOtroCargoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdFormato=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdFormatoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdLibroContable=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdLibroContable) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdLibroContableParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaTipoDocumentoFactura;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoFacturaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaDebito=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaDebito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuDescuento=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuDescuento) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuListadoCliente=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuListadoCliente) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo=isParaTipoDocumentoFacturaNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoDocumentoNotaCredito(Boolean isParaTipoDocumentoNotaCredito){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoDocumentoNotaCreditoNegation=!isParaTipoDocumentoNotaCredito;

			this.isVisibilidadFK_IdCuentaContableBoni=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoni) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableBoniDevol=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoniDevol) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniDevolParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFinan=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFinan) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFinanParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFleteVenta=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFleteVenta) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFleteVentaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableIceParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableOtroCargo=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtroCargo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableOtroCargoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdFormato=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdFormatoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdLibroContable=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdLibroContable) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdLibroContableParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoFacturaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaTipoDocumentoNotaCredito;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaDebito=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaDebito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuDescuento=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuDescuento) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuListadoCliente=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuListadoCliente) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo=isParaTipoDocumentoNotaCreditoNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoDocumentoNotaDebito(Boolean isParaTipoDocumentoNotaDebito){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoDocumentoNotaDebitoNegation=!isParaTipoDocumentoNotaDebito;

			this.isVisibilidadFK_IdCuentaContableBoni=isParaTipoDocumentoNotaDebitoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoni) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableBoniDevol=isParaTipoDocumentoNotaDebitoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoniDevol) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniDevolParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFinan=isParaTipoDocumentoNotaDebitoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFinan) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFinanParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFleteVenta=isParaTipoDocumentoNotaDebitoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFleteVenta) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFleteVentaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaTipoDocumentoNotaDebitoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableIceParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableOtroCargo=isParaTipoDocumentoNotaDebitoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtroCargo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableOtroCargoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdFormato=isParaTipoDocumentoNotaDebitoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdFormatoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdLibroContable=isParaTipoDocumentoNotaDebitoNegation;
			if(!this.isVisibilidadFK_IdLibroContable) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdLibroContableParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaTipoDocumentoNotaDebitoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoFacturaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaTipoDocumentoNotaDebitoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaDebito=isParaTipoDocumentoNotaDebito;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaDebito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuDescuento=isParaTipoDocumentoNotaDebitoNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuDescuento) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuListadoCliente=isParaTipoDocumentoNotaDebitoNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuListadoCliente) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo=isParaTipoDocumentoNotaDebitoNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);}
		}
		
	}

	public void setVisibilidadBusquedasParaLibroContable(Boolean isParaLibroContable){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaLibroContableNegation=!isParaLibroContable;

			this.isVisibilidadFK_IdCuentaContableBoni=isParaLibroContableNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoni) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableBoniDevol=isParaLibroContableNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoniDevol) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniDevolParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFinan=isParaLibroContableNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFinan) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFinanParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFleteVenta=isParaLibroContableNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFleteVenta) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFleteVentaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaLibroContableNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableIceParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableOtroCargo=isParaLibroContableNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtroCargo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableOtroCargoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdFormato=isParaLibroContableNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdFormatoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdLibroContable=isParaLibroContable;
			if(!this.isVisibilidadFK_IdLibroContable) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdLibroContableParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaLibroContableNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoFacturaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaLibroContableNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaDebito=isParaLibroContableNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaDebito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuDescuento=isParaLibroContableNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuDescuento) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuListadoCliente=isParaLibroContableNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuListadoCliente) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo=isParaLibroContableNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);}
		}
		
	}

	public void setVisibilidadBusquedasParaMoneda(Boolean isParaMoneda){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMonedaNegation=!isParaMoneda;

			this.isVisibilidadFK_IdCuentaContableBoni=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoni) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableBoniDevol=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoniDevol) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniDevolParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFinan=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFinan) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFinanParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFleteVenta=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFleteVenta) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFleteVentaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableIceParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableOtroCargo=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtroCargo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableOtroCargoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdFormato=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdFormatoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdLibroContable=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdLibroContable) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdLibroContableParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoFacturaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaDebito=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaDebito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuDescuento=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuDescuento) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuListadoCliente=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuListadoCliente) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);}
		}
		
	}

	public void setVisibilidadBusquedasParaFormato(Boolean isParaFormato){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFormatoNegation=!isParaFormato;

			this.isVisibilidadFK_IdCuentaContableBoni=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoni) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableBoniDevol=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoniDevol) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniDevolParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFinan=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFinan) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFinanParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFleteVenta=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFleteVenta) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFleteVentaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableIceParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableOtroCargo=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtroCargo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableOtroCargoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdFormato=isParaFormato;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdFormatoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdLibroContable=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdLibroContable) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdLibroContableParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoFacturaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaDebito=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaDebito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuDescuento=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuDescuento) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuListadoCliente=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuListadoCliente) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableFleteVenta(Boolean isParaCuentaContableFleteVenta){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableFleteVentaNegation=!isParaCuentaContableFleteVenta;

			this.isVisibilidadFK_IdCuentaContableBoni=isParaCuentaContableFleteVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoni) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableBoniDevol=isParaCuentaContableFleteVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoniDevol) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniDevolParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFinan=isParaCuentaContableFleteVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFinan) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFinanParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFleteVenta=isParaCuentaContableFleteVenta;
			if(!this.isVisibilidadFK_IdCuentaContableFleteVenta) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFleteVentaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaCuentaContableFleteVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableIceParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableOtroCargo=isParaCuentaContableFleteVentaNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtroCargo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableOtroCargoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdFormato=isParaCuentaContableFleteVentaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdFormatoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdLibroContable=isParaCuentaContableFleteVentaNegation;
			if(!this.isVisibilidadFK_IdLibroContable) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdLibroContableParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaCuentaContableFleteVentaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoFacturaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaCuentaContableFleteVentaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaDebito=isParaCuentaContableFleteVentaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaDebito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuDescuento=isParaCuentaContableFleteVentaNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuDescuento) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuListadoCliente=isParaCuentaContableFleteVentaNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuListadoCliente) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo=isParaCuentaContableFleteVentaNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableOtroCargo(Boolean isParaCuentaContableOtroCargo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableOtroCargoNegation=!isParaCuentaContableOtroCargo;

			this.isVisibilidadFK_IdCuentaContableBoni=isParaCuentaContableOtroCargoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoni) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableBoniDevol=isParaCuentaContableOtroCargoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoniDevol) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniDevolParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFinan=isParaCuentaContableOtroCargoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFinan) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFinanParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFleteVenta=isParaCuentaContableOtroCargoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFleteVenta) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFleteVentaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaCuentaContableOtroCargoNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableIceParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableOtroCargo=isParaCuentaContableOtroCargo;
			if(!this.isVisibilidadFK_IdCuentaContableOtroCargo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableOtroCargoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdFormato=isParaCuentaContableOtroCargoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdFormatoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdLibroContable=isParaCuentaContableOtroCargoNegation;
			if(!this.isVisibilidadFK_IdLibroContable) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdLibroContableParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaCuentaContableOtroCargoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoFacturaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaCuentaContableOtroCargoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaDebito=isParaCuentaContableOtroCargoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaDebito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuDescuento=isParaCuentaContableOtroCargoNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuDescuento) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuListadoCliente=isParaCuentaContableOtroCargoNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuListadoCliente) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo=isParaCuentaContableOtroCargoNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableFinan(Boolean isParaCuentaContableFinan){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableFinanNegation=!isParaCuentaContableFinan;

			this.isVisibilidadFK_IdCuentaContableBoni=isParaCuentaContableFinanNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoni) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableBoniDevol=isParaCuentaContableFinanNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoniDevol) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniDevolParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFinan=isParaCuentaContableFinan;
			if(!this.isVisibilidadFK_IdCuentaContableFinan) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFinanParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFleteVenta=isParaCuentaContableFinanNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFleteVenta) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFleteVentaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaCuentaContableFinanNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableIceParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableOtroCargo=isParaCuentaContableFinanNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtroCargo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableOtroCargoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdFormato=isParaCuentaContableFinanNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdFormatoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdLibroContable=isParaCuentaContableFinanNegation;
			if(!this.isVisibilidadFK_IdLibroContable) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdLibroContableParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaCuentaContableFinanNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoFacturaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaCuentaContableFinanNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaDebito=isParaCuentaContableFinanNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaDebito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuDescuento=isParaCuentaContableFinanNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuDescuento) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuListadoCliente=isParaCuentaContableFinanNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuListadoCliente) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo=isParaCuentaContableFinanNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableBoni(Boolean isParaCuentaContableBoni){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableBoniNegation=!isParaCuentaContableBoni;

			this.isVisibilidadFK_IdCuentaContableBoni=isParaCuentaContableBoni;
			if(!this.isVisibilidadFK_IdCuentaContableBoni) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableBoniDevol=isParaCuentaContableBoniNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoniDevol) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniDevolParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFinan=isParaCuentaContableBoniNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFinan) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFinanParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFleteVenta=isParaCuentaContableBoniNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFleteVenta) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFleteVentaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaCuentaContableBoniNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableIceParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableOtroCargo=isParaCuentaContableBoniNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtroCargo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableOtroCargoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdFormato=isParaCuentaContableBoniNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdFormatoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdLibroContable=isParaCuentaContableBoniNegation;
			if(!this.isVisibilidadFK_IdLibroContable) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdLibroContableParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaCuentaContableBoniNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoFacturaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaCuentaContableBoniNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaDebito=isParaCuentaContableBoniNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaDebito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuDescuento=isParaCuentaContableBoniNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuDescuento) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuListadoCliente=isParaCuentaContableBoniNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuListadoCliente) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo=isParaCuentaContableBoniNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableBoniDevol(Boolean isParaCuentaContableBoniDevol){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableBoniDevolNegation=!isParaCuentaContableBoniDevol;

			this.isVisibilidadFK_IdCuentaContableBoni=isParaCuentaContableBoniDevolNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoni) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableBoniDevol=isParaCuentaContableBoniDevol;
			if(!this.isVisibilidadFK_IdCuentaContableBoniDevol) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniDevolParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFinan=isParaCuentaContableBoniDevolNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFinan) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFinanParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFleteVenta=isParaCuentaContableBoniDevolNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFleteVenta) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFleteVentaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaCuentaContableBoniDevolNegation;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableIceParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableOtroCargo=isParaCuentaContableBoniDevolNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtroCargo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableOtroCargoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdFormato=isParaCuentaContableBoniDevolNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdFormatoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdLibroContable=isParaCuentaContableBoniDevolNegation;
			if(!this.isVisibilidadFK_IdLibroContable) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdLibroContableParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaCuentaContableBoniDevolNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoFacturaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaCuentaContableBoniDevolNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaDebito=isParaCuentaContableBoniDevolNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaDebito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuDescuento=isParaCuentaContableBoniDevolNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuDescuento) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuListadoCliente=isParaCuentaContableBoniDevolNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuListadoCliente) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo=isParaCuentaContableBoniDevolNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContableIce(Boolean isParaCuentaContableIce){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableIceNegation=!isParaCuentaContableIce;

			this.isVisibilidadFK_IdCuentaContableBoni=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoni) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableBoniDevol=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdCuentaContableBoniDevol) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableBoniDevolParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFinan=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFinan) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFinanParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableFleteVenta=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdCuentaContableFleteVenta) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableFleteVentaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableIce=isParaCuentaContableIce;
			if(!this.isVisibilidadFK_IdCuentaContableIce) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableIceParametroFactuPrincipal);}

			this.isVisibilidadFK_IdCuentaContableOtroCargo=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdCuentaContableOtroCargo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdCuentaContableOtroCargoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdFormato=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdFormatoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdLibroContable=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdLibroContable) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdLibroContableParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoFactura=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoFactura) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoFacturaParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaCredito=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaCredito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoDocumentoNotaDebito=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdTipoDocumentoNotaDebito) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuDescuento=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuDescuento) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuListadoCliente=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuListadoCliente) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);}

			this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo=isParaCuentaContableIceNegation;
			if(!this.isVisibilidadFK_IdTipoParamFactuSecuenciaTrabajo) {this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(jPanelFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);}
		}
		
	}
	
	
	
	

	public String registrarSesionParametroFactuPrincipalParaBusquedaCuentaContableFleteVentas() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(parametrofactuprincipalSessionBean==null) {
				parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(cuentacontablefleteventaSessionBean==null) {
				cuentacontablefleteventaSessionBean=new CuentaContableSessionBean();
			}

			cuentacontablefleteventaSessionBean.setsPathNavegacionActual(parametrofactuprincipalSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontablefleteventaSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontablefleteventaSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontablefleteventaSessionBean.getisPaginaPopup();
			cuentacontablefleteventaSessionBean.setisPaginaPopup(false);
			cuentacontablefleteventaSessionBean.setEstaModoBusqueda(true);
			cuentacontablefleteventaSessionBean.setsFuncionBusquedaRapida("window.opener.parametrofactuprincipalFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_flete_venta(TO_REPLACE);");
			cuentacontablefleteventaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontablefleteventaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ParametroFactuPrincipalConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionParametroFactuPrincipal(true);
			//cuentacontableSessionBean.setlidParametroFactuPrincipalActual(this.idParametroFactuPrincipalActual);

			parametrofactuprincipalSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroFactuPrincipal(true);
			parametrofactuprincipalSessionBean.setlIdParametroFactuPrincipalActualForeignKey(this.idParametroFactuPrincipalActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionParametroFactuPrincipalParaBusquedaCuentaContableOtroCargos() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(parametrofactuprincipalSessionBean==null) {
				parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(cuentacontableotrocargoSessionBean==null) {
				cuentacontableotrocargoSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableotrocargoSessionBean.setsPathNavegacionActual(parametrofactuprincipalSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableotrocargoSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableotrocargoSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableotrocargoSessionBean.getisPaginaPopup();
			cuentacontableotrocargoSessionBean.setisPaginaPopup(false);
			cuentacontableotrocargoSessionBean.setEstaModoBusqueda(true);
			cuentacontableotrocargoSessionBean.setsFuncionBusquedaRapida("window.opener.parametrofactuprincipalFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_otro_cargo(TO_REPLACE);");
			cuentacontableotrocargoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableotrocargoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ParametroFactuPrincipalConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionParametroFactuPrincipal(true);
			//cuentacontableSessionBean.setlidParametroFactuPrincipalActual(this.idParametroFactuPrincipalActual);

			parametrofactuprincipalSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroFactuPrincipal(true);
			parametrofactuprincipalSessionBean.setlIdParametroFactuPrincipalActualForeignKey(this.idParametroFactuPrincipalActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionParametroFactuPrincipalParaBusquedaCuentaContableFinans() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(parametrofactuprincipalSessionBean==null) {
				parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(cuentacontablefinanSessionBean==null) {
				cuentacontablefinanSessionBean=new CuentaContableSessionBean();
			}

			cuentacontablefinanSessionBean.setsPathNavegacionActual(parametrofactuprincipalSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontablefinanSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontablefinanSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontablefinanSessionBean.getisPaginaPopup();
			cuentacontablefinanSessionBean.setisPaginaPopup(false);
			cuentacontablefinanSessionBean.setEstaModoBusqueda(true);
			cuentacontablefinanSessionBean.setsFuncionBusquedaRapida("window.opener.parametrofactuprincipalFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_finan(TO_REPLACE);");
			cuentacontablefinanSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontablefinanSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ParametroFactuPrincipalConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionParametroFactuPrincipal(true);
			//cuentacontableSessionBean.setlidParametroFactuPrincipalActual(this.idParametroFactuPrincipalActual);

			parametrofactuprincipalSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroFactuPrincipal(true);
			parametrofactuprincipalSessionBean.setlIdParametroFactuPrincipalActualForeignKey(this.idParametroFactuPrincipalActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionParametroFactuPrincipalParaBusquedaCuentaContableBonis() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(parametrofactuprincipalSessionBean==null) {
				parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(cuentacontableboniSessionBean==null) {
				cuentacontableboniSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableboniSessionBean.setsPathNavegacionActual(parametrofactuprincipalSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableboniSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableboniSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableboniSessionBean.getisPaginaPopup();
			cuentacontableboniSessionBean.setisPaginaPopup(false);
			cuentacontableboniSessionBean.setEstaModoBusqueda(true);
			cuentacontableboniSessionBean.setsFuncionBusquedaRapida("window.opener.parametrofactuprincipalFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_boni(TO_REPLACE);");
			cuentacontableboniSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableboniSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ParametroFactuPrincipalConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionParametroFactuPrincipal(true);
			//cuentacontableSessionBean.setlidParametroFactuPrincipalActual(this.idParametroFactuPrincipalActual);

			parametrofactuprincipalSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroFactuPrincipal(true);
			parametrofactuprincipalSessionBean.setlIdParametroFactuPrincipalActualForeignKey(this.idParametroFactuPrincipalActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionParametroFactuPrincipalParaBusquedaCuentaContableBoniDevols() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(parametrofactuprincipalSessionBean==null) {
				parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(cuentacontablebonidevolSessionBean==null) {
				cuentacontablebonidevolSessionBean=new CuentaContableSessionBean();
			}

			cuentacontablebonidevolSessionBean.setsPathNavegacionActual(parametrofactuprincipalSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontablebonidevolSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontablebonidevolSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontablebonidevolSessionBean.getisPaginaPopup();
			cuentacontablebonidevolSessionBean.setisPaginaPopup(false);
			cuentacontablebonidevolSessionBean.setEstaModoBusqueda(true);
			cuentacontablebonidevolSessionBean.setsFuncionBusquedaRapida("window.opener.parametrofactuprincipalFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_boni_devol(TO_REPLACE);");
			cuentacontablebonidevolSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontablebonidevolSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ParametroFactuPrincipalConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionParametroFactuPrincipal(true);
			//cuentacontableSessionBean.setlidParametroFactuPrincipalActual(this.idParametroFactuPrincipalActual);

			parametrofactuprincipalSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroFactuPrincipal(true);
			parametrofactuprincipalSessionBean.setlIdParametroFactuPrincipalActualForeignKey(this.idParametroFactuPrincipalActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionParametroFactuPrincipalParaBusquedaCuentaContableIces() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(parametrofactuprincipalSessionBean==null) {
				parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
			}

			if(cuentacontableiceSessionBean==null) {
				cuentacontableiceSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableiceSessionBean.setsPathNavegacionActual(parametrofactuprincipalSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableiceSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableiceSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableiceSessionBean.getisPaginaPopup();
			cuentacontableiceSessionBean.setisPaginaPopup(false);
			cuentacontableiceSessionBean.setEstaModoBusqueda(true);
			cuentacontableiceSessionBean.setsFuncionBusquedaRapida("window.opener.parametrofactuprincipalFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable_ice(TO_REPLACE);");
			cuentacontableiceSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableiceSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(ParametroFactuPrincipalConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionParametroFactuPrincipal(true);
			//cuentacontableSessionBean.setlidParametroFactuPrincipalActual(this.idParametroFactuPrincipalActual);

			parametrofactuprincipalSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyParametroFactuPrincipal(true);
			parametrofactuprincipalSessionBean.setlIdParametroFactuPrincipalActualForeignKey(this.idParametroFactuPrincipalActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//ParametroFactuPrincipalSessionBean parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
		
		if(this.parametrofactuprincipalSessionBean==null) {
			this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
		}
		
		this.parametrofactuprincipalSessionBean.setsUltimaBusquedaParametroFactuPrincipal(this.getsAccionBusqueda());
		this.parametrofactuprincipalSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.parametrofactuprincipalSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableBoni")) {
			parametrofactuprincipalSessionBean.setid_cuenta_contable_boni(this.getid_cuenta_contable_boniFK_IdCuentaContableBoni());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableBoniDevol")) {
			parametrofactuprincipalSessionBean.setid_cuenta_contable_boni_devol(this.getid_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevol());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableFinan")) {
			parametrofactuprincipalSessionBean.setid_cuenta_contable_finan(this.getid_cuenta_contable_finanFK_IdCuentaContableFinan());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableFleteVenta")) {
			parametrofactuprincipalSessionBean.setid_cuenta_contable_flete_venta(this.getid_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVenta());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableIce")) {
			parametrofactuprincipalSessionBean.setid_cuenta_contable_ice(this.getid_cuenta_contable_iceFK_IdCuentaContableIce());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableOtroCargo")) {
			parametrofactuprincipalSessionBean.setid_cuenta_contable_otro_cargo(this.getid_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			parametrofactuprincipalSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdFormato")) {
			parametrofactuprincipalSessionBean.setid_formato(this.getid_formatoFK_IdFormato());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdLibroContable")) {
			parametrofactuprincipalSessionBean.setid_libro_contable(this.getid_libro_contableFK_IdLibroContable());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdMoneda")) {
			parametrofactuprincipalSessionBean.setid_moneda(this.getid_monedaFK_IdMoneda());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			parametrofactuprincipalSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoDocumentoFactura")) {
			parametrofactuprincipalSessionBean.setid_tipo_documento_factura(this.getid_tipo_documento_facturaFK_IdTipoDocumentoFactura());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoDocumentoNotaCredito")) {
			parametrofactuprincipalSessionBean.setid_tipo_documento_nota_credito(this.getid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoDocumentoNotaDebito")) {
			parametrofactuprincipalSessionBean.setid_tipo_documento_nota_debito(this.getid_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebito());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoParamFactuDescuento")) {
			parametrofactuprincipalSessionBean.setid_tipo_param_factu_descuento(this.getid_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuento());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoParamFactuListadoCliente")) {
			parametrofactuprincipalSessionBean.setid_tipo_param_factu_listado_cliente(this.getid_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoParamFactuSecuenciaTrabajo")) {
			parametrofactuprincipalSessionBean.setid_tipo_param_factu_secuencia_trabajo(this.getid_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajo());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//ParametroFactuPrincipalSessionBean parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
		
		if(this.parametrofactuprincipalSessionBean==null) {
			this.parametrofactuprincipalSessionBean=new ParametroFactuPrincipalSessionBean();
		}
		
		if(this.parametrofactuprincipalSessionBean.getsUltimaBusquedaParametroFactuPrincipal()!=null&&!this.parametrofactuprincipalSessionBean.getsUltimaBusquedaParametroFactuPrincipal().equals("")) {
			this.setsAccionBusqueda(parametrofactuprincipalSessionBean.getsUltimaBusquedaParametroFactuPrincipal());
			this.setiNumeroPaginacion(parametrofactuprincipalSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(parametrofactuprincipalSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableBoni")) {
				this.setid_cuenta_contable_boniFK_IdCuentaContableBoni(parametrofactuprincipalSessionBean.getid_cuenta_contable_boni());
				parametrofactuprincipalSessionBean.setid_cuenta_contable_boni(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableBoniDevol")) {
				this.setid_cuenta_contable_boni_devolFK_IdCuentaContableBoniDevol(parametrofactuprincipalSessionBean.getid_cuenta_contable_boni_devol());
				parametrofactuprincipalSessionBean.setid_cuenta_contable_boni_devol(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableFinan")) {
				this.setid_cuenta_contable_finanFK_IdCuentaContableFinan(parametrofactuprincipalSessionBean.getid_cuenta_contable_finan());
				parametrofactuprincipalSessionBean.setid_cuenta_contable_finan(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableFleteVenta")) {
				this.setid_cuenta_contable_flete_ventaFK_IdCuentaContableFleteVenta(parametrofactuprincipalSessionBean.getid_cuenta_contable_flete_venta());
				parametrofactuprincipalSessionBean.setid_cuenta_contable_flete_venta(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableIce")) {
				this.setid_cuenta_contable_iceFK_IdCuentaContableIce(parametrofactuprincipalSessionBean.getid_cuenta_contable_ice());
				parametrofactuprincipalSessionBean.setid_cuenta_contable_ice(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCuentaContableOtroCargo")) {
				this.setid_cuenta_contable_otro_cargoFK_IdCuentaContableOtroCargo(parametrofactuprincipalSessionBean.getid_cuenta_contable_otro_cargo());
				parametrofactuprincipalSessionBean.setid_cuenta_contable_otro_cargo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(parametrofactuprincipalSessionBean.getid_empresa());
				parametrofactuprincipalSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdFormato")) {
				this.setid_formatoFK_IdFormato(parametrofactuprincipalSessionBean.getid_formato());
				parametrofactuprincipalSessionBean.setid_formato(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdLibroContable")) {
				this.setid_libro_contableFK_IdLibroContable(parametrofactuprincipalSessionBean.getid_libro_contable());
				parametrofactuprincipalSessionBean.setid_libro_contable(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdMoneda")) {
				this.setid_monedaFK_IdMoneda(parametrofactuprincipalSessionBean.getid_moneda());
				parametrofactuprincipalSessionBean.setid_moneda(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(parametrofactuprincipalSessionBean.getid_sucursal());
				parametrofactuprincipalSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoDocumentoFactura")) {
				this.setid_tipo_documento_facturaFK_IdTipoDocumentoFactura(parametrofactuprincipalSessionBean.getid_tipo_documento_factura());
				parametrofactuprincipalSessionBean.setid_tipo_documento_factura(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoDocumentoNotaCredito")) {
				this.setid_tipo_documento_nota_creditoFK_IdTipoDocumentoNotaCredito(parametrofactuprincipalSessionBean.getid_tipo_documento_nota_credito());
				parametrofactuprincipalSessionBean.setid_tipo_documento_nota_credito(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoDocumentoNotaDebito")) {
				this.setid_tipo_documento_nota_debitoFK_IdTipoDocumentoNotaDebito(parametrofactuprincipalSessionBean.getid_tipo_documento_nota_debito());
				parametrofactuprincipalSessionBean.setid_tipo_documento_nota_debito(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoParamFactuDescuento")) {
				this.setid_tipo_param_factu_descuentoFK_IdTipoParamFactuDescuento(parametrofactuprincipalSessionBean.getid_tipo_param_factu_descuento());
				parametrofactuprincipalSessionBean.setid_tipo_param_factu_descuento(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoParamFactuListadoCliente")) {
				this.setid_tipo_param_factu_listado_clienteFK_IdTipoParamFactuListadoCliente(parametrofactuprincipalSessionBean.getid_tipo_param_factu_listado_cliente());
				parametrofactuprincipalSessionBean.setid_tipo_param_factu_listado_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoParamFactuSecuenciaTrabajo")) {
				this.setid_tipo_param_factu_secuencia_trabajoFK_IdTipoParamFactuSecuenciaTrabajo(parametrofactuprincipalSessionBean.getid_tipo_param_factu_secuencia_trabajo());
				parametrofactuprincipalSessionBean.setid_tipo_param_factu_secuencia_trabajo(-1L);
			}
		}
		
		this.parametrofactuprincipalSessionBean.setsUltimaBusquedaParametroFactuPrincipal("");
		this.parametrofactuprincipalSessionBean.setiNumeroPaginacion(ParametroFactuPrincipalConstantesFunciones.INUMEROPAGINACION);
		this.parametrofactuprincipalSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaParametroFactuPrincipal(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioParametroFactuPrincipal() {
		this.updateBorderResaltarBusquedasFormularioParametroFactuPrincipal();
		this.updateVisibilidadBusquedasFormularioParametroFactuPrincipal();
		this.updateHabilitarBusquedasFormularioParametroFactuPrincipal();
	}
	
	public void updateBorderResaltarBusquedasFormularioParametroFactuPrincipal() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponents().length>0) {
	

		if(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdCuentaContableBoniParametroFactuPrincipal!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableBoniParametroFactuPrincipal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdCuentaContableBoniParametroFactuPrincipal);
			}
		}

		if(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdCuentaContableBoniDevolParametroFactuPrincipal!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableBoniDevolParametroFactuPrincipal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdCuentaContableBoniDevolParametroFactuPrincipal);
			}
		}

		if(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdCuentaContableFinanParametroFactuPrincipal!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableFinanParametroFactuPrincipal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdCuentaContableFinanParametroFactuPrincipal);
			}
		}

		if(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdCuentaContableFleteVentaParametroFactuPrincipal!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableFleteVentaParametroFactuPrincipal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdCuentaContableFleteVentaParametroFactuPrincipal);
			}
		}

		if(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdCuentaContableIceParametroFactuPrincipal!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableIceParametroFactuPrincipal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdCuentaContableIceParametroFactuPrincipal);
			}
		}

		if(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdCuentaContableOtroCargoParametroFactuPrincipal!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableOtroCargoParametroFactuPrincipal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdCuentaContableOtroCargoParametroFactuPrincipal);
			}
		}

		if(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdFormatoParametroFactuPrincipal!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdFormatoParametroFactuPrincipal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdFormatoParametroFactuPrincipal);
			}
		}

		if(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdLibroContableParametroFactuPrincipal!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdLibroContableParametroFactuPrincipal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdLibroContableParametroFactuPrincipal);
			}
		}

		if(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdTipoDocumentoFacturaParametroFactuPrincipal!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoDocumentoFacturaParametroFactuPrincipal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdTipoDocumentoFacturaParametroFactuPrincipal);
			}
		}

		if(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);
			}
		}

		if(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);
			}
		}

		if(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdTipoParamFactuDescuentoParametroFactuPrincipal!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);
			}
		}

		if(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);
			}
		}

		if(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal!=null) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioParametroFactuPrincipal() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableBoniParametroFactuPrincipal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdCuentaContableBoniParametroFactuPrincipal);
			if(!this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdCuentaContableBoniParametroFactuPrincipal && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableBoniDevolParametroFactuPrincipal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdCuentaContableBoniDevolParametroFactuPrincipal);
			if(!this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdCuentaContableBoniDevolParametroFactuPrincipal && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableFinanParametroFactuPrincipal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdCuentaContableFinanParametroFactuPrincipal);
			if(!this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdCuentaContableFinanParametroFactuPrincipal && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableFleteVentaParametroFactuPrincipal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdCuentaContableFleteVentaParametroFactuPrincipal);
			if(!this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdCuentaContableFleteVentaParametroFactuPrincipal && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableIceParametroFactuPrincipal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdCuentaContableIceParametroFactuPrincipal);
			if(!this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdCuentaContableIceParametroFactuPrincipal && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableOtroCargoParametroFactuPrincipal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdCuentaContableOtroCargoParametroFactuPrincipal);
			if(!this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdCuentaContableOtroCargoParametroFactuPrincipal && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdFormatoParametroFactuPrincipal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdFormatoParametroFactuPrincipal);
			if(!this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdFormatoParametroFactuPrincipal && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdLibroContableParametroFactuPrincipal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdLibroContableParametroFactuPrincipal);
			if(!this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdLibroContableParametroFactuPrincipal && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoDocumentoFacturaParametroFactuPrincipal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdTipoDocumentoFacturaParametroFactuPrincipal);
			if(!this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdTipoDocumentoFacturaParametroFactuPrincipal && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);
			if(!this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);
			if(!this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);
			if(!this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdTipoParamFactuDescuentoParametroFactuPrincipal && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);
			if(!this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(index);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);
			jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);
			if(!this.parametrofactuprincipalConstantesFunciones.mostrarFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal && index>-1) {
				this.jTabbedPaneBusquedasParametroFactuPrincipal.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioParametroFactuPrincipal() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableBoniParametroFactuPrincipal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarFK_IdCuentaContableBoniParametroFactuPrincipal);
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setEnabledAt(index,this.parametrofactuprincipalConstantesFunciones.activarFK_IdCuentaContableBoniParametroFactuPrincipal);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableBoniDevolParametroFactuPrincipal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarFK_IdCuentaContableBoniDevolParametroFactuPrincipal);
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setEnabledAt(index,this.parametrofactuprincipalConstantesFunciones.activarFK_IdCuentaContableBoniDevolParametroFactuPrincipal);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableFinanParametroFactuPrincipal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarFK_IdCuentaContableFinanParametroFactuPrincipal);
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setEnabledAt(index,this.parametrofactuprincipalConstantesFunciones.activarFK_IdCuentaContableFinanParametroFactuPrincipal);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableFleteVentaParametroFactuPrincipal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarFK_IdCuentaContableFleteVentaParametroFactuPrincipal);
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setEnabledAt(index,this.parametrofactuprincipalConstantesFunciones.activarFK_IdCuentaContableFleteVentaParametroFactuPrincipal);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableIceParametroFactuPrincipal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarFK_IdCuentaContableIceParametroFactuPrincipal);
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setEnabledAt(index,this.parametrofactuprincipalConstantesFunciones.activarFK_IdCuentaContableIceParametroFactuPrincipal);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableOtroCargoParametroFactuPrincipal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarFK_IdCuentaContableOtroCargoParametroFactuPrincipal);
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setEnabledAt(index,this.parametrofactuprincipalConstantesFunciones.activarFK_IdCuentaContableOtroCargoParametroFactuPrincipal);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdFormatoParametroFactuPrincipal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarFK_IdFormatoParametroFactuPrincipal);
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setEnabledAt(index,this.parametrofactuprincipalConstantesFunciones.activarFK_IdFormatoParametroFactuPrincipal);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdLibroContableParametroFactuPrincipal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarFK_IdLibroContableParametroFactuPrincipal);
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setEnabledAt(index,this.parametrofactuprincipalConstantesFunciones.activarFK_IdLibroContableParametroFactuPrincipal);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoDocumentoFacturaParametroFactuPrincipal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarFK_IdTipoDocumentoFacturaParametroFactuPrincipal);
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setEnabledAt(index,this.parametrofactuprincipalConstantesFunciones.activarFK_IdTipoDocumentoFacturaParametroFactuPrincipal);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setEnabledAt(index,this.parametrofactuprincipalConstantesFunciones.activarFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setEnabledAt(index,this.parametrofactuprincipalConstantesFunciones.activarFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setEnabledAt(index,this.parametrofactuprincipalConstantesFunciones.activarFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setEnabledAt(index,this.parametrofactuprincipalConstantesFunciones.activarFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);
			}

			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);
				this.jTabbedPaneBusquedasParametroFactuPrincipal.setEnabledAt(index,this.parametrofactuprincipalConstantesFunciones.activarFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaParametroFactuPrincipal(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdCuentaContableBoni")) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableBoniParametroFactuPrincipal);

			this.jTabbedPaneBusquedasParametroFactuPrincipal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);

			this.parametrofactuprincipalConstantesFunciones.setResaltarFK_IdCuentaContableBoniParametroFactuPrincipal(resaltar);

			jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdCuentaContableBoniParametroFactuPrincipal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableBoniDevol")) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableBoniDevolParametroFactuPrincipal);

			this.jTabbedPaneBusquedasParametroFactuPrincipal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);

			this.parametrofactuprincipalConstantesFunciones.setResaltarFK_IdCuentaContableBoniDevolParametroFactuPrincipal(resaltar);

			jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdCuentaContableBoniDevolParametroFactuPrincipal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableFinan")) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableFinanParametroFactuPrincipal);

			this.jTabbedPaneBusquedasParametroFactuPrincipal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);

			this.parametrofactuprincipalConstantesFunciones.setResaltarFK_IdCuentaContableFinanParametroFactuPrincipal(resaltar);

			jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdCuentaContableFinanParametroFactuPrincipal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableFleteVenta")) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableFleteVentaParametroFactuPrincipal);

			this.jTabbedPaneBusquedasParametroFactuPrincipal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);

			this.parametrofactuprincipalConstantesFunciones.setResaltarFK_IdCuentaContableFleteVentaParametroFactuPrincipal(resaltar);

			jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdCuentaContableFleteVentaParametroFactuPrincipal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableIce")) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableIceParametroFactuPrincipal);

			this.jTabbedPaneBusquedasParametroFactuPrincipal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);

			this.parametrofactuprincipalConstantesFunciones.setResaltarFK_IdCuentaContableIceParametroFactuPrincipal(resaltar);

			jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdCuentaContableIceParametroFactuPrincipal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCuentaContableOtroCargo")) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdCuentaContableOtroCargoParametroFactuPrincipal);

			this.jTabbedPaneBusquedasParametroFactuPrincipal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);

			this.parametrofactuprincipalConstantesFunciones.setResaltarFK_IdCuentaContableOtroCargoParametroFactuPrincipal(resaltar);

			jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdCuentaContableOtroCargoParametroFactuPrincipal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdFormato")) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdFormatoParametroFactuPrincipal);

			this.jTabbedPaneBusquedasParametroFactuPrincipal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);

			this.parametrofactuprincipalConstantesFunciones.setResaltarFK_IdFormatoParametroFactuPrincipal(resaltar);

			jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdFormatoParametroFactuPrincipal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdLibroContable")) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdLibroContableParametroFactuPrincipal);

			this.jTabbedPaneBusquedasParametroFactuPrincipal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);

			this.parametrofactuprincipalConstantesFunciones.setResaltarFK_IdLibroContableParametroFactuPrincipal(resaltar);

			jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdLibroContableParametroFactuPrincipal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoDocumentoFactura")) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoDocumentoFacturaParametroFactuPrincipal);

			this.jTabbedPaneBusquedasParametroFactuPrincipal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);

			this.parametrofactuprincipalConstantesFunciones.setResaltarFK_IdTipoDocumentoFacturaParametroFactuPrincipal(resaltar);

			jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdTipoDocumentoFacturaParametroFactuPrincipal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoDocumentoNotaCredito")) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);

			this.jTabbedPaneBusquedasParametroFactuPrincipal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);

			this.parametrofactuprincipalConstantesFunciones.setResaltarFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal(resaltar);

			jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdTipoDocumentoNotaCreditoParametroFactuPrincipal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoDocumentoNotaDebito")) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);

			this.jTabbedPaneBusquedasParametroFactuPrincipal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);

			this.parametrofactuprincipalConstantesFunciones.setResaltarFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal(resaltar);

			jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdTipoDocumentoNotaDebitoParametroFactuPrincipal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoParamFactuDescuento")) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);

			this.jTabbedPaneBusquedasParametroFactuPrincipal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);

			this.parametrofactuprincipalConstantesFunciones.setResaltarFK_IdTipoParamFactuDescuentoParametroFactuPrincipal(resaltar);

			jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdTipoParamFactuDescuentoParametroFactuPrincipal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoParamFactuListadoCliente")) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);

			this.jTabbedPaneBusquedasParametroFactuPrincipal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);

			this.parametrofactuprincipalConstantesFunciones.setResaltarFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal(resaltar);

			jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdTipoParamFactuListadoClienteParametroFactuPrincipal);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoParamFactuSecuenciaTrabajo")) {
			index= this.jTabbedPaneBusquedasParametroFactuPrincipal.indexOfComponent(this.jPanelFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);

			this.jTabbedPaneBusquedasParametroFactuPrincipal.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasParametroFactuPrincipal.getComponent(index);

			this.parametrofactuprincipalConstantesFunciones.setResaltarFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal(resaltar);

			jPanel.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarFK_IdTipoParamFactuSecuenciaTrabajoParametroFactuPrincipal);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarParametroFactuPrincipal.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioParametroFactuPrincipal() throws Exception {

		if(this.jInternalFrameDetalleFormParametroFactuPrincipal==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioParametroFactuPrincipal();
		this.updateVisibilidadResaltarControlesFormularioParametroFactuPrincipal();
		this.updateHabilitarResaltarControlesFormularioParametroFactuPrincipal();
		
	}
	
	public void updateBorderResaltarControlesFormularioParametroFactuPrincipal() throws Exception {
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.parametrofactuprincipalConstantesFunciones.resaltaridParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelidParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltaridParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarid_empresaParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_empresaParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarid_empresaParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarid_sucursalParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_sucursalParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarid_sucursalParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_param_factu_descuentoParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_param_factu_descuentoParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_param_factu_listado_clienteParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_param_factu_listado_clienteParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_documento_facturaParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_facturaParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_documento_facturaParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_documento_nota_creditoParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_documento_nota_creditoParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_documento_nota_debitoParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarid_tipo_documento_nota_debitoParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltaren_lineaParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxen_lineaParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxen_lineaParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltaren_lineaParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_cuenta_tipo_clienteParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cuenta_tipo_clienteParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cuenta_tipo_clienteParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_cuenta_tipo_clienteParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_cliente_impuestoParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cliente_impuestoParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cliente_impuestoParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_cliente_impuestoParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarid_libro_contableParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_libro_contableParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarid_libro_contableParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarid_monedaParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_monedaParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarid_monedaParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_impresionParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_impresionParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_impresionParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_impresionParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarid_formatoParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_formatoParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarid_formatoParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_secuencial_usuarioParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_secuencial_usuarioParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_secuencial_usuarioParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_secuencial_usuarioParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_secuencial_editableParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_secuencial_editableParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_secuencial_editableParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_secuencial_editableParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_precio_por_clienteParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_precio_por_clienteParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_precio_por_clienteParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_precio_por_clienteParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_modificar_precioParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_modificar_precioParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_modificar_precioParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_modificar_precioParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_modificar_servicioParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_modificar_servicioParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_modificar_servicioParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_modificar_servicioParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_cambiar_unidadParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cambiar_unidadParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cambiar_unidadParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_cambiar_unidadParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarnumero_decimales_unidadParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextFieldnumero_decimales_unidadParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarnumero_decimales_unidadParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_activar_serieParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_serieParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_serieParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_activar_serieParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_activar_loteParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_loteParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_loteParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_activar_loteParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_activar_multi_empresaParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_multi_empresaParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_multi_empresaParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_activar_multi_empresaParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_centro_costosParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_centro_costosParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_centro_costosParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_centro_costosParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_unidadesParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_unidadesParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_unidadesParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_unidadesParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_cupo_disponibleParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cupo_disponibleParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cupo_disponibleParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_cupo_disponibleParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_forma_pagoParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_forma_pagoParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_forma_pagoParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_forma_pagoParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_envio_mailParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_envio_mailParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_envio_mailParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_envio_mailParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_autorizar_proformaParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_autorizar_proformaParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_autorizar_proformaParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_autorizar_proformaParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_bloqueo_pedidoParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_bloqueo_pedidoParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_bloqueo_pedidoParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_bloqueo_pedidoParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_control_anticipoParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_control_anticipoParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_control_anticipoParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_control_anticipoParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_factura_autoParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_factura_autoParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_factura_autoParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_factura_autoParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_grabar_valor_ceroParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_grabar_valor_ceroParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_grabar_valor_ceroParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_grabar_valor_ceroParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_agregar_itemParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_agregar_itemParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_agregar_itemParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_agregar_itemParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarnumero_copiasParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextFieldnumero_copiasParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarnumero_copiasParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarleyendaParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextArealeyendaParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarleyendaParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarcon_sin_facturaParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_sin_facturaParametroFactuPrincipal.setBorderPainted(true);this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_sin_facturaParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarcon_sin_facturaParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_flete_ventaParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_flete_ventaParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_otro_cargoParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_otro_cargoParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_finanParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_finanParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_finanParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_boniParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boniParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_boniParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_boni_devolParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_boni_devolParametroFactuPrincipal);}
		if(this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_iceParametroFactuPrincipal!=null && this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_iceParametroFactuPrincipal.setBorder(this.parametrofactuprincipalConstantesFunciones.resaltarid_cuenta_contable_iceParametroFactuPrincipal);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioParametroFactuPrincipal() throws Exception {		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
	
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelidParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostraridParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelidParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostraridParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_empresaParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_empresaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelid_empresaParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_empresaParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_sucursalParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_sucursalParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelid_sucursalParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_sucursalParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_tipo_param_factu_descuentoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelid_tipo_param_factu_descuentoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_tipo_param_factu_descuentoParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_tipo_param_factu_listado_clienteParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelid_tipo_param_factu_listado_clienteParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_tipo_param_factu_listado_clienteParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_facturaParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_tipo_documento_facturaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelid_tipo_documento_facturaParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_tipo_documento_facturaParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_tipo_documento_nota_creditoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelid_tipo_documento_nota_creditoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_tipo_documento_nota_creditoParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_tipo_documento_nota_debitoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelid_tipo_documento_nota_debitoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_tipo_documento_nota_debitoParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxen_lineaParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostraren_lineaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelen_lineaParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostraren_lineaParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cuenta_tipo_clienteParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_cuenta_tipo_clienteParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_cuenta_tipo_clienteParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_cuenta_tipo_clienteParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cliente_impuestoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_cliente_impuestoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_cliente_impuestoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_cliente_impuestoParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_libro_contableParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_libro_contableParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelid_libro_contableParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_libro_contableParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_monedaParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_monedaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelid_monedaParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_monedaParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_impresionParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_impresionParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_impresionParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_impresionParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_formatoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_formatoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelid_formatoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_formatoParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_secuencial_usuarioParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_secuencial_usuarioParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_secuencial_usuarioParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_secuencial_usuarioParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_secuencial_editableParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_secuencial_editableParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_secuencial_editableParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_secuencial_editableParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_precio_por_clienteParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_precio_por_clienteParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_precio_por_clienteParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_precio_por_clienteParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_modificar_precioParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_modificar_precioParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_modificar_precioParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_modificar_precioParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_modificar_servicioParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_modificar_servicioParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_modificar_servicioParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_modificar_servicioParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cambiar_unidadParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_cambiar_unidadParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_cambiar_unidadParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_cambiar_unidadParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextFieldnumero_decimales_unidadParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarnumero_decimales_unidadParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelnumero_decimales_unidadParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarnumero_decimales_unidadParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_serieParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_activar_serieParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_activar_serieParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_activar_serieParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_loteParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_activar_loteParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_activar_loteParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_activar_loteParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_multi_empresaParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_activar_multi_empresaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_activar_multi_empresaParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_activar_multi_empresaParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_centro_costosParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_centro_costosParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_centro_costosParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_centro_costosParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_unidadesParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_unidadesParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_unidadesParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_unidadesParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cupo_disponibleParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_cupo_disponibleParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_cupo_disponibleParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_cupo_disponibleParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_forma_pagoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_forma_pagoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_forma_pagoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_forma_pagoParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_envio_mailParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_envio_mailParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_envio_mailParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_envio_mailParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_autorizar_proformaParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_autorizar_proformaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_autorizar_proformaParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_autorizar_proformaParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_bloqueo_pedidoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_bloqueo_pedidoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_bloqueo_pedidoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_bloqueo_pedidoParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_control_anticipoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_control_anticipoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_control_anticipoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_control_anticipoParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_factura_autoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_factura_autoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_factura_autoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_factura_autoParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_grabar_valor_ceroParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_grabar_valor_ceroParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_grabar_valor_ceroParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_grabar_valor_ceroParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_agregar_itemParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_agregar_itemParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_agregar_itemParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_agregar_itemParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextFieldnumero_copiasParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarnumero_copiasParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelnumero_copiasParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarnumero_copiasParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextArealeyendaParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarleyendaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelleyendaParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarleyendaParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_sin_facturaParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_sin_facturaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelcon_sin_facturaParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarcon_sin_facturaParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_flete_ventaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelid_cuenta_contable_flete_ventaParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_flete_ventaParametroFactuPrincipal);
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_flete_ventaParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_otro_cargoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelid_cuenta_contable_otro_cargoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_otro_cargoParametroFactuPrincipal);
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_otro_cargoParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_finanParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_finanParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelid_cuenta_contable_finanParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_finanParametroFactuPrincipal);
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_finanParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_finanParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boniParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_boniParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelid_cuenta_contable_boniParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_boniParametroFactuPrincipal);
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boniParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_boniParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_boni_devolParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelid_cuenta_contable_boni_devolParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_boni_devolParametroFactuPrincipal);
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boni_devolParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_boni_devolParametroFactuPrincipal);
		//this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_iceParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_iceParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jPanelid_cuenta_contable_iceParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_iceParametroFactuPrincipal);
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_iceParametroFactuPrincipal.setVisible(this.parametrofactuprincipalConstantesFunciones.mostrarid_cuenta_contable_iceParametroFactuPrincipal);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioParametroFactuPrincipal() throws Exception {
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormParametroFactuPrincipal!=null) {
	
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jLabelidParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activaridParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_empresaParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_empresaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_sucursalParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_sucursalParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_descuentoParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_tipo_param_factu_descuentoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_listado_clienteParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_tipo_param_factu_listado_clienteParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_tipo_param_factu_secuencia_trabajoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_facturaParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_tipo_documento_facturaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_creditoParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_tipo_documento_nota_creditoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_tipo_documento_nota_debitoParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_tipo_documento_nota_debitoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxen_lineaParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activaren_lineaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cuenta_tipo_clienteParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_cuenta_tipo_clienteParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cliente_impuestoParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_cliente_impuestoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_libro_contableParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_libro_contableParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_monedaParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_monedaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_impresionParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_impresionParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_formatoParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_formatoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_secuencial_usuarioParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_secuencial_usuarioParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_secuencial_editableParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_secuencial_editableParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_precio_por_clienteParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_precio_por_clienteParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_modificar_precioParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_modificar_precioParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_modificar_servicioParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_modificar_servicioParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cambiar_unidadParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_cambiar_unidadParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextFieldnumero_decimales_unidadParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarnumero_decimales_unidadParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_serieParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_activar_serieParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_loteParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_activar_loteParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_activar_multi_empresaParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_activar_multi_empresaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_centro_costosParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_centro_costosParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_unidadesParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_unidadesParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_cupo_disponibleParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_cupo_disponibleParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_forma_pagoParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_forma_pagoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_envio_mailParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_envio_mailParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_autorizar_proformaParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_autorizar_proformaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_bloqueo_pedidoParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_bloqueo_pedidoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_control_anticipoParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_control_anticipoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_factura_autoParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_factura_autoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_grabar_valor_ceroParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_grabar_valor_ceroParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_agregar_itemParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_agregar_itemParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextFieldnumero_copiasParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarnumero_copiasParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jTextArealeyendaParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarleyendaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jCheckBoxcon_sin_facturaParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarcon_sin_facturaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_flete_ventaParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_flete_ventaParametroFactuPrincipal);
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_flete_ventaParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_flete_ventaParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_otro_cargoParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_otro_cargoParametroFactuPrincipal);
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_otro_cargoParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_otro_cargoParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_finanParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_finanParametroFactuPrincipal);
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_finanParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_finanParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boniParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_boniParametroFactuPrincipal);
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boniParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_boniParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_boni_devolParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_boni_devolParametroFactuPrincipal);
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_boni_devolParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_boni_devolParametroFactuPrincipal);
		this.jInternalFrameDetalleFormParametroFactuPrincipal.jComboBoxid_cuenta_contable_iceParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_iceParametroFactuPrincipal);
			this.jInternalFrameDetalleFormParametroFactuPrincipal.jButtonid_cuenta_contable_iceParametroFactuPrincipal.setEnabled(this.parametrofactuprincipalConstantesFunciones.activarid_cuenta_contable_iceParametroFactuPrincipal);
		}
	}
	
		
}