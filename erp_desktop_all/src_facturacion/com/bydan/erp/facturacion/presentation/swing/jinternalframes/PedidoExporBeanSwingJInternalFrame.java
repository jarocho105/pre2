/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.facturacion.presentation.swing.jinternalframes;


import java.sql.Time;


import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.facturacion.util.PedidoExporConstantesFunciones;
import com.bydan.erp.facturacion.util.PedidoExporParameterReturnGeneral;
//import com.bydan.erp.facturacion.util.PedidoExporParameterGeneral;
//import com.bydan.erp.facturacion.presentation.report.source.PedidoExporBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.facturacion.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.facturacion.resources.reportes.AuxiliarReportes;


import com.bydan.erp.facturacion.util.*;
import com.bydan.erp.facturacion.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.contabilidad.business.logic.*;
import com.bydan.erp.nomina.business.logic.*;
import com.bydan.erp.inventario.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;
import com.bydan.erp.comisiones.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.facturacion.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;
import com.bydan.erp.comisiones.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.inventario.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.comisiones.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.facturacion.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.contabilidad.business.entity.*;
import com.bydan.erp.nomina.business.entity.*;
import com.bydan.erp.inventario.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.comisiones.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.nomina.util.*;
import com.bydan.erp.inventario.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.comisiones.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.nomina.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.inventario.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.comisiones.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class PedidoExporBeanSwingJInternalFrame extends PedidoExporJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(PedidoExporBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<PedidoExpor> pedidoexporValidator = new ClassValidator<PedidoExpor>(PedidoExpor.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public PedidoExpor pedidoexpor;	
	public PedidoExpor pedidoexporAux;
	public PedidoExpor pedidoexporAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public PedidoExpor pedidoexporTotales;
	public Long idPedidoExporActual;
	public Long iIdNuevoPedidoExpor=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

	public String sFinalQueryComboUsuario="";

	public List<Usuario> usuariosForeignKey;

	public List<Usuario> getusuariosForeignKey() {
		return usuariosForeignKey;
	}

	public void setusuariosForeignKey(List<Usuario> usuariosForeignKey) {
		this.usuariosForeignKey = usuariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Usuario usuarioForeignKey;

	public Usuario getusuarioForeignKey() {
		return usuarioForeignKey;
	}

	public void setusuarioForeignKey(Usuario usuarioForeignKey) {
		this.usuarioForeignKey = usuarioForeignKey;
	}

	public String sFinalQueryComboMoneda="";

	public List<Moneda> monedasForeignKey;

	public List<Moneda> getmonedasForeignKey() {
		return monedasForeignKey;
	}

	public void setmonedasForeignKey(List<Moneda> monedasForeignKey) {
		this.monedasForeignKey = monedasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Moneda monedaForeignKey;

	public Moneda getmonedaForeignKey() {
		return monedaForeignKey;
	}

	public void setmonedaForeignKey(Moneda monedaForeignKey) {
		this.monedaForeignKey = monedaForeignKey;
	}

	public String sFinalQueryComboEmpleado="";

	public List<Empleado> empleadosForeignKey;

	public List<Empleado> getempleadosForeignKey() {
		return empleadosForeignKey;
	}

	public void setempleadosForeignKey(List<Empleado> empleadosForeignKey) {
		this.empleadosForeignKey = empleadosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empleado empleadoForeignKey;

	public Empleado getempleadoForeignKey() {
		return empleadoForeignKey;
	}

	public void setempleadoForeignKey(Empleado empleadoForeignKey) {
		this.empleadoForeignKey = empleadoForeignKey;
	}

	public String sFinalQueryComboTipoPrecio="";

	public List<TipoPrecio> tipopreciosForeignKey;

	public List<TipoPrecio> gettipopreciosForeignKey() {
		return tipopreciosForeignKey;
	}

	public void settipopreciosForeignKey(List<TipoPrecio> tipopreciosForeignKey) {
		this.tipopreciosForeignKey = tipopreciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoPrecio tipoprecioForeignKey;

	public TipoPrecio gettipoprecioForeignKey() {
		return tipoprecioForeignKey;
	}

	public void settipoprecioForeignKey(TipoPrecio tipoprecioForeignKey) {
		this.tipoprecioForeignKey = tipoprecioForeignKey;
	}

	public String sFinalQueryComboFormato="";

	public List<Formato> formatosForeignKey;

	public List<Formato> getformatosForeignKey() {
		return formatosForeignKey;
	}

	public void setformatosForeignKey(List<Formato> formatosForeignKey) {
		this.formatosForeignKey = formatosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Formato formatoForeignKey;

	public Formato getformatoForeignKey() {
		return formatoForeignKey;
	}

	public void setformatoForeignKey(Formato formatoForeignKey) {
		this.formatoForeignKey = formatoForeignKey;
	}

	public String sFinalQueryComboCliente="";

	public List<Cliente> clientesForeignKey;

	public List<Cliente> getclientesForeignKey() {
		return clientesForeignKey;
	}

	public void setclientesForeignKey(List<Cliente> clientesForeignKey) {
		this.clientesForeignKey = clientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteForeignKey;

	public Cliente getclienteForeignKey() {
		return clienteForeignKey;
	}

	public void setclienteForeignKey(Cliente clienteForeignKey) {
		this.clienteForeignKey = clienteForeignKey;
	}

	public String sFinalQueryComboPais="";

	public List<Pais> paissForeignKey;

	public List<Pais> getpaissForeignKey() {
		return paissForeignKey;
	}

	public void setpaissForeignKey(List<Pais> paissForeignKey) {
		this.paissForeignKey = paissForeignKey;
	}

	//OBJETO FK ACTUAL
	public Pais paisForeignKey;

	public Pais getpaisForeignKey() {
		return paisForeignKey;
	}

	public void setpaisForeignKey(Pais paisForeignKey) {
		this.paisForeignKey = paisForeignKey;
	}

	public String sFinalQueryComboTransporte="";

	public List<Transporte> transportesForeignKey;

	public List<Transporte> gettransportesForeignKey() {
		return transportesForeignKey;
	}

	public void settransportesForeignKey(List<Transporte> transportesForeignKey) {
		this.transportesForeignKey = transportesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transporte transporteForeignKey;

	public Transporte gettransporteForeignKey() {
		return transporteForeignKey;
	}

	public void settransporteForeignKey(Transporte transporteForeignKey) {
		this.transporteForeignKey = transporteForeignKey;
	}

	public String sFinalQueryComboVendedor="";

	public List<Vendedor> vendedorsForeignKey;

	public List<Vendedor> getvendedorsForeignKey() {
		return vendedorsForeignKey;
	}

	public void setvendedorsForeignKey(List<Vendedor> vendedorsForeignKey) {
		this.vendedorsForeignKey = vendedorsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Vendedor vendedorForeignKey;

	public Vendedor getvendedorForeignKey() {
		return vendedorForeignKey;
	}

	public void setvendedorForeignKey(Vendedor vendedorForeignKey) {
		this.vendedorForeignKey = vendedorForeignKey;
	}

	public String sFinalQueryComboSubCliente="";

	public List<SubCliente> subclientesForeignKey;

	public List<SubCliente> getsubclientesForeignKey() {
		return subclientesForeignKey;
	}

	public void setsubclientesForeignKey(List<SubCliente> subclientesForeignKey) {
		this.subclientesForeignKey = subclientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public SubCliente subclienteForeignKey;

	public SubCliente getsubclienteForeignKey() {
		return subclienteForeignKey;
	}

	public void setsubclienteForeignKey(SubCliente subclienteForeignKey) {
		this.subclienteForeignKey = subclienteForeignKey;
	}

	public String sFinalQueryComboConsignatario="";

	public List<Consignatario> consignatariosForeignKey;

	public List<Consignatario> getconsignatariosForeignKey() {
		return consignatariosForeignKey;
	}

	public void setconsignatariosForeignKey(List<Consignatario> consignatariosForeignKey) {
		this.consignatariosForeignKey = consignatariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Consignatario consignatarioForeignKey;

	public Consignatario getconsignatarioForeignKey() {
		return consignatarioForeignKey;
	}

	public void setconsignatarioForeignKey(Consignatario consignatarioForeignKey) {
		this.consignatarioForeignKey = consignatarioForeignKey;
	}

	public String sFinalQueryComboConsultor="";

	public List<Consultor> consultorsForeignKey;

	public List<Consultor> getconsultorsForeignKey() {
		return consultorsForeignKey;
	}

	public void setconsultorsForeignKey(List<Consultor> consultorsForeignKey) {
		this.consultorsForeignKey = consultorsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Consultor consultorForeignKey;

	public Consultor getconsultorForeignKey() {
		return consultorForeignKey;
	}

	public void setconsultorForeignKey(Consultor consultorForeignKey) {
		this.consultorForeignKey = consultorForeignKey;
	}

	public String sFinalQueryComboEstadoPedidoExpor="";

	public List<EstadoPedido> estadopedidoexporsForeignKey;

	public List<EstadoPedido> getestadopedidoexporsForeignKey() {
		return estadopedidoexporsForeignKey;
	}

	public void setestadopedidoexporsForeignKey(List<EstadoPedido> estadopedidoexporsForeignKey) {
		this.estadopedidoexporsForeignKey = estadopedidoexporsForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoPedido estadopedidoexporForeignKey;

	public EstadoPedido getestadopedidoexporForeignKey() {
		return estadopedidoexporForeignKey;
	}

	public void setestadopedidoexporForeignKey(EstadoPedido estadopedidoexporForeignKey) {
		this.estadopedidoexporForeignKey = estadopedidoexporForeignKey;
	}

	public String sFinalQueryComboTipoCambio="";

	public List<TipoCambio> tipocambiosForeignKey;

	public List<TipoCambio> gettipocambiosForeignKey() {
		return tipocambiosForeignKey;
	}

	public void settipocambiosForeignKey(List<TipoCambio> tipocambiosForeignKey) {
		this.tipocambiosForeignKey = tipocambiosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoCambio tipocambioForeignKey;

	public TipoCambio gettipocambioForeignKey() {
		return tipocambioForeignKey;
	}

	public void settipocambioForeignKey(TipoCambio tipocambioForeignKey) {
		this.tipocambioForeignKey = tipocambioForeignKey;
	}

	public String sFinalQueryComboCentroCosto="";

	public List<CentroCosto> centrocostosForeignKey;

	public List<CentroCosto> getcentrocostosForeignKey() {
		return centrocostosForeignKey;
	}

	public void setcentrocostosForeignKey(List<CentroCosto> centrocostosForeignKey) {
		this.centrocostosForeignKey = centrocostosForeignKey;
	}

	//OBJETO FK ACTUAL
	public CentroCosto centrocostoForeignKey;

	public CentroCosto getcentrocostoForeignKey() {
		return centrocostoForeignKey;
	}

	public void setcentrocostoForeignKey(CentroCosto centrocostoForeignKey) {
		this.centrocostoForeignKey = centrocostoForeignKey;
	}

	public String sFinalQueryComboResponsable="";

	public List<Responsable> responsablesForeignKey;

	public List<Responsable> getresponsablesForeignKey() {
		return responsablesForeignKey;
	}

	public void setresponsablesForeignKey(List<Responsable> responsablesForeignKey) {
		this.responsablesForeignKey = responsablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Responsable responsableForeignKey;

	public Responsable getresponsableForeignKey() {
		return responsableForeignKey;
	}

	public void setresponsableForeignKey(Responsable responsableForeignKey) {
		this.responsableForeignKey = responsableForeignKey;
	}

	public String sFinalQueryComboTransportista="";

	public List<Transportista> transportistasForeignKey;

	public List<Transportista> gettransportistasForeignKey() {
		return transportistasForeignKey;
	}

	public void settransportistasForeignKey(List<Transportista> transportistasForeignKey) {
		this.transportistasForeignKey = transportistasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transportista transportistaForeignKey;

	public Transportista gettransportistaForeignKey() {
		return transportistaForeignKey;
	}

	public void settransportistaForeignKey(Transportista transportistaForeignKey) {
		this.transportistaForeignKey = transportistaForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idEmpleadoActual=0L;

	public Long getidEmpleadoActual() {
		return idEmpleadoActual;
	}

	public void setidEmpleadoActual(Long idEmpleadoActual) {
		this.idEmpleadoActual= idEmpleadoActual;
	}
	public Long idClienteActual=0L;

	public Long getidClienteActual() {
		return idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual= idClienteActual;
	}
	public Long idVendedorActual=0L;

	public Long getidVendedorActual() {
		return idVendedorActual;
	}

	public void setidVendedorActual(Long idVendedorActual) {
		this.idVendedorActual= idVendedorActual;
	}
	public Long idTipoCambioActual=0L;

	public Long getidTipoCambioActual() {
		return idTipoCambioActual;
	}

	public void setidTipoCambioActual(Long idTipoCambioActual) {
		this.idTipoCambioActual= idTipoCambioActual;
	}
	public Long idCentroCostoActual=0L;

	public Long getidCentroCostoActual() {
		return idCentroCostoActual;
	}

	public void setidCentroCostoActual(Long idCentroCostoActual) {
		this.idCentroCostoActual= idCentroCostoActual;
	}
	
	

	public Boolean isTienePermisosDetallePedidoExpor=false;

	public Boolean getIsTienePermisosDetallePedidoExpor() {
		return isTienePermisosDetallePedidoExpor;
	}

	public void setIsTienePermisosDetallePedidoExpor(Boolean isTienePermisosDetallePedidoExpor) {
		this.isTienePermisosDetallePedidoExpor= isTienePermisosDetallePedidoExpor;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoPedidoExpor;
	public Boolean isPermisoNuevoPedidoExpor;
	public Boolean isPermisoActualizarPedidoExpor;
	public Boolean isPermisoActualizarOriginalPedidoExpor;
	public Boolean isPermisoEliminarPedidoExpor;
	public Boolean isPermisoGuardarCambiosPedidoExpor;
	public Boolean isPermisoConsultaPedidoExpor;
	public Boolean isPermisoBusquedaPedidoExpor;
	public Boolean isPermisoReportePedidoExpor;
	public Boolean isPermisoPaginacionMedioPedidoExpor;
	public Boolean isPermisoPaginacionAltoPedidoExpor;
	public Boolean isPermisoPaginacionTodoPedidoExpor;
	public Boolean isPermisoCopiarPedidoExpor;
	public Boolean isPermisoVerFormPedidoExpor;
	public Boolean isPermisoDuplicarPedidoExpor;
	public Boolean isPermisoOrdenPedidoExpor;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public PedidoExporParameterReturnGeneral pedidoexporReturnGeneral;
	public PedidoExporParameterReturnGeneral pedidoexporParameterGeneral;
	
	

	public DetallePedidoExporLogic detallepedidoexporLogic=null;

	public DetallePedidoExporLogic getDetallePedidoExporLogic() {
		return detallepedidoexporLogic;
	}

	public void setDetallePedidoExporLogic(DetallePedidoExporLogic detallepedidoexporLogic) {
		this.detallepedidoexporLogic = detallepedidoexporLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoPedidoExpor=false;
	public Boolean esParaAccionDesdeFormularioPedidoExpor=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected PedidoExporSessionBeanAdditional pedidoexporSessionBeanAdditional=null;
	
	public PedidoExporSessionBeanAdditional getPedidoExporSessionBeanAdditional() {
		return this.pedidoexporSessionBeanAdditional;
	}
	
	public void setPedidoExporSessionBeanAdditional(PedidoExporSessionBeanAdditional pedidoexporSessionBeanAdditional) {
		try {
			this.pedidoexporSessionBeanAdditional=pedidoexporSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected PedidoExporBeanSwingJInternalFrameAdditional pedidoexporBeanSwingJInternalFrameAdditional=null;
	//public class PedidoExporBeanSwingJInternalFrame
	
	public PedidoExporBeanSwingJInternalFrameAdditional getPedidoExporBeanSwingJInternalFrameAdditional() {
		return this.pedidoexporBeanSwingJInternalFrameAdditional;
	}
	
	public void setPedidoExporBeanSwingJInternalFrameAdditional(PedidoExporBeanSwingJInternalFrameAdditional pedidoexporBeanSwingJInternalFrameAdditional) {
		try {
			this.pedidoexporBeanSwingJInternalFrameAdditional=pedidoexporBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public PedidoExporLogic pedidoexporLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public PedidoExpor pedidoexporBean;
	public PedidoExporConstantesFunciones pedidoexporConstantesFunciones;
	//public PedidoExporParameterReturnGeneral pedidoexporReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	public UsuarioLogic usuarioLogic;
	public MonedaLogic monedaLogic;
	public EmpleadoLogic empleadoLogic;
	public TipoPrecioLogic tipoprecioLogic;
	public FormatoLogic formatoLogic;
	public ClienteLogic clienteLogic;
	public PaisLogic paisLogic;
	public TransporteLogic transporteLogic;
	public VendedorLogic vendedorLogic;
	public SubClienteLogic subclienteLogic;
	public ConsignatarioLogic consignatarioLogic;
	public ConsultorLogic consultorLogic;
	public EstadoPedidoLogic estadopedidoexporLogic;
	public TipoCambioLogic tipocambioLogic;
	public CentroCostoLogic centrocostoLogic;
	public ResponsableLogic responsableLogic;
	public TransportistaLogic transportistaLogic;
	
	//PARAMETROS
	
	
	//public List<PedidoExpor> pedidoexpors;	
	//public List<PedidoExpor> pedidoexporsEliminados;
	//public List<PedidoExpor> pedidoexporsAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoPedidoExpor=false;
	public Boolean isVisibilidadCeldaDuplicarPedidoExpor=true;
	public Boolean isVisibilidadCeldaCopiarPedidoExpor=true;
	public Boolean isVisibilidadCeldaVerFormPedidoExpor=true;
	public Boolean isVisibilidadCeldaOrdenPedidoExpor=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesPedidoExpor=false;
	public Boolean isVisibilidadCeldaModificarPedidoExpor=false;
	public Boolean isVisibilidadCeldaActualizarPedidoExpor=false;
	public Boolean isVisibilidadCeldaEliminarPedidoExpor=false;
	public Boolean isVisibilidadCeldaCancelarPedidoExpor=false;
	public Boolean isVisibilidadCeldaGuardarPedidoExpor=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosPedidoExpor=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdCentroCosto=false;
	public Boolean isVisibilidadFK_IdCliente=false;
	public Boolean isVisibilidadFK_IdConsignatario=false;
	public Boolean isVisibilidadFK_IdConsultor=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpleado=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstadoPedidoExpor=false;
	public Boolean isVisibilidadFK_IdFormato=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdMoneda=false;
	public Boolean isVisibilidadFK_IdPais=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdResponsable=false;
	public Boolean isVisibilidadFK_IdSubCliente=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoCambio=false;
	public Boolean isVisibilidadFK_IdTipoPrecio=false;
	public Boolean isVisibilidadFK_IdTransporte=false;
	public Boolean isVisibilidadFK_IdTransportista=false;
	public Boolean isVisibilidadFK_IdUsuario=false;
	public Boolean isVisibilidadFK_IdVendedor=false;
	
	public Long getiIdNuevoPedidoExpor() {
		return this.iIdNuevoPedidoExpor;
	}

	public void setiIdNuevoPedidoExpor(Long iIdNuevoPedidoExpor) {
		this.iIdNuevoPedidoExpor = iIdNuevoPedidoExpor;
	}
	
	public Long getidPedidoExporActual() {
		return this.idPedidoExporActual;
	}

	public void setidPedidoExporActual(Long idPedidoExporActual) {
		this.idPedidoExporActual = idPedidoExporActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public PedidoExpor getpedidoexpor() {
		return this.pedidoexpor;
	}

	public void setpedidoexpor(PedidoExpor pedidoexpor) {
		this.pedidoexpor = pedidoexpor;
	}
	
	public PedidoExpor getpedidoexporAux() {
		return this.pedidoexporAux;
	}

	public void setpedidoexporAux(PedidoExpor pedidoexporAux) {
		this.pedidoexporAux = pedidoexporAux;
	}				
	
	public PedidoExpor getpedidoexporAnterior() {
		return this.pedidoexporAnterior;
	}

	public void setpedidoexporAnterior(PedidoExpor pedidoexporAnterior) {
		this.pedidoexporAnterior = pedidoexporAnterior;
	}	
	
	public PedidoExpor getpedidoexporTotales() {
		return this.pedidoexporTotales;
	}

	public void setpedidoexporTotales(PedidoExpor pedidoexporTotales) {
		this.pedidoexporTotales = pedidoexporTotales;
	}	
	
	public PedidoExpor getpedidoexporBean() {
		return this.pedidoexporBean;
	}

	public void setpedidoexporBean(PedidoExpor pedidoexporBean) {
		this.pedidoexporBean = pedidoexporBean;
	}	
	
	public PedidoExporParameterReturnGeneral getpedidoexporReturnGeneral() {
		return this.pedidoexporReturnGeneral;
	}

	public void setpedidoexporReturnGeneral(PedidoExporParameterReturnGeneral pedidoexporReturnGeneral) {
		this.pedidoexporReturnGeneral = pedidoexporReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_centro_costoFK_IdCentroCosto=null;

	public Long getid_centro_costoFK_IdCentroCosto() {
		return this.id_centro_costoFK_IdCentroCosto;
	}

	public void setid_centro_costoFK_IdCentroCosto(Long id_centro_costoFK_IdCentroCosto) {
		this.id_centro_costoFK_IdCentroCosto = id_centro_costoFK_IdCentroCosto;
	}

	public Long id_clienteFK_IdCliente=-1L;

	public Long getid_clienteFK_IdCliente() {
		return this.id_clienteFK_IdCliente;
	}

	public void setid_clienteFK_IdCliente(Long id_clienteFK_IdCliente) {
		this.id_clienteFK_IdCliente = id_clienteFK_IdCliente;
	}

	public Long id_consignatarioFK_IdConsignatario=null;

	public Long getid_consignatarioFK_IdConsignatario() {
		return this.id_consignatarioFK_IdConsignatario;
	}

	public void setid_consignatarioFK_IdConsignatario(Long id_consignatarioFK_IdConsignatario) {
		this.id_consignatarioFK_IdConsignatario = id_consignatarioFK_IdConsignatario;
	}

	public Long id_consultorFK_IdConsultor=null;

	public Long getid_consultorFK_IdConsultor() {
		return this.id_consultorFK_IdConsultor;
	}

	public void setid_consultorFK_IdConsultor(Long id_consultorFK_IdConsultor) {
		this.id_consultorFK_IdConsultor = id_consultorFK_IdConsultor;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empleadoFK_IdEmpleado=-1L;

	public Long getid_empleadoFK_IdEmpleado() {
		return this.id_empleadoFK_IdEmpleado;
	}

	public void setid_empleadoFK_IdEmpleado(Long id_empleadoFK_IdEmpleado) {
		this.id_empleadoFK_IdEmpleado = id_empleadoFK_IdEmpleado;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estado_pedidoFK_IdEstadoPedidoExpor=1L;

	public Long getid_estado_pedidoFK_IdEstadoPedidoExpor() {
		return this.id_estado_pedidoFK_IdEstadoPedidoExpor;
	}

	public void setid_estado_pedidoFK_IdEstadoPedidoExpor(Long id_estado_pedidoFK_IdEstadoPedidoExpor) {
		this.id_estado_pedidoFK_IdEstadoPedidoExpor = id_estado_pedidoFK_IdEstadoPedidoExpor;
	}

	public Long id_formatoFK_IdFormato=null;

	public Long getid_formatoFK_IdFormato() {
		return this.id_formatoFK_IdFormato;
	}

	public void setid_formatoFK_IdFormato(Long id_formatoFK_IdFormato) {
		this.id_formatoFK_IdFormato = id_formatoFK_IdFormato;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_monedaFK_IdMoneda=-1L;

	public Long getid_monedaFK_IdMoneda() {
		return this.id_monedaFK_IdMoneda;
	}

	public void setid_monedaFK_IdMoneda(Long id_monedaFK_IdMoneda) {
		this.id_monedaFK_IdMoneda = id_monedaFK_IdMoneda;
	}

	public Long id_paisFK_IdPais=null;

	public Long getid_paisFK_IdPais() {
		return this.id_paisFK_IdPais;
	}

	public void setid_paisFK_IdPais(Long id_paisFK_IdPais) {
		this.id_paisFK_IdPais = id_paisFK_IdPais;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_responsableFK_IdResponsable=-1L;

	public Long getid_responsableFK_IdResponsable() {
		return this.id_responsableFK_IdResponsable;
	}

	public void setid_responsableFK_IdResponsable(Long id_responsableFK_IdResponsable) {
		this.id_responsableFK_IdResponsable = id_responsableFK_IdResponsable;
	}

	public Long id_sub_clienteFK_IdSubCliente=null;

	public Long getid_sub_clienteFK_IdSubCliente() {
		return this.id_sub_clienteFK_IdSubCliente;
	}

	public void setid_sub_clienteFK_IdSubCliente(Long id_sub_clienteFK_IdSubCliente) {
		this.id_sub_clienteFK_IdSubCliente = id_sub_clienteFK_IdSubCliente;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_cambioFK_IdTipoCambio=null;

	public Long getid_tipo_cambioFK_IdTipoCambio() {
		return this.id_tipo_cambioFK_IdTipoCambio;
	}

	public void setid_tipo_cambioFK_IdTipoCambio(Long id_tipo_cambioFK_IdTipoCambio) {
		this.id_tipo_cambioFK_IdTipoCambio = id_tipo_cambioFK_IdTipoCambio;
	}

	public Long id_tipo_precioFK_IdTipoPrecio=-1L;

	public Long getid_tipo_precioFK_IdTipoPrecio() {
		return this.id_tipo_precioFK_IdTipoPrecio;
	}

	public void setid_tipo_precioFK_IdTipoPrecio(Long id_tipo_precioFK_IdTipoPrecio) {
		this.id_tipo_precioFK_IdTipoPrecio = id_tipo_precioFK_IdTipoPrecio;
	}

	public Long id_transporteFK_IdTransporte=null;

	public Long getid_transporteFK_IdTransporte() {
		return this.id_transporteFK_IdTransporte;
	}

	public void setid_transporteFK_IdTransporte(Long id_transporteFK_IdTransporte) {
		this.id_transporteFK_IdTransporte = id_transporteFK_IdTransporte;
	}

	public Long id_transportistaFK_IdTransportista=-1L;

	public Long getid_transportistaFK_IdTransportista() {
		return this.id_transportistaFK_IdTransportista;
	}

	public void setid_transportistaFK_IdTransportista(Long id_transportistaFK_IdTransportista) {
		this.id_transportistaFK_IdTransportista = id_transportistaFK_IdTransportista;
	}

	public Long id_usuarioFK_IdUsuario=-1L;

	public Long getid_usuarioFK_IdUsuario() {
		return this.id_usuarioFK_IdUsuario;
	}

	public void setid_usuarioFK_IdUsuario(Long id_usuarioFK_IdUsuario) {
		this.id_usuarioFK_IdUsuario = id_usuarioFK_IdUsuario;
	}

	public Long id_vendedorFK_IdVendedor=null;

	public Long getid_vendedorFK_IdVendedor() {
		return this.id_vendedorFK_IdVendedor;
	}

	public void setid_vendedorFK_IdVendedor(Long id_vendedorFK_IdVendedor) {
		this.id_vendedorFK_IdVendedor = id_vendedorFK_IdVendedor;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public PedidoExporLogic getPedidoExporLogic()	{		
		return pedidoexporLogic;
	}

	public void setPedidoExporLogic(PedidoExporLogic pedidoexporLogic) {
		this.pedidoexporLogic = pedidoexporLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoPedidoExpor() {
		return isEsNuevoPedidoExpor;
	}

	public void setIsEsNuevoPedidoExpor(Boolean isEsNuevoPedidoExpor) {
		this.isEsNuevoPedidoExpor = isEsNuevoPedidoExpor;
	}

	public Boolean getEsParaAccionDesdeFormularioPedidoExpor() {
		return esParaAccionDesdeFormularioPedidoExpor;
	}
	
	public void setEsParaAccionDesdeFormularioPedidoExpor(Boolean esParaAccionDesdeFormularioPedidoExpor) {
		this.esParaAccionDesdeFormularioPedidoExpor = esParaAccionDesdeFormularioPedidoExpor;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(pedidoexporSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(pedidoexporSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(pedidoexporSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(pedidoexporSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(pedidoexporSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(pedidoexporSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUsuariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.usuariosForeignKey=new ArrayList<Usuario>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UsuarioLogic usuarioLogic=new UsuarioLogic();

			//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

					usuarioLogic.getTodosUsuariosWithConnection(sFinalQuery,new Pagination());

					this.usuariosForeignKey=usuarioLogic.getUsuarios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUsuario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					usuarioLogic.getEntityWithConnection(pedidoexporSessionBean.getlidUsuarioActual());
					this.usuariosForeignKey.add(usuarioLogic.getUsuario());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMonedasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.monedasForeignKey=new ArrayList<Moneda>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MonedaLogic monedaLogic=new MonedaLogic();

			//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

					monedaLogic.getTodosMonedasWithConnection(sFinalQuery,new Pagination());

					this.monedasForeignKey=monedaLogic.getMonedas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMoneda(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					monedaLogic.getEntityWithConnection(pedidoexporSessionBean.getlidMonedaActual());
					this.monedasForeignKey.add(monedaLogic.getMoneda());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpleadosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empleadosForeignKey=new ArrayList<Empleado>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpleadoLogic empleadoLogic=new EmpleadoLogic();

			//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

					empleadoLogic.getTodosEmpleadosWithConnection(sFinalQuery,new Pagination());

					this.empleadosForeignKey=empleadoLogic.getEmpleados();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpleado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(pedidoexporSessionBean.getlidEmpleadoActual());
					this.empleadosForeignKey.add(empleadoLogic.getEmpleado());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoPreciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipopreciosForeignKey=new ArrayList<TipoPrecio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoPrecioLogic tipoprecioLogic=new TipoPrecioLogic();

			//tipoprecioLogic.getTipoPrecioDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionTipoPrecio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipoprecioLogic.getTipoPrecioDataAccess().setIsForForeingKeyData(true);

					tipoprecioLogic.getTodosTipoPreciosWithConnection(sFinalQuery,new Pagination());

					this.tipopreciosForeignKey=tipoprecioLogic.getTipoPrecios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoPrecio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipoprecioLogic.getEntityWithConnection(pedidoexporSessionBean.getlidTipoPrecioActual());
					this.tipopreciosForeignKey.add(tipoprecioLogic.getTipoPrecio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosFormatosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.formatosForeignKey=new ArrayList<Formato>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Formato formatoNulo = new Formato();

			FormatoLogic formatoLogic=new FormatoLogic();

			//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//formatoLogic.getFormatoDataAccess().setIsForForeingKeyData(true);

					formatoLogic.getTodosFormatosWithConnection(sFinalQuery,new Pagination());

					this.formatosForeignKey=formatoLogic.getFormatos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.formatosForeignKey.add(0, formatoNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaFormato(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					formatoLogic.getEntityWithConnection(pedidoexporSessionBean.getlidFormatoActual());
					this.formatosForeignKey.add(formatoLogic.getFormato());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientesForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientesForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(pedidoexporSessionBean.getlidClienteActual());
					this.clientesForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPaissForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.paissForeignKey=new ArrayList<Pais>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Pais paisNulo = new Pais();

			PaisLogic paisLogic=new PaisLogic();

			//paisLogic.getPaisDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//paisLogic.getPaisDataAccess().setIsForForeingKeyData(true);

					paisLogic.getTodosPaissWithConnection(sFinalQuery,new Pagination());

					this.paissForeignKey=paisLogic.getPaiss();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.paissForeignKey.add(0, paisNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPais(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					paisLogic.getEntityWithConnection(pedidoexporSessionBean.getlidPaisActual());
					this.paissForeignKey.add(paisLogic.getPais());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransportesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transportesForeignKey=new ArrayList<Transporte>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Transporte transporteNulo = new Transporte();

			TransporteLogic transporteLogic=new TransporteLogic();

			//transporteLogic.getTransporteDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionTransporte()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transporteLogic.getTransporteDataAccess().setIsForForeingKeyData(true);

					transporteLogic.getTodosTransportesWithConnection(sFinalQuery,new Pagination());

					this.transportesForeignKey=transporteLogic.getTransportes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.transportesForeignKey.add(0, transporteNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransporte(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transporteLogic.getEntityWithConnection(pedidoexporSessionBean.getlidTransporteActual());
					this.transportesForeignKey.add(transporteLogic.getTransporte());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosVendedorsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.vendedorsForeignKey=new ArrayList<Vendedor>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Vendedor vendedorNulo = new Vendedor();

			VendedorLogic vendedorLogic=new VendedorLogic();

			//vendedorLogic.getVendedorDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//vendedorLogic.getVendedorDataAccess().setIsForForeingKeyData(true);

					vendedorLogic.getTodosVendedorsWithConnection(sFinalQuery,new Pagination());

					this.vendedorsForeignKey=vendedorLogic.getVendedors();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.vendedorsForeignKey.add(0, vendedorNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaVendedor(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					vendedorLogic.getEntityWithConnection(pedidoexporSessionBean.getlidVendedorActual());
					this.vendedorsForeignKey.add(vendedorLogic.getVendedor());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSubClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.subclientesForeignKey=new ArrayList<SubCliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SubCliente subclienteNulo = new SubCliente();

			SubClienteLogic subclienteLogic=new SubClienteLogic();

			//subclienteLogic.getSubClienteDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionSubCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//subclienteLogic.getSubClienteDataAccess().setIsForForeingKeyData(true);

					subclienteLogic.getTodosSubClientesWithConnection(sFinalQuery,new Pagination());

					this.subclientesForeignKey=subclienteLogic.getSubClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.subclientesForeignKey.add(0, subclienteNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSubCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					subclienteLogic.getEntityWithConnection(pedidoexporSessionBean.getlidSubClienteActual());
					this.subclientesForeignKey.add(subclienteLogic.getSubCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosConsignatariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.consignatariosForeignKey=new ArrayList<Consignatario>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Consignatario consignatarioNulo = new Consignatario();

			ConsignatarioLogic consignatarioLogic=new ConsignatarioLogic();

			//consignatarioLogic.getConsignatarioDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionConsignatario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//consignatarioLogic.getConsignatarioDataAccess().setIsForForeingKeyData(true);

					consignatarioLogic.getTodosConsignatariosWithConnection(sFinalQuery,new Pagination());

					this.consignatariosForeignKey=consignatarioLogic.getConsignatarios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.consignatariosForeignKey.add(0, consignatarioNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaConsignatario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					consignatarioLogic.getEntityWithConnection(pedidoexporSessionBean.getlidConsignatarioActual());
					this.consignatariosForeignKey.add(consignatarioLogic.getConsignatario());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosConsultorsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.consultorsForeignKey=new ArrayList<Consultor>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			Consultor consultorNulo = new Consultor();

			ConsultorLogic consultorLogic=new ConsultorLogic();

			//consultorLogic.getConsultorDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionConsultor()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//consultorLogic.getConsultorDataAccess().setIsForForeingKeyData(true);

					consultorLogic.getTodosConsultorsWithConnection(sFinalQuery,new Pagination());

					this.consultorsForeignKey=consultorLogic.getConsultors();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}

				this.consultorsForeignKey.add(0, consultorNulo);

				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaConsultor(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					consultorLogic.getEntityWithConnection(pedidoexporSessionBean.getlidConsultorActual());
					this.consultorsForeignKey.add(consultorLogic.getConsultor());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoPedidoExporsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadopedidoexporsForeignKey=new ArrayList<EstadoPedido>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoPedidoLogic estadopedidoLogic=new EstadoPedidoLogic();

			//estadopedidoLogic.getEstadoPedidoDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoExpor()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadopedidoexporLogic.getEstadoPedidoDataAccess().setIsForForeingKeyData(true);

					estadopedidoLogic.getTodosEstadoPedidosWithConnection(sFinalQuery,new Pagination());

					this.estadopedidoexporsForeignKey=estadopedidoLogic.getEstadoPedidos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoPedidoExpor(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadopedidoLogic.getEntityWithConnection(pedidoexporSessionBean.getlidEstadoPedidoExporActual());
					this.estadopedidoexporsForeignKey.add(estadopedidoLogic.getEstadoPedido());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoCambiosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoCambioLogic tipocambioLogic=new TipoCambioLogic();

			//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipocambioLogic.getTipoCambioDataAccess().setIsForForeingKeyData(true);

					tipocambioLogic.getTodosTipoCambiosWithConnection(sFinalQuery,new Pagination());

					this.tipocambiosForeignKey=tipocambioLogic.getTipoCambios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoCambio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(pedidoexporSessionBean.getlidTipoCambioActual());
					this.tipocambiosForeignKey.add(tipocambioLogic.getTipoCambio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCentroCostosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.centrocostosForeignKey=new ArrayList<CentroCosto>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CentroCostoLogic centrocostoLogic=new CentroCostoLogic();

			//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//centrocostoLogic.getCentroCostoDataAccess().setIsForForeingKeyData(true);

					centrocostoLogic.getTodosCentroCostosWithConnection(sFinalQuery,new Pagination());

					this.centrocostosForeignKey=centrocostoLogic.getCentroCostos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCentroCosto(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(pedidoexporSessionBean.getlidCentroCostoActual());
					this.centrocostosForeignKey.add(centrocostoLogic.getCentroCosto());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosResponsablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.responsablesForeignKey=new ArrayList<Responsable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ResponsableLogic responsableLogic=new ResponsableLogic();

			//responsableLogic.getResponsableDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionResponsable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//responsableLogic.getResponsableDataAccess().setIsForForeingKeyData(true);

					responsableLogic.getTodosResponsablesWithConnection(sFinalQuery,new Pagination());

					this.responsablesForeignKey=responsableLogic.getResponsables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaResponsable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					responsableLogic.getEntityWithConnection(pedidoexporSessionBean.getlidResponsableActual());
					this.responsablesForeignKey.add(responsableLogic.getResponsable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransportistasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transportistasForeignKey=new ArrayList<Transportista>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransportistaLogic transportistaLogic=new TransportistaLogic();

			//transportistaLogic.getTransportistaDataAccess().setIsForForeingKeyData(true);

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionTransportista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transportistaLogic.getTransportistaDataAccess().setIsForForeingKeyData(true);

					transportistaLogic.getTodosTransportistasWithConnection(sFinalQuery,new Pagination());

					this.transportistasForeignKey=transportistaLogic.getTransportistas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransportista(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transportistaLogic.getEntityWithConnection(pedidoexporSessionBean.getlidTransportistaActual());
					this.transportistasForeignKey.add(transportistaLogic.getTransportista());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empresaPedidoExpor.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaPedidoExpor.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empresaPedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empresaPedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaPedidoExporGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaPedidoExporGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaPedidoExporGenerico!=null && jComboBoxid_empresaPedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_empresaPedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sucursalPedidoExpor.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalPedidoExpor.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sucursalPedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sucursalPedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalPedidoExporGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalPedidoExporGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalPedidoExporGenerico!=null && jComboBoxid_sucursalPedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_sucursalPedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_ejercicioPedidoExpor.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioPedidoExpor.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_ejercicioPedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_ejercicioPedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioPedidoExporGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioPedidoExporGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioPedidoExporGenerico!=null && jComboBoxid_ejercicioPedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioPedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_periodoPedidoExpor.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoPedidoExpor.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_periodoPedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_periodoPedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoPedidoExporGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoPedidoExporGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoPedidoExporGenerico!=null && jComboBoxid_periodoPedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_periodoPedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_anioPedidoExpor.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioPedidoExpor.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_anioPedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_anioPedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioPedidoExporGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioPedidoExporGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioPedidoExporGenerico!=null && jComboBoxid_anioPedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_anioPedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_mesPedidoExpor.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesPedidoExpor.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_mesPedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_mesPedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesPedidoExporGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesPedidoExporGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesPedidoExporGenerico!=null && jComboBoxid_mesPedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_mesPedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUsuarioForeignKey(Long idUsuarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(usuarioTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setUsuario(usuarioTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_usuarioPedidoExpor.setSelectedItem(usuarioTemp);
					}
				} else {
					//jComboBoxid_usuarioPedidoExpor.setSelectedItem(usuarioTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_usuarioPedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_usuarioPedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUsuarioForeignKeyDescripcion(Long idUsuarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}


			sDescripcion=UsuarioConstantesFunciones.getUsuarioDescripcion(usuarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUsuarioForeignKeyGenerico(Long idUsuarioSeleccionado,JComboBox jComboBoxid_usuarioPedidoExporGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(usuarioTemp!=null) {
				jComboBoxid_usuarioPedidoExporGenerico.setSelectedItem(usuarioTemp);
			} else {
				if(jComboBoxid_usuarioPedidoExporGenerico!=null && jComboBoxid_usuarioPedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_usuarioPedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMonedaForeignKey(Long idMonedaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(monedaTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setMoneda(monedaTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_monedaPedidoExpor.setSelectedItem(monedaTemp);
					}
				} else {
					//jComboBoxid_monedaPedidoExpor.setSelectedItem(monedaTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_monedaPedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_monedaPedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMonedaForeignKeyDescripcion(Long idMonedaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}


			sDescripcion=MonedaConstantesFunciones.getMonedaDescripcion(monedaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMonedaForeignKeyGenerico(Long idMonedaSeleccionado,JComboBox jComboBoxid_monedaPedidoExporGenerico)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(monedaTemp!=null) {
				jComboBoxid_monedaPedidoExporGenerico.setSelectedItem(monedaTemp);
			} else {
				if(jComboBoxid_monedaPedidoExporGenerico!=null && jComboBoxid_monedaPedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_monedaPedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpleadoForeignKey(Long idEmpleadoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empleadoTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setEmpleado(empleadoTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empleadoPedidoExpor.setSelectedItem(empleadoTemp);
					}
				} else {
					//jComboBoxid_empleadoPedidoExpor.setSelectedItem(empleadoTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empleadoPedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empleadoPedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){
					if(empleadoTemp!=null && jComboBoxid_empleadoFK_IdEmpleadoPedidoExpor!=null) {
						jComboBoxid_empleadoFK_IdEmpleadoPedidoExpor.setSelectedItem(empleadoTemp);
					} else {
						if(jComboBoxid_empleadoFK_IdEmpleadoPedidoExpor!=null) {
							//jComboBoxid_empleadoFK_IdEmpleadoPedidoExpor.setSelectedItem(empleadoTemp);
							if(jComboBoxid_empleadoFK_IdEmpleadoPedidoExpor.getItemCount()>0) {
								jComboBoxid_empleadoFK_IdEmpleadoPedidoExpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpleadoForeignKeyDescripcion(Long idEmpleadoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}


			sDescripcion=EmpleadoConstantesFunciones.getEmpleadoDescripcion(empleadoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpleadoForeignKeyGenerico(Long idEmpleadoSeleccionado,JComboBox jComboBoxid_empleadoPedidoExporGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(empleadoTemp!=null) {
				jComboBoxid_empleadoPedidoExporGenerico.setSelectedItem(empleadoTemp);
			} else {
				if(jComboBoxid_empleadoPedidoExporGenerico!=null && jComboBoxid_empleadoPedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_empleadoPedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoPrecioForeignKey(Long idTipoPrecioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosForeignKey) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipoprecioTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setTipoPrecio(tipoprecioTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_precioPedidoExpor.setSelectedItem(tipoprecioTemp);
					}
				} else {
					//jComboBoxid_tipo_precioPedidoExpor.setSelectedItem(tipoprecioTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_precioPedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_precioPedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoPrecio") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipoprecioTemp!=null && jComboBoxid_tipo_precioFK_IdTipoPrecioPedidoExpor!=null) {
						jComboBoxid_tipo_precioFK_IdTipoPrecioPedidoExpor.setSelectedItem(tipoprecioTemp);
					} else {
						if(jComboBoxid_tipo_precioFK_IdTipoPrecioPedidoExpor!=null) {
							//jComboBoxid_tipo_precioFK_IdTipoPrecioPedidoExpor.setSelectedItem(tipoprecioTemp);
							if(jComboBoxid_tipo_precioFK_IdTipoPrecioPedidoExpor.getItemCount()>0) {
								jComboBoxid_tipo_precioFK_IdTipoPrecioPedidoExpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoPrecioForeignKeyDescripcion(Long idTipoPrecioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosForeignKey) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}


			sDescripcion=TipoPrecioConstantesFunciones.getTipoPrecioDescripcion(tipoprecioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoPrecioForeignKeyGenerico(Long idTipoPrecioSeleccionado,JComboBox jComboBoxid_tipo_precioPedidoExporGenerico)throws Exception
	{
		try
		{
			TipoPrecio  tipoprecioTemp=null;

			for(TipoPrecio tipoprecioAux:tipopreciosForeignKey) {
				if(tipoprecioAux.getId()!=null && tipoprecioAux.getId().equals(idTipoPrecioSeleccionado)) {
					tipoprecioTemp=tipoprecioAux;
					break;
				}
			}

			if(tipoprecioTemp!=null) {
				jComboBoxid_tipo_precioPedidoExporGenerico.setSelectedItem(tipoprecioTemp);
			} else {
				if(jComboBoxid_tipo_precioPedidoExporGenerico!=null && jComboBoxid_tipo_precioPedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_tipo_precioPedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualFormatoForeignKey(Long idFormatoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(formatoTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setFormato(formatoTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_formatoPedidoExpor.setSelectedItem(formatoTemp);
					}
				} else {
					//jComboBoxid_formatoPedidoExpor.setSelectedItem(formatoTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_formatoPedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_formatoPedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdFormato") || sFormularioTipoBusqueda.equals("Todos")){
					if(formatoTemp!=null && jComboBoxid_formatoFK_IdFormatoPedidoExpor!=null) {
						jComboBoxid_formatoFK_IdFormatoPedidoExpor.setSelectedItem(formatoTemp);
					} else {
						if(jComboBoxid_formatoFK_IdFormatoPedidoExpor!=null) {
							//jComboBoxid_formatoFK_IdFormatoPedidoExpor.setSelectedItem(formatoTemp);
							if(jComboBoxid_formatoFK_IdFormatoPedidoExpor.getItemCount()>0) {
								jComboBoxid_formatoFK_IdFormatoPedidoExpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualFormatoForeignKeyDescripcion(Long idFormatoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}


			sDescripcion=FormatoConstantesFunciones.getFormatoDescripcion(formatoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualFormatoForeignKeyGenerico(Long idFormatoSeleccionado,JComboBox jComboBoxid_formatoPedidoExporGenerico)throws Exception
	{
		try
		{
			Formato  formatoTemp=null;

			for(Formato formatoAux:formatosForeignKey) {
				if(formatoAux.getId()!=null && formatoAux.getId().equals(idFormatoSeleccionado)) {
					formatoTemp=formatoAux;
					break;
				}
			}

			if(formatoTemp!=null) {
				jComboBoxid_formatoPedidoExporGenerico.setSelectedItem(formatoTemp);
			} else {
				if(jComboBoxid_formatoPedidoExporGenerico!=null && jComboBoxid_formatoPedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_formatoPedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteForeignKey(Long idClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setCliente(clienteTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_clientePedidoExpor.setSelectedItem(clienteTemp);
					}
				} else {
					//jComboBoxid_clientePedidoExpor.setSelectedItem(clienteTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_clientePedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_clientePedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteTemp!=null && jComboBoxid_clienteFK_IdClientePedidoExpor!=null) {
						jComboBoxid_clienteFK_IdClientePedidoExpor.setSelectedItem(clienteTemp);
					} else {
						if(jComboBoxid_clienteFK_IdClientePedidoExpor!=null) {
							//jComboBoxid_clienteFK_IdClientePedidoExpor.setSelectedItem(clienteTemp);
							if(jComboBoxid_clienteFK_IdClientePedidoExpor.getItemCount()>0) {
								jComboBoxid_clienteFK_IdClientePedidoExpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteForeignKeyDescripcion(Long idClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteForeignKeyGenerico(Long idClienteSeleccionado,JComboBox jComboBoxid_clientePedidoExporGenerico)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(clienteTemp!=null) {
				jComboBoxid_clientePedidoExporGenerico.setSelectedItem(clienteTemp);
			} else {
				if(jComboBoxid_clientePedidoExporGenerico!=null && jComboBoxid_clientePedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_clientePedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPaisForeignKey(Long idPaisSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(paisTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setPais(paisTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_paisPedidoExpor.setSelectedItem(paisTemp);
					}
				} else {
					//jComboBoxid_paisPedidoExpor.setSelectedItem(paisTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_paisPedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_paisPedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdPais") || sFormularioTipoBusqueda.equals("Todos")){
					if(paisTemp!=null && jComboBoxid_paisFK_IdPaisPedidoExpor!=null) {
						jComboBoxid_paisFK_IdPaisPedidoExpor.setSelectedItem(paisTemp);
					} else {
						if(jComboBoxid_paisFK_IdPaisPedidoExpor!=null) {
							//jComboBoxid_paisFK_IdPaisPedidoExpor.setSelectedItem(paisTemp);
							if(jComboBoxid_paisFK_IdPaisPedidoExpor.getItemCount()>0) {
								jComboBoxid_paisFK_IdPaisPedidoExpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPaisForeignKeyDescripcion(Long idPaisSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}


			sDescripcion=PaisConstantesFunciones.getPaisDescripcion(paisTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPaisForeignKeyGenerico(Long idPaisSeleccionado,JComboBox jComboBoxid_paisPedidoExporGenerico)throws Exception
	{
		try
		{
			Pais  paisTemp=null;

			for(Pais paisAux:paissForeignKey) {
				if(paisAux.getId()!=null && paisAux.getId().equals(idPaisSeleccionado)) {
					paisTemp=paisAux;
					break;
				}
			}

			if(paisTemp!=null) {
				jComboBoxid_paisPedidoExporGenerico.setSelectedItem(paisTemp);
			} else {
				if(jComboBoxid_paisPedidoExporGenerico!=null && jComboBoxid_paisPedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_paisPedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransporteForeignKey(Long idTransporteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transporte  transporteTemp=null;

			for(Transporte transporteAux:transportesForeignKey) {
				if(transporteAux.getId()!=null && transporteAux.getId().equals(idTransporteSeleccionado)) {
					transporteTemp=transporteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transporteTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setTransporte(transporteTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportePedidoExpor.setSelectedItem(transporteTemp);
					}
				} else {
					//jComboBoxid_transportePedidoExpor.setSelectedItem(transporteTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportePedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportePedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransporte") || sFormularioTipoBusqueda.equals("Todos")){
					if(transporteTemp!=null && jComboBoxid_transporteFK_IdTransportePedidoExpor!=null) {
						jComboBoxid_transporteFK_IdTransportePedidoExpor.setSelectedItem(transporteTemp);
					} else {
						if(jComboBoxid_transporteFK_IdTransportePedidoExpor!=null) {
							//jComboBoxid_transporteFK_IdTransportePedidoExpor.setSelectedItem(transporteTemp);
							if(jComboBoxid_transporteFK_IdTransportePedidoExpor.getItemCount()>0) {
								jComboBoxid_transporteFK_IdTransportePedidoExpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransporteForeignKeyDescripcion(Long idTransporteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transporte  transporteTemp=null;

			for(Transporte transporteAux:transportesForeignKey) {
				if(transporteAux.getId()!=null && transporteAux.getId().equals(idTransporteSeleccionado)) {
					transporteTemp=transporteAux;
					break;
				}
			}


			sDescripcion=TransporteConstantesFunciones.getTransporteDescripcion(transporteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransporteForeignKeyGenerico(Long idTransporteSeleccionado,JComboBox jComboBoxid_transportePedidoExporGenerico)throws Exception
	{
		try
		{
			Transporte  transporteTemp=null;

			for(Transporte transporteAux:transportesForeignKey) {
				if(transporteAux.getId()!=null && transporteAux.getId().equals(idTransporteSeleccionado)) {
					transporteTemp=transporteAux;
					break;
				}
			}

			if(transporteTemp!=null) {
				jComboBoxid_transportePedidoExporGenerico.setSelectedItem(transporteTemp);
			} else {
				if(jComboBoxid_transportePedidoExporGenerico!=null && jComboBoxid_transportePedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_transportePedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualVendedorForeignKey(Long idVendedorSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(vendedorTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setVendedor(vendedorTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_vendedorPedidoExpor.setSelectedItem(vendedorTemp);
					}
				} else {
					//jComboBoxid_vendedorPedidoExpor.setSelectedItem(vendedorTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_vendedorPedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_vendedorPedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdVendedor") || sFormularioTipoBusqueda.equals("Todos")){
					if(vendedorTemp!=null && jComboBoxid_vendedorFK_IdVendedorPedidoExpor!=null) {
						jComboBoxid_vendedorFK_IdVendedorPedidoExpor.setSelectedItem(vendedorTemp);
					} else {
						if(jComboBoxid_vendedorFK_IdVendedorPedidoExpor!=null) {
							//jComboBoxid_vendedorFK_IdVendedorPedidoExpor.setSelectedItem(vendedorTemp);
							if(jComboBoxid_vendedorFK_IdVendedorPedidoExpor.getItemCount()>0) {
								jComboBoxid_vendedorFK_IdVendedorPedidoExpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualVendedorForeignKeyDescripcion(Long idVendedorSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}


			sDescripcion=VendedorConstantesFunciones.getVendedorDescripcion(vendedorTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualVendedorForeignKeyGenerico(Long idVendedorSeleccionado,JComboBox jComboBoxid_vendedorPedidoExporGenerico)throws Exception
	{
		try
		{
			Vendedor  vendedorTemp=null;

			for(Vendedor vendedorAux:vendedorsForeignKey) {
				if(vendedorAux.getId()!=null && vendedorAux.getId().equals(idVendedorSeleccionado)) {
					vendedorTemp=vendedorAux;
					break;
				}
			}

			if(vendedorTemp!=null) {
				jComboBoxid_vendedorPedidoExporGenerico.setSelectedItem(vendedorTemp);
			} else {
				if(jComboBoxid_vendedorPedidoExporGenerico!=null && jComboBoxid_vendedorPedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_vendedorPedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSubClienteForeignKey(Long idSubClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			SubCliente  subclienteTemp=null;

			for(SubCliente subclienteAux:subclientesForeignKey) {
				if(subclienteAux.getId()!=null && subclienteAux.getId().equals(idSubClienteSeleccionado)) {
					subclienteTemp=subclienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(subclienteTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setSubCliente(subclienteTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sub_clientePedidoExpor.setSelectedItem(subclienteTemp);
					}
				} else {
					//jComboBoxid_sub_clientePedidoExpor.setSelectedItem(subclienteTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sub_clientePedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sub_clientePedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdSubCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(subclienteTemp!=null && jComboBoxid_sub_clienteFK_IdSubClientePedidoExpor!=null) {
						jComboBoxid_sub_clienteFK_IdSubClientePedidoExpor.setSelectedItem(subclienteTemp);
					} else {
						if(jComboBoxid_sub_clienteFK_IdSubClientePedidoExpor!=null) {
							//jComboBoxid_sub_clienteFK_IdSubClientePedidoExpor.setSelectedItem(subclienteTemp);
							if(jComboBoxid_sub_clienteFK_IdSubClientePedidoExpor.getItemCount()>0) {
								jComboBoxid_sub_clienteFK_IdSubClientePedidoExpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSubClienteForeignKeyDescripcion(Long idSubClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			SubCliente  subclienteTemp=null;

			for(SubCliente subclienteAux:subclientesForeignKey) {
				if(subclienteAux.getId()!=null && subclienteAux.getId().equals(idSubClienteSeleccionado)) {
					subclienteTemp=subclienteAux;
					break;
				}
			}


			sDescripcion=SubClienteConstantesFunciones.getSubClienteDescripcion(subclienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSubClienteForeignKeyGenerico(Long idSubClienteSeleccionado,JComboBox jComboBoxid_sub_clientePedidoExporGenerico)throws Exception
	{
		try
		{
			SubCliente  subclienteTemp=null;

			for(SubCliente subclienteAux:subclientesForeignKey) {
				if(subclienteAux.getId()!=null && subclienteAux.getId().equals(idSubClienteSeleccionado)) {
					subclienteTemp=subclienteAux;
					break;
				}
			}

			if(subclienteTemp!=null) {
				jComboBoxid_sub_clientePedidoExporGenerico.setSelectedItem(subclienteTemp);
			} else {
				if(jComboBoxid_sub_clientePedidoExporGenerico!=null && jComboBoxid_sub_clientePedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_sub_clientePedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualConsignatarioForeignKey(Long idConsignatarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Consignatario  consignatarioTemp=null;

			for(Consignatario consignatarioAux:consignatariosForeignKey) {
				if(consignatarioAux.getId()!=null && consignatarioAux.getId().equals(idConsignatarioSeleccionado)) {
					consignatarioTemp=consignatarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(consignatarioTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setConsignatario(consignatarioTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consignatarioPedidoExpor.setSelectedItem(consignatarioTemp);
					}
				} else {
					//jComboBoxid_consignatarioPedidoExpor.setSelectedItem(consignatarioTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consignatarioPedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consignatarioPedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdConsignatario") || sFormularioTipoBusqueda.equals("Todos")){
					if(consignatarioTemp!=null && jComboBoxid_consignatarioFK_IdConsignatarioPedidoExpor!=null) {
						jComboBoxid_consignatarioFK_IdConsignatarioPedidoExpor.setSelectedItem(consignatarioTemp);
					} else {
						if(jComboBoxid_consignatarioFK_IdConsignatarioPedidoExpor!=null) {
							//jComboBoxid_consignatarioFK_IdConsignatarioPedidoExpor.setSelectedItem(consignatarioTemp);
							if(jComboBoxid_consignatarioFK_IdConsignatarioPedidoExpor.getItemCount()>0) {
								jComboBoxid_consignatarioFK_IdConsignatarioPedidoExpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualConsignatarioForeignKeyDescripcion(Long idConsignatarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Consignatario  consignatarioTemp=null;

			for(Consignatario consignatarioAux:consignatariosForeignKey) {
				if(consignatarioAux.getId()!=null && consignatarioAux.getId().equals(idConsignatarioSeleccionado)) {
					consignatarioTemp=consignatarioAux;
					break;
				}
			}


			sDescripcion=ConsignatarioConstantesFunciones.getConsignatarioDescripcion(consignatarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualConsignatarioForeignKeyGenerico(Long idConsignatarioSeleccionado,JComboBox jComboBoxid_consignatarioPedidoExporGenerico)throws Exception
	{
		try
		{
			Consignatario  consignatarioTemp=null;

			for(Consignatario consignatarioAux:consignatariosForeignKey) {
				if(consignatarioAux.getId()!=null && consignatarioAux.getId().equals(idConsignatarioSeleccionado)) {
					consignatarioTemp=consignatarioAux;
					break;
				}
			}

			if(consignatarioTemp!=null) {
				jComboBoxid_consignatarioPedidoExporGenerico.setSelectedItem(consignatarioTemp);
			} else {
				if(jComboBoxid_consignatarioPedidoExporGenerico!=null && jComboBoxid_consignatarioPedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_consignatarioPedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualConsultorForeignKey(Long idConsultorSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Consultor  consultorTemp=null;

			for(Consultor consultorAux:consultorsForeignKey) {
				if(consultorAux.getId()!=null && consultorAux.getId().equals(idConsultorSeleccionado)) {
					consultorTemp=consultorAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(consultorTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setConsultor(consultorTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consultorPedidoExpor.setSelectedItem(consultorTemp);
					}
				} else {
					//jComboBoxid_consultorPedidoExpor.setSelectedItem(consultorTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consultorPedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consultorPedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdConsultor") || sFormularioTipoBusqueda.equals("Todos")){
					if(consultorTemp!=null && jComboBoxid_consultorFK_IdConsultorPedidoExpor!=null) {
						jComboBoxid_consultorFK_IdConsultorPedidoExpor.setSelectedItem(consultorTemp);
					} else {
						if(jComboBoxid_consultorFK_IdConsultorPedidoExpor!=null) {
							//jComboBoxid_consultorFK_IdConsultorPedidoExpor.setSelectedItem(consultorTemp);
							if(jComboBoxid_consultorFK_IdConsultorPedidoExpor.getItemCount()>0) {
								jComboBoxid_consultorFK_IdConsultorPedidoExpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualConsultorForeignKeyDescripcion(Long idConsultorSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Consultor  consultorTemp=null;

			for(Consultor consultorAux:consultorsForeignKey) {
				if(consultorAux.getId()!=null && consultorAux.getId().equals(idConsultorSeleccionado)) {
					consultorTemp=consultorAux;
					break;
				}
			}


			sDescripcion=ConsultorConstantesFunciones.getConsultorDescripcion(consultorTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualConsultorForeignKeyGenerico(Long idConsultorSeleccionado,JComboBox jComboBoxid_consultorPedidoExporGenerico)throws Exception
	{
		try
		{
			Consultor  consultorTemp=null;

			for(Consultor consultorAux:consultorsForeignKey) {
				if(consultorAux.getId()!=null && consultorAux.getId().equals(idConsultorSeleccionado)) {
					consultorTemp=consultorAux;
					break;
				}
			}

			if(consultorTemp!=null) {
				jComboBoxid_consultorPedidoExporGenerico.setSelectedItem(consultorTemp);
			} else {
				if(jComboBoxid_consultorPedidoExporGenerico!=null && jComboBoxid_consultorPedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_consultorPedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoPedidoExporForeignKey(Long idEstadoPedidoExporSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidoexporTemp=null;

			for(EstadoPedido estadopedidoexporAux:estadopedidoexporsForeignKey) {
				if(estadopedidoexporAux.getId()!=null && estadopedidoexporAux.getId().equals(idEstadoPedidoExporSeleccionado)) {
					estadopedidoexporTemp=estadopedidoexporAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadopedidoexporTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setEstadoPedidoExpor(estadopedidoexporTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_estado_pedidoPedidoExpor.setSelectedItem(estadopedidoexporTemp);
					}
				} else {
					//jComboBoxid_estado_pedidoPedidoExpor.setSelectedItem(estadopedidoexporTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_estado_pedidoPedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_estado_pedidoPedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedidoExpor") || sFormularioTipoBusqueda.equals("Todos")){
					if(estadopedidoexporTemp!=null && jComboBoxid_estado_pedidoFK_IdEstadoPedidoExporPedidoExpor!=null) {
						jComboBoxid_estado_pedidoFK_IdEstadoPedidoExporPedidoExpor.setSelectedItem(estadopedidoexporTemp);
					} else {
						if(jComboBoxid_estado_pedidoFK_IdEstadoPedidoExporPedidoExpor!=null) {
							//jComboBoxid_estado_pedidoFK_IdEstadoPedidoExporPedidoExpor.setSelectedItem(estadopedidoexporTemp);
							if(jComboBoxid_estado_pedidoFK_IdEstadoPedidoExporPedidoExpor.getItemCount()>0) {
								jComboBoxid_estado_pedidoFK_IdEstadoPedidoExporPedidoExpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoPedidoExporForeignKeyDescripcion(Long idEstadoPedidoExporSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoPedido  estadopedidoexporTemp=null;

			for(EstadoPedido estadopedidoexporAux:estadopedidoexporsForeignKey) {
				if(estadopedidoexporAux.getId()!=null && estadopedidoexporAux.getId().equals(idEstadoPedidoExporSeleccionado)) {
					estadopedidoexporTemp=estadopedidoexporAux;
					break;
				}
			}


			sDescripcion=EstadoPedidoConstantesFunciones.getEstadoPedidoDescripcion(estadopedidoexporTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoPedidoExporForeignKeyGenerico(Long idEstadoPedidoExporSeleccionado,JComboBox jComboBoxid_estado_pedidoPedidoExporGenerico)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidoexporTemp=null;

			for(EstadoPedido estadopedidoexporAux:estadopedidoexporsForeignKey) {
				if(estadopedidoexporAux.getId()!=null && estadopedidoexporAux.getId().equals(idEstadoPedidoExporSeleccionado)) {
					estadopedidoexporTemp=estadopedidoexporAux;
					break;
				}
			}

			if(estadopedidoexporTemp!=null) {
				jComboBoxid_estado_pedidoPedidoExporGenerico.setSelectedItem(estadopedidoexporTemp);
			} else {
				if(jComboBoxid_estado_pedidoPedidoExporGenerico!=null && jComboBoxid_estado_pedidoPedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_estado_pedidoPedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoCambioForeignKey(Long idTipoCambioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipocambioTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setTipoCambio(tipocambioTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_cambioPedidoExpor.setSelectedItem(tipocambioTemp);
					}
				} else {
					//jComboBoxid_tipo_cambioPedidoExpor.setSelectedItem(tipocambioTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_cambioPedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_cambioPedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoCambio") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipocambioTemp!=null && jComboBoxid_tipo_cambioFK_IdTipoCambioPedidoExpor!=null) {
						jComboBoxid_tipo_cambioFK_IdTipoCambioPedidoExpor.setSelectedItem(tipocambioTemp);
					} else {
						if(jComboBoxid_tipo_cambioFK_IdTipoCambioPedidoExpor!=null) {
							//jComboBoxid_tipo_cambioFK_IdTipoCambioPedidoExpor.setSelectedItem(tipocambioTemp);
							if(jComboBoxid_tipo_cambioFK_IdTipoCambioPedidoExpor.getItemCount()>0) {
								jComboBoxid_tipo_cambioFK_IdTipoCambioPedidoExpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoCambioForeignKeyDescripcion(Long idTipoCambioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}


			sDescripcion=TipoCambioConstantesFunciones.getTipoCambioDescripcion(tipocambioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoCambioForeignKeyGenerico(Long idTipoCambioSeleccionado,JComboBox jComboBoxid_tipo_cambioPedidoExporGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioTemp=null;

			for(TipoCambio tipocambioAux:tipocambiosForeignKey) {
				if(tipocambioAux.getId()!=null && tipocambioAux.getId().equals(idTipoCambioSeleccionado)) {
					tipocambioTemp=tipocambioAux;
					break;
				}
			}

			if(tipocambioTemp!=null) {
				jComboBoxid_tipo_cambioPedidoExporGenerico.setSelectedItem(tipocambioTemp);
			} else {
				if(jComboBoxid_tipo_cambioPedidoExporGenerico!=null && jComboBoxid_tipo_cambioPedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_tipo_cambioPedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCentroCostoForeignKey(Long idCentroCostoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(centrocostoTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setCentroCosto(centrocostoTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_centro_costoPedidoExpor.setSelectedItem(centrocostoTemp);
					}
				} else {
					//jComboBoxid_centro_costoPedidoExpor.setSelectedItem(centrocostoTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_centro_costoPedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_centro_costoPedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){
					if(centrocostoTemp!=null && jComboBoxid_centro_costoFK_IdCentroCostoPedidoExpor!=null) {
						jComboBoxid_centro_costoFK_IdCentroCostoPedidoExpor.setSelectedItem(centrocostoTemp);
					} else {
						if(jComboBoxid_centro_costoFK_IdCentroCostoPedidoExpor!=null) {
							//jComboBoxid_centro_costoFK_IdCentroCostoPedidoExpor.setSelectedItem(centrocostoTemp);
							if(jComboBoxid_centro_costoFK_IdCentroCostoPedidoExpor.getItemCount()>0) {
								jComboBoxid_centro_costoFK_IdCentroCostoPedidoExpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCentroCostoForeignKeyDescripcion(Long idCentroCostoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}


			sDescripcion=CentroCostoConstantesFunciones.getCentroCostoDescripcion(centrocostoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCentroCostoForeignKeyGenerico(Long idCentroCostoSeleccionado,JComboBox jComboBoxid_centro_costoPedidoExporGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoTemp=null;

			for(CentroCosto centrocostoAux:centrocostosForeignKey) {
				if(centrocostoAux.getId()!=null && centrocostoAux.getId().equals(idCentroCostoSeleccionado)) {
					centrocostoTemp=centrocostoAux;
					break;
				}
			}

			if(centrocostoTemp!=null) {
				jComboBoxid_centro_costoPedidoExporGenerico.setSelectedItem(centrocostoTemp);
			} else {
				if(jComboBoxid_centro_costoPedidoExporGenerico!=null && jComboBoxid_centro_costoPedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_centro_costoPedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualResponsableForeignKey(Long idResponsableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Responsable  responsableTemp=null;

			for(Responsable responsableAux:responsablesForeignKey) {
				if(responsableAux.getId()!=null && responsableAux.getId().equals(idResponsableSeleccionado)) {
					responsableTemp=responsableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(responsableTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setResponsable(responsableTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_responsablePedidoExpor.setSelectedItem(responsableTemp);
					}
				} else {
					//jComboBoxid_responsablePedidoExpor.setSelectedItem(responsableTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_responsablePedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_responsablePedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdResponsable") || sFormularioTipoBusqueda.equals("Todos")){
					if(responsableTemp!=null && jComboBoxid_responsableFK_IdResponsablePedidoExpor!=null) {
						jComboBoxid_responsableFK_IdResponsablePedidoExpor.setSelectedItem(responsableTemp);
					} else {
						if(jComboBoxid_responsableFK_IdResponsablePedidoExpor!=null) {
							//jComboBoxid_responsableFK_IdResponsablePedidoExpor.setSelectedItem(responsableTemp);
							if(jComboBoxid_responsableFK_IdResponsablePedidoExpor.getItemCount()>0) {
								jComboBoxid_responsableFK_IdResponsablePedidoExpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualResponsableForeignKeyDescripcion(Long idResponsableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Responsable  responsableTemp=null;

			for(Responsable responsableAux:responsablesForeignKey) {
				if(responsableAux.getId()!=null && responsableAux.getId().equals(idResponsableSeleccionado)) {
					responsableTemp=responsableAux;
					break;
				}
			}


			sDescripcion=ResponsableConstantesFunciones.getResponsableDescripcion(responsableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualResponsableForeignKeyGenerico(Long idResponsableSeleccionado,JComboBox jComboBoxid_responsablePedidoExporGenerico)throws Exception
	{
		try
		{
			Responsable  responsableTemp=null;

			for(Responsable responsableAux:responsablesForeignKey) {
				if(responsableAux.getId()!=null && responsableAux.getId().equals(idResponsableSeleccionado)) {
					responsableTemp=responsableAux;
					break;
				}
			}

			if(responsableTemp!=null) {
				jComboBoxid_responsablePedidoExporGenerico.setSelectedItem(responsableTemp);
			} else {
				if(jComboBoxid_responsablePedidoExporGenerico!=null && jComboBoxid_responsablePedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_responsablePedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransportistaForeignKey(Long idTransportistaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transportista  transportistaTemp=null;

			for(Transportista transportistaAux:transportistasForeignKey) {
				if(transportistaAux.getId()!=null && transportistaAux.getId().equals(idTransportistaSeleccionado)) {
					transportistaTemp=transportistaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transportistaTemp!=null) {

					if(this.pedidoexpor!=null) {
						this.pedidoexpor.setTransportista(transportistaTemp);
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportistaPedidoExpor.setSelectedItem(transportistaTemp);
					}
				} else {
					//jComboBoxid_transportistaPedidoExpor.setSelectedItem(transportistaTemp);
					if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
						if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportistaPedidoExpor.getItemCount()>0) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportistaPedidoExpor.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransportista") || sFormularioTipoBusqueda.equals("Todos")){
					if(transportistaTemp!=null && jComboBoxid_transportistaFK_IdTransportistaPedidoExpor!=null) {
						jComboBoxid_transportistaFK_IdTransportistaPedidoExpor.setSelectedItem(transportistaTemp);
					} else {
						if(jComboBoxid_transportistaFK_IdTransportistaPedidoExpor!=null) {
							//jComboBoxid_transportistaFK_IdTransportistaPedidoExpor.setSelectedItem(transportistaTemp);
							if(jComboBoxid_transportistaFK_IdTransportistaPedidoExpor.getItemCount()>0) {
								jComboBoxid_transportistaFK_IdTransportistaPedidoExpor.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransportistaForeignKeyDescripcion(Long idTransportistaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transportista  transportistaTemp=null;

			for(Transportista transportistaAux:transportistasForeignKey) {
				if(transportistaAux.getId()!=null && transportistaAux.getId().equals(idTransportistaSeleccionado)) {
					transportistaTemp=transportistaAux;
					break;
				}
			}


			sDescripcion=TransportistaConstantesFunciones.getTransportistaDescripcion(transportistaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransportistaForeignKeyGenerico(Long idTransportistaSeleccionado,JComboBox jComboBoxid_transportistaPedidoExporGenerico)throws Exception
	{
		try
		{
			Transportista  transportistaTemp=null;

			for(Transportista transportistaAux:transportistasForeignKey) {
				if(transportistaAux.getId()!=null && transportistaAux.getId().equals(idTransportistaSeleccionado)) {
					transportistaTemp=transportistaAux;
					break;
				}
			}

			if(transportistaTemp!=null) {
				jComboBoxid_transportistaPedidoExporGenerico.setSelectedItem(transportistaTemp);
			} else {
				if(jComboBoxid_transportistaPedidoExporGenerico!=null && jComboBoxid_transportistaPedidoExporGenerico.getItemCount()>0) {
					jComboBoxid_transportistaPedidoExporGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_empresaPedidoExporGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaPedidoExporGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empresaPedidoExpor.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaPedidoExporGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				pedidoexpor.setid_empresa(empresaAux.getId());
				pedidoexpor.setempresa_descripcion(PedidoExporConstantesFunciones.getEmpresaDescripcion(empresaAux));
				pedidoexpor.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_sucursalPedidoExporGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalPedidoExporGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sucursalPedidoExpor.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalPedidoExporGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				pedidoexpor.setid_sucursal(sucursalAux.getId());
				pedidoexpor.setsucursal_descripcion(PedidoExporConstantesFunciones.getSucursalDescripcion(sucursalAux));
				pedidoexpor.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_ejercicioPedidoExporGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioPedidoExporGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_ejercicioPedidoExpor.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioPedidoExporGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				pedidoexpor.setid_ejercicio(ejercicioAux.getId());
				pedidoexpor.setejercicio_descripcion(PedidoExporConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				pedidoexpor.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_periodoPedidoExporGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoPedidoExporGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_periodoPedidoExpor.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoPedidoExporGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				pedidoexpor.setid_periodo(periodoAux.getId());
				pedidoexpor.setperiodo_descripcion(PedidoExporConstantesFunciones.getPeriodoDescripcion(periodoAux));
				pedidoexpor.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_anioPedidoExporGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioPedidoExporGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_anioPedidoExpor.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioPedidoExporGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				pedidoexpor.setid_anio(anioAux.getId());
				pedidoexpor.setanio_descripcion(PedidoExporConstantesFunciones.getAnioDescripcion(anioAux));
				pedidoexpor.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_mesPedidoExporGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesPedidoExporGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_mesPedidoExpor.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesPedidoExporGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				pedidoexpor.setid_mes(mesAux.getId());
				pedidoexpor.setmes_descripcion(PedidoExporConstantesFunciones.getMesDescripcion(mesAux));
				pedidoexpor.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUsuarioForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_usuarioPedidoExporGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioAux=new Usuario();

			if(jComboBoxid_usuarioPedidoExporGenerico==null) {
				usuarioAux=(Usuario)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_usuarioPedidoExpor.getSelectedItem();
			} else {
				usuarioAux=(Usuario)jComboBoxid_usuarioPedidoExporGenerico.getSelectedItem();
			}

			if(usuarioAux!=null && usuarioAux.getId()!=null) {
				pedidoexpor.setid_usuario(usuarioAux.getId());
				pedidoexpor.setusuario_descripcion(PedidoExporConstantesFunciones.getUsuarioDescripcion(usuarioAux));
				pedidoexpor.setUsuario(usuarioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMonedaForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_monedaPedidoExporGenerico)throws Exception
	{
		try
		{
			Moneda  monedaAux=new Moneda();

			if(jComboBoxid_monedaPedidoExporGenerico==null) {
				monedaAux=(Moneda)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_monedaPedidoExpor.getSelectedItem();
			} else {
				monedaAux=(Moneda)jComboBoxid_monedaPedidoExporGenerico.getSelectedItem();
			}

			if(monedaAux!=null && monedaAux.getId()!=null) {
				pedidoexpor.setid_moneda(monedaAux.getId());
				pedidoexpor.setmoneda_descripcion(PedidoExporConstantesFunciones.getMonedaDescripcion(monedaAux));
				pedidoexpor.setMoneda(monedaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpleadoForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_empleadoPedidoExporGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoAux=new Empleado();

			if(jComboBoxid_empleadoPedidoExporGenerico==null) {
				empleadoAux=(Empleado)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empleadoPedidoExpor.getSelectedItem();
			} else {
				empleadoAux=(Empleado)jComboBoxid_empleadoPedidoExporGenerico.getSelectedItem();
			}

			if(empleadoAux!=null && empleadoAux.getId()!=null) {
				pedidoexpor.setid_empleado(empleadoAux.getId());
				pedidoexpor.setempleado_descripcion(PedidoExporConstantesFunciones.getEmpleadoDescripcion(empleadoAux));
				pedidoexpor.setEmpleado(empleadoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoPrecioForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_tipo_precioPedidoExporGenerico)throws Exception
	{
		try
		{
			TipoPrecio  tipoprecioAux=new TipoPrecio();

			if(jComboBoxid_tipo_precioPedidoExporGenerico==null) {
				tipoprecioAux=(TipoPrecio)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_precioPedidoExpor.getSelectedItem();
			} else {
				tipoprecioAux=(TipoPrecio)jComboBoxid_tipo_precioPedidoExporGenerico.getSelectedItem();
			}

			if(tipoprecioAux!=null && tipoprecioAux.getId()!=null) {
				pedidoexpor.setid_tipo_precio(tipoprecioAux.getId());
				pedidoexpor.settipoprecio_descripcion(PedidoExporConstantesFunciones.getTipoPrecioDescripcion(tipoprecioAux));
				pedidoexpor.setTipoPrecio(tipoprecioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarFormatoForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_formatoPedidoExporGenerico)throws Exception
	{
		try
		{
			Formato  formatoAux=new Formato();

			if(jComboBoxid_formatoPedidoExporGenerico==null) {
				formatoAux=(Formato)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_formatoPedidoExpor.getSelectedItem();
			} else {
				formatoAux=(Formato)jComboBoxid_formatoPedidoExporGenerico.getSelectedItem();
			}

			if(formatoAux!=null) {
				pedidoexpor.setid_formato(formatoAux.getId());
				pedidoexpor.setformato_descripcion(PedidoExporConstantesFunciones.getFormatoDescripcion(formatoAux));
				pedidoexpor.setFormato(formatoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_clientePedidoExporGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_clientePedidoExporGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_clientePedidoExpor.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_clientePedidoExporGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				pedidoexpor.setid_cliente(clienteAux.getId());
				pedidoexpor.setcliente_descripcion(PedidoExporConstantesFunciones.getClienteDescripcion(clienteAux));
				pedidoexpor.setCliente(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPaisForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_paisPedidoExporGenerico)throws Exception
	{
		try
		{
			Pais  paisAux=new Pais();

			if(jComboBoxid_paisPedidoExporGenerico==null) {
				paisAux=(Pais)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_paisPedidoExpor.getSelectedItem();
			} else {
				paisAux=(Pais)jComboBoxid_paisPedidoExporGenerico.getSelectedItem();
			}

			if(paisAux!=null) {
				pedidoexpor.setid_pais(paisAux.getId());
				pedidoexpor.setpais_descripcion(PedidoExporConstantesFunciones.getPaisDescripcion(paisAux));
				pedidoexpor.setPais(paisAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransporteForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_transportePedidoExporGenerico)throws Exception
	{
		try
		{
			Transporte  transporteAux=new Transporte();

			if(jComboBoxid_transportePedidoExporGenerico==null) {
				transporteAux=(Transporte)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportePedidoExpor.getSelectedItem();
			} else {
				transporteAux=(Transporte)jComboBoxid_transportePedidoExporGenerico.getSelectedItem();
			}

			if(transporteAux!=null) {
				pedidoexpor.setid_transporte(transporteAux.getId());
				pedidoexpor.settransporte_descripcion(PedidoExporConstantesFunciones.getTransporteDescripcion(transporteAux));
				pedidoexpor.setTransporte(transporteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarVendedorForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_vendedorPedidoExporGenerico)throws Exception
	{
		try
		{
			Vendedor  vendedorAux=new Vendedor();

			if(jComboBoxid_vendedorPedidoExporGenerico==null) {
				vendedorAux=(Vendedor)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_vendedorPedidoExpor.getSelectedItem();
			} else {
				vendedorAux=(Vendedor)jComboBoxid_vendedorPedidoExporGenerico.getSelectedItem();
			}

			if(vendedorAux!=null) {
				pedidoexpor.setid_vendedor(vendedorAux.getId());
				pedidoexpor.setvendedor_descripcion(PedidoExporConstantesFunciones.getVendedorDescripcion(vendedorAux));
				pedidoexpor.setVendedor(vendedorAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSubClienteForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_sub_clientePedidoExporGenerico)throws Exception
	{
		try
		{
			SubCliente  subclienteAux=new SubCliente();

			if(jComboBoxid_sub_clientePedidoExporGenerico==null) {
				subclienteAux=(SubCliente)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sub_clientePedidoExpor.getSelectedItem();
			} else {
				subclienteAux=(SubCliente)jComboBoxid_sub_clientePedidoExporGenerico.getSelectedItem();
			}

			if(subclienteAux!=null) {
				pedidoexpor.setid_sub_cliente(subclienteAux.getId());
				pedidoexpor.setsubcliente_descripcion(PedidoExporConstantesFunciones.getSubClienteDescripcion(subclienteAux));
				pedidoexpor.setSubCliente(subclienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarConsignatarioForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_consignatarioPedidoExporGenerico)throws Exception
	{
		try
		{
			Consignatario  consignatarioAux=new Consignatario();

			if(jComboBoxid_consignatarioPedidoExporGenerico==null) {
				consignatarioAux=(Consignatario)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consignatarioPedidoExpor.getSelectedItem();
			} else {
				consignatarioAux=(Consignatario)jComboBoxid_consignatarioPedidoExporGenerico.getSelectedItem();
			}

			if(consignatarioAux!=null) {
				pedidoexpor.setid_consignatario(consignatarioAux.getId());
				pedidoexpor.setconsignatario_descripcion(PedidoExporConstantesFunciones.getConsignatarioDescripcion(consignatarioAux));
				pedidoexpor.setConsignatario(consignatarioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarConsultorForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_consultorPedidoExporGenerico)throws Exception
	{
		try
		{
			Consultor  consultorAux=new Consultor();

			if(jComboBoxid_consultorPedidoExporGenerico==null) {
				consultorAux=(Consultor)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consultorPedidoExpor.getSelectedItem();
			} else {
				consultorAux=(Consultor)jComboBoxid_consultorPedidoExporGenerico.getSelectedItem();
			}

			if(consultorAux!=null) {
				pedidoexpor.setid_consultor(consultorAux.getId());
				pedidoexpor.setconsultor_descripcion(PedidoExporConstantesFunciones.getConsultorDescripcion(consultorAux));
				pedidoexpor.setConsultor(consultorAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoPedidoExporForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_estado_pedidoPedidoExporGenerico)throws Exception
	{
		try
		{
			EstadoPedido  estadopedidoAux=new EstadoPedido();

			if(jComboBoxid_estado_pedidoPedidoExporGenerico==null) {
				estadopedidoAux=(EstadoPedido)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_estado_pedidoPedidoExpor.getSelectedItem();
			} else {
				estadopedidoAux=(EstadoPedido)jComboBoxid_estado_pedidoPedidoExporGenerico.getSelectedItem();
			}

			if(estadopedidoAux!=null && estadopedidoAux.getId()!=null) {
				pedidoexpor.setid_estado_pedido(estadopedidoAux.getId());
				pedidoexpor.setestadopedidoexpor_descripcion(PedidoExporConstantesFunciones.getEstadoPedidoExporDescripcion(estadopedidoAux));
				pedidoexpor.setEstadoPedidoExpor(estadopedidoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoCambioForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_tipo_cambioPedidoExporGenerico)throws Exception
	{
		try
		{
			TipoCambio  tipocambioAux=new TipoCambio();

			if(jComboBoxid_tipo_cambioPedidoExporGenerico==null) {
				tipocambioAux=(TipoCambio)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_cambioPedidoExpor.getSelectedItem();
			} else {
				tipocambioAux=(TipoCambio)jComboBoxid_tipo_cambioPedidoExporGenerico.getSelectedItem();
			}

			if(tipocambioAux!=null) {
				pedidoexpor.setid_tipo_cambio(tipocambioAux.getId());
				pedidoexpor.settipocambio_descripcion(PedidoExporConstantesFunciones.getTipoCambioDescripcion(tipocambioAux));
				pedidoexpor.setTipoCambio(tipocambioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCentroCostoForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_centro_costoPedidoExporGenerico)throws Exception
	{
		try
		{
			CentroCosto  centrocostoAux=new CentroCosto();

			if(jComboBoxid_centro_costoPedidoExporGenerico==null) {
				centrocostoAux=(CentroCosto)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_centro_costoPedidoExpor.getSelectedItem();
			} else {
				centrocostoAux=(CentroCosto)jComboBoxid_centro_costoPedidoExporGenerico.getSelectedItem();
			}

			if(centrocostoAux!=null) {
				pedidoexpor.setid_centro_costo(centrocostoAux.getId());
				pedidoexpor.setcentrocosto_descripcion(PedidoExporConstantesFunciones.getCentroCostoDescripcion(centrocostoAux));
				pedidoexpor.setCentroCosto(centrocostoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarResponsableForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_responsablePedidoExporGenerico)throws Exception
	{
		try
		{
			Responsable  responsableAux=new Responsable();

			if(jComboBoxid_responsablePedidoExporGenerico==null) {
				responsableAux=(Responsable)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_responsablePedidoExpor.getSelectedItem();
			} else {
				responsableAux=(Responsable)jComboBoxid_responsablePedidoExporGenerico.getSelectedItem();
			}

			if(responsableAux!=null && responsableAux.getId()!=null) {
				pedidoexpor.setid_responsable(responsableAux.getId());
				pedidoexpor.setresponsable_descripcion(PedidoExporConstantesFunciones.getResponsableDescripcion(responsableAux));
				pedidoexpor.setResponsable(responsableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransportistaForeignKey(PedidoExpor pedidoexpor,JComboBox jComboBoxid_transportistaPedidoExporGenerico)throws Exception
	{
		try
		{
			Transportista  transportistaAux=new Transportista();

			if(jComboBoxid_transportistaPedidoExporGenerico==null) {
				transportistaAux=(Transportista)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportistaPedidoExpor.getSelectedItem();
			} else {
				transportistaAux=(Transportista)jComboBoxid_transportistaPedidoExporGenerico.getSelectedItem();
			}

			if(transportistaAux!=null && transportistaAux.getId()!=null) {
				pedidoexpor.setid_transportista(transportistaAux.getId());
				pedidoexpor.settransportista_descripcion(PedidoExporConstantesFunciones.getTransportistaDescripcion(transportistaAux));
				pedidoexpor.setTransportista(transportistaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empresaPedidoExpor.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empresaPedidoExpor.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sucursalPedidoExpor.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sucursalPedidoExpor.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_ejercicioPedidoExpor.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_ejercicioPedidoExpor.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_periodoPedidoExpor.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_periodoPedidoExpor.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_anioPedidoExpor.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_anioPedidoExpor.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_mesPedidoExpor.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_mesPedidoExpor.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUsuariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUsuario=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_usuarioPedidoExpor.removeAllItems();

							for(Usuario usuario:this.usuariosForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_usuarioPedidoExpor.addItem(usuario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMonedasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMoneda=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_monedaPedidoExpor.removeAllItems();

							for(Moneda moneda:this.monedasForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_monedaPedidoExpor.addItem(moneda);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpleadosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpleado=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empleadoPedidoExpor.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empleadoPedidoExpor.addItem(empleado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoPedidoExpor.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jComboBoxid_empleadoFK_IdEmpleadoPedidoExpor.addItem(empleado);
							}
						}

						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoPreciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoPrecio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_precioPedidoExpor.removeAllItems();

							for(TipoPrecio tipoprecio:this.tipopreciosForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_precioPedidoExpor.addItem(tipoprecio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoPrecio") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_precioFK_IdTipoPrecioPedidoExpor.removeAllItems();

							for(TipoPrecio tipoprecio:this.tipopreciosForeignKey) {
								this.jComboBoxid_tipo_precioFK_IdTipoPrecioPedidoExpor.addItem(tipoprecio);
							}
						}

						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameFormatosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingFormato=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_formatoPedidoExpor.removeAllItems();

							for(Formato formato:this.formatosForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_formatoPedidoExpor.addItem(formato);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdFormato") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_formatoFK_IdFormatoPedidoExpor.removeAllItems();

							for(Formato formato:this.formatosForeignKey) {
								this.jComboBoxid_formatoFK_IdFormatoPedidoExpor.addItem(formato);
							}
						}

						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_clientePedidoExpor.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_clientePedidoExpor.addItem(cliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clienteFK_IdClientePedidoExpor.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jComboBoxid_clienteFK_IdClientePedidoExpor.addItem(cliente);
							}
						}

						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePaissForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPais=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_paisPedidoExpor.removeAllItems();

							for(Pais pais:this.paissForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_paisPedidoExpor.addItem(pais);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdPais") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_paisFK_IdPaisPedidoExpor.removeAllItems();

							for(Pais pais:this.paissForeignKey) {
								this.jComboBoxid_paisFK_IdPaisPedidoExpor.addItem(pais);
							}
						}

						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransportesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransporte=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportePedidoExpor.removeAllItems();

							for(Transporte transporte:this.transportesForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportePedidoExpor.addItem(transporte);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransporte") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transporteFK_IdTransportePedidoExpor.removeAllItems();

							for(Transporte transporte:this.transportesForeignKey) {
								this.jComboBoxid_transporteFK_IdTransportePedidoExpor.addItem(transporte);
							}
						}

						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameVendedorsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingVendedor=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_vendedorPedidoExpor.removeAllItems();

							for(Vendedor vendedor:this.vendedorsForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_vendedorPedidoExpor.addItem(vendedor);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdVendedor") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_vendedorFK_IdVendedorPedidoExpor.removeAllItems();

							for(Vendedor vendedor:this.vendedorsForeignKey) {
								this.jComboBoxid_vendedorFK_IdVendedorPedidoExpor.addItem(vendedor);
							}
						}

						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSubClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSubCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sub_clientePedidoExpor.removeAllItems();

							for(SubCliente subcliente:this.subclientesForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sub_clientePedidoExpor.addItem(subcliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdSubCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_sub_clienteFK_IdSubClientePedidoExpor.removeAllItems();

							for(SubCliente subcliente:this.subclientesForeignKey) {
								this.jComboBoxid_sub_clienteFK_IdSubClientePedidoExpor.addItem(subcliente);
							}
						}

						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameConsignatariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingConsignatario=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consignatarioPedidoExpor.removeAllItems();

							for(Consignatario consignatario:this.consignatariosForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consignatarioPedidoExpor.addItem(consignatario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdConsignatario") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_consignatarioFK_IdConsignatarioPedidoExpor.removeAllItems();

							for(Consignatario consignatario:this.consignatariosForeignKey) {
								this.jComboBoxid_consignatarioFK_IdConsignatarioPedidoExpor.addItem(consignatario);
							}
						}

						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameConsultorsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingConsultor=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consultorPedidoExpor.removeAllItems();

							for(Consultor consultor:this.consultorsForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consultorPedidoExpor.addItem(consultor);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdConsultor") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_consultorFK_IdConsultorPedidoExpor.removeAllItems();

							for(Consultor consultor:this.consultorsForeignKey) {
								this.jComboBoxid_consultorFK_IdConsultorPedidoExpor.addItem(consultor);
							}
						}

						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoPedidoExporsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoPedido=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_estado_pedidoPedidoExpor.removeAllItems();

							for(EstadoPedido estadopedidoexpor:this.estadopedidoexporsForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_estado_pedidoPedidoExpor.addItem(estadopedidoexpor);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEstadoPedidoExpor") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_estado_pedidoFK_IdEstadoPedidoExporPedidoExpor.removeAllItems();

							for(EstadoPedido estadopedidoexpor:this.estadopedidoexporsForeignKey) {
								this.jComboBoxid_estado_pedidoFK_IdEstadoPedidoExporPedidoExpor.addItem(estadopedidoexpor);
							}
						}

						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoCambiosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoCambio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_cambioPedidoExpor.removeAllItems();

							for(TipoCambio tipocambio:this.tipocambiosForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_cambioPedidoExpor.addItem(tipocambio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoCambio") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_cambioFK_IdTipoCambioPedidoExpor.removeAllItems();

							for(TipoCambio tipocambio:this.tipocambiosForeignKey) {
								this.jComboBoxid_tipo_cambioFK_IdTipoCambioPedidoExpor.addItem(tipocambio);
							}
						}

						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCentroCostosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCentroCosto=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_centro_costoPedidoExpor.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_centro_costoPedidoExpor.addItem(centrocosto);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCentroCosto") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoPedidoExpor.removeAllItems();

							for(CentroCosto centrocosto:this.centrocostosForeignKey) {
								this.jComboBoxid_centro_costoFK_IdCentroCostoPedidoExpor.addItem(centrocosto);
							}
						}

						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameResponsablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingResponsable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_responsablePedidoExpor.removeAllItems();

							for(Responsable responsable:this.responsablesForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_responsablePedidoExpor.addItem(responsable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdResponsable") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_responsableFK_IdResponsablePedidoExpor.removeAllItems();

							for(Responsable responsable:this.responsablesForeignKey) {
								this.jComboBoxid_responsableFK_IdResponsablePedidoExpor.addItem(responsable);
							}
						}

						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransportistasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransportista=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportistaPedidoExpor.removeAllItems();

							for(Transportista transportista:this.transportistasForeignKey) {
								this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportistaPedidoExpor.addItem(transportista);
							}
						}
					}

					if(this.jInternalFrameDetalleFormPedidoExpor!=null) { 
					}

					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransportista") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transportistaFK_IdTransportistaPedidoExpor.removeAllItems();

							for(Transportista transportista:this.transportistasForeignKey) {
								this.jComboBoxid_transportistaFK_IdTransportistaPedidoExpor.addItem(transportista);
							}
						}

						if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empresaPedidoExpor.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empresaPedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sucursalPedidoExpor.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sucursalPedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_ejercicioPedidoExpor.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_ejercicioPedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_periodoPedidoExpor.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_periodoPedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_anioPedidoExpor.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_anioPedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_mesPedidoExpor.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_mesPedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUsuarioForeignKey(Usuario usuario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_usuarioPedidoExpor.setSelectedItem(usuario);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_usuarioPedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMonedaForeignKey(Moneda moneda,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_monedaPedidoExpor.setSelectedItem(moneda);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_monedaPedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpleadoForeignKey(Empleado empleado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empleadoPedidoExpor.setSelectedItem(empleado);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empleadoPedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_empleadoFK_IdEmpleadoPedidoExpor.setSelectedItem(empleado);
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoPedidoExpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoPrecioForeignKey(TipoPrecio tipoprecio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_precioPedidoExpor.setSelectedItem(tipoprecio);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_precioPedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_precioFK_IdTipoPrecioPedidoExpor.setSelectedItem(tipoprecio);
						} else {
							this.jComboBoxid_tipo_precioFK_IdTipoPrecioPedidoExpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameFormatoForeignKey(Formato formato,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_formatoPedidoExpor.setSelectedItem(formato);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_formatoPedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_formatoFK_IdFormatoPedidoExpor.setSelectedItem(formato);
						} else {
							this.jComboBoxid_formatoFK_IdFormatoPedidoExpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteForeignKey(Cliente cliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_clientePedidoExpor.setSelectedItem(cliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_clientePedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_clienteFK_IdClientePedidoExpor.setSelectedItem(cliente);
						} else {
							this.jComboBoxid_clienteFK_IdClientePedidoExpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePaisForeignKey(Pais pais,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_paisPedidoExpor.setSelectedItem(pais);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_paisPedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_paisFK_IdPaisPedidoExpor.setSelectedItem(pais);
						} else {
							this.jComboBoxid_paisFK_IdPaisPedidoExpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransporteForeignKey(Transporte transporte,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportePedidoExpor.setSelectedItem(transporte);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportePedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transporteFK_IdTransportePedidoExpor.setSelectedItem(transporte);
						} else {
							this.jComboBoxid_transporteFK_IdTransportePedidoExpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameVendedorForeignKey(Vendedor vendedor,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_vendedorPedidoExpor.setSelectedItem(vendedor);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_vendedorPedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_vendedorFK_IdVendedorPedidoExpor.setSelectedItem(vendedor);
						} else {
							this.jComboBoxid_vendedorFK_IdVendedorPedidoExpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSubClienteForeignKey(SubCliente subcliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sub_clientePedidoExpor.setSelectedItem(subcliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sub_clientePedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_sub_clienteFK_IdSubClientePedidoExpor.setSelectedItem(subcliente);
						} else {
							this.jComboBoxid_sub_clienteFK_IdSubClientePedidoExpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameConsignatarioForeignKey(Consignatario consignatario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consignatarioPedidoExpor.setSelectedItem(consignatario);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consignatarioPedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_consignatarioFK_IdConsignatarioPedidoExpor.setSelectedItem(consignatario);
						} else {
							this.jComboBoxid_consignatarioFK_IdConsignatarioPedidoExpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameConsultorForeignKey(Consultor consultor,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consultorPedidoExpor.setSelectedItem(consultor);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consultorPedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_consultorFK_IdConsultorPedidoExpor.setSelectedItem(consultor);
						} else {
							this.jComboBoxid_consultorFK_IdConsultorPedidoExpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoPedidoExporForeignKey(EstadoPedido estadopedidoexpor,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_estado_pedidoPedidoExpor.setSelectedItem(estadopedidoexpor);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_estado_pedidoPedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_estado_pedidoFK_IdEstadoPedidoExporPedidoExpor.setSelectedItem(estadopedidoexpor);
						} else {
							this.jComboBoxid_estado_pedidoFK_IdEstadoPedidoExporPedidoExpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoCambioForeignKey(TipoCambio tipocambio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_cambioPedidoExpor.setSelectedItem(tipocambio);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_cambioPedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_cambioFK_IdTipoCambioPedidoExpor.setSelectedItem(tipocambio);
						} else {
							this.jComboBoxid_tipo_cambioFK_IdTipoCambioPedidoExpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCentroCostoForeignKey(CentroCosto centrocosto,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_centro_costoPedidoExpor.setSelectedItem(centrocosto);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_centro_costoPedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_centro_costoFK_IdCentroCostoPedidoExpor.setSelectedItem(centrocosto);
						} else {
							this.jComboBoxid_centro_costoFK_IdCentroCostoPedidoExpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameResponsableForeignKey(Responsable responsable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_responsablePedidoExpor.setSelectedItem(responsable);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_responsablePedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_responsableFK_IdResponsablePedidoExpor.setSelectedItem(responsable);
						} else {
							this.jComboBoxid_responsableFK_IdResponsablePedidoExpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransportistaForeignKey(Transportista transportista,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportistaPedidoExpor.setSelectedItem(transportista);
						}
					} else {
						if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportistaPedidoExpor.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transportistaFK_IdTransportistaPedidoExpor.setSelectedItem(transportista);
						} else {
							this.jComboBoxid_transportistaFK_IdTransportistaPedidoExpor.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesPedidoExpor() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			PedidoExporConstantesFunciones.refrescarForeignKeysDescripcionesPedidoExpor(this.pedidoexporLogic.getPedidoExpors());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			PedidoExporConstantesFunciones.refrescarForeignKeysDescripcionesPedidoExpor(this.pedidoexpors);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
		classes.add(new Classe(Usuario.class));
		classes.add(new Classe(Moneda.class));
		classes.add(new Classe(Empleado.class));
		classes.add(new Classe(TipoPrecio.class));
		classes.add(new Classe(Formato.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(Pais.class));
		classes.add(new Classe(Transporte.class));
		classes.add(new Classe(Vendedor.class));
		classes.add(new Classe(SubCliente.class));
		classes.add(new Classe(Consignatario.class));
		classes.add(new Classe(Consultor.class));
		classes.add(new Classe(EstadoPedido.class));
		classes.add(new Classe(TipoCambio.class));
		classes.add(new Classe(CentroCosto.class));
		classes.add(new Classe(Responsable.class));
		classes.add(new Classe(Transportista.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//pedidoexporLogic.setPedidoExpors(this.pedidoexpors);
			pedidoexporLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public PedidoExporParameterReturnGeneral getPedidoExporParameterGeneral() {
		return this.pedidoexporParameterGeneral;
	}
	
	public void setPedidoExporParameterGeneral(PedidoExporParameterReturnGeneral pedidoexporParameterGeneral) {
		this.pedidoexporParameterGeneral = pedidoexporParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoPedidoExpor() {
		return isPermisoTodoPedidoExpor;
	}

	public void setIsPermisoTodoPedidoExpor(Boolean isPermisoTodoPedidoExpor) {
		this.isPermisoTodoPedidoExpor = isPermisoTodoPedidoExpor;
	}

	public Boolean getIsPermisoNuevoPedidoExpor() {
		return isPermisoNuevoPedidoExpor;
	}

	public void setIsPermisoNuevoPedidoExpor(Boolean isPermisoNuevoPedidoExpor) {
		this.isPermisoNuevoPedidoExpor = isPermisoNuevoPedidoExpor;
	}

	public Boolean getIsPermisoActualizarPedidoExpor() {
		return isPermisoActualizarPedidoExpor;
	}

	public void setIsPermisoActualizarPedidoExpor(Boolean isPermisoActualizarPedidoExpor) {
		this.isPermisoActualizarPedidoExpor = isPermisoActualizarPedidoExpor;
	}

	public Boolean getIsPermisoEliminarPedidoExpor() {
		return isPermisoEliminarPedidoExpor;
	}

	public void setIsPermisoEliminarPedidoExpor(Boolean isPermisoEliminarPedidoExpor) {
		this.isPermisoEliminarPedidoExpor = isPermisoEliminarPedidoExpor;
	}

	public Boolean getIsPermisoGuardarCambiosPedidoExpor() {
		return isPermisoGuardarCambiosPedidoExpor;
	}

	public void setIsPermisoGuardarCambiosPedidoExpor(Boolean isPermisoGuardarCambiosPedidoExpor) {
		this.isPermisoGuardarCambiosPedidoExpor = isPermisoGuardarCambiosPedidoExpor;
	}
	
	public Boolean getIsPermisoConsultaPedidoExpor() {
		return isPermisoConsultaPedidoExpor;
	}

	public void setIsPermisoConsultaPedidoExpor(Boolean isPermisoConsultaPedidoExpor) {
		this.isPermisoConsultaPedidoExpor = isPermisoConsultaPedidoExpor;
	}

	public Boolean getIsPermisoBusquedaPedidoExpor() {
		return isPermisoBusquedaPedidoExpor;
	}

	public void setIsPermisoBusquedaPedidoExpor(Boolean isPermisoBusquedaPedidoExpor) {
		this.isPermisoBusquedaPedidoExpor = isPermisoBusquedaPedidoExpor;
	}

	public Boolean getIsPermisoReportePedidoExpor() {
		return isPermisoReportePedidoExpor;
	}

	public void setIsPermisoReportePedidoExpor(Boolean isPermisoReportePedidoExpor) {
		this.isPermisoReportePedidoExpor = isPermisoReportePedidoExpor;
	}
	
	public Boolean getIsPermisoPaginacionMedioPedidoExpor() {
		return isPermisoPaginacionMedioPedidoExpor;
	}

	public void setIsPermisoPaginacionMedioPedidoExpor(Boolean isPermisoPaginacionMedioPedidoExpor) {
		this.isPermisoPaginacionMedioPedidoExpor = isPermisoPaginacionMedioPedidoExpor;
	}
	
	public Boolean getIsPermisoPaginacionTodoPedidoExpor() {
		return isPermisoPaginacionTodoPedidoExpor;
	}

	public void setIsPermisoPaginacionTodoPedidoExpor(Boolean isPermisoPaginacionTodoPedidoExpor) {
		this.isPermisoPaginacionTodoPedidoExpor = isPermisoPaginacionTodoPedidoExpor;
	}
	
	public Boolean getIsPermisoPaginacionAltoPedidoExpor() {
		return isPermisoPaginacionAltoPedidoExpor;
	}

	public void setIsPermisoPaginacionAltoPedidoExpor(Boolean isPermisoPaginacionAltoPedidoExpor) {
		this.isPermisoPaginacionAltoPedidoExpor = isPermisoPaginacionAltoPedidoExpor;
	}
	
	public Boolean getIsPermisoCopiarPedidoExpor() {
		return isPermisoCopiarPedidoExpor;
	}

	public void setIsPermisoCopiarPedidoExpor(Boolean isPermisoCopiarPedidoExpor) {
		this.isPermisoCopiarPedidoExpor = isPermisoCopiarPedidoExpor;
	}
	
	public Boolean getIsPermisoVerFormPedidoExpor() {
		return isPermisoVerFormPedidoExpor;
	}

	public void setIsPermisoVerFormPedidoExpor(Boolean isPermisoVerFormPedidoExpor) {
		this.isPermisoVerFormPedidoExpor = isPermisoVerFormPedidoExpor;
	}
	
	public Boolean getIsPermisoDuplicarPedidoExpor() {
		return isPermisoDuplicarPedidoExpor;
	}

	public void setIsPermisoDuplicarPedidoExpor(Boolean isPermisoDuplicarPedidoExpor) {
		this.isPermisoDuplicarPedidoExpor = isPermisoDuplicarPedidoExpor;
	}
	
	public Boolean getIsPermisoOrdenPedidoExpor() {
		return isPermisoOrdenPedidoExpor;
	}

	public void setIsPermisoOrdenPedidoExpor(Boolean isPermisoOrdenPedidoExpor) {
		this.isPermisoOrdenPedidoExpor = isPermisoOrdenPedidoExpor;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoPedidoExpor() {
		return isVisibilidadCeldaNuevoPedidoExpor;
	}

	public void setIsVisibilidadCeldaNuevoPedidoExpor(Boolean isVisibilidadCeldaNuevoPedidoExpor) {
		this.isVisibilidadCeldaNuevoPedidoExpor = isVisibilidadCeldaNuevoPedidoExpor;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarPedidoExpor() {
		return isVisibilidadCeldaDuplicarPedidoExpor;
	}

	public void setIsVisibilidadCeldaDuplicarPedidoExpor(Boolean isVisibilidadCeldaDuplicarPedidoExpor) {
		this.isVisibilidadCeldaDuplicarPedidoExpor = isVisibilidadCeldaDuplicarPedidoExpor;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarPedidoExpor() {
		return isVisibilidadCeldaCopiarPedidoExpor;
	}

	public void setIsVisibilidadCeldaCopiarPedidoExpor(Boolean isVisibilidadCeldaCopiarPedidoExpor) {
		this.isVisibilidadCeldaCopiarPedidoExpor = isVisibilidadCeldaCopiarPedidoExpor;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormPedidoExpor() {
		return isVisibilidadCeldaVerFormPedidoExpor;
	}

	public void setIsVisibilidadCeldaVerFormPedidoExpor(Boolean isVisibilidadCeldaVerFormPedidoExpor) {
		this.isVisibilidadCeldaVerFormPedidoExpor = isVisibilidadCeldaVerFormPedidoExpor;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenPedidoExpor() {
		return isVisibilidadCeldaOrdenPedidoExpor;
	}

	public void setIsVisibilidadCeldaOrdenPedidoExpor(Boolean isVisibilidadCeldaOrdenPedidoExpor) {
		this.isVisibilidadCeldaOrdenPedidoExpor = isVisibilidadCeldaOrdenPedidoExpor;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesPedidoExpor() {
		return isVisibilidadCeldaNuevoRelacionesPedidoExpor;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesPedidoExpor(Boolean isVisibilidadCeldaNuevoRelacionesPedidoExpor) {
		this.isVisibilidadCeldaNuevoRelacionesPedidoExpor = isVisibilidadCeldaNuevoRelacionesPedidoExpor;
	}
	
	public Boolean getIsVisibilidadCeldaModificarPedidoExpor() {
		return isVisibilidadCeldaModificarPedidoExpor;
	}

	public void setIsVisibilidadCeldaModificarPedidoExpor(Boolean isVisibilidadCeldaModificarPedidoExpor) {
		this.isVisibilidadCeldaModificarPedidoExpor = isVisibilidadCeldaModificarPedidoExpor;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarPedidoExpor() {
		return isVisibilidadCeldaActualizarPedidoExpor;
	}

	public void setIsVisibilidadCeldaActualizarPedidoExpor(Boolean isVisibilidadCeldaActualizarPedidoExpor) {
		this.isVisibilidadCeldaActualizarPedidoExpor = isVisibilidadCeldaActualizarPedidoExpor;
	}

	public Boolean getIsVisibilidadCeldaEliminarPedidoExpor() {
		return isVisibilidadCeldaEliminarPedidoExpor;
	}

	public void setIsVisibilidadCeldaEliminarPedidoExpor(Boolean isVisibilidadCeldaEliminarPedidoExpor) {
		this.isVisibilidadCeldaEliminarPedidoExpor = isVisibilidadCeldaEliminarPedidoExpor;
	}

	public Boolean getIsVisibilidadCeldaCancelarPedidoExpor() {
		return isVisibilidadCeldaCancelarPedidoExpor;
	}

	public void setIsVisibilidadCeldaCancelarPedidoExpor(Boolean isVisibilidadCeldaCancelarPedidoExpor) {
		this.isVisibilidadCeldaCancelarPedidoExpor = isVisibilidadCeldaCancelarPedidoExpor;
	}

	public Boolean getIsVisibilidadCeldaGuardarPedidoExpor() {
		return isVisibilidadCeldaGuardarPedidoExpor;
	}

	public void setIsVisibilidadCeldaGuardarPedidoExpor(Boolean isVisibilidadCeldaGuardarPedidoExpor) {
		this.isVisibilidadCeldaGuardarPedidoExpor = isVisibilidadCeldaGuardarPedidoExpor;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosPedidoExpor() {
		return isVisibilidadCeldaGuardarCambiosPedidoExpor;
	}

	public void setIsVisibilidadCeldaGuardarCambiosPedidoExpor(Boolean isVisibilidadCeldaGuardarCambiosPedidoExpor) {
		this.isVisibilidadCeldaGuardarCambiosPedidoExpor = isVisibilidadCeldaGuardarCambiosPedidoExpor;
	}
		
	public PedidoExporSessionBean getpedidoexporSessionBean() {
		return this.pedidoexporSessionBean;
	}
	
	public void setpedidoexporSessionBean(PedidoExporSessionBean pedidoexporSessionBean) {
		this.pedidoexporSessionBean=pedidoexporSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdCentroCosto() {
		return this.isVisibilidadFK_IdCentroCosto;
	}

	public void setisVisibilidadFK_IdCentroCosto(Boolean isVisibilidadFK_IdCentroCosto) {
		this.isVisibilidadFK_IdCentroCosto=isVisibilidadFK_IdCentroCosto;
	}

	public Boolean getisVisibilidadFK_IdCliente() {
		return this.isVisibilidadFK_IdCliente;
	}

	public void setisVisibilidadFK_IdCliente(Boolean isVisibilidadFK_IdCliente) {
		this.isVisibilidadFK_IdCliente=isVisibilidadFK_IdCliente;
	}

	public Boolean getisVisibilidadFK_IdConsignatario() {
		return this.isVisibilidadFK_IdConsignatario;
	}

	public void setisVisibilidadFK_IdConsignatario(Boolean isVisibilidadFK_IdConsignatario) {
		this.isVisibilidadFK_IdConsignatario=isVisibilidadFK_IdConsignatario;
	}

	public Boolean getisVisibilidadFK_IdConsultor() {
		return this.isVisibilidadFK_IdConsultor;
	}

	public void setisVisibilidadFK_IdConsultor(Boolean isVisibilidadFK_IdConsultor) {
		this.isVisibilidadFK_IdConsultor=isVisibilidadFK_IdConsultor;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpleado() {
		return this.isVisibilidadFK_IdEmpleado;
	}

	public void setisVisibilidadFK_IdEmpleado(Boolean isVisibilidadFK_IdEmpleado) {
		this.isVisibilidadFK_IdEmpleado=isVisibilidadFK_IdEmpleado;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstadoPedidoExpor() {
		return this.isVisibilidadFK_IdEstadoPedidoExpor;
	}

	public void setisVisibilidadFK_IdEstadoPedidoExpor(Boolean isVisibilidadFK_IdEstadoPedidoExpor) {
		this.isVisibilidadFK_IdEstadoPedidoExpor=isVisibilidadFK_IdEstadoPedidoExpor;
	}

	public Boolean getisVisibilidadFK_IdFormato() {
		return this.isVisibilidadFK_IdFormato;
	}

	public void setisVisibilidadFK_IdFormato(Boolean isVisibilidadFK_IdFormato) {
		this.isVisibilidadFK_IdFormato=isVisibilidadFK_IdFormato;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdMoneda() {
		return this.isVisibilidadFK_IdMoneda;
	}

	public void setisVisibilidadFK_IdMoneda(Boolean isVisibilidadFK_IdMoneda) {
		this.isVisibilidadFK_IdMoneda=isVisibilidadFK_IdMoneda;
	}

	public Boolean getisVisibilidadFK_IdPais() {
		return this.isVisibilidadFK_IdPais;
	}

	public void setisVisibilidadFK_IdPais(Boolean isVisibilidadFK_IdPais) {
		this.isVisibilidadFK_IdPais=isVisibilidadFK_IdPais;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdResponsable() {
		return this.isVisibilidadFK_IdResponsable;
	}

	public void setisVisibilidadFK_IdResponsable(Boolean isVisibilidadFK_IdResponsable) {
		this.isVisibilidadFK_IdResponsable=isVisibilidadFK_IdResponsable;
	}

	public Boolean getisVisibilidadFK_IdSubCliente() {
		return this.isVisibilidadFK_IdSubCliente;
	}

	public void setisVisibilidadFK_IdSubCliente(Boolean isVisibilidadFK_IdSubCliente) {
		this.isVisibilidadFK_IdSubCliente=isVisibilidadFK_IdSubCliente;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoCambio() {
		return this.isVisibilidadFK_IdTipoCambio;
	}

	public void setisVisibilidadFK_IdTipoCambio(Boolean isVisibilidadFK_IdTipoCambio) {
		this.isVisibilidadFK_IdTipoCambio=isVisibilidadFK_IdTipoCambio;
	}

	public Boolean getisVisibilidadFK_IdTipoPrecio() {
		return this.isVisibilidadFK_IdTipoPrecio;
	}

	public void setisVisibilidadFK_IdTipoPrecio(Boolean isVisibilidadFK_IdTipoPrecio) {
		this.isVisibilidadFK_IdTipoPrecio=isVisibilidadFK_IdTipoPrecio;
	}

	public Boolean getisVisibilidadFK_IdTransporte() {
		return this.isVisibilidadFK_IdTransporte;
	}

	public void setisVisibilidadFK_IdTransporte(Boolean isVisibilidadFK_IdTransporte) {
		this.isVisibilidadFK_IdTransporte=isVisibilidadFK_IdTransporte;
	}

	public Boolean getisVisibilidadFK_IdTransportista() {
		return this.isVisibilidadFK_IdTransportista;
	}

	public void setisVisibilidadFK_IdTransportista(Boolean isVisibilidadFK_IdTransportista) {
		this.isVisibilidadFK_IdTransportista=isVisibilidadFK_IdTransportista;
	}

	public Boolean getisVisibilidadFK_IdUsuario() {
		return this.isVisibilidadFK_IdUsuario;
	}

	public void setisVisibilidadFK_IdUsuario(Boolean isVisibilidadFK_IdUsuario) {
		this.isVisibilidadFK_IdUsuario=isVisibilidadFK_IdUsuario;
	}

	public Boolean getisVisibilidadFK_IdVendedor() {
		return this.isVisibilidadFK_IdVendedor;
	}

	public void setisVisibilidadFK_IdVendedor(Boolean isVisibilidadFK_IdVendedor) {
		this.isVisibilidadFK_IdVendedor=isVisibilidadFK_IdVendedor;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(PedidoExpor pedidoexpor)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(pedidoexpor,null);
				this.setActualParaGuardarSucursalForeignKey(pedidoexpor,null);
				this.setActualParaGuardarEjercicioForeignKey(pedidoexpor,null);
				this.setActualParaGuardarPeriodoForeignKey(pedidoexpor,null);
				this.setActualParaGuardarAnioForeignKey(pedidoexpor,null);
				this.setActualParaGuardarMesForeignKey(pedidoexpor,null);
				this.setActualParaGuardarUsuarioForeignKey(pedidoexpor,null);
				this.setActualParaGuardarMonedaForeignKey(pedidoexpor,null);
				this.setActualParaGuardarEmpleadoForeignKey(pedidoexpor,null);
				this.setActualParaGuardarTipoPrecioForeignKey(pedidoexpor,null);
				this.setActualParaGuardarFormatoForeignKey(pedidoexpor,null);
				this.setActualParaGuardarClienteForeignKey(pedidoexpor,null);
				this.setActualParaGuardarPaisForeignKey(pedidoexpor,null);
				this.setActualParaGuardarTransporteForeignKey(pedidoexpor,null);
				this.setActualParaGuardarVendedorForeignKey(pedidoexpor,null);
				this.setActualParaGuardarSubClienteForeignKey(pedidoexpor,null);
				this.setActualParaGuardarConsignatarioForeignKey(pedidoexpor,null);
				this.setActualParaGuardarConsultorForeignKey(pedidoexpor,null);
				this.setActualParaGuardarEstadoPedidoExporForeignKey(pedidoexpor,null);
				this.setActualParaGuardarTipoCambioForeignKey(pedidoexpor,null);
				this.setActualParaGuardarCentroCostoForeignKey(pedidoexpor,null);
				this.setActualParaGuardarResponsableForeignKey(pedidoexpor,null);
				this.setActualParaGuardarTransportistaForeignKey(pedidoexpor,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(PedidoExpor pedidoexpor,PedidoExpor pedidoexporAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalPedidoExpor(pedidoexpor);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		pedidoexporAux.setId(pedidoexpor.getId());
		pedidoexporAux.setVersionRow(pedidoexpor.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessPedidoExpor();
		
			int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(PedidoExporJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = pedidoexporValidator.getInvalidValues(this.pedidoexpor);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			pedidoexporLogic.setDatosCliente(datosCliente);
			pedidoexporLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				pedidoexporAux=new  PedidoExpor();
				
				pedidoexporAux.setIsNew(true);
				pedidoexporAux.setIsChanged(true);
				
				pedidoexporAux.setPedidoExporOriginal(this.pedidoexpor);
				
				pedidoexporAux.setId(this.pedidoexpor.getId());	
				pedidoexporAux.setVersionRow(this.pedidoexpor.getVersionRow());	
				pedidoexporAux.setid_empresa(this.pedidoexpor.getid_empresa());	
				pedidoexporAux.setid_sucursal(this.pedidoexpor.getid_sucursal());	
				pedidoexporAux.setid_ejercicio(this.pedidoexpor.getid_ejercicio());	
				pedidoexporAux.setid_periodo(this.pedidoexpor.getid_periodo());	
				pedidoexporAux.setid_anio(this.pedidoexpor.getid_anio());	
				pedidoexporAux.setid_mes(this.pedidoexpor.getid_mes());	
				pedidoexporAux.setid_usuario(this.pedidoexpor.getid_usuario());	
				pedidoexporAux.setnumero(this.pedidoexpor.getnumero());	
				pedidoexporAux.setnumero_preimpreso(this.pedidoexpor.getnumero_preimpreso());	
				pedidoexporAux.setfecha_emision(this.pedidoexpor.getfecha_emision());	
				pedidoexporAux.setfecha_vencimiento(this.pedidoexpor.getfecha_vencimiento());	
				pedidoexporAux.setid_moneda(this.pedidoexpor.getid_moneda());	
				pedidoexporAux.setcotizacion(this.pedidoexpor.getcotizacion());	
				pedidoexporAux.setid_empleado(this.pedidoexpor.getid_empleado());	
				pedidoexporAux.setid_tipo_precio(this.pedidoexpor.getid_tipo_precio());	
				
				if(this.pedidoexpor.getid_formato()!=null && this.pedidoexpor.getid_formato()>0L) {
					pedidoexporAux.setid_formato(this.pedidoexpor.getid_formato());
				} else {
					pedidoexporAux.setid_formato(null);
				}	
				pedidoexporAux.setdireccion(this.pedidoexpor.getdireccion());	
				pedidoexporAux.setid_cliente(this.pedidoexpor.getid_cliente());	
				pedidoexporAux.settelefono(this.pedidoexpor.gettelefono());	
				pedidoexporAux.setruc(this.pedidoexpor.getruc());	
				
				if(this.pedidoexpor.getid_pais()!=null && this.pedidoexpor.getid_pais()>0L) {
					pedidoexporAux.setid_pais(this.pedidoexpor.getid_pais());
				} else {
					pedidoexporAux.setid_pais(null);
				}	
				pedidoexporAux.setlugar_entrega(this.pedidoexpor.getlugar_entrega());	
				pedidoexporAux.setembarque(this.pedidoexpor.getembarque());	
				pedidoexporAux.setnegociacion(this.pedidoexpor.getnegociacion());	
				
				if(this.pedidoexpor.getid_transporte()!=null && this.pedidoexpor.getid_transporte()>0L) {
					pedidoexporAux.setid_transporte(this.pedidoexpor.getid_transporte());
				} else {
					pedidoexporAux.setid_transporte(null);
				}	
				
				if(this.pedidoexpor.getid_vendedor()!=null && this.pedidoexpor.getid_vendedor()>0L) {
					pedidoexporAux.setid_vendedor(this.pedidoexpor.getid_vendedor());
				} else {
					pedidoexporAux.setid_vendedor(null);
				}	
				pedidoexporAux.setforma_pago(this.pedidoexpor.getforma_pago());	
				
				if(this.pedidoexpor.getid_sub_cliente()!=null && this.pedidoexpor.getid_sub_cliente()>0L) {
					pedidoexporAux.setid_sub_cliente(this.pedidoexpor.getid_sub_cliente());
				} else {
					pedidoexporAux.setid_sub_cliente(null);
				}	
				
				if(this.pedidoexpor.getid_consignatario()!=null && this.pedidoexpor.getid_consignatario()>0L) {
					pedidoexporAux.setid_consignatario(this.pedidoexpor.getid_consignatario());
				} else {
					pedidoexporAux.setid_consignatario(null);
				}	
				
				if(this.pedidoexpor.getid_consultor()!=null && this.pedidoexpor.getid_consultor()>0L) {
					pedidoexporAux.setid_consultor(this.pedidoexpor.getid_consultor());
				} else {
					pedidoexporAux.setid_consultor(null);
				}	
				pedidoexporAux.setorden(this.pedidoexpor.getorden());	
				pedidoexporAux.setid_estado_pedido(this.pedidoexpor.getid_estado_pedido());	
				pedidoexporAux.setdescripcion(this.pedidoexpor.getdescripcion());	
				pedidoexporAux.setmonto(this.pedidoexpor.getmonto());	
				pedidoexporAux.setsaldo(this.pedidoexpor.getsaldo());	
				pedidoexporAux.setdisponible(this.pedidoexpor.getdisponible());	
				pedidoexporAux.setdescuento_porcentaje(this.pedidoexpor.getdescuento_porcentaje());	
				pedidoexporAux.settotal_con_iva(this.pedidoexpor.gettotal_con_iva());	
				pedidoexporAux.setsuman(this.pedidoexpor.getsuman());	
				pedidoexporAux.setdescuento_valor(this.pedidoexpor.getdescuento_valor());	
				pedidoexporAux.settotal_sin_iva(this.pedidoexpor.gettotal_sin_iva());	
				pedidoexporAux.settotal_descuento(this.pedidoexpor.gettotal_descuento());	
				pedidoexporAux.setflete(this.pedidoexpor.getflete());	
				pedidoexporAux.settotal(this.pedidoexpor.gettotal());	
				pedidoexporAux.setsubtotal(this.pedidoexpor.getsubtotal());	
				pedidoexporAux.setseguros(this.pedidoexpor.getseguros());	
				pedidoexporAux.setiva(this.pedidoexpor.getiva());	
				pedidoexporAux.setfinanciamiento(this.pedidoexpor.getfinanciamiento());	
				pedidoexporAux.setmonto_retencion(this.pedidoexpor.getmonto_retencion());	
				pedidoexporAux.setotro(this.pedidoexpor.getotro());	
				pedidoexporAux.setice(this.pedidoexpor.getice());	
				pedidoexporAux.setfecha(this.pedidoexpor.getfecha());	
				pedidoexporAux.setfecha_servidor(this.pedidoexpor.getfecha_servidor());	
				pedidoexporAux.setid_tipo_cambio(this.pedidoexpor.getid_tipo_cambio());	
				pedidoexporAux.setnumero_fue(this.pedidoexpor.getnumero_fue());	
				pedidoexporAux.setid_centro_costo(this.pedidoexpor.getid_centro_costo());	
				pedidoexporAux.setid_responsable(this.pedidoexpor.getid_responsable());	
				pedidoexporAux.sethora_inicio(this.pedidoexpor.gethora_inicio());	
				pedidoexporAux.sethora_fin(this.pedidoexpor.gethora_fin());	
				pedidoexporAux.setid_transportista(this.pedidoexpor.getid_transportista());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.pedidoexporSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.pedidoexporSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(pedidoexporAux,pedidoexporLogic.getPedidoExpors());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(pedidoexporAux,pedidoexpors);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.pedidoexporSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.pedidoexporSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.savePedidoExpors();//WithConnection
						//pedidoexporLogic.getSetVersionRowPedidoExpors();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.pedidoexpor,pedidoexporAux);
					
					this.refrescarForeignKeysDescripcionesPedidoExpor();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.pedidoexporSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporLogic.getDetallePedidoExpors().addAll(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporsEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexpors.addAll(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporsEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								pedidoexporLogic.savePedidoExporRelaciones(pedidoexporAux,this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporLogic.getDetallePedidoExpors());//WithConnection
								//pedidoexporLogic.getSetVersionRowPedidoExpors();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.pedidoexpor,pedidoexporAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporLogic.setDetallePedidoExpors(new ArrayList<DetallePedidoExpor>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexpors= new ArrayList<DetallePedidoExpor>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();}
							pedidoexporAux.setDetallePedidoExpors(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporLogic.getDetallePedidoExpors());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.pedidoexporSessionBean.getEstaModoGuardarRelaciones() 
									|| this.pedidoexporSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(pedidoexporAux,pedidoexporLogic.getPedidoExpors());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(pedidoexporAux,pedidoexpors);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.pedidoexpor,pedidoexporAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				pedidoexporAux=new  PedidoExpor();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.pedidoexporSessionBean.getEsGuardarRelacionado() 
					|| (this.pedidoexporSessionBean.getEsGuardarRelacionado() && this.pedidoexpor.getId()>=0)) {
						
					pedidoexporAux.setIsNew(false);
				}
				
				pedidoexporAux.setIsDeleted(false);
			
				pedidoexporAux.setId(this.pedidoexpor.getId());	
				pedidoexporAux.setVersionRow(this.pedidoexpor.getVersionRow());	
				pedidoexporAux.setid_empresa(this.pedidoexpor.getid_empresa());	
				pedidoexporAux.setid_sucursal(this.pedidoexpor.getid_sucursal());	
				pedidoexporAux.setid_ejercicio(this.pedidoexpor.getid_ejercicio());	
				pedidoexporAux.setid_periodo(this.pedidoexpor.getid_periodo());	
				pedidoexporAux.setid_anio(this.pedidoexpor.getid_anio());	
				pedidoexporAux.setid_mes(this.pedidoexpor.getid_mes());	
				pedidoexporAux.setid_usuario(this.pedidoexpor.getid_usuario());	
				pedidoexporAux.setnumero(this.pedidoexpor.getnumero());	
				pedidoexporAux.setnumero_preimpreso(this.pedidoexpor.getnumero_preimpreso());	
				pedidoexporAux.setfecha_emision(this.pedidoexpor.getfecha_emision());	
				pedidoexporAux.setfecha_vencimiento(this.pedidoexpor.getfecha_vencimiento());	
				pedidoexporAux.setid_moneda(this.pedidoexpor.getid_moneda());	
				pedidoexporAux.setcotizacion(this.pedidoexpor.getcotizacion());	
				pedidoexporAux.setid_empleado(this.pedidoexpor.getid_empleado());	
				pedidoexporAux.setid_tipo_precio(this.pedidoexpor.getid_tipo_precio());	
				
				if(this.pedidoexpor.getid_formato()!=null && this.pedidoexpor.getid_formato()>0L) {
					pedidoexporAux.setid_formato(this.pedidoexpor.getid_formato());
				} else {
					pedidoexporAux.setid_formato(null);
				}	
				pedidoexporAux.setdireccion(this.pedidoexpor.getdireccion());	
				pedidoexporAux.setid_cliente(this.pedidoexpor.getid_cliente());	
				pedidoexporAux.settelefono(this.pedidoexpor.gettelefono());	
				pedidoexporAux.setruc(this.pedidoexpor.getruc());	
				
				if(this.pedidoexpor.getid_pais()!=null && this.pedidoexpor.getid_pais()>0L) {
					pedidoexporAux.setid_pais(this.pedidoexpor.getid_pais());
				} else {
					pedidoexporAux.setid_pais(null);
				}	
				pedidoexporAux.setlugar_entrega(this.pedidoexpor.getlugar_entrega());	
				pedidoexporAux.setembarque(this.pedidoexpor.getembarque());	
				pedidoexporAux.setnegociacion(this.pedidoexpor.getnegociacion());	
				
				if(this.pedidoexpor.getid_transporte()!=null && this.pedidoexpor.getid_transporte()>0L) {
					pedidoexporAux.setid_transporte(this.pedidoexpor.getid_transporte());
				} else {
					pedidoexporAux.setid_transporte(null);
				}	
				
				if(this.pedidoexpor.getid_vendedor()!=null && this.pedidoexpor.getid_vendedor()>0L) {
					pedidoexporAux.setid_vendedor(this.pedidoexpor.getid_vendedor());
				} else {
					pedidoexporAux.setid_vendedor(null);
				}	
				pedidoexporAux.setforma_pago(this.pedidoexpor.getforma_pago());	
				
				if(this.pedidoexpor.getid_sub_cliente()!=null && this.pedidoexpor.getid_sub_cliente()>0L) {
					pedidoexporAux.setid_sub_cliente(this.pedidoexpor.getid_sub_cliente());
				} else {
					pedidoexporAux.setid_sub_cliente(null);
				}	
				
				if(this.pedidoexpor.getid_consignatario()!=null && this.pedidoexpor.getid_consignatario()>0L) {
					pedidoexporAux.setid_consignatario(this.pedidoexpor.getid_consignatario());
				} else {
					pedidoexporAux.setid_consignatario(null);
				}	
				
				if(this.pedidoexpor.getid_consultor()!=null && this.pedidoexpor.getid_consultor()>0L) {
					pedidoexporAux.setid_consultor(this.pedidoexpor.getid_consultor());
				} else {
					pedidoexporAux.setid_consultor(null);
				}	
				pedidoexporAux.setorden(this.pedidoexpor.getorden());	
				pedidoexporAux.setid_estado_pedido(this.pedidoexpor.getid_estado_pedido());	
				pedidoexporAux.setdescripcion(this.pedidoexpor.getdescripcion());	
				pedidoexporAux.setmonto(this.pedidoexpor.getmonto());	
				pedidoexporAux.setsaldo(this.pedidoexpor.getsaldo());	
				pedidoexporAux.setdisponible(this.pedidoexpor.getdisponible());	
				pedidoexporAux.setdescuento_porcentaje(this.pedidoexpor.getdescuento_porcentaje());	
				pedidoexporAux.settotal_con_iva(this.pedidoexpor.gettotal_con_iva());	
				pedidoexporAux.setsuman(this.pedidoexpor.getsuman());	
				pedidoexporAux.setdescuento_valor(this.pedidoexpor.getdescuento_valor());	
				pedidoexporAux.settotal_sin_iva(this.pedidoexpor.gettotal_sin_iva());	
				pedidoexporAux.settotal_descuento(this.pedidoexpor.gettotal_descuento());	
				pedidoexporAux.setflete(this.pedidoexpor.getflete());	
				pedidoexporAux.settotal(this.pedidoexpor.gettotal());	
				pedidoexporAux.setsubtotal(this.pedidoexpor.getsubtotal());	
				pedidoexporAux.setseguros(this.pedidoexpor.getseguros());	
				pedidoexporAux.setiva(this.pedidoexpor.getiva());	
				pedidoexporAux.setfinanciamiento(this.pedidoexpor.getfinanciamiento());	
				pedidoexporAux.setmonto_retencion(this.pedidoexpor.getmonto_retencion());	
				pedidoexporAux.setotro(this.pedidoexpor.getotro());	
				pedidoexporAux.setice(this.pedidoexpor.getice());	
				pedidoexporAux.setfecha(this.pedidoexpor.getfecha());	
				pedidoexporAux.setfecha_servidor(this.pedidoexpor.getfecha_servidor());	
				pedidoexporAux.setid_tipo_cambio(this.pedidoexpor.getid_tipo_cambio());	
				pedidoexporAux.setnumero_fue(this.pedidoexpor.getnumero_fue());	
				pedidoexporAux.setid_centro_costo(this.pedidoexpor.getid_centro_costo());	
				pedidoexporAux.setid_responsable(this.pedidoexpor.getid_responsable());	
				pedidoexporAux.sethora_inicio(this.pedidoexpor.gethora_inicio());	
				pedidoexporAux.sethora_fin(this.pedidoexpor.gethora_fin());	
				pedidoexporAux.setid_transportista(this.pedidoexpor.getid_transportista());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(pedidoexporAux,pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(pedidoexporAux,pedidoexpors);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.pedidoexporSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.pedidoexporSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.savePedidoExpors();//WithConnection
						//pedidoexporLogic.getSetVersionRowPedidoExpors();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.pedidoexpor,pedidoexporAux);
					
					this.refrescarForeignKeysDescripcionesPedidoExpor();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.pedidoexporSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporLogic.getDetallePedidoExpors().addAll(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporsEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexpors.addAll(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporsEliminados);
						}
						//ARCHITECTURE
						
						if(!this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								pedidoexporLogic.savePedidoExporRelaciones(pedidoexporAux,this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporLogic.getDetallePedidoExpors());//WithConnection
								//pedidoexporLogic.getSetVersionRowPedidoExpors();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.pedidoexpor,pedidoexporAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporLogic.setDetallePedidoExpors(new ArrayList<DetallePedidoExpor>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexpors= new ArrayList<DetallePedidoExpor>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();}
							pedidoexporAux.setDetallePedidoExpors(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporLogic.getDetallePedidoExpors());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.pedidoexporSessionBean.getEstaModoGuardarRelaciones() 
									|| this.pedidoexporSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(pedidoexporAux,pedidoexporLogic.getPedidoExpors());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(pedidoexporAux,pedidoexpors);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.pedidoexpor,pedidoexporAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				pedidoexporAux=new  PedidoExpor();
				
				pedidoexporAux.setIsNew(false);
				pedidoexporAux.setIsChanged(false);
				
				pedidoexporAux.setIsDeleted(true);
				
				pedidoexporAux.setId(this.pedidoexpor.getId());	
				pedidoexporAux.setVersionRow(this.pedidoexpor.getVersionRow());	
				pedidoexporAux.setid_empresa(this.pedidoexpor.getid_empresa());	
				pedidoexporAux.setid_sucursal(this.pedidoexpor.getid_sucursal());	
				pedidoexporAux.setid_ejercicio(this.pedidoexpor.getid_ejercicio());	
				pedidoexporAux.setid_periodo(this.pedidoexpor.getid_periodo());	
				pedidoexporAux.setid_anio(this.pedidoexpor.getid_anio());	
				pedidoexporAux.setid_mes(this.pedidoexpor.getid_mes());	
				pedidoexporAux.setid_usuario(this.pedidoexpor.getid_usuario());	
				pedidoexporAux.setnumero(this.pedidoexpor.getnumero());	
				pedidoexporAux.setnumero_preimpreso(this.pedidoexpor.getnumero_preimpreso());	
				pedidoexporAux.setfecha_emision(this.pedidoexpor.getfecha_emision());	
				pedidoexporAux.setfecha_vencimiento(this.pedidoexpor.getfecha_vencimiento());	
				pedidoexporAux.setid_moneda(this.pedidoexpor.getid_moneda());	
				pedidoexporAux.setcotizacion(this.pedidoexpor.getcotizacion());	
				pedidoexporAux.setid_empleado(this.pedidoexpor.getid_empleado());	
				pedidoexporAux.setid_tipo_precio(this.pedidoexpor.getid_tipo_precio());	
				
				if(this.pedidoexpor.getid_formato()!=null && this.pedidoexpor.getid_formato()>0L) {
					pedidoexporAux.setid_formato(this.pedidoexpor.getid_formato());
				} else {
					pedidoexporAux.setid_formato(null);
				}	
				pedidoexporAux.setdireccion(this.pedidoexpor.getdireccion());	
				pedidoexporAux.setid_cliente(this.pedidoexpor.getid_cliente());	
				pedidoexporAux.settelefono(this.pedidoexpor.gettelefono());	
				pedidoexporAux.setruc(this.pedidoexpor.getruc());	
				
				if(this.pedidoexpor.getid_pais()!=null && this.pedidoexpor.getid_pais()>0L) {
					pedidoexporAux.setid_pais(this.pedidoexpor.getid_pais());
				} else {
					pedidoexporAux.setid_pais(null);
				}	
				pedidoexporAux.setlugar_entrega(this.pedidoexpor.getlugar_entrega());	
				pedidoexporAux.setembarque(this.pedidoexpor.getembarque());	
				pedidoexporAux.setnegociacion(this.pedidoexpor.getnegociacion());	
				
				if(this.pedidoexpor.getid_transporte()!=null && this.pedidoexpor.getid_transporte()>0L) {
					pedidoexporAux.setid_transporte(this.pedidoexpor.getid_transporte());
				} else {
					pedidoexporAux.setid_transporte(null);
				}	
				
				if(this.pedidoexpor.getid_vendedor()!=null && this.pedidoexpor.getid_vendedor()>0L) {
					pedidoexporAux.setid_vendedor(this.pedidoexpor.getid_vendedor());
				} else {
					pedidoexporAux.setid_vendedor(null);
				}	
				pedidoexporAux.setforma_pago(this.pedidoexpor.getforma_pago());	
				
				if(this.pedidoexpor.getid_sub_cliente()!=null && this.pedidoexpor.getid_sub_cliente()>0L) {
					pedidoexporAux.setid_sub_cliente(this.pedidoexpor.getid_sub_cliente());
				} else {
					pedidoexporAux.setid_sub_cliente(null);
				}	
				
				if(this.pedidoexpor.getid_consignatario()!=null && this.pedidoexpor.getid_consignatario()>0L) {
					pedidoexporAux.setid_consignatario(this.pedidoexpor.getid_consignatario());
				} else {
					pedidoexporAux.setid_consignatario(null);
				}	
				
				if(this.pedidoexpor.getid_consultor()!=null && this.pedidoexpor.getid_consultor()>0L) {
					pedidoexporAux.setid_consultor(this.pedidoexpor.getid_consultor());
				} else {
					pedidoexporAux.setid_consultor(null);
				}	
				pedidoexporAux.setorden(this.pedidoexpor.getorden());	
				pedidoexporAux.setid_estado_pedido(this.pedidoexpor.getid_estado_pedido());	
				pedidoexporAux.setdescripcion(this.pedidoexpor.getdescripcion());	
				pedidoexporAux.setmonto(this.pedidoexpor.getmonto());	
				pedidoexporAux.setsaldo(this.pedidoexpor.getsaldo());	
				pedidoexporAux.setdisponible(this.pedidoexpor.getdisponible());	
				pedidoexporAux.setdescuento_porcentaje(this.pedidoexpor.getdescuento_porcentaje());	
				pedidoexporAux.settotal_con_iva(this.pedidoexpor.gettotal_con_iva());	
				pedidoexporAux.setsuman(this.pedidoexpor.getsuman());	
				pedidoexporAux.setdescuento_valor(this.pedidoexpor.getdescuento_valor());	
				pedidoexporAux.settotal_sin_iva(this.pedidoexpor.gettotal_sin_iva());	
				pedidoexporAux.settotal_descuento(this.pedidoexpor.gettotal_descuento());	
				pedidoexporAux.setflete(this.pedidoexpor.getflete());	
				pedidoexporAux.settotal(this.pedidoexpor.gettotal());	
				pedidoexporAux.setsubtotal(this.pedidoexpor.getsubtotal());	
				pedidoexporAux.setseguros(this.pedidoexpor.getseguros());	
				pedidoexporAux.setiva(this.pedidoexpor.getiva());	
				pedidoexporAux.setfinanciamiento(this.pedidoexpor.getfinanciamiento());	
				pedidoexporAux.setmonto_retencion(this.pedidoexpor.getmonto_retencion());	
				pedidoexporAux.setotro(this.pedidoexpor.getotro());	
				pedidoexporAux.setice(this.pedidoexpor.getice());	
				pedidoexporAux.setfecha(this.pedidoexpor.getfecha());	
				pedidoexporAux.setfecha_servidor(this.pedidoexpor.getfecha_servidor());	
				pedidoexporAux.setid_tipo_cambio(this.pedidoexpor.getid_tipo_cambio());	
				pedidoexporAux.setnumero_fue(this.pedidoexpor.getnumero_fue());	
				pedidoexporAux.setid_centro_costo(this.pedidoexpor.getid_centro_costo());	
				pedidoexporAux.setid_responsable(this.pedidoexpor.getid_responsable());	
				pedidoexporAux.sethora_inicio(this.pedidoexpor.gethora_inicio());	
				pedidoexporAux.sethora_fin(this.pedidoexpor.gethora_fin());	
				pedidoexporAux.setid_transportista(this.pedidoexpor.getid_transportista());	
				
				if(this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.pedidoexporAux.getId()>=0) {	
						this.pedidoexporsEliminados.add(pedidoexporAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(pedidoexporAux,pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(pedidoexporAux,pedidoexpors);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.pedidoexporSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.pedidoexporSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.savePedidoExpors();//WithConnection
						//pedidoexporLogic.getSetVersionRowPedidoExpors();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.pedidoexporSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporLogic.getDetallePedidoExpors().addAll(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporsEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexpors.addAll(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporsEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								pedidoexporLogic.savePedidoExporRelaciones(pedidoexporAux,this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporLogic.getDetallePedidoExpors());//WithConnection
								//pedidoexporLogic.getSetVersionRowPedidoExpors();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporLogic.setDetallePedidoExpors(new ArrayList<DetallePedidoExpor>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexpors= new ArrayList<DetallePedidoExpor>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.quitarFilaTotales();}
							pedidoexporAux.setDetallePedidoExpors(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporLogic.getDetallePedidoExpors());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.pedidoexporSessionBean.getEstaModoGuardarRelaciones() 
								|| this.pedidoexporSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(pedidoexporAux,pedidoexporLogic.getPedidoExpors());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(pedidoexporAux,pedidoexpors);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getPedidoExpors().addAll(this.pedidoexporsEliminados);
					
					pedidoexporLogic.savePedidoExpors();//WithConnection
					//pedidoexporLogic.getSetVersionRowPedidoExpors();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesPedidoExpor();
				
				this.pedidoexporsEliminados= new ArrayList<PedidoExpor>();		
			}
			
			if(this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidoexporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Pedido Exportacion GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Pedido Exportacion",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.pedidoexpor=pedidoexporAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessPedidoExpor();
      	}
		
	}	
	
	public void actualizarRelaciones(PedidoExpor pedidoexporLocal) throws Exception {
		
		if(this.pedidoexporSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				pedidoexporLocal.setDetallePedidoExpors(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporLogic.getDetallePedidoExpors());
			
			} else {
			
				pedidoexporLocal.setDetallePedidoExpors(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexpors);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(PedidoExpor pedidoexporLocal) throws Exception {	
		if(this.pedidoexporSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				pedidoexporLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				pedidoexporLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				pedidoexporLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				pedidoexporLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				pedidoexporLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				pedidoexporLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UsuarioDetalleFormJInternalFrame.class)) {
				UsuarioBeanSwingJInternalFrame usuarioBeanSwingJInternalFrameLocal=(UsuarioBeanSwingJInternalFrame) ((UsuarioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				usuarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUsuario(usuarioBeanSwingJInternalFrameLocal.getusuario(),true);
				usuarioBeanSwingJInternalFrameLocal.actualizarLista(usuarioBeanSwingJInternalFrameLocal.usuario,this.usuariosForeignKey);

				usuarioBeanSwingJInternalFrameLocal.actualizarRelaciones(usuarioBeanSwingJInternalFrameLocal.usuario);

				pedidoexporLocal.setUsuario(usuarioBeanSwingJInternalFrameLocal.usuario);

				this.addItemDefectoCombosForeignKeyUsuario();
				this.cargarCombosFrameUsuariosForeignKey("Formulario");
				this.setActualUsuarioForeignKey(usuarioBeanSwingJInternalFrameLocal.usuario.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MonedaDetalleFormJInternalFrame.class)) {
				MonedaBeanSwingJInternalFrame monedaBeanSwingJInternalFrameLocal=(MonedaBeanSwingJInternalFrame) ((MonedaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				monedaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMoneda(monedaBeanSwingJInternalFrameLocal.getmoneda(),true);
				monedaBeanSwingJInternalFrameLocal.actualizarLista(monedaBeanSwingJInternalFrameLocal.moneda,this.monedasForeignKey);

				monedaBeanSwingJInternalFrameLocal.actualizarRelaciones(monedaBeanSwingJInternalFrameLocal.moneda);

				pedidoexporLocal.setMoneda(monedaBeanSwingJInternalFrameLocal.moneda);

				this.addItemDefectoCombosForeignKeyMoneda();
				this.cargarCombosFrameMonedasForeignKey("Formulario");
				this.setActualMonedaForeignKey(monedaBeanSwingJInternalFrameLocal.moneda.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpleadoDetalleFormJInternalFrame.class)) {
				EmpleadoBeanSwingJInternalFrame empleadoBeanSwingJInternalFrameLocal=(EmpleadoBeanSwingJInternalFrame) ((EmpleadoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empleadoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpleado(empleadoBeanSwingJInternalFrameLocal.getempleado(),true);
				empleadoBeanSwingJInternalFrameLocal.actualizarLista(empleadoBeanSwingJInternalFrameLocal.empleado,this.empleadosForeignKey);

				empleadoBeanSwingJInternalFrameLocal.actualizarRelaciones(empleadoBeanSwingJInternalFrameLocal.empleado);

				pedidoexporLocal.setEmpleado(empleadoBeanSwingJInternalFrameLocal.empleado);

				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey("Formulario");
				this.setActualEmpleadoForeignKey(empleadoBeanSwingJInternalFrameLocal.empleado.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoPrecioDetalleFormJInternalFrame.class)) {
				TipoPrecioBeanSwingJInternalFrame tipoprecioBeanSwingJInternalFrameLocal=(TipoPrecioBeanSwingJInternalFrame) ((TipoPrecioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipoprecioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoPrecio(tipoprecioBeanSwingJInternalFrameLocal.gettipoprecio(),true);
				tipoprecioBeanSwingJInternalFrameLocal.actualizarLista(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio,this.tipopreciosForeignKey);

				tipoprecioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio);

				pedidoexporLocal.setTipoPrecio(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio);

				this.addItemDefectoCombosForeignKeyTipoPrecio();
				this.cargarCombosFrameTipoPreciosForeignKey("Formulario");
				this.setActualTipoPrecioForeignKey(tipoprecioBeanSwingJInternalFrameLocal.tipoprecio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(FormatoDetalleFormJInternalFrame.class)) {
				FormatoBeanSwingJInternalFrame formatoBeanSwingJInternalFrameLocal=(FormatoBeanSwingJInternalFrame) ((FormatoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				formatoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoFormato(formatoBeanSwingJInternalFrameLocal.getformato(),true);
				formatoBeanSwingJInternalFrameLocal.actualizarLista(formatoBeanSwingJInternalFrameLocal.formato,this.formatosForeignKey);

				formatoBeanSwingJInternalFrameLocal.actualizarRelaciones(formatoBeanSwingJInternalFrameLocal.formato);

				pedidoexporLocal.setFormato(formatoBeanSwingJInternalFrameLocal.formato);

				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey("Formulario");
				this.setActualFormatoForeignKey(formatoBeanSwingJInternalFrameLocal.formato.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteBeanSwingJInternalFrameLocal.actualizarLista(clienteBeanSwingJInternalFrameLocal.cliente,this.clientesForeignKey);

				clienteBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteBeanSwingJInternalFrameLocal.cliente);

				pedidoexporLocal.setCliente(clienteBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey("Formulario");
				this.setActualClienteForeignKey(clienteBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PaisDetalleFormJInternalFrame.class)) {
				PaisBeanSwingJInternalFrame paisBeanSwingJInternalFrameLocal=(PaisBeanSwingJInternalFrame) ((PaisDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				paisBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPais(paisBeanSwingJInternalFrameLocal.getpais(),true);
				paisBeanSwingJInternalFrameLocal.actualizarLista(paisBeanSwingJInternalFrameLocal.pais,this.paissForeignKey);

				paisBeanSwingJInternalFrameLocal.actualizarRelaciones(paisBeanSwingJInternalFrameLocal.pais);

				pedidoexporLocal.setPais(paisBeanSwingJInternalFrameLocal.pais);

				this.addItemDefectoCombosForeignKeyPais();
				this.cargarCombosFramePaissForeignKey("Formulario");
				this.setActualPaisForeignKey(paisBeanSwingJInternalFrameLocal.pais.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransporteDetalleFormJInternalFrame.class)) {
				TransporteBeanSwingJInternalFrame transporteBeanSwingJInternalFrameLocal=(TransporteBeanSwingJInternalFrame) ((TransporteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transporteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransporte(transporteBeanSwingJInternalFrameLocal.gettransporte(),true);
				transporteBeanSwingJInternalFrameLocal.actualizarLista(transporteBeanSwingJInternalFrameLocal.transporte,this.transportesForeignKey);

				transporteBeanSwingJInternalFrameLocal.actualizarRelaciones(transporteBeanSwingJInternalFrameLocal.transporte);

				pedidoexporLocal.setTransporte(transporteBeanSwingJInternalFrameLocal.transporte);

				this.addItemDefectoCombosForeignKeyTransporte();
				this.cargarCombosFrameTransportesForeignKey("Formulario");
				this.setActualTransporteForeignKey(transporteBeanSwingJInternalFrameLocal.transporte.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(VendedorDetalleFormJInternalFrame.class)) {
				VendedorBeanSwingJInternalFrame vendedorBeanSwingJInternalFrameLocal=(VendedorBeanSwingJInternalFrame) ((VendedorDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				vendedorBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoVendedor(vendedorBeanSwingJInternalFrameLocal.getvendedor(),true);
				vendedorBeanSwingJInternalFrameLocal.actualizarLista(vendedorBeanSwingJInternalFrameLocal.vendedor,this.vendedorsForeignKey);

				vendedorBeanSwingJInternalFrameLocal.actualizarRelaciones(vendedorBeanSwingJInternalFrameLocal.vendedor);

				pedidoexporLocal.setVendedor(vendedorBeanSwingJInternalFrameLocal.vendedor);

				this.addItemDefectoCombosForeignKeyVendedor();
				this.cargarCombosFrameVendedorsForeignKey("Formulario");
				this.setActualVendedorForeignKey(vendedorBeanSwingJInternalFrameLocal.vendedor.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SubClienteDetalleFormJInternalFrame.class)) {
				SubClienteBeanSwingJInternalFrame subclienteBeanSwingJInternalFrameLocal=(SubClienteBeanSwingJInternalFrame) ((SubClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				subclienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSubCliente(subclienteBeanSwingJInternalFrameLocal.getsubcliente(),true);
				subclienteBeanSwingJInternalFrameLocal.actualizarLista(subclienteBeanSwingJInternalFrameLocal.subcliente,this.subclientesForeignKey);

				subclienteBeanSwingJInternalFrameLocal.actualizarRelaciones(subclienteBeanSwingJInternalFrameLocal.subcliente);

				pedidoexporLocal.setSubCliente(subclienteBeanSwingJInternalFrameLocal.subcliente);

				this.addItemDefectoCombosForeignKeySubCliente();
				this.cargarCombosFrameSubClientesForeignKey("Formulario");
				this.setActualSubClienteForeignKey(subclienteBeanSwingJInternalFrameLocal.subcliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ConsignatarioDetalleFormJInternalFrame.class)) {
				ConsignatarioBeanSwingJInternalFrame consignatarioBeanSwingJInternalFrameLocal=(ConsignatarioBeanSwingJInternalFrame) ((ConsignatarioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				consignatarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoConsignatario(consignatarioBeanSwingJInternalFrameLocal.getconsignatario(),true);
				consignatarioBeanSwingJInternalFrameLocal.actualizarLista(consignatarioBeanSwingJInternalFrameLocal.consignatario,this.consignatariosForeignKey);

				consignatarioBeanSwingJInternalFrameLocal.actualizarRelaciones(consignatarioBeanSwingJInternalFrameLocal.consignatario);

				pedidoexporLocal.setConsignatario(consignatarioBeanSwingJInternalFrameLocal.consignatario);

				this.addItemDefectoCombosForeignKeyConsignatario();
				this.cargarCombosFrameConsignatariosForeignKey("Formulario");
				this.setActualConsignatarioForeignKey(consignatarioBeanSwingJInternalFrameLocal.consignatario.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ConsultorDetalleFormJInternalFrame.class)) {
				ConsultorBeanSwingJInternalFrame consultorBeanSwingJInternalFrameLocal=(ConsultorBeanSwingJInternalFrame) ((ConsultorDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				consultorBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoConsultor(consultorBeanSwingJInternalFrameLocal.getconsultor(),true);
				consultorBeanSwingJInternalFrameLocal.actualizarLista(consultorBeanSwingJInternalFrameLocal.consultor,this.consultorsForeignKey);

				consultorBeanSwingJInternalFrameLocal.actualizarRelaciones(consultorBeanSwingJInternalFrameLocal.consultor);

				pedidoexporLocal.setConsultor(consultorBeanSwingJInternalFrameLocal.consultor);

				this.addItemDefectoCombosForeignKeyConsultor();
				this.cargarCombosFrameConsultorsForeignKey("Formulario");
				this.setActualConsultorForeignKey(consultorBeanSwingJInternalFrameLocal.consultor.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoPedidoDetalleFormJInternalFrame.class)) {
				EstadoPedidoBeanSwingJInternalFrame estadopedidoexporBeanSwingJInternalFrameLocal=(EstadoPedidoBeanSwingJInternalFrame) ((EstadoPedidoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadopedidoexporBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoPedido(estadopedidoexporBeanSwingJInternalFrameLocal.getestadopedido(),true);
				estadopedidoexporBeanSwingJInternalFrameLocal.actualizarLista(estadopedidoexporBeanSwingJInternalFrameLocal.estadopedido,this.estadopedidoexporsForeignKey);

				estadopedidoexporBeanSwingJInternalFrameLocal.actualizarRelaciones(estadopedidoexporBeanSwingJInternalFrameLocal.estadopedido);

				pedidoexporLocal.setEstadoPedidoExpor(estadopedidoexporBeanSwingJInternalFrameLocal.estadopedido);

				this.addItemDefectoCombosForeignKeyEstadoPedidoExpor();
				this.cargarCombosFrameEstadoPedidoExporsForeignKey("Formulario");
				this.setActualEstadoPedidoExporForeignKey(estadopedidoexporBeanSwingJInternalFrameLocal.estadopedido.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoCambioDetalleFormJInternalFrame.class)) {
				TipoCambioBeanSwingJInternalFrame tipocambioBeanSwingJInternalFrameLocal=(TipoCambioBeanSwingJInternalFrame) ((TipoCambioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipocambioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoCambio(tipocambioBeanSwingJInternalFrameLocal.gettipocambio(),true);
				tipocambioBeanSwingJInternalFrameLocal.actualizarLista(tipocambioBeanSwingJInternalFrameLocal.tipocambio,this.tipocambiosForeignKey);

				tipocambioBeanSwingJInternalFrameLocal.actualizarRelaciones(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				pedidoexporLocal.setTipoCambio(tipocambioBeanSwingJInternalFrameLocal.tipocambio);

				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey("Formulario");
				this.setActualTipoCambioForeignKey(tipocambioBeanSwingJInternalFrameLocal.tipocambio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CentroCostoDetalleFormJInternalFrame.class)) {
				CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrameLocal=(CentroCostoBeanSwingJInternalFrame) ((CentroCostoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				centrocostoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCentroCosto(centrocostoBeanSwingJInternalFrameLocal.getcentrocosto(),true);
				centrocostoBeanSwingJInternalFrameLocal.actualizarLista(centrocostoBeanSwingJInternalFrameLocal.centrocosto,this.centrocostosForeignKey);

				centrocostoBeanSwingJInternalFrameLocal.actualizarRelaciones(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				pedidoexporLocal.setCentroCosto(centrocostoBeanSwingJInternalFrameLocal.centrocosto);

				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey("Formulario");
				this.setActualCentroCostoForeignKey(centrocostoBeanSwingJInternalFrameLocal.centrocosto.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ResponsableDetalleFormJInternalFrame.class)) {
				ResponsableBeanSwingJInternalFrame responsableBeanSwingJInternalFrameLocal=(ResponsableBeanSwingJInternalFrame) ((ResponsableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				responsableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoResponsable(responsableBeanSwingJInternalFrameLocal.getresponsable(),true);
				responsableBeanSwingJInternalFrameLocal.actualizarLista(responsableBeanSwingJInternalFrameLocal.responsable,this.responsablesForeignKey);

				responsableBeanSwingJInternalFrameLocal.actualizarRelaciones(responsableBeanSwingJInternalFrameLocal.responsable);

				pedidoexporLocal.setResponsable(responsableBeanSwingJInternalFrameLocal.responsable);

				this.addItemDefectoCombosForeignKeyResponsable();
				this.cargarCombosFrameResponsablesForeignKey("Formulario");
				this.setActualResponsableForeignKey(responsableBeanSwingJInternalFrameLocal.responsable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransportistaDetalleFormJInternalFrame.class)) {
				TransportistaBeanSwingJInternalFrame transportistaBeanSwingJInternalFrameLocal=(TransportistaBeanSwingJInternalFrame) ((TransportistaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transportistaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransportista(transportistaBeanSwingJInternalFrameLocal.gettransportista(),true);
				transportistaBeanSwingJInternalFrameLocal.actualizarLista(transportistaBeanSwingJInternalFrameLocal.transportista,this.transportistasForeignKey);

				transportistaBeanSwingJInternalFrameLocal.actualizarRelaciones(transportistaBeanSwingJInternalFrameLocal.transportista);

				pedidoexporLocal.setTransportista(transportistaBeanSwingJInternalFrameLocal.transportista);

				this.addItemDefectoCombosForeignKeyTransportista();
				this.cargarCombosFrameTransportistasForeignKey("Formulario");
				this.setActualTransportistaForeignKey(transportistaBeanSwingJInternalFrameLocal.transportista.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarPedidoExporActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = pedidoexporValidator.getInvalidValues(this.pedidoexpor);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(PedidoExpor pedidoexpor,List<PedidoExpor> pedidoexpors) throws Exception {
		try	{		
			PedidoExporConstantesFunciones.actualizarLista(pedidoexpor,pedidoexpors,this.pedidoexporSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(PedidoExpor pedidoexpor,List<PedidoExpor> pedidoexpors) throws Exception {
		try	{			
			PedidoExporConstantesFunciones.actualizarSelectedLista(pedidoexpor,pedidoexpors);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<PedidoExpor> pedidoexporsLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				pedidoexporsLocal=this.pedidoexporLogic.getPedidoExpors();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				pedidoexporsLocal=this.pedidoexpors;
			}
			//ARCHITECTURE
		
			for(PedidoExpor pedidoexporLocal:pedidoexporsLocal) {
				if(this.permiteMantenimiento(pedidoexporLocal) && pedidoexporLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+PedidoExporConstantesFunciones.getPedidoExporLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_empresaPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_sucursalPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_ejercicioPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_periodoPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_anioPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_mesPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDUSUARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_usuarioPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.NUMERO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelnumeroPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.NUMEROAUTORIZACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelnumero_preimpresoPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.FECHAEMISION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelfecha_emisionPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.FECHAVENCIMIENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelfecha_vencimientoPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDMONEDA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_monedaPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.COTIZACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelcotizacionPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDEMPLEADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_empleadoPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDTIPOPRECIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_tipo_precioPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDFORMATO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_formatoPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.DIRECCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabeldireccionPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_clientePedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.TELEFONO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabeltelefonoPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.RUC)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelrucPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDPAIS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_paisPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.LUGARENTREGA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabellugar_entregaPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.EMBARQUE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelembarquePedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.NEGOCIACION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelnegociacionPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDTRANSPORTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_transportePedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDVENDEDOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_vendedorPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.FORMAPAGO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelforma_pagoPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDSUBCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_sub_clientePedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDCONSIGNATARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_consignatarioPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDCONSULTOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_consultorPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.ORDEN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelordenPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDESTADOPEDIDOEXPOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_estado_pedidoPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.DESCRIPCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabeldescripcionPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.MONTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelmontoPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.SALDO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelsaldoPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.DISPONIBLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabeldisponiblePedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.DESCUENTOPORCENTAJE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabeldescuento_porcentajePedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.TOTALCONIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabeltotal_con_ivaPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.SUMAN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelsumanPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.DESCUENTOVALOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabeldescuento_valorPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.TOTALSINIVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabeltotal_sin_ivaPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.TOTALDESCUENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabeltotal_descuentoPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.FLETE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelfletePedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.TOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabeltotalPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.SUBTOTAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelsubtotalPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.SEGUROS)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelsegurosPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IVA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelivaPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.FINANCIAMIENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelfinanciamientoPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.MONTORETENCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelmonto_retencionPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.OTRO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelotroPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.ICE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelicePedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.FECHA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelfechaPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.FECHASERVIDOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelfecha_servidorPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDTIPOCAMBIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_tipo_cambioPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.NUMEROFUE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelnumero_fuePedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDCENTROCOSTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_centro_costoPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDRESPONSABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_responsablePedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.HORAINICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelhora_inicioPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.HORAFIN)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelhora_finPedidoExpor,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(PedidoExporConstantesFunciones.IDTRANSPORTISTA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_transportistaPedidoExpor,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_empresaPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_sucursalPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_ejercicioPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_periodoPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_anioPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_mesPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_usuarioPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelnumeroPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelnumero_preimpresoPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelfecha_emisionPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelfecha_vencimientoPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_monedaPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelcotizacionPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_empleadoPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_tipo_precioPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_formatoPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabeldireccionPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_clientePedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabeltelefonoPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelrucPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_paisPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabellugar_entregaPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelembarquePedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelnegociacionPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_transportePedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_vendedorPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelforma_pagoPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_sub_clientePedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_consignatarioPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_consultorPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelordenPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_estado_pedidoPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabeldescripcionPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelmontoPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelsaldoPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabeldisponiblePedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabeldescuento_porcentajePedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabeltotal_con_ivaPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelsumanPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabeldescuento_valorPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabeltotal_sin_ivaPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabeltotal_descuentoPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelfletePedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabeltotalPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelsubtotalPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelsegurosPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelivaPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelfinanciamientoPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelmonto_retencionPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelotroPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelicePedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelfechaPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelfecha_servidorPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_tipo_cambioPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelnumero_fuePedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_centro_costoPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_responsablePedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelhora_inicioPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelhora_finPedidoExpor,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormPedidoExpor.jLabelid_transportistaPedidoExpor,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("DetallePedidoExpor")) {
			if(this.pedidoexpor==null) {
				this.pedidoexpor= new PedidoExpor();
			}

			if(this.pedidoexporSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoPedidoExpor
				this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.getdetallepedidoexpor().setPedidoExpor(this.pedidoexpor);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoPedidoExpor--;	
		
		
		this.pedidoexporAux=new PedidoExpor();
		
		this.pedidoexporAux.setId(this.iIdNuevoPedidoExpor);
		this.pedidoexporAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.pedidoexporLogic.getPedidoExpors().add(this.pedidoexporAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.pedidoexpors.add(this.pedidoexporAux);
		}
		//ARCHITECTURE
		
		this.pedidoexpor=this.pedidoexporAux;
		
		if(PedidoExporJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioPedidoExpor(this.pedidoexpor);
			this.setVariablesObjetoActualToFormularioForeignKeyPedidoExpor(this.pedidoexpor);
		}
				
		//this.setDefaultControlesPedidoExpor();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyPedidoExpor();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyPedidoExpor();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyPedidoExpor();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualPedidoExpor(this.pedidoexporBean,this.pedidoexpor,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(PedidoExporConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.pedidoexporSessionBean.getConGuardarRelaciones()) {
			classes=PedidoExporConstantesFunciones.getClassesRelationshipsOfPedidoExpor(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.pedidoexporReturnGeneral=pedidoexporLogic.procesarEventosPedidoExporsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.pedidoexporLogic.getPedidoExpors(),this.pedidoexpor,this.pedidoexporParameterGeneral,this.isEsNuevoPedidoExpor,classes);//this.pedidoexporLogic.getPedidoExpor()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanPedidoExpor(this.pedidoexporReturnGeneral,this.pedidoexporBean,false);
		
		if(this.pedidoexporReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyPedidoExpor(this.pedidoexporReturnGeneral.getPedidoExpor());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioPedidoExpor(this.pedidoexporReturnGeneral.getPedidoExpor());
		}
		
		if(this.pedidoexporReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioPedidoExpor(this.pedidoexporReturnGeneral.getPedidoExpor(),classes);//this.pedidoexporBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyPedidoExpor();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyPedidoExpor();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			PedidoExporBeanSwingJInternalFrameAdditional.RecargarFormPedidoExpor(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingPedidoExpor(false);
						
			if(pedidoexporSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporSessionBean.getEsGuardarRelacionado() && DetallePedidoExporJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetallePedidoExporActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(PedidoExporJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualPedidoExpor();
			}
			
			this.actualizarVisualTableDatosPedidoExpor();
			
			this.jTableDatosPedidoExpor.setRowSelectionInterval(this.getIndiceNuevoPedidoExpor(), this.getIndiceNuevoPedidoExpor());
			
			this.seleccionarFilaTablaPedidoExporActual();
						
			this.actualizarEstadoCeldasBotonesPedidoExpor("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesPedidoExpor(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumeroPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarnumeroPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumero_preimpresoPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarnumero_preimpresoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfecha_emisionPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarfecha_emisionPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfecha_vencimientoPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarfecha_vencimientoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldcotizacionPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarcotizacionPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextAreadireccionPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activardireccionPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtelefonoPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activartelefonoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldrucPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarrucPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldlugar_entregaPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarlugar_entregaPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextAreaembarquePedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarembarquePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextAreanegociacionPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarnegociacionPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextAreaforma_pagoPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarforma_pagoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldordenPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarordenPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextAreadescripcionPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activardescripcionPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldmontoPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarmontoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsaldoPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarsaldoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFielddisponiblePedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activardisponiblePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFielddescuento_porcentajePedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activardescuento_porcentajePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_con_ivaPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activartotal_con_ivaPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsumanPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarsumanPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFielddescuento_valorPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activardescuento_valorPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_sin_ivaPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activartotal_sin_ivaPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_descuentoPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activartotal_descuentoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldfletePedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarfletePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotalPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activartotalPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsubtotalPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarsubtotalPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsegurosPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarsegurosPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldivaPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarivaPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldfinanciamientoPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarfinanciamientoPedidoExpor);//
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldmonto_retencionPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarmonto_retencionPedidoExpor);//
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldotroPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarotroPedidoExpor);//
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldicePedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activaricePedidoExpor);//
		this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfechaPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarfechaPedidoExpor);//
		this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfecha_servidorPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarfecha_servidorPedidoExpor);//
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumero_fuePedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarnumero_fuePedidoExpor);//
		this.jInternalFrameDetalleFormPedidoExpor.jSpinnerhora_inicioPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarhora_inicioPedidoExpor);//
		this.jInternalFrameDetalleFormPedidoExpor.jSpinnerhora_finPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarhora_finPedidoExpor);	
		//
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empresaPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_empresaPedidoExpor);//
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sucursalPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_sucursalPedidoExpor);//
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_ejercicioPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_ejercicioPedidoExpor);//
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_periodoPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_periodoPedidoExpor);//
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_anioPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_anioPedidoExpor);//
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_mesPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_mesPedidoExpor);//
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_usuarioPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_usuarioPedidoExpor);//
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_monedaPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_monedaPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empleadoPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_empleadoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_precioPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_tipo_precioPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_formatoPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_formatoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_clientePedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_clientePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_paisPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_paisPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportePedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_transportePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_vendedorPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_vendedorPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sub_clientePedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_sub_clientePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consignatarioPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_consignatarioPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consultorPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_consultorPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_estado_pedidoPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_estado_pedidoPedidoExpor);//
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_cambioPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_tipo_cambioPedidoExpor);//
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_centro_costoPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_centro_costoPedidoExpor);//
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_responsablePedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_responsablePedidoExpor);//
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportistaPedidoExpor.setEnabled(isHabilitar && this.pedidoexporConstantesFunciones.activarid_transportistaPedidoExpor);
	};
	
	public void setDefaultControlesPedidoExpor() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoPedidoExpor(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.pedidoexporSessionBean.setConGuardarRelaciones(true);			
			this.pedidoexporSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormPedidoExpor.jTabbedPaneRelacionesPedidoExpor.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.pedidoexporSessionBean.setConGuardarRelaciones(false);			
			this.pedidoexporSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormPedidoExpor.jTabbedPaneRelacionesPedidoExpor.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoPedidoExpor() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PedidoExpor pedidoexporAux:this.pedidoexporLogic.getPedidoExpors()) {
				if(pedidoexporAux.getId().equals(this.iIdNuevoPedidoExpor)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PedidoExpor pedidoexporAux:this.pedidoexpors) {
				if(pedidoexporAux.getId().equals(this.iIdNuevoPedidoExpor)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualPedidoExpor(PedidoExpor pedidoexpor,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PedidoExpor pedidoexporAux:this.pedidoexporLogic.getPedidoExpors()) {
				if(pedidoexporAux.getId().equals(pedidoexpor.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PedidoExpor pedidoexporAux:this.pedidoexpors) {
				if(pedidoexporAux.getId().equals(pedidoexpor.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalPedidoExpor(PedidoExpor pedidoexporOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PedidoExpor pedidoexporAux:this.pedidoexporLogic.getPedidoExpors()) {
				if(pedidoexporAux.getPedidoExporOriginal().getId().equals(pedidoexporOriginal.getId())) {
					existe=true;
					pedidoexporOriginal.setId(pedidoexporAux.getId());
					pedidoexporOriginal.setVersionRow(pedidoexporAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PedidoExpor pedidoexporAux:this.pedidoexpors) {
				if(pedidoexporAux.getPedidoExporOriginal().getId().equals(pedidoexporOriginal.getId())) {
					existe=true;
					pedidoexporOriginal.setId(pedidoexporAux.getId());
					pedidoexporOriginal.setVersionRow(pedidoexporAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosPedidoExpor(Boolean esParaCancelar) throws Exception {
		pedidoexporsAux=new ArrayList<PedidoExpor>();
		pedidoexporAux=new PedidoExpor();
		
		if(!this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(PedidoExpor pedidoexporAux:this.pedidoexporLogic.getPedidoExpors()) {
					if(pedidoexporAux.getId()<0) {
						pedidoexporsAux.add(pedidoexporAux);
					}		
				}
				this.iIdNuevoPedidoExpor=0L;
				this.pedidoexporLogic.getPedidoExpors().removeAll(pedidoexporsAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PedidoExpor pedidoexporAux:this.pedidoexpors) {
					if(pedidoexporAux.getId()<0) {
						pedidoexporsAux.add(pedidoexporAux);
					}		
				}
				this.iIdNuevoPedidoExpor=0L;
				this.pedidoexpors.removeAll(pedidoexporsAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoPedidoExpor 
					&& this.pedidoexporLogic.getPedidoExpors().size()>0
					) {
					pedidoexporAux=this.pedidoexporLogic.getPedidoExpors().get(this.pedidoexporLogic.getPedidoExpors().size() - 1);
				
					if(pedidoexporAux.getId()<0) {
						this.pedidoexporLogic.getPedidoExpors().remove(pedidoexporAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoPedidoExpor && this.pedidoexpors.size()>0) {
					pedidoexporAux=this.pedidoexpors.get(this.pedidoexpors.size() - 1);
				
					if(pedidoexporAux.getId()<0) {
						this.pedidoexpors.remove(pedidoexporAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoPedidoExpor(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(pedidoexpor.getId()<0) {
				this.pedidoexporLogic.getPedidoExpors().remove(this.pedidoexpor);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(pedidoexpor.getId()<0) {
				this.pedidoexpors.remove(this.pedidoexpor);
			}
		}			
	}
	
	public void setEstadosInicialesPedidoExpor(List<PedidoExpor> pedidoexporsAux) throws Exception {
		PedidoExporConstantesFunciones.setEstadosInicialesPedidoExpor(pedidoexporsAux);
	}
	
	public void setEstadosInicialesPedidoExpor(PedidoExpor pedidoexporAux) throws Exception {
		PedidoExporConstantesFunciones.setEstadosInicialesPedidoExpor(pedidoexporAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarPedidoExporActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesPedidoExpor("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarPedidoExporActual()) {
				if(!this.isEsNuevoPedidoExpor) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesPedidoExpor("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoPedidoExpor=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarPedidoExporActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Pedido Exportacion ?", "MANTENIMIENTO DE Pedido Exportacion", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesPedidoExpor("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(PedidoExpor pedidoexpor) throws Exception {
		PedidoExporConstantesFunciones.seleccionarAsignar(this.pedidoexpor,pedidoexpor);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarPedidoExpor=this.isPermisoActualizarOriginalPedidoExpor;
			
			
			this.seleccionarAsignar(pedidoexpor);
			
			

			idEmpleadoActual=pedidoexpor.getid_empleado();
			this.seleccionarEmpleadoActual();

			idClienteActual=pedidoexpor.getid_cliente();
			this.seleccionarClienteActual();

			idVendedorActual=pedidoexpor.getid_vendedor();
			this.seleccionarVendedorActual();

			idTipoCambioActual=pedidoexpor.getid_tipo_cambio();
			this.seleccionarTipoCambioActual();

			idCentroCostoActual=pedidoexpor.getid_centro_costo();
			this.seleccionarCentroCostoActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			PedidoExporConstantesFunciones.quitarEspaciosPedidoExpor(this.pedidoexpor,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesPedidoExpor("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.pedidoexporSessionBean.setsFuncionBusquedaRapida(this.pedidoexporSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarEmpleadoActual() throws Exception {
		try	{
			Empleado empleadoAux=new Empleado();

			if(this.idEmpleadoActual != null && this.idEmpleadoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(this.idEmpleadoActual);
					empleadoAux= empleadoLogic.getEmpleado();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				empleadosForeignKey=new ArrayList<Empleado>();
				empleadosForeignKey.add(empleadoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarClienteActual() throws Exception {
		try	{
			Cliente clienteAux=new Cliente();

			if(this.idClienteActual != null && this.idClienteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(this.idClienteActual);
					clienteAux= clienteLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientesForeignKey=new ArrayList<Cliente>();
				clientesForeignKey.add(clienteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarVendedorActual() throws Exception {
		try	{
			Vendedor vendedorAux=new Vendedor();

			if(this.idVendedorActual != null && this.idVendedorActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					vendedorLogic.getEntityWithConnection(this.idVendedorActual);
					vendedorAux= vendedorLogic.getVendedor();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				vendedorsForeignKey=new ArrayList<Vendedor>();
				vendedorsForeignKey.add(vendedorAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarTipoCambioActual() throws Exception {
		try	{
			TipoCambio tipocambioAux=new TipoCambio();

			if(this.idTipoCambioActual != null && this.idTipoCambioActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipocambioLogic.getEntityWithConnection(this.idTipoCambioActual);
					tipocambioAux= tipocambioLogic.getTipoCambio();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				tipocambiosForeignKey=new ArrayList<TipoCambio>();
				tipocambiosForeignKey.add(tipocambioAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCentroCostoActual() throws Exception {
		try	{
			CentroCosto centrocostoAux=new CentroCosto();

			if(this.idCentroCostoActual != null && this.idCentroCostoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					centrocostoLogic.getEntityWithConnection(this.idCentroCostoActual);
					centrocostoAux= centrocostoLogic.getCentroCosto();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				centrocostosForeignKey=new ArrayList<CentroCosto>();
				centrocostosForeignKey.add(centrocostoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoPedidoExpor) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosPedidoExpor(esParaCancelar);				
				this.cancelarNuevoPedidoExpor(esParaCancelar);								
			}
			
			this.pedidoexpor=new PedidoExpor();
			
			this.inicializarPedidoExpor();
			
			this.actualizarEstadoCeldasBotonesPedidoExpor("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarPedidoExpor() throws Exception {
		try {
			PedidoExporConstantesFunciones.inicializarPedidoExpor(this.pedidoexpor);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.pedidoexporLogic.getPedidoExpors().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReportePedidoExpors(String sAccionBusqueda,List<PedidoExpor> pedidoexporsParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="PedidoExpor"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="PedidoExporMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("PedidoExporMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="PedidoExpor"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Pedido Exportacions");		
		parameters.put("busquedapor", PedidoExporConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(DetallePedidoExpor.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					PedidoExporLogic pedidoexporLogicAuxiliar=new PedidoExporLogic();
					pedidoexporLogicAuxiliar.setDatosCliente(pedidoexporLogic.getDatosCliente());				
					pedidoexporLogicAuxiliar.setPedidoExpors(pedidoexporsParaReportes);
					
					pedidoexporLogicAuxiliar.cargarRelacionesLoteForeignKeyPedidoExporWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					pedidoexporsParaReportes=pedidoexporLogicAuxiliar.getPedidoExpors();
					
					//pedidoexporLogic.getNewConnexionToDeep();
					
					//for (PedidoExpor pedidoexpor:pedidoexporsParaReportes) {
					//	pedidoexporLogic.deepLoad(pedidoexpor, false, DeepLoadType.INCLUDE, classes);
					//}						
					//pedidoexporLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//pedidoexporLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileDetallePedidoExpor = AuxiliarReportes.class.getResourceAsStream("DetallePedidoExporDetalleRelacionesDesign.jasper");
			parameters.put("subreport_detallepedidoexpor", reportFileDetallePedidoExpor);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourcePedidoExpor=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			PedidoExporConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			PedidoExporConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourcePedidoExpor=new JRBeanArrayDataSource(PedidoExporJInternalFrame.TraerPedidoExporBeans(pedidoexporsParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourcePedidoExpor);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+PedidoExporConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+PedidoExporConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(PedidoExporBean.TraerPedidoExporBeans(pedidoexporsParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReportePedidoExpors(sAccionBusqueda,sTipoArchivoReporte,pedidoexporsParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalPedidoExpors(sAccionBusqueda,sTipoArchivoReporte,pedidoexporsParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoPedidoExporActionPerformed(null);
					//this.generarExcelReportePedidoExpors(sAccionBusqueda,sTipoArchivoReporte,pedidoexporsParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalPedidoExpors(sAccionBusqueda,sTipoArchivoReporte,pedidoexporsParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesPedidoExpors(sAccionBusqueda,sTipoArchivoReporte,pedidoexporsParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesPedidoExpors(sAccionBusqueda,sTipoArchivoReporte,pedidoexporsParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReportePedidoExpors(String sAccionBusqueda,String sTipoArchivoReporte,List<PedidoExpor> pedidoexporsParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedidoexpor";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("PedidoExpors");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderPedidoExpor("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(PedidoExpor pedidoexpor : pedidoexporsParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			PedidoExporConstantesFunciones.generarExcelReporteDataPedidoExpor("NORMAL",row,workbook,pedidoexpor,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidoexporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Exportacion",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderPedidoExpor(String sTipo,Row row,Workbook workbook) {
		
		PedidoExporConstantesFunciones.generarExcelReporteHeaderPedidoExpor(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalPedidoExpors(String sAccionBusqueda,String sTipoArchivoReporte,List<PedidoExpor> pedidoexporsParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedidoexpor_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("PedidoExpors");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(PedidoExpor pedidoexpor : pedidoexporsParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(PedidoExporConstantesFunciones.getPedidoExporDescripcion(pedidoexpor));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDUSUARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDUSUARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getusuario_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_NUMERO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_NUMERO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getnumero());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_NUMEROAUTORIZACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_NUMEROAUTORIZACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getnumero_preimpreso());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_FECHAEMISION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_FECHAEMISION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getfecha_emision());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_FECHAVENCIMIENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_FECHAVENCIMIENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getfecha_vencimiento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDMONEDA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDMONEDA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getmoneda_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_COTIZACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_COTIZACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getcotizacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDEMPLEADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDEMPLEADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getempleado_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDTIPOPRECIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDTIPOPRECIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.gettipoprecio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDFORMATO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDFORMATO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getformato_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_DIRECCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_DIRECCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getdireccion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_TELEFONO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_TELEFONO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.gettelefono());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_RUC))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_RUC);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getruc());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDPAIS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDPAIS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getpais_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_LUGARENTREGA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_LUGARENTREGA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getlugar_entrega());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_EMBARQUE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_EMBARQUE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getembarque());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_NEGOCIACION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_NEGOCIACION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getnegociacion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDTRANSPORTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDTRANSPORTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.gettransporte_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDVENDEDOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDVENDEDOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getvendedor_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_FORMAPAGO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_FORMAPAGO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getforma_pago());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDSUBCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDSUBCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getsubcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDCONSIGNATARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDCONSIGNATARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getconsignatario_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDCONSULTOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDCONSULTOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getconsultor_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_ORDEN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_ORDEN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getorden());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDESTADOPEDIDOEXPOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDESTADOPEDIDOEXPOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getestadopedidoexpor_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_DESCRIPCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_DESCRIPCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getdescripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_MONTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_MONTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getmonto());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_SALDO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_SALDO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getsaldo());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_DISPONIBLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_DISPONIBLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getdisponible());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_DESCUENTOPORCENTAJE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_DESCUENTOPORCENTAJE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getdescuento_porcentaje());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_TOTALCONIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_TOTALCONIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.gettotal_con_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_SUMAN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_SUMAN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getsuman());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_DESCUENTOVALOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_DESCUENTOVALOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getdescuento_valor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_TOTALSINIVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_TOTALSINIVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.gettotal_sin_iva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_TOTALDESCUENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_TOTALDESCUENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.gettotal_descuento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_FLETE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_FLETE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getflete());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_TOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_TOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.gettotal());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_SUBTOTAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_SUBTOTAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getsubtotal());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_SEGUROS))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_SEGUROS);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getseguros());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IVA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IVA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getiva());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_FINANCIAMIENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_FINANCIAMIENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getfinanciamiento());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_MONTORETENCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_MONTORETENCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getmonto_retencion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_OTRO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_OTRO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getotro());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_ICE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_ICE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getice());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_FECHA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_FECHA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getfecha());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_FECHASERVIDOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_FECHASERVIDOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getfecha_servidor());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDTIPOCAMBIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDTIPOCAMBIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.gettipocambio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_NUMEROFUE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_NUMEROFUE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getnumero_fue());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDCENTROCOSTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDCENTROCOSTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getcentrocosto_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDRESPONSABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDRESPONSABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.getresponsable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_HORAINICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_HORAINICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.gethora_inicio());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_HORAFIN))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_HORAFIN);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.gethora_fin());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(PedidoExporConstantesFunciones.LABEL_IDTRANSPORTISTA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDTRANSPORTISTA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(pedidoexpor.gettransportista_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidoexporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Exportacion",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesPedidoExpors(String sAccionBusqueda,String sTipoArchivoReporte,List<PedidoExpor> pedidoexporsParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<PedidoExpor> pedidoexporsRespaldo=null;
		
		classes=PedidoExporConstantesFunciones.getClassesRelationshipsOfPedidoExpor(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.pedidoexporLogic.setDatosCliente(this.datosCliente);
		this.pedidoexporLogic.setDatosDeep(this.datosDeep);
		this.pedidoexporLogic.setIsConDeep(true);
		
		pedidoexporsRespaldo=this.pedidoexporLogic.getPedidoExpors();
		
		this.pedidoexporLogic.setPedidoExpors(pedidoexporsParaReportes);	
		this.pedidoexporLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		pedidoexporsParaReportes=this.pedidoexporLogic.getPedidoExpors();
		this.pedidoexporLogic.setPedidoExpors(pedidoexporsRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedidoexpor_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("PedidoExpors");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderPedidoExpor("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(PedidoExpor pedidoexpor : pedidoexporsParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderPedidoExpor("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			PedidoExporConstantesFunciones.generarExcelReporteDataPedidoExpor("NORMAL",row,workbook,pedidoexpor,cellStyleDataAux);
		
			
			


				//DetallePedidoExpor
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(DetallePedidoExporConstantesFunciones.SCLASSWEBTITULO))) {

				if(pedidoexpor.getDetallePedidoExpors()!=null && pedidoexpor.getDetallePedidoExpors().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(DetallePedidoExporConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					DetallePedidoExporConstantesFunciones.generarExcelReporteHeaderDetallePedidoExpor("RELACIONADO",row,workbook);
				}

				if(pedidoexpor.getDetallePedidoExpors()!=null) {
					i2=0;
					for(DetallePedidoExpor detallepedidoexpor : pedidoexpor.getDetallePedidoExpors()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						DetallePedidoExporConstantesFunciones.generarExcelReporteDataDetallePedidoExpor("RELACIONADO",row,workbook,detallepedidoexpor,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(PedidoExporConstantesFunciones.getPedidoExporDescripcion(pedidoexpor));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidoexporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Exportacion",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoPedidoExpor.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPedidoExpor.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoPedidoExpor.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPedidoExpor.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessPedidoExpor() throws Exception {		
		this.startProcessPedidoExpor(true);
	}
	
	public void startProcessPedidoExpor(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasPedidoExpor ,this.jPanelParametrosReportesPedidoExpor, this.jScrollPanelDatosPedidoExpor,this.jPanelPaginacionPedidoExpor, this.jScrollPanelDatosEdicionPedidoExpor, this.jPanelAccionesPedidoExpor,this.jPanelAccionesFormularioPedidoExpor,this.jmenuBarPedidoExpor,this.jmenuBarDetallePedidoExpor,this.jTtoolBarPedidoExpor,this.jTtoolBarDetallePedidoExpor);		
		
		final JTabbedPane jTabbedPaneBusquedasPedidoExpor=this.jTabbedPaneBusquedasPedidoExpor; 
		
		final JPanel jPanelParametrosReportesPedidoExpor=this.jPanelParametrosReportesPedidoExpor;
		//final JScrollPane jScrollPanelDatosPedidoExpor=this.jScrollPanelDatosPedidoExpor;
		final JTable jTableDatosPedidoExpor=this.jTableDatosPedidoExpor;		
		final JPanel jPanelPaginacionPedidoExpor=this.jPanelPaginacionPedidoExpor;
		//final JScrollPane jScrollPanelDatosEdicionPedidoExpor=this.jScrollPanelDatosEdicionPedidoExpor;
		final JPanel jPanelAccionesPedidoExpor=this.jPanelAccionesPedidoExpor;
		
		JPanel jPanelCamposAuxiliarPedidoExpor=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarPedidoExpor=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
			jPanelCamposAuxiliarPedidoExpor=this.jInternalFrameDetalleFormPedidoExpor.jPanelCamposPedidoExpor;
			jPanelAccionesFormularioAuxiliarPedidoExpor=this.jInternalFrameDetalleFormPedidoExpor.jPanelAccionesFormularioPedidoExpor;
		}
		
		final JPanel jPanelCamposPedidoExpor=jPanelCamposAuxiliarPedidoExpor;
		final JPanel jPanelAccionesFormularioPedidoExpor=jPanelAccionesFormularioAuxiliarPedidoExpor;
		
		
		final JMenuBar jmenuBarPedidoExpor=this.jmenuBarPedidoExpor;
		final JToolBar jTtoolBarPedidoExpor=this.jTtoolBarPedidoExpor;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarPedidoExpor=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarPedidoExpor=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
			jmenuBarDetalleAuxiliarPedidoExpor=this.jInternalFrameDetalleFormPedidoExpor.jmenuBarDetallePedidoExpor;
			jTtoolBarDetalleAuxiliarPedidoExpor=this.jInternalFrameDetalleFormPedidoExpor.jTtoolBarDetallePedidoExpor;
		}
		
		final JMenuBar jmenuBarDetallePedidoExpor=jmenuBarDetalleAuxiliarPedidoExpor;
		final JToolBar jTtoolBarDetallePedidoExpor=jTtoolBarDetalleAuxiliarPedidoExpor;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasPedidoExpor;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesPedidoExpor;
			processRunnable.jTableDatos=jTableDatosPedidoExpor;
			processRunnable.jPanelCampos=jPanelCamposPedidoExpor;
			processRunnable.jPanelPaginacion=jPanelPaginacionPedidoExpor;
			processRunnable.jPanelAcciones=jPanelAccionesPedidoExpor;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioPedidoExpor;
			
			
			processRunnable.jmenuBar=jmenuBarPedidoExpor;
			processRunnable.jmenuBarDetalle=jmenuBarDetallePedidoExpor;
			processRunnable.jTtoolBar=jTtoolBarPedidoExpor;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetallePedidoExpor;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasPedidoExpor ,jPanelParametrosReportesPedidoExpor,jTableDatosPedidoExpor, /*jScrollPanelDatosPedidoExpor,*/jPanelCamposPedidoExpor,jPanelPaginacionPedidoExpor, /*jScrollPanelDatosEdicionPedidoExpor,*/ jPanelAccionesPedidoExpor,jPanelAccionesFormularioPedidoExpor,jmenuBarPedidoExpor,jmenuBarDetallePedidoExpor,jTtoolBarPedidoExpor,jTtoolBarDetallePedidoExpor);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasPedidoExpor ,jPanelParametrosReportesPedidoExpor, jScrollPanelDatosPedidoExpor,jPanelPaginacionPedidoExpor, jScrollPanelDatosEdicionPedidoExpor, jPanelAccionesPedidoExpor,jPanelAccionesFormularioPedidoExpor,jmenuBarPedidoExpor,jmenuBarDetallePedidoExpor,jTtoolBarPedidoExpor,jTtoolBarDetallePedidoExpor);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessPedidoExpor() {// throws Exception 
		this.finishProcessPedidoExpor(true);
	}
	
	public void finishProcessPedidoExpor(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasPedidoExpor ,this.jPanelParametrosReportesPedidoExpor, this.jScrollPanelDatosPedidoExpor,this.jPanelPaginacionPedidoExpor, this.jScrollPanelDatosEdicionPedidoExpor, this.jPanelAccionesPedidoExpor,this.jPanelAccionesFormularioPedidoExpor,this.jmenuBarPedidoExpor,this.jmenuBarDetallePedidoExpor,this.jTtoolBarPedidoExpor,this.jTtoolBarDetallePedidoExpor);		
		
		final JTabbedPane jTabbedPaneBusquedasPedidoExpor=this.jTabbedPaneBusquedasPedidoExpor; 
		
		final JPanel jPanelParametrosReportesPedidoExpor=this.jPanelParametrosReportesPedidoExpor;
		//final JScrollPane jScrollPanelDatosPedidoExpor=this.jScrollPanelDatosPedidoExpor;
		final JTable jTableDatosPedidoExpor=this.jTableDatosPedidoExpor;		
		final JPanel jPanelPaginacionPedidoExpor=this.jPanelPaginacionPedidoExpor;
		//final JScrollPane jScrollPanelDatosEdicionPedidoExpor=this.jScrollPanelDatosEdicionPedidoExpor;
		final JPanel jPanelAccionesPedidoExpor=this.jPanelAccionesPedidoExpor;
		
		JPanel jPanelCamposAuxiliarPedidoExpor=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarPedidoExpor=new JPanel();
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
			jPanelCamposAuxiliarPedidoExpor=this.jInternalFrameDetalleFormPedidoExpor.jPanelCamposPedidoExpor;
			jPanelAccionesFormularioAuxiliarPedidoExpor=this.jInternalFrameDetalleFormPedidoExpor.jPanelAccionesFormularioPedidoExpor;
		}
		
		final JPanel jPanelCamposPedidoExpor=jPanelCamposAuxiliarPedidoExpor;
		final JPanel jPanelAccionesFormularioPedidoExpor=jPanelAccionesFormularioAuxiliarPedidoExpor;
		
		
		final JMenuBar jmenuBarPedidoExpor=this.jmenuBarPedidoExpor;		
		final JToolBar jTtoolBarPedidoExpor=this.jTtoolBarPedidoExpor;
				
		JMenuBar jmenuBarDetalleAuxiliarPedidoExpor=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarPedidoExpor=new JToolBar();
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
			jmenuBarDetalleAuxiliarPedidoExpor=this.jInternalFrameDetalleFormPedidoExpor.jmenuBarDetallePedidoExpor;
			jTtoolBarDetalleAuxiliarPedidoExpor=this.jInternalFrameDetalleFormPedidoExpor.jTtoolBarDetallePedidoExpor;		
		}
		
		final JMenuBar jmenuBarDetallePedidoExpor=jmenuBarDetalleAuxiliarPedidoExpor;
		final JToolBar jTtoolBarDetallePedidoExpor=jTtoolBarDetalleAuxiliarPedidoExpor;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasPedidoExpor;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesPedidoExpor;
			processRunnable.jTableDatos=jTableDatosPedidoExpor;
			processRunnable.jPanelCampos=jPanelCamposPedidoExpor;
			processRunnable.jPanelPaginacion=jPanelPaginacionPedidoExpor;
			processRunnable.jPanelAcciones=jPanelAccionesPedidoExpor;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioPedidoExpor;
			
			
			processRunnable.jmenuBar=jmenuBarPedidoExpor;
			processRunnable.jmenuBarDetalle=jmenuBarDetallePedidoExpor;
			processRunnable.jTtoolBar=jTtoolBarPedidoExpor;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetallePedidoExpor;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasPedidoExpor ,jPanelParametrosReportesPedidoExpor, jTableDatosPedidoExpor,/*jScrollPanelDatosPedidoExpor,*/jPanelCamposPedidoExpor,jPanelPaginacionPedidoExpor, /*jScrollPanelDatosEdicionPedidoExpor,*/ jPanelAccionesPedidoExpor,jPanelAccionesFormularioPedidoExpor,jmenuBarPedidoExpor,jmenuBarDetallePedidoExpor,jTtoolBarPedidoExpor,jTtoolBarDetallePedidoExpor));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesPedidoExpor(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarPedidoExpor(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuPedidoExpor(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarPedidoExpor(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarPedidoExpor,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetallePedidoExpor,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuPedidoExpor(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarPedidoExpor,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetallePedidoExpor,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.pedidoexporConstantesFunciones.getsFinalQueryPedidoExpor();
		String  finalQueryPaginacionTodos=this.pedidoexporConstantesFunciones.getsFinalQueryPedidoExpor();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=PedidoExporConstantesFunciones.getArrayColumnasGlobalesNoPedidoExpor(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=PedidoExporConstantesFunciones.getArrayColumnasGlobalesPedidoExpor(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,!esBusqueda,esBusqueda,arrColumnasGlobales,PedidoExporConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.pedidoexporsEliminados= new ArrayList<PedidoExpor>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessPedidoExpor();
		
				///*PedidoExporSessionBean*/this.pedidoexporSessionBean=new PedidoExporSessionBean();
			
			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=PedidoExporConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=PedidoExporConstantesFunciones.getClassesForeignKeysOfPedidoExpor(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/pedidoexpor."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			pedidoexporsAux= new ArrayList<PedidoExpor>();
			
				
			pedidoexporLogic.setDatosCliente(this.datosCliente);
			pedidoexporLogic.setDatosDeep(this.datosDeep);
			pedidoexporLogic.setIsConDeep(true);
			
			
			pedidoexporLogic.getPedidoExporDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					pedidoexporLogic.getTodosPedidoExpors(finalQueryGlobal,pagination);
					
					//pedidoexporLogic.getTodosPedidoExporsWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(pedidoexporLogic.getPedidoExpors()==null|| pedidoexporLogic.getPedidoExpors().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							pedidoexporsAux= new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux= new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							pedidoexporLogic.getTodosPedidoExpors(finalQueryGlobal+"",this.pagination);												
							
							//pedidoexporLogic.getTodosPedidoExporsWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReportePedidoExpors("Todos",pedidoexporLogic.getPedidoExpors() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());					
							pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idPedidoExpor=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idPedidoExpor=this.idActual;
				
				} else if(this.idPedidoExporActual!=null && this.idPedidoExporActual!=0L) {
					idPedidoExpor=idPedidoExporActual;
				}
				
					
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndicePorId(idPedidoExpor);
				
				this.pedidoexpors=new ArrayList<PedidoExpor>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					pedidoexporLogic.getEntity(idPedidoExpor);
					
					//pedidoexporLogic.getEntityWithConnection(idPedidoExpor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
					pedidoexporLogic.getPedidoExpors().add(pedidoexporLogic.getPedidoExpor());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpors=new ArrayList<PedidoExpor>();
					this.pedidoexpors.add(pedidoexpor);
				}
				
				if(pedidoexporLogic.getPedidoExpor()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdCentroCosto")) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoexporLogic.getPedidoExporsFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoexporLogic.getPedidoExpors()==null||pedidoexporLogic.getPedidoExpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidoexpors==null|| pedidoexpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporsAux=new ArrayList<PedidoExpor>();
						pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux=new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoexporLogic.getPedidoExporsFK_IdCentroCosto(finalQueryGlobal,pagination,id_centro_costoFK_IdCentroCosto);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdCentroCosto(id_centro_costoFK_IdCentroCosto);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoExpors("FK_IdCentroCosto",pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoExpors("FK_IdCentroCosto",pedidoexpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
						pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdCliente")) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoexporLogic.getPedidoExporsFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoexporLogic.getPedidoExpors()==null||pedidoexporLogic.getPedidoExpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidoexpors==null|| pedidoexpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporsAux=new ArrayList<PedidoExpor>();
						pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux=new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoexporLogic.getPedidoExporsFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoExpors("FK_IdCliente",pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoExpors("FK_IdCliente",pedidoexpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
						pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdConsignatario")) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdConsignatario(id_consignatarioFK_IdConsignatario);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoexporLogic.getPedidoExporsFK_IdConsignatario(finalQueryGlobal,pagination,id_consignatarioFK_IdConsignatario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdConsignatario(id_consignatarioFK_IdConsignatario);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdConsignatario(id_consignatarioFK_IdConsignatario);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoexporLogic.getPedidoExpors()==null||pedidoexporLogic.getPedidoExpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidoexpors==null|| pedidoexpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporsAux=new ArrayList<PedidoExpor>();
						pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux=new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoexporLogic.getPedidoExporsFK_IdConsignatario(finalQueryGlobal,pagination,id_consignatarioFK_IdConsignatario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdConsignatario(id_consignatarioFK_IdConsignatario);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdConsignatario(id_consignatarioFK_IdConsignatario);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoExpors("FK_IdConsignatario",pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoExpors("FK_IdConsignatario",pedidoexpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
						pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdConsultor")) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdConsultor(id_consultorFK_IdConsultor);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoexporLogic.getPedidoExporsFK_IdConsultor(finalQueryGlobal,pagination,id_consultorFK_IdConsultor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdConsultor(id_consultorFK_IdConsultor);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdConsultor(id_consultorFK_IdConsultor);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoexporLogic.getPedidoExpors()==null||pedidoexporLogic.getPedidoExpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidoexpors==null|| pedidoexpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporsAux=new ArrayList<PedidoExpor>();
						pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux=new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoexporLogic.getPedidoExporsFK_IdConsultor(finalQueryGlobal,pagination,id_consultorFK_IdConsultor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdConsultor(id_consultorFK_IdConsultor);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdConsultor(id_consultorFK_IdConsultor);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoExpors("FK_IdConsultor",pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoExpors("FK_IdConsultor",pedidoexpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
						pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoexporLogic.getPedidoExporsFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoexporLogic.getPedidoExpors()==null||pedidoexporLogic.getPedidoExpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidoexpors==null|| pedidoexpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporsAux=new ArrayList<PedidoExpor>();
						pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux=new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoexporLogic.getPedidoExporsFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoExpors("FK_IdEjercicio",pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoExpors("FK_IdEjercicio",pedidoexpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
						pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpleado")) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoexporLogic.getPedidoExporsFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoexporLogic.getPedidoExpors()==null||pedidoexporLogic.getPedidoExpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidoexpors==null|| pedidoexpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporsAux=new ArrayList<PedidoExpor>();
						pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux=new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoexporLogic.getPedidoExporsFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoExpors("FK_IdEmpleado",pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoExpors("FK_IdEmpleado",pedidoexpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
						pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoexporLogic.getPedidoExporsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoexporLogic.getPedidoExpors()==null||pedidoexporLogic.getPedidoExpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidoexpors==null|| pedidoexpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporsAux=new ArrayList<PedidoExpor>();
						pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux=new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoexporLogic.getPedidoExporsFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoExpors("FK_IdEmpresa",pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoExpors("FK_IdEmpresa",pedidoexpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
						pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEstadoPedidoExpor")) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoExpor(id_estado_pedidoFK_IdEstadoPedidoExpor);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoexporLogic.getPedidoExporsFK_IdEstadoPedidoExpor(finalQueryGlobal,pagination,id_estado_pedidoFK_IdEstadoPedidoExpor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoExpor(id_estado_pedidoFK_IdEstadoPedidoExpor);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoExpor(id_estado_pedidoFK_IdEstadoPedidoExpor);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoexporLogic.getPedidoExpors()==null||pedidoexporLogic.getPedidoExpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidoexpors==null|| pedidoexpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporsAux=new ArrayList<PedidoExpor>();
						pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux=new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoexporLogic.getPedidoExporsFK_IdEstadoPedidoExpor(finalQueryGlobal,pagination,id_estado_pedidoFK_IdEstadoPedidoExpor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoExpor(id_estado_pedidoFK_IdEstadoPedidoExpor);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdEstadoPedidoExpor(id_estado_pedidoFK_IdEstadoPedidoExpor);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoExpors("FK_IdEstadoPedidoExpor",pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoExpors("FK_IdEstadoPedidoExpor",pedidoexpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
						pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdFormato")) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoexporLogic.getPedidoExporsFK_IdFormato(finalQueryGlobal,pagination,id_formatoFK_IdFormato);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoexporLogic.getPedidoExpors()==null||pedidoexporLogic.getPedidoExpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidoexpors==null|| pedidoexpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporsAux=new ArrayList<PedidoExpor>();
						pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux=new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoexporLogic.getPedidoExporsFK_IdFormato(finalQueryGlobal,pagination,id_formatoFK_IdFormato);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdFormato(id_formatoFK_IdFormato);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoExpors("FK_IdFormato",pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoExpors("FK_IdFormato",pedidoexpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
						pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdMoneda")) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoexporLogic.getPedidoExporsFK_IdMoneda(finalQueryGlobal,pagination,id_monedaFK_IdMoneda);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoexporLogic.getPedidoExpors()==null||pedidoexporLogic.getPedidoExpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidoexpors==null|| pedidoexpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporsAux=new ArrayList<PedidoExpor>();
						pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux=new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoexporLogic.getPedidoExporsFK_IdMoneda(finalQueryGlobal,pagination,id_monedaFK_IdMoneda);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdMoneda(id_monedaFK_IdMoneda);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoExpors("FK_IdMoneda",pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoExpors("FK_IdMoneda",pedidoexpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
						pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPais")) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoexporLogic.getPedidoExporsFK_IdPais(finalQueryGlobal,pagination,id_paisFK_IdPais);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoexporLogic.getPedidoExpors()==null||pedidoexporLogic.getPedidoExpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidoexpors==null|| pedidoexpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporsAux=new ArrayList<PedidoExpor>();
						pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux=new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoexporLogic.getPedidoExporsFK_IdPais(finalQueryGlobal,pagination,id_paisFK_IdPais);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdPais(id_paisFK_IdPais);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoExpors("FK_IdPais",pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoExpors("FK_IdPais",pedidoexpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
						pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoexporLogic.getPedidoExporsFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoexporLogic.getPedidoExpors()==null||pedidoexporLogic.getPedidoExpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidoexpors==null|| pedidoexpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporsAux=new ArrayList<PedidoExpor>();
						pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux=new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoexporLogic.getPedidoExporsFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoExpors("FK_IdPeriodo",pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoExpors("FK_IdPeriodo",pedidoexpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
						pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdResponsable")) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdResponsable(id_responsableFK_IdResponsable);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoexporLogic.getPedidoExporsFK_IdResponsable(finalQueryGlobal,pagination,id_responsableFK_IdResponsable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdResponsable(id_responsableFK_IdResponsable);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdResponsable(id_responsableFK_IdResponsable);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoexporLogic.getPedidoExpors()==null||pedidoexporLogic.getPedidoExpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidoexpors==null|| pedidoexpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporsAux=new ArrayList<PedidoExpor>();
						pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux=new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoexporLogic.getPedidoExporsFK_IdResponsable(finalQueryGlobal,pagination,id_responsableFK_IdResponsable);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdResponsable(id_responsableFK_IdResponsable);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdResponsable(id_responsableFK_IdResponsable);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoExpors("FK_IdResponsable",pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoExpors("FK_IdResponsable",pedidoexpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
						pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSubCliente")) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoexporLogic.getPedidoExporsFK_IdSubCliente(finalQueryGlobal,pagination,id_sub_clienteFK_IdSubCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoexporLogic.getPedidoExpors()==null||pedidoexporLogic.getPedidoExpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidoexpors==null|| pedidoexpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporsAux=new ArrayList<PedidoExpor>();
						pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux=new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoexporLogic.getPedidoExporsFK_IdSubCliente(finalQueryGlobal,pagination,id_sub_clienteFK_IdSubCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdSubCliente(id_sub_clienteFK_IdSubCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoExpors("FK_IdSubCliente",pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoExpors("FK_IdSubCliente",pedidoexpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
						pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoexporLogic.getPedidoExporsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoexporLogic.getPedidoExpors()==null||pedidoexporLogic.getPedidoExpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidoexpors==null|| pedidoexpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporsAux=new ArrayList<PedidoExpor>();
						pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux=new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoexporLogic.getPedidoExporsFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoExpors("FK_IdSucursal",pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoExpors("FK_IdSucursal",pedidoexpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
						pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoCambio")) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoexporLogic.getPedidoExporsFK_IdTipoCambio(finalQueryGlobal,pagination,id_tipo_cambioFK_IdTipoCambio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoexporLogic.getPedidoExpors()==null||pedidoexporLogic.getPedidoExpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidoexpors==null|| pedidoexpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporsAux=new ArrayList<PedidoExpor>();
						pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux=new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoexporLogic.getPedidoExporsFK_IdTipoCambio(finalQueryGlobal,pagination,id_tipo_cambioFK_IdTipoCambio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdTipoCambio(id_tipo_cambioFK_IdTipoCambio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoExpors("FK_IdTipoCambio",pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoExpors("FK_IdTipoCambio",pedidoexpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
						pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoPrecio")) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoexporLogic.getPedidoExporsFK_IdTipoPrecio(finalQueryGlobal,pagination,id_tipo_precioFK_IdTipoPrecio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoexporLogic.getPedidoExpors()==null||pedidoexporLogic.getPedidoExpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidoexpors==null|| pedidoexpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporsAux=new ArrayList<PedidoExpor>();
						pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux=new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoexporLogic.getPedidoExporsFK_IdTipoPrecio(finalQueryGlobal,pagination,id_tipo_precioFK_IdTipoPrecio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdTipoPrecio(id_tipo_precioFK_IdTipoPrecio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoExpors("FK_IdTipoPrecio",pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoExpors("FK_IdTipoPrecio",pedidoexpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
						pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransporte")) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoexporLogic.getPedidoExporsFK_IdTransporte(finalQueryGlobal,pagination,id_transporteFK_IdTransporte);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoexporLogic.getPedidoExpors()==null||pedidoexporLogic.getPedidoExpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidoexpors==null|| pedidoexpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporsAux=new ArrayList<PedidoExpor>();
						pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux=new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoexporLogic.getPedidoExporsFK_IdTransporte(finalQueryGlobal,pagination,id_transporteFK_IdTransporte);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdTransporte(id_transporteFK_IdTransporte);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoExpors("FK_IdTransporte",pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoExpors("FK_IdTransporte",pedidoexpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
						pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransportista")) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdTransportista(id_transportistaFK_IdTransportista);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoexporLogic.getPedidoExporsFK_IdTransportista(finalQueryGlobal,pagination,id_transportistaFK_IdTransportista);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdTransportista(id_transportistaFK_IdTransportista);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdTransportista(id_transportistaFK_IdTransportista);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoexporLogic.getPedidoExpors()==null||pedidoexporLogic.getPedidoExpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidoexpors==null|| pedidoexpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporsAux=new ArrayList<PedidoExpor>();
						pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux=new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoexporLogic.getPedidoExporsFK_IdTransportista(finalQueryGlobal,pagination,id_transportistaFK_IdTransportista);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdTransportista(id_transportistaFK_IdTransportista);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdTransportista(id_transportistaFK_IdTransportista);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoExpors("FK_IdTransportista",pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoExpors("FK_IdTransportista",pedidoexpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
						pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUsuario")) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoexporLogic.getPedidoExporsFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoexporLogic.getPedidoExpors()==null||pedidoexporLogic.getPedidoExpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidoexpors==null|| pedidoexpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporsAux=new ArrayList<PedidoExpor>();
						pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux=new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoexporLogic.getPedidoExporsFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoExpors("FK_IdUsuario",pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoExpors("FK_IdUsuario",pedidoexpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
						pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdVendedor")) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					pedidoexporLogic.getPedidoExporsFK_IdVendedor(finalQueryGlobal,pagination,id_vendedorFK_IdVendedor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=pedidoexporLogic.getPedidoExpors()==null||pedidoexporLogic.getPedidoExpors().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=pedidoexpors==null|| pedidoexpors.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporsAux=new ArrayList<PedidoExpor>();
						pedidoexporsAux.addAll(pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporsAux=new ArrayList<PedidoExpor>();
							pedidoexporsAux.addAll(pedidoexpors);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							pedidoexporLogic.getPedidoExporsFK_IdVendedor(finalQueryGlobal,pagination,id_vendedorFK_IdVendedor);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=PedidoExporConstantesFunciones.getDetalleIndiceFK_IdVendedor(id_vendedorFK_IdVendedor);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReportePedidoExpors("FK_IdVendedor",pedidoexporLogic.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReportePedidoExpors("FK_IdVendedor",pedidoexpors);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporLogic.setPedidoExpors(new ArrayList<PedidoExpor>());
						pedidoexporLogic.getPedidoExpors().addAll(pedidoexporsAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexpors=new ArrayList<PedidoExpor>();
							pedidoexpors.addAll(pedidoexporsAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesPedidoExpor();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessPedidoExpor();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=pedidoexporLogic.getPedidoExpors().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=pedidoexpors.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=pedidoexporLogic.getPedidoExpors().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=pedidoexpors.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(PedidoExpor pedidoexpor) {
		Boolean permite=true;
		
		if(this.pedidoexpor.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=PedidoExporConstantesFunciones.getOrderByListaPedidoExpor();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=PedidoExporConstantesFunciones.getOrderByListaPedidoExpor();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PedidoExpor pedidoexpor:pedidoexporLogic.getPedidoExpors()) {
				if(pedidoexpor.getsType().equals(Constantes2.S_TOTALES)) {
					pedidoexporTotales=pedidoexpor;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PedidoExpor pedidoexpor:this.pedidoexpors) {
				if(pedidoexpor.getsType().equals(Constantes2.S_TOTALES)) {
					pedidoexporTotales=pedidoexpor;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.pedidoexporAux=new PedidoExpor();
			this.pedidoexporAux.setsType(Constantes2.S_TOTALES);
			this.pedidoexporAux.setIsNew(false);
			this.pedidoexporAux.setIsChanged(false);
			this.pedidoexporAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				PedidoExporConstantesFunciones.TotalizarValoresFilaPedidoExpor(this.pedidoexporLogic.getPedidoExpors(),this.pedidoexporAux);
				
				this.pedidoexporLogic.getPedidoExpors().add(this.pedidoexporAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				PedidoExporConstantesFunciones.TotalizarValoresFilaPedidoExpor(this.pedidoexpors,this.pedidoexporAux);
				
				this.pedidoexpors.add(this.pedidoexporAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		pedidoexporTotales=new PedidoExpor();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.pedidoexporLogic.getPedidoExpors().remove(pedidoexporTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.pedidoexpors.remove(pedidoexporTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		pedidoexporTotales=new PedidoExpor();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(PedidoExpor pedidoexpor:pedidoexporLogic.getPedidoExpors()) {
				if(pedidoexpor.getsType().equals(Constantes2.S_TOTALES)) {
					pedidoexporTotales=pedidoexpor;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				PedidoExporConstantesFunciones.TotalizarValoresFilaPedidoExpor(this.pedidoexporLogic.getPedidoExpors(),pedidoexporTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(PedidoExpor pedidoexpor:this.pedidoexpors) {
				if(pedidoexpor.getsType().equals(Constantes2.S_TOTALES)) {
					pedidoexporTotales=pedidoexpor;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				PedidoExporConstantesFunciones.TotalizarValoresFilaPedidoExpor(this.pedidoexpors,pedidoexporTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getPedidoExporsFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdCentroCosto()throws Exception {
		try {
			sAccionBusqueda="FK_IdCentroCosto";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdConsignatario()throws Exception {
		try {
			sAccionBusqueda="FK_IdConsignatario";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdConsultor()throws Exception {
		try {
			sAccionBusqueda="FK_IdConsultor";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdEmpleado()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpleado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdEstadoPedidoExpor()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoPedidoExpor";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdFormato()throws Exception {
		try {
			sAccionBusqueda="FK_IdFormato";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdMoneda()throws Exception {
		try {
			sAccionBusqueda="FK_IdMoneda";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdPais()throws Exception {
		try {
			sAccionBusqueda="FK_IdPais";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdResponsable()throws Exception {
		try {
			sAccionBusqueda="FK_IdResponsable";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdSubCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdSubCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdTipoCambio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoCambio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdTipoPrecio()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoPrecio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdTransporte()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransporte";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdTransportista()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransportista";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdUsuario()throws Exception {
		try {
			sAccionBusqueda="FK_IdUsuario";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getPedidoExporsFK_IdVendedor()throws Exception {
		try {
			sAccionBusqueda="FK_IdVendedor";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getPedidoExporsFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdCentroCosto(String sFinalQuery,Long id_centro_costo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdCentroCosto(sFinalQuery,this.pagination,id_centro_costo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdCliente(String sFinalQuery,Long id_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdCliente(sFinalQuery,this.pagination,id_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdConsignatario(String sFinalQuery,Long id_consignatario)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdConsignatario(sFinalQuery,this.pagination,id_consignatario);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdConsultor(String sFinalQuery,Long id_consultor)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdConsultor(sFinalQuery,this.pagination,id_consultor);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdEmpleado(String sFinalQuery,Long id_empleado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdEmpleado(sFinalQuery,this.pagination,id_empleado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdEstadoPedidoExpor(String sFinalQuery,Long id_estado_pedido)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdEstadoPedidoExpor(sFinalQuery,this.pagination,id_estado_pedido);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdFormato(String sFinalQuery,Long id_formato)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdFormato(sFinalQuery,this.pagination,id_formato);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdMoneda(String sFinalQuery,Long id_moneda)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdMoneda(sFinalQuery,this.pagination,id_moneda);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdPais(String sFinalQuery,Long id_pais)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdPais(sFinalQuery,this.pagination,id_pais);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdResponsable(String sFinalQuery,Long id_responsable)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdResponsable(sFinalQuery,this.pagination,id_responsable);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdSubCliente(String sFinalQuery,Long id_sub_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdSubCliente(sFinalQuery,this.pagination,id_sub_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdTipoCambio(String sFinalQuery,Long id_tipo_cambio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdTipoCambio(sFinalQuery,this.pagination,id_tipo_cambio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdTipoPrecio(String sFinalQuery,Long id_tipo_precio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdTipoPrecio(sFinalQuery,this.pagination,id_tipo_precio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdTransporte(String sFinalQuery,Long id_transporte)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdTransporte(sFinalQuery,this.pagination,id_transporte);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdTransportista(String sFinalQuery,Long id_transportista)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdTransportista(sFinalQuery,this.pagination,id_transportista);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdUsuario(String sFinalQuery,Long id_usuario)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdUsuario(sFinalQuery,this.pagination,id_usuario);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getPedidoExporsFK_IdVendedor(String sFinalQuery,Long id_vendedor)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLogic.getPedidoExporsFK_IdVendedor(sFinalQuery,this.pagination,id_vendedor);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosPedidoExpor() {
		this.isPermisoTodoPedidoExpor=false;
		this.isPermisoNuevoPedidoExpor=false;
		this.isPermisoActualizarPedidoExpor=false;
		this.isPermisoActualizarOriginalPedidoExpor=false;
		this.isPermisoEliminarPedidoExpor=false;
		this.isPermisoGuardarCambiosPedidoExpor=false;
		this.isPermisoConsultaPedidoExpor=false;
		this.isPermisoBusquedaPedidoExpor=false;
		this.isPermisoReportePedidoExpor=false;		
		this.isPermisoOrdenPedidoExpor=false;		
		this.isPermisoPaginacionMedioPedidoExpor=false;		
		this.isPermisoPaginacionAltoPedidoExpor=false;
		this.isPermisoPaginacionTodoPedidoExpor=false;
		this.isPermisoCopiarPedidoExpor=false;		
		this.isPermisoVerFormPedidoExpor=false;		
		this.isPermisoDuplicarPedidoExpor=false;		
		this.isPermisoOrdenPedidoExpor=false;		
	}
	
	public void setPermisosUsuarioPedidoExpor(Boolean isPermiso) {
		this.isPermisoTodoPedidoExpor=isPermiso;
		this.isPermisoNuevoPedidoExpor=isPermiso;
		this.isPermisoActualizarPedidoExpor=isPermiso;
		this.isPermisoActualizarOriginalPedidoExpor=isPermiso;
		this.isPermisoEliminarPedidoExpor=isPermiso;
		this.isPermisoGuardarCambiosPedidoExpor=isPermiso;
		this.isPermisoConsultaPedidoExpor=isPermiso;
		this.isPermisoBusquedaPedidoExpor=isPermiso;
		this.isPermisoReportePedidoExpor=isPermiso;
		this.isPermisoOrdenPedidoExpor=isPermiso;		
		this.isPermisoPaginacionMedioPedidoExpor=isPermiso;		
		this.isPermisoPaginacionAltoPedidoExpor=isPermiso;		
		this.isPermisoPaginacionTodoPedidoExpor=isPermiso;		
		this.isPermisoCopiarPedidoExpor=isPermiso;		
		this.isPermisoVerFormPedidoExpor=isPermiso;		
		this.isPermisoDuplicarPedidoExpor=isPermiso;
		this.isPermisoOrdenPedidoExpor=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioPedidoExpor(Boolean isPermiso) {
		//this.isPermisoTodoPedidoExpor=isPermiso;
		this.isPermisoNuevoPedidoExpor=isPermiso;
		this.isPermisoActualizarPedidoExpor=isPermiso;
		this.isPermisoActualizarOriginalPedidoExpor=isPermiso;
		this.isPermisoEliminarPedidoExpor=isPermiso;
		this.isPermisoGuardarCambiosPedidoExpor=isPermiso;
		//this.isPermisoConsultaPedidoExpor=isPermiso;
		//this.isPermisoBusquedaPedidoExpor=isPermiso;
		//this.isPermisoReportePedidoExpor=isPermiso;
		//this.isPermisoOrdenPedidoExpor=isPermiso;		
		//this.isPermisoPaginacionMedioPedidoExpor=isPermiso;		
		//this.isPermisoPaginacionAltoPedidoExpor=isPermiso;		
		//this.isPermisoPaginacionTodoPedidoExpor=isPermiso;		
		//this.isPermisoCopiarPedidoExpor=isPermiso;		
		//this.isPermisoDuplicarPedidoExpor=isPermiso;
		//this.isPermisoOrdenPedidoExpor=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioPedidoExporClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(DetallePedidoExporConstantesFunciones.SNOMBREOPCION);
		
		if(PedidoExporJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosDetallePedidoExpor=false;
		this.isTienePermisosDetallePedidoExpor=this.verificarGetPermisosUsuarioOpcionPedidoExporClaseRelacionada(this.opcionsRelacionadas,DetallePedidoExporConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebPedidoExpor(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioPedidoExporClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosDetallePedidoExpor=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioPedidoExporClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionPedidoExporClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioPedidoExporClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosDetallePedidoExpor && this.jInternalFrameDetalleFormPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormPedidoExpor.jTabbedPaneRelacionesPedidoExpor.remove(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioPedidoExpor() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(PedidoExporJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, PedidoExporConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoPedidoExpor=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarPedidoExpor=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalPedidoExpor=this.isPermisoActualizarPedidoExpor;
			this.isPermisoEliminarPedidoExpor=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosPedidoExpor=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaPedidoExpor=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaPedidoExpor=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoPedidoExpor=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReportePedidoExpor=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenPedidoExpor=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioPedidoExpor=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoPedidoExpor=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoPedidoExpor=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarPedidoExpor=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormPedidoExpor=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarPedidoExpor=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenPedidoExpor=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosPedidoExpor.setToolTipText(this.jTableDatosPedidoExpor.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioPedidoExpor(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioPedidoExpor(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(PedidoExporJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(PedidoExporJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioPedidoExpor() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosDetallePedidoExpor && this.pedidoexporConstantesFunciones.mostrarDetallePedidoExporPedidoExpor && !PedidoExporConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Detalle Pedido Exportacion");
			reporte.setsDescripcion("Detalle Pedido Exportacion");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyPedidoExporListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
				this.usuariosForeignKey=new ArrayList();
				this.monedasForeignKey=new ArrayList();
				this.empleadosForeignKey=new ArrayList();
				this.tipopreciosForeignKey=new ArrayList();
				this.formatosForeignKey=new ArrayList();
				this.clientesForeignKey=new ArrayList();
				this.paissForeignKey=new ArrayList();
				this.transportesForeignKey=new ArrayList();
				this.vendedorsForeignKey=new ArrayList();
				this.subclientesForeignKey=new ArrayList();
				this.consignatariosForeignKey=new ArrayList();
				this.consultorsForeignKey=new ArrayList();
				this.estadopedidoexporsForeignKey=new ArrayList();
				this.tipocambiosForeignKey=new ArrayList();
				this.centrocostosForeignKey=new ArrayList();
				this.responsablesForeignKey=new ArrayList();
				this.transportistasForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyPedidoExporListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(PedidoExporJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyPedidoExporListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUsuarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMonedaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoPrecioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPaisListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransporteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyVendedorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySubClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyConsignatarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyConsultorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoPedidoExporListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyResponsableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransportistaListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUsuarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UsuarioConstantesFunciones.SFINALQUERY;

				this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMonedaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MonedaConstantesFunciones.SFINALQUERY;

				this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleadoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpleadoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoPrecioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipopreciosForeignKey==null||this.tipopreciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoPrecioConstantesFunciones.getArrayColumnasGlobalesTipoPrecio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoPrecioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoPrecioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoPreciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormatoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=FormatoConstantesFunciones.SFINALQUERY;

				this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPaisListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.paissForeignKey==null||this.paissForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PaisConstantesFunciones.SFINALQUERY;

				this.cargarCombosPaissForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransporteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transportesForeignKey==null||this.transportesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransporteConstantesFunciones.getArrayColumnasGlobalesTransporte(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransporteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransporteConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransportesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyVendedorListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.vendedorsForeignKey==null||this.vendedorsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=VendedorConstantesFunciones.getArrayColumnasGlobalesVendedor(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,VendedorConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=VendedorConstantesFunciones.SFINALQUERY;

				this.cargarCombosVendedorsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySubClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.subclientesForeignKey==null||this.subclientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SubClienteConstantesFunciones.getArrayColumnasGlobalesSubCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SubClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SubClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosSubClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyConsignatarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.consignatariosForeignKey==null||this.consignatariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ConsignatarioConstantesFunciones.getArrayColumnasGlobalesConsignatario(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ConsignatarioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ConsignatarioConstantesFunciones.SFINALQUERY;

				this.cargarCombosConsignatariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyConsultorListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.consultorsForeignKey==null||this.consultorsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ConsultorConstantesFunciones.getArrayColumnasGlobalesConsultor(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ConsultorConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ConsultorConstantesFunciones.SFINALQUERY;

				this.cargarCombosConsultorsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedidoExporListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadopedidoexporsForeignKey==null||this.estadopedidoexporsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoPedidoConstantesFunciones.getArrayColumnasGlobalesEstadoPedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoPedidoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoPedidoExporsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoCambioConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCostoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CentroCostoConstantesFunciones.SFINALQUERY;

				this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyResponsableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.responsablesForeignKey==null||this.responsablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ResponsableConstantesFunciones.getArrayColumnasGlobalesResponsable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ResponsableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ResponsableConstantesFunciones.SFINALQUERY;

				this.cargarCombosResponsablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransportistaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transportistasForeignKey==null||this.transportistasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransportistaConstantesFunciones.getArrayColumnasGlobalesTransportista(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransportistaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransportistaConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransportistasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyPedidoExporListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			PedidoExporParameterReturnGeneral pedidoexporReturnGeneral=new PedidoExporParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_empresaPedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_empresaPedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_sucursalPedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_sucursalPedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_ejercicioPedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_ejercicioPedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_periodoPedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_periodoPedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_anioPedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_anioPedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_mesPedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_mesPedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}


				String finalQueryGlobalUsuario="";

				if(((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_usuarioPedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_usuarioPedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUsuario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

						finalQueryGlobalUsuario=Funciones.GetFinalQueryAppend(finalQueryGlobalUsuario, "");
						finalQueryGlobalUsuario+=UsuarioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUsuario=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidUsuarioActual();
					}
				} else {
					finalQueryGlobalUsuario="NONE";
				}


				String finalQueryGlobalMoneda="";

				if(((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_monedaPedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_monedaPedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMoneda=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

						finalQueryGlobalMoneda=Funciones.GetFinalQueryAppend(finalQueryGlobalMoneda, "");
						finalQueryGlobalMoneda+=MonedaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMoneda=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidMonedaActual();
					}
				} else {
					finalQueryGlobalMoneda="NONE";
				}


				String finalQueryGlobalEmpleado="";

				if(((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_empleadoPedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_empleadoPedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpleado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpleado=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpleado, "");
						finalQueryGlobalEmpleado+=EmpleadoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpleado=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidEmpleadoActual();
					}
				} else {
					finalQueryGlobalEmpleado="NONE";
				}


				String finalQueryGlobalTipoPrecio="";

				if(((this.tipopreciosForeignKey==null||this.tipopreciosForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_tipo_precioPedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_tipo_precioPedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionTipoPrecio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoPrecioConstantesFunciones.getArrayColumnasGlobalesTipoPrecio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoPrecio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoPrecioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoPrecio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoPrecio, "");
						finalQueryGlobalTipoPrecio+=TipoPrecioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoPreciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoPrecio=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidTipoPrecioActual();
					}
				} else {
					finalQueryGlobalTipoPrecio="NONE";
				}


				String finalQueryGlobalFormato="";

				if(((this.formatosForeignKey==null||this.formatosForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_formatoPedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_formatoPedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=FormatoConstantesFunciones.getArrayColumnasGlobalesFormato(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalFormato=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,FormatoConstantesFunciones.TABLENAME);

						finalQueryGlobalFormato=Funciones.GetFinalQueryAppend(finalQueryGlobalFormato, "");
						finalQueryGlobalFormato+=FormatoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosFormatosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalFormato=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidFormatoActual();
					}
				} else {
					finalQueryGlobalFormato="NONE";
				}


				String finalQueryGlobalCliente="";

				if(((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_clientePedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_clientePedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalCliente, "");
						finalQueryGlobalCliente+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCliente=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidClienteActual();
					}
				} else {
					finalQueryGlobalCliente="NONE";
				}


				String finalQueryGlobalPais="";

				if(((this.paissForeignKey==null||this.paissForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_paisPedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_paisPedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PaisConstantesFunciones.getArrayColumnasGlobalesPais(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPais=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PaisConstantesFunciones.TABLENAME);

						finalQueryGlobalPais=Funciones.GetFinalQueryAppend(finalQueryGlobalPais, "");
						finalQueryGlobalPais+=PaisConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPaissForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPais=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidPaisActual();
					}
				} else {
					finalQueryGlobalPais="NONE";
				}


				String finalQueryGlobalTransporte="";

				if(((this.transportesForeignKey==null||this.transportesForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_transportePedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_transportePedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionTransporte()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransporteConstantesFunciones.getArrayColumnasGlobalesTransporte(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransporte=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransporteConstantesFunciones.TABLENAME);

						finalQueryGlobalTransporte=Funciones.GetFinalQueryAppend(finalQueryGlobalTransporte, "");
						finalQueryGlobalTransporte+=TransporteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransportesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransporte=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidTransporteActual();
					}
				} else {
					finalQueryGlobalTransporte="NONE";
				}


				String finalQueryGlobalVendedor="";

				if(((this.vendedorsForeignKey==null||this.vendedorsForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_vendedorPedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_vendedorPedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=VendedorConstantesFunciones.getArrayColumnasGlobalesVendedor(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalVendedor=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,VendedorConstantesFunciones.TABLENAME);

						finalQueryGlobalVendedor=Funciones.GetFinalQueryAppend(finalQueryGlobalVendedor, "");
						finalQueryGlobalVendedor+=VendedorConstantesFunciones.SFINALQUERY;

						//this.cargarCombosVendedorsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalVendedor=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidVendedorActual();
					}
				} else {
					finalQueryGlobalVendedor="NONE";
				}


				String finalQueryGlobalSubCliente="";

				if(((this.subclientesForeignKey==null||this.subclientesForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_sub_clientePedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_sub_clientePedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionSubCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SubClienteConstantesFunciones.getArrayColumnasGlobalesSubCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSubCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SubClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalSubCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalSubCliente, "");
						finalQueryGlobalSubCliente+=SubClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSubClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSubCliente=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidSubClienteActual();
					}
				} else {
					finalQueryGlobalSubCliente="NONE";
				}


				String finalQueryGlobalConsignatario="";

				if(((this.consignatariosForeignKey==null||this.consignatariosForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_consignatarioPedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_consignatarioPedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionConsignatario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ConsignatarioConstantesFunciones.getArrayColumnasGlobalesConsignatario(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalConsignatario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ConsignatarioConstantesFunciones.TABLENAME);

						finalQueryGlobalConsignatario=Funciones.GetFinalQueryAppend(finalQueryGlobalConsignatario, "");
						finalQueryGlobalConsignatario+=ConsignatarioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosConsignatariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalConsignatario=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidConsignatarioActual();
					}
				} else {
					finalQueryGlobalConsignatario="NONE";
				}


				String finalQueryGlobalConsultor="";

				if(((this.consultorsForeignKey==null||this.consultorsForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_consultorPedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_consultorPedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionConsultor()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ConsultorConstantesFunciones.getArrayColumnasGlobalesConsultor(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalConsultor=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ConsultorConstantesFunciones.TABLENAME);

						finalQueryGlobalConsultor=Funciones.GetFinalQueryAppend(finalQueryGlobalConsultor, "");
						finalQueryGlobalConsultor+=ConsultorConstantesFunciones.SFINALQUERY;

						//this.cargarCombosConsultorsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalConsultor=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidConsultorActual();
					}
				} else {
					finalQueryGlobalConsultor="NONE";
				}


				String finalQueryGlobalEstadoPedidoExpor="";

				if(((this.estadopedidoexporsForeignKey==null||this.estadopedidoexporsForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_estado_pedidoPedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_estado_pedidoPedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoExpor()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoPedidoConstantesFunciones.getArrayColumnasGlobalesEstadoPedido(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoPedidoExpor=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoPedidoConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoPedidoExpor=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoPedidoExpor, "");
						finalQueryGlobalEstadoPedidoExpor+=EstadoPedidoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoPedidoExporsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoPedidoExpor=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidEstadoPedidoExporActual();
					}
				} else {
					finalQueryGlobalEstadoPedidoExpor="NONE";
				}


				String finalQueryGlobalTipoCambio="";

				if(((this.tipocambiosForeignKey==null||this.tipocambiosForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_tipo_cambioPedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_tipo_cambioPedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoCambioConstantesFunciones.getArrayColumnasGlobalesTipoCambio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoCambio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoCambioConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoCambio=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoCambio, "");
						finalQueryGlobalTipoCambio+=TipoCambioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoCambiosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoCambio=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidTipoCambioActual();
					}
				} else {
					finalQueryGlobalTipoCambio="NONE";
				}


				String finalQueryGlobalCentroCosto="";

				if(((this.centrocostosForeignKey==null||this.centrocostosForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_centro_costoPedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_centro_costoPedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=CentroCostoConstantesFunciones.getArrayColumnasGlobalesCentroCosto(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCentroCosto=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CentroCostoConstantesFunciones.TABLENAME);

						finalQueryGlobalCentroCosto=Funciones.GetFinalQueryAppend(finalQueryGlobalCentroCosto, "");
						finalQueryGlobalCentroCosto+=CentroCostoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCentroCostosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCentroCosto=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidCentroCostoActual();
					}
				} else {
					finalQueryGlobalCentroCosto="NONE";
				}


				String finalQueryGlobalResponsable="";

				if(((this.responsablesForeignKey==null||this.responsablesForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_responsablePedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_responsablePedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionResponsable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ResponsableConstantesFunciones.getArrayColumnasGlobalesResponsable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalResponsable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ResponsableConstantesFunciones.TABLENAME);

						finalQueryGlobalResponsable=Funciones.GetFinalQueryAppend(finalQueryGlobalResponsable, "");
						finalQueryGlobalResponsable+=ResponsableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosResponsablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalResponsable=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidResponsableActual();
					}
				} else {
					finalQueryGlobalResponsable="NONE";
				}


				String finalQueryGlobalTransportista="";

				if(((this.transportistasForeignKey==null||this.transportistasForeignKey.size()<=0) && this.pedidoexporConstantesFunciones.cargarid_transportistaPedidoExpor)
					 || (this.esRecargarFks && this.pedidoexporConstantesFunciones.cargarid_transportistaPedidoExpor)) {

					if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionTransportista()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransportistaConstantesFunciones.getArrayColumnasGlobalesTransportista(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTransportista=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TransportistaConstantesFunciones.TABLENAME);

						finalQueryGlobalTransportista=Funciones.GetFinalQueryAppend(finalQueryGlobalTransportista, "");
						finalQueryGlobalTransportista+=TransportistaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransportistasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransportista=" WHERE " + ConstantesSql.ID + "="+pedidoexporSessionBean.getlidTransportistaActual();
					}
				} else {
					finalQueryGlobalTransportista="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				pedidoexporReturnGeneral=pedidoexporLogic.cargarCombosLoteForeignKeyPedidoExpor(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalAnio,finalQueryGlobalMes,finalQueryGlobalUsuario,finalQueryGlobalMoneda,finalQueryGlobalEmpleado,finalQueryGlobalTipoPrecio,finalQueryGlobalFormato,finalQueryGlobalCliente,finalQueryGlobalPais,finalQueryGlobalTransporte,finalQueryGlobalVendedor,finalQueryGlobalSubCliente,finalQueryGlobalConsignatario,finalQueryGlobalConsultor,finalQueryGlobalEstadoPedidoExpor,finalQueryGlobalTipoCambio,finalQueryGlobalCentroCosto,finalQueryGlobalResponsable,finalQueryGlobalTransportista);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=pedidoexporReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=pedidoexporReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=pedidoexporReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=pedidoexporReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=pedidoexporReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=pedidoexporReturnGeneral.getmessForeignKey();
			}

			if(!finalQueryGlobalUsuario.equals("NONE")) {
				this.usuariosForeignKey=pedidoexporReturnGeneral.getusuariosForeignKey();
			}

			if(!finalQueryGlobalMoneda.equals("NONE")) {
				this.monedasForeignKey=pedidoexporReturnGeneral.getmonedasForeignKey();
			}

			if(!finalQueryGlobalEmpleado.equals("NONE")) {
				this.empleadosForeignKey=pedidoexporReturnGeneral.getempleadosForeignKey();
			}

			if(!finalQueryGlobalTipoPrecio.equals("NONE")) {
				this.tipopreciosForeignKey=pedidoexporReturnGeneral.gettipopreciosForeignKey();
			}

			if(!finalQueryGlobalFormato.equals("NONE")) {
				this.formatosForeignKey=pedidoexporReturnGeneral.getformatosForeignKey();
			}

			if(!finalQueryGlobalCliente.equals("NONE")) {
				this.clientesForeignKey=pedidoexporReturnGeneral.getclientesForeignKey();
			}

			if(!finalQueryGlobalPais.equals("NONE")) {
				this.paissForeignKey=pedidoexporReturnGeneral.getpaissForeignKey();
			}

			if(!finalQueryGlobalTransporte.equals("NONE")) {
				this.transportesForeignKey=pedidoexporReturnGeneral.gettransportesForeignKey();
			}

			if(!finalQueryGlobalVendedor.equals("NONE")) {
				this.vendedorsForeignKey=pedidoexporReturnGeneral.getvendedorsForeignKey();
			}

			if(!finalQueryGlobalSubCliente.equals("NONE")) {
				this.subclientesForeignKey=pedidoexporReturnGeneral.getsubclientesForeignKey();
			}

			if(!finalQueryGlobalConsignatario.equals("NONE")) {
				this.consignatariosForeignKey=pedidoexporReturnGeneral.getconsignatariosForeignKey();
			}

			if(!finalQueryGlobalConsultor.equals("NONE")) {
				this.consultorsForeignKey=pedidoexporReturnGeneral.getconsultorsForeignKey();
			}

			if(!finalQueryGlobalEstadoPedidoExpor.equals("NONE")) {
				this.estadopedidoexporsForeignKey=pedidoexporReturnGeneral.getestadopedidoexporsForeignKey();
			}

			if(!finalQueryGlobalTipoCambio.equals("NONE")) {
				this.tipocambiosForeignKey=pedidoexporReturnGeneral.gettipocambiosForeignKey();
			}

			if(!finalQueryGlobalCentroCosto.equals("NONE")) {
				this.centrocostosForeignKey=pedidoexporReturnGeneral.getcentrocostosForeignKey();
			}

			if(!finalQueryGlobalResponsable.equals("NONE")) {
				this.responsablesForeignKey=pedidoexporReturnGeneral.getresponsablesForeignKey();
			}

			if(!finalQueryGlobalTransportista.equals("NONE")) {
				this.transportistasForeignKey=pedidoexporReturnGeneral.gettransportistasForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyPedidoExpor()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
			this.addItemDefectoCombosForeignKeyUsuario();
			this.addItemDefectoCombosForeignKeyMoneda();
			this.addItemDefectoCombosForeignKeyEmpleado();
			this.addItemDefectoCombosForeignKeyTipoPrecio();
			this.addItemDefectoCombosForeignKeyFormato();
			this.addItemDefectoCombosForeignKeyCliente();
			this.addItemDefectoCombosForeignKeyPais();
			this.addItemDefectoCombosForeignKeyTransporte();
			this.addItemDefectoCombosForeignKeyVendedor();
			this.addItemDefectoCombosForeignKeySubCliente();
			this.addItemDefectoCombosForeignKeyConsignatario();
			this.addItemDefectoCombosForeignKeyConsultor();
			this.addItemDefectoCombosForeignKeyEstadoPedidoExpor();
			this.addItemDefectoCombosForeignKeyTipoCambio();
			this.addItemDefectoCombosForeignKeyCentroCosto();
			this.addItemDefectoCombosForeignKeyResponsable();
			this.addItemDefectoCombosForeignKeyTransportista();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUsuario()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				Usuario usuario=new Usuario();
				UsuarioConstantesFunciones.setUsuarioDescripcion(usuario,Constantes.SMENSAJE_ESCOJA_OPCION);
				usuario.setId(null);

				if(!UsuarioConstantesFunciones.ExisteEnLista(this.usuariosForeignKey,usuario,true)) {

					this.usuariosForeignKey.add(0,usuario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMoneda()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				Moneda moneda=new Moneda();
				MonedaConstantesFunciones.setMonedaDescripcion(moneda,Constantes.SMENSAJE_ESCOJA_OPCION);
				moneda.setId(null);

				if(!MonedaConstantesFunciones.ExisteEnLista(this.monedasForeignKey,moneda,true)) {

					this.monedasForeignKey.add(0,moneda);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpleado()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				Empleado empleado=new Empleado();
				EmpleadoConstantesFunciones.setEmpleadoDescripcion(empleado,Constantes.SMENSAJE_ESCOJA_OPCION);
				empleado.setId(null);

				if(!EmpleadoConstantesFunciones.ExisteEnLista(this.empleadosForeignKey,empleado,true)) {

					this.empleadosForeignKey.add(0,empleado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoPrecio()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionTipoPrecio()) {
				TipoPrecio tipoprecio=new TipoPrecio();
				TipoPrecioConstantesFunciones.setTipoPrecioDescripcion(tipoprecio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipoprecio.setId(null);

				if(!TipoPrecioConstantesFunciones.ExisteEnLista(this.tipopreciosForeignKey,tipoprecio,true)) {

					this.tipopreciosForeignKey.add(0,tipoprecio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyFormato()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionFormato()) {
				Formato formato=new Formato();
				FormatoConstantesFunciones.setFormatoDescripcion(formato,Constantes.SMENSAJE_ESCOJA_OPCION);
				formato.setId(null);

				if(!FormatoConstantesFunciones.ExisteEnLista(this.formatosForeignKey,formato,true)) {

					this.formatosForeignKey.add(0,formato);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCliente()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				Cliente cliente=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(cliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				cliente.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientesForeignKey,cliente,true)) {

					this.clientesForeignKey.add(0,cliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPais()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionPais()) {
				Pais pais=new Pais();
				PaisConstantesFunciones.setPaisDescripcion(pais,Constantes.SMENSAJE_ESCOJA_OPCION);
				pais.setId(null);

				if(!PaisConstantesFunciones.ExisteEnLista(this.paissForeignKey,pais,true)) {

					this.paissForeignKey.add(0,pais);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransporte()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionTransporte()) {
				Transporte transporte=new Transporte();
				TransporteConstantesFunciones.setTransporteDescripcion(transporte,Constantes.SMENSAJE_ESCOJA_OPCION);
				transporte.setId(null);

				if(!TransporteConstantesFunciones.ExisteEnLista(this.transportesForeignKey,transporte,true)) {

					this.transportesForeignKey.add(0,transporte);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyVendedor()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionVendedor()) {
				Vendedor vendedor=new Vendedor();
				VendedorConstantesFunciones.setVendedorDescripcion(vendedor,Constantes.SMENSAJE_ESCOJA_OPCION);
				vendedor.setId(null);

				if(!VendedorConstantesFunciones.ExisteEnLista(this.vendedorsForeignKey,vendedor,true)) {

					this.vendedorsForeignKey.add(0,vendedor);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySubCliente()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionSubCliente()) {
				SubCliente subcliente=new SubCliente();
				SubClienteConstantesFunciones.setSubClienteDescripcion(subcliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				subcliente.setId(null);

				if(!SubClienteConstantesFunciones.ExisteEnLista(this.subclientesForeignKey,subcliente,true)) {

					this.subclientesForeignKey.add(0,subcliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyConsignatario()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionConsignatario()) {
				Consignatario consignatario=new Consignatario();
				ConsignatarioConstantesFunciones.setConsignatarioDescripcion(consignatario,Constantes.SMENSAJE_ESCOJA_OPCION);
				consignatario.setId(null);

				if(!ConsignatarioConstantesFunciones.ExisteEnLista(this.consignatariosForeignKey,consignatario,true)) {

					this.consignatariosForeignKey.add(0,consignatario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyConsultor()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionConsultor()) {
				Consultor consultor=new Consultor();
				ConsultorConstantesFunciones.setConsultorDescripcion(consultor,Constantes.SMENSAJE_ESCOJA_OPCION);
				consultor.setId(null);

				if(!ConsultorConstantesFunciones.ExisteEnLista(this.consultorsForeignKey,consultor,true)) {

					this.consultorsForeignKey.add(0,consultor);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoPedidoExpor()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionEstadoPedidoExpor()) {
				EstadoPedido estadopedidoexpor=new EstadoPedido();
				EstadoPedidoConstantesFunciones.setEstadoPedidoDescripcion(estadopedidoexpor,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadopedidoexpor.setId(null);

				if(!EstadoPedidoConstantesFunciones.ExisteEnLista(this.estadopedidoexporsForeignKey,estadopedidoexpor,true)) {

					this.estadopedidoexporsForeignKey.add(0,estadopedidoexpor);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoCambio()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionTipoCambio()) {
				TipoCambio tipocambio=new TipoCambio();
				TipoCambioConstantesFunciones.setTipoCambioDescripcion(tipocambio,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipocambio.setId(null);

				if(!TipoCambioConstantesFunciones.ExisteEnLista(this.tipocambiosForeignKey,tipocambio,true)) {

					this.tipocambiosForeignKey.add(0,tipocambio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCentroCosto()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionCentroCosto()) {
				CentroCosto centrocosto=new CentroCosto();
				CentroCostoConstantesFunciones.setCentroCostoDescripcion(centrocosto,Constantes.SMENSAJE_ESCOJA_OPCION);
				centrocosto.setId(null);

				if(!CentroCostoConstantesFunciones.ExisteEnLista(this.centrocostosForeignKey,centrocosto,true)) {

					this.centrocostosForeignKey.add(0,centrocosto);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyResponsable()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionResponsable()) {
				Responsable responsable=new Responsable();
				ResponsableConstantesFunciones.setResponsableDescripcion(responsable,Constantes.SMENSAJE_ESCOJA_OPCION);
				responsable.setId(null);

				if(!ResponsableConstantesFunciones.ExisteEnLista(this.responsablesForeignKey,responsable,true)) {

					this.responsablesForeignKey.add(0,responsable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransportista()throws Exception {
		try {

			if(!this.pedidoexporSessionBean.getisBusquedaDesdeForeignKeySesionTransportista()) {
				Transportista transportista=new Transportista();
				TransportistaConstantesFunciones.setTransportistaDescripcion(transportista,Constantes.SMENSAJE_ESCOJA_OPCION);
				transportista.setId(null);

				if(!TransportistaConstantesFunciones.ExisteEnLista(this.transportistasForeignKey,transportista,true)) {

					this.transportistasForeignKey.add(0,transportista);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyPedidoExpor()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyPedidoExpor(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyPedidoExpor()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
				this.setActualUsuarioForeignKey(this.parametroGeneralUsuario.getid_usuario(),false,"Formulario");
				this.setActualMonedaForeignKey(this.parametroGeneralUsuario.getid_moneda(),false,"Formulario");
			
			
				this.pedidoexpor.setfecha_emision(this.parametroGeneralUsuario.getfecha_sistema());
				this.pedidoexpor.setfecha_vencimiento(this.parametroGeneralUsuario.getfecha_sistema());
				this.pedidoexpor.setfecha(this.parametroGeneralUsuario.getfecha_sistema());
				this.pedidoexpor.setfecha_servidor(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyPedidoExpor();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyPedidoExpor(PedidoExpor pedidoexpor)throws Exception {	
		try {
			
			this.setActualEmpleadoForeignKey(pedidoexpor.getid_empleado(),false,"Formulario");
			this.setActualTipoPrecioForeignKey(pedidoexpor.getid_tipo_precio(),false,"Formulario");
			this.setActualFormatoForeignKey(pedidoexpor.getid_formato(),false,"Formulario");
			this.setActualClienteForeignKey(pedidoexpor.getid_cliente(),false,"Formulario");
			this.setActualPaisForeignKey(pedidoexpor.getid_pais(),false,"Formulario");
			this.setActualTransporteForeignKey(pedidoexpor.getid_transporte(),false,"Formulario");
			this.setActualVendedorForeignKey(pedidoexpor.getid_vendedor(),false,"Formulario");
			this.setActualSubClienteForeignKey(pedidoexpor.getid_sub_cliente(),false,"Formulario");
			this.setActualConsignatarioForeignKey(pedidoexpor.getid_consignatario(),false,"Formulario");
			this.setActualConsultorForeignKey(pedidoexpor.getid_consultor(),false,"Formulario");
			this.setActualEstadoPedidoExporForeignKey(pedidoexpor.getid_estado_pedido(),false,"Formulario");
			this.setActualTipoCambioForeignKey(pedidoexpor.getid_tipo_cambio(),false,"Formulario");
			this.setActualCentroCostoForeignKey(pedidoexpor.getid_centro_costo(),false,"Formulario");
			this.setActualResponsableForeignKey(pedidoexpor.getid_responsable(),false,"Formulario");
			this.setActualTransportistaForeignKey(pedidoexpor.getid_transportista(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyPedidoExpor(PedidoExpor pedidoexpor,String sTipoEvento)throws Exception {	
		try {
			
			

				if(pedidoexpor.getEmpleado()!=null && !sTipoEvento.equals("id_empleadoPedidoExpor")) { //sTipoEvento Evita Bucle Infinito

					this.empleadosForeignKey=new ArrayList<Empleado>();
					this.empleadosForeignKey.add(pedidoexpor.getEmpleado());

					this.addItemDefectoCombosForeignKeyEmpleado();
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}

				if(pedidoexpor.getCliente()!=null && !sTipoEvento.equals("id_clientePedidoExpor")) { //sTipoEvento Evita Bucle Infinito

					this.clientesForeignKey=new ArrayList<Cliente>();
					this.clientesForeignKey.add(pedidoexpor.getCliente());

					this.addItemDefectoCombosForeignKeyCliente();
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				if(pedidoexpor.getVendedor()!=null && !sTipoEvento.equals("id_vendedorPedidoExpor")) { //sTipoEvento Evita Bucle Infinito

					this.vendedorsForeignKey=new ArrayList<Vendedor>();
					this.vendedorsForeignKey.add(pedidoexpor.getVendedor());

					this.addItemDefectoCombosForeignKeyVendedor();
					this.cargarCombosFrameVendedorsForeignKey("Todos");
				}

				if(pedidoexpor.getTipoCambio()!=null && !sTipoEvento.equals("id_tipo_cambioPedidoExpor")) { //sTipoEvento Evita Bucle Infinito

					this.tipocambiosForeignKey=new ArrayList<TipoCambio>();
					this.tipocambiosForeignKey.add(pedidoexpor.getTipoCambio());

					this.addItemDefectoCombosForeignKeyTipoCambio();
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}

				if(pedidoexpor.getCentroCosto()!=null && !sTipoEvento.equals("id_centro_costoPedidoExpor")) { //sTipoEvento Evita Bucle Infinito

					this.centrocostosForeignKey=new ArrayList<CentroCosto>();
					this.centrocostosForeignKey.add(pedidoexpor.getCentroCosto());

					this.addItemDefectoCombosForeignKeyCentroCosto();
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyPedidoExpor()throws Exception {	
		try {
			
			this.setActualEmpleadoForeignKey(this.pedidoexporConstantesFunciones.getid_empleado(),false,"Formulario");
			this.setActualTipoPrecioForeignKey(this.pedidoexporConstantesFunciones.getid_tipo_precio(),false,"Formulario");
			this.setActualFormatoForeignKey(this.pedidoexporConstantesFunciones.getid_formato(),false,"Formulario");
			this.setActualClienteForeignKey(this.pedidoexporConstantesFunciones.getid_cliente(),false,"Formulario");
			this.setActualPaisForeignKey(this.pedidoexporConstantesFunciones.getid_pais(),false,"Formulario");
			this.setActualTransporteForeignKey(this.pedidoexporConstantesFunciones.getid_transporte(),false,"Formulario");
			this.setActualVendedorForeignKey(this.pedidoexporConstantesFunciones.getid_vendedor(),false,"Formulario");
			this.setActualSubClienteForeignKey(this.pedidoexporConstantesFunciones.getid_sub_cliente(),false,"Formulario");
			this.setActualConsignatarioForeignKey(this.pedidoexporConstantesFunciones.getid_consignatario(),false,"Formulario");
			this.setActualConsultorForeignKey(this.pedidoexporConstantesFunciones.getid_consultor(),false,"Formulario");
			this.setActualEstadoPedidoExporForeignKey(this.pedidoexporConstantesFunciones.getid_estado_pedido(),false,"Formulario");
			this.setActualTipoCambioForeignKey(this.pedidoexporConstantesFunciones.getid_tipo_cambio(),false,"Formulario");
			this.setActualCentroCostoForeignKey(this.pedidoexporConstantesFunciones.getid_centro_costo(),false,"Formulario");
			this.setActualResponsableForeignKey(this.pedidoexporConstantesFunciones.getid_responsable(),false,"Formulario");
			this.setActualTransportistaForeignKey(this.pedidoexporConstantesFunciones.getid_transportista(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyPedidoExpor()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_ejercicioPedidoExpor.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_periodoPedidoExpor.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}

				this.setActualUsuarioForeignKey(this.usuarioActual.getId(),false,"Formulario");
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyPedidoExpor()throws Exception {	
		try {
			
				this.setActualEstadoPedidoExporForeignKey(1L,false,"Formulario");
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyPedidoExpor()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroPedidoExpor()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyPedidoExpor()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");
			this.cargarCombosFrameUsuariosForeignKey("Todos");
			this.cargarCombosFrameMonedasForeignKey("Todos");
			this.cargarCombosFrameEmpleadosForeignKey("Todos");
			this.cargarCombosFrameTipoPreciosForeignKey("Todos");
			this.cargarCombosFrameFormatosForeignKey("Todos");
			this.cargarCombosFrameClientesForeignKey("Todos");
			this.cargarCombosFramePaissForeignKey("Todos");
			this.cargarCombosFrameTransportesForeignKey("Todos");
			this.cargarCombosFrameVendedorsForeignKey("Todos");
			this.cargarCombosFrameSubClientesForeignKey("Todos");
			this.cargarCombosFrameConsignatariosForeignKey("Todos");
			this.cargarCombosFrameConsultorsForeignKey("Todos");
			this.cargarCombosFrameEstadoPedidoExporsForeignKey("Todos");
			this.cargarCombosFrameTipoCambiosForeignKey("Todos");
			this.cargarCombosFrameCentroCostosForeignKey("Todos");
			this.cargarCombosFrameResponsablesForeignKey("Todos");
			this.cargarCombosFrameTransportistasForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyPedidoExpor(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUsuariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMonedasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoPreciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePaissForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransportesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameVendedorsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSubClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameConsignatariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameConsultorsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoPedidoExporsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameResponsablesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransportistasForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyPedidoExpor()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empresaPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empresaPedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empresaPedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sucursalPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sucursalPedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sucursalPedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_ejercicioPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_ejercicioPedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_ejercicioPedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_periodoPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_periodoPedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_periodoPedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_anioPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_anioPedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_anioPedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_mesPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_mesPedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_mesPedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_usuarioPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_usuarioPedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_usuarioPedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_monedaPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_monedaPedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_monedaPedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empleadoPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empleadoPedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empleadoPedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_precioPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_precioPedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_precioPedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_formatoPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_formatoPedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_formatoPedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_clientePedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_clientePedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_clientePedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_paisPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_paisPedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_paisPedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportePedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportePedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportePedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_vendedorPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_vendedorPedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_vendedorPedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sub_clientePedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sub_clientePedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sub_clientePedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consignatarioPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consignatarioPedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consignatarioPedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consultorPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consultorPedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consultorPedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_estado_pedidoPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_estado_pedidoPedidoExpor.getItemCount()>0) {
				//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_estado_pedidoPedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_cambioPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_cambioPedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_cambioPedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_centro_costoPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_centro_costoPedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_centro_costoPedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_responsablePedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_responsablePedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_responsablePedidoExpor.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportistaPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportistaPedidoExpor.getItemCount()>0) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportistaPedidoExpor.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	














































	
	

	public PedidoExporBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public PedidoExporBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public PedidoExporBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.pedidoexporSessionBean=new PedidoExporSessionBean(); 
		this.pedidoexporConstantesFunciones=new PedidoExporConstantesFunciones(); 
		this.pedidoexporBean=new PedidoExpor();//(this.pedidoexporConstantesFunciones); 		
		this.pedidoexporReturnGeneral=new PedidoExporParameterReturnGeneral(); 
		
		this.pedidoexporSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.pedidoexporSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public PedidoExporBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public PedidoExporBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public PedidoExporBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessPedidoExpor(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			//OBLIGA VALIDA CON GUARDAR RELACIONES, TAMBIEN EN SWING
			conGuardarRelaciones=true;
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.pedidoexporConstantesFunciones=new PedidoExporConstantesFunciones(); 
			this.pedidoexporBean=new PedidoExpor();//this.pedidoexporConstantesFunciones); 			
			this.pedidoexporReturnGeneral=new PedidoExporParameterReturnGeneral(); 
		
			PedidoExporBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Pedido Exportacion Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.pedidoexpor=new PedidoExpor();
			this.pedidoexpors = new ArrayList<PedidoExpor>();
			this.pedidoexporsAux = new ArrayList<PedidoExpor>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic=new PedidoExporLogic();
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}
			
			//this.pedidoexporSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.pedidoexporSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormPedidoExpor);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoPedidoExpor!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoPedidoExpor);	
					}
					
					if(this.jInternalFrameImportacionPedidoExpor!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionPedidoExpor);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByPedidoExpor!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByPedidoExpor);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormPedidoExpor!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormPedidoExpor);
				this.jInternalFrameDetalleFormPedidoExpor.setVisible(false);
				this.jInternalFrameDetalleFormPedidoExpor.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoPedidoExpor!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoPedidoExpor);
					this.jInternalFrameReporteDinamicoPedidoExpor.setVisible(false);
					this.jInternalFrameReporteDinamicoPedidoExpor.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionPedidoExpor!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionPedidoExpor);
					this.jInternalFrameImportacionPedidoExpor.setVisible(false);
					this.jInternalFrameImportacionPedidoExpor.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByPedidoExpor!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByPedidoExpor);
					this.jInternalFrameOrderByPedidoExpor.setVisible(false);
					this.jInternalFrameOrderByPedidoExpor.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idPedidoExporActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=PedidoExporConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.pedidoexporReturnGeneral=new PedidoExporParameterReturnGeneral();
			
			this.pedidoexporParameterGeneral=new PedidoExporParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.pedidoexporLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(PedidoExporJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(DetallePedidoExporConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,PedidoExporConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.pedidoexporSessionBean.getEsGuardarRelacionado(),this.pedidoexporSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,PedidoExporConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.pedidoexporSessionBean.getEsGuardarRelacionado(),this.pedidoexporSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoPedidoExpor=false;
			this.isVisibilidadCeldaDuplicarPedidoExpor=true;
			this.isVisibilidadCeldaCopiarPedidoExpor=true;
			this.isVisibilidadCeldaVerFormPedidoExpor=true;
			this.isVisibilidadCeldaOrdenPedidoExpor=true;
			this.isVisibilidadCeldaNuevoRelacionesPedidoExpor=false;
			this.isVisibilidadCeldaModificarPedidoExpor=false;
			this.isVisibilidadCeldaActualizarPedidoExpor=false;
			this.isVisibilidadCeldaEliminarPedidoExpor=false;
			this.isVisibilidadCeldaCancelarPedidoExpor=false;
			this.isVisibilidadCeldaGuardarPedidoExpor=false;
			this.isVisibilidadCeldaGuardarCambiosPedidoExpor=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdCentroCosto=true;
			this.isVisibilidadFK_IdCliente=true;
			this.isVisibilidadFK_IdConsignatario=true;
			this.isVisibilidadFK_IdConsultor=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpleado=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstadoPedidoExpor=true;
			this.isVisibilidadFK_IdFormato=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdMoneda=true;
			this.isVisibilidadFK_IdPais=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdResponsable=true;
			this.isVisibilidadFK_IdSubCliente=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoCambio=true;
			this.isVisibilidadFK_IdTipoPrecio=true;
			this.isVisibilidadFK_IdTransporte=true;
			this.isVisibilidadFK_IdTransportista=true;
			this.isVisibilidadFK_IdUsuario=true;
			this.isVisibilidadFK_IdVendedor=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesPedidoExpor("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosPedidoExpor();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioPedidoExpor(false);
			
			this.setPermisosUsuarioPedidoExpor();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.pedidoexporSessionBean.getEsGuardarRelacionado() 
				|| (this.pedidoexporSessionBean.getEsGuardarRelacionado() && this.pedidoexporSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioPedidoExporClasesRelacionadas();
			}
			
			if(this.pedidoexporSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioPedidoExporClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosPedidoExpor();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualPedidoExpor();
			}
			
			if(!this.isPermisoBusquedaPedidoExpor) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasPedidoExpor.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.pedidoexporSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(true);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(true);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioPedidoExpor,this.isPermisoPaginacionMedioPedidoExpor,this.isPermisoPaginacionTodoPedidoExpor);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(PedidoExporConstantesFunciones.getTiposSeleccionarPedidoExpor());
				
				this.tiposColumnasSelect=PedidoExporConstantesFunciones.getTiposSeleccionarPedidoExpor(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectPedidoExpor();				
				//this.tiposRelacionesSelect=PedidoExporConstantesFunciones.getTiposRelacionesPedidoExpor(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioPedidoExpor();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(true,false,true);
				this.setAccionesUsuarioPedidoExpor(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(true,false,true);							
				this.setAccionesUsuarioPedidoExpor(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesPedidoExpor() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.detallepedidoexporLogic=new DetallePedidoExporLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			this.usuarioLogic=new UsuarioLogic();
			this.monedaLogic=new MonedaLogic();
			this.empleadoLogic=new EmpleadoLogic();
			this.tipoprecioLogic=new TipoPrecioLogic();
			this.formatoLogic=new FormatoLogic();
			this.clienteLogic=new ClienteLogic();
			this.paisLogic=new PaisLogic();
			this.transporteLogic=new TransporteLogic();
			this.vendedorLogic=new VendedorLogic();
			this.subclienteLogic=new SubClienteLogic();
			this.consignatarioLogic=new ConsignatarioLogic();
			this.consultorLogic=new ConsultorLogic();
			this.estadopedidoexporLogic=new EstadoPedidoLogic();
			this.tipocambioLogic=new TipoCambioLogic();
			this.centrocostoLogic=new CentroCostoLogic();
			this.responsableLogic=new ResponsableLogic();
			this.transportistaLogic=new TransportistaLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				pedidoexporImplementable= (PedidoExporImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+PedidoExporConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				pedidoexporImplementableHome= (PedidoExporImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+PedidoExporConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.pedidoexpors= new ArrayList<PedidoExpor>();
			this.pedidoexporsEliminados= new ArrayList<PedidoExpor>();
						
			this.isEsNuevoPedidoExpor=false;
			this.esParaAccionDesdeFormularioPedidoExpor=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idEmpleadoActual=0L;
			this.idClienteActual=0L;
			this.idVendedorActual=0L;
			this.idTipoCambioActual=0L;
			this.idCentroCostoActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			this.usuariosForeignKey=new ArrayList<Usuario>() ;
			this.monedasForeignKey=new ArrayList<Moneda>() ;
			this.empleadosForeignKey=new ArrayList<Empleado>() ;
			this.tipopreciosForeignKey=new ArrayList<TipoPrecio>() ;
			this.formatosForeignKey=new ArrayList<Formato>() ;
			this.clientesForeignKey=new ArrayList<Cliente>() ;
			this.paissForeignKey=new ArrayList<Pais>() ;
			this.transportesForeignKey=new ArrayList<Transporte>() ;
			this.vendedorsForeignKey=new ArrayList<Vendedor>() ;
			this.subclientesForeignKey=new ArrayList<SubCliente>() ;
			this.consignatariosForeignKey=new ArrayList<Consignatario>() ;
			this.consultorsForeignKey=new ArrayList<Consultor>() ;
			this.estadopedidoexporsForeignKey=new ArrayList<EstadoPedido>() ;
			this.tipocambiosForeignKey=new ArrayList<TipoCambio>() ;
			this.centrocostosForeignKey=new ArrayList<CentroCosto>() ;
			this.responsablesForeignKey=new ArrayList<Responsable>() ;
			this.transportistasForeignKey=new ArrayList<Transportista>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyPedidoExpor(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroPedidoExpor();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			PedidoExporBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=PedidoExporConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesPedidoExpor("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingPedidoExpor(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormPedidoExpor!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioPedidoExpor();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioPedidoExpor();
			}
			
			PedidoExporBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasPedidoExpor.getTabCount(); i++) {
					this.jTabbedPaneBusquedasPedidoExpor.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasPedidoExpor.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessPedidoExpor(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga PedidoExpor: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectPedidoExpor() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(DetallePedidoExporConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(DetallePedidoExporConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesPedidoExpor")) {
				iIndex=this.jInternalFrameDetalleFormPedidoExpor.jTabbedPaneRelacionesPedidoExpor.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormPedidoExpor.jTabbedPaneRelacionesPedidoExpor.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();	
				
				

				if(sTitle.equals("Detalle Pedido Exportacions")) {
					if(!DetallePedidoExporJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessPedidoExpor();

						this.cargarParteTabPanelRelacionadaDetallePedidoExpor(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessPedidoExpor();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaDetallePedidoExpor(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormPedidoExpor.cargarSessionConBeanSwingJInternalFrameDetallePedidoExpor(false,true,iIndex);
		this.jButtonDetallePedidoExporActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaDetallePedidoExpor();

		//this.jTabbedPaneRelacionesPedidoExpor.updateUI();
		//this.jTabbedPaneRelacionesPedidoExpor.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesPedidoExpor.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("DetallePedidoExpor")) {
				int row=this.jTableDatosPedidoExpor.getSelectedRow();
				jButtonDetallePedidoExporActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Detalle Pedido Exportacion")) {

					if(this.isTienePermisosDetallePedidoExpor && this.pedidoexporConstantesFunciones.mostrarDetallePedidoExporPedidoExpor && !PedidoExporConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Detalle Pedido Exportacions"+"("+DetallePedidoExporConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Detalle Pedido Exportacions");

						if(pedidoexporConstantesFunciones.resaltarDetallePedidoExporPedidoExpor!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(pedidoexporConstantesFunciones.resaltarDetallePedidoExporPedidoExpor);
						}

						jmenuItem.setEnabled(this.pedidoexporConstantesFunciones.activarDetallePedidoExporPedidoExpor);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"DetallePedidoExpor"));

						

						this.jInternalFrameDetalleFormPedidoExpor.jmenuDetallePedidoExpor.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyPedidoExpor(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyPedidoExpor(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyPedidoExpor(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyPedidoExporListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyPedidoExpor();
		
		this.cargarCombosFrameForeignKeyPedidoExpor();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyPedidoExpor();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyPedidoExpor();
		}
	}
	
	

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEmpleado(this.empleadosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoPrecio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoPrecioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoPrecio();
				this.cargarCombosFrameTipoPreciosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoPrecio(this.tipopreciosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyFormato(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyFormatoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyFormato();
				this.cargarCombosFrameFormatosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaFormato(this.formatosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCliente(this.clientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPais(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyPaisListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyPais();
				this.cargarCombosFramePaissForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaPais(this.paissForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransporte(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransporteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransporte();
				this.cargarCombosFrameTransportesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransporte(this.transportesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyVendedor(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyVendedorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyVendedor();
				this.cargarCombosFrameVendedorsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaVendedor(this.vendedorsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySubCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeySubClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeySubCliente();
				this.cargarCombosFrameSubClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaSubCliente(this.subclientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyConsignatario(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyConsignatarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyConsignatario();
				this.cargarCombosFrameConsignatariosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaConsignatario(this.consignatariosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyConsultor(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyConsultorListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyConsultor();
				this.cargarCombosFrameConsultorsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaConsultor(this.consultorsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoPedidoExpor(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoPedidoExporListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoPedidoExpor();
				this.cargarCombosFrameEstadoPedidoExporsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstadoPedidoExpor(this.estadopedidoexporsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoCambio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoCambioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoCambio();
				this.cargarCombosFrameTipoCambiosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCentroCosto(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCentroCostoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCentroCosto();
				this.cargarCombosFrameCentroCostosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyResponsable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyResponsableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyResponsable();
				this.cargarCombosFrameResponsablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaResponsable(this.responsablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransportista(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransportistaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransportista();
				this.cargarCombosFrameTransportistasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransportista(this.transportistasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoPedidoExporActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.pedidoexporSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormPedidoExpor==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
			
			
			if(jTableDatosPedidoExpor.getRowCount()>=1) {
				jTableDatosPedidoExpor.removeRowSelectionInterval(0, jTableDatosPedidoExpor.getRowCount()-1);						
			}
			
			this.isEsNuevoPedidoExpor=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoPedidoExpor(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesPedidoExpor(true);			
			//this.pedidoexpor=new PedidoExpor();
			//this.pedidoexpor.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesPedidoExpor(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPedidoExpor() ;
			
			if(PedidoExporJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetallePedidoExpor(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.pedidoexpor);	
			this.actualizarInformacion("INFO_PADRE",false,this.pedidoexpor);				
			
			PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
			
			if(this.pedidoexporSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar PedidoExpor: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarPedidoExporActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<PedidoExpor> pedidoexporsSeleccionados=new ArrayList<PedidoExpor>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosPedidoExpor.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosPedidoExpor.getSelectedRows().length;			
			}
			
			pedidoexporsSeleccionados=this.getPedidoExporsSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoPedidoExpor--;			
				//PedidoExpor pedidoexporAux= new PedidoExpor();			
				//pedidoexporAux.setId(this.iIdNuevoPedidoExpor);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//PedidoExpor pedidoexporOrigen=new PedidoExpor();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(PedidoExpor pedidoexporOrigen : pedidoexporsSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							pedidoexporOrigen =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							pedidoexporOrigen =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaPedidoExpor();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.pedidoexpor.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosPedidoExpor(pedidoexporOrigen,this.pedidoexpor,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.pedidoexporLogic.getPedidoExpors().add(this.pedidoexporAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.pedidoexpors.add(this.pedidoexporAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaPedidoExpor(false);
				
				this.jTableDatosPedidoExpor.setRowSelectionInterval(this.getIndiceNuevoPedidoExpor(), this.getIndiceNuevoPedidoExpor());
				
				int iLastRow =  this.jTableDatosPedidoExpor.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosPedidoExpor.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosPedidoExpor.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaPedidoExpor(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarPedidoExporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<PedidoExpor> pedidoexporsSeleccionados=new ArrayList<PedidoExpor>();									
		
			PedidoExpor pedidoexporOrigen=new PedidoExpor();
			PedidoExpor pedidoexporDestino=new PedidoExpor();
				
			pedidoexporsSeleccionados=this.getPedidoExporsSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosPedidoExpor.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || pedidoexporsSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosPedidoExpor.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporOrigen =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						pedidoexporOrigen =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						pedidoexporDestino =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						pedidoexporDestino =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				pedidoexporOrigen =pedidoexporsSeleccionados.get(0);
				pedidoexporDestino =pedidoexporsSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosPedidoExpor(pedidoexporOrigen,pedidoexporDestino,true,false);
				
				pedidoexporDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(pedidoexporDestino,pedidoexporLogic.getPedidoExpors());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(pedidoexporDestino,pedidoexpors);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaPedidoExpor(false);
				
				//this.jTableDatosPedidoExpor.setRowSelectionInterval(this.getIndiceNuevoPedidoExpor(), this.getIndiceNuevoPedidoExpor());
				
				int iLastRow =  this.jTableDatosPedidoExpor.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosPedidoExpor.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosPedidoExpor.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaPedidoExpor(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormPedidoExporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormPedidoExpor==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormPedidoExpor.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarPedidoExporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesPedidoExpor.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasPedidoExpor.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesPedidoExpor.setVisible(!isVisible);
			this.jPanelPaginacionPedidoExpor.setVisible(!isVisible);
			this.jPanelAccionesPedidoExpor.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarPedidoExporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFramePedidoExpor();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoPedidoExporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoPedidoExpor();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionPedidoExporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionPedidoExpor();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByPedidoExporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByPedidoExpor();
			
			this.abrirFrameOrderByPedidoExpor();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByPedidoExporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByPedidoExpor();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetallePedidoExpor(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormPedidoExpor);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormPedidoExpor.isMaximum()) {
					this.jInternalFrameDetalleFormPedidoExpor.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormPedidoExpor.setSize(this.jInternalFrameDetalleFormPedidoExpor.iWidthFormulario,this.jInternalFrameDetalleFormPedidoExpor.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormPedidoExpor.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormPedidoExpor.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormPedidoExpor.isMaximum()) {
						this.jInternalFrameDetalleFormPedidoExpor.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormPedidoExpor.jContentPaneDetallePedidoExpor.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormPedidoExpor.jTabbedPaneRelacionesPedidoExpor.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormPedidoExpor.jContentPaneDetallePedidoExpor.getWidth(),PedidoExporConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormPedidoExpor.jTabbedPaneRelacionesPedidoExpor.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormPedidoExpor.jContentPaneDetallePedidoExpor.getWidth(),PedidoExporConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormPedidoExpor.jTabbedPaneRelacionesPedidoExpor.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormPedidoExpor.jContentPaneDetallePedidoExpor.getWidth(),PedidoExporConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(DetallePedidoExporJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaDetallePedidoExpor();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormPedidoExpor.setVisible(true);
	        this.jInternalFrameDetalleFormPedidoExpor.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByPedidoExpor() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByPedidoExpor==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByPedidoExpor=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByPedidoExpor,false,this);
				} else {
					this.jInternalFrameOrderByPedidoExpor=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByPedidoExpor,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByPedidoExpor);
				this.jInternalFrameOrderByPedidoExpor.setVisible(false);
				this.jInternalFrameOrderByPedidoExpor.setSelected(false);
				
				this.jInternalFrameOrderByPedidoExpor.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByPedidoExpor"));
				
				this.inicializarActualizarBindingTablaOrderByPedidoExpor();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionPedidoExpor() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionPedidoExpor==null) {
				
				this.jInternalFrameImportacionPedidoExpor=new ImportacionJInternalFrame(PedidoExporConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionPedidoExpor);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionPedidoExpor);
				this.jInternalFrameImportacionPedidoExpor.setVisible(false);
				this.jInternalFrameImportacionPedidoExpor.setSelected(false);


				this.jInternalFrameImportacionPedidoExpor.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionPedidoExpor"));
				this.jInternalFrameImportacionPedidoExpor.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionPedidoExpor"));
				this.jInternalFrameImportacionPedidoExpor.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionPedidoExpor"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoPedidoExpor() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoPedidoExpor==null) {
				this.jInternalFrameReporteDinamicoPedidoExpor=new ReporteDinamicoJInternalFrame(PedidoExporConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoPedidoExpor);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoPedidoExpor);
				this.jInternalFrameReporteDinamicoPedidoExpor.setVisible(false);
				this.jInternalFrameReporteDinamicoPedidoExpor.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoPedidoExpor.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoPedidoExpor"));
				this.jInternalFrameReporteDinamicoPedidoExpor.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoPedidoExpor"));
				this.jInternalFrameReporteDinamicoPedidoExpor.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoPedidoExpor"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualPedidoExpor();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaDetallePedidoExpor() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.jScrollPanelDatosDetallePedidoExpor.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormPedidoExpor.jContentPaneDetallePedidoExpor.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.jScrollPanelDatosDetallePedidoExpor.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.jScrollPanelDatosDetallePedidoExpor.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.jScrollPanelDatosDetallePedidoExpor.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetallePedidoExpor() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormPedidoExpor);
			
	       	this.jInternalFrameDetalleFormPedidoExpor.setVisible(false);
	        this.jInternalFrameDetalleFormPedidoExpor.setSelected(false);
			
			//this.jInternalFrameDetalleFormPedidoExpor.dispose();
			//this.jInternalFrameDetalleFormPedidoExpor=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoPedidoExpor() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoPedidoExpor.setVisible(true);
	        this.jInternalFrameReporteDinamicoPedidoExpor.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionPedidoExpor() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionPedidoExpor.setVisible(true);
	        this.jInternalFrameImportacionPedidoExpor.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByPedidoExpor() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByPedidoExpor.setVisible(true);
	        this.jInternalFrameOrderByPedidoExpor.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByPedidoExpor() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByPedidoExpor.setVisible(false);
	        this.jInternalFrameOrderByPedidoExpor.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoPedidoExpor() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoPedidoExpor.setVisible(false);
	        this.jInternalFrameReporteDinamicoPedidoExpor.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionPedidoExpor() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionPedidoExpor.setVisible(false);
	        this.jInternalFrameImportacionPedidoExpor.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeVendedor(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeVendedor);
						VendedorBeanSwingJInternalFrame vendedorBeanSwingJInternalFrame=new VendedorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						vendedorBeanSwingJInternalFrame.setJInternalFrameParent(this);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.sTipoBusqueda="Vendedor";
						}

						vendedorBeanSwingJInternalFrame.getTodosVendedorArbol();
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setVendedors(vendedorBeanSwingJInternalFrame.vendedorsArbol);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.CargarTreeVendedor();
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setVisible(true);
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						vendedorBeanSwingJInternalFrame.jInternalFrameTreeVendedor.jInternalFrameParent=this;
						TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
						TitledBorder titledBorderVendedor=(TitledBorder)vendedorBeanSwingJInternalFrame.jScrollPanelDatosVendedor.getBorder();

						titledBorderVendedor.setTitle(titledBorderPedidoExpor.getTitle() + " -> Vendedor");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,vendedorBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(vendedorBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeVendedor(VendedorBeanSwingJInternalFrame jInternalFrameTreeVendedor) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeVendedor);
						jInternalFrameTreeVendedor.setVisible(false);
						jInternalFrameTreeVendedor.setSelected(false);
						//jInternalFrameTreeVendedor.dispose();
						//jInternalFrameTreeVendedor=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}

				public void abrirFrameTreeCentroCosto(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCentroCosto);
						CentroCostoBeanSwingJInternalFrame centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.sTipoBusqueda="CentroCosto";
						}

						centrocostoBeanSwingJInternalFrame.getTodosCentroCostoArbol();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setCentroCostos(centrocostoBeanSwingJInternalFrame.centrocostosArbol);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.CargarTreeCentroCosto();
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setVisible(true);
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						centrocostoBeanSwingJInternalFrame.jInternalFrameTreeCentroCosto.jInternalFrameParent=this;
						TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
						TitledBorder titledBorderCentroCosto=(TitledBorder)centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

						titledBorderCentroCosto.setTitle(titledBorderPedidoExpor.getTitle() + " -> Centro Costo");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,centrocostoBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(centrocostoBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCentroCosto(CentroCostoBeanSwingJInternalFrame jInternalFrameTreeCentroCosto) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCentroCosto);
						jInternalFrameTreeCentroCosto.setVisible(false);
						jInternalFrameTreeCentroCosto.setSelected(false);
						//jInternalFrameTreeCentroCosto.dispose();
						//jInternalFrameTreeCentroCosto=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarPedidoExporActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarPedidoExpor(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarPedidoExpor(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesPedidoExpor(true);
			//this.isEsNuevoPedidoExpor=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesPedidoExpor("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesPedidoExpor(false) ;
			
			if(pedidoexporSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporSessionBean.getEsGuardarRelacionado() && DetallePedidoExporJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetallePedidoExporActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(PedidoExporJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetallePedidoExpor(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPedidoExpor(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaPedidoExporActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarPedidoExpor(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormPedidoExpor==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesPedidoExpor(true);
			//this.isEsNuevoPedidoExpor=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.pedidoexpor.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesPedidoExpor("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesPedidoExpor(false) ;
			
			if(PedidoExporJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetallePedidoExpor(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPedidoExpor(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Empleado")) {
				if(!this.pedidoexporConstantesFunciones.cargarid_empleadoPedidoExpor) {
					this.cargarCombosEmpleadosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPedidoExpor(false,false);
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_empleado (id);

				this.recargarComboTablaEmpleado(this.empleadosForeignKey);

			}
			
			if(sType.equals("Cliente")) {
				if(!this.pedidoexporConstantesFunciones.cargarid_clientePedidoExpor) {
					this.cargarCombosClientesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPedidoExpor(false,false);
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente (id);

				this.recargarComboTablaCliente(this.clientesForeignKey);

			}
			
			if(sType.equals("Vendedor")) {
				if(!this.pedidoexporConstantesFunciones.cargarid_vendedorPedidoExpor) {
					this.cargarCombosVendedorsForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPedidoExpor(false,false);
					this.cargarCombosFrameVendedorsForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_vendedor (id);

				this.recargarComboTablaVendedor(this.vendedorsForeignKey);

			}
			
			if(sType.equals("TipoCambio")) {
				if(!this.pedidoexporConstantesFunciones.cargarid_tipo_cambioPedidoExpor) {
					this.cargarCombosTipoCambiosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPedidoExpor(false,false);
					this.cargarCombosFrameTipoCambiosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_tipo_cambio (id);

				this.recargarComboTablaTipoCambio(this.tipocambiosForeignKey);

			}
			
			if(sType.equals("CentroCosto")) {
				if(!this.pedidoexporConstantesFunciones.cargarid_centro_costoPedidoExpor) {
					this.cargarCombosCentroCostosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingPedidoExpor(false,false);
					this.cargarCombosFrameCentroCostosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_centro_costo (id);

				this.recargarComboTablaCentroCosto(this.centrocostosForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
					
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoExpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoExpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
			
	
	public void recargarComboTablaEmpleado(List<Empleado> empleadosForeignKey)throws Exception{
		TableColumn tableColumnEmpleado=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDEMPLEADO));
		TableCellEditor tableCellEditorEmpleado =tableColumnEmpleado.getCellEditor();

		EmpleadoTableCell empleadoTableCellFk=(EmpleadoTableCell)tableCellEditorEmpleado;

		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.setempleadosForeignKey(empleadosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoExpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empleadoTableCellFk.setRowActual(intSelectedRow);
			//empleadoTableCellFk.setempleadosForeignKeyActual(empleadosForeignKey);
		//}


		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.RecargarEmpleadosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoPrecio(List<TipoPrecio> tipopreciosForeignKey)throws Exception{
		TableColumn tableColumnTipoPrecio=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDTIPOPRECIO));
		TableCellEditor tableCellEditorTipoPrecio =tableColumnTipoPrecio.getCellEditor();

		TipoPrecioTableCell tipoprecioTableCellFk=(TipoPrecioTableCell)tableCellEditorTipoPrecio;

		if(tipoprecioTableCellFk!=null) {
			tipoprecioTableCellFk.settipopreciosForeignKey(tipopreciosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoExpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipoprecioTableCellFk.setRowActual(intSelectedRow);
			//tipoprecioTableCellFk.settipopreciosForeignKeyActual(tipopreciosForeignKey);
		//}


		if(tipoprecioTableCellFk!=null) {
			tipoprecioTableCellFk.RecargarTipoPreciosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaFormato(List<Formato> formatosForeignKey)throws Exception{
		TableColumn tableColumnFormato=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDFORMATO));
		TableCellEditor tableCellEditorFormato =tableColumnFormato.getCellEditor();

		FormatoTableCell formatoTableCellFk=(FormatoTableCell)tableCellEditorFormato;

		if(formatoTableCellFk!=null) {
			formatoTableCellFk.setformatosForeignKey(formatosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoExpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//formatoTableCellFk.setRowActual(intSelectedRow);
			//formatoTableCellFk.setformatosForeignKeyActual(formatosForeignKey);
		//}


		if(formatoTableCellFk!=null) {
			formatoTableCellFk.RecargarFormatosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCliente(List<Cliente> clientesForeignKey)throws Exception{
		TableColumn tableColumnCliente=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDCLIENTE));
		TableCellEditor tableCellEditorCliente =tableColumnCliente.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorCliente;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoExpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientesForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaPais(List<Pais> paissForeignKey)throws Exception{
		TableColumn tableColumnPais=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDPAIS));
		TableCellEditor tableCellEditorPais =tableColumnPais.getCellEditor();

		PaisTableCell paisTableCellFk=(PaisTableCell)tableCellEditorPais;

		if(paisTableCellFk!=null) {
			paisTableCellFk.setpaissForeignKey(paissForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoExpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//paisTableCellFk.setRowActual(intSelectedRow);
			//paisTableCellFk.setpaissForeignKeyActual(paissForeignKey);
		//}


		if(paisTableCellFk!=null) {
			paisTableCellFk.RecargarPaissForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransporte(List<Transporte> transportesForeignKey)throws Exception{
		TableColumn tableColumnTransporte=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDTRANSPORTE));
		TableCellEditor tableCellEditorTransporte =tableColumnTransporte.getCellEditor();

		TransporteTableCell transporteTableCellFk=(TransporteTableCell)tableCellEditorTransporte;

		if(transporteTableCellFk!=null) {
			transporteTableCellFk.settransportesForeignKey(transportesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoExpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transporteTableCellFk.setRowActual(intSelectedRow);
			//transporteTableCellFk.settransportesForeignKeyActual(transportesForeignKey);
		//}


		if(transporteTableCellFk!=null) {
			transporteTableCellFk.RecargarTransportesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaVendedor(List<Vendedor> vendedorsForeignKey)throws Exception{
		TableColumn tableColumnVendedor=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDVENDEDOR));
		TableCellEditor tableCellEditorVendedor =tableColumnVendedor.getCellEditor();

		VendedorTableCell vendedorTableCellFk=(VendedorTableCell)tableCellEditorVendedor;

		if(vendedorTableCellFk!=null) {
			vendedorTableCellFk.setvendedorsForeignKey(vendedorsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoExpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//vendedorTableCellFk.setRowActual(intSelectedRow);
			//vendedorTableCellFk.setvendedorsForeignKeyActual(vendedorsForeignKey);
		//}


		if(vendedorTableCellFk!=null) {
			vendedorTableCellFk.RecargarVendedorsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaSubCliente(List<SubCliente> subclientesForeignKey)throws Exception{
		TableColumn tableColumnSubCliente=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDSUBCLIENTE));
		TableCellEditor tableCellEditorSubCliente =tableColumnSubCliente.getCellEditor();

		SubClienteTableCell subclienteTableCellFk=(SubClienteTableCell)tableCellEditorSubCliente;

		if(subclienteTableCellFk!=null) {
			subclienteTableCellFk.setsubclientesForeignKey(subclientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoExpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//subclienteTableCellFk.setRowActual(intSelectedRow);
			//subclienteTableCellFk.setsubclientesForeignKeyActual(subclientesForeignKey);
		//}


		if(subclienteTableCellFk!=null) {
			subclienteTableCellFk.RecargarSubClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaConsignatario(List<Consignatario> consignatariosForeignKey)throws Exception{
		TableColumn tableColumnConsignatario=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDCONSIGNATARIO));
		TableCellEditor tableCellEditorConsignatario =tableColumnConsignatario.getCellEditor();

		ConsignatarioTableCell consignatarioTableCellFk=(ConsignatarioTableCell)tableCellEditorConsignatario;

		if(consignatarioTableCellFk!=null) {
			consignatarioTableCellFk.setconsignatariosForeignKey(consignatariosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoExpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//consignatarioTableCellFk.setRowActual(intSelectedRow);
			//consignatarioTableCellFk.setconsignatariosForeignKeyActual(consignatariosForeignKey);
		//}


		if(consignatarioTableCellFk!=null) {
			consignatarioTableCellFk.RecargarConsignatariosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaConsultor(List<Consultor> consultorsForeignKey)throws Exception{
		TableColumn tableColumnConsultor=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDCONSULTOR));
		TableCellEditor tableCellEditorConsultor =tableColumnConsultor.getCellEditor();

		ConsultorTableCell consultorTableCellFk=(ConsultorTableCell)tableCellEditorConsultor;

		if(consultorTableCellFk!=null) {
			consultorTableCellFk.setconsultorsForeignKey(consultorsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoExpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//consultorTableCellFk.setRowActual(intSelectedRow);
			//consultorTableCellFk.setconsultorsForeignKeyActual(consultorsForeignKey);
		//}


		if(consultorTableCellFk!=null) {
			consultorTableCellFk.RecargarConsultorsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoPedidoExpor(List<EstadoPedido> estadopedidoexporsForeignKey)throws Exception{
		TableColumn tableColumnEstadoPedidoExpor=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDESTADOPEDIDOEXPOR));
		TableCellEditor tableCellEditorEstadoPedidoExpor =tableColumnEstadoPedidoExpor.getCellEditor();

		EstadoPedidoTableCell estadopedidoTableCellFk=(EstadoPedidoTableCell)tableCellEditorEstadoPedidoExpor;

		if(estadopedidoTableCellFk!=null) {
			estadopedidoTableCellFk.setestadopedidosForeignKey(estadopedidoexporsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoExpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadopedidoTableCellFk.setRowActual(intSelectedRow);
			//estadopedidoTableCellFk.setestadopedidosForeignKeyActual(estadopedidoexporsForeignKey);
		//}


		if(estadopedidoTableCellFk!=null) {
			estadopedidoTableCellFk.RecargarEstadoPedidosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoCambio(List<TipoCambio> tipocambiosForeignKey)throws Exception{
		TableColumn tableColumnTipoCambio=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDTIPOCAMBIO));
		TableCellEditor tableCellEditorTipoCambio =tableColumnTipoCambio.getCellEditor();

		TipoCambioTableCell tipocambioTableCellFk=(TipoCambioTableCell)tableCellEditorTipoCambio;

		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.settipocambiosForeignKey(tipocambiosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoExpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipocambioTableCellFk.setRowActual(intSelectedRow);
			//tipocambioTableCellFk.settipocambiosForeignKeyActual(tipocambiosForeignKey);
		//}


		if(tipocambioTableCellFk!=null) {
			tipocambioTableCellFk.RecargarTipoCambiosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCentroCosto(List<CentroCosto> centrocostosForeignKey)throws Exception{
		TableColumn tableColumnCentroCosto=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDCENTROCOSTO));
		TableCellEditor tableCellEditorCentroCosto =tableColumnCentroCosto.getCellEditor();

		CentroCostoTableCell centrocostoTableCellFk=(CentroCostoTableCell)tableCellEditorCentroCosto;

		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.setcentrocostosForeignKey(centrocostosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoExpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//centrocostoTableCellFk.setRowActual(intSelectedRow);
			//centrocostoTableCellFk.setcentrocostosForeignKeyActual(centrocostosForeignKey);
		//}


		if(centrocostoTableCellFk!=null) {
			centrocostoTableCellFk.RecargarCentroCostosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaResponsable(List<Responsable> responsablesForeignKey)throws Exception{
		TableColumn tableColumnResponsable=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDRESPONSABLE));
		TableCellEditor tableCellEditorResponsable =tableColumnResponsable.getCellEditor();

		ResponsableTableCell responsableTableCellFk=(ResponsableTableCell)tableCellEditorResponsable;

		if(responsableTableCellFk!=null) {
			responsableTableCellFk.setresponsablesForeignKey(responsablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoExpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//responsableTableCellFk.setRowActual(intSelectedRow);
			//responsableTableCellFk.setresponsablesForeignKeyActual(responsablesForeignKey);
		//}


		if(responsableTableCellFk!=null) {
			responsableTableCellFk.RecargarResponsablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransportista(List<Transportista> transportistasForeignKey)throws Exception{
		TableColumn tableColumnTransportista=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDTRANSPORTISTA));
		TableCellEditor tableCellEditorTransportista =tableColumnTransportista.getCellEditor();

		TransportistaTableCell transportistaTableCellFk=(TransportistaTableCell)tableCellEditorTransportista;

		if(transportistaTableCellFk!=null) {
			transportistaTableCellFk.settransportistasForeignKey(transportistasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosPedidoExpor.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transportistaTableCellFk.setRowActual(intSelectedRow);
			//transportistaTableCellFk.settransportistasForeignKeyActual(transportistasForeignKey);
		//}


		if(transportistaTableCellFk!=null) {
			transportistaTableCellFk.RecargarTransportistasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_empleado (Long id) throws Exception {
		this.setActualEmpleadoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cliente (Long id) throws Exception {
		this.setActualClienteForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_vendedor (Long id) throws Exception {
		this.setActualVendedorForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_tipo_cambio (Long id) throws Exception {
		this.setActualTipoCambioForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_centro_costo (Long id) throws Exception {
		this.setActualCentroCostoForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarPedidoExporActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesPedidoExpor(false);
			
			//if(!this.isEsNuevoPedidoExpor) {								
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(PedidoExporJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				
			}
			
			if(this.permiteMantenimiento(this.pedidoexpor)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoPedidoExpor=true;
					this.inicializarActualizarBindingTablaPedidoExpor(false);
					this.isEsNuevoPedidoExpor=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoPedidoExpor=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoPedidoExpor=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesPedidoExpor(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualPedidoExpor(false);
				
				this.habilitarDeshabilitarControlesPedidoExpor(false);
			
												
				
				if(PedidoExporJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetallePedidoExpor();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoPedidoExporActionPerformed(evt,pedidoexporSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualPedidoExpor(this.pedidoexpor,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,pedidoexporSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.pedidoexpor.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(PedidoExpor.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoExpor.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarPedidoExporActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				this.pedidoexpor.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				this.pedidoexpor.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.pedidoexpor)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((PedidoExporModel) this.jTableDatosPedidoExpor.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoPedidoExpor=true;
				this.inicializarActualizarBindingTablaPedidoExpor(false);
				this.isEsNuevoPedidoExpor=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesPedidoExpor(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualPedidoExpor(false);
				
				this.habilitarDeshabilitarControlesPedidoExpor(false);
				
				
				
				if(PedidoExporJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetallePedidoExpor();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarPedidoExporActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosPedidoExpor.getRowCount()>=1) {
				jTableDatosPedidoExpor.removeRowSelectionInterval(0, jTableDatosPedidoExpor.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesPedidoExpor(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaPedidoExpor(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesPedidoExpor(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualPedidoExpor(false) ;
			
			this.isEsNuevoPedidoExpor=false;
			
			if(PedidoExporJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetallePedidoExpor();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosPedidoExporActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingPedidoExpor(false);
				
				//SI ES MANUAL
				if(PedidoExporJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualPedidoExpor();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosPedidoExporActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoPedidoExpor--;			
			//PedidoExpor pedidoexporAux= new PedidoExpor();			
			//pedidoexporAux.setId(this.iIdNuevoPedidoExpor);
			
			if(this.jInternalFrameDetalleFormPedidoExpor==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaPedidoExpor();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
			
			this.pedidoexpor.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.pedidoexporLogic.getPedidoExpors().add(this.pedidoexporAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.pedidoexpors.add(this.pedidoexporAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaPedidoExpor(false);
			
			this.jTableDatosPedidoExpor.setRowSelectionInterval(this.getIndiceNuevoPedidoExpor(), this.getIndiceNuevoPedidoExpor());
			
			int iLastRow =  this.jTableDatosPedidoExpor.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosPedidoExpor.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosPedidoExpor.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaPedidoExpor(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionPedidoExporActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingPedidoExpor(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPedidoExpor(false);
			
			//SI ES MANUAL
			if(PedidoExporJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualPedidoExpor();
			}
			
			//this.abrirFrameTreePedidoExpor();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionPedidoExporActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Pedido ExportacionS ?", "MANTENIMIENTO DE Pedido Exportacion", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionPedidoExpor.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralPedidoExpor();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.pedidoexporReturnGeneral=pedidoexporLogic.procesarImportacionPedidoExporsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.pedidoexporParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarPedidoExporReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionPedidoExporActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionPedidoExpor.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionPedidoExpor.setFileImportacion(this.jInternalFrameImportacionPedidoExpor.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionPedidoExpor.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionPedidoExpor.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionPedidoExpor.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionPedidoExpor.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoPedidoExporActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<PedidoExpor> pedidoexporsSeleccionados=new ArrayList<PedidoExpor>();		

		pedidoexporsSeleccionados=this.getPedidoExporsSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPedidoExpor.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPedidoExpor.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("PedidoExporBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"PedidoExporBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReportePedidoExpors("Todos",pedidoexporsSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidoexporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Exportacion",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoPedidoExpor.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPedidoExpor.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case PedidoExporConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDUSUARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Usuario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Usuario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Usuario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Usuario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_NUMERO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_mero_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_mero_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_mero_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_mero_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_NUMEROAUTORIZACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroAutorizacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroAutorizacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroAutorizacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroAutorizacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_FECHAEMISION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaEmision_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaEmision_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaEmision_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaEmision_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaVencimiento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaVencimiento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaVencimiento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaVencimiento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDMONEDA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Moneda_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Moneda_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Moneda_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Moneda_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_COTIZACION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tizacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tizacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tizacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tizacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDEMPLEADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empleado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empleado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empleado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empleado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDTIPOPRECIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoPrecio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoPrecio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoPrecio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoPrecio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDFORMATO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Formato_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Formato_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Formato_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Formato_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_DIRECCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_reccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_reccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_reccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_reccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_TELEFONO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_lefono_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_lefono_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_lefono_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_lefono_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_RUC:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_c_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_c_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_c_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_c_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDPAIS:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Pais_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Pais_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Pais_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Pais_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_LUGARENTREGA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_garEntrega_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_garEntrega_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_garEntrega_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_garEntrega_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_EMBARQUE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_barque_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_barque_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_barque_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_barque_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_NEGOCIACION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_gociacion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_gociacion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_gociacion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_gociacion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDTRANSPORTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transporte_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transporte_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transporte_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transporte_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDVENDEDOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Vendedor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Vendedor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Vendedor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Vendedor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_FORMAPAGO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_rmaPago_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_rmaPago_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_rmaPago_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_rmaPago_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDSUBCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_SubCliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_SubCliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_SubCliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_SubCliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDCONSIGNATARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Consignatario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Consignatario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Consignatario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Consignatario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDCONSULTOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Consultor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Consultor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Consultor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Consultor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_ORDEN:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_den_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_den_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_den_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_den_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDESTADOPEDIDOEXPOR:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoPedidoExpor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoPedidoExpor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoPedidoExpor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoPedidoExpor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_DESCRIPCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scripcion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scripcion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scripcion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scripcion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_MONTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_SALDO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ldo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ldo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ldo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ldo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_DISPONIBLE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_sponible_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_sponible_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_sponible_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_sponible_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuentoPorcentaje_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuentoPorcentaje_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuentoPorcentaje_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuentoPorcentaje_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_TOTALCONIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talConIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talConIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talConIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talConIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_SUMAN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_man_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_man_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_man_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_man_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_DESCUENTOVALOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_scuentoValor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_scuentoValor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_scuentoValor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_scuentoValor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_TOTALSINIVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talSinIva_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talSinIva_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talSinIva_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talSinIva_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_TOTALDESCUENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talDescuento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talDescuento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talDescuento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talDescuento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_FLETE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ete_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ete_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ete_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ete_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_TOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_tal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_tal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_tal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_tal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_SUBTOTAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_btotal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_btotal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_btotal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_btotal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_SEGUROS:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_guros_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_guros_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_guros_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_guros_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IVA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_a_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_a_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_a_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_a_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_FINANCIAMIENTO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_nanciamiento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_nanciamiento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_nanciamiento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_nanciamiento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_MONTORETENCION:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ntoRetencion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ntoRetencion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ntoRetencion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ntoRetencion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_OTRO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_ro_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_ro_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_ro_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_ro_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_ICE:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_e_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_e_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_e_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_e_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_FECHA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cha_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cha_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cha_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cha_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_FECHASERVIDOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_chaServidor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_chaServidor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_chaServidor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_chaServidor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoCambio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoCambio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoCambio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoCambio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_NUMEROFUE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_meroFue_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_meroFue_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_meroFue_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_meroFue_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDCENTROCOSTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CentroCosto_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CentroCosto_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CentroCosto_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CentroCosto_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDRESPONSABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Responsable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Responsable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Responsable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Responsable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_HORAINICIO:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_raInicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_raInicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_raInicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_raInicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_HORAFIN:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_raFin_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_raFin_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_raFin_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_raFin_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case PedidoExporConstantesFunciones.LABEL_IDTRANSPORTISTA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transportista_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transportista_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transportista_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transportista_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoPedidoExpor.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoPedidoExpor.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoPedidoExpor.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case PedidoExporConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoria="id_usuario";
					break;

				case PedidoExporConstantesFunciones.LABEL_NUMERO:
					sNombreCampoCategoria="numero";
					break;

				case PedidoExporConstantesFunciones.LABEL_NUMEROAUTORIZACION:
					sNombreCampoCategoria="numero_preimpreso";
					break;

				case PedidoExporConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoria="fecha_emision";
					break;

				case PedidoExporConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					sNombreCampoCategoria="fecha_vencimiento";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoria="id_moneda";
					break;

				case PedidoExporConstantesFunciones.LABEL_COTIZACION:
					sNombreCampoCategoria="cotizacion";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoria="id_empleado";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDTIPOPRECIO:
					sNombreCampoCategoria="id_tipo_precio";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoria="id_formato";
					break;

				case PedidoExporConstantesFunciones.LABEL_DIRECCION:
					sNombreCampoCategoria="direccion";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoria="id_cliente";
					break;

				case PedidoExporConstantesFunciones.LABEL_TELEFONO:
					sNombreCampoCategoria="telefono";
					break;

				case PedidoExporConstantesFunciones.LABEL_RUC:
					sNombreCampoCategoria="ruc";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDPAIS:
					sNombreCampoCategoria="id_pais";
					break;

				case PedidoExporConstantesFunciones.LABEL_LUGARENTREGA:
					sNombreCampoCategoria="lugar_entrega";
					break;

				case PedidoExporConstantesFunciones.LABEL_EMBARQUE:
					sNombreCampoCategoria="embarque";
					break;

				case PedidoExporConstantesFunciones.LABEL_NEGOCIACION:
					sNombreCampoCategoria="negociacion";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDTRANSPORTE:
					sNombreCampoCategoria="id_transporte";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDVENDEDOR:
					sNombreCampoCategoria="id_vendedor";
					break;

				case PedidoExporConstantesFunciones.LABEL_FORMAPAGO:
					sNombreCampoCategoria="forma_pago";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDSUBCLIENTE:
					sNombreCampoCategoria="id_sub_cliente";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDCONSIGNATARIO:
					sNombreCampoCategoria="id_consignatario";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDCONSULTOR:
					sNombreCampoCategoria="id_consultor";
					break;

				case PedidoExporConstantesFunciones.LABEL_ORDEN:
					sNombreCampoCategoria="orden";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDESTADOPEDIDOEXPOR:
					sNombreCampoCategoria="id_estado_pedido";
					break;

				case PedidoExporConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoria="descripcion";
					break;

				case PedidoExporConstantesFunciones.LABEL_MONTO:
					sNombreCampoCategoria="monto";
					break;

				case PedidoExporConstantesFunciones.LABEL_SALDO:
					sNombreCampoCategoria="saldo";
					break;

				case PedidoExporConstantesFunciones.LABEL_DISPONIBLE:
					sNombreCampoCategoria="disponible";
					break;

				case PedidoExporConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					sNombreCampoCategoria="descuento_porcentaje";
					break;

				case PedidoExporConstantesFunciones.LABEL_TOTALCONIVA:
					sNombreCampoCategoria="total_con_iva";
					break;

				case PedidoExporConstantesFunciones.LABEL_SUMAN:
					sNombreCampoCategoria="suman";
					break;

				case PedidoExporConstantesFunciones.LABEL_DESCUENTOVALOR:
					sNombreCampoCategoria="descuento_valor";
					break;

				case PedidoExporConstantesFunciones.LABEL_TOTALSINIVA:
					sNombreCampoCategoria="total_sin_iva";
					break;

				case PedidoExporConstantesFunciones.LABEL_TOTALDESCUENTO:
					sNombreCampoCategoria="total_descuento";
					break;

				case PedidoExporConstantesFunciones.LABEL_FLETE:
					sNombreCampoCategoria="flete";
					break;

				case PedidoExporConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoria="total";
					break;

				case PedidoExporConstantesFunciones.LABEL_SUBTOTAL:
					sNombreCampoCategoria="subtotal";
					break;

				case PedidoExporConstantesFunciones.LABEL_SEGUROS:
					sNombreCampoCategoria="seguros";
					break;

				case PedidoExporConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoria="iva";
					break;

				case PedidoExporConstantesFunciones.LABEL_FINANCIAMIENTO:
					sNombreCampoCategoria="financiamiento";
					break;

				case PedidoExporConstantesFunciones.LABEL_MONTORETENCION:
					sNombreCampoCategoria="monto_retencion";
					break;

				case PedidoExporConstantesFunciones.LABEL_OTRO:
					sNombreCampoCategoria="otro";
					break;

				case PedidoExporConstantesFunciones.LABEL_ICE:
					sNombreCampoCategoria="ice";
					break;

				case PedidoExporConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoria="fecha";
					break;

				case PedidoExporConstantesFunciones.LABEL_FECHASERVIDOR:
					sNombreCampoCategoria="fecha_servidor";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoria="id_tipo_cambio";
					break;

				case PedidoExporConstantesFunciones.LABEL_NUMEROFUE:
					sNombreCampoCategoria="numero_fue";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoria="id_centro_costo";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDRESPONSABLE:
					sNombreCampoCategoria="id_responsable";
					break;

				case PedidoExporConstantesFunciones.LABEL_HORAINICIO:
					sNombreCampoCategoria="hora_inicio";
					break;

				case PedidoExporConstantesFunciones.LABEL_HORAFIN:
					sNombreCampoCategoria="hora_fin";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDTRANSPORTISTA:
					sNombreCampoCategoria="id_transportista";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoPedidoExpor.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case PedidoExporConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoriaValor="id_usuario";
					break;

				case PedidoExporConstantesFunciones.LABEL_NUMERO:
					sNombreCampoCategoriaValor="numero";
					break;

				case PedidoExporConstantesFunciones.LABEL_NUMEROAUTORIZACION:
					sNombreCampoCategoriaValor="numero_preimpreso";
					break;

				case PedidoExporConstantesFunciones.LABEL_FECHAEMISION:
					sNombreCampoCategoriaValor="fecha_emision";
					break;

				case PedidoExporConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					sNombreCampoCategoriaValor="fecha_vencimiento";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoriaValor="id_moneda";
					break;

				case PedidoExporConstantesFunciones.LABEL_COTIZACION:
					sNombreCampoCategoriaValor="cotizacion";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoriaValor="id_empleado";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDTIPOPRECIO:
					sNombreCampoCategoriaValor="id_tipo_precio";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDFORMATO:
					sNombreCampoCategoriaValor="id_formato";
					break;

				case PedidoExporConstantesFunciones.LABEL_DIRECCION:
					sNombreCampoCategoriaValor="direccion";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoriaValor="id_cliente";
					break;

				case PedidoExporConstantesFunciones.LABEL_TELEFONO:
					sNombreCampoCategoriaValor="telefono";
					break;

				case PedidoExporConstantesFunciones.LABEL_RUC:
					sNombreCampoCategoriaValor="ruc";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDPAIS:
					sNombreCampoCategoriaValor="id_pais";
					break;

				case PedidoExporConstantesFunciones.LABEL_LUGARENTREGA:
					sNombreCampoCategoriaValor="lugar_entrega";
					break;

				case PedidoExporConstantesFunciones.LABEL_EMBARQUE:
					sNombreCampoCategoriaValor="embarque";
					break;

				case PedidoExporConstantesFunciones.LABEL_NEGOCIACION:
					sNombreCampoCategoriaValor="negociacion";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDTRANSPORTE:
					sNombreCampoCategoriaValor="id_transporte";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDVENDEDOR:
					sNombreCampoCategoriaValor="id_vendedor";
					break;

				case PedidoExporConstantesFunciones.LABEL_FORMAPAGO:
					sNombreCampoCategoriaValor="forma_pago";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDSUBCLIENTE:
					sNombreCampoCategoriaValor="id_sub_cliente";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDCONSIGNATARIO:
					sNombreCampoCategoriaValor="id_consignatario";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDCONSULTOR:
					sNombreCampoCategoriaValor="id_consultor";
					break;

				case PedidoExporConstantesFunciones.LABEL_ORDEN:
					sNombreCampoCategoriaValor="orden";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDESTADOPEDIDOEXPOR:
					sNombreCampoCategoriaValor="id_estado_pedido";
					break;

				case PedidoExporConstantesFunciones.LABEL_DESCRIPCION:
					sNombreCampoCategoriaValor="descripcion";
					break;

				case PedidoExporConstantesFunciones.LABEL_MONTO:
					sNombreCampoCategoriaValor="monto";
					break;

				case PedidoExporConstantesFunciones.LABEL_SALDO:
					sNombreCampoCategoriaValor="saldo";
					break;

				case PedidoExporConstantesFunciones.LABEL_DISPONIBLE:
					sNombreCampoCategoriaValor="disponible";
					break;

				case PedidoExporConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					sNombreCampoCategoriaValor="descuento_porcentaje";
					break;

				case PedidoExporConstantesFunciones.LABEL_TOTALCONIVA:
					sNombreCampoCategoriaValor="total_con_iva";
					break;

				case PedidoExporConstantesFunciones.LABEL_SUMAN:
					sNombreCampoCategoriaValor="suman";
					break;

				case PedidoExporConstantesFunciones.LABEL_DESCUENTOVALOR:
					sNombreCampoCategoriaValor="descuento_valor";
					break;

				case PedidoExporConstantesFunciones.LABEL_TOTALSINIVA:
					sNombreCampoCategoriaValor="total_sin_iva";
					break;

				case PedidoExporConstantesFunciones.LABEL_TOTALDESCUENTO:
					sNombreCampoCategoriaValor="total_descuento";
					break;

				case PedidoExporConstantesFunciones.LABEL_FLETE:
					sNombreCampoCategoriaValor="flete";
					break;

				case PedidoExporConstantesFunciones.LABEL_TOTAL:
					sNombreCampoCategoriaValor="total";
					break;

				case PedidoExporConstantesFunciones.LABEL_SUBTOTAL:
					sNombreCampoCategoriaValor="subtotal";
					break;

				case PedidoExporConstantesFunciones.LABEL_SEGUROS:
					sNombreCampoCategoriaValor="seguros";
					break;

				case PedidoExporConstantesFunciones.LABEL_IVA:
					sNombreCampoCategoriaValor="iva";
					break;

				case PedidoExporConstantesFunciones.LABEL_FINANCIAMIENTO:
					sNombreCampoCategoriaValor="financiamiento";
					break;

				case PedidoExporConstantesFunciones.LABEL_MONTORETENCION:
					sNombreCampoCategoriaValor="monto_retencion";
					break;

				case PedidoExporConstantesFunciones.LABEL_OTRO:
					sNombreCampoCategoriaValor="otro";
					break;

				case PedidoExporConstantesFunciones.LABEL_ICE:
					sNombreCampoCategoriaValor="ice";
					break;

				case PedidoExporConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoriaValor="fecha";
					break;

				case PedidoExporConstantesFunciones.LABEL_FECHASERVIDOR:
					sNombreCampoCategoriaValor="fecha_servidor";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDTIPOCAMBIO:
					sNombreCampoCategoriaValor="id_tipo_cambio";
					break;

				case PedidoExporConstantesFunciones.LABEL_NUMEROFUE:
					sNombreCampoCategoriaValor="numero_fue";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDCENTROCOSTO:
					sNombreCampoCategoriaValor="id_centro_costo";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDRESPONSABLE:
					sNombreCampoCategoriaValor="id_responsable";
					break;

				case PedidoExporConstantesFunciones.LABEL_HORAINICIO:
					sNombreCampoCategoriaValor="hora_inicio";
					break;

				case PedidoExporConstantesFunciones.LABEL_HORAFIN:
					sNombreCampoCategoriaValor="hora_fin";
					break;

				case PedidoExporConstantesFunciones.LABEL_IDTRANSPORTISTA:
					sNombreCampoCategoriaValor="id_transportista";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoPedidoExpor.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoPedidoExpor.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case PedidoExporConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDUSUARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Usuario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_usuario");
					break;

				case PedidoExporConstantesFunciones.LABEL_NUMERO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero");
					break;

				case PedidoExporConstantesFunciones.LABEL_NUMEROAUTORIZACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Nro Preimpreso",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_preimpreso");
					break;

				case PedidoExporConstantesFunciones.LABEL_FECHAEMISION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Emision",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_emision");
					break;

				case PedidoExporConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Vencimiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_vencimiento");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDMONEDA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Moneda",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_moneda");
					break;

				case PedidoExporConstantesFunciones.LABEL_COTIZACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cotizacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"cotizacion");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDEMPLEADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empleado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empleado");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDTIPOPRECIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Precio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_precio");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDFORMATO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Formato",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_formato");
					break;

				case PedidoExporConstantesFunciones.LABEL_DIRECCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Direccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"direccion");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente");
					break;

				case PedidoExporConstantesFunciones.LABEL_TELEFONO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Telefono",sNombreCampoCategoria,sNombreCampoCategoriaValor,"telefono");
					break;

				case PedidoExporConstantesFunciones.LABEL_RUC:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ruc",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ruc");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDPAIS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Origen",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_pais");
					break;

				case PedidoExporConstantesFunciones.LABEL_LUGARENTREGA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Lugar Entrega",sNombreCampoCategoria,sNombreCampoCategoriaValor,"lugar_entrega");
					break;

				case PedidoExporConstantesFunciones.LABEL_EMBARQUE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Embarque",sNombreCampoCategoria,sNombreCampoCategoriaValor,"embarque");
					break;

				case PedidoExporConstantesFunciones.LABEL_NEGOCIACION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Negociacion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"negociacion");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDTRANSPORTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transporte",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transporte");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDVENDEDOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Vendedor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_vendedor");
					break;

				case PedidoExporConstantesFunciones.LABEL_FORMAPAGO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Forma Pago",sNombreCampoCategoria,sNombreCampoCategoriaValor,"forma_pago");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDSUBCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Contacto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sub_cliente");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDCONSIGNATARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Consignatario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_consignatario");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDCONSULTOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Consultor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_consultor");
					break;

				case PedidoExporConstantesFunciones.LABEL_ORDEN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Orden",sNombreCampoCategoria,sNombreCampoCategoriaValor,"orden");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDESTADOPEDIDOEXPOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_pedido");
					break;

				case PedidoExporConstantesFunciones.LABEL_DESCRIPCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Descripcion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descripcion");
					break;

				case PedidoExporConstantesFunciones.LABEL_MONTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"monto");
					break;

				case PedidoExporConstantesFunciones.LABEL_SALDO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Saldo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"saldo");
					break;

				case PedidoExporConstantesFunciones.LABEL_DISPONIBLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Disponible",sNombreCampoCategoria,sNombreCampoCategoriaValor,"disponible");
					break;

				case PedidoExporConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Dscto Porcentaje",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento_porcentaje");
					break;

				case PedidoExporConstantesFunciones.LABEL_TOTALCONIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Con Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_con_iva");
					break;

				case PedidoExporConstantesFunciones.LABEL_SUMAN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Suman",sNombreCampoCategoria,sNombreCampoCategoriaValor,"suman");
					break;

				case PedidoExporConstantesFunciones.LABEL_DESCUENTOVALOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Dscto Valor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"descuento_valor");
					break;

				case PedidoExporConstantesFunciones.LABEL_TOTALSINIVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Sin Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_sin_iva");
					break;

				case PedidoExporConstantesFunciones.LABEL_TOTALDESCUENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total Dscto",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total_descuento");
					break;

				case PedidoExporConstantesFunciones.LABEL_FLETE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Flete",sNombreCampoCategoria,sNombreCampoCategoriaValor,"flete");
					break;

				case PedidoExporConstantesFunciones.LABEL_TOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Total",sNombreCampoCategoria,sNombreCampoCategoriaValor,"total");
					break;

				case PedidoExporConstantesFunciones.LABEL_SUBTOTAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Subtotal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"subtotal");
					break;

				case PedidoExporConstantesFunciones.LABEL_SEGUROS:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Seguros",sNombreCampoCategoria,sNombreCampoCategoriaValor,"seguros");
					break;

				case PedidoExporConstantesFunciones.LABEL_IVA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Iva",sNombreCampoCategoria,sNombreCampoCategoriaValor,"iva");
					break;

				case PedidoExporConstantesFunciones.LABEL_FINANCIAMIENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Financiamiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"financiamiento");
					break;

				case PedidoExporConstantesFunciones.LABEL_MONTORETENCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Monto Retencion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"monto_retencion");
					break;

				case PedidoExporConstantesFunciones.LABEL_OTRO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Otro",sNombreCampoCategoria,sNombreCampoCategoriaValor,"otro");
					break;

				case PedidoExporConstantesFunciones.LABEL_ICE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ice",sNombreCampoCategoria,sNombreCampoCategoriaValor,"ice");
					break;

				case PedidoExporConstantesFunciones.LABEL_FECHA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha");
					break;

				case PedidoExporConstantesFunciones.LABEL_FECHASERVIDOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha Servidor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha_servidor");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDTIPOCAMBIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Cambio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_cambio");
					break;

				case PedidoExporConstantesFunciones.LABEL_NUMEROFUE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Numero Fue",sNombreCampoCategoria,sNombreCampoCategoriaValor,"numero_fue");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDCENTROCOSTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Centro Costo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_centro_costo");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDRESPONSABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Responsable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_responsable");
					break;

				case PedidoExporConstantesFunciones.LABEL_HORAINICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Hora Inicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"hora_inicio");
					break;

				case PedidoExporConstantesFunciones.LABEL_HORAFIN:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Hora Fin",sNombreCampoCategoria,sNombreCampoCategoriaValor,"hora_fin");
					break;

				case PedidoExporConstantesFunciones.LABEL_IDTRANSPORTISTA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Transportista",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transportista");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoPedidoExporActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<PedidoExpor> pedidoexporsSeleccionados=new ArrayList<PedidoExpor>();		
		
		pedidoexporsSeleccionados=this.getPedidoExporsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedidoexpor";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("PedidoExpors");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoPedidoExpor.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoPedidoExpor.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case PedidoExporConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDUSUARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDUSUARIO);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getusuario_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_NUMERO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_NUMERO);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getnumero());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_NUMEROAUTORIZACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_NUMEROAUTORIZACION);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getnumero_preimpreso());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_FECHAEMISION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_FECHAEMISION);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getfecha_emision());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_FECHAVENCIMIENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_FECHAVENCIMIENTO);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getfecha_vencimiento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDMONEDA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDMONEDA);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getmoneda_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_COTIZACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_COTIZACION);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getcotizacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDEMPLEADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDEMPLEADO);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getempleado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDTIPOPRECIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDTIPOPRECIO);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.gettipoprecio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDFORMATO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDFORMATO);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getformato_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_DIRECCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_DIRECCION);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getdireccion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDCLIENTE);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_TELEFONO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_TELEFONO);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.gettelefono());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_RUC:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_RUC);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getruc());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDPAIS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDPAIS);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getpais_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_LUGARENTREGA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_LUGARENTREGA);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getlugar_entrega());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_EMBARQUE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_EMBARQUE);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getembarque());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_NEGOCIACION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_NEGOCIACION);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getnegociacion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDTRANSPORTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDTRANSPORTE);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.gettransporte_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDVENDEDOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDVENDEDOR);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getvendedor_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_FORMAPAGO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_FORMAPAGO);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getforma_pago());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDSUBCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDSUBCLIENTE);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getsubcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDCONSIGNATARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDCONSIGNATARIO);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getconsignatario_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDCONSULTOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDCONSULTOR);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getconsultor_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_ORDEN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_ORDEN);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getorden());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDESTADOPEDIDOEXPOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDESTADOPEDIDOEXPOR);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getestadopedidoexpor_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_DESCRIPCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_DESCRIPCION);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getdescripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_MONTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_MONTO);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getmonto());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_SALDO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_SALDO);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getsaldo());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_DISPONIBLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_DISPONIBLE);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getdisponible());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_DESCUENTOPORCENTAJE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_DESCUENTOPORCENTAJE);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getdescuento_porcentaje());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_TOTALCONIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_TOTALCONIVA);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.gettotal_con_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_SUMAN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_SUMAN);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getsuman());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_DESCUENTOVALOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_DESCUENTOVALOR);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getdescuento_valor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_TOTALSINIVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_TOTALSINIVA);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.gettotal_sin_iva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_TOTALDESCUENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_TOTALDESCUENTO);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.gettotal_descuento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_FLETE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_FLETE);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getflete());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_TOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_TOTAL);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.gettotal());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_SUBTOTAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_SUBTOTAL);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getsubtotal());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_SEGUROS:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_SEGUROS);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getseguros());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IVA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IVA);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getiva());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_FINANCIAMIENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_FINANCIAMIENTO);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getfinanciamiento());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_MONTORETENCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_MONTORETENCION);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getmonto_retencion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_OTRO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_OTRO);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getotro());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_ICE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_ICE);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getice());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_FECHA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_FECHA);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getfecha());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_FECHASERVIDOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_FECHASERVIDOR);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getfecha_servidor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDTIPOCAMBIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDTIPOCAMBIO);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.gettipocambio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_NUMEROFUE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_NUMEROFUE);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getnumero_fue());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDCENTROCOSTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDCENTROCOSTO);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getcentrocosto_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDRESPONSABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDRESPONSABLE);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.getresponsable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_HORAINICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_HORAINICIO);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.gethora_inicio());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_HORAFIN:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_HORAFIN);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.gethora_fin());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case PedidoExporConstantesFunciones.LABEL_IDTRANSPORTISTA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDTRANSPORTISTA);
					iRow++;

					for(PedidoExpor pedidoexpor:pedidoexporsSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(pedidoexpor.gettransportista_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelPedidoExpor(row);				
			//	iRow++;
			//}				
			
			//for(PedidoExpor pedidoexporAux:pedidoexporsSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelPedidoExpor(pedidoexporAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidoexporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Exportacion",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPedidoExpor(false);
			
			//SI ES MANUAL
			if(PedidoExporJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualPedidoExpor();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresPedidoExporActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPedidoExpor(false);
			
			//SI ES MANUAL
			if(PedidoExporJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualPedidoExpor();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesPedidoExporActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingPedidoExpor(false);
			
			//SI ES MANUAL
			if(PedidoExporJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualPedidoExpor();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaPedidoExpor() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosPedidoExpor.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosPedidoExpor.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosPedidoExpor.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosPedidoExpor.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosPedidoExpor.setMinimumSize(dimensionMinimum);
		this.jTableDatosPedidoExpor.setMaximumSize(dimensionMaximum);
		this.jTableDatosPedidoExpor.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingPedidoExpor(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingPedidoExpor(esInicializar,true);
	}
	
	public void inicializarActualizarBindingPedidoExpor(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaPedidoExpor(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesPedidoExpor(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasPedidoExpor(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesPedidoExpor(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesPedidoExpor(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !PedidoExporJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!PedidoExporJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualPedidoExpor() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaPedidoExpor();
		
		this.inicializarActualizarBindingBotonesManualPedidoExpor(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualPedidoExpor();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesPedidoExpor() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualPedidoExpor(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualPedidoExpor(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosPedidoExpor.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosPedidoExpor.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReportePedidoExpor.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormPedidoExpor.jCheckBoxPostAccionNuevoPedidoExpor.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormPedidoExpor.jCheckBoxPostAccionSinCerrarPedidoExpor.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormPedidoExpor.jCheckBoxPostAccionSinMensajePedidoExpor.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosPedidoExpor.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosPedidoExpor.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReportePedidoExpor.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
				this.jInternalFrameDetalleFormPedidoExpor.jCheckBoxPostAccionNuevoPedidoExpor.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormPedidoExpor.jCheckBoxPostAccionSinCerrarPedidoExpor.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormPedidoExpor.jCheckBoxPostAccionSinMensajePedidoExpor.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionPedidoExpor.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionPedidoExpor.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxTiposAccionesFormularioPedidoExpor.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesPedidoExpor.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoPedidoExpor!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPedidoExpor.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesPedidoExpor.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesPedidoExpor.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarPedidoExpor.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesPedidoExpor.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoPedidoExpor!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoPedidoExpor.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesPedidoExpor.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralPedidoExpor.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPedidoExpor(Boolean esInicializar) throws Exception {
		try	{	
			if(PedidoExporJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualPedidoExpor(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesPedidoExpor() throws Exception {
		try	{
			if(PedidoExporJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualPedidoExpor();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetallePedidoExpor() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxTiposAccionesFormularioPedidoExpor.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormPedidoExpor.jComboBoxTiposAccionesFormularioPedidoExpor.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualPedidoExpor() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesPedidoExpor.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesPedidoExpor.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesPedidoExpor.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesPedidoExpor.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesPedidoExpor.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesPedidoExpor.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionPedidoExpor.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionPedidoExpor.addItem(reporte);
			}
			
			
			if(!this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionPedidoExpor.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionPedidoExpor.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesPedidoExpor.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesPedidoExpor.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesPedidoExpor.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesPedidoExpor.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormPedidoExpor!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormPedidoExpor.jComboBoxTiposAccionesFormularioPedidoExpor.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormPedidoExpor.jComboBoxTiposAccionesFormularioPedidoExpor.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarPedidoExpor.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarPedidoExpor.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarPedidoExpor.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualPedidoExpor();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualPedidoExpor() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoPedidoExpor!=null) {
				this.jInternalFrameReporteDinamicoPedidoExpor.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoPedidoExpor.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoPedidoExpor!=null) {
				this.jInternalFrameReporteDinamicoPedidoExpor.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoPedidoExpor.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoPedidoExpor!=null) {
				
				if(this.jInternalFrameReporteDinamicoPedidoExpor.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoPedidoExpor.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoPedidoExpor.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoPedidoExpor.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoPedidoExpor.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoPedidoExpor.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
				
				//TIPOS COLUMNAS CATEGORIA DINAMICO
				if(this.jInternalFrameReporteDinamicoPedidoExpor.getjComboBoxColumnaCategoriaGrafico()!=null) {
					this.jInternalFrameReporteDinamicoPedidoExpor.getjComboBoxColumnaCategoriaGrafico().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoria=PedidoExporConstantesFunciones.getTiposSeleccionarPedidoExpor(true,true,false,true,true);
						
					for(Reporte reporte:tiposColumnasCategoria) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoPedidoExpor.getjComboBoxColumnaCategoriaGrafico().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS CATEGORIA VALOR DINAMICO
				if(this.jInternalFrameReporteDinamicoPedidoExpor.getjComboBoxColumnaCategoriaValor()!=null) {
					this.jInternalFrameReporteDinamicoPedidoExpor.getjComboBoxColumnaCategoriaValor().removeAllItems();
						
					ArrayList<Reporte> tiposColumnasCategoriaValor=PedidoExporConstantesFunciones.getTiposSeleccionarPedidoExpor(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasCategoriaValor) {//this.tiposSeleccionar
						this.jInternalFrameReporteDinamicoPedidoExpor.getjComboBoxColumnaCategoriaValor().addItem(reporte);
					}
					
				}
					
				//TIPOS COLUMNAS VALOR
				defaultListModel=new DefaultListModel<Reporte>();
					
				if(this.jInternalFrameReporteDinamicoPedidoExpor.getjListColumnasValoresGrafico()!=null) {
					this.jInternalFrameReporteDinamicoPedidoExpor.getjListColumnasValoresGrafico().removeAll();
						
					ArrayList<Reporte> tiposColumnasValor=PedidoExporConstantesFunciones.getTiposSeleccionarPedidoExpor(false,false,true,false,false);
						
					for(Reporte reporte:tiposColumnasValor) {//this.tiposSeleccionar
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoPedidoExpor.getjListColumnasValoresGrafico().setModel(defaultListModel);									
						
				}
					
				//TIPOS GRAFICOS REPORTES DINAMICOS
				if(this.jInternalFrameReporteDinamicoPedidoExpor.getjComboBoxTiposGraficosReportesDinamico()!=null) {
					this.jInternalFrameReporteDinamicoPedidoExpor.getjComboBoxTiposGraficosReportesDinamico().removeAllItems();
						
					for(Reporte reporte:this.tiposGraficosReportes) {
						this.jInternalFrameReporteDinamicoPedidoExpor.getjComboBoxTiposGraficosReportesDinamico().addItem(reporte);
					}
					
				}
			
			
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualPedidoExpor()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_centro_costoFK_IdCentroCostoPedidoExpor.getSelectedItem()!=null){this.id_centro_costoFK_IdCentroCosto=((CentroCosto)this.jComboBoxid_centro_costoFK_IdCentroCostoPedidoExpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_clienteFK_IdClientePedidoExpor.getSelectedItem()!=null){this.id_clienteFK_IdCliente=((Cliente)this.jComboBoxid_clienteFK_IdClientePedidoExpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_consignatarioFK_IdConsignatarioPedidoExpor.getSelectedItem()!=null){this.id_consignatarioFK_IdConsignatario=((Consignatario)this.jComboBoxid_consignatarioFK_IdConsignatarioPedidoExpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_consultorFK_IdConsultorPedidoExpor.getSelectedItem()!=null){this.id_consultorFK_IdConsultor=((Consultor)this.jComboBoxid_consultorFK_IdConsultorPedidoExpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_empleadoFK_IdEmpleadoPedidoExpor.getSelectedItem()!=null){this.id_empleadoFK_IdEmpleado=((Empleado)this.jComboBoxid_empleadoFK_IdEmpleadoPedidoExpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_estado_pedidoFK_IdEstadoPedidoExporPedidoExpor.getSelectedItem()!=null){this.id_estado_pedidoFK_IdEstadoPedidoExpor=((EstadoPedido)this.jComboBoxid_estado_pedidoFK_IdEstadoPedidoExporPedidoExpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_formatoFK_IdFormatoPedidoExpor.getSelectedItem()!=null){this.id_formatoFK_IdFormato=((Formato)this.jComboBoxid_formatoFK_IdFormatoPedidoExpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_paisFK_IdPaisPedidoExpor.getSelectedItem()!=null){this.id_paisFK_IdPais=((Pais)this.jComboBoxid_paisFK_IdPaisPedidoExpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_responsableFK_IdResponsablePedidoExpor.getSelectedItem()!=null){this.id_responsableFK_IdResponsable=((Responsable)this.jComboBoxid_responsableFK_IdResponsablePedidoExpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_sub_clienteFK_IdSubClientePedidoExpor.getSelectedItem()!=null){this.id_sub_clienteFK_IdSubCliente=((SubCliente)this.jComboBoxid_sub_clienteFK_IdSubClientePedidoExpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_cambioFK_IdTipoCambioPedidoExpor.getSelectedItem()!=null){this.id_tipo_cambioFK_IdTipoCambio=((TipoCambio)this.jComboBoxid_tipo_cambioFK_IdTipoCambioPedidoExpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_precioFK_IdTipoPrecioPedidoExpor.getSelectedItem()!=null){this.id_tipo_precioFK_IdTipoPrecio=((TipoPrecio)this.jComboBoxid_tipo_precioFK_IdTipoPrecioPedidoExpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_transporteFK_IdTransportePedidoExpor.getSelectedItem()!=null){this.id_transporteFK_IdTransporte=((Transporte)this.jComboBoxid_transporteFK_IdTransportePedidoExpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_transportistaFK_IdTransportistaPedidoExpor.getSelectedItem()!=null){this.id_transportistaFK_IdTransportista=((Transportista)this.jComboBoxid_transportistaFK_IdTransportistaPedidoExpor.getSelectedItem()).getId();}
		if(this.jComboBoxid_vendedorFK_IdVendedorPedidoExpor.getSelectedItem()!=null){this.id_vendedorFK_IdVendedor=((Vendedor)this.jComboBoxid_vendedorFK_IdVendedorPedidoExpor.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasPedidoExpor(Boolean esInicializar) throws Exception {				
		if(PedidoExporJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualPedidoExpor();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaPedidoExpor() throws Exception {
		this.inicializarActualizarBindingTablaPedidoExpor(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByPedidoExpor() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByPedidoExpor.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByPedidoExpor.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByPedidoExpor.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByPedidoExpor.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByPedidoExpor.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosPedidoExporOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExporOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByPedidoExpor.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByPedidoExpor.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByPedidoExpor.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaPedidoExpor(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=pedidoexporLogic.getPedidoExpors().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=pedidoexpors.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(PedidoExporJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosPedidoExpor.setModel(new PedidoExporModel(this.pedidoexporLogic.getPedidoExpors(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosPedidoExpor.setModel(new PedidoExporModel(this.pedidoexpors,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByPedidoExpor!=null && this.jInternalFrameOrderByPedidoExpor.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByPedidoExpor();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+PedidoExporConstantesFunciones.SCLASSWEBTITULO,pedidoexporConstantesFunciones.resaltarSeleccionarPedidoExpor,iSizeTabla,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+PedidoExporConstantesFunciones.SCLASSWEBTITULO,pedidoexporConstantesFunciones.resaltarSeleccionarPedidoExpor,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_ID));

		if(this.pedidoexporConstantesFunciones.mostraridPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoexporConstantesFunciones.resaltaridPedidoExpor,this.pedidoexporConstantesFunciones.activaridPedidoExpor,iSizeTabla,this,true,"idPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltaridPedidoExpor,this.pedidoexporConstantesFunciones.activaridPedidoExpor,this,true,"idPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDEMPRESA));

		if(this.pedidoexporConstantesFunciones.mostrarid_empresaPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.pedidoexporConstantesFunciones.resaltarid_empresaPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_empresaPedidoExpor,iSizeTabla));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.pedidoexporConstantesFunciones.resaltarid_empresaPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_empresaPedidoExpor,false,"id_empresaPedidoExpor","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.pedidoexporConstantesFunciones.mostrarid_sucursalPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.pedidoexporConstantesFunciones.resaltarid_sucursalPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_sucursalPedidoExpor,iSizeTabla));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.pedidoexporConstantesFunciones.resaltarid_sucursalPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_sucursalPedidoExpor,false,"id_sucursalPedidoExpor","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.pedidoexporConstantesFunciones.mostrarid_ejercicioPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.pedidoexporConstantesFunciones.resaltarid_ejercicioPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_ejercicioPedidoExpor,iSizeTabla));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.pedidoexporConstantesFunciones.resaltarid_ejercicioPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_ejercicioPedidoExpor,false,"id_ejercicioPedidoExpor","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDPERIODO));

		if(this.pedidoexporConstantesFunciones.mostrarid_periodoPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.pedidoexporConstantesFunciones.resaltarid_periodoPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_periodoPedidoExpor,iSizeTabla));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.pedidoexporConstantesFunciones.resaltarid_periodoPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_periodoPedidoExpor,false,"id_periodoPedidoExpor","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDANIO));

		if(this.pedidoexporConstantesFunciones.mostrarid_anioPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.pedidoexporConstantesFunciones.resaltarid_anioPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_anioPedidoExpor,iSizeTabla));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.pedidoexporConstantesFunciones.resaltarid_anioPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_anioPedidoExpor,true,"id_anioPedidoExpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDMES));

		if(this.pedidoexporConstantesFunciones.mostrarid_mesPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.pedidoexporConstantesFunciones.resaltarid_mesPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_mesPedidoExpor,iSizeTabla));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.pedidoexporConstantesFunciones.resaltarid_mesPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_mesPedidoExpor,true,"id_mesPedidoExpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDUSUARIO));

		if(this.pedidoexporConstantesFunciones.mostrarid_usuarioPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_IDUSUARIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new UsuarioTableCell(this.usuariosForeignKey,this.pedidoexporConstantesFunciones.resaltarid_usuarioPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_usuarioPedidoExpor,iSizeTabla));
			tableColumn.setCellEditor(new UsuarioTableCell(this.usuariosForeignKey,this.pedidoexporConstantesFunciones.resaltarid_usuarioPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_usuarioPedidoExpor,false,"id_usuarioPedidoExpor","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_NUMERO));

		if(this.pedidoexporConstantesFunciones.mostrarnumeroPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_NUMERO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidoexporConstantesFunciones.resaltarnumeroPedidoExpor,this.pedidoexporConstantesFunciones.activarnumeroPedidoExpor,iSizeTabla,this,true,"numeroPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltarnumeroPedidoExpor,this.pedidoexporConstantesFunciones.activarnumeroPedidoExpor,this,true,"numeroPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_NUMEROAUTORIZACION));

		if(this.pedidoexporConstantesFunciones.mostrarnumero_preimpresoPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_NUMEROAUTORIZACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidoexporConstantesFunciones.resaltarnumero_preimpresoPedidoExpor,this.pedidoexporConstantesFunciones.activarnumero_preimpresoPedidoExpor,iSizeTabla,this,true,"numero_preimpresoPedidoExpor","BASICO-CON_EVENT_CHANGE"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltarnumero_preimpresoPedidoExpor,this.pedidoexporConstantesFunciones.activarnumero_preimpresoPedidoExpor,this,true,"numero_preimpresoPedidoExpor","BASICO-CON_EVENT_CHANGE",true));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_FECHAEMISION));

		if(this.pedidoexporConstantesFunciones.mostrarfecha_emisionPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_FECHAEMISION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.pedidoexporConstantesFunciones.resaltarfecha_emisionPedidoExpor,this.pedidoexporConstantesFunciones.activarfecha_emisionPedidoExpor,iSizeTabla,this,true,"fecha_emisionPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.pedidoexporConstantesFunciones.resaltarfecha_emisionPedidoExpor,this.pedidoexporConstantesFunciones.activarfecha_emisionPedidoExpor,this,true,"fecha_emisionPedidoExpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_FECHAVENCIMIENTO));

		if(this.pedidoexporConstantesFunciones.mostrarfecha_vencimientoPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_FECHAVENCIMIENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.pedidoexporConstantesFunciones.resaltarfecha_vencimientoPedidoExpor,this.pedidoexporConstantesFunciones.activarfecha_vencimientoPedidoExpor,iSizeTabla,this,true,"fecha_vencimientoPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.pedidoexporConstantesFunciones.resaltarfecha_vencimientoPedidoExpor,this.pedidoexporConstantesFunciones.activarfecha_vencimientoPedidoExpor,this,true,"fecha_vencimientoPedidoExpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDMONEDA));

		if(this.pedidoexporConstantesFunciones.mostrarid_monedaPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_IDMONEDA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MonedaTableCell(this.monedasForeignKey,this.pedidoexporConstantesFunciones.resaltarid_monedaPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_monedaPedidoExpor,iSizeTabla));
			tableColumn.setCellEditor(new MonedaTableCell(this.monedasForeignKey,this.pedidoexporConstantesFunciones.resaltarid_monedaPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_monedaPedidoExpor,false,"id_monedaPedidoExpor","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_COTIZACION));

		if(this.pedidoexporConstantesFunciones.mostrarcotizacionPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_COTIZACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoexporConstantesFunciones.resaltarcotizacionPedidoExpor,this.pedidoexporConstantesFunciones.activarcotizacionPedidoExpor,iSizeTabla,this,true,"cotizacionPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltarcotizacionPedidoExpor,this.pedidoexporConstantesFunciones.activarcotizacionPedidoExpor,this,true,"cotizacionPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDEMPLEADO));

		if(this.pedidoexporConstantesFunciones.mostrarid_empleadoPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_IDEMPLEADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpleadoTableCell(this.empleadosForeignKey,this.pedidoexporConstantesFunciones.resaltarid_empleadoPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_empleadoPedidoExpor,iSizeTabla));
			tableColumn.setCellEditor(new EmpleadoTableCell(this.empleadosForeignKey,this.pedidoexporConstantesFunciones.resaltarid_empleadoPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_empleadoPedidoExpor,true,"id_empleadoPedidoExpor","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDTIPOPRECIO));

		if(this.pedidoexporConstantesFunciones.mostrarid_tipo_precioPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_IDTIPOPRECIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoPrecioTableCell(this.tipopreciosForeignKey,this.pedidoexporConstantesFunciones.resaltarid_tipo_precioPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_tipo_precioPedidoExpor,iSizeTabla));
			tableColumn.setCellEditor(new TipoPrecioTableCell(this.tipopreciosForeignKey,this.pedidoexporConstantesFunciones.resaltarid_tipo_precioPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_tipo_precioPedidoExpor,true,"id_tipo_precioPedidoExpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDFORMATO));

		if(this.pedidoexporConstantesFunciones.mostrarid_formatoPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_IDFORMATO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new FormatoTableCell(this.formatosForeignKey,this.pedidoexporConstantesFunciones.resaltarid_formatoPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_formatoPedidoExpor,iSizeTabla));
			tableColumn.setCellEditor(new FormatoTableCell(this.formatosForeignKey,this.pedidoexporConstantesFunciones.resaltarid_formatoPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_formatoPedidoExpor,true,"id_formatoPedidoExpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_DIRECCION));

		if(this.pedidoexporConstantesFunciones.mostrardireccionPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_DIRECCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidoexporConstantesFunciones.resaltardireccionPedidoExpor,this.pedidoexporConstantesFunciones.activardireccionPedidoExpor,iSizeTabla,this,true,"direccionPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltardireccionPedidoExpor,this.pedidoexporConstantesFunciones.activardireccionPedidoExpor,this,true,"direccionPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDCLIENTE));

		if(this.pedidoexporConstantesFunciones.mostrarid_clientePedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_IDCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientesForeignKey,this.pedidoexporConstantesFunciones.resaltarid_clientePedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_clientePedidoExpor,iSizeTabla));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientesForeignKey,this.pedidoexporConstantesFunciones.resaltarid_clientePedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_clientePedidoExpor,true,"id_clientePedidoExpor","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_TELEFONO));

		if(this.pedidoexporConstantesFunciones.mostrartelefonoPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_TELEFONO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidoexporConstantesFunciones.resaltartelefonoPedidoExpor,this.pedidoexporConstantesFunciones.activartelefonoPedidoExpor,iSizeTabla,this,true,"telefonoPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltartelefonoPedidoExpor,this.pedidoexporConstantesFunciones.activartelefonoPedidoExpor,this,true,"telefonoPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_RUC));

		if(this.pedidoexporConstantesFunciones.mostrarrucPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_RUC,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidoexporConstantesFunciones.resaltarrucPedidoExpor,this.pedidoexporConstantesFunciones.activarrucPedidoExpor,iSizeTabla,this,true,"rucPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltarrucPedidoExpor,this.pedidoexporConstantesFunciones.activarrucPedidoExpor,this,true,"rucPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDPAIS));

		if(this.pedidoexporConstantesFunciones.mostrarid_paisPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_IDPAIS,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new PaisTableCell(this.paissForeignKey,this.pedidoexporConstantesFunciones.resaltarid_paisPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_paisPedidoExpor,iSizeTabla));
			tableColumn.setCellEditor(new PaisTableCell(this.paissForeignKey,this.pedidoexporConstantesFunciones.resaltarid_paisPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_paisPedidoExpor,true,"id_paisPedidoExpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_LUGARENTREGA));

		if(this.pedidoexporConstantesFunciones.mostrarlugar_entregaPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_LUGARENTREGA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidoexporConstantesFunciones.resaltarlugar_entregaPedidoExpor,this.pedidoexporConstantesFunciones.activarlugar_entregaPedidoExpor,iSizeTabla,this,true,"lugar_entregaPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltarlugar_entregaPedidoExpor,this.pedidoexporConstantesFunciones.activarlugar_entregaPedidoExpor,this,true,"lugar_entregaPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_EMBARQUE));

		if(this.pedidoexporConstantesFunciones.mostrarembarquePedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_EMBARQUE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidoexporConstantesFunciones.resaltarembarquePedidoExpor,this.pedidoexporConstantesFunciones.activarembarquePedidoExpor,iSizeTabla,this,true,"embarquePedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltarembarquePedidoExpor,this.pedidoexporConstantesFunciones.activarembarquePedidoExpor,this,true,"embarquePedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_NEGOCIACION));

		if(this.pedidoexporConstantesFunciones.mostrarnegociacionPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_NEGOCIACION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidoexporConstantesFunciones.resaltarnegociacionPedidoExpor,this.pedidoexporConstantesFunciones.activarnegociacionPedidoExpor,iSizeTabla,this,true,"negociacionPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltarnegociacionPedidoExpor,this.pedidoexporConstantesFunciones.activarnegociacionPedidoExpor,this,true,"negociacionPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDTRANSPORTE));

		if(this.pedidoexporConstantesFunciones.mostrarid_transportePedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_IDTRANSPORTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransporteTableCell(this.transportesForeignKey,this.pedidoexporConstantesFunciones.resaltarid_transportePedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_transportePedidoExpor,iSizeTabla));
			tableColumn.setCellEditor(new TransporteTableCell(this.transportesForeignKey,this.pedidoexporConstantesFunciones.resaltarid_transportePedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_transportePedidoExpor,true,"id_transportePedidoExpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDVENDEDOR));

		if(this.pedidoexporConstantesFunciones.mostrarid_vendedorPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_IDVENDEDOR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new VendedorTableCell(this.vendedorsForeignKey,this.pedidoexporConstantesFunciones.resaltarid_vendedorPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_vendedorPedidoExpor,iSizeTabla));
			tableColumn.setCellEditor(new VendedorTableCell(this.vendedorsForeignKey,this.pedidoexporConstantesFunciones.resaltarid_vendedorPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_vendedorPedidoExpor,true,"id_vendedorPedidoExpor","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_FORMAPAGO));

		if(this.pedidoexporConstantesFunciones.mostrarforma_pagoPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_FORMAPAGO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidoexporConstantesFunciones.resaltarforma_pagoPedidoExpor,this.pedidoexporConstantesFunciones.activarforma_pagoPedidoExpor,iSizeTabla,this,true,"forma_pagoPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltarforma_pagoPedidoExpor,this.pedidoexporConstantesFunciones.activarforma_pagoPedidoExpor,this,true,"forma_pagoPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDSUBCLIENTE));

		if(this.pedidoexporConstantesFunciones.mostrarid_sub_clientePedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_IDSUBCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new SubClienteTableCell(this.subclientesForeignKey,this.pedidoexporConstantesFunciones.resaltarid_sub_clientePedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_sub_clientePedidoExpor,iSizeTabla));
			tableColumn.setCellEditor(new SubClienteTableCell(this.subclientesForeignKey,this.pedidoexporConstantesFunciones.resaltarid_sub_clientePedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_sub_clientePedidoExpor,true,"id_sub_clientePedidoExpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDCONSIGNATARIO));

		if(this.pedidoexporConstantesFunciones.mostrarid_consignatarioPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_IDCONSIGNATARIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ConsignatarioTableCell(this.consignatariosForeignKey,this.pedidoexporConstantesFunciones.resaltarid_consignatarioPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_consignatarioPedidoExpor,iSizeTabla));
			tableColumn.setCellEditor(new ConsignatarioTableCell(this.consignatariosForeignKey,this.pedidoexporConstantesFunciones.resaltarid_consignatarioPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_consignatarioPedidoExpor,true,"id_consignatarioPedidoExpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDCONSULTOR));

		if(this.pedidoexporConstantesFunciones.mostrarid_consultorPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_IDCONSULTOR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ConsultorTableCell(this.consultorsForeignKey,this.pedidoexporConstantesFunciones.resaltarid_consultorPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_consultorPedidoExpor,iSizeTabla));
			tableColumn.setCellEditor(new ConsultorTableCell(this.consultorsForeignKey,this.pedidoexporConstantesFunciones.resaltarid_consultorPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_consultorPedidoExpor,true,"id_consultorPedidoExpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_ORDEN));

		if(this.pedidoexporConstantesFunciones.mostrarordenPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_ORDEN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidoexporConstantesFunciones.resaltarordenPedidoExpor,this.pedidoexporConstantesFunciones.activarordenPedidoExpor,iSizeTabla,this,true,"ordenPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltarordenPedidoExpor,this.pedidoexporConstantesFunciones.activarordenPedidoExpor,this,true,"ordenPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IDESTADOPEDIDOEXPOR));

		if(this.pedidoexporConstantesFunciones.mostrarid_estado_pedidoPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_IDESTADOPEDIDOEXPOR,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoPedidoTableCell(this.estadopedidoexporsForeignKey,this.pedidoexporConstantesFunciones.resaltarid_estado_pedidoPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_estado_pedidoPedidoExpor,iSizeTabla));
			tableColumn.setCellEditor(new EstadoPedidoTableCell(this.estadopedidoexporsForeignKey,this.pedidoexporConstantesFunciones.resaltarid_estado_pedidoPedidoExpor,this,this.pedidoexporConstantesFunciones.activarid_estado_pedidoPedidoExpor,true,"id_estado_pedidoPedidoExpor","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_DESCRIPCION));

		if(this.pedidoexporConstantesFunciones.mostrardescripcionPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_DESCRIPCION,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.pedidoexporConstantesFunciones.resaltardescripcionPedidoExpor,this.pedidoexporConstantesFunciones.activardescripcionPedidoExpor,iSizeTabla,this,true,"descripcionPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltardescripcionPedidoExpor,this.pedidoexporConstantesFunciones.activardescripcionPedidoExpor,this,true,"descripcionPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_MONTO));

		if(this.pedidoexporConstantesFunciones.mostrarmontoPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_MONTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoexporConstantesFunciones.resaltarmontoPedidoExpor,this.pedidoexporConstantesFunciones.activarmontoPedidoExpor,iSizeTabla,this,true,"montoPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltarmontoPedidoExpor,this.pedidoexporConstantesFunciones.activarmontoPedidoExpor,this,true,"montoPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_SALDO));

		if(this.pedidoexporConstantesFunciones.mostrarsaldoPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_SALDO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoexporConstantesFunciones.resaltarsaldoPedidoExpor,this.pedidoexporConstantesFunciones.activarsaldoPedidoExpor,iSizeTabla,this,true,"saldoPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltarsaldoPedidoExpor,this.pedidoexporConstantesFunciones.activarsaldoPedidoExpor,this,true,"saldoPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_DISPONIBLE));

		if(this.pedidoexporConstantesFunciones.mostrardisponiblePedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_DISPONIBLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoexporConstantesFunciones.resaltardisponiblePedidoExpor,this.pedidoexporConstantesFunciones.activardisponiblePedidoExpor,iSizeTabla,this,true,"disponiblePedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltardisponiblePedidoExpor,this.pedidoexporConstantesFunciones.activardisponiblePedidoExpor,this,true,"disponiblePedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_DESCUENTOPORCENTAJE));

		if(this.pedidoexporConstantesFunciones.mostrardescuento_porcentajePedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_DESCUENTOPORCENTAJE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoexporConstantesFunciones.resaltardescuento_porcentajePedidoExpor,this.pedidoexporConstantesFunciones.activardescuento_porcentajePedidoExpor,iSizeTabla,this,true,"descuento_porcentajePedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltardescuento_porcentajePedidoExpor,this.pedidoexporConstantesFunciones.activardescuento_porcentajePedidoExpor,this,true,"descuento_porcentajePedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_TOTALCONIVA));

		if(this.pedidoexporConstantesFunciones.mostrartotal_con_ivaPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_TOTALCONIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoexporConstantesFunciones.resaltartotal_con_ivaPedidoExpor,this.pedidoexporConstantesFunciones.activartotal_con_ivaPedidoExpor,iSizeTabla,this,true,"total_con_ivaPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltartotal_con_ivaPedidoExpor,this.pedidoexporConstantesFunciones.activartotal_con_ivaPedidoExpor,this,true,"total_con_ivaPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_SUMAN));

		if(this.pedidoexporConstantesFunciones.mostrarsumanPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_SUMAN,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoexporConstantesFunciones.resaltarsumanPedidoExpor,this.pedidoexporConstantesFunciones.activarsumanPedidoExpor,iSizeTabla,this,true,"sumanPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltarsumanPedidoExpor,this.pedidoexporConstantesFunciones.activarsumanPedidoExpor,this,true,"sumanPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_DESCUENTOVALOR));

		if(this.pedidoexporConstantesFunciones.mostrardescuento_valorPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_DESCUENTOVALOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoexporConstantesFunciones.resaltardescuento_valorPedidoExpor,this.pedidoexporConstantesFunciones.activardescuento_valorPedidoExpor,iSizeTabla,this,true,"descuento_valorPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltardescuento_valorPedidoExpor,this.pedidoexporConstantesFunciones.activardescuento_valorPedidoExpor,this,true,"descuento_valorPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_TOTALSINIVA));

		if(this.pedidoexporConstantesFunciones.mostrartotal_sin_ivaPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_TOTALSINIVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoexporConstantesFunciones.resaltartotal_sin_ivaPedidoExpor,this.pedidoexporConstantesFunciones.activartotal_sin_ivaPedidoExpor,iSizeTabla,this,true,"total_sin_ivaPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltartotal_sin_ivaPedidoExpor,this.pedidoexporConstantesFunciones.activartotal_sin_ivaPedidoExpor,this,true,"total_sin_ivaPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_TOTALDESCUENTO));

		if(this.pedidoexporConstantesFunciones.mostrartotal_descuentoPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_TOTALDESCUENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoexporConstantesFunciones.resaltartotal_descuentoPedidoExpor,this.pedidoexporConstantesFunciones.activartotal_descuentoPedidoExpor,iSizeTabla,this,true,"total_descuentoPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltartotal_descuentoPedidoExpor,this.pedidoexporConstantesFunciones.activartotal_descuentoPedidoExpor,this,true,"total_descuentoPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_FLETE));

		if(this.pedidoexporConstantesFunciones.mostrarfletePedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_FLETE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoexporConstantesFunciones.resaltarfletePedidoExpor,this.pedidoexporConstantesFunciones.activarfletePedidoExpor,iSizeTabla,this,true,"fletePedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltarfletePedidoExpor,this.pedidoexporConstantesFunciones.activarfletePedidoExpor,this,true,"fletePedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_TOTAL));

		if(this.pedidoexporConstantesFunciones.mostrartotalPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_TOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoexporConstantesFunciones.resaltartotalPedidoExpor,this.pedidoexporConstantesFunciones.activartotalPedidoExpor,iSizeTabla,this,true,"totalPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltartotalPedidoExpor,this.pedidoexporConstantesFunciones.activartotalPedidoExpor,this,true,"totalPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_SUBTOTAL));

		if(this.pedidoexporConstantesFunciones.mostrarsubtotalPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_SUBTOTAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoexporConstantesFunciones.resaltarsubtotalPedidoExpor,this.pedidoexporConstantesFunciones.activarsubtotalPedidoExpor,iSizeTabla,this,true,"subtotalPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltarsubtotalPedidoExpor,this.pedidoexporConstantesFunciones.activarsubtotalPedidoExpor,this,true,"subtotalPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_SEGUROS));

		if(this.pedidoexporConstantesFunciones.mostrarsegurosPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_SEGUROS,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoexporConstantesFunciones.resaltarsegurosPedidoExpor,this.pedidoexporConstantesFunciones.activarsegurosPedidoExpor,iSizeTabla,this,true,"segurosPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltarsegurosPedidoExpor,this.pedidoexporConstantesFunciones.activarsegurosPedidoExpor,this,true,"segurosPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_IVA));

		if(this.pedidoexporConstantesFunciones.mostrarivaPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_IVA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoexporConstantesFunciones.resaltarivaPedidoExpor,this.pedidoexporConstantesFunciones.activarivaPedidoExpor,iSizeTabla,this,true,"ivaPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltarivaPedidoExpor,this.pedidoexporConstantesFunciones.activarivaPedidoExpor,this,true,"ivaPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,PedidoExporConstantesFunciones.LABEL_FINANCIAMIENTO));

		if(this.pedidoexporConstantesFunciones.mostrarfinanciamientoPedidoExpor && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,PedidoExporConstantesFunciones.LABEL_FINANCIAMIENTO,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.pedidoexporConstantesFunciones.resaltarfinanciamientoPedidoExpor,this.pedidoexporConstantesFunciones.activarfinanciamientoPedidoExpor,iSizeTabla,this,true,"financiamientoPedidoExpor","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.pedidoexporConstantesFunciones.resaltarfinanciamientoPedidoExpor,this.pedidoexporConstantesFunciones.activarfinanciamientoPedidoExpor,this,true,"financiamientoPedidoExpor","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new PedidoExporPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.pedidoexporSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosDetallePedidoExpor && this.pedidoexporConstantesFunciones.mostrarDetallePedidoExporPedidoExpor && !PedidoExporConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Detalle Pedido Exportacions");
				tableColumn.setHeaderValue("Detalle Pedido Exportacions");
				tableColumn.setCellRenderer(new DetallePedidoExporTableCell(pedidoexporConstantesFunciones.resaltarDetallePedidoExporPedidoExpor,this,this.pedidoexporConstantesFunciones.activarDetallePedidoExporPedidoExpor));
				tableColumn.setCellEditor(new DetallePedidoExporTableCell(pedidoexporConstantesFunciones.resaltarDetallePedidoExporPedidoExpor,this,this.pedidoexporConstantesFunciones.activarDetallePedidoExporPedidoExpor));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosPedidoExpor.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.pedidoexporSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.pedidoexporSessionBean.getEsGuardarRelacionado(),iSizeTabla));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosPedidoExpor.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				//tableColumn= new TableColumn();
				//tableColumn.setIdentifier(sLabelColumnAccion);
				//tableColumn.setHeaderValue(sLabelColumnAccion);
				//tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.pedidoexporSessionBean.getEsGuardarRelacionado(),iSizeTabla));
				//tableColumn.setCellEditor(new IdTableCell(this,false,false,this.pedidoexporSessionBean.getEsGuardarRelacionado(),iSizeTabla));
		
				//tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				//tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				//this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				//this.jTableDatosPedidoExpor.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarPedidoExpor && this.isPermisoGuardarCambiosPedidoExpor) {
					//tableColumn= new TableColumn();
					//tableColumn.setIdentifier(Constantes2.S_ELI);
					//tableColumn.setHeaderValue(sLabelColumnAccionEli);
					//tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.pedidoexporSessionBean.getEsGuardarRelacionado(),iSizeTabla));
					//tableColumn.setCellEditor(new IdTableCell(this,false,true,this.pedidoexporSessionBean.getEsGuardarRelacionado(),iSizeTabla));
			
					//tableColumn.setPreferredWidth(65); 	 
					//tableColumn.setWidth(65); 	 
					//tableColumn.setMinWidth(65); 
					//tableColumn.setMaxWidth(65);
					
					//this.iWidthTableDefinicion+=65;
						
					//this.jTableDatosPedidoExpor.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.pedidoexporSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false,iSizeTabla));
					tableColumn.setCellEditor(new IdTableCell(this,true,false,iSizeTabla));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosPedidoExpor.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosPedidoExpor.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarPedidoExpor && this.isPermisoGuardarCambiosPedidoExpor) {
				//iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		//iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.pedidoexporSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarPedidoExpor && this.isPermisoGuardarCambiosPedidoExpor) {
				////REUBICA ELIMINAR SIMPLE
				//jTableDatosPedidoExpor.moveColumn(this.jTableDatosPedidoExpor.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				//iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		//jTableDatosPedidoExpor.moveColumn(this.jTableDatosPedidoExpor.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.pedidoexporSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosPedidoExpor.moveColumn(this.jTableDatosPedidoExpor.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosPedidoExpor.moveColumn(this.jTableDatosPedidoExpor.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosPedidoExpor.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosPedidoExpor.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosPedidoExpor,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!PedidoExporJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosPedidoExpor.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosPedidoExpor.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!PedidoExporJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosPedidoExpor.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosPedidoExpor.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosPedidoExpor.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=pedidoexporLogic.getPedidoExpors().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=pedidoexpors.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosPedidoExpor.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosPedidoExpor.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosPedidoExpor();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoPedidoExpor=false;
					
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
			
				if(this.pedidoexporSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormPedidoExpor==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosPedidoExpor.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosPedidoExpor.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.pedidoexpor.getsType().equals("DUPLICADO")
				   || this.pedidoexpor.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoPedidoExpor=true;
				
				} else {
					this.isEsNuevoPedidoExpor=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
					if(this.pedidoexpor.getId()>=0 && !this.pedidoexpor.getIsNew()) {						
						this.isEsNuevoPedidoExpor=false;
						
					} else {
						this.isEsNuevoPedidoExpor=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoPedidoExpor(esRelaciones);						
				
				this.seleccionarPedidoExpor(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.pedidoexpor.getId()<0) {
					this.isEsNuevoPedidoExpor=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarPedidoExpor(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarPedidoExpor(evt,rowIndex);
				}	
				
				if(this.pedidoexporSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion PedidoExpor: " + this.dDif); 
					}
				}								
				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarPedidoExpor(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.pedidoexpor)) {
					if(this.pedidoexpor.getId()>0) {
						this.pedidoexpor.setIsDeleted(true);
						
						this.pedidoexporsEliminados.add(this.pedidoexpor);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.pedidoexporLogic.getPedidoExpors().remove(this.pedidoexpor);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.pedidoexpors.remove(this.pedidoexpor);				
					}
					
					
					((PedidoExporModel) this.jTableDatosPedidoExpor.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaPedidoExpor(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarPedidoExpor(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoPedidoExpor) {
			
			if(this.jInternalFrameDetalleFormPedidoExpor==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosPedidoExpor.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosPedidoExpor.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(PedidoExporJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioPedidoExpor(this.pedidoexpor);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.pedidoexporConstantesFunciones.cargarid_empresaPedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_empresaPedidoExpor) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.pedidoexpor.getid_empresa());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(pedidoexpor.getEmpresa()!=null) {
							this.empresasForeignKey.add(pedidoexpor.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.pedidoexpor.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.pedidoexporConstantesFunciones.cargarid_sucursalPedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_sucursalPedidoExpor) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.pedidoexpor.getid_sucursal());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(pedidoexpor.getSucursal()!=null) {
							this.sucursalsForeignKey.add(pedidoexpor.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.pedidoexpor.getid_sucursal(),false,"Formulario");

					//Ejercicio
					if(!this.pedidoexporConstantesFunciones.cargarid_ejercicioPedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_ejercicioPedidoExpor) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.pedidoexpor.getid_ejercicio());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(pedidoexpor.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(pedidoexpor.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.pedidoexpor.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.pedidoexporConstantesFunciones.cargarid_periodoPedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_periodoPedidoExpor) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.pedidoexpor.getid_periodo());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(pedidoexpor.getPeriodo()!=null) {
							this.periodosForeignKey.add(pedidoexpor.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.pedidoexpor.getid_periodo(),false,"Formulario");

					//Anio
					if(!this.pedidoexporConstantesFunciones.cargarid_anioPedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_anioPedidoExpor) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.pedidoexpor.getid_anio());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(pedidoexpor.getAnio()!=null) {
							this.aniosForeignKey.add(pedidoexpor.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.pedidoexpor.getid_anio(),false,"Formulario");

					//Mes
					if(!this.pedidoexporConstantesFunciones.cargarid_mesPedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_mesPedidoExpor) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.pedidoexpor.getid_mes());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(pedidoexpor.getMes()!=null) {
							this.messForeignKey.add(pedidoexpor.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.pedidoexpor.getid_mes(),false,"Formulario");

					//Usuario
					if(!this.pedidoexporConstantesFunciones.cargarid_usuarioPedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_usuarioPedidoExpor) {
						//this.cargarCombosUsuariosForeignKeyLista(" where id="+this.pedidoexpor.getid_usuario());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.usuariosForeignKey=new ArrayList<Usuario>();

						if(pedidoexpor.getUsuario()!=null) {
							this.usuariosForeignKey.add(pedidoexpor.getUsuario());
						}

						this.addItemDefectoCombosForeignKeyUsuario();
						this.cargarCombosFrameUsuariosForeignKey("Todos");
					}
					this.setActualUsuarioForeignKey(this.pedidoexpor.getid_usuario(),false,"Formulario");

					//Moneda
					if(!this.pedidoexporConstantesFunciones.cargarid_monedaPedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_monedaPedidoExpor) {
						//this.cargarCombosMonedasForeignKeyLista(" where id="+this.pedidoexpor.getid_moneda());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.monedasForeignKey=new ArrayList<Moneda>();

						if(pedidoexpor.getMoneda()!=null) {
							this.monedasForeignKey.add(pedidoexpor.getMoneda());
						}

						this.addItemDefectoCombosForeignKeyMoneda();
						this.cargarCombosFrameMonedasForeignKey("Todos");
					}
					this.setActualMonedaForeignKey(this.pedidoexpor.getid_moneda(),false,"Formulario");

					//Empleado
					if(!this.pedidoexporConstantesFunciones.cargarid_empleadoPedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_empleadoPedidoExpor) {
						//this.cargarCombosEmpleadosForeignKeyLista(" where id="+this.pedidoexpor.getid_empleado());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.empleadosForeignKey=new ArrayList<Empleado>();

						if(pedidoexpor.getEmpleado()!=null) {
							this.empleadosForeignKey.add(pedidoexpor.getEmpleado());
						}

						this.addItemDefectoCombosForeignKeyEmpleado();
						this.cargarCombosFrameEmpleadosForeignKey("Todos");
					}
					this.setActualEmpleadoForeignKey(this.pedidoexpor.getid_empleado(),false,"Formulario");

					//TipoPrecio
					if(!this.pedidoexporConstantesFunciones.cargarid_tipo_precioPedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_tipo_precioPedidoExpor) {
						//this.cargarCombosTipoPreciosForeignKeyLista(" where id="+this.pedidoexpor.getid_tipo_precio());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.tipopreciosForeignKey=new ArrayList<TipoPrecio>();

						if(pedidoexpor.getTipoPrecio()!=null) {
							this.tipopreciosForeignKey.add(pedidoexpor.getTipoPrecio());
						}

						this.addItemDefectoCombosForeignKeyTipoPrecio();
						this.cargarCombosFrameTipoPreciosForeignKey("Todos");
					}
					this.setActualTipoPrecioForeignKey(this.pedidoexpor.getid_tipo_precio(),false,"Formulario");

					//Formato
					if(!this.pedidoexporConstantesFunciones.cargarid_formatoPedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_formatoPedidoExpor) {
						//this.cargarCombosFormatosForeignKeyLista(" where id="+this.pedidoexpor.getid_formato());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.formatosForeignKey=new ArrayList<Formato>();

						if(pedidoexpor.getFormato()!=null) {
							this.formatosForeignKey.add(pedidoexpor.getFormato());
						}

						this.addItemDefectoCombosForeignKeyFormato();
						this.cargarCombosFrameFormatosForeignKey("Todos");
					}
					this.setActualFormatoForeignKey(this.pedidoexpor.getid_formato(),false,"Formulario");

					//Cliente
					if(!this.pedidoexporConstantesFunciones.cargarid_clientePedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_clientePedidoExpor) {
						//this.cargarCombosClientesForeignKeyLista(" where id="+this.pedidoexpor.getid_cliente());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.clientesForeignKey=new ArrayList<Cliente>();

						if(pedidoexpor.getCliente()!=null) {
							this.clientesForeignKey.add(pedidoexpor.getCliente());
						}

						this.addItemDefectoCombosForeignKeyCliente();
						this.cargarCombosFrameClientesForeignKey("Todos");
					}
					this.setActualClienteForeignKey(this.pedidoexpor.getid_cliente(),false,"Formulario");

					//Pais
					if(!this.pedidoexporConstantesFunciones.cargarid_paisPedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_paisPedidoExpor) {
						//this.cargarCombosPaissForeignKeyLista(" where id="+this.pedidoexpor.getid_pais());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.paissForeignKey=new ArrayList<Pais>();

						if(pedidoexpor.getPais()!=null) {
							this.paissForeignKey.add(pedidoexpor.getPais());
						}

						this.addItemDefectoCombosForeignKeyPais();
						this.cargarCombosFramePaissForeignKey("Todos");
					}
					this.setActualPaisForeignKey(this.pedidoexpor.getid_pais(),false,"Formulario");

					//Transporte
					if(!this.pedidoexporConstantesFunciones.cargarid_transportePedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_transportePedidoExpor) {
						//this.cargarCombosTransportesForeignKeyLista(" where id="+this.pedidoexpor.getid_transporte());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.transportesForeignKey=new ArrayList<Transporte>();

						if(pedidoexpor.getTransporte()!=null) {
							this.transportesForeignKey.add(pedidoexpor.getTransporte());
						}

						this.addItemDefectoCombosForeignKeyTransporte();
						this.cargarCombosFrameTransportesForeignKey("Todos");
					}
					this.setActualTransporteForeignKey(this.pedidoexpor.getid_transporte(),false,"Formulario");

					//Vendedor
					if(!this.pedidoexporConstantesFunciones.cargarid_vendedorPedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_vendedorPedidoExpor) {
						//this.cargarCombosVendedorsForeignKeyLista(" where id="+this.pedidoexpor.getid_vendedor());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.vendedorsForeignKey=new ArrayList<Vendedor>();

						if(pedidoexpor.getVendedor()!=null) {
							this.vendedorsForeignKey.add(pedidoexpor.getVendedor());
						}

						this.addItemDefectoCombosForeignKeyVendedor();
						this.cargarCombosFrameVendedorsForeignKey("Todos");
					}
					this.setActualVendedorForeignKey(this.pedidoexpor.getid_vendedor(),false,"Formulario");

					//SubCliente
					if(!this.pedidoexporConstantesFunciones.cargarid_sub_clientePedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_sub_clientePedidoExpor) {
						//this.cargarCombosSubClientesForeignKeyLista(" where id="+this.pedidoexpor.getid_sub_cliente());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.subclientesForeignKey=new ArrayList<SubCliente>();

						if(pedidoexpor.getSubCliente()!=null) {
							this.subclientesForeignKey.add(pedidoexpor.getSubCliente());
						}

						this.addItemDefectoCombosForeignKeySubCliente();
						this.cargarCombosFrameSubClientesForeignKey("Todos");
					}
					this.setActualSubClienteForeignKey(this.pedidoexpor.getid_sub_cliente(),false,"Formulario");

					//Consignatario
					if(!this.pedidoexporConstantesFunciones.cargarid_consignatarioPedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_consignatarioPedidoExpor) {
						//this.cargarCombosConsignatariosForeignKeyLista(" where id="+this.pedidoexpor.getid_consignatario());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.consignatariosForeignKey=new ArrayList<Consignatario>();

						if(pedidoexpor.getConsignatario()!=null) {
							this.consignatariosForeignKey.add(pedidoexpor.getConsignatario());
						}

						this.addItemDefectoCombosForeignKeyConsignatario();
						this.cargarCombosFrameConsignatariosForeignKey("Todos");
					}
					this.setActualConsignatarioForeignKey(this.pedidoexpor.getid_consignatario(),false,"Formulario");

					//Consultor
					if(!this.pedidoexporConstantesFunciones.cargarid_consultorPedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_consultorPedidoExpor) {
						//this.cargarCombosConsultorsForeignKeyLista(" where id="+this.pedidoexpor.getid_consultor());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.consultorsForeignKey=new ArrayList<Consultor>();

						if(pedidoexpor.getConsultor()!=null) {
							this.consultorsForeignKey.add(pedidoexpor.getConsultor());
						}

						this.addItemDefectoCombosForeignKeyConsultor();
						this.cargarCombosFrameConsultorsForeignKey("Todos");
					}
					this.setActualConsultorForeignKey(this.pedidoexpor.getid_consultor(),false,"Formulario");

					//EstadoPedidoExpor
					if(!this.pedidoexporConstantesFunciones.cargarid_estado_pedidoPedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_estado_pedidoPedidoExpor) {
						//this.cargarCombosEstadoPedidoExporsForeignKeyLista(" where id="+this.pedidoexpor.getid_estado_pedido());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.estadopedidoexporsForeignKey=new ArrayList<EstadoPedido>();

						if(pedidoexpor.getEstadoPedidoExpor()!=null) {
							this.estadopedidoexporsForeignKey.add(pedidoexpor.getEstadoPedidoExpor());
						}

						this.addItemDefectoCombosForeignKeyEstadoPedidoExpor();
						this.cargarCombosFrameEstadoPedidoExporsForeignKey("Todos");
					}
					this.setActualEstadoPedidoExporForeignKey(this.pedidoexpor.getid_estado_pedido(),false,"Formulario");

					//TipoCambio
					if(!this.pedidoexporConstantesFunciones.cargarid_tipo_cambioPedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_tipo_cambioPedidoExpor) {
						//this.cargarCombosTipoCambiosForeignKeyLista(" where id="+this.pedidoexpor.getid_tipo_cambio());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.tipocambiosForeignKey=new ArrayList<TipoCambio>();

						if(pedidoexpor.getTipoCambio()!=null) {
							this.tipocambiosForeignKey.add(pedidoexpor.getTipoCambio());
						}

						this.addItemDefectoCombosForeignKeyTipoCambio();
						this.cargarCombosFrameTipoCambiosForeignKey("Todos");
					}
					this.setActualTipoCambioForeignKey(this.pedidoexpor.getid_tipo_cambio(),false,"Formulario");

					//CentroCosto
					if(!this.pedidoexporConstantesFunciones.cargarid_centro_costoPedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_centro_costoPedidoExpor) {
						//this.cargarCombosCentroCostosForeignKeyLista(" where id="+this.pedidoexpor.getid_centro_costo());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.centrocostosForeignKey=new ArrayList<CentroCosto>();

						if(pedidoexpor.getCentroCosto()!=null) {
							this.centrocostosForeignKey.add(pedidoexpor.getCentroCosto());
						}

						this.addItemDefectoCombosForeignKeyCentroCosto();
						this.cargarCombosFrameCentroCostosForeignKey("Todos");
					}
					this.setActualCentroCostoForeignKey(this.pedidoexpor.getid_centro_costo(),false,"Formulario");

					//Responsable
					if(!this.pedidoexporConstantesFunciones.cargarid_responsablePedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_responsablePedidoExpor) {
						//this.cargarCombosResponsablesForeignKeyLista(" where id="+this.pedidoexpor.getid_responsable());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.responsablesForeignKey=new ArrayList<Responsable>();

						if(pedidoexpor.getResponsable()!=null) {
							this.responsablesForeignKey.add(pedidoexpor.getResponsable());
						}

						this.addItemDefectoCombosForeignKeyResponsable();
						this.cargarCombosFrameResponsablesForeignKey("Todos");
					}
					this.setActualResponsableForeignKey(this.pedidoexpor.getid_responsable(),false,"Formulario");

					//Transportista
					if(!this.pedidoexporConstantesFunciones.cargarid_transportistaPedidoExpor || this.pedidoexporConstantesFunciones.event_dependid_transportistaPedidoExpor) {
						//this.cargarCombosTransportistasForeignKeyLista(" where id="+this.pedidoexpor.getid_transportista());
									//this.inicializarActualizarBindingPedidoExpor(false,false);
						this.transportistasForeignKey=new ArrayList<Transportista>();

						if(pedidoexpor.getTransportista()!=null) {
							this.transportistasForeignKey.add(pedidoexpor.getTransportista());
						}

						this.addItemDefectoCombosForeignKeyTransportista();
						this.cargarCombosFrameTransportistasForeignKey("Todos");
					}
					this.setActualTransportistaForeignKey(this.pedidoexpor.getid_transportista(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesPedidoExpor("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesPedidoExpor(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualPedidoExpor() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoPedidoExpor(PedidoExpor pedidoexpor) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoPedidoExpor(pedidoexpor,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoPedidoExpor(PedidoExpor pedidoexpor,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioPedidoExpor(pedidoexpor);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyPedidoExpor(pedidoexpor,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyPedidoExpor(pedidoexpor);
	}
	
	public void setVariablesObjetoActualToFormularioPedidoExpor(PedidoExpor pedidoexpor) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormPedidoExpor==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormPedidoExpor.jLabelidPedidoExpor.setText(pedidoexpor.getId().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumeroPedidoExpor.setText(pedidoexpor.getnumero());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumero_preimpresoPedidoExpor.setText(pedidoexpor.getnumero_preimpreso());
			this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfecha_emisionPedidoExpor.setDate(pedidoexpor.getfecha_emision());
			this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfecha_vencimientoPedidoExpor.setDate(pedidoexpor.getfecha_vencimiento());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldcotizacionPedidoExpor.setText(pedidoexpor.getcotizacion().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextAreadireccionPedidoExpor.setText(pedidoexpor.getdireccion());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtelefonoPedidoExpor.setText(pedidoexpor.gettelefono());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldrucPedidoExpor.setText(pedidoexpor.getruc());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldlugar_entregaPedidoExpor.setText(pedidoexpor.getlugar_entrega());
			this.jInternalFrameDetalleFormPedidoExpor.jTextAreaembarquePedidoExpor.setText(pedidoexpor.getembarque());
			this.jInternalFrameDetalleFormPedidoExpor.jTextAreanegociacionPedidoExpor.setText(pedidoexpor.getnegociacion());
			this.jInternalFrameDetalleFormPedidoExpor.jTextAreaforma_pagoPedidoExpor.setText(pedidoexpor.getforma_pago());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldordenPedidoExpor.setText(pedidoexpor.getorden());
			this.jInternalFrameDetalleFormPedidoExpor.jTextAreadescripcionPedidoExpor.setText(pedidoexpor.getdescripcion());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldmontoPedidoExpor.setText(pedidoexpor.getmonto().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsaldoPedidoExpor.setText(pedidoexpor.getsaldo().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFielddisponiblePedidoExpor.setText(pedidoexpor.getdisponible().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFielddescuento_porcentajePedidoExpor.setText(pedidoexpor.getdescuento_porcentaje().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_con_ivaPedidoExpor.setText(pedidoexpor.gettotal_con_iva().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsumanPedidoExpor.setText(pedidoexpor.getsuman().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFielddescuento_valorPedidoExpor.setText(pedidoexpor.getdescuento_valor().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_sin_ivaPedidoExpor.setText(pedidoexpor.gettotal_sin_iva().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_descuentoPedidoExpor.setText(pedidoexpor.gettotal_descuento().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldfletePedidoExpor.setText(pedidoexpor.getflete().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotalPedidoExpor.setText(pedidoexpor.gettotal().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsubtotalPedidoExpor.setText(pedidoexpor.getsubtotal().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsegurosPedidoExpor.setText(pedidoexpor.getseguros().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldivaPedidoExpor.setText(pedidoexpor.getiva().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldfinanciamientoPedidoExpor.setText(pedidoexpor.getfinanciamiento().toString());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,PedidoExpor pedidoexporLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,pedidoexporLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,PedidoExpor pedidoexporLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				pedidoexporLocal=this.pedidoexpor;
			} else {
				pedidoexporLocal=this.pedidoexporAnterior;
			}
		}
		
		if(this.permiteMantenimiento(pedidoexporLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoPedidoExpor(pedidoexporLocal,true);
					
					if(pedidoexporSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(pedidoexporLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(pedidoexporLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoPedidoExpor(PedidoExpor pedidoexpor,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualPedidoExpor(pedidoexpor,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(pedidoexpor);
	}
	
	public void setVariablesFormularioToObjetoActualPedidoExpor(PedidoExpor pedidoexpor,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualPedidoExpor(pedidoexpor,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualPedidoExpor(PedidoExpor pedidoexpor,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormPedidoExpor==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormPedidoExpor.jLabelidPedidoExpor.getText()==null || this.jInternalFrameDetalleFormPedidoExpor.jLabelidPedidoExpor.getText()=="" || this.jInternalFrameDetalleFormPedidoExpor.jLabelidPedidoExpor.getText()=="Id") {
				this.jInternalFrameDetalleFormPedidoExpor.jLabelidPedidoExpor.setText("0");
			}

			if(conColumnasBase) {pedidoexpor.setId(Long.parseLong(this.jInternalFrameDetalleFormPedidoExpor.jLabelidPedidoExpor.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelIdPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setnumero(this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumeroPedidoExpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_NUMERO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelnumeroPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setnumero_preimpreso(this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumero_preimpresoPedidoExpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_NUMEROAUTORIZACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelnumero_preimpresoPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setfecha_emision(this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfecha_emisionPedidoExpor.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_FECHAEMISION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelfecha_emisionPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setfecha_vencimiento(this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfecha_vencimientoPedidoExpor.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_FECHAVENCIMIENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelfecha_vencimientoPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setcotizacion(Double.parseDouble(this.jInternalFrameDetalleFormPedidoExpor.jTextFieldcotizacionPedidoExpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_COTIZACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelcotizacionPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setdireccion(this.jInternalFrameDetalleFormPedidoExpor.jTextAreadireccionPedidoExpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_DIRECCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabeldireccionPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.settelefono(this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtelefonoPedidoExpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_TELEFONO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabeltelefonoPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setruc(this.jInternalFrameDetalleFormPedidoExpor.jTextFieldrucPedidoExpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_RUC+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelrucPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setlugar_entrega(this.jInternalFrameDetalleFormPedidoExpor.jTextFieldlugar_entregaPedidoExpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_LUGARENTREGA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabellugar_entregaPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setembarque(this.jInternalFrameDetalleFormPedidoExpor.jTextAreaembarquePedidoExpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_EMBARQUE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelembarquePedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setnegociacion(this.jInternalFrameDetalleFormPedidoExpor.jTextAreanegociacionPedidoExpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_NEGOCIACION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelnegociacionPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setforma_pago(this.jInternalFrameDetalleFormPedidoExpor.jTextAreaforma_pagoPedidoExpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_FORMAPAGO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelforma_pagoPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setorden(this.jInternalFrameDetalleFormPedidoExpor.jTextFieldordenPedidoExpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_ORDEN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelordenPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setdescripcion(this.jInternalFrameDetalleFormPedidoExpor.jTextAreadescripcionPedidoExpor.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_DESCRIPCION+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabeldescripcionPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setmonto(Double.parseDouble(this.jInternalFrameDetalleFormPedidoExpor.jTextFieldmontoPedidoExpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_MONTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelmontoPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setsaldo(Double.parseDouble(this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsaldoPedidoExpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_SALDO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelsaldoPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setdisponible(Double.parseDouble(this.jInternalFrameDetalleFormPedidoExpor.jTextFielddisponiblePedidoExpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_DISPONIBLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabeldisponiblePedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setdescuento_porcentaje(Double.parseDouble(this.jInternalFrameDetalleFormPedidoExpor.jTextFielddescuento_porcentajePedidoExpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_DESCUENTOPORCENTAJE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabeldescuento_porcentajePedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.settotal_con_iva(Double.parseDouble(this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_con_ivaPedidoExpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_TOTALCONIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabeltotal_con_ivaPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setsuman(Double.parseDouble(this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsumanPedidoExpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_SUMAN+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelsumanPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setdescuento_valor(Double.parseDouble(this.jInternalFrameDetalleFormPedidoExpor.jTextFielddescuento_valorPedidoExpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_DESCUENTOVALOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabeldescuento_valorPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.settotal_sin_iva(Double.parseDouble(this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_sin_ivaPedidoExpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_TOTALSINIVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabeltotal_sin_ivaPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.settotal_descuento(Double.parseDouble(this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_descuentoPedidoExpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_TOTALDESCUENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabeltotal_descuentoPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setflete(Double.parseDouble(this.jInternalFrameDetalleFormPedidoExpor.jTextFieldfletePedidoExpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_FLETE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelfletePedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.settotal(Double.parseDouble(this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotalPedidoExpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_TOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabeltotalPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setsubtotal(Double.parseDouble(this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsubtotalPedidoExpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_SUBTOTAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelsubtotalPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setseguros(Double.parseDouble(this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsegurosPedidoExpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_SEGUROS+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelsegurosPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setiva(Double.parseDouble(this.jInternalFrameDetalleFormPedidoExpor.jTextFieldivaPedidoExpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_IVA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelivaPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			pedidoexpor.setfinanciamiento(Double.parseDouble(this.jInternalFrameDetalleFormPedidoExpor.jTextFieldfinanciamientoPedidoExpor.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+PedidoExporConstantesFunciones.LABEL_FINANCIAMIENTO+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormPedidoExpor.jLabelfinanciamientoPedidoExpor,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualPedidoExpor(PedidoExpor pedidoexporBean,PedidoExpor pedidoexpor,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosPedidoExpor(PedidoExpor pedidoexporOrigen,PedidoExpor pedidoexpor,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && pedidoexporOrigen.getId()!=null && !pedidoexporOrigen.getId().equals(0L))) {pedidoexpor.setId(pedidoexporOrigen.getId());}}
			if(conDefault || (!conDefault && pedidoexporOrigen.getnumero()!=null && !pedidoexporOrigen.getnumero().equals(""))) {pedidoexpor.setnumero(pedidoexporOrigen.getnumero());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getnumero_preimpreso()!=null && !pedidoexporOrigen.getnumero_preimpreso().equals(""))) {pedidoexpor.setnumero_preimpreso(pedidoexporOrigen.getnumero_preimpreso());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getfecha_emision()!=null && !pedidoexporOrigen.getfecha_emision().equals(new Date()))) {pedidoexpor.setfecha_emision(pedidoexporOrigen.getfecha_emision());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getfecha_vencimiento()!=null && !pedidoexporOrigen.getfecha_vencimiento().equals(new Date()))) {pedidoexpor.setfecha_vencimiento(pedidoexporOrigen.getfecha_vencimiento());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getcotizacion()!=null && !pedidoexporOrigen.getcotizacion().equals(0.0))) {pedidoexpor.setcotizacion(pedidoexporOrigen.getcotizacion());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getdireccion()!=null && !pedidoexporOrigen.getdireccion().equals(""))) {pedidoexpor.setdireccion(pedidoexporOrigen.getdireccion());}
			if(conDefault || (!conDefault && pedidoexporOrigen.gettelefono()!=null && !pedidoexporOrigen.gettelefono().equals(""))) {pedidoexpor.settelefono(pedidoexporOrigen.gettelefono());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getruc()!=null && !pedidoexporOrigen.getruc().equals(""))) {pedidoexpor.setruc(pedidoexporOrigen.getruc());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getlugar_entrega()!=null && !pedidoexporOrigen.getlugar_entrega().equals(""))) {pedidoexpor.setlugar_entrega(pedidoexporOrigen.getlugar_entrega());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getembarque()!=null && !pedidoexporOrigen.getembarque().equals(""))) {pedidoexpor.setembarque(pedidoexporOrigen.getembarque());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getnegociacion()!=null && !pedidoexporOrigen.getnegociacion().equals(""))) {pedidoexpor.setnegociacion(pedidoexporOrigen.getnegociacion());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getforma_pago()!=null && !pedidoexporOrigen.getforma_pago().equals(""))) {pedidoexpor.setforma_pago(pedidoexporOrigen.getforma_pago());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getorden()!=null && !pedidoexporOrigen.getorden().equals(""))) {pedidoexpor.setorden(pedidoexporOrigen.getorden());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getdescripcion()!=null && !pedidoexporOrigen.getdescripcion().equals(""))) {pedidoexpor.setdescripcion(pedidoexporOrigen.getdescripcion());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getmonto()!=null && !pedidoexporOrigen.getmonto().equals(0.0))) {pedidoexpor.setmonto(pedidoexporOrigen.getmonto());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getsaldo()!=null && !pedidoexporOrigen.getsaldo().equals(0.0))) {pedidoexpor.setsaldo(pedidoexporOrigen.getsaldo());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getdisponible()!=null && !pedidoexporOrigen.getdisponible().equals(0.0))) {pedidoexpor.setdisponible(pedidoexporOrigen.getdisponible());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getdescuento_porcentaje()!=null && !pedidoexporOrigen.getdescuento_porcentaje().equals(0.0))) {pedidoexpor.setdescuento_porcentaje(pedidoexporOrigen.getdescuento_porcentaje());}
			if(conDefault || (!conDefault && pedidoexporOrigen.gettotal_con_iva()!=null && !pedidoexporOrigen.gettotal_con_iva().equals(0.0))) {pedidoexpor.settotal_con_iva(pedidoexporOrigen.gettotal_con_iva());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getsuman()!=null && !pedidoexporOrigen.getsuman().equals(0.0))) {pedidoexpor.setsuman(pedidoexporOrigen.getsuman());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getdescuento_valor()!=null && !pedidoexporOrigen.getdescuento_valor().equals(0.0))) {pedidoexpor.setdescuento_valor(pedidoexporOrigen.getdescuento_valor());}
			if(conDefault || (!conDefault && pedidoexporOrigen.gettotal_sin_iva()!=null && !pedidoexporOrigen.gettotal_sin_iva().equals(0.0))) {pedidoexpor.settotal_sin_iva(pedidoexporOrigen.gettotal_sin_iva());}
			if(conDefault || (!conDefault && pedidoexporOrigen.gettotal_descuento()!=null && !pedidoexporOrigen.gettotal_descuento().equals(0.0))) {pedidoexpor.settotal_descuento(pedidoexporOrigen.gettotal_descuento());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getflete()!=null && !pedidoexporOrigen.getflete().equals(0.0))) {pedidoexpor.setflete(pedidoexporOrigen.getflete());}
			if(conDefault || (!conDefault && pedidoexporOrigen.gettotal()!=null && !pedidoexporOrigen.gettotal().equals(0.0))) {pedidoexpor.settotal(pedidoexporOrigen.gettotal());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getsubtotal()!=null && !pedidoexporOrigen.getsubtotal().equals(0.0))) {pedidoexpor.setsubtotal(pedidoexporOrigen.getsubtotal());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getseguros()!=null && !pedidoexporOrigen.getseguros().equals(0.0))) {pedidoexpor.setseguros(pedidoexporOrigen.getseguros());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getiva()!=null && !pedidoexporOrigen.getiva().equals(0.0))) {pedidoexpor.setiva(pedidoexporOrigen.getiva());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getfinanciamiento()!=null && !pedidoexporOrigen.getfinanciamiento().equals(0.0))) {pedidoexpor.setfinanciamiento(pedidoexporOrigen.getfinanciamiento());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getmonto_retencion()!=null && !pedidoexporOrigen.getmonto_retencion().equals(0.0))) {pedidoexpor.setmonto_retencion(pedidoexporOrigen.getmonto_retencion());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getotro()!=null && !pedidoexporOrigen.getotro().equals(0.0))) {pedidoexpor.setotro(pedidoexporOrigen.getotro());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getice()!=null && !pedidoexporOrigen.getice().equals(0.0))) {pedidoexpor.setice(pedidoexporOrigen.getice());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getfecha()!=null && !pedidoexporOrigen.getfecha().equals(new Date()))) {pedidoexpor.setfecha(pedidoexporOrigen.getfecha());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getfecha_servidor()!=null && !pedidoexporOrigen.getfecha_servidor().equals(new Date()))) {pedidoexpor.setfecha_servidor(pedidoexporOrigen.getfecha_servidor());}
			if(conDefault || (!conDefault && pedidoexporOrigen.getnumero_fue()!=null && !pedidoexporOrigen.getnumero_fue().equals(""))) {pedidoexpor.setnumero_fue(pedidoexporOrigen.getnumero_fue());}
			if(conDefault || (!conDefault && pedidoexporOrigen.gethora_inicio()!=null && !pedidoexporOrigen.gethora_inicio().equals(new Time((new Date()).getTime())))) {pedidoexpor.sethora_inicio(pedidoexporOrigen.gethora_inicio());}
			if(conDefault || (!conDefault && pedidoexporOrigen.gethora_fin()!=null && !pedidoexporOrigen.gethora_fin().equals(new Time((new Date()).getTime())))) {pedidoexpor.sethora_fin(pedidoexporOrigen.gethora_fin());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioPedidoExpor(PedidoExpor pedidoexpor) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormPedidoExpor.jLabelidPedidoExpor.setText(pedidoexpor.getId().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumeroPedidoExpor.setText(pedidoexpor.getnumero());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumero_preimpresoPedidoExpor.setText(pedidoexpor.getnumero_preimpreso());
			this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfecha_emisionPedidoExpor.setDate(pedidoexpor.getfecha_emision());
			this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfecha_vencimientoPedidoExpor.setDate(pedidoexpor.getfecha_vencimiento());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldcotizacionPedidoExpor.setText(pedidoexpor.getcotizacion().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextAreadireccionPedidoExpor.setText(pedidoexpor.getdireccion());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtelefonoPedidoExpor.setText(pedidoexpor.gettelefono());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldrucPedidoExpor.setText(pedidoexpor.getruc());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldlugar_entregaPedidoExpor.setText(pedidoexpor.getlugar_entrega());
			this.jInternalFrameDetalleFormPedidoExpor.jTextAreaembarquePedidoExpor.setText(pedidoexpor.getembarque());
			this.jInternalFrameDetalleFormPedidoExpor.jTextAreanegociacionPedidoExpor.setText(pedidoexpor.getnegociacion());
			this.jInternalFrameDetalleFormPedidoExpor.jTextAreaforma_pagoPedidoExpor.setText(pedidoexpor.getforma_pago());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldordenPedidoExpor.setText(pedidoexpor.getorden());
			this.jInternalFrameDetalleFormPedidoExpor.jTextAreadescripcionPedidoExpor.setText(pedidoexpor.getdescripcion());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldmontoPedidoExpor.setText(pedidoexpor.getmonto().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsaldoPedidoExpor.setText(pedidoexpor.getsaldo().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFielddisponiblePedidoExpor.setText(pedidoexpor.getdisponible().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFielddescuento_porcentajePedidoExpor.setText(pedidoexpor.getdescuento_porcentaje().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_con_ivaPedidoExpor.setText(pedidoexpor.gettotal_con_iva().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsumanPedidoExpor.setText(pedidoexpor.getsuman().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFielddescuento_valorPedidoExpor.setText(pedidoexpor.getdescuento_valor().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_sin_ivaPedidoExpor.setText(pedidoexpor.gettotal_sin_iva().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_descuentoPedidoExpor.setText(pedidoexpor.gettotal_descuento().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldfletePedidoExpor.setText(pedidoexpor.getflete().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotalPedidoExpor.setText(pedidoexpor.gettotal().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsubtotalPedidoExpor.setText(pedidoexpor.getsubtotal().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsegurosPedidoExpor.setText(pedidoexpor.getseguros().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldivaPedidoExpor.setText(pedidoexpor.getiva().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldfinanciamientoPedidoExpor.setText(pedidoexpor.getfinanciamiento().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioPedidoExpor(PedidoExporBean pedidoexporBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormPedidoExpor.jLabelidPedidoExpor.setText(pedidoexporBean.getId().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumeroPedidoExpor.setText(pedidoexporBean.getnumero());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumero_preimpresoPedidoExpor.setText(pedidoexporBean.getnumero_preimpreso());
			this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfecha_emisionPedidoExpor.setDate(pedidoexporBean.getfecha_emision());
			this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfecha_vencimientoPedidoExpor.setDate(pedidoexporBean.getfecha_vencimiento());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldcotizacionPedidoExpor.setText(pedidoexporBean.getcotizacion().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextAreadireccionPedidoExpor.setText(pedidoexporBean.getdireccion());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtelefonoPedidoExpor.setText(pedidoexporBean.gettelefono());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldrucPedidoExpor.setText(pedidoexporBean.getruc());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldlugar_entregaPedidoExpor.setText(pedidoexporBean.getlugar_entrega());
			this.jInternalFrameDetalleFormPedidoExpor.jTextAreaembarquePedidoExpor.setText(pedidoexporBean.getembarque());
			this.jInternalFrameDetalleFormPedidoExpor.jTextAreanegociacionPedidoExpor.setText(pedidoexporBean.getnegociacion());
			this.jInternalFrameDetalleFormPedidoExpor.jTextAreaforma_pagoPedidoExpor.setText(pedidoexporBean.getforma_pago());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldordenPedidoExpor.setText(pedidoexporBean.getorden());
			this.jInternalFrameDetalleFormPedidoExpor.jTextAreadescripcionPedidoExpor.setText(pedidoexporBean.getdescripcion());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldmontoPedidoExpor.setText(pedidoexporBean.getmonto().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsaldoPedidoExpor.setText(pedidoexporBean.getsaldo().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFielddisponiblePedidoExpor.setText(pedidoexporBean.getdisponible().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFielddescuento_porcentajePedidoExpor.setText(pedidoexporBean.getdescuento_porcentaje().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_con_ivaPedidoExpor.setText(pedidoexporBean.gettotal_con_iva().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsumanPedidoExpor.setText(pedidoexporBean.getsuman().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFielddescuento_valorPedidoExpor.setText(pedidoexporBean.getdescuento_valor().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_sin_ivaPedidoExpor.setText(pedidoexporBean.gettotal_sin_iva().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_descuentoPedidoExpor.setText(pedidoexporBean.gettotal_descuento().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldfletePedidoExpor.setText(pedidoexporBean.getflete().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotalPedidoExpor.setText(pedidoexporBean.gettotal().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsubtotalPedidoExpor.setText(pedidoexporBean.getsubtotal().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsegurosPedidoExpor.setText(pedidoexporBean.getseguros().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldivaPedidoExpor.setText(pedidoexporBean.getiva().toString());
			this.jInternalFrameDetalleFormPedidoExpor.jTextFieldfinanciamientoPedidoExpor.setText(pedidoexporBean.getfinanciamiento().toString());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanPedidoExpor(PedidoExporParameterReturnGeneral pedidoexporReturnGeneral,PedidoExporBean pedidoexporBean,Boolean conDefault) throws Exception { 
		try {
			PedidoExpor pedidoexporLocal=new PedidoExpor();
			
			pedidoexporLocal=pedidoexporReturnGeneral.getPedidoExpor();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && pedidoexporLocal.getId()!=null && !pedidoexporLocal.getId().equals(0L))) {pedidoexporBean.setId(pedidoexporLocal.getId());}}
			if(conDefault || (!conDefault && pedidoexporLocal.getnumero()!=null && !pedidoexporLocal.getnumero().equals(""))) {pedidoexporBean.setnumero(pedidoexporLocal.getnumero());}
			if(conDefault || (!conDefault && pedidoexporLocal.getnumero_preimpreso()!=null && !pedidoexporLocal.getnumero_preimpreso().equals(""))) {pedidoexporBean.setnumero_preimpreso(pedidoexporLocal.getnumero_preimpreso());}
			if(conDefault || (!conDefault && pedidoexporLocal.getfecha_emision()!=null && !pedidoexporLocal.getfecha_emision().equals(new Date()))) {pedidoexporBean.setfecha_emision(pedidoexporLocal.getfecha_emision());}
			if(conDefault || (!conDefault && pedidoexporLocal.getfecha_vencimiento()!=null && !pedidoexporLocal.getfecha_vencimiento().equals(new Date()))) {pedidoexporBean.setfecha_vencimiento(pedidoexporLocal.getfecha_vencimiento());}
			if(conDefault || (!conDefault && pedidoexporLocal.getcotizacion()!=null && !pedidoexporLocal.getcotizacion().equals(0.0))) {pedidoexporBean.setcotizacion(pedidoexporLocal.getcotizacion());}
			if(conDefault || (!conDefault && pedidoexporLocal.getdireccion()!=null && !pedidoexporLocal.getdireccion().equals(""))) {pedidoexporBean.setdireccion(pedidoexporLocal.getdireccion());}
			if(conDefault || (!conDefault && pedidoexporLocal.gettelefono()!=null && !pedidoexporLocal.gettelefono().equals(""))) {pedidoexporBean.settelefono(pedidoexporLocal.gettelefono());}
			if(conDefault || (!conDefault && pedidoexporLocal.getruc()!=null && !pedidoexporLocal.getruc().equals(""))) {pedidoexporBean.setruc(pedidoexporLocal.getruc());}
			if(conDefault || (!conDefault && pedidoexporLocal.getlugar_entrega()!=null && !pedidoexporLocal.getlugar_entrega().equals(""))) {pedidoexporBean.setlugar_entrega(pedidoexporLocal.getlugar_entrega());}
			if(conDefault || (!conDefault && pedidoexporLocal.getembarque()!=null && !pedidoexporLocal.getembarque().equals(""))) {pedidoexporBean.setembarque(pedidoexporLocal.getembarque());}
			if(conDefault || (!conDefault && pedidoexporLocal.getnegociacion()!=null && !pedidoexporLocal.getnegociacion().equals(""))) {pedidoexporBean.setnegociacion(pedidoexporLocal.getnegociacion());}
			if(conDefault || (!conDefault && pedidoexporLocal.getforma_pago()!=null && !pedidoexporLocal.getforma_pago().equals(""))) {pedidoexporBean.setforma_pago(pedidoexporLocal.getforma_pago());}
			if(conDefault || (!conDefault && pedidoexporLocal.getorden()!=null && !pedidoexporLocal.getorden().equals(""))) {pedidoexporBean.setorden(pedidoexporLocal.getorden());}
			if(conDefault || (!conDefault && pedidoexporLocal.getdescripcion()!=null && !pedidoexporLocal.getdescripcion().equals(""))) {pedidoexporBean.setdescripcion(pedidoexporLocal.getdescripcion());}
			if(conDefault || (!conDefault && pedidoexporLocal.getmonto()!=null && !pedidoexporLocal.getmonto().equals(0.0))) {pedidoexporBean.setmonto(pedidoexporLocal.getmonto());}
			if(conDefault || (!conDefault && pedidoexporLocal.getsaldo()!=null && !pedidoexporLocal.getsaldo().equals(0.0))) {pedidoexporBean.setsaldo(pedidoexporLocal.getsaldo());}
			if(conDefault || (!conDefault && pedidoexporLocal.getdisponible()!=null && !pedidoexporLocal.getdisponible().equals(0.0))) {pedidoexporBean.setdisponible(pedidoexporLocal.getdisponible());}
			if(conDefault || (!conDefault && pedidoexporLocal.getdescuento_porcentaje()!=null && !pedidoexporLocal.getdescuento_porcentaje().equals(0.0))) {pedidoexporBean.setdescuento_porcentaje(pedidoexporLocal.getdescuento_porcentaje());}
			if(conDefault || (!conDefault && pedidoexporLocal.gettotal_con_iva()!=null && !pedidoexporLocal.gettotal_con_iva().equals(0.0))) {pedidoexporBean.settotal_con_iva(pedidoexporLocal.gettotal_con_iva());}
			if(conDefault || (!conDefault && pedidoexporLocal.getsuman()!=null && !pedidoexporLocal.getsuman().equals(0.0))) {pedidoexporBean.setsuman(pedidoexporLocal.getsuman());}
			if(conDefault || (!conDefault && pedidoexporLocal.getdescuento_valor()!=null && !pedidoexporLocal.getdescuento_valor().equals(0.0))) {pedidoexporBean.setdescuento_valor(pedidoexporLocal.getdescuento_valor());}
			if(conDefault || (!conDefault && pedidoexporLocal.gettotal_sin_iva()!=null && !pedidoexporLocal.gettotal_sin_iva().equals(0.0))) {pedidoexporBean.settotal_sin_iva(pedidoexporLocal.gettotal_sin_iva());}
			if(conDefault || (!conDefault && pedidoexporLocal.gettotal_descuento()!=null && !pedidoexporLocal.gettotal_descuento().equals(0.0))) {pedidoexporBean.settotal_descuento(pedidoexporLocal.gettotal_descuento());}
			if(conDefault || (!conDefault && pedidoexporLocal.getflete()!=null && !pedidoexporLocal.getflete().equals(0.0))) {pedidoexporBean.setflete(pedidoexporLocal.getflete());}
			if(conDefault || (!conDefault && pedidoexporLocal.gettotal()!=null && !pedidoexporLocal.gettotal().equals(0.0))) {pedidoexporBean.settotal(pedidoexporLocal.gettotal());}
			if(conDefault || (!conDefault && pedidoexporLocal.getsubtotal()!=null && !pedidoexporLocal.getsubtotal().equals(0.0))) {pedidoexporBean.setsubtotal(pedidoexporLocal.getsubtotal());}
			if(conDefault || (!conDefault && pedidoexporLocal.getseguros()!=null && !pedidoexporLocal.getseguros().equals(0.0))) {pedidoexporBean.setseguros(pedidoexporLocal.getseguros());}
			if(conDefault || (!conDefault && pedidoexporLocal.getiva()!=null && !pedidoexporLocal.getiva().equals(0.0))) {pedidoexporBean.setiva(pedidoexporLocal.getiva());}
			if(conDefault || (!conDefault && pedidoexporLocal.getfinanciamiento()!=null && !pedidoexporLocal.getfinanciamiento().equals(0.0))) {pedidoexporBean.setfinanciamiento(pedidoexporLocal.getfinanciamiento());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxPedidoExporGenerico(Long idPedidoExporSeleccionado,JComboBox jComboBoxPedidoExpor,List<PedidoExpor> pedidoexporsLocal)throws Exception {
		try {
			PedidoExpor  pedidoexporTemp=null;

			for(PedidoExpor pedidoexporAux:pedidoexporsLocal) {
				if(pedidoexporAux.getId()!=null && pedidoexporAux.getId().equals(idPedidoExporSeleccionado)) {
					pedidoexporTemp=pedidoexporAux;
					break;
				}
			}

			jComboBoxPedidoExpor.setSelectedItem(pedidoexporTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxPedidoExporGenerico(JComboBox jComboBoxPedidoExpor,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxPedidoExpor.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxPedidoExpor.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxPedidoExpor.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxPedidoExpor.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxPedidoExpor.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxPedidoExpor.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxPedidoExpor.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxPedidoExpor.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxPedidoExpor.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxPedidoExpor.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("DetallePedidoExpor")) {
			jButtonDetallePedidoExporActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			pedidoexpor=(PedidoExpor) pedidoexporLogic.getPedidoExpors().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			pedidoexpor =(PedidoExpor) pedidoexpors.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.getmes_descripcion();
			}
		}

		if(sTipo.equals("Usuario")) {
			//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.getusuario_descripcion();
			} else {
				//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.getusuario_descripcion();
			}
		}

		if(sTipo.equals("Moneda")) {
			//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.getmoneda_descripcion();
			} else {
				//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.getmoneda_descripcion();
			}
		}

		if(sTipo.equals("Empleado")) {
			//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.getempleado_descripcion();
			} else {
				//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.getempleado_descripcion();
			}
		}

		if(sTipo.equals("TipoPrecio")) {
			//sDescripcion=this.getActualTipoPrecioForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.gettipoprecio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoPrecioForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.gettipoprecio_descripcion();
			}
		}

		if(sTipo.equals("Formato")) {
			//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.getformato_descripcion();
			} else {
				//sDescripcion=this.getActualFormatoForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.getformato_descripcion();
			}
		}

		if(sTipo.equals("Cliente")) {
			//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.getcliente_descripcion();
			} else {
				//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.getcliente_descripcion();
			}
		}

		if(sTipo.equals("Pais")) {
			//sDescripcion=this.getActualPaisForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.getpais_descripcion();
			} else {
				//sDescripcion=this.getActualPaisForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.getpais_descripcion();
			}
		}

		if(sTipo.equals("Transporte")) {
			//sDescripcion=this.getActualTransporteForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.gettransporte_descripcion();
			} else {
				//sDescripcion=this.getActualTransporteForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.gettransporte_descripcion();
			}
		}

		if(sTipo.equals("Vendedor")) {
			//sDescripcion=this.getActualVendedorForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.getvendedor_descripcion();
			} else {
				//sDescripcion=this.getActualVendedorForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.getvendedor_descripcion();
			}
		}

		if(sTipo.equals("SubCliente")) {
			//sDescripcion=this.getActualSubClienteForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.getsubcliente_descripcion();
			} else {
				//sDescripcion=this.getActualSubClienteForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.getsubcliente_descripcion();
			}
		}

		if(sTipo.equals("Consignatario")) {
			//sDescripcion=this.getActualConsignatarioForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.getconsignatario_descripcion();
			} else {
				//sDescripcion=this.getActualConsignatarioForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.getconsignatario_descripcion();
			}
		}

		if(sTipo.equals("Consultor")) {
			//sDescripcion=this.getActualConsultorForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.getconsultor_descripcion();
			} else {
				//sDescripcion=this.getActualConsultorForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.getconsultor_descripcion();
			}
		}

		if(sTipo.equals("EstadoPedidoExpor")) {
			//sDescripcion=this.getActualEstadoPedidoExporForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.getestadopedidoexpor_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoPedidoExporForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.getestadopedidoexpor_descripcion();
			}
		}

		if(sTipo.equals("TipoCambio")) {
			//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.gettipocambio_descripcion();
			} else {
				//sDescripcion=this.getActualTipoCambioForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.gettipocambio_descripcion();
			}
		}

		if(sTipo.equals("CentroCosto")) {
			//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.getcentrocosto_descripcion();
			} else {
				//sDescripcion=this.getActualCentroCostoForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.getcentrocosto_descripcion();
			}
		}

		if(sTipo.equals("Responsable")) {
			//sDescripcion=this.getActualResponsableForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.getresponsable_descripcion();
			} else {
				//sDescripcion=this.getActualResponsableForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.getresponsable_descripcion();
			}
		}

		if(sTipo.equals("Transportista")) {
			//sDescripcion=this.getActualTransportistaForeignKeyDescripcion((Long)value);
			if(!pedidoexpor.getIsNew() && !pedidoexpor.getIsChanged() && !pedidoexpor.getIsDeleted()) {
				sDescripcion=pedidoexpor.gettransportista_descripcion();
			} else {
				//sDescripcion=this.getActualTransportistaForeignKeyDescripcion((Long)value);
				sDescripcion=pedidoexpor.gettransportista_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		PedidoExpor pedidoexporRow=new PedidoExpor();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			pedidoexporRow=(PedidoExpor) pedidoexporLogic.getPedidoExpors().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			pedidoexporRow=(PedidoExpor) pedidoexpors.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("EstadoPedidoExpor")) {
			color=FuncionesSwing.getColorGeneral(pedidoexporRow.getEstadoPedidoExpor().getid_color_general());
		}

		
		return color;
	}
	
	
	
	
	public void jButtonDetallePedidoExporActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,PedidoExpor pedidoexpor) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormPedidoExpor==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor = (PedidoExpor)this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.pedidoexpor = (PedidoExpor)this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(pedidoexpor!=null) {
						this.pedidoexpor = pedidoexpor;
					} else {
						this.pedidoexpor = new PedidoExpor();
					}
				}

				if(this.isTienePermisosDetallePedidoExpor && this.permiteMantenimiento(this.pedidoexpor)) {
					DetallePedidoExporBeanSwingJInternalFrame detallepedidoexporBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFramePopup=new DetallePedidoExporBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						detallepedidoexporBeanSwingJInternalFrame=this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFramePopup;
					} else {
						detallepedidoexporBeanSwingJInternalFrame=this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame;
					}

					List<PedidoExpor> pedidoexpors=new ArrayList<PedidoExpor>();
					pedidoexpors.add(this.pedidoexpor);
					if(!esRelacionado) {
						//detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporSessionBean.setConGuardarRelaciones(false);
						//detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					detallepedidoexporBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormPedidoExpor.cargarDetallePedidoExporBeanSwingJInternalFrame(pedidoexpors,this.pedidoexpor,detallepedidoexporBeanSwingJInternalFrame,/*conInicializar,*/detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporSessionBean.getConGuardarRelaciones(),detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporSessionBean.getEsGuardarRelacionado());
					detallepedidoexporBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						detallepedidoexporBeanSwingJInternalFrame.actualizarEstadoPanelsDetallePedidoExpor("no_relacionado");

						detallepedidoexporBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(DetallePedidoExporConstantesFunciones.ITAMANIOFILATABLA + (DetallePedidoExporConstantesFunciones.ITAMANIOFILATABLA/2));

						detallepedidoexporBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
						TitledBorder titledBorderDetallePedidoExpor=(TitledBorder)detallepedidoexporBeanSwingJInternalFrame.jScrollPanelDatosDetallePedidoExpor.getBorder();

						titledBorderDetallePedidoExpor.setTitle(titledBorderPedidoExpor.getTitle() + " -> Detalle Pedido Exportacion");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,detallepedidoexporBeanSwingJInternalFrame);
						}

						detallepedidoexporBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(detallepedidoexporBeanSwingJInternalFrame);

						detallepedidoexporBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.pedidoexporSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Detalle Pedido Exportacion",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualPedidoExpor(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoPedidoExpor.setVisible((this.isVisibilidadCeldaNuevoPedidoExpor && this.isPermisoNuevoPedidoExpor));			
			this.jButtonDuplicarPedidoExpor.setVisible((this.isVisibilidadCeldaDuplicarPedidoExpor && this.isPermisoDuplicarPedidoExpor));			
			this.jButtonCopiarPedidoExpor.setVisible((this.isVisibilidadCeldaCopiarPedidoExpor && this.isPermisoCopiarPedidoExpor));
			this.jButtonVerFormPedidoExpor.setVisible((this.isVisibilidadCeldaVerFormPedidoExpor && this.isPermisoVerFormPedidoExpor));
			
			this.jButtonAbrirOrderByPedidoExpor.setVisible((this.isVisibilidadCeldaOrdenPedidoExpor && this.isPermisoOrdenPedidoExpor));			
			
			this.jButtonNuevoRelacionesPedidoExpor.setVisible((this.isVisibilidadCeldaNuevoRelacionesPedidoExpor && this.isPermisoNuevoPedidoExpor));			
			this.jButtonNuevoGuardarCambiosPedidoExpor.setVisible((this.isVisibilidadCeldaNuevoPedidoExpor && this.isPermisoNuevoPedidoExpor && this.isPermisoGuardarCambiosPedidoExpor));
			
			if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
			this.jInternalFrameDetalleFormPedidoExpor.jButtonModificarPedidoExpor.setVisible((this.isVisibilidadCeldaModificarPedidoExpor && this.isPermisoActualizarPedidoExpor));	
			this.jInternalFrameDetalleFormPedidoExpor.jButtonActualizarPedidoExpor.setVisible((this.isVisibilidadCeldaActualizarPedidoExpor && this.isPermisoActualizarPedidoExpor));	
			this.jInternalFrameDetalleFormPedidoExpor.jButtonEliminarPedidoExpor.setVisible((this.isVisibilidadCeldaEliminarPedidoExpor && this.isPermisoEliminarPedidoExpor));
			this.jInternalFrameDetalleFormPedidoExpor.jButtonCancelarPedidoExpor.setVisible(this.isVisibilidadCeldaCancelarPedidoExpor);							
			this.jInternalFrameDetalleFormPedidoExpor.jButtonGuardarCambiosPedidoExpor.setVisible((this.isVisibilidadCeldaGuardarPedidoExpor && this.isPermisoGuardarCambiosPedidoExpor));			
			
			}
						
			this.jButtonGuardarCambiosTablaPedidoExpor.setVisible((this.isVisibilidadCeldaGuardarCambiosPedidoExpor && this.isPermisoGuardarCambiosPedidoExpor));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarPedidoExpor.setVisible((this.isVisibilidadCeldaNuevoPedidoExpor && this.isPermisoNuevoPedidoExpor));						
			this.jButtonDuplicarToolBarPedidoExpor.setVisible((this.isVisibilidadCeldaDuplicarPedidoExpor && this.isPermisoDuplicarPedidoExpor));						
			this.jButtonCopiarToolBarPedidoExpor.setVisible((this.isVisibilidadCeldaCopiarPedidoExpor && this.isPermisoCopiarPedidoExpor));			
			this.jButtonVerFormToolBarPedidoExpor.setVisible((this.isVisibilidadCeldaVerFormPedidoExpor && this.isPermisoVerFormPedidoExpor));			
			this.jButtonAbrirOrderByToolBarPedidoExpor.setVisible((this.isVisibilidadCeldaOrdenPedidoExpor && this.isPermisoOrdenPedidoExpor));
			this.jButtonNuevoRelacionesToolBarPedidoExpor.setVisible((this.isVisibilidadCeldaNuevoRelacionesPedidoExpor && this.isPermisoNuevoPedidoExpor));			
			this.jButtonNuevoGuardarCambiosToolBarPedidoExpor.setVisible((this.isVisibilidadCeldaNuevoPedidoExpor && this.isPermisoNuevoPedidoExpor && this.isPermisoGuardarCambiosPedidoExpor));			
			
			if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
			this.jInternalFrameDetalleFormPedidoExpor.jButtonModificarToolBarPedidoExpor.setVisible((this.isVisibilidadCeldaModificarPedidoExpor && this.isPermisoActualizarPedidoExpor));	
			this.jInternalFrameDetalleFormPedidoExpor.jButtonActualizarToolBarPedidoExpor.setVisible((this.isVisibilidadCeldaActualizarPedidoExpor  && this.isPermisoActualizarPedidoExpor));	
			this.jInternalFrameDetalleFormPedidoExpor.jButtonEliminarToolBarPedidoExpor.setVisible((this.isVisibilidadCeldaEliminarPedidoExpor && this.isPermisoEliminarPedidoExpor));
			this.jInternalFrameDetalleFormPedidoExpor.jButtonCancelarToolBarPedidoExpor.setVisible(this.isVisibilidadCeldaCancelarPedidoExpor);				
			this.jInternalFrameDetalleFormPedidoExpor.jButtonGuardarCambiosToolBarPedidoExpor.setVisible((this.isVisibilidadCeldaGuardarPedidoExpor && this.isPermisoGuardarCambiosPedidoExpor));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarPedidoExpor.setVisible((this.isVisibilidadCeldaGuardarCambiosPedidoExpor && this.isPermisoGuardarCambiosPedidoExpor));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoPedidoExpor.setVisible((this.isVisibilidadCeldaNuevoPedidoExpor && this.isPermisoNuevoPedidoExpor));			
			this.jMenuItemDuplicarPedidoExpor.setVisible((this.isVisibilidadCeldaDuplicarPedidoExpor && this.isPermisoDuplicarPedidoExpor));			
			this.jMenuItemCopiarPedidoExpor.setVisible((this.isVisibilidadCeldaCopiarPedidoExpor && this.isPermisoCopiarPedidoExpor));			
			this.jMenuItemVerFormPedidoExpor.setVisible((this.isVisibilidadCeldaVerFormPedidoExpor && this.isPermisoVerFormPedidoExpor));			
			this.jMenuItemAbrirOrderByPedidoExpor.setVisible((this.isVisibilidadCeldaOrdenPedidoExpor && this.isPermisoOrdenPedidoExpor));			
			//this.jMenuItemMostrarOcultarPedidoExpor.setVisible((this.isVisibilidadCeldaOrdenPedidoExpor && this.isPermisoOrdenPedidoExpor));
			this.jMenuItemDetalleAbrirOrderByPedidoExpor.setVisible((this.isVisibilidadCeldaOrdenPedidoExpor && this.isPermisoOrdenPedidoExpor));			
			//this.jMenuItemDetalleMostrarOcultarPedidoExpor.setVisible((this.isVisibilidadCeldaOrdenPedidoExpor && this.isPermisoOrdenPedidoExpor));			
			this.jMenuItemNuevoRelacionesPedidoExpor.setVisible((this.isVisibilidadCeldaNuevoRelacionesPedidoExpor && this.isPermisoNuevoPedidoExpor));			
			this.jMenuItemNuevoGuardarCambiosPedidoExpor.setVisible((this.isVisibilidadCeldaNuevoPedidoExpor && this.isPermisoNuevoPedidoExpor && this.isPermisoGuardarCambiosPedidoExpor));									
			
			if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
			this.jInternalFrameDetalleFormPedidoExpor.jMenuItemModificarPedidoExpor.setVisible((this.isVisibilidadCeldaModificarPedidoExpor && this.isPermisoActualizarPedidoExpor));	
			this.jInternalFrameDetalleFormPedidoExpor.jMenuItemActualizarPedidoExpor.setVisible((this.isVisibilidadCeldaActualizarPedidoExpor && this.isPermisoActualizarPedidoExpor));	
			this.jInternalFrameDetalleFormPedidoExpor.jMenuItemEliminarPedidoExpor.setVisible((this.isVisibilidadCeldaEliminarPedidoExpor && this.isPermisoEliminarPedidoExpor));
			this.jInternalFrameDetalleFormPedidoExpor.jMenuItemCancelarPedidoExpor.setVisible(this.isVisibilidadCeldaCancelarPedidoExpor);				
			}
			
			this.jMenuItemGuardarCambiosPedidoExpor.setVisible((this.isVisibilidadCeldaGuardarPedidoExpor && this.isPermisoGuardarCambiosPedidoExpor));						
			this.jMenuItemGuardarCambiosTablaPedidoExpor.setVisible((this.isVisibilidadCeldaGuardarCambiosPedidoExpor && this.isPermisoGuardarCambiosPedidoExpor));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoPedidoExpor=this.jButtonNuevoPedidoExpor.isVisible();
			this.isVisibilidadCeldaDuplicarPedidoExpor=this.jButtonDuplicarPedidoExpor.isVisible();
			this.isVisibilidadCeldaCopiarPedidoExpor=this.jButtonCopiarPedidoExpor.isVisible();
			this.isVisibilidadCeldaVerFormPedidoExpor=this.jButtonVerFormPedidoExpor.isVisible();
			
			this.isVisibilidadCeldaOrdenPedidoExpor=this.jButtonAbrirOrderByPedidoExpor.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesPedidoExpor=this.jButtonNuevoRelacionesPedidoExpor.isVisible();
			this.isVisibilidadCeldaModificarPedidoExpor=this.jButtonModificarPedidoExpor.isVisible();
			
			if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
			this.isVisibilidadCeldaActualizarPedidoExpor=this.jInternalFrameDetalleFormPedidoExpor.jButtonActualizarPedidoExpor.isVisible();
			this.isVisibilidadCeldaEliminarPedidoExpor=this.jInternalFrameDetalleFormPedidoExpor.jButtonEliminarPedidoExpor.isVisible();
			this.isVisibilidadCeldaCancelarPedidoExpor=this.jInternalFrameDetalleFormPedidoExpor.jButtonCancelarPedidoExpor.isVisible();
			this.isVisibilidadCeldaGuardarPedidoExpor=this.jInternalFrameDetalleFormPedidoExpor.jButtonGuardarCambiosPedidoExpor.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosPedidoExpor=this.jButtonGuardarCambiosTablaPedidoExpor.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoPedidoExpor=this.jButtonNuevoToolBarPedidoExpor.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesPedidoExpor=this.jButtonNuevoRelacionesToolBarPedidoExpor.isVisible();
			
			if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
			this.isVisibilidadCeldaModificarPedidoExpor=this.jInternalFrameDetalleFormPedidoExpor.jButtonModificarToolBarPedidoExpor.isVisible();
			this.isVisibilidadCeldaActualizarPedidoExpor=this.jInternalFrameDetalleFormPedidoExpor.jButtonActualizarToolBarPedidoExpor.isVisible();
			this.isVisibilidadCeldaEliminarPedidoExpor=this.jInternalFrameDetalleFormPedidoExpor.jButtonEliminarToolBarPedidoExpor.isVisible();
			this.isVisibilidadCeldaCancelarPedidoExpor=this.jInternalFrameDetalleFormPedidoExpor.jButtonCancelarToolBarPedidoExpor.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarPedidoExpor=this.jButtonGuardarCambiosToolBarPedidoExpor.isVisible();
			this.isVisibilidadCeldaGuardarCambiosPedidoExpor=this.jButtonGuardarCambiosTablaToolBarPedidoExpor.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoPedidoExpor=this.jMenuItemNuevoPedidoExpor.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesPedidoExpor=this.jMenuItemNuevoRelacionesPedidoExpor.isVisible();
			
			if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
			this.isVisibilidadCeldaModificarPedidoExpor=this.jInternalFrameDetalleFormPedidoExpor.jMenuItemModificarPedidoExpor.isVisible();
			this.isVisibilidadCeldaActualizarPedidoExpor=this.jInternalFrameDetalleFormPedidoExpor.jMenuItemActualizarPedidoExpor.isVisible();
			this.isVisibilidadCeldaEliminarPedidoExpor=this.jInternalFrameDetalleFormPedidoExpor.jMenuItemEliminarPedidoExpor.isVisible();
			this.isVisibilidadCeldaCancelarPedidoExpor=this.jInternalFrameDetalleFormPedidoExpor.jMenuItemCancelarPedidoExpor.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarPedidoExpor=this.jMenuItemGuardarCambiosPedidoExpor.isVisible();
			this.isVisibilidadCeldaGuardarCambiosPedidoExpor=this.jMenuItemGuardarCambiosTablaPedidoExpor.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesPedidoExpor(Boolean esInicializar) {
		if(PedidoExporJInternalFrame.ISBINDING_MANUAL) {			
			if(this.pedidoexporSessionBean.getConGuardarRelaciones()) {
				//if(this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesPedidoExpor();
			}
			
			this.inicializarActualizarBindingBotonesManualPedidoExpor(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualPedidoExpor() {
		this.jButtonNuevoPedidoExpor.setVisible(this.isPermisoNuevoPedidoExpor);			
		this.jButtonDuplicarPedidoExpor.setVisible(this.isPermisoDuplicarPedidoExpor);			
		this.jButtonCopiarPedidoExpor.setVisible(this.isPermisoCopiarPedidoExpor);			
		this.jButtonVerFormPedidoExpor.setVisible(this.isPermisoVerFormPedidoExpor);			
		
		this.jButtonAbrirOrderByPedidoExpor.setVisible(this.isPermisoOrdenPedidoExpor);					
		
		this.jButtonNuevoRelacionesPedidoExpor.setVisible(this.isPermisoNuevoPedidoExpor);			
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoExpor.jButtonModificarPedidoExpor.setVisible(this.isPermisoActualizarPedidoExpor);	
			this.jInternalFrameDetalleFormPedidoExpor.jButtonActualizarPedidoExpor.setVisible(this.isPermisoActualizarPedidoExpor);	
			this.jInternalFrameDetalleFormPedidoExpor.jButtonEliminarPedidoExpor.setVisible(this.isPermisoEliminarPedidoExpor);
			this.jInternalFrameDetalleFormPedidoExpor.jButtonCancelarPedidoExpor.setVisible(this.isVisibilidadCeldaCancelarPedidoExpor);						
			this.jInternalFrameDetalleFormPedidoExpor.jButtonGuardarCambiosPedidoExpor.setVisible(this.isPermisoGuardarCambiosPedidoExpor);							
		}
		
		this.jButtonGuardarCambiosTablaPedidoExpor.setVisible(this.isPermisoActualizarPedidoExpor);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetallePedidoExpor() {
		this.jInternalFrameDetalleFormPedidoExpor.jButtonModificarPedidoExpor.setVisible(this.isPermisoActualizarPedidoExpor);	
		this.jInternalFrameDetalleFormPedidoExpor.jButtonActualizarPedidoExpor.setVisible(this.isPermisoActualizarPedidoExpor);	
		this.jInternalFrameDetalleFormPedidoExpor.jButtonEliminarPedidoExpor.setVisible(this.isPermisoEliminarPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jButtonCancelarPedidoExpor.setVisible(this.isVisibilidadCeldaCancelarPedidoExpor);							
		this.jInternalFrameDetalleFormPedidoExpor.jButtonGuardarCambiosPedidoExpor.setVisible((this.isVisibilidadCeldaGuardarPedidoExpor && this.isPermisoGuardarCambiosPedidoExpor));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosPedidoExpor() {
		if(PedidoExporJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualPedidoExpor();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesPedidoExpor() {
	}
	
	public void jTableDatosPedidoExporListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarPedidoExpor(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.pedidoexpor.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaPedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderPedidoExpor.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.pedidoexpor.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalPedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderPedidoExpor.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.pedidoexpor.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioPedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderPedidoExpor.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.pedidoexpor.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoPedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderPedidoExpor.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.pedidoexpor.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioPedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderPedidoExpor.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.pedidoexpor.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesPedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderPedidoExpor.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.pedidoexpor.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_usuarioPedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisousuario=true;

			idTienePermisousuario=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(UsuarioConstantesFunciones.CLASSNAME);

			if(idTienePermisousuario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.usuarioBeanSwingJInternalFrame=new UsuarioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.usuarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.usuarioBeanSwingJInternalFrame.getUsuarioLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_usuario()!=null) {
					this.usuarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.usuarioBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_usuario());
					this.usuarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaUsuario();
				}

				JInternalFrameBase jinternalFrame =this.usuarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBorderusuario=(TitledBorder)this.usuarioBeanSwingJInternalFrame.jScrollPanelDatosUsuario.getBorder();

				titledBorderusuario.setTitle(titledBorderPedidoExpor.getTitle() + " -> Usuario");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_usuarioPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_usuario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_usuario = "+this.pedidoexpor.getid_usuario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumeroPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getnumero()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero like '%"+this.pedidoexpor.getnumero()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_preimpresoPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getnumero_preimpreso()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_preimpreso like '%"+this.pedidoexpor.getnumero_preimpreso()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_emisionPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getfecha_emision()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_emision = '"+Funciones2.getStringPostgresDate(this.pedidoexpor.getfecha_emision())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_vencimientoPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getfecha_vencimiento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_vencimiento = '"+Funciones2.getStringPostgresDate(this.pedidoexpor.getfecha_vencimiento())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_monedaPedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomoneda=true;

			idTienePermisomoneda=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(MonedaConstantesFunciones.CLASSNAME);

			if(idTienePermisomoneda) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.monedaBeanSwingJInternalFrame=new MonedaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.monedaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.monedaBeanSwingJInternalFrame.getMonedaLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_moneda()!=null) {
					this.monedaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.monedaBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_moneda());
					this.monedaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.inicializarActualizarBindingTablaMoneda();
				}

				JInternalFrameBase jinternalFrame =this.monedaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBordermoneda=(TitledBorder)this.monedaBeanSwingJInternalFrame.jScrollPanelDatosMoneda.getBorder();

				titledBordermoneda.setTitle(titledBorderPedidoExpor.getTitle() + " -> Moneda");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_monedaPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_moneda()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_moneda = "+this.pedidoexpor.getid_moneda().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtoncotizacionPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getcotizacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where cotizacion = "+this.pedidoexpor.getcotizacion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empleadoPedidoExporActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="Empleado";

			if(!this.sFinalQueryGeneral_empleado.equals("")) {
				this.empleadoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_empleado);
				this.empleadoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.empleadoBeanSwingJInternalFrame.procesarBusqueda(this.empleadoBeanSwingJInternalFrame.sAccionBusqueda);
				this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingEmpleado(false);
			}

			if(!this.sFinalQueryComboEmpleado.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPedidoExpor=null;
			TitledBorder titledBorderempleado=null;

			if(!this.jScrollPanelDatosPedidoExpor.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderPedidoExpor.getTitle() + " -> Empleado");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_empleadoPedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempleado=true;

			idTienePermisoempleado=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(EmpleadoConstantesFunciones.CLASSNAME);

			if(idTienePermisoempleado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empleadoBeanSwingJInternalFrame.getEmpleadoLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_empleado()!=null) {
					this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empleadoBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_empleado());
					this.empleadoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleado();
				}

				JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderPedidoExpor.getTitle() + " -> Empleado");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empleadoPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_empleado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empleado = "+this.pedidoexpor.getid_empleado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_precioPedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipoprecio=true;

			idTienePermisotipoprecio=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(TipoPrecioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipoprecio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.tipoprecioBeanSwingJInternalFrame=new TipoPrecioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipoprecioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipoprecioBeanSwingJInternalFrame.getTipoPrecioLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_tipo_precio()!=null) {
					this.tipoprecioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipoprecioBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_tipo_precio());
					this.tipoprecioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipoprecioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipoprecioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoPrecio();
				}

				JInternalFrameBase jinternalFrame =this.tipoprecioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBordertipoprecio=(TitledBorder)this.tipoprecioBeanSwingJInternalFrame.jScrollPanelDatosTipoPrecio.getBorder();

				titledBordertipoprecio.setTitle(titledBorderPedidoExpor.getTitle() + " -> Tipo Precio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_precioPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_tipo_precio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_precio = "+this.pedidoexpor.getid_tipo_precio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_formatoPedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoformato=true;

			idTienePermisoformato=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(FormatoConstantesFunciones.CLASSNAME);

			if(idTienePermisoformato) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.formatoBeanSwingJInternalFrame=new FormatoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.formatoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.formatoBeanSwingJInternalFrame.getFormatoLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_formato()!=null) {
					this.formatoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.formatoBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_formato());
					this.formatoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.formatoBeanSwingJInternalFrame.inicializarActualizarBindingTablaFormato();
				}

				JInternalFrameBase jinternalFrame =this.formatoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBorderformato=(TitledBorder)this.formatoBeanSwingJInternalFrame.jScrollPanelDatosFormato.getBorder();

				titledBorderformato.setTitle(titledBorderPedidoExpor.getTitle() + " -> Formato");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_formatoPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_formato()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_formato = "+this.pedidoexpor.getid_formato().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondireccionPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getdireccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where direccion like '%"+this.pedidoexpor.getdireccion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clientePedidoExporActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteBeanSwingJInternalFrame.sTipoBusqueda="Cliente";

			if(!this.sFinalQueryGeneral_cliente.equals("")) {
				this.clienteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cliente);
				this.clienteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteBeanSwingJInternalFrame.procesarBusqueda(this.clienteBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboCliente.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPedidoExpor=null;
			TitledBorder titledBordercliente=null;

			if(!this.jScrollPanelDatosPedidoExpor.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderPedidoExpor.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_clientePedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocliente=true;

			idTienePermisocliente=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_cliente()!=null) {
					this.clienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_cliente());
					this.clienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderPedidoExpor.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clientePedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente = "+this.pedidoexpor.getid_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontelefonoPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.gettelefono()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where telefono like '%"+this.pedidoexpor.gettelefono()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonrucPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getruc()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ruc like '%"+this.pedidoexpor.getruc()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_paisPedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisopais=true;

			idTienePermisopais=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(PaisConstantesFunciones.CLASSNAME);

			if(idTienePermisopais) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.paisBeanSwingJInternalFrame=new PaisBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.paisBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.paisBeanSwingJInternalFrame.getPaisLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_pais()!=null) {
					this.paisBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.paisBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_pais());
					this.paisBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.paisBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.paisBeanSwingJInternalFrame.inicializarActualizarBindingTablaPais();
				}

				JInternalFrameBase jinternalFrame =this.paisBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBorderpais=(TitledBorder)this.paisBeanSwingJInternalFrame.jScrollPanelDatosPais.getBorder();

				titledBorderpais.setTitle(titledBorderPedidoExpor.getTitle() + " -> Pais");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_paisPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_pais()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_pais = "+this.pedidoexpor.getid_pais().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonlugar_entregaPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getlugar_entrega()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where lugar_entrega like '%"+this.pedidoexpor.getlugar_entrega()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonembarquePedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getembarque()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where embarque like '%"+this.pedidoexpor.getembarque()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnegociacionPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getnegociacion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where negociacion like '%"+this.pedidoexpor.getnegociacion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transportePedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransporte=true;

			idTienePermisotransporte=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(TransporteConstantesFunciones.CLASSNAME);

			if(idTienePermisotransporte) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.transporteBeanSwingJInternalFrame=new TransporteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transporteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transporteBeanSwingJInternalFrame.getTransporteLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_transporte()!=null) {
					this.transporteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transporteBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_transporte());
					this.transporteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transporteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transporteBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransporte();
				}

				JInternalFrameBase jinternalFrame =this.transporteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBordertransporte=(TitledBorder)this.transporteBeanSwingJInternalFrame.jScrollPanelDatosTransporte.getBorder();

				titledBordertransporte.setTitle(titledBorderPedidoExpor.getTitle() + " -> Transporte");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transportePedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_transporte()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transporte = "+this.pedidoexpor.getid_transporte().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_vendedorPedidoExporActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.vendedorBeanSwingJInternalFrame=new VendedorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.vendedorBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.vendedorBeanSwingJInternalFrame.sTipoBusqueda="Vendedor";

			if(!this.sFinalQueryGeneral_vendedor.equals("")) {
				this.vendedorBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_vendedor);
				this.vendedorBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.vendedorBeanSwingJInternalFrame.procesarBusqueda(this.vendedorBeanSwingJInternalFrame.sAccionBusqueda);
				this.vendedorBeanSwingJInternalFrame.inicializarActualizarBindingVendedor(false);
			}

			if(!this.sFinalQueryComboVendedor.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.vendedorBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPedidoExpor=null;
			TitledBorder titledBordervendedor=null;

			if(!this.jScrollPanelDatosPedidoExpor.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				titledBordervendedor=(TitledBorder)this.vendedorBeanSwingJInternalFrame.jScrollPanelDatosVendedor.getBorder();

				titledBordervendedor.setTitle(titledBorderPedidoExpor.getTitle() + " -> Vendedor");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_vendedorPedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisovendedor=true;

			idTienePermisovendedor=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(VendedorConstantesFunciones.CLASSNAME);

			if(idTienePermisovendedor) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.vendedorBeanSwingJInternalFrame=new VendedorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.vendedorBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.vendedorBeanSwingJInternalFrame.getVendedorLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_vendedor()!=null) {
					this.vendedorBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.vendedorBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_vendedor());
					this.vendedorBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.vendedorBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.vendedorBeanSwingJInternalFrame.inicializarActualizarBindingTablaVendedor();
				}

				JInternalFrameBase jinternalFrame =this.vendedorBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBordervendedor=(TitledBorder)this.vendedorBeanSwingJInternalFrame.jScrollPanelDatosVendedor.getBorder();

				titledBordervendedor.setTitle(titledBorderPedidoExpor.getTitle() + " -> Vendedor");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_vendedorPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_vendedor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_vendedor = "+this.pedidoexpor.getid_vendedor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonforma_pagoPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getforma_pago()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where forma_pago like '%"+this.pedidoexpor.getforma_pago()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sub_clientePedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosubcliente=true;

			idTienePermisosubcliente=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(SubClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisosubcliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.subclienteBeanSwingJInternalFrame=new SubClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.subclienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.subclienteBeanSwingJInternalFrame.getSubClienteLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_sub_cliente()!=null) {
					this.subclienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.subclienteBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_sub_cliente());
					this.subclienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.subclienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.subclienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaSubCliente();
				}

				JInternalFrameBase jinternalFrame =this.subclienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBordersubcliente=(TitledBorder)this.subclienteBeanSwingJInternalFrame.jScrollPanelDatosSubCliente.getBorder();

				titledBordersubcliente.setTitle(titledBorderPedidoExpor.getTitle() + " -> Sub Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sub_clientePedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_sub_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sub_cliente = "+this.pedidoexpor.getid_sub_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_consignatarioPedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoconsignatario=true;

			idTienePermisoconsignatario=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(ConsignatarioConstantesFunciones.CLASSNAME);

			if(idTienePermisoconsignatario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.consignatarioBeanSwingJInternalFrame=new ConsignatarioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.consignatarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.consignatarioBeanSwingJInternalFrame.getConsignatarioLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_consignatario()!=null) {
					this.consignatarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.consignatarioBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_consignatario());
					this.consignatarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.consignatarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.consignatarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaConsignatario();
				}

				JInternalFrameBase jinternalFrame =this.consignatarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBorderconsignatario=(TitledBorder)this.consignatarioBeanSwingJInternalFrame.jScrollPanelDatosConsignatario.getBorder();

				titledBorderconsignatario.setTitle(titledBorderPedidoExpor.getTitle() + " -> Consignatario");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_consignatarioPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_consignatario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_consignatario = "+this.pedidoexpor.getid_consignatario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_consultorPedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoconsultor=true;

			idTienePermisoconsultor=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(ConsultorConstantesFunciones.CLASSNAME);

			if(idTienePermisoconsultor) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.consultorBeanSwingJInternalFrame=new ConsultorBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.consultorBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.consultorBeanSwingJInternalFrame.getConsultorLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_consultor()!=null) {
					this.consultorBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.consultorBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_consultor());
					this.consultorBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.consultorBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.consultorBeanSwingJInternalFrame.inicializarActualizarBindingTablaConsultor();
				}

				JInternalFrameBase jinternalFrame =this.consultorBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBorderconsultor=(TitledBorder)this.consultorBeanSwingJInternalFrame.jScrollPanelDatosConsultor.getBorder();

				titledBorderconsultor.setTitle(titledBorderPedidoExpor.getTitle() + " -> Consultor");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_consultorPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_consultor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_consultor = "+this.pedidoexpor.getid_consultor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonordenPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getorden()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where orden like '%"+this.pedidoexpor.getorden()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_pedidoPedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadopedidoexpor=true;

			idTienePermisoestadopedidoexpor=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(EstadoPedidoConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadopedidoexpor) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.estadopedidoexporBeanSwingJInternalFrame=new EstadoPedidoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadopedidoexporBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadopedidoexporBeanSwingJInternalFrame.getEstadoPedidoLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_estado_pedido()!=null) {
					this.estadopedidoexporBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadopedidoexporBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_estado_pedido());
					this.estadopedidoexporBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadopedidoexporBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadopedidoexporBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoPedido();
				}

				JInternalFrameBase jinternalFrame =this.estadopedidoexporBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBorderestadopedidoexpor=(TitledBorder)this.estadopedidoexporBeanSwingJInternalFrame.jScrollPanelDatosEstadoPedido.getBorder();

				titledBorderestadopedidoexpor.setTitle(titledBorderPedidoExpor.getTitle() + " -> Estado Pedido");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_pedidoPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_estado_pedido()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_pedido = "+this.pedidoexpor.getid_estado_pedido().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescripcionPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getdescripcion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descripcion like '%"+this.pedidoexpor.getdescripcion()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmontoPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getmonto()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where monto = "+this.pedidoexpor.getmonto().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsaldoPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getsaldo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where saldo = "+this.pedidoexpor.getsaldo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondisponiblePedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getdisponible()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where disponible = "+this.pedidoexpor.getdisponible().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuento_porcentajePedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getdescuento_porcentaje()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento_porcentaje = "+this.pedidoexpor.getdescuento_porcentaje().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_con_ivaPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.gettotal_con_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_con_iva = "+this.pedidoexpor.gettotal_con_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsumanPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getsuman()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where suman = "+this.pedidoexpor.getsuman().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondescuento_valorPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getdescuento_valor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where descuento_valor = "+this.pedidoexpor.getdescuento_valor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_sin_ivaPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.gettotal_sin_iva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_sin_iva = "+this.pedidoexpor.gettotal_sin_iva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotal_descuentoPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.gettotal_descuento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total_descuento = "+this.pedidoexpor.gettotal_descuento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfletePedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getflete()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where flete = "+this.pedidoexpor.getflete().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtontotalPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.gettotal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where total = "+this.pedidoexpor.gettotal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsubtotalPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getsubtotal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where subtotal = "+this.pedidoexpor.getsubtotal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsegurosPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getseguros()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where seguros = "+this.pedidoexpor.getseguros().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonivaPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getiva()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where iva = "+this.pedidoexpor.getiva().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfinanciamientoPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getfinanciamiento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where financiamiento = "+this.pedidoexpor.getfinanciamiento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonmonto_retencionPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getmonto_retencion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where monto_retencion = "+this.pedidoexpor.getmonto_retencion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonotroPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getotro()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where otro = "+this.pedidoexpor.getotro().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonicePedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getice()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where ice = "+this.pedidoexpor.getice().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfechaPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getfecha()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha = '"+Funciones2.getStringPostgresDate(this.pedidoexpor.getfecha())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfecha_servidorPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getfecha_servidor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha_servidor = '"+Funciones2.getStringPostgresDate(this.pedidoexpor.getfecha_servidor())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_cambioPedidoExporActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="TipoCambio";

			if(!this.sFinalQueryGeneral_tipocambio.equals("")) {
				this.tipocambioBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_tipocambio);
				this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.tipocambioBeanSwingJInternalFrame.procesarBusqueda(this.tipocambioBeanSwingJInternalFrame.sAccionBusqueda);
				this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTipoCambio(false);
			}

			if(!this.sFinalQueryComboTipoCambio.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPedidoExpor=null;
			TitledBorder titledBordertipocambio=null;

			if(!this.jScrollPanelDatosPedidoExpor.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderPedidoExpor.getTitle() + " -> Tipo Cambio");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_tipo_cambioPedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipocambio=true;

			idTienePermisotipocambio=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(TipoCambioConstantesFunciones.CLASSNAME);

			if(idTienePermisotipocambio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.tipocambioBeanSwingJInternalFrame=new TipoCambioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipocambioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipocambioBeanSwingJInternalFrame.getTipoCambioLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_tipo_cambio()!=null) {
					this.tipocambioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipocambioBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_tipo_cambio());
					this.tipocambioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipocambioBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoCambio();
				}

				JInternalFrameBase jinternalFrame =this.tipocambioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBordertipocambio=(TitledBorder)this.tipocambioBeanSwingJInternalFrame.jScrollPanelDatosTipoCambio.getBorder();

				titledBordertipocambio.setTitle(titledBorderPedidoExpor.getTitle() + " -> Tipo Cambio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_cambioPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_tipo_cambio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_cambio = "+this.pedidoexpor.getid_tipo_cambio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonnumero_fuePedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getnumero_fue()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where numero_fue like '%"+this.pedidoexpor.getnumero_fue()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_centro_costoPedidoExporActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="CentroCosto";

			if(!this.sFinalQueryGeneral_centrocosto.equals("")) {
				this.centrocostoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_centrocosto);
				this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.centrocostoBeanSwingJInternalFrame.procesarBusqueda(this.centrocostoBeanSwingJInternalFrame.sAccionBusqueda);
				this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingCentroCosto(false);
			}

			if(!this.sFinalQueryComboCentroCosto.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderPedidoExpor=null;
			TitledBorder titledBordercentrocosto=null;

			if(!this.jScrollPanelDatosPedidoExpor.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderPedidoExpor.getTitle() + " -> Centro Costo");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_centro_costoPedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocentrocosto=true;

			idTienePermisocentrocosto=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(CentroCostoConstantesFunciones.CLASSNAME);

			if(idTienePermisocentrocosto) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.centrocostoBeanSwingJInternalFrame=new CentroCostoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.centrocostoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.centrocostoBeanSwingJInternalFrame.getCentroCostoLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_centro_costo()!=null) {
					this.centrocostoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.centrocostoBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_centro_costo());
					this.centrocostoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.centrocostoBeanSwingJInternalFrame.inicializarActualizarBindingTablaCentroCosto();
				}

				JInternalFrameBase jinternalFrame =this.centrocostoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBordercentrocosto=(TitledBorder)this.centrocostoBeanSwingJInternalFrame.jScrollPanelDatosCentroCosto.getBorder();

				titledBordercentrocosto.setTitle(titledBorderPedidoExpor.getTitle() + " -> Centro Costo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_centro_costoPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_centro_costo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_centro_costo = "+this.pedidoexpor.getid_centro_costo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_responsablePedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoresponsable=true;

			idTienePermisoresponsable=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(ResponsableConstantesFunciones.CLASSNAME);

			if(idTienePermisoresponsable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.responsableBeanSwingJInternalFrame=new ResponsableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.responsableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.responsableBeanSwingJInternalFrame.getResponsableLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_responsable()!=null) {
					this.responsableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.responsableBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_responsable());
					this.responsableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.responsableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.responsableBeanSwingJInternalFrame.inicializarActualizarBindingTablaResponsable();
				}

				JInternalFrameBase jinternalFrame =this.responsableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBorderresponsable=(TitledBorder)this.responsableBeanSwingJInternalFrame.jScrollPanelDatosResponsable.getBorder();

				titledBorderresponsable.setTitle(titledBorderPedidoExpor.getTitle() + " -> Responsable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_responsablePedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_responsable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_responsable = "+this.pedidoexpor.getid_responsable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonhora_inicioPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.gethora_inicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where hora_inicio = "+this.pedidoexpor.gethora_inicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonhora_finPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.gethora_fin()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where hora_fin = "+this.pedidoexpor.gethora_fin().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transportistaPedidoExporUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransportista=true;

			idTienePermisotransportista=this.tienePermisosUsuarioEnPaginaWebPedidoExpor(TransportistaConstantesFunciones.CLASSNAME);

			if(idTienePermisotransportista) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosPedidoExpor.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosPedidoExpor.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);

				this.transportistaBeanSwingJInternalFrame=new TransportistaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transportistaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transportistaBeanSwingJInternalFrame.getTransportistaLogic().setConnexion(this.pedidoexporLogic.getConnexion());

				if(this.pedidoexpor.getid_transportista()!=null) {
					this.transportistaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transportistaBeanSwingJInternalFrame.setIdActual(this.pedidoexpor.getid_transportista());
					this.transportistaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transportistaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transportistaBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransportista();
				}

				JInternalFrameBase jinternalFrame =this.transportistaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderPedidoExpor=(TitledBorder)this.jScrollPanelDatosPedidoExpor.getBorder();
				TitledBorder titledBordertransportista=(TitledBorder)this.transportistaBeanSwingJInternalFrame.jScrollPanelDatosTransportista.getBorder();

				titledBordertransportista.setTitle(titledBorderPedidoExpor.getTitle() + " -> Transportista");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transportistaPedidoExporBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.getpedidoexpor(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.pedidoexpor==null) {
						this.pedidoexpor = new PedidoExpor();
					}

					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);
				}

				if(this.pedidoexpor.getid_transportista()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transportista = "+this.pedidoexpor.getid_transportista().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingPedidoExpor(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAnioPedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdAnio();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCentroCostoPedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdCentroCosto();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClientePedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdCliente();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdConsignatarioPedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdConsignatario();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdConsultorPedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdConsultor();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioPedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdEjercicio();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpleadoPedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdEmpleado();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaPedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdEmpresa();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoPedidoExporPedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdEstadoPedidoExpor();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdFormatoPedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdFormato();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesPedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdMes();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMonedaPedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdMoneda();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPaisPedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdPais();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoPedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdPeriodo();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdResponsablePedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdResponsable();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSubClientePedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdSubCliente();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalPedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdSucursal();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoCambioPedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdTipoCambio();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoPrecioPedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdTipoPrecio();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransportePedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdTransporte();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransportistaPedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdTransportista();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUsuarioPedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdUsuario();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdVendedorPedidoExporActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingPedidoExpor(false,false);

			this.getPedidoExporsFK_IdVendedor();

			this.inicializarActualizarBindingPedidoExpor(false);

			//if(PedidoExporBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingPedidoExpor(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.pedidoexporLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFramePedidoExpor() {
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
		

		if(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
			this.jInternalFrameDetalleFormPedidoExpor.setVisible(false);	    			
			this.jInternalFrameDetalleFormPedidoExpor.dispose();
			this.jInternalFrameDetalleFormPedidoExpor=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoPedidoExpor!=null) {
			this.jInternalFrameReporteDinamicoPedidoExpor.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoPedidoExpor.dispose();
			this.jInternalFrameReporteDinamicoPedidoExpor=null;
		}
		
		if(this.jInternalFrameImportacionPedidoExpor!=null) {
			this.jInternalFrameImportacionPedidoExpor.setVisible(false);	    			
			this.jInternalFrameImportacionPedidoExpor.dispose();
			this.jInternalFrameImportacionPedidoExpor=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessPedidoExpor();
			
			PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
			
			
			if(sTipo.equals("NuevoPedidoExpor")) {
				jButtonNuevoPedidoExporActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarPedidoExpor")) {
				jButtonDuplicarPedidoExporActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarPedidoExpor")) {
				jButtonCopiarPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("VerFormPedidoExpor")) {
				jButtonVerFormPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarPedidoExpor")) {
				jButtonNuevoPedidoExporActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarPedidoExpor")) {
				jButtonDuplicarPedidoExporActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoPedidoExpor")) {
				jButtonNuevoPedidoExporActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarPedidoExpor")) {
				jButtonDuplicarPedidoExporActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesPedidoExpor")) {
				jButtonNuevoPedidoExporActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarPedidoExpor")) {
				jButtonNuevoPedidoExporActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesPedidoExpor")) {
				jButtonNuevoPedidoExporActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarPedidoExpor")) {
				jButtonModificarPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarPedidoExpor")) {
				jButtonModificarPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarPedidoExpor")) {
				jButtonModificarPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("ActualizarPedidoExpor")) {
				jButtonActualizarPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarPedidoExpor")) {
				jButtonActualizarPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarPedidoExpor")) {
				jButtonActualizarPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("EliminarPedidoExpor")) {
				jButtonEliminarPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarPedidoExpor")) {
				jButtonEliminarPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarPedidoExpor")) {
				jButtonEliminarPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("CancelarPedidoExpor")) {
				jButtonCancelarPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarPedidoExpor")) {
				jButtonCancelarPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarPedidoExpor")) {
				jButtonCancelarPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("CerrarPedidoExpor")) {
				jButtonCerrarPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarPedidoExpor")) {
				jButtonCerrarPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarPedidoExpor")) {
				jButtonCerrarPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarPedidoExpor")) {
				jButtonMostrarOcultarPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarPedidoExpor")) {
				jButtonCancelarPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosPedidoExpor")) {
				jButtonGuardarCambiosPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarPedidoExpor")) {
				jButtonGuardarCambiosPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarPedidoExpor")) {
				jButtonCopiarPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarPedidoExpor")) {
				jButtonVerFormPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosPedidoExpor")) {
				jButtonGuardarCambiosPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarPedidoExpor")) {
				jButtonCopiarPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormPedidoExpor")) {
				jButtonVerFormPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaPedidoExpor")) {
				jButtonGuardarCambiosPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarPedidoExpor")) {
				jButtonGuardarCambiosPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaPedidoExpor")) {
				jButtonGuardarCambiosPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionPedidoExpor")) {
				jButtonRecargarInformacionPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarPedidoExpor")) {
				jButtonRecargarInformacionPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionPedidoExpor")) {
				jButtonRecargarInformacionPedidoExporActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresPedidoExpor")) {
				jButtonAnterioresPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarPedidoExpor")) {
				jButtonAnterioresPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnteriorePedidoExpor")) {
				jButtonAnterioresPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("SiguientesPedidoExpor")) {
				jButtonSiguientesPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarPedidoExpor")) {
				jButtonSiguientesPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesPedidoExpor")) {
				jButtonSiguientesPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByPedidoExpor") || sTipo.equals("MenuItemDetalleAbrirOrderByPedidoExpor")) {
				jButtonAbrirOrderByPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarPedidoExpor") || sTipo.equals("MenuItemDetalleMostrarOcultarPedidoExpor")) {
				jButtonMostrarOcultarPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosPedidoExpor")) {
				jButtonNuevoGuardarCambiosPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarPedidoExpor")) {
				jButtonNuevoGuardarCambiosPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosPedidoExpor")) {
				jButtonNuevoGuardarCambiosPedidoExporActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoPedidoExpor")) {
				jButtonCerrarReporteDinamicoPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoPedidoExpor")) {
				jButtonGenerarReporteDinamicoPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoPedidoExpor")) {
				
				jButtonGenerarExcelReporteDinamicoPedidoExporActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionPedidoExpor")) {
				jButtonCerrarImportacionPedidoExporActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionPedidoExpor")) {
				
				jButtonGenerarImportacionPedidoExporActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionPedidoExpor")) {
				
				jButtonAbrirImportacionPedidoExporActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesPedidoExpor")) {
				jComboBoxTiposAccionesPedidoExporActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesPedidoExpor")) {
				jComboBoxTiposRelacionesPedidoExporActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioPedidoExpor")) {
				jComboBoxTiposAccionesPedidoExporActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarPedidoExpor")) {
				
				jComboBoxTiposSeleccionarPedidoExporActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralPedidoExpor")) {
				jTextFieldValorCampoGeneralPedidoExporActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByPedidoExpor")) {
				jButtonAbrirOrderByPedidoExporActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarPedidoExpor")) {
				jButtonAbrirOrderByPedidoExporActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByPedidoExpor")) {
				jButtonCerrarOrderByPedidoExporActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idPedidoExporBusqueda")) {
				this.jButtonidPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaPedidoExporUpdate")) {
				this.jButtonid_empresaPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaPedidoExporBusqueda")) {
				this.jButtonid_empresaPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalPedidoExporUpdate")) {
				this.jButtonid_sucursalPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalPedidoExporBusqueda")) {
				this.jButtonid_sucursalPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioPedidoExporUpdate")) {
				this.jButtonid_ejercicioPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioPedidoExporBusqueda")) {
				this.jButtonid_ejercicioPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoPedidoExporUpdate")) {
				this.jButtonid_periodoPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoPedidoExporBusqueda")) {
				this.jButtonid_periodoPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioPedidoExporUpdate")) {
				this.jButtonid_anioPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioPedidoExporBusqueda")) {
				this.jButtonid_anioPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesPedidoExporUpdate")) {
				this.jButtonid_mesPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesPedidoExporBusqueda")) {
				this.jButtonid_mesPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioPedidoExporUpdate")) {
				this.jButtonid_usuarioPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioPedidoExporBusqueda")) {
				this.jButtonid_usuarioPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numeroPedidoExporBusqueda")) {
				this.jButtonnumeroPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_preimpresoPedidoExporBusqueda")) {
				this.jButtonnumero_preimpresoPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionPedidoExporBusqueda")) {
				this.jButtonfecha_emisionPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_vencimientoPedidoExporBusqueda")) {
				this.jButtonfecha_vencimientoPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaPedidoExporUpdate")) {
				this.jButtonid_monedaPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaPedidoExporBusqueda")) {
				this.jButtonid_monedaPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cotizacionPedidoExporBusqueda")) {
				this.jButtoncotizacionPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoPedidoExpor")) {
				this.jButtonid_empleadoPedidoExporActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoPedidoExporUpdate")) {
				this.jButtonid_empleadoPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoPedidoExporBusqueda")) {
				this.jButtonid_empleadoPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_precioPedidoExporUpdate")) {
				this.jButtonid_tipo_precioPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_precioPedidoExporBusqueda")) {
				this.jButtonid_tipo_precioPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoPedidoExporUpdate")) {
				this.jButtonid_formatoPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoPedidoExporBusqueda")) {
				this.jButtonid_formatoPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccionPedidoExporBusqueda")) {
				this.jButtondireccionPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clientePedidoExpor")) {
				this.jButtonid_clientePedidoExporActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clientePedidoExporUpdate")) {
				this.jButtonid_clientePedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clientePedidoExporBusqueda")) {
				this.jButtonid_clientePedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefonoPedidoExporBusqueda")) {
				this.jButtontelefonoPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucPedidoExporBusqueda")) {
				this.jButtonrucPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_paisPedidoExporUpdate")) {
				this.jButtonid_paisPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_paisPedidoExporBusqueda")) {
				this.jButtonid_paisPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("lugar_entregaPedidoExporBusqueda")) {
				this.jButtonlugar_entregaPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("embarquePedidoExporBusqueda")) {
				this.jButtonembarquePedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("negociacionPedidoExporBusqueda")) {
				this.jButtonnegociacionPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transportePedidoExporUpdate")) {
				this.jButtonid_transportePedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transportePedidoExporBusqueda")) {
				this.jButtonid_transportePedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_vendedorPedidoExpor")) {
				this.jButtonid_vendedorPedidoExporActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_vendedorPedidoExporArbol")) {
				this.abrirFrameTreeVendedor("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_vendedorPedidoExporUpdate")) {
				this.jButtonid_vendedorPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_vendedorPedidoExporBusqueda")) {
				this.jButtonid_vendedorPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("forma_pagoPedidoExporBusqueda")) {
				this.jButtonforma_pagoPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sub_clientePedidoExporUpdate")) {
				this.jButtonid_sub_clientePedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sub_clientePedidoExporBusqueda")) {
				this.jButtonid_sub_clientePedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_consignatarioPedidoExporUpdate")) {
				this.jButtonid_consignatarioPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_consignatarioPedidoExporBusqueda")) {
				this.jButtonid_consignatarioPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_consultorPedidoExporUpdate")) {
				this.jButtonid_consultorPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_consultorPedidoExporBusqueda")) {
				this.jButtonid_consultorPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ordenPedidoExporBusqueda")) {
				this.jButtonordenPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedidoPedidoExporUpdate")) {
				this.jButtonid_estado_pedidoPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedidoPedidoExporBusqueda")) {
				this.jButtonid_estado_pedidoPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionPedidoExporBusqueda")) {
				this.jButtondescripcionPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("montoPedidoExporBusqueda")) {
				this.jButtonmontoPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("saldoPedidoExporBusqueda")) {
				this.jButtonsaldoPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("disponiblePedidoExporBusqueda")) {
				this.jButtondisponiblePedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_porcentajePedidoExporBusqueda")) {
				this.jButtondescuento_porcentajePedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_con_ivaPedidoExporBusqueda")) {
				this.jButtontotal_con_ivaPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sumanPedidoExporBusqueda")) {
				this.jButtonsumanPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_valorPedidoExporBusqueda")) {
				this.jButtondescuento_valorPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_sin_ivaPedidoExporBusqueda")) {
				this.jButtontotal_sin_ivaPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_descuentoPedidoExporBusqueda")) {
				this.jButtontotal_descuentoPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fletePedidoExporBusqueda")) {
				this.jButtonfletePedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalPedidoExporBusqueda")) {
				this.jButtontotalPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("subtotalPedidoExporBusqueda")) {
				this.jButtonsubtotalPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("segurosPedidoExporBusqueda")) {
				this.jButtonsegurosPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaPedidoExporBusqueda")) {
				this.jButtonivaPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("financiamientoPedidoExporBusqueda")) {
				this.jButtonfinanciamientoPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_retencionPedidoExporBusqueda")) {
				this.jButtonmonto_retencionPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("otroPedidoExporBusqueda")) {
				this.jButtonotroPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("icePedidoExporBusqueda")) {
				this.jButtonicePedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaPedidoExporBusqueda")) {
				this.jButtonfechaPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_servidorPedidoExporBusqueda")) {
				this.jButtonfecha_servidorPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoExpor")) {
				this.jButtonid_tipo_cambioPedidoExporActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoExporUpdate")) {
				this.jButtonid_tipo_cambioPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoExporBusqueda")) {
				this.jButtonid_tipo_cambioPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_fuePedidoExporBusqueda")) {
				this.jButtonnumero_fuePedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoPedidoExpor")) {
				this.jButtonid_centro_costoPedidoExporActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoPedidoExporArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoPedidoExporUpdate")) {
				this.jButtonid_centro_costoPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoPedidoExporBusqueda")) {
				this.jButtonid_centro_costoPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_responsablePedidoExporUpdate")) {
				this.jButtonid_responsablePedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_responsablePedidoExporBusqueda")) {
				this.jButtonid_responsablePedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_inicioPedidoExporBusqueda")) {
				this.jButtonhora_inicioPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_finPedidoExporBusqueda")) {
				this.jButtonhora_finPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transportistaPedidoExporUpdate")) {
				this.jButtonid_transportistaPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transportistaPedidoExporBusqueda")) {
				this.jButtonid_transportistaPedidoExporBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_centro_costoPedidoExpor")) {
				this.jButtonid_centro_costoPedidoExporActionPerformed(evt);
			}
			else if(sTipo.equals("id_clientePedidoExpor")) {
				this.jButtonid_clientePedidoExporActionPerformed(evt);
			}
			else if(sTipo.equals("id_empleadoPedidoExpor")) {
				this.jButtonid_empleadoPedidoExporActionPerformed(evt);
			}
			else if(sTipo.equals("id_tipo_cambioPedidoExpor")) {
				this.jButtonid_tipo_cambioPedidoExporActionPerformed(evt);
			}
			else if(sTipo.equals("id_vendedorPedidoExpor")) {
				this.jButtonid_vendedorPedidoExporActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdCentroCostoPedidoExpor")) {
				this.jButtonFK_IdCentroCostoPedidoExporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdClientePedidoExpor")) {
				this.jButtonFK_IdClientePedidoExporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdConsignatarioPedidoExpor")) {
				this.jButtonFK_IdConsignatarioPedidoExporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdConsultorPedidoExpor")) {
				this.jButtonFK_IdConsultorPedidoExporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmpleadoPedidoExpor")) {
				this.jButtonFK_IdEmpleadoPedidoExporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEstadoPedidoExporPedidoExpor")) {
				this.jButtonFK_IdEstadoPedidoExporPedidoExporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdFormatoPedidoExpor")) {
				this.jButtonFK_IdFormatoPedidoExporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdPaisPedidoExpor")) {
				this.jButtonFK_IdPaisPedidoExporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdResponsablePedidoExpor")) {
				this.jButtonFK_IdResponsablePedidoExporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdSubClientePedidoExpor")) {
				this.jButtonFK_IdSubClientePedidoExporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoCambioPedidoExpor")) {
				this.jButtonFK_IdTipoCambioPedidoExporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoPrecioPedidoExpor")) {
				this.jButtonFK_IdTipoPrecioPedidoExporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransportePedidoExpor")) {
				this.jButtonFK_IdTransportePedidoExporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransportistaPedidoExpor")) {
				this.jButtonFK_IdTransportistaPedidoExporActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdVendedorPedidoExpor")) {
				this.jButtonFK_IdVendedorPedidoExporActionPerformed(evt);
			}
			
			;
			
			
			PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessPedidoExpor();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoExporActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidoexpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidoexpor);
				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
				
				


			if(sTipo.equals("numero_preimpresoPedidoExpor")) {
				classes.add(new Classe(DetallePedidoExpor.class));

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormPedidoExpor(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoExpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoExpor.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			PedidoExpor pedidoexporLocal=null;
			
			if(!this.getEsControlTabla()) {
				pedidoexporLocal=this.pedidoexpor;
			} else {
				pedidoexporLocal=this.pedidoexporAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


				if(sTipo.equals("numero_preimpresoPedidoExpor")) {
					if(pedidoexporLocal.getnumero_preimpreso()==this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumero_preimpresoPedidoExpor.getText()){existeCambio=false;}
				}
			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidoexpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidoexpor);
				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
							
				
				


			if(sTipo.equals("numero_preimpresoPedidoExpor")) {
				classes.add(new Classe(DetallePedidoExpor.class));

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormPedidoExpor(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoExpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoExpor.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoExporActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporAnterior =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidoexporAnterior =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			if(sTipo.equals("numero_preimpresoPedidoExpor")) {
				classes.add(new Classe(DetallePedidoExpor.class));

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormPedidoExpor(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTBOX",classes,false,esControlTabla);
			}
			
			PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoExporActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidoexpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidoexpor);
				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
								
						
				


				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoExpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoExpor.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidoexpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidoexpor);
				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
								
				
				


				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoExpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoExpor.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoExporActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporAnterior =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidoexporAnterior =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidoexpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidoexpor);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoExporActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporAnterior =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidoexporAnterior =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoExporActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidoexpor);
			
			this.actualizarInformacion("INFO_PADRE",false,this.pedidoexpor);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidoexpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidoexpor);
				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
							
				
				


			if(sTipo.equals("numero_preimpresoPedidoExpor")) {
				classes.add(new Classe(DetallePedidoExpor.class));

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormPedidoExpor(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTAREA",classes,false,esControlTabla);
			}
				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoExpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoExpor.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoExporActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexporAnterior =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.pedidoexporAnterior =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			if(sTipo.equals("numero_preimpresoPedidoExpor")) {
				classes.add(new Classe(DetallePedidoExpor.class));

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormPedidoExpor(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"TEXTAREA",classes,false,esControlTabla);
			}
			
			PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoExporActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidoexpor);
			
			this.actualizarInformacion("INFO_PADRE",false,this.pedidoexpor);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidoexpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidoexpor);
				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
								
				
				


			if(sTipo.equals("numero_preimpresoPedidoExpor")) {
				classes.add(new Classe(DetallePedidoExpor.class));

				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);

				this.recargarFormPedidoExpor(sTipo,"Formulario",eventoGlobalTipo,ControlTipo.LABEL,EventoTipo.CHANGE,EventoSubTipo.CHANGED,"LABEL",classes,false,esControlTabla);
			}
				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoExpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoExpor.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoExporActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporAnterior =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidoexporAnterior =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoExporActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidoexpor);
			
			this.actualizarInformacion("INFO_PADRE",false,this.pedidoexpor);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoExporActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidoexpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidoexpor);
				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosPedidoExpor")) {
					jCheckBoxSeleccionarTodosPedidoExporItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosPedidoExpor")) {
					jCheckBoxSeleccionadosPedidoExporItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarPedidoExpor")) {
					
				}
				
				


				
				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoExpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoExpor.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidoexpor);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.pedidoexpor);
				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
												
				
				


				
				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoExpor.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoExpor.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoExporActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.pedidoexporAnterior =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.pedidoexporAnterior =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoExporActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidoexpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidoexpor);
				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
				
				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaPedidoExporActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidoexpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidoexpor);
				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoExpor.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoExpor.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.pedidoexpor);
				
				this.actualizarInformacion("INFO_PADRE",false,this.pedidoexpor);
				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(PedidoExpor.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",PedidoExpor.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaPedidoExporActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.pedidoexporAnterior =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.pedidoexporAnterior =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarPedidoExpor")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosPedidoExporListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosPedidoExpor.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.pedidoexpor =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.pedidoexpor =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.pedidoexpor);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarPedidoExpor")) {
				
				}
				
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarPedidoExpor")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosPedidoExpor.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarPedidoExpor")) {
			
			}
			
			PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessPedidoExpor();
			
			PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
			
			if(sTipo.equals("NuevoPedidoExpor")) {
				jButtonNuevoPedidoExporActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarPedidoExpor")) {
				jButtonDuplicarPedidoExporActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarPedidoExpor")) {
				jButtonCopiarPedidoExporActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormPedidoExpor")) {
				jButtonVerFormPedidoExporActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesPedidoExpor")) {
				jButtonNuevoPedidoExporActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarPedidoExpor")) {
				jButtonModificarPedidoExporActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarPedidoExpor")) {
				jButtonActualizarPedidoExporActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarPedidoExpor")) {
				jButtonEliminarPedidoExporActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaPedidoExpor")) {
				jButtonGuardarCambiosPedidoExporActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarPedidoExpor")) {
				jButtonCancelarPedidoExporActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarPedidoExpor")) {
				jButtonCerrarPedidoExporActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosPedidoExpor")) {
				jButtonGuardarCambiosPedidoExporActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosPedidoExpor")) {
				jButtonNuevoGuardarCambiosPedidoExporActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByPedidoExpor")) {
				jButtonAbrirOrderByPedidoExporActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionPedidoExpor")) {
				jButtonRecargarInformacionPedidoExporActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresPedidoExpor")) {
				jButtonAnterioresPedidoExporActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesPedidoExpor")) {
				jButtonSiguientesPedidoExporActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idPedidoExporBusqueda")) {
				this.jButtonidPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaPedidoExporUpdate")) {
				this.jButtonid_empresaPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaPedidoExporBusqueda")) {
				this.jButtonid_empresaPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalPedidoExporUpdate")) {
				this.jButtonid_sucursalPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalPedidoExporBusqueda")) {
				this.jButtonid_sucursalPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioPedidoExporUpdate")) {
				this.jButtonid_ejercicioPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioPedidoExporBusqueda")) {
				this.jButtonid_ejercicioPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoPedidoExporUpdate")) {
				this.jButtonid_periodoPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoPedidoExporBusqueda")) {
				this.jButtonid_periodoPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioPedidoExporUpdate")) {
				this.jButtonid_anioPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioPedidoExporBusqueda")) {
				this.jButtonid_anioPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesPedidoExporUpdate")) {
				this.jButtonid_mesPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesPedidoExporBusqueda")) {
				this.jButtonid_mesPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioPedidoExporUpdate")) {
				this.jButtonid_usuarioPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioPedidoExporBusqueda")) {
				this.jButtonid_usuarioPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numeroPedidoExporBusqueda")) {
				this.jButtonnumeroPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_preimpresoPedidoExporBusqueda")) {
				this.jButtonnumero_preimpresoPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_emisionPedidoExporBusqueda")) {
				this.jButtonfecha_emisionPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_vencimientoPedidoExporBusqueda")) {
				this.jButtonfecha_vencimientoPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaPedidoExporUpdate")) {
				this.jButtonid_monedaPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaPedidoExporBusqueda")) {
				this.jButtonid_monedaPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("cotizacionPedidoExporBusqueda")) {
				this.jButtoncotizacionPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoPedidoExpor")) {
				this.jButtonid_empleadoPedidoExporActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoPedidoExporUpdate")) {
				this.jButtonid_empleadoPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoPedidoExporBusqueda")) {
				this.jButtonid_empleadoPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_precioPedidoExporUpdate")) {
				this.jButtonid_tipo_precioPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_precioPedidoExporBusqueda")) {
				this.jButtonid_tipo_precioPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_formatoPedidoExporUpdate")) {
				this.jButtonid_formatoPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_formatoPedidoExporBusqueda")) {
				this.jButtonid_formatoPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("direccionPedidoExporBusqueda")) {
				this.jButtondireccionPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clientePedidoExpor")) {
				this.jButtonid_clientePedidoExporActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clientePedidoExporUpdate")) {
				this.jButtonid_clientePedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clientePedidoExporBusqueda")) {
				this.jButtonid_clientePedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("telefonoPedidoExporBusqueda")) {
				this.jButtontelefonoPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("rucPedidoExporBusqueda")) {
				this.jButtonrucPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_paisPedidoExporUpdate")) {
				this.jButtonid_paisPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_paisPedidoExporBusqueda")) {
				this.jButtonid_paisPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("lugar_entregaPedidoExporBusqueda")) {
				this.jButtonlugar_entregaPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("embarquePedidoExporBusqueda")) {
				this.jButtonembarquePedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("negociacionPedidoExporBusqueda")) {
				this.jButtonnegociacionPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transportePedidoExporUpdate")) {
				this.jButtonid_transportePedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transportePedidoExporBusqueda")) {
				this.jButtonid_transportePedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_vendedorPedidoExpor")) {
				this.jButtonid_vendedorPedidoExporActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_vendedorPedidoExporArbol")) {
				this.abrirFrameTreeVendedor("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_vendedorPedidoExporUpdate")) {
				this.jButtonid_vendedorPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_vendedorPedidoExporBusqueda")) {
				this.jButtonid_vendedorPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("forma_pagoPedidoExporBusqueda")) {
				this.jButtonforma_pagoPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sub_clientePedidoExporUpdate")) {
				this.jButtonid_sub_clientePedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sub_clientePedidoExporBusqueda")) {
				this.jButtonid_sub_clientePedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_consignatarioPedidoExporUpdate")) {
				this.jButtonid_consignatarioPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_consignatarioPedidoExporBusqueda")) {
				this.jButtonid_consignatarioPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_consultorPedidoExporUpdate")) {
				this.jButtonid_consultorPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_consultorPedidoExporBusqueda")) {
				this.jButtonid_consultorPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ordenPedidoExporBusqueda")) {
				this.jButtonordenPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_pedidoPedidoExporUpdate")) {
				this.jButtonid_estado_pedidoPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_pedidoPedidoExporBusqueda")) {
				this.jButtonid_estado_pedidoPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descripcionPedidoExporBusqueda")) {
				this.jButtondescripcionPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("montoPedidoExporBusqueda")) {
				this.jButtonmontoPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("saldoPedidoExporBusqueda")) {
				this.jButtonsaldoPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("disponiblePedidoExporBusqueda")) {
				this.jButtondisponiblePedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_porcentajePedidoExporBusqueda")) {
				this.jButtondescuento_porcentajePedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_con_ivaPedidoExporBusqueda")) {
				this.jButtontotal_con_ivaPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("sumanPedidoExporBusqueda")) {
				this.jButtonsumanPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("descuento_valorPedidoExporBusqueda")) {
				this.jButtondescuento_valorPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_sin_ivaPedidoExporBusqueda")) {
				this.jButtontotal_sin_ivaPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("total_descuentoPedidoExporBusqueda")) {
				this.jButtontotal_descuentoPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fletePedidoExporBusqueda")) {
				this.jButtonfletePedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("totalPedidoExporBusqueda")) {
				this.jButtontotalPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("subtotalPedidoExporBusqueda")) {
				this.jButtonsubtotalPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("segurosPedidoExporBusqueda")) {
				this.jButtonsegurosPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("ivaPedidoExporBusqueda")) {
				this.jButtonivaPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("financiamientoPedidoExporBusqueda")) {
				this.jButtonfinanciamientoPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("monto_retencionPedidoExporBusqueda")) {
				this.jButtonmonto_retencionPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("otroPedidoExporBusqueda")) {
				this.jButtonotroPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("icePedidoExporBusqueda")) {
				this.jButtonicePedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaPedidoExporBusqueda")) {
				this.jButtonfechaPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fecha_servidorPedidoExporBusqueda")) {
				this.jButtonfecha_servidorPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoExpor")) {
				this.jButtonid_tipo_cambioPedidoExporActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoExporUpdate")) {
				this.jButtonid_tipo_cambioPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_cambioPedidoExporBusqueda")) {
				this.jButtonid_tipo_cambioPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("numero_fuePedidoExporBusqueda")) {
				this.jButtonnumero_fuePedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_centro_costoPedidoExpor")) {
				this.jButtonid_centro_costoPedidoExporActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_centro_costoPedidoExporArbol")) {
				this.abrirFrameTreeCentroCosto("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_centro_costoPedidoExporUpdate")) {
				this.jButtonid_centro_costoPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_centro_costoPedidoExporBusqueda")) {
				this.jButtonid_centro_costoPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_responsablePedidoExporUpdate")) {
				this.jButtonid_responsablePedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_responsablePedidoExporBusqueda")) {
				this.jButtonid_responsablePedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_inicioPedidoExporBusqueda")) {
				this.jButtonhora_inicioPedidoExporBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("hora_finPedidoExporBusqueda")) {
				this.jButtonhora_finPedidoExporBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transportistaPedidoExporUpdate")) {
				this.jButtonid_transportistaPedidoExporUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transportistaPedidoExporBusqueda")) {
				this.jButtonid_transportistaPedidoExporBusquedaActionPerformed(evt);
			}
			
			PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessPedidoExpor();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
			
			if(sTipo.equals("CloseInternalFramePedidoExpor")) {
				closingInternalFramePedidoExpor();
				
			} else if(sTipo.equals("jButtonCancelarPedidoExpor")) {
				JInternalFrameBase jInternalFrameDetalleFormPedidoExpor = (JInternalFrameBase)evt.getSource();
	            	
	            PedidoExporBeanSwingJInternalFrame jInternalFrameParent=(PedidoExporBeanSwingJInternalFrame)jInternalFrameDetalleFormPedidoExpor.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarPedidoExporActionPerformed(null);
			}
			
			PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.pedidoexpor,new Object(),this.pedidoexporParameterGeneral,this.pedidoexporReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormPedidoExpor(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormPedidoExpor(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormPedidoExpor(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.pedidoexpor)) {
			if(!esControlTabla) {
				if(PedidoExporJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);			
				}
				
				if(this.pedidoexporSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualPedidoExpor(this.pedidoexpor,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.pedidoexporReturnGeneral=pedidoexporLogic.procesarEventosPedidoExporsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.pedidoexporLogic.getPedidoExpors(),this.pedidoexpor,this.pedidoexporParameterGeneral,this.isEsNuevoPedidoExpor,classes);//this.pedidoexporLogic.getPedidoExpor()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanPedidoExpor(this.pedidoexporReturnGeneral,this.pedidoexporBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.pedidoexporSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanPedidoExpor(classes,this.pedidoexporReturnGeneral,this.pedidoexporBean,false);
					}
						
					if(this.pedidoexporReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyPedidoExpor(this.pedidoexporReturnGeneral.getPedidoExpor());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioPedidoExpor(this.pedidoexporReturnGeneral.getPedidoExpor());	
					}
						
					if(this.pedidoexporReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioPedidoExpor(this.pedidoexporReturnGeneral.getPedidoExpor(),classes);//this.pedidoexporBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioPedidoExpor(this.pedidoexpor,classes);//this.pedidoexporBean);									
				}
			
				if(PedidoExporJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualPedidoExpor(this.pedidoexpor,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysPedidoExpor(this.pedidoexpor);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.pedidoexporAnterior!=null) {
						this.pedidoexpor=this.pedidoexporAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.pedidoexporReturnGeneral=pedidoexporLogic.procesarEventosPedidoExporsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.pedidoexporLogic.getPedidoExpors(),this.pedidoexpor,this.pedidoexporParameterGeneral,this.isEsNuevoPedidoExpor,classes);//this.pedidoexporLogic.getPedidoExpor()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.pedidoexporSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.pedidoexporSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.pedidoexporReturnGeneral.getPedidoExpor(),pedidoexporLogic.getPedidoExpors());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.pedidoexporReturnGeneral.getPedidoExpor(),this.pedidoexpors);
				}
				//ARCHITECTURE
				
				//this.jTableDatosPedidoExpor.repaint();
				
				//((AbstractTableModel) this.jTableDatosPedidoExpor.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosPedidoExpor();
			}
		}
	}
	
	public void actualizarVisualTableDatosPedidoExpor() throws Exception {
		
		PedidoExporModel pedidoexporModel=(PedidoExporModel)this.jTableDatosPedidoExpor.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			pedidoexporModel.pedidoexpors=this.pedidoexporLogic.getPedidoExpors();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			pedidoexporModel.pedidoexpors=this.pedidoexpors;
		}
		
		
		((PedidoExporModel) this.jTableDatosPedidoExpor.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaPedidoExpor() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getpedidoexporAnterior(),this.pedidoexporLogic.getPedidoExpors());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getpedidoexporAnterior(),this.pedidoexpors);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosPedidoExpor();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioPedidoExpor(PedidoExpor pedidoexpor,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(DetallePedidoExpor.class)) {
					this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporLogic.setDetallePedidoExpors(pedidoexpor.getDetallePedidoExpors());
					this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetallePedidoExpor(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.pedidoexpor,new Object(),generalEntityParameterGeneral,this.pedidoexporReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.pedidoexporSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=PedidoExporConstantesFunciones.getClassesRelationshipsOfPedidoExpor(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=PedidoExporConstantesFunciones.getClassesRelationshipsFromStringsOfPedidoExpor(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormPedidoExpor(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				PedidoExporBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.pedidoexpor,new Object(),generalEntityParameterGeneral,this.pedidoexporReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioPedidoExpor(PedidoExporBean pedidoexporBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(DetallePedidoExpor.class)) {
					this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporLogic.setDetallePedidoExpors(pedidoexpor.getDetallePedidoExpors());
					this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetallePedidoExpor(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanPedidoExpor(ArrayList<Classe> classes,PedidoExporReturnGeneral pedidoexporReturnGeneral,PedidoExporBean pedidoexporBean,Boolean conDefault) throws Exception {
		
			this.pedidoexporBean.setDetallePedidoExpors(pedidoexporReturnGeneral.getPedidoExpor().getDetallePedidoExpors());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualPedidoExpor(PedidoExpor pedidoexpor,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(DetallePedidoExpor.class)) {
					pedidoexpor.setDetallePedidoExpors(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporBeanSwingJInternalFrame.detallepedidoexporLogic.getDetallePedidoExpors());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.pedidoexpor)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormPedidoExpor = new PedidoExporDetalleFormJInternalFrame(jDesktopPane,this.pedidoexporSessionBean.getConGuardarRelaciones(),this.pedidoexporSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.setVisible(false);
		this.jInternalFrameDetalleFormPedidoExpor.setSelected(false);						
		
		this.jInternalFrameDetalleFormPedidoExpor.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormPedidoExpor.pedidoexporLogic=this.pedidoexporLogic;
		
		this.cargarCombosFrameForeignKeyPedidoExpor("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetallePedidoExpor();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetallePedidoExpor();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyPedidoExpor("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyPedidoExpor();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormPedidoExpor.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarPedidoExpor"));
		
		this.jInternalFrameDetalleFormPedidoExpor.jButtonModificarPedidoExpor.addActionListener(new ButtonActionListener(this,"ModificarPedidoExpor"));

		
		this.jInternalFrameDetalleFormPedidoExpor.jButtonModificarToolBarPedidoExpor.addActionListener(new ButtonActionListener(this,"ModificarToolBarPedidoExpor"));
					
		this.jInternalFrameDetalleFormPedidoExpor.jMenuItemModificarPedidoExpor.addActionListener(new ButtonActionListener(this,"MenuItemModificarPedidoExpor"));		
		
		
		
		this.jInternalFrameDetalleFormPedidoExpor.jButtonActualizarPedidoExpor.addActionListener (new ButtonActionListener(this,"ActualizarPedidoExpor"));
		
		
		this.jInternalFrameDetalleFormPedidoExpor.jButtonActualizarToolBarPedidoExpor.addActionListener(new ButtonActionListener(this,"ActualizarToolBarPedidoExpor"));
						
		this.jInternalFrameDetalleFormPedidoExpor.jMenuItemActualizarPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemActualizarPedidoExpor"));		
		
		
		
		this.jInternalFrameDetalleFormPedidoExpor.jButtonEliminarPedidoExpor.addActionListener (new ButtonActionListener(this,"EliminarPedidoExpor"));
		
		
		this.jInternalFrameDetalleFormPedidoExpor.jButtonEliminarToolBarPedidoExpor.addActionListener (new ButtonActionListener(this,"EliminarToolBarPedidoExpor"));
								
		this.jInternalFrameDetalleFormPedidoExpor.jMenuItemEliminarPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemEliminarPedidoExpor"));		
		
		
		
		this.jInternalFrameDetalleFormPedidoExpor.jButtonCancelarPedidoExpor.addActionListener (new ButtonActionListener(this,"CancelarPedidoExpor"));
		
		
		this.jInternalFrameDetalleFormPedidoExpor.jButtonCancelarToolBarPedidoExpor.addActionListener (new ButtonActionListener(this,"CancelarToolBarPedidoExpor"));
					
		this.jInternalFrameDetalleFormPedidoExpor.jMenuItemCancelarPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemCancelarPedidoExpor"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormPedidoExpor.jMenuItemDetalleCerrarPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarPedidoExpor"));		
		
		
		
		this.jInternalFrameDetalleFormPedidoExpor.jButtonGuardarCambiosToolBarPedidoExpor.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarPedidoExpor"));
		
		
		
		this.jInternalFrameDetalleFormPedidoExpor.jButtonGuardarCambiosToolBarPedidoExpor.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarPedidoExpor"));
		
		
		
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxTiposAccionesFormularioPedidoExpor.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioPedidoExpor"));
		
		
		//CAMPO EVENTO
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumero_preimpresoPedidoExpor.addFocusListener(new TextFieldFocusListener(this,"numero_preimpresoPedidoExpor"));
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumero_preimpresoPedidoExpor.addActionListener(new TextFieldActionListener(this,"numero_preimpresoPedidoExpor"));
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumero_preimpresoPedidoExpor.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldnumero_preimpresoPedidoExpor,"numero_preimpresoPedidoExpor"));


				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonidPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"idPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_empresaPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_empresaPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_empresaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_sucursalPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_sucursalPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_ejercicioPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_ejercicioPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_periodoPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_periodoPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_periodoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_anioPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_anioPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_anioPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_anioPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_mesPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_mesPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_mesPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_mesPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_usuarioPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_usuarioPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonnumeroPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"numeroPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonnumero_preimpresoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"numero_preimpresoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonfecha_emisionPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonfecha_vencimientoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"fecha_vencimientoPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_monedaPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_monedaPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_monedaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtoncotizacionPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"cotizacionPedidoExporBusqueda"));
		//jButtonid_empleadoPedidoExpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoPedidoExporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_empleadoPedidoExpor.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoExpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_empleadoPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_empleadoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_tipo_precioPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_precioPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_tipo_precioPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_precioPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_formatoPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_formatoPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_formatoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtondireccionPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"direccionPedidoExporBusqueda"));
		//jButtonid_clientePedidoExpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clientePedidoExporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_clientePedidoExpor.addActionListener(new ButtonActionListener(this,"id_clientePedidoExpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_clientePedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_clientePedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_clientePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_clientePedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtontelefonoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"telefonoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonrucPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"rucPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_paisPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_paisPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_paisPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_paisPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonlugar_entregaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"lugar_entregaPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonembarquePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"embarquePedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonnegociacionPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"negociacionPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_transportePedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_transportePedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_transportePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_transportePedidoExporBusqueda"));
		//jButtonid_vendedorPedidoExpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_vendedorPedidoExporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_vendedorPedidoExpor.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoExpor"));
		//jButtonid_vendedorPedidoExporArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeVendedor("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_vendedorPedidoExporArbol.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoExporArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_vendedorPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_vendedorPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonforma_pagoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"forma_pagoPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_sub_clientePedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_sub_clientePedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_sub_clientePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_sub_clientePedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_consignatarioPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_consignatarioPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_consignatarioPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_consignatarioPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_consultorPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_consultorPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_consultorPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_consultorPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonordenPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"ordenPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_estado_pedidoPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedidoPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_estado_pedidoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedidoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtondescripcionPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"descripcionPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonmontoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"montoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonsaldoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"saldoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtondisponiblePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"disponiblePedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtondescuento_porcentajePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"descuento_porcentajePedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtontotal_con_ivaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"total_con_ivaPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonsumanPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"sumanPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtondescuento_valorPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"descuento_valorPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtontotal_sin_ivaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"total_sin_ivaPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtontotal_descuentoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"total_descuentoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonfletePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"fletePedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtontotalPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"totalPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonsubtotalPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"subtotalPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonsegurosPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"segurosPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonivaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"ivaPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonfinanciamientoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"financiamientoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonmonto_retencionPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"monto_retencionPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonotroPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"otroPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonicePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"icePedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonfechaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"fechaPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonfecha_servidorPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"fecha_servidorPedidoExporBusqueda"));
		//jButtonid_tipo_cambioPedidoExpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioPedidoExporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_tipo_cambioPedidoExpor.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoExpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_tipo_cambioPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_tipo_cambioPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonnumero_fuePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"numero_fuePedidoExporBusqueda"));
		//jButtonid_centro_costoPedidoExpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoPedidoExporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_centro_costoPedidoExpor.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoExpor"));
		//jButtonid_centro_costoPedidoExporArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_centro_costoPedidoExporArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoExporArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_centro_costoPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_centro_costoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_responsablePedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_responsablePedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_responsablePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_responsablePedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonhora_inicioPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"hora_inicioPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonhora_finPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"hora_finPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_transportistaPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_transportistaPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_transportistaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_transportistaPedidoExporBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormPedidoExpor.jTabbedPaneRelacionesPedidoExpor.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesPedidoExpor"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFramePedidoExpor"));
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoExpor.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarPedidoExpor"));
		}
		
		this.jTableDatosPedidoExpor.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarPedidoExpor"));
		
		this.jTableDatosPedidoExpor.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarPedidoExpor"));
		
		this.jButtonNuevoPedidoExpor.addActionListener(new ButtonActionListener(this,"NuevoPedidoExpor"));
		
		this.jButtonDuplicarPedidoExpor.addActionListener(new ButtonActionListener(this,"DuplicarPedidoExpor"));
		
		this.jButtonCopiarPedidoExpor.addActionListener(new ButtonActionListener(this,"CopiarPedidoExpor"));
		
		this.jButtonVerFormPedidoExpor.addActionListener(new ButtonActionListener(this,"VerFormPedidoExpor"));
		
		
		this.jButtonNuevoToolBarPedidoExpor.addActionListener(new ButtonActionListener(this,"NuevoToolBarPedidoExpor"));
			
		this.jButtonDuplicarToolBarPedidoExpor.addActionListener(new ButtonActionListener(this,"DuplicarToolBarPedidoExpor"));
			
		this.jMenuItemNuevoPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemNuevoPedidoExpor"));
			
		this.jMenuItemDuplicarPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarPedidoExpor"));		
		
		
		this.jButtonNuevoRelacionesPedidoExpor.addActionListener (new ButtonActionListener(this,"NuevoRelacionesPedidoExpor"));
		
		
		this.jButtonNuevoRelacionesToolBarPedidoExpor.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarPedidoExpor"));
			
		this.jMenuItemNuevoRelacionesPedidoExpor.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesPedidoExpor"));		
		
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoExpor.jButtonModificarPedidoExpor.addActionListener(new ButtonActionListener(this,"ModificarPedidoExpor"));
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoExpor.jButtonModificarToolBarPedidoExpor.addActionListener(new ButtonActionListener(this,"ModificarToolBarPedidoExpor"));
			
			this.jInternalFrameDetalleFormPedidoExpor.jMenuItemModificarPedidoExpor.addActionListener(new ButtonActionListener(this,"MenuItemModificarPedidoExpor"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormPedidoExpor.jButtonActualizarPedidoExpor.addActionListener (new ButtonActionListener(this,"ActualizarPedidoExpor"));
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoExpor.jButtonActualizarToolBarPedidoExpor.addActionListener(new ButtonActionListener(this,"ActualizarToolBarPedidoExpor"));
				
			this.jInternalFrameDetalleFormPedidoExpor.jMenuItemActualizarPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemActualizarPedidoExpor"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoExpor.jButtonEliminarPedidoExpor.addActionListener (new ButtonActionListener(this,"EliminarPedidoExpor"));
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoExpor.jButtonEliminarToolBarPedidoExpor.addActionListener (new ButtonActionListener(this,"EliminarToolBarPedidoExpor"));
						
			this.jInternalFrameDetalleFormPedidoExpor.jMenuItemEliminarPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemEliminarPedidoExpor"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoExpor.jButtonCancelarPedidoExpor.addActionListener (new ButtonActionListener(this,"CancelarPedidoExpor"));
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoExpor.jButtonCancelarToolBarPedidoExpor.addActionListener (new ButtonActionListener(this,"CancelarToolBarPedidoExpor"));
			
			this.jInternalFrameDetalleFormPedidoExpor.jMenuItemCancelarPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemCancelarPedidoExpor"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarPedidoExpor.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarPedidoExpor"));		
		
		
		this.jButtonCerrarPedidoExpor.addActionListener (new ButtonActionListener(this,"CerrarPedidoExpor"));
		
		
		this.jButtonCerrarToolBarPedidoExpor.addActionListener (new ButtonActionListener(this,"CerrarToolBarPedidoExpor"));
			
		this.jMenuItemCerrarPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemCerrarPedidoExpor"));
			
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoExpor.jMenuItemDetalleCerrarPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarPedidoExpor"));		
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoExpor.jButtonGuardarCambiosPedidoExpor.addActionListener (new ButtonActionListener(this,"GuardarCambiosPedidoExpor"));
		}
		
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoExpor.jButtonGuardarCambiosToolBarPedidoExpor.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarPedidoExpor"));
		}
		
		this.jButtonCopiarToolBarPedidoExpor.addActionListener (new ButtonActionListener(this,"CopiarToolBarPedidoExpor"));
			
		this.jButtonVerFormToolBarPedidoExpor.addActionListener (new ButtonActionListener(this,"VerFormToolBarPedidoExpor"));
		
		this.jMenuItemGuardarCambiosPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosPedidoExpor"));
			
		this.jMenuItemCopiarPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemCopiarPedidoExpor"));		
		
		this.jMenuItemVerFormPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemVerFormPedidoExpor"));		
		
		
		this.jButtonGuardarCambiosTablaPedidoExpor.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaPedidoExpor"));
		
		
		this.jButtonGuardarCambiosTablaToolBarPedidoExpor.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarPedidoExpor"));
			
		this.jMenuItemGuardarCambiosTablaPedidoExpor.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaPedidoExpor"));		
		
		
		
		this.jButtonRecargarInformacionPedidoExpor.addActionListener (new ButtonActionListener(this,"RecargarInformacionPedidoExpor"));
					
		this.jButtonRecargarInformacionToolBarPedidoExpor.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarPedidoExpor"));
		
		this.jMenuItemRecargarInformacionPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionPedidoExpor"));		
		
		
		
		this.jButtonAnterioresPedidoExpor.addActionListener (new ButtonActionListener(this,"AnterioresPedidoExpor"));
		
		
		this.jButtonAnterioresToolBarPedidoExpor.addActionListener (new ButtonActionListener(this,"AnterioresToolBarPedidoExpor"));
		
		this.jMenuItemAnterioresPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresPedidoExpor"));		
		
		
		this.jButtonSiguientesPedidoExpor.addActionListener (new ButtonActionListener(this,"SiguientesPedidoExpor"));
		
		
		this.jButtonSiguientesToolBarPedidoExpor.addActionListener (new ButtonActionListener(this,"SiguientesToolBarPedidoExpor"));
			
		this.jMenuItemSiguientesPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesPedidoExpor"));
			
		this.jMenuItemAbrirOrderByPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByPedidoExpor"));
			
		this.jMenuItemMostrarOcultarPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarPedidoExpor"));
			
		this.jMenuItemDetalleAbrirOrderByPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByPedidoExpor"));
			
		this.jMenuItemDetalleMostarOcultarPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarPedidoExpor"));		
		
		
		this.jButtonNuevoGuardarCambiosPedidoExpor.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosPedidoExpor"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarPedidoExpor.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarPedidoExpor"));
			
		this.jMenuItemNuevoGuardarCambiosPedidoExpor.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosPedidoExpor"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosPedidoExpor.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosPedidoExpor"));

		this.jCheckBoxSeleccionadosPedidoExpor.addItemListener(new CheckBoxItemListener(this,"SeleccionadosPedidoExpor"));
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoExpor.jComboBoxTiposAccionesFormularioPedidoExpor.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioPedidoExpor"));
		}
		
		
		this.jComboBoxTiposRelacionesPedidoExpor.addActionListener (new ButtonActionListener(this,"TiposRelacionesPedidoExpor"));
			
		this.jComboBoxTiposAccionesPedidoExpor.addActionListener (new ButtonActionListener(this,"TiposAccionesPedidoExpor"));
					
		this.jComboBoxTiposSeleccionarPedidoExpor.addActionListener (new ButtonActionListener(this,"TiposSeleccionarPedidoExpor"));
			
		this.jTextFieldValorCampoGeneralPedidoExpor.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralPedidoExpor"));		
		
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) { //if(this.conCargarFormDetalle) {
		
		//CAMPO EVENTO
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumero_preimpresoPedidoExpor.addFocusListener(new TextFieldFocusListener(this,"numero_preimpresoPedidoExpor"));
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumero_preimpresoPedidoExpor.addActionListener(new TextFieldActionListener(this,"numero_preimpresoPedidoExpor"));
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumero_preimpresoPedidoExpor.getDocument().addDocumentListener(new TextFieldDocumentListener(this,this.jTextFieldnumero_preimpresoPedidoExpor,"numero_preimpresoPedidoExpor"));


		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonidPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"idPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_empresaPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_empresaPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_empresaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_sucursalPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_sucursalPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_ejercicioPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_ejercicioPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_periodoPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_periodoPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_periodoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_anioPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_anioPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_anioPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_anioPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_mesPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_mesPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_mesPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_mesPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_usuarioPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_usuarioPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonnumeroPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"numeroPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonnumero_preimpresoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"numero_preimpresoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonfecha_emisionPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonfecha_vencimientoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"fecha_vencimientoPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_monedaPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_monedaPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_monedaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtoncotizacionPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"cotizacionPedidoExporBusqueda"));
		//jButtonid_empleadoPedidoExpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoPedidoExporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_empleadoPedidoExpor.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoExpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_empleadoPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_empleadoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_tipo_precioPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_precioPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_tipo_precioPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_precioPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_formatoPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_formatoPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_formatoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtondireccionPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"direccionPedidoExporBusqueda"));
		//jButtonid_clientePedidoExpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clientePedidoExporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_clientePedidoExpor.addActionListener(new ButtonActionListener(this,"id_clientePedidoExpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_clientePedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_clientePedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_clientePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_clientePedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtontelefonoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"telefonoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonrucPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"rucPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_paisPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_paisPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_paisPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_paisPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonlugar_entregaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"lugar_entregaPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonembarquePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"embarquePedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonnegociacionPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"negociacionPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_transportePedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_transportePedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_transportePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_transportePedidoExporBusqueda"));
		//jButtonid_vendedorPedidoExpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_vendedorPedidoExporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_vendedorPedidoExpor.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoExpor"));
		//jButtonid_vendedorPedidoExporArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeVendedor("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_vendedorPedidoExporArbol.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoExporArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_vendedorPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_vendedorPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonforma_pagoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"forma_pagoPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_sub_clientePedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_sub_clientePedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_sub_clientePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_sub_clientePedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_consignatarioPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_consignatarioPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_consignatarioPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_consignatarioPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_consultorPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_consultorPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_consultorPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_consultorPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonordenPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"ordenPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_estado_pedidoPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedidoPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_estado_pedidoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedidoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtondescripcionPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"descripcionPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonmontoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"montoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonsaldoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"saldoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtondisponiblePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"disponiblePedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtondescuento_porcentajePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"descuento_porcentajePedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtontotal_con_ivaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"total_con_ivaPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonsumanPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"sumanPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtondescuento_valorPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"descuento_valorPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtontotal_sin_ivaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"total_sin_ivaPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtontotal_descuentoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"total_descuentoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonfletePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"fletePedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtontotalPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"totalPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonsubtotalPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"subtotalPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonsegurosPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"segurosPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonivaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"ivaPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonfinanciamientoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"financiamientoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonmonto_retencionPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"monto_retencionPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonotroPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"otroPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonicePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"icePedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonfechaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"fechaPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonfecha_servidorPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"fecha_servidorPedidoExporBusqueda"));
		//jButtonid_tipo_cambioPedidoExpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioPedidoExporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_tipo_cambioPedidoExpor.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoExpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_tipo_cambioPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_tipo_cambioPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonnumero_fuePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"numero_fuePedidoExporBusqueda"));
		//jButtonid_centro_costoPedidoExpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoPedidoExporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_centro_costoPedidoExpor.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoExpor"));
		//jButtonid_centro_costoPedidoExporArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_centro_costoPedidoExporArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoExporArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_centro_costoPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_centro_costoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_responsablePedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_responsablePedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_responsablePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_responsablePedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonhora_inicioPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"hora_inicioPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonhora_finPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"hora_finPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_transportistaPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_transportistaPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_transportistaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_transportistaPedidoExporBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdCentroCostoPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoPedidoExpor"));

			this.jButtonBuscarFK_IdCentroCostoid_centro_costoPedidoExpor.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoExpor"));

			this.jButtonFK_IdClientePedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdClientePedidoExpor"));

			this.jButtonBuscarFK_IdClienteid_clientePedidoExpor.addActionListener(new ButtonActionListener(this,"id_clientePedidoExpor"));

			this.jButtonFK_IdConsignatarioPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdConsignatarioPedidoExpor"));

			this.jButtonFK_IdConsultorPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdConsultorPedidoExpor"));

			this.jButtonFK_IdEmpleadoPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoPedidoExpor"));

			this.jButtonBuscarFK_IdEmpleadoid_empleadoPedidoExpor.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoExpor"));

			this.jButtonFK_IdEstadoPedidoExporPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoExporPedidoExpor"));

			this.jButtonFK_IdFormatoPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdFormatoPedidoExpor"));

			this.jButtonFK_IdPaisPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdPaisPedidoExpor"));

			this.jButtonFK_IdResponsablePedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdResponsablePedidoExpor"));

			this.jButtonFK_IdSubClientePedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdSubClientePedidoExpor"));

			this.jButtonFK_IdTipoCambioPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdTipoCambioPedidoExpor"));

			this.jButtonBuscarFK_IdTipoCambioid_tipo_cambioPedidoExpor.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoExpor"));

			this.jButtonFK_IdTipoPrecioPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdTipoPrecioPedidoExpor"));

			this.jButtonFK_IdTransportePedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdTransportePedidoExpor"));

			this.jButtonFK_IdTransportistaPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdTransportistaPedidoExpor"));

			this.jButtonFK_IdVendedorPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdVendedorPedidoExpor"));

			this.jButtonBuscarFK_IdVendedorid_vendedorPedidoExpor.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoExpor"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoPedidoExpor!=null) {
				this.jInternalFrameReporteDinamicoPedidoExpor.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoPedidoExpor"));
				this.jInternalFrameReporteDinamicoPedidoExpor.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoPedidoExpor"));
				this.jInternalFrameReporteDinamicoPedidoExpor.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoPedidoExpor"));
			}
			
			//this.jButtonCerrarReporteDinamicoPedidoExpor.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoPedidoExpor"));				
			//this.jButtonGenerarReporteDinamicoPedidoExpor.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoPedidoExpor"));
			//this.jButtonGenerarExcelReporteDinamicoPedidoExpor.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoPedidoExpor"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionPedidoExpor!=null) {
				this.jInternalFrameImportacionPedidoExpor.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionPedidoExpor"));
				this.jInternalFrameImportacionPedidoExpor.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionPedidoExpor"));
				this.jInternalFrameImportacionPedidoExpor.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionPedidoExpor"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByPedidoExpor.addActionListener (new ButtonActionListener(this,"AbrirOrderByPedidoExpor"));
			
			this.jButtonAbrirOrderByToolBarPedidoExpor.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarPedidoExpor"));			
			
			if(this.jInternalFrameOrderByPedidoExpor!=null) {
				this.jInternalFrameOrderByPedidoExpor.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByPedidoExpor"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormPedidoExpor!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormPedidoExpor.jTabbedPaneRelacionesPedidoExpor.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesPedidoExpor"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFramePedidoExpor();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormPedidoExpor.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormPedidoExpor = (JInternalFrameBase)event.getSource();
	            	
	            PedidoExporBeanSwingJInternalFrame jInternalFrameParent=(PedidoExporBeanSwingJInternalFrame)jInternalFrameDetalleFormPedidoExpor.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarPedidoExporActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosPedidoExpor.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosPedidoExporListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosPedidoExpor.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosPedidoExpor.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoExporActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoExporActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoExporActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoPedidoExpor";
		inputMap = this.jButtonNuevoPedidoExpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoPedidoExpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoPedidoExporActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoExporActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoExporActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoPedidoExporActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesPedidoExpor";
		inputMap = this.jButtonNuevoRelacionesPedidoExpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesPedidoExpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoPedidoExporActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarPedidoExpor";
		inputMap = this.jButtonModificarPedidoExpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarPedidoExpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarPedidoExporActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarPedidoExpor";
		inputMap = this.jButtonActualizarPedidoExpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarPedidoExpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarPedidoExporActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarPedidoExpor";
		inputMap = this.jButtonEliminarPedidoExpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarPedidoExpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarPedidoExporActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarPedidoExpor";
		inputMap = this.jButtonCancelarPedidoExpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarPedidoExpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarPedidoExporActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarPedidoExpor";
		inputMap = this.jButtonCerrarPedidoExpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarPedidoExpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarPedidoExporActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormPedidoExpor.jButtonGuardarCambiosPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosPedidoExpor";
		inputMap = this.jInternalFrameDetalleFormPedidoExpor.jButtonGuardarCambiosPedidoExpor.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormPedidoExpor.jButtonGuardarCambiosPedidoExpor.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosPedidoExporActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosPedidoExpor.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosPedidoExporItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesPedidoExpor.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesPedidoExporActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarPedidoExpor.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarPedidoExporActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralPedidoExpor.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralPedidoExporActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonidPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"idPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_empresaPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_empresaPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_empresaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_sucursalPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_sucursalPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_ejercicioPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_ejercicioPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_periodoPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_periodoPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_periodoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_anioPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_anioPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_anioPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_anioPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_mesPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_mesPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_mesPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_mesPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_usuarioPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_usuarioPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonnumeroPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"numeroPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonnumero_preimpresoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"numero_preimpresoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonfecha_emisionPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"fecha_emisionPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonfecha_vencimientoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"fecha_vencimientoPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_monedaPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_monedaPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_monedaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtoncotizacionPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"cotizacionPedidoExporBusqueda"));
		//jButtonid_empleadoPedidoExpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoPedidoExporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_empleadoPedidoExpor.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoExpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_empleadoPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_empleadoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_tipo_precioPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_precioPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_tipo_precioPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_precioPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_formatoPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_formatoPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_formatoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_formatoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtondireccionPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"direccionPedidoExporBusqueda"));
		//jButtonid_clientePedidoExpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clientePedidoExporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_clientePedidoExpor.addActionListener(new ButtonActionListener(this,"id_clientePedidoExpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_clientePedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_clientePedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_clientePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_clientePedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtontelefonoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"telefonoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonrucPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"rucPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_paisPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_paisPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_paisPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_paisPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonlugar_entregaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"lugar_entregaPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonembarquePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"embarquePedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonnegociacionPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"negociacionPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_transportePedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_transportePedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_transportePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_transportePedidoExporBusqueda"));
		//jButtonid_vendedorPedidoExpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_vendedorPedidoExporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_vendedorPedidoExpor.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoExpor"));
		//jButtonid_vendedorPedidoExporArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeVendedor("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_vendedorPedidoExporArbol.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoExporArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_vendedorPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_vendedorPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonforma_pagoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"forma_pagoPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_sub_clientePedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_sub_clientePedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_sub_clientePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_sub_clientePedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_consignatarioPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_consignatarioPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_consignatarioPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_consignatarioPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_consultorPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_consultorPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_consultorPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_consultorPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonordenPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"ordenPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_estado_pedidoPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_estado_pedidoPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_estado_pedidoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_pedidoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtondescripcionPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"descripcionPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonmontoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"montoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonsaldoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"saldoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtondisponiblePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"disponiblePedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtondescuento_porcentajePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"descuento_porcentajePedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtontotal_con_ivaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"total_con_ivaPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonsumanPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"sumanPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtondescuento_valorPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"descuento_valorPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtontotal_sin_ivaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"total_sin_ivaPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtontotal_descuentoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"total_descuentoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonfletePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"fletePedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtontotalPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"totalPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonsubtotalPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"subtotalPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonsegurosPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"segurosPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonivaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"ivaPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonfinanciamientoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"financiamientoPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonmonto_retencionPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"monto_retencionPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonotroPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"otroPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonicePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"icePedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonfechaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"fechaPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonfecha_servidorPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"fecha_servidorPedidoExporBusqueda"));
		//jButtonid_tipo_cambioPedidoExpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_tipo_cambioPedidoExporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_tipo_cambioPedidoExpor.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoExpor"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_tipo_cambioPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_tipo_cambioPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonnumero_fuePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"numero_fuePedidoExporBusqueda"));
		//jButtonid_centro_costoPedidoExpor.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_centro_costoPedidoExporActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_centro_costoPedidoExpor.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoExpor"));
		//jButtonid_centro_costoPedidoExporArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCentroCosto("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_centro_costoPedidoExporArbol.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoExporArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_centro_costoPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_centro_costoPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_responsablePedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_responsablePedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_responsablePedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_responsablePedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonhora_inicioPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"hora_inicioPedidoExporBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonhora_finPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"hora_finPedidoExporBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_transportistaPedidoExporUpdate.addActionListener(new ButtonActionListener(this,"id_transportistaPedidoExporUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormPedidoExpor.jButtonid_transportistaPedidoExporBusqueda.addActionListener(new ButtonActionListener(this,"id_transportistaPedidoExporBusqueda"));
		
		
		this.jButtonFK_IdCentroCostoPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdCentroCostoPedidoExpor"));

		this.jButtonBuscarFK_IdCentroCostoid_centro_costoPedidoExpor.addActionListener(new ButtonActionListener(this,"id_centro_costoPedidoExpor"));

		this.jButtonFK_IdClientePedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdClientePedidoExpor"));

		this.jButtonBuscarFK_IdClienteid_clientePedidoExpor.addActionListener(new ButtonActionListener(this,"id_clientePedidoExpor"));

		this.jButtonFK_IdConsignatarioPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdConsignatarioPedidoExpor"));

		this.jButtonFK_IdConsultorPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdConsultorPedidoExpor"));

		this.jButtonFK_IdEmpleadoPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoPedidoExpor"));

		this.jButtonBuscarFK_IdEmpleadoid_empleadoPedidoExpor.addActionListener(new ButtonActionListener(this,"id_empleadoPedidoExpor"));

		this.jButtonFK_IdEstadoPedidoExporPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdEstadoPedidoExporPedidoExpor"));

		this.jButtonFK_IdFormatoPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdFormatoPedidoExpor"));

		this.jButtonFK_IdPaisPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdPaisPedidoExpor"));

		this.jButtonFK_IdResponsablePedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdResponsablePedidoExpor"));

		this.jButtonFK_IdSubClientePedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdSubClientePedidoExpor"));

		this.jButtonFK_IdTipoCambioPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdTipoCambioPedidoExpor"));

		this.jButtonBuscarFK_IdTipoCambioid_tipo_cambioPedidoExpor.addActionListener(new ButtonActionListener(this,"id_tipo_cambioPedidoExpor"));

		this.jButtonFK_IdTipoPrecioPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdTipoPrecioPedidoExpor"));

		this.jButtonFK_IdTransportePedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdTransportePedidoExpor"));

		this.jButtonFK_IdTransportistaPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdTransportistaPedidoExpor"));

		this.jButtonFK_IdVendedorPedidoExpor.addActionListener(new ButtonActionListener(this,"FK_IdVendedorPedidoExpor"));

		this.jButtonBuscarFK_IdVendedorid_vendedorPedidoExpor.addActionListener(new ButtonActionListener(this,"id_vendedorPedidoExpor"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionPedidoExpor.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionPedidoExporActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarPedidoExporActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarPedidoExpor.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosPedidoExpor(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(PedidoExpor pedidoexporAux:this.pedidoexporLogic.getPedidoExpors()) {
					pedidoexporAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PedidoExpor pedidoexporAux:pedidoexpors) {
					pedidoexporAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosPedidoExporItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingPedidoExpor(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(PedidoExpor pedidoexporAux:this.pedidoexporLogic.getPedidoExpors()) {
						pedidoexporAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(PedidoExpor pedidoexporAux:pedidoexpors) {
						pedidoexporAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(PedidoExpor pedidoexporAux:this.pedidoexporLogic.getPedidoExpors()) {
					
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(PedidoExpor pedidoexporAux:pedidoexpors) {
						
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaPedidoExpor(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosPedidoExpor.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosPedidoExpor.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosPedidoExporItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingPedidoExpor(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosPedidoExpor.getSelectedRows();
			
			PedidoExpor pedidoexporLocal=new PedidoExpor();
			
			//this.seleccionarTodosPedidoExpor(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					pedidoexporLocal =(PedidoExpor) this.pedidoexporLogic.getPedidoExpors().toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					pedidoexporLocal =(PedidoExpor) this.pedidoexpors.toArray()[this.jTableDatosPedidoExpor.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				pedidoexporLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(PedidoExpor pedidoexporAux:this.pedidoexporLogic.getPedidoExpors()) {
						pedidoexporAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(PedidoExpor pedidoexporAux:pedidoexpors) {
						pedidoexporAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaPedidoExpor(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosPedidoExpor.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosPedidoExpor.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosPedidoExpor,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualPedidoExporItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarPedidoExporParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralPedidoExporActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingPedidoExpor(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralPedidoExpor.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(PedidoExpor pedidoexporAux:this.pedidoexporLogic.getPedidoExpors()) {
				
						if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_NUMERO)) {
							existe=true;
							pedidoexporAux.setnumero(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_NUMEROAUTORIZACION)) {
							existe=true;
							pedidoexporAux.setnumero_preimpreso(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							pedidoexporAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_FECHAVENCIMIENTO)) {
							existe=true;
							pedidoexporAux.setfecha_vencimiento(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_COTIZACION)) {
							existe=true;
							pedidoexporAux.setcotizacion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_DIRECCION)) {
							existe=true;
							pedidoexporAux.setdireccion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_TELEFONO)) {
							existe=true;
							pedidoexporAux.settelefono(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_RUC)) {
							existe=true;
							pedidoexporAux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_LUGARENTREGA)) {
							existe=true;
							pedidoexporAux.setlugar_entrega(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_EMBARQUE)) {
							existe=true;
							pedidoexporAux.setembarque(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_NEGOCIACION)) {
							existe=true;
							pedidoexporAux.setnegociacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_FORMAPAGO)) {
							existe=true;
							pedidoexporAux.setforma_pago(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_ORDEN)) {
							existe=true;
							pedidoexporAux.setorden(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							pedidoexporAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_MONTO)) {
							existe=true;
							pedidoexporAux.setmonto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_SALDO)) {
							existe=true;
							pedidoexporAux.setsaldo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_DISPONIBLE)) {
							existe=true;
							pedidoexporAux.setdisponible(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_DESCUENTOPORCENTAJE)) {
							existe=true;
							pedidoexporAux.setdescuento_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_TOTALCONIVA)) {
							existe=true;
							pedidoexporAux.settotal_con_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_SUMAN)) {
							existe=true;
							pedidoexporAux.setsuman(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_DESCUENTOVALOR)) {
							existe=true;
							pedidoexporAux.setdescuento_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_TOTALSINIVA)) {
							existe=true;
							pedidoexporAux.settotal_sin_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_TOTALDESCUENTO)) {
							existe=true;
							pedidoexporAux.settotal_descuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_FLETE)) {
							existe=true;
							pedidoexporAux.setflete(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							pedidoexporAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_SUBTOTAL)) {
							existe=true;
							pedidoexporAux.setsubtotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_SEGUROS)) {
							existe=true;
							pedidoexporAux.setseguros(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IVA)) {
							existe=true;
							pedidoexporAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_FINANCIAMIENTO)) {
							existe=true;
							pedidoexporAux.setfinanciamiento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_MONTORETENCION)) {
							existe=true;
							pedidoexporAux.setmonto_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_OTRO)) {
							existe=true;
							pedidoexporAux.setotro(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_ICE)) {
							existe=true;
							pedidoexporAux.setice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							pedidoexporAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_FECHASERVIDOR)) {
							existe=true;
							pedidoexporAux.setfecha_servidor(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_NUMEROFUE)) {
							existe=true;
							pedidoexporAux.setnumero_fue(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_HORAINICIO)) {
							existe=true;
							pedidoexporAux.sethora_inicio(Time.valueOf(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_HORAFIN)) {
							existe=true;
							pedidoexporAux.sethora_fin(Time.valueOf(this.sValorCampoGeneral));
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PedidoExpor pedidoexporAux:pedidoexpors) {
					
						if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_NUMERO)) {
							existe=true;
							pedidoexporAux.setnumero(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_NUMEROAUTORIZACION)) {
							existe=true;
							pedidoexporAux.setnumero_preimpreso(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_FECHAEMISION)) {
							existe=true;
							pedidoexporAux.setfecha_emision(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_FECHAVENCIMIENTO)) {
							existe=true;
							pedidoexporAux.setfecha_vencimiento(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_COTIZACION)) {
							existe=true;
							pedidoexporAux.setcotizacion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_DIRECCION)) {
							existe=true;
							pedidoexporAux.setdireccion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_TELEFONO)) {
							existe=true;
							pedidoexporAux.settelefono(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_RUC)) {
							existe=true;
							pedidoexporAux.setruc(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_LUGARENTREGA)) {
							existe=true;
							pedidoexporAux.setlugar_entrega(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_EMBARQUE)) {
							existe=true;
							pedidoexporAux.setembarque(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_NEGOCIACION)) {
							existe=true;
							pedidoexporAux.setnegociacion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_FORMAPAGO)) {
							existe=true;
							pedidoexporAux.setforma_pago(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_ORDEN)) {
							existe=true;
							pedidoexporAux.setorden(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_DESCRIPCION)) {
							existe=true;
							pedidoexporAux.setdescripcion(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_MONTO)) {
							existe=true;
							pedidoexporAux.setmonto(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_SALDO)) {
							existe=true;
							pedidoexporAux.setsaldo(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_DISPONIBLE)) {
							existe=true;
							pedidoexporAux.setdisponible(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_DESCUENTOPORCENTAJE)) {
							existe=true;
							pedidoexporAux.setdescuento_porcentaje(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_TOTALCONIVA)) {
							existe=true;
							pedidoexporAux.settotal_con_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_SUMAN)) {
							existe=true;
							pedidoexporAux.setsuman(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_DESCUENTOVALOR)) {
							existe=true;
							pedidoexporAux.setdescuento_valor(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_TOTALSINIVA)) {
							existe=true;
							pedidoexporAux.settotal_sin_iva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_TOTALDESCUENTO)) {
							existe=true;
							pedidoexporAux.settotal_descuento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_FLETE)) {
							existe=true;
							pedidoexporAux.setflete(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_TOTAL)) {
							existe=true;
							pedidoexporAux.settotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_SUBTOTAL)) {
							existe=true;
							pedidoexporAux.setsubtotal(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_SEGUROS)) {
							existe=true;
							pedidoexporAux.setseguros(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IVA)) {
							existe=true;
							pedidoexporAux.setiva(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_FINANCIAMIENTO)) {
							existe=true;
							pedidoexporAux.setfinanciamiento(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_MONTORETENCION)) {
							existe=true;
							pedidoexporAux.setmonto_retencion(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_OTRO)) {
							existe=true;
							pedidoexporAux.setotro(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_ICE)) {
							existe=true;
							pedidoexporAux.setice(Double.parseDouble(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							pedidoexporAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_FECHASERVIDOR)) {
							existe=true;
							pedidoexporAux.setfecha_servidor(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_NUMEROFUE)) {
							existe=true;
							pedidoexporAux.setnumero_fue(this.sValorCampoGeneral);
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_HORAINICIO)) {
							existe=true;
							pedidoexporAux.sethora_inicio(Time.valueOf(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_HORAFIN)) {
							existe=true;
							pedidoexporAux.sethora_fin(Time.valueOf(this.sValorCampoGeneral));
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaPedidoExpor(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesPedidoExporActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingPedidoExpor(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioPedidoExpor=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesPedidoExpor.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormPedidoExpor.jComboBoxTiposAccionesFormularioPedidoExpor.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReportePedidoExpor) {				
					conSplash=true;//false;										
					
					//this.startProcessPedidoExpor(conSplash);
				
					this.generarReportePedidoExporsSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPedidoExpor.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPedidoExpor.jComboBoxTiposAccionesFormularioPedidoExpor.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoPedidoExporsSeleccionados();
				//this.jComboBoxTiposAccionesPedidoExpor.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoPedidoExporsSeleccionados(false);
				//this.jComboBoxTiposAccionesPedidoExpor.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoPedidoExporsSeleccionados(true);
				//this.jComboBoxTiposAccionesPedidoExpor.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessPedidoExpor();
				
				this.exportarPedidoExporsSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPedidoExpor.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPedidoExpor.jComboBoxTiposAccionesFormularioPedidoExpor.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionPedidoExpors();
				//this.importarPedidoExpors();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPedidoExpor.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPedidoExpor.jComboBoxTiposAccionesFormularioPedidoExpor.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessPedidoExpor();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelPedidoExporsSeleccionados();
				//this.jComboBoxTiposAccionesPedidoExpor.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Pedido Exportacion", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessPedidoExpor();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoPedidoExpor)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyPedidoExpor(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Pedido Exportacion",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesPedidoExpor.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormPedidoExpor.jComboBoxTiposAccionesFormularioPedidoExpor.setSelectedIndex(0);					
				}	
			} 			
			else if(PedidoExporBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReportePedidoExpor) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessPedidoExpor(conSplash);
					
						//this.actualizarParametrosGeneralPedidoExpor();
						
						this.generarReporteProcesoAccionPedidoExporsSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesPedidoExpor.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormPedidoExpor.jComboBoxTiposAccionesFormularioPedidoExpor.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(PedidoExporBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Pedido ExportacionS SELECCIONADOS?", "MANTENIMIENTO DE Pedido Exportacion", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessPedidoExpor();
				
						this.actualizarParametrosGeneralPedidoExpor();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.pedidoexporReturnGeneral=pedidoexporLogic.procesarAccionPedidoExporsWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.pedidoexporLogic.getPedidoExpors(),this.pedidoexporParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarPedidoExporReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesPedidoExpor.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxTiposAccionesFormularioPedidoExpor.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralPedidoExpor();
					
					PedidoExporBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarPedidoExporReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesPedidoExpor.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormPedidoExpor.jComboBoxTiposAccionesFormularioPedidoExpor.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessPedidoExpor(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesPedidoExporActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessPedidoExpor();
			
			if(this.jInternalFrameDetalleFormPedidoExpor==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<PedidoExpor> pedidoexporsSeleccionados=new ArrayList<PedidoExpor>();		
			PedidoExpor pedidoexpor=new PedidoExpor();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingPedidoExpor(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesPedidoExpor.getSelectedItem();
			
			
			
			
			pedidoexporsSeleccionados=this.getPedidoExporsSeleccionados(true);
			//this.sTipoAccion;
			
			if(pedidoexporsSeleccionados.size()==1) {
				for(PedidoExpor pedidoexporAux:pedidoexporsSeleccionados) {
					pedidoexpor=pedidoexporAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Detalle Pedido Exportacion")) {
					jButtonDetallePedidoExporActionPerformed(null,rowIndex,true,false,pedidoexpor);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessPedidoExpor();
			
      		//this.finishProcessPedidoExpor(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarPedidoExporReturnGeneral() throws Exception {
		if(this.pedidoexporReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.pedidoexporReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.pedidoexporReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.pedidoexporReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.pedidoexporReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.pedidoexporReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingPedidoExpor(false);
		}
		
		if(this.pedidoexporReturnGeneral.getConRetornoLista() || this.pedidoexporReturnGeneral.getConRetornoObjeto()) {
			if(this.pedidoexporReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.pedidoexporLogic.setPedidoExpors(this.pedidoexporReturnGeneral.getPedidoExpors());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.pedidoexporReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.pedidoexporLogic.setPedidoExpor(this.pedidoexporReturnGeneral.getPedidoExpor());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingPedidoExpor(false);
		}
	}
	
	public void actualizarParametrosGeneralPedidoExpor() throws Exception {
		
		
	}
	
	public ArrayList<PedidoExpor> getPedidoExporsSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<PedidoExpor> pedidoexporsSeleccionados=new ArrayList<PedidoExpor>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioPedidoExpor) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(PedidoExpor pedidoexporAux:pedidoexporLogic.getPedidoExpors()) {
					if(pedidoexporAux.getIsSelected()) {
						pedidoexporsSeleccionados.add(pedidoexporAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(PedidoExpor pedidoexporAux:this.pedidoexpors) {
					if(pedidoexporAux.getIsSelected()) {
						pedidoexporsSeleccionados.add(pedidoexporAux);				
					}
				}
			}
			
			if(pedidoexporsSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						pedidoexporsSeleccionados.addAll(this.pedidoexporLogic.getPedidoExpors());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						pedidoexporsSeleccionados.addAll(this.pedidoexpors);				
					}
				}
			}
		} else {
			pedidoexporsSeleccionados.add(this.pedidoexpor);
		}
		
		return pedidoexporsSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReportePedidoExporsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalPedidoExporsSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoPedidoExporsSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoPedidoExporsSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoPedidoExporsSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesPedidoExporsSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Pedido Exportacion",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesPedidoExporsSeleccionados() throws Exception {
		ArrayList<PedidoExpor> pedidoexporsSeleccionados=new ArrayList<PedidoExpor>();		
		
		pedidoexporsSeleccionados=this.getPedidoExporsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReportePedidoExpors("Todos",pedidoexporsSeleccionados);
		
	}	
	
	public void generarReporteNormalPedidoExporsSeleccionados() throws Exception {
		ArrayList<PedidoExpor> pedidoexporsSeleccionados=new ArrayList<PedidoExpor>();		
		
		pedidoexporsSeleccionados=this.getPedidoExporsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReportePedidoExpors("Todos",pedidoexporsSeleccionados);
	}		
	
	public void generarReporteProcesoAccionPedidoExporsSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<PedidoExpor> pedidoexporsSeleccionados=new ArrayList<PedidoExpor>();
		
		pedidoexporsSeleccionados=this.getPedidoExporsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReportePedidoExpors("Todos",pedidoexporsSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoPedidoExporsSeleccionados() throws Exception {
		ArrayList<PedidoExpor> pedidoexporsSeleccionados=new ArrayList<PedidoExpor>();		
		
		
		this.abrirInicializarFrameReporteDinamicoPedidoExpor();
		
		
		pedidoexporsSeleccionados=this.getPedidoExporsSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoPedidoExpor();
		
		
		//this.generarReportePedidoExpors("Todos",pedidoexporsSeleccionados ,pedidoexporImplementable,pedidoexporImplementableHome);
	}
	
	public void mostrarImportacionPedidoExpors() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionPedidoExpor();
		
		this.abrirFrameImportacionPedidoExpor();		
		
			
		//this.generarReportePedidoExpors("Todos",pedidoexporsSeleccionados ,pedidoexporImplementable,pedidoexporImplementableHome);
	}
	
	public void importarPedidoExpors() throws Exception {		
	
	}
	
	public void exportarPedidoExporsSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelPedidoExporsSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoPedidoExporsSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlPedidoExporsSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Pedido Exportacion",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoPedidoExporsSeleccionados() throws Exception {
		ArrayList<PedidoExpor> pedidoexporsSeleccionados=new ArrayList<PedidoExpor>();		
		
		pedidoexporsSeleccionados=this.getPedidoExporsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedidoexpor."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarPedidoExpor(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(PedidoExpor pedidoexporAux:pedidoexporsSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarPedidoExpor(pedidoexporAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//pedidoexporAux.setsDetalleGeneralEntityReporte(pedidoexporAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidoexporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Exportacion",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarPedidoExpor(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDUSUARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_NUMERO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_NUMEROAUTORIZACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_FECHAEMISION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_FECHAVENCIMIENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDMONEDA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_COTIZACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDEMPLEADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDTIPOPRECIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDFORMATO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_DIRECCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_TELEFONO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_RUC;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDPAIS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_LUGARENTREGA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_EMBARQUE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_NEGOCIACION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDTRANSPORTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDVENDEDOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_FORMAPAGO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDSUBCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDCONSIGNATARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDCONSULTOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_ORDEN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDESTADOPEDIDOEXPOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_DESCRIPCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_MONTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_SALDO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_DISPONIBLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_DESCUENTOPORCENTAJE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_TOTALCONIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_SUMAN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_DESCUENTOVALOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_TOTALSINIVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_TOTALDESCUENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_FLETE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_TOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_SUBTOTAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_SEGUROS;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IVA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_FINANCIAMIENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_MONTORETENCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_OTRO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_ICE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_FECHA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_FECHASERVIDOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDTIPOCAMBIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_NUMEROFUE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDCENTROCOSTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDRESPONSABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_HORAINICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_HORAFIN;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=PedidoExporConstantesFunciones.LABEL_IDTRANSPORTISTA;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarPedidoExpor(PedidoExpor pedidoexpor,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=pedidoexpor.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getusuario_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getnumero();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getnumero_preimpreso();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getfecha_emision().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getfecha_vencimiento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getmoneda_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getcotizacion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getempleado_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.gettipoprecio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getformato_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getdireccion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.gettelefono();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getruc();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getpais_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getlugar_entrega();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getembarque();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getnegociacion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.gettransporte_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getvendedor_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getforma_pago();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getsubcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getconsignatario_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getconsultor_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getorden();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getestadopedidoexpor_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getdescripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getmonto().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getsaldo().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getdisponible().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getdescuento_porcentaje().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.gettotal_con_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getsuman().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getdescuento_valor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.gettotal_sin_iva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.gettotal_descuento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getflete().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.gettotal().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getsubtotal().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getseguros().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getiva().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getfinanciamiento().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getmonto_retencion().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getotro().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getice().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getfecha().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getfecha_servidor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.gettipocambio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getnumero_fue();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getcentrocosto_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.getresponsable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.gethora_inicio().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.gethora_fin().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=pedidoexpor.gettransportista_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelPedidoExporsSeleccionados() throws Exception {
		ArrayList<PedidoExpor> pedidoexporsSeleccionados=new ArrayList<PedidoExpor>();		
		
		pedidoexporsSeleccionados=this.getPedidoExporsSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedidoexpor.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("PedidoExpors");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelPedidoExpor(row);				
				iRow++;
			}				
			
			for(PedidoExpor pedidoexporAux:pedidoexporsSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelPedidoExpor(pedidoexporAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidoexporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Exportacion",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlPedidoExporsSeleccionados() throws Exception {
		ArrayList<PedidoExpor> pedidoexporsSeleccionados=new ArrayList<PedidoExpor>();		
		
		pedidoexporsSeleccionados=this.getPedidoExporsSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"pedidoexpor.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("pedidoexpors");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("pedidoexpor");
			//elementRoot.appendChild(element);
		
			for(PedidoExpor pedidoexporAux:pedidoexporsSeleccionados) {
				element = document.createElement("pedidoexpor");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlPedidoExpor(pedidoexporAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.pedidoexporSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Pedido Exportacion",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelPedidoExpor(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDUSUARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_NUMERO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_NUMEROAUTORIZACION);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_FECHAEMISION);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_FECHAVENCIMIENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDMONEDA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_COTIZACION);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDEMPLEADO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDTIPOPRECIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDFORMATO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_DIRECCION);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_TELEFONO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_RUC);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDPAIS);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_LUGARENTREGA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_EMBARQUE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_NEGOCIACION);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDTRANSPORTE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDVENDEDOR);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_FORMAPAGO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDSUBCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDCONSIGNATARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDCONSULTOR);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_ORDEN);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDESTADOPEDIDOEXPOR);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_DESCRIPCION);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_MONTO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_SALDO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_DISPONIBLE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_DESCUENTOPORCENTAJE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_TOTALCONIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_SUMAN);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_DESCUENTOVALOR);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_TOTALSINIVA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_TOTALDESCUENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_FLETE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_TOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_SUBTOTAL);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_SEGUROS);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IVA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_FINANCIAMIENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_MONTORETENCION);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_OTRO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_ICE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_FECHA);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_FECHASERVIDOR);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDTIPOCAMBIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_NUMEROFUE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDCENTROCOSTO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDRESPONSABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_HORAINICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_HORAFIN);
		cell = row.createCell(iColumn++);cell.setCellValue(PedidoExporConstantesFunciones.LABEL_IDTRANSPORTISTA);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelPedidoExpor(PedidoExpor pedidoexpor,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getusuario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getnumero());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getnumero_preimpreso());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getfecha_emision());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getfecha_vencimiento());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getmoneda_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getcotizacion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getempleado_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.gettipoprecio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getformato_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getdireccion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.gettelefono());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getruc());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getpais_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getlugar_entrega());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getembarque());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getnegociacion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.gettransporte_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getvendedor_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getforma_pago());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getsubcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getconsignatario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getconsultor_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getorden());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getestadopedidoexpor_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getdescripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getmonto());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getsaldo());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getdisponible());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getdescuento_porcentaje());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.gettotal_con_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getsuman());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getdescuento_valor());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.gettotal_sin_iva());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.gettotal_descuento());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getflete());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.gettotal());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getsubtotal());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getseguros());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getiva());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getfinanciamiento());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getmonto_retencion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getotro());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getice());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getfecha());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getfecha_servidor());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.gettipocambio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getnumero_fue());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getcentrocosto_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.getresponsable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.gethora_inicio());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.gethora_fin());
		cell = row.createCell(iColumn++);cell.setCellValue(pedidoexpor.gettransportista_descripcion());				
	}
	
	public void setFilaDatosExportarXmlPedidoExpor(PedidoExpor pedidoexpor,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(PedidoExporConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(pedidoexpor.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(PedidoExporConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(pedidoexpor.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(PedidoExporConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(pedidoexpor.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(PedidoExporConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(pedidoexpor.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementejercicio_descripcion = document.createElement(PedidoExporConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(pedidoexpor.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(PedidoExporConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(pedidoexpor.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementanio_descripcion = document.createElement(PedidoExporConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(pedidoexpor.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(PedidoExporConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(pedidoexpor.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementusuario_descripcion = document.createElement(PedidoExporConstantesFunciones.IDUSUARIO);
		elementusuario_descripcion.appendChild(document.createTextNode(pedidoexpor.getusuario_descripcion()));
		element.appendChild(elementusuario_descripcion);

		Element elementnumero = document.createElement(PedidoExporConstantesFunciones.NUMERO);
		elementnumero.appendChild(document.createTextNode(pedidoexpor.getnumero().trim()));
		element.appendChild(elementnumero);

		Element elementnumero_preimpreso = document.createElement(PedidoExporConstantesFunciones.NUMEROAUTORIZACION);
		elementnumero_preimpreso.appendChild(document.createTextNode(pedidoexpor.getnumero_preimpreso().trim()));
		element.appendChild(elementnumero_preimpreso);

		Element elementfecha_emision = document.createElement(PedidoExporConstantesFunciones.FECHAEMISION);
		elementfecha_emision.appendChild(document.createTextNode(pedidoexpor.getfecha_emision().toString().trim()));
		element.appendChild(elementfecha_emision);

		Element elementfecha_vencimiento = document.createElement(PedidoExporConstantesFunciones.FECHAVENCIMIENTO);
		elementfecha_vencimiento.appendChild(document.createTextNode(pedidoexpor.getfecha_vencimiento().toString().trim()));
		element.appendChild(elementfecha_vencimiento);

		Element elementmoneda_descripcion = document.createElement(PedidoExporConstantesFunciones.IDMONEDA);
		elementmoneda_descripcion.appendChild(document.createTextNode(pedidoexpor.getmoneda_descripcion()));
		element.appendChild(elementmoneda_descripcion);

		Element elementcotizacion = document.createElement(PedidoExporConstantesFunciones.COTIZACION);
		elementcotizacion.appendChild(document.createTextNode(pedidoexpor.getcotizacion().toString().trim()));
		element.appendChild(elementcotizacion);

		Element elementempleado_descripcion = document.createElement(PedidoExporConstantesFunciones.IDEMPLEADO);
		elementempleado_descripcion.appendChild(document.createTextNode(pedidoexpor.getempleado_descripcion()));
		element.appendChild(elementempleado_descripcion);

		Element elementtipoprecio_descripcion = document.createElement(PedidoExporConstantesFunciones.IDTIPOPRECIO);
		elementtipoprecio_descripcion.appendChild(document.createTextNode(pedidoexpor.gettipoprecio_descripcion()));
		element.appendChild(elementtipoprecio_descripcion);

		Element elementformato_descripcion = document.createElement(PedidoExporConstantesFunciones.IDFORMATO);
		elementformato_descripcion.appendChild(document.createTextNode(pedidoexpor.getformato_descripcion()));
		element.appendChild(elementformato_descripcion);

		Element elementdireccion = document.createElement(PedidoExporConstantesFunciones.DIRECCION);
		elementdireccion.appendChild(document.createTextNode(pedidoexpor.getdireccion().trim()));
		element.appendChild(elementdireccion);

		Element elementcliente_descripcion = document.createElement(PedidoExporConstantesFunciones.IDCLIENTE);
		elementcliente_descripcion.appendChild(document.createTextNode(pedidoexpor.getcliente_descripcion()));
		element.appendChild(elementcliente_descripcion);

		Element elementtelefono = document.createElement(PedidoExporConstantesFunciones.TELEFONO);
		elementtelefono.appendChild(document.createTextNode(pedidoexpor.gettelefono().trim()));
		element.appendChild(elementtelefono);

		Element elementruc = document.createElement(PedidoExporConstantesFunciones.RUC);
		elementruc.appendChild(document.createTextNode(pedidoexpor.getruc().trim()));
		element.appendChild(elementruc);

		Element elementpais_descripcion = document.createElement(PedidoExporConstantesFunciones.IDPAIS);
		elementpais_descripcion.appendChild(document.createTextNode(pedidoexpor.getpais_descripcion()));
		element.appendChild(elementpais_descripcion);

		Element elementlugar_entrega = document.createElement(PedidoExporConstantesFunciones.LUGARENTREGA);
		elementlugar_entrega.appendChild(document.createTextNode(pedidoexpor.getlugar_entrega().trim()));
		element.appendChild(elementlugar_entrega);

		Element elementembarque = document.createElement(PedidoExporConstantesFunciones.EMBARQUE);
		elementembarque.appendChild(document.createTextNode(pedidoexpor.getembarque().trim()));
		element.appendChild(elementembarque);

		Element elementnegociacion = document.createElement(PedidoExporConstantesFunciones.NEGOCIACION);
		elementnegociacion.appendChild(document.createTextNode(pedidoexpor.getnegociacion().trim()));
		element.appendChild(elementnegociacion);

		Element elementtransporte_descripcion = document.createElement(PedidoExporConstantesFunciones.IDTRANSPORTE);
		elementtransporte_descripcion.appendChild(document.createTextNode(pedidoexpor.gettransporte_descripcion()));
		element.appendChild(elementtransporte_descripcion);

		Element elementvendedor_descripcion = document.createElement(PedidoExporConstantesFunciones.IDVENDEDOR);
		elementvendedor_descripcion.appendChild(document.createTextNode(pedidoexpor.getvendedor_descripcion()));
		element.appendChild(elementvendedor_descripcion);

		Element elementforma_pago = document.createElement(PedidoExporConstantesFunciones.FORMAPAGO);
		elementforma_pago.appendChild(document.createTextNode(pedidoexpor.getforma_pago().trim()));
		element.appendChild(elementforma_pago);

		Element elementsubcliente_descripcion = document.createElement(PedidoExporConstantesFunciones.IDSUBCLIENTE);
		elementsubcliente_descripcion.appendChild(document.createTextNode(pedidoexpor.getsubcliente_descripcion()));
		element.appendChild(elementsubcliente_descripcion);

		Element elementconsignatario_descripcion = document.createElement(PedidoExporConstantesFunciones.IDCONSIGNATARIO);
		elementconsignatario_descripcion.appendChild(document.createTextNode(pedidoexpor.getconsignatario_descripcion()));
		element.appendChild(elementconsignatario_descripcion);

		Element elementconsultor_descripcion = document.createElement(PedidoExporConstantesFunciones.IDCONSULTOR);
		elementconsultor_descripcion.appendChild(document.createTextNode(pedidoexpor.getconsultor_descripcion()));
		element.appendChild(elementconsultor_descripcion);

		Element elementorden = document.createElement(PedidoExporConstantesFunciones.ORDEN);
		elementorden.appendChild(document.createTextNode(pedidoexpor.getorden().trim()));
		element.appendChild(elementorden);

		Element elementestadopedidoexpor_descripcion = document.createElement(PedidoExporConstantesFunciones.IDESTADOPEDIDOEXPOR);
		elementestadopedidoexpor_descripcion.appendChild(document.createTextNode(pedidoexpor.getestadopedidoexpor_descripcion()));
		element.appendChild(elementestadopedidoexpor_descripcion);

		Element elementdescripcion = document.createElement(PedidoExporConstantesFunciones.DESCRIPCION);
		elementdescripcion.appendChild(document.createTextNode(pedidoexpor.getdescripcion().trim()));
		element.appendChild(elementdescripcion);

		Element elementmonto = document.createElement(PedidoExporConstantesFunciones.MONTO);
		elementmonto.appendChild(document.createTextNode(pedidoexpor.getmonto().toString().trim()));
		element.appendChild(elementmonto);

		Element elementsaldo = document.createElement(PedidoExporConstantesFunciones.SALDO);
		elementsaldo.appendChild(document.createTextNode(pedidoexpor.getsaldo().toString().trim()));
		element.appendChild(elementsaldo);

		Element elementdisponible = document.createElement(PedidoExporConstantesFunciones.DISPONIBLE);
		elementdisponible.appendChild(document.createTextNode(pedidoexpor.getdisponible().toString().trim()));
		element.appendChild(elementdisponible);

		Element elementdescuento_porcentaje = document.createElement(PedidoExporConstantesFunciones.DESCUENTOPORCENTAJE);
		elementdescuento_porcentaje.appendChild(document.createTextNode(pedidoexpor.getdescuento_porcentaje().toString().trim()));
		element.appendChild(elementdescuento_porcentaje);

		Element elementtotal_con_iva = document.createElement(PedidoExporConstantesFunciones.TOTALCONIVA);
		elementtotal_con_iva.appendChild(document.createTextNode(pedidoexpor.gettotal_con_iva().toString().trim()));
		element.appendChild(elementtotal_con_iva);

		Element elementsuman = document.createElement(PedidoExporConstantesFunciones.SUMAN);
		elementsuman.appendChild(document.createTextNode(pedidoexpor.getsuman().toString().trim()));
		element.appendChild(elementsuman);

		Element elementdescuento_valor = document.createElement(PedidoExporConstantesFunciones.DESCUENTOVALOR);
		elementdescuento_valor.appendChild(document.createTextNode(pedidoexpor.getdescuento_valor().toString().trim()));
		element.appendChild(elementdescuento_valor);

		Element elementtotal_sin_iva = document.createElement(PedidoExporConstantesFunciones.TOTALSINIVA);
		elementtotal_sin_iva.appendChild(document.createTextNode(pedidoexpor.gettotal_sin_iva().toString().trim()));
		element.appendChild(elementtotal_sin_iva);

		Element elementtotal_descuento = document.createElement(PedidoExporConstantesFunciones.TOTALDESCUENTO);
		elementtotal_descuento.appendChild(document.createTextNode(pedidoexpor.gettotal_descuento().toString().trim()));
		element.appendChild(elementtotal_descuento);

		Element elementflete = document.createElement(PedidoExporConstantesFunciones.FLETE);
		elementflete.appendChild(document.createTextNode(pedidoexpor.getflete().toString().trim()));
		element.appendChild(elementflete);

		Element elementtotal = document.createElement(PedidoExporConstantesFunciones.TOTAL);
		elementtotal.appendChild(document.createTextNode(pedidoexpor.gettotal().toString().trim()));
		element.appendChild(elementtotal);

		Element elementsubtotal = document.createElement(PedidoExporConstantesFunciones.SUBTOTAL);
		elementsubtotal.appendChild(document.createTextNode(pedidoexpor.getsubtotal().toString().trim()));
		element.appendChild(elementsubtotal);

		Element elementseguros = document.createElement(PedidoExporConstantesFunciones.SEGUROS);
		elementseguros.appendChild(document.createTextNode(pedidoexpor.getseguros().toString().trim()));
		element.appendChild(elementseguros);

		Element elementiva = document.createElement(PedidoExporConstantesFunciones.IVA);
		elementiva.appendChild(document.createTextNode(pedidoexpor.getiva().toString().trim()));
		element.appendChild(elementiva);

		Element elementfinanciamiento = document.createElement(PedidoExporConstantesFunciones.FINANCIAMIENTO);
		elementfinanciamiento.appendChild(document.createTextNode(pedidoexpor.getfinanciamiento().toString().trim()));
		element.appendChild(elementfinanciamiento);

		Element elementmonto_retencion = document.createElement(PedidoExporConstantesFunciones.MONTORETENCION);
		elementmonto_retencion.appendChild(document.createTextNode(pedidoexpor.getmonto_retencion().toString().trim()));
		element.appendChild(elementmonto_retencion);

		Element elementotro = document.createElement(PedidoExporConstantesFunciones.OTRO);
		elementotro.appendChild(document.createTextNode(pedidoexpor.getotro().toString().trim()));
		element.appendChild(elementotro);

		Element elementice = document.createElement(PedidoExporConstantesFunciones.ICE);
		elementice.appendChild(document.createTextNode(pedidoexpor.getice().toString().trim()));
		element.appendChild(elementice);

		Element elementfecha = document.createElement(PedidoExporConstantesFunciones.FECHA);
		elementfecha.appendChild(document.createTextNode(pedidoexpor.getfecha().toString().trim()));
		element.appendChild(elementfecha);

		Element elementfecha_servidor = document.createElement(PedidoExporConstantesFunciones.FECHASERVIDOR);
		elementfecha_servidor.appendChild(document.createTextNode(pedidoexpor.getfecha_servidor().toString().trim()));
		element.appendChild(elementfecha_servidor);

		Element elementtipocambio_descripcion = document.createElement(PedidoExporConstantesFunciones.IDTIPOCAMBIO);
		elementtipocambio_descripcion.appendChild(document.createTextNode(pedidoexpor.gettipocambio_descripcion()));
		element.appendChild(elementtipocambio_descripcion);

		Element elementnumero_fue = document.createElement(PedidoExporConstantesFunciones.NUMEROFUE);
		elementnumero_fue.appendChild(document.createTextNode(pedidoexpor.getnumero_fue().trim()));
		element.appendChild(elementnumero_fue);

		Element elementcentrocosto_descripcion = document.createElement(PedidoExporConstantesFunciones.IDCENTROCOSTO);
		elementcentrocosto_descripcion.appendChild(document.createTextNode(pedidoexpor.getcentrocosto_descripcion()));
		element.appendChild(elementcentrocosto_descripcion);

		Element elementresponsable_descripcion = document.createElement(PedidoExporConstantesFunciones.IDRESPONSABLE);
		elementresponsable_descripcion.appendChild(document.createTextNode(pedidoexpor.getresponsable_descripcion()));
		element.appendChild(elementresponsable_descripcion);

		Element elementhora_inicio = document.createElement(PedidoExporConstantesFunciones.HORAINICIO);
		elementhora_inicio.appendChild(document.createTextNode(pedidoexpor.gethora_inicio().toString().trim()));
		element.appendChild(elementhora_inicio);

		Element elementhora_fin = document.createElement(PedidoExporConstantesFunciones.HORAFIN);
		elementhora_fin.appendChild(document.createTextNode(pedidoexpor.gethora_fin().toString().trim()));
		element.appendChild(elementhora_fin);

		Element elementtransportista_descripcion = document.createElement(PedidoExporConstantesFunciones.IDTRANSPORTISTA);
		elementtransportista_descripcion.appendChild(document.createTextNode(pedidoexpor.gettransportista_descripcion()));
		element.appendChild(elementtransportista_descripcion);
	}
	
	public void generarReporteGroupGenericoPedidoExporsSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<PedidoExpor> pedidoexporsSeleccionados=new ArrayList<PedidoExpor>();
		
		pedidoexporsSeleccionados=this.getPedidoExporsSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoPedidoExpor(pedidoexporsSeleccionados);
		
		this.generarReportePedidoExpors("Todos",pedidoexporsSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoPedidoExpor(ArrayList<PedidoExpor> pedidoexporsSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(PedidoExpor pedidoexporAux:pedidoexporsSeleccionados) {
				pedidoexporAux.setsDetalleGeneralEntityReporte(pedidoexporAux.toString());
			
				if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDUSUARIO)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getusuario_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_NUMERO)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getnumero());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_NUMEROAUTORIZACION)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getnumero_preimpreso());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_FECHAEMISION)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(pedidoexporAux.getfecha_emision()));
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_FECHAVENCIMIENTO)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(pedidoexporAux.getfecha_vencimiento()));
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDMONEDA)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getmoneda_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDEMPLEADO)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getempleado_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDTIPOPRECIO)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.gettipoprecio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDFORMATO)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getformato_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_DIRECCION)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getdireccion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDCLIENTE)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_TELEFONO)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.gettelefono());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_RUC)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getruc());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDPAIS)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getpais_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_LUGARENTREGA)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getlugar_entrega());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_EMBARQUE)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getembarque());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_NEGOCIACION)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getnegociacion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDTRANSPORTE)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.gettransporte_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDVENDEDOR)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getvendedor_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_FORMAPAGO)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getforma_pago());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDSUBCLIENTE)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getsubcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDCONSIGNATARIO)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getconsignatario_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDCONSULTOR)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getconsultor_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_ORDEN)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getorden());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDESTADOPEDIDOEXPOR)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getestadopedidoexpor_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_DESCRIPCION)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getdescripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_FECHA)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(pedidoexporAux.getfecha()));
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_FECHASERVIDOR)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(pedidoexporAux.getfecha_servidor()));
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDTIPOCAMBIO)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.gettipocambio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_NUMEROFUE)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getnumero_fue());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDCENTROCOSTO)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getcentrocosto_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDRESPONSABLE)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.getresponsable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_HORAINICIO)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.gethora_inicio().toString());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_HORAFIN)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.gethora_fin().toString());
				}
				 else if(sTipoSeleccionar.equals(PedidoExporConstantesFunciones.LABEL_IDTRANSPORTISTA)) {
					existe=true;
					pedidoexporAux.setsDescripcionGeneralEntityReporte1(pedidoexporAux.gettransportista_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,PedidoExporConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesPedidoExpor(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoPedidoExpor=true;
				this.isVisibilidadCeldaNuevoRelacionesPedidoExpor=true;
				this.isVisibilidadCeldaGuardarCambiosPedidoExpor=true;
			}
			
			this.isVisibilidadCeldaModificarPedidoExpor=false;
			this.isVisibilidadCeldaActualizarPedidoExpor=false;
			this.isVisibilidadCeldaEliminarPedidoExpor=false;
			this.isVisibilidadCeldaCancelarPedidoExpor=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedidoExpor=true;
				} else {
					this.isVisibilidadCeldaGuardarPedidoExpor=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoPedidoExpor=false;
			this.isVisibilidadCeldaNuevoRelacionesPedidoExpor=false;
			this.isVisibilidadCeldaGuardarCambiosPedidoExpor=false;
			this.isVisibilidadCeldaModificarPedidoExpor=false;
			this.isVisibilidadCeldaActualizarPedidoExpor=true;
			this.isVisibilidadCeldaEliminarPedidoExpor=false;
			this.isVisibilidadCeldaCancelarPedidoExpor=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedidoExpor=true;
				} else {
					this.isVisibilidadCeldaGuardarPedidoExpor=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoPedidoExpor=false;
			this.isVisibilidadCeldaNuevoRelacionesPedidoExpor=false;
			this.isVisibilidadCeldaGuardarCambiosPedidoExpor=false;
			this.isVisibilidadCeldaModificarPedidoExpor=false;
			this.isVisibilidadCeldaActualizarPedidoExpor=true;
			this.isVisibilidadCeldaEliminarPedidoExpor=true;
			this.isVisibilidadCeldaCancelarPedidoExpor=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedidoExpor=true;
				} else {
					this.isVisibilidadCeldaGuardarPedidoExpor=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoPedidoExpor=false;
			this.isVisibilidadCeldaNuevoRelacionesPedidoExpor=false;
			this.isVisibilidadCeldaGuardarCambiosPedidoExpor=false;
			this.isVisibilidadCeldaModificarPedidoExpor=false;
			this.isVisibilidadCeldaActualizarPedidoExpor=true;
			this.isVisibilidadCeldaEliminarPedidoExpor=false;
			this.isVisibilidadCeldaCancelarPedidoExpor=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedidoExpor=false;
				} else {
					this.isVisibilidadCeldaGuardarPedidoExpor=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoPedidoExpor=true;
			this.isVisibilidadCeldaNuevoRelacionesPedidoExpor=true;
			this.isVisibilidadCeldaGuardarCambiosPedidoExpor=true;
			this.isVisibilidadCeldaModificarPedidoExpor=false;
			this.isVisibilidadCeldaActualizarPedidoExpor=false;
			this.isVisibilidadCeldaEliminarPedidoExpor=false;
			this.isVisibilidadCeldaCancelarPedidoExpor=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedidoExpor=true;
				} else {
					this.isVisibilidadCeldaGuardarPedidoExpor=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoPedidoExpor=false;
			this.isVisibilidadCeldaNuevoRelacionesPedidoExpor=false;
			this.isVisibilidadCeldaGuardarCambiosPedidoExpor=false;
			this.isVisibilidadCeldaActualizarPedidoExpor=false;
			this.isVisibilidadCeldaEliminarPedidoExpor=false;
			this.isVisibilidadCeldaCancelarPedidoExpor=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedidoExpor=false;
				} else {
					this.isVisibilidadCeldaGuardarPedidoExpor=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoPedidoExpor=false;
			this.isVisibilidadCeldaNuevoRelacionesPedidoExpor=false;
			this.isVisibilidadCeldaGuardarCambiosPedidoExpor=false;
			this.isVisibilidadCeldaModificarPedidoExpor=true;
			this.isVisibilidadCeldaActualizarPedidoExpor=false;
			this.isVisibilidadCeldaEliminarPedidoExpor=false;
			this.isVisibilidadCeldaCancelarPedidoExpor=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarPedidoExpor=false;
				} else {
					this.isVisibilidadCeldaGuardarPedidoExpor=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(PedidoExporJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoPedidoExpor=true;
			this.isVisibilidadCeldaNuevoRelacionesPedidoExpor=true;
			this.isVisibilidadCeldaGuardarCambiosPedidoExpor=true;
		} else {
			this.actualizarEstadoPanelsPedidoExpor(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarPedidoExpor=false;
			//this.isVisibilidadCeldaVerFormPedidoExpor=false;
			this.isVisibilidadCeldaDuplicarPedidoExpor=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!pedidoexporSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesPedidoExpor=false;
		} else {
			this.isVisibilidadCeldaNuevoPedidoExpor=false;
			this.isVisibilidadCeldaGuardarCambiosPedidoExpor=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(pedidoexporSessionBean.getEsGuardarRelacionado()) {
			if(!pedidoexporSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesPedidoExpor=false;												
			}
			
			this.jButtonCerrarPedidoExpor.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesPedidoExpor=false;
		}
		
		if(!this.permiteMantenimiento(this.pedidoexpor)) {
			this.isVisibilidadCeldaActualizarPedidoExpor=false;
			this.isVisibilidadCeldaEliminarPedidoExpor=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesPedidoExpor() {
		this.isVisibilidadCeldaNuevoPedidoExpor=false;
		this.isVisibilidadCeldaGuardarCambiosPedidoExpor=false;
	}
	
	public void actualizarEstadoPanelsPedidoExpor(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionPedidoExpor!=null) {
				this.jScrollPanelDatosEdicionPedidoExpor.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoExpor!=null) {
				this.jTabbedPaneBusquedasPedidoExpor.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPedidoExpor!=null) {
				this.jScrollPanelDatosPedidoExpor.setVisible(true);
			}
			
			if(this.jPanelPaginacionPedidoExpor!=null) {
				this.jPanelPaginacionPedidoExpor.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPedidoExpor!=null) {
				this.jPanelParametrosReportesPedidoExpor.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionPedidoExpor!=null) {
				this.jScrollPanelDatosEdicionPedidoExpor.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoExpor!=null) {
				this.jTabbedPaneBusquedasPedidoExpor.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosPedidoExpor!=null) {
				this.jScrollPanelDatosPedidoExpor.setVisible(false);
			}
			
			if(this.jPanelPaginacionPedidoExpor!=null) {
				this.jPanelPaginacionPedidoExpor.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesPedidoExpor!=null) {
				this.jPanelParametrosReportesPedidoExpor.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionPedidoExpor!=null) {
				this.jScrollPanelDatosEdicionPedidoExpor.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoExpor!=null) {
				this.jTabbedPaneBusquedasPedidoExpor.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosPedidoExpor!=null) {
				this.jScrollPanelDatosPedidoExpor.setVisible(false);
			}
			
			if(this.jPanelPaginacionPedidoExpor!=null) {
				this.jPanelPaginacionPedidoExpor.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesPedidoExpor!=null) {
				this.jPanelParametrosReportesPedidoExpor.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionPedidoExpor!=null) {
				this.jScrollPanelDatosEdicionPedidoExpor.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoExpor!=null) {
				this.jTabbedPaneBusquedasPedidoExpor.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosPedidoExpor!=null) {
				this.jScrollPanelDatosPedidoExpor.setVisible(false);
			}
			
			if(this.jPanelPaginacionPedidoExpor!=null) {
				this.jPanelPaginacionPedidoExpor.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesPedidoExpor!=null) {
				this.jPanelParametrosReportesPedidoExpor.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionPedidoExpor!=null) {
				this.jScrollPanelDatosEdicionPedidoExpor.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoExpor!=null) {
				this.jTabbedPaneBusquedasPedidoExpor.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPedidoExpor!=null) {
				this.jScrollPanelDatosPedidoExpor.setVisible(true);
			}
			
			if(this.jPanelPaginacionPedidoExpor!=null) {
				this.jPanelPaginacionPedidoExpor.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPedidoExpor!=null) {
				this.jPanelParametrosReportesPedidoExpor.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionPedidoExpor!=null) {
				this.jScrollPanelDatosEdicionPedidoExpor.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoExpor!=null) {
				this.jTabbedPaneBusquedasPedidoExpor.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPedidoExpor!=null) {
				this.jScrollPanelDatosPedidoExpor.setVisible(true);
			}
			
			if(this.jPanelPaginacionPedidoExpor!=null) {
				this.jPanelPaginacionPedidoExpor.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPedidoExpor!=null) {
				this.jPanelParametrosReportesPedidoExpor.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionPedidoExpor!=null) {
				this.jScrollPanelDatosEdicionPedidoExpor.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoExpor!=null) {
				this.jTabbedPaneBusquedasPedidoExpor.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosPedidoExpor!=null) {
				this.jScrollPanelDatosPedidoExpor.setVisible(true);
			}
			
			if(this.jPanelPaginacionPedidoExpor!=null) {
				this.jPanelPaginacionPedidoExpor.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesPedidoExpor!=null) {
				this.jPanelParametrosReportesPedidoExpor.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasPedidoExpor!=null) {
					this.jTabbedPaneBusquedasPedidoExpor.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesPedidoExpor!=null) {
				this.jPanelParametrosReportesPedidoExpor.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.pedidoexporSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasPedidoExpor!=null) {
				this.jTabbedPaneBusquedasPedidoExpor.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesPedidoExpor!=null) {
				this.jPanelParametrosReportesPedidoExpor.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdCentroCosto=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdCentroCosto=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdCentroCosto=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdCentroCosto=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdCentroCosto=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdCentroCosto=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaMesNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaMesNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaMesNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaMesNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaMesNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaMesNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaMesNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaUsuario(Boolean isParaUsuario){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUsuarioNegation=!isParaUsuario;

			this.isVisibilidadFK_IdCentroCosto=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaMoneda(Boolean isParaMoneda){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMonedaNegation=!isParaMoneda;

			this.isVisibilidadFK_IdCentroCosto=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpleado(Boolean isParaEmpleado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpleadoNegation=!isParaEmpleado;

			this.isVisibilidadFK_IdCentroCosto=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpleado;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoPrecio(Boolean isParaTipoPrecio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoPrecioNegation=!isParaTipoPrecio;

			this.isVisibilidadFK_IdCentroCosto=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoPrecio;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaTipoPrecioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaFormato(Boolean isParaFormato){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaFormatoNegation=!isParaFormato;

			this.isVisibilidadFK_IdCentroCosto=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaFormato;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaFormatoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaCliente(Boolean isParaCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteNegation=!isParaCliente;

			this.isVisibilidadFK_IdCentroCosto=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaCliente;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaPais(Boolean isParaPais){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPaisNegation=!isParaPais;

			this.isVisibilidadFK_IdCentroCosto=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaPais;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaPaisNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransporte(Boolean isParaTransporte){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransporteNegation=!isParaTransporte;

			this.isVisibilidadFK_IdCentroCosto=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaTransporte;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaTransporteNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaVendedor(Boolean isParaVendedor){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaVendedorNegation=!isParaVendedor;

			this.isVisibilidadFK_IdCentroCosto=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaVendedorNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaVendedor;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaSubCliente(Boolean isParaSubCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSubClienteNegation=!isParaSubCliente;

			this.isVisibilidadFK_IdCentroCosto=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaSubCliente;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaSubClienteNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaConsignatario(Boolean isParaConsignatario){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaConsignatarioNegation=!isParaConsignatario;

			this.isVisibilidadFK_IdCentroCosto=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaConsignatario;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaConsignatarioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaConsultor(Boolean isParaConsultor){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaConsultorNegation=!isParaConsultor;

			this.isVisibilidadFK_IdCentroCosto=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaConsultor;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaConsultorNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoPedidoExpor(Boolean isParaEstadoPedidoExpor){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoPedidoExporNegation=!isParaEstadoPedidoExpor;

			this.isVisibilidadFK_IdCentroCosto=isParaEstadoPedidoExporNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaEstadoPedidoExporNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaEstadoPedidoExporNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaEstadoPedidoExporNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaEstadoPedidoExporNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaEstadoPedidoExpor;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaEstadoPedidoExporNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaEstadoPedidoExporNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaEstadoPedidoExporNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaEstadoPedidoExporNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaEstadoPedidoExporNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaEstadoPedidoExporNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaEstadoPedidoExporNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaEstadoPedidoExporNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaEstadoPedidoExporNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoCambio(Boolean isParaTipoCambio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoCambioNegation=!isParaTipoCambio;

			this.isVisibilidadFK_IdCentroCosto=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaTipoCambio;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaTipoCambioNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaCentroCosto(Boolean isParaCentroCosto){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCentroCostoNegation=!isParaCentroCosto;

			this.isVisibilidadFK_IdCentroCosto=isParaCentroCosto;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaCentroCostoNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaResponsable(Boolean isParaResponsable){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaResponsableNegation=!isParaResponsable;

			this.isVisibilidadFK_IdCentroCosto=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaResponsable;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaResponsableNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransportista(Boolean isParaTransportista){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransportistaNegation=!isParaTransportista;

			this.isVisibilidadFK_IdCentroCosto=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdCentroCosto) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdCentroCostoPedidoExpor);}

			this.isVisibilidadFK_IdCliente=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdClientePedidoExpor);}

			this.isVisibilidadFK_IdConsignatario=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdConsignatario) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsignatarioPedidoExpor);}

			this.isVisibilidadFK_IdConsultor=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdConsultor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdConsultorPedidoExpor);}

			this.isVisibilidadFK_IdEmpleado=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEmpleadoPedidoExpor);}

			this.isVisibilidadFK_IdEstadoPedidoExpor=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdEstadoPedidoExpor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdEstadoPedidoExporPedidoExpor);}

			this.isVisibilidadFK_IdFormato=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdFormato) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdFormatoPedidoExpor);}

			this.isVisibilidadFK_IdPais=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdPais) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdPaisPedidoExpor);}

			this.isVisibilidadFK_IdResponsable=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdResponsable) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdResponsablePedidoExpor);}

			this.isVisibilidadFK_IdSubCliente=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdSubCliente) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdSubClientePedidoExpor);}

			this.isVisibilidadFK_IdTipoCambio=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdTipoCambio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoCambioPedidoExpor);}

			this.isVisibilidadFK_IdTipoPrecio=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdTipoPrecio) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTipoPrecioPedidoExpor);}

			this.isVisibilidadFK_IdTransporte=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdTransporte) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportePedidoExpor);}

			this.isVisibilidadFK_IdTransportista=isParaTransportista;
			if(!this.isVisibilidadFK_IdTransportista) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdTransportistaPedidoExpor);}

			this.isVisibilidadFK_IdVendedor=isParaTransportistaNegation;
			if(!this.isVisibilidadFK_IdVendedor) {this.jTabbedPaneBusquedasPedidoExpor.remove(jPanelFK_IdVendedorPedidoExpor);}
		}
		
	}
	
	

	public String registrarSesionPedidoExporParaDetallePedidoExpors() throws Exception {
		Boolean isPaginaPopupDetallePedidoExpor=false;

		try {

			if(this.pedidoexporSessionBean==null) {
				this.pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporSessionBean==null) {
				this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporSessionBean=new DetallePedidoExporSessionBean();
			}

			this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporSessionBean.setsPathNavegacionActual(pedidoexporSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+DetallePedidoExporConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupDetallePedidoExpor=this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeDetallePedidoExpor(true);
			this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeDetallePedidoExpor(PedidoExporConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporSessionBean.setisBusquedaDesdeForeignKeySesionPedidoExpor(true);
			this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporSessionBean.setlidPedidoExporActual(this.idPedidoExporActual);
			this.jInternalFrameDetalleFormPedidoExpor.detallepedidoexporSessionBean.setNoMantenimiento(true);

			pedidoexporSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedidoExpor(true);
			pedidoexporSessionBean.setlIdPedidoExporActualForeignKey(this.idPedidoExporActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	

	public String registrarSesionPedidoExporParaBusquedaEmpleados() throws Exception {
		Boolean isPaginaPopupEmpleado=false;

		try {

			if(pedidoexporSessionBean==null) {
				pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(empleadoSessionBean==null) {
				empleadoSessionBean=new EmpleadoSessionBean();
			}

			empleadoSessionBean.setsPathNavegacionActual(pedidoexporSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoConstantesFunciones.SCLASSWEBTITULO);
			empleadoSessionBean.setisPermiteRecargarInformacion(false);
			empleadoSessionBean.setisPaginaPopup(true);
			isPaginaPopupEmpleado=empleadoSessionBean.getisPaginaPopup();
			empleadoSessionBean.setisPaginaPopup(false);
			empleadoSessionBean.setEstaModoBusqueda(true);
			empleadoSessionBean.setsFuncionBusquedaRapida("window.opener.pedidoexporFuncionGeneral.setCombosCodigoDesdeBusquedaid_empleado(TO_REPLACE);");
			empleadoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleado(true);
			empleadoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleado(PedidoExporConstantesFunciones.SNOMBREOPCION);
			//empleadoSessionBean.setisBusquedaDesdeForeignKeySesionPedidoExpor(true);
			//empleadoSessionBean.setlidPedidoExporActual(this.idPedidoExporActual);

			pedidoexporSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedidoExpor(true);
			pedidoexporSessionBean.setlIdPedidoExporActualForeignKey(this.idPedidoExporActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionPedidoExporParaBusquedaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(pedidoexporSessionBean==null) {
				pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			clienteSessionBean.setsPathNavegacionActual(pedidoexporSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteSessionBean.setisPermiteRecargarInformacion(false);
			clienteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteSessionBean.getisPaginaPopup();
			clienteSessionBean.setisPaginaPopup(false);
			clienteSessionBean.setEstaModoBusqueda(true);
			clienteSessionBean.setsFuncionBusquedaRapida("window.opener.pedidoexporFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente(TO_REPLACE);");
			clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(PedidoExporConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionPedidoExpor(true);
			//clienteSessionBean.setlidPedidoExporActual(this.idPedidoExporActual);

			pedidoexporSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedidoExpor(true);
			pedidoexporSessionBean.setlIdPedidoExporActualForeignKey(this.idPedidoExporActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionPedidoExporParaBusquedaVendedores() throws Exception {
		Boolean isPaginaPopupVendedor=false;

		try {

			if(pedidoexporSessionBean==null) {
				pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(vendedorSessionBean==null) {
				vendedorSessionBean=new VendedorSessionBean();
			}

			vendedorSessionBean.setsPathNavegacionActual(pedidoexporSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+VendedorConstantesFunciones.SCLASSWEBTITULO);
			vendedorSessionBean.setisPermiteRecargarInformacion(false);
			vendedorSessionBean.setisPaginaPopup(true);
			isPaginaPopupVendedor=vendedorSessionBean.getisPaginaPopup();
			vendedorSessionBean.setisPaginaPopup(false);
			vendedorSessionBean.setEstaModoBusqueda(true);
			vendedorSessionBean.setsFuncionBusquedaRapida("window.opener.pedidoexporFuncionGeneral.setCombosCodigoDesdeBusquedaid_vendedor(TO_REPLACE);");
			vendedorSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeVendedor(true);
			vendedorSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeVendedor(PedidoExporConstantesFunciones.SNOMBREOPCION);
			//vendedorSessionBean.setisBusquedaDesdeForeignKeySesionPedidoExpor(true);
			//vendedorSessionBean.setlidPedidoExporActual(this.idPedidoExporActual);

			pedidoexporSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedidoExpor(true);
			pedidoexporSessionBean.setlIdPedidoExporActualForeignKey(this.idPedidoExporActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionPedidoExporParaBusquedaTipoCambios() throws Exception {
		Boolean isPaginaPopupTipoCambio=false;

		try {

			if(pedidoexporSessionBean==null) {
				pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(tipocambioSessionBean==null) {
				tipocambioSessionBean=new TipoCambioSessionBean();
			}

			tipocambioSessionBean.setsPathNavegacionActual(pedidoexporSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+TipoCambioConstantesFunciones.SCLASSWEBTITULO);
			tipocambioSessionBean.setisPermiteRecargarInformacion(false);
			tipocambioSessionBean.setisPaginaPopup(true);
			isPaginaPopupTipoCambio=tipocambioSessionBean.getisPaginaPopup();
			tipocambioSessionBean.setisPaginaPopup(false);
			tipocambioSessionBean.setEstaModoBusqueda(true);
			tipocambioSessionBean.setsFuncionBusquedaRapida("window.opener.pedidoexporFuncionGeneral.setCombosCodigoDesdeBusquedaid_tipo_cambio(TO_REPLACE);");
			tipocambioSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeTipoCambio(true);
			tipocambioSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeTipoCambio(PedidoExporConstantesFunciones.SNOMBREOPCION);
			//tipocambioSessionBean.setisBusquedaDesdeForeignKeySesionPedidoExpor(true);
			//tipocambioSessionBean.setlidPedidoExporActual(this.idPedidoExporActual);

			pedidoexporSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedidoExpor(true);
			pedidoexporSessionBean.setlIdPedidoExporActualForeignKey(this.idPedidoExporActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionPedidoExporParaBusquedaCentroCostos() throws Exception {
		Boolean isPaginaPopupCentroCosto=false;

		try {

			if(pedidoexporSessionBean==null) {
				pedidoexporSessionBean=new PedidoExporSessionBean();
			}

			if(centrocostoSessionBean==null) {
				centrocostoSessionBean=new CentroCostoSessionBean();
			}

			centrocostoSessionBean.setsPathNavegacionActual(pedidoexporSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CentroCostoConstantesFunciones.SCLASSWEBTITULO);
			centrocostoSessionBean.setisPermiteRecargarInformacion(false);
			centrocostoSessionBean.setisPaginaPopup(true);
			isPaginaPopupCentroCosto=centrocostoSessionBean.getisPaginaPopup();
			centrocostoSessionBean.setisPaginaPopup(false);
			centrocostoSessionBean.setEstaModoBusqueda(true);
			centrocostoSessionBean.setsFuncionBusquedaRapida("window.opener.pedidoexporFuncionGeneral.setCombosCodigoDesdeBusquedaid_centro_costo(TO_REPLACE);");
			centrocostoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCentroCosto(true);
			centrocostoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCentroCosto(PedidoExporConstantesFunciones.SNOMBREOPCION);
			//centrocostoSessionBean.setisBusquedaDesdeForeignKeySesionPedidoExpor(true);
			//centrocostoSessionBean.setlidPedidoExporActual(this.idPedidoExporActual);

			pedidoexporSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyPedidoExpor(true);
			pedidoexporSessionBean.setlIdPedidoExporActualForeignKey(this.idPedidoExporActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//PedidoExporSessionBean pedidoexporSessionBean=new PedidoExporSessionBean();
		
		if(this.pedidoexporSessionBean==null) {
			this.pedidoexporSessionBean=new PedidoExporSessionBean();
		}
		
		this.pedidoexporSessionBean.setsUltimaBusquedaPedidoExpor(this.getsAccionBusqueda());
		this.pedidoexporSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.pedidoexporSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
			pedidoexporSessionBean.setid_centro_costo(this.getid_centro_costoFK_IdCentroCosto());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
			pedidoexporSessionBean.setid_cliente(this.getid_clienteFK_IdCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdConsignatario")) {
			pedidoexporSessionBean.setid_consignatario(this.getid_consignatarioFK_IdConsignatario());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdConsultor")) {
			pedidoexporSessionBean.setid_consultor(this.getid_consultorFK_IdConsultor());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			pedidoexporSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
			pedidoexporSessionBean.setid_empleado(this.getid_empleadoFK_IdEmpleado());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			pedidoexporSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedidoExpor")) {
			pedidoexporSessionBean.setid_estado_pedido(this.getid_estado_pedidoFK_IdEstadoPedidoExpor());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdFormato")) {
			pedidoexporSessionBean.setid_formato(this.getid_formatoFK_IdFormato());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdMoneda")) {
			pedidoexporSessionBean.setid_moneda(this.getid_monedaFK_IdMoneda());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPais")) {
			pedidoexporSessionBean.setid_pais(this.getid_paisFK_IdPais());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			pedidoexporSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdResponsable")) {
			pedidoexporSessionBean.setid_responsable(this.getid_responsableFK_IdResponsable());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSubCliente")) {
			pedidoexporSessionBean.setid_sub_cliente(this.getid_sub_clienteFK_IdSubCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			pedidoexporSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoCambio")) {
			pedidoexporSessionBean.setid_tipo_cambio(this.getid_tipo_cambioFK_IdTipoCambio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoPrecio")) {
			pedidoexporSessionBean.setid_tipo_precio(this.getid_tipo_precioFK_IdTipoPrecio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransporte")) {
			pedidoexporSessionBean.setid_transporte(this.getid_transporteFK_IdTransporte());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransportista")) {
			pedidoexporSessionBean.setid_transportista(this.getid_transportistaFK_IdTransportista());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
			pedidoexporSessionBean.setid_usuario(this.getid_usuarioFK_IdUsuario());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdVendedor")) {
			pedidoexporSessionBean.setid_vendedor(this.getid_vendedorFK_IdVendedor());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//PedidoExporSessionBean pedidoexporSessionBean=new PedidoExporSessionBean();
		
		if(this.pedidoexporSessionBean==null) {
			this.pedidoexporSessionBean=new PedidoExporSessionBean();
		}
		
		if(this.pedidoexporSessionBean.getsUltimaBusquedaPedidoExpor()!=null&&!this.pedidoexporSessionBean.getsUltimaBusquedaPedidoExpor().equals("")) {
			this.setsAccionBusqueda(pedidoexporSessionBean.getsUltimaBusquedaPedidoExpor());
			this.setiNumeroPaginacion(pedidoexporSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(pedidoexporSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdCentroCosto")) {
				this.setid_centro_costoFK_IdCentroCosto(pedidoexporSessionBean.getid_centro_costo());
				pedidoexporSessionBean.setid_centro_costo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
				this.setid_clienteFK_IdCliente(pedidoexporSessionBean.getid_cliente());
				pedidoexporSessionBean.setid_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdConsignatario")) {
				this.setid_consignatarioFK_IdConsignatario(pedidoexporSessionBean.getid_consignatario());
				pedidoexporSessionBean.setid_consignatario(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdConsultor")) {
				this.setid_consultorFK_IdConsultor(pedidoexporSessionBean.getid_consultor());
				pedidoexporSessionBean.setid_consultor(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(pedidoexporSessionBean.getid_ejercicio());
				pedidoexporSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
				this.setid_empleadoFK_IdEmpleado(pedidoexporSessionBean.getid_empleado());
				pedidoexporSessionBean.setid_empleado(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(pedidoexporSessionBean.getid_empresa());
				pedidoexporSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEstadoPedidoExpor")) {
				this.setid_estado_pedidoFK_IdEstadoPedidoExpor(pedidoexporSessionBean.getid_estado_pedido());
				pedidoexporSessionBean.setid_estado_pedido(1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdFormato")) {
				this.setid_formatoFK_IdFormato(pedidoexporSessionBean.getid_formato());
				pedidoexporSessionBean.setid_formato(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdMoneda")) {
				this.setid_monedaFK_IdMoneda(pedidoexporSessionBean.getid_moneda());
				pedidoexporSessionBean.setid_moneda(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPais")) {
				this.setid_paisFK_IdPais(pedidoexporSessionBean.getid_pais());
				pedidoexporSessionBean.setid_pais(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(pedidoexporSessionBean.getid_periodo());
				pedidoexporSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdResponsable")) {
				this.setid_responsableFK_IdResponsable(pedidoexporSessionBean.getid_responsable());
				pedidoexporSessionBean.setid_responsable(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSubCliente")) {
				this.setid_sub_clienteFK_IdSubCliente(pedidoexporSessionBean.getid_sub_cliente());
				pedidoexporSessionBean.setid_sub_cliente(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(pedidoexporSessionBean.getid_sucursal());
				pedidoexporSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoCambio")) {
				this.setid_tipo_cambioFK_IdTipoCambio(pedidoexporSessionBean.getid_tipo_cambio());
				pedidoexporSessionBean.setid_tipo_cambio(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoPrecio")) {
				this.setid_tipo_precioFK_IdTipoPrecio(pedidoexporSessionBean.getid_tipo_precio());
				pedidoexporSessionBean.setid_tipo_precio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransporte")) {
				this.setid_transporteFK_IdTransporte(pedidoexporSessionBean.getid_transporte());
				pedidoexporSessionBean.setid_transporte(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransportista")) {
				this.setid_transportistaFK_IdTransportista(pedidoexporSessionBean.getid_transportista());
				pedidoexporSessionBean.setid_transportista(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
				this.setid_usuarioFK_IdUsuario(pedidoexporSessionBean.getid_usuario());
				pedidoexporSessionBean.setid_usuario(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdVendedor")) {
				this.setid_vendedorFK_IdVendedor(pedidoexporSessionBean.getid_vendedor());
				pedidoexporSessionBean.setid_vendedor(null);
			}
		}
		
		this.pedidoexporSessionBean.setsUltimaBusquedaPedidoExpor("");
		this.pedidoexporSessionBean.setiNumeroPaginacion(PedidoExporConstantesFunciones.INUMEROPAGINACION);
		this.pedidoexporSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaPedidoExpor(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioPedidoExpor() {
		this.updateBorderResaltarBusquedasFormularioPedidoExpor();
		this.updateVisibilidadBusquedasFormularioPedidoExpor();
		this.updateHabilitarBusquedasFormularioPedidoExpor();
	}
	
	public void updateBorderResaltarBusquedasFormularioPedidoExpor() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasPedidoExpor.getComponents().length>0) {
	

		if(this.pedidoexporConstantesFunciones.resaltarFK_IdCentroCostoPedidoExpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdCentroCostoPedidoExpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdCentroCostoPedidoExpor);
			}
		}

		if(this.pedidoexporConstantesFunciones.resaltarFK_IdClientePedidoExpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdClientePedidoExpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdClientePedidoExpor);
			}
		}

		if(this.pedidoexporConstantesFunciones.resaltarFK_IdConsignatarioPedidoExpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdConsignatarioPedidoExpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdConsignatarioPedidoExpor);
			}
		}

		if(this.pedidoexporConstantesFunciones.resaltarFK_IdConsultorPedidoExpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdConsultorPedidoExpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdConsultorPedidoExpor);
			}
		}

		if(this.pedidoexporConstantesFunciones.resaltarFK_IdEmpleadoPedidoExpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdEmpleadoPedidoExpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdEmpleadoPedidoExpor);
			}
		}

		if(this.pedidoexporConstantesFunciones.resaltarFK_IdEstadoPedidoExporPedidoExpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdEstadoPedidoExporPedidoExpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdEstadoPedidoExporPedidoExpor);
			}
		}

		if(this.pedidoexporConstantesFunciones.resaltarFK_IdFormatoPedidoExpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdFormatoPedidoExpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdFormatoPedidoExpor);
			}
		}

		if(this.pedidoexporConstantesFunciones.resaltarFK_IdPaisPedidoExpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdPaisPedidoExpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdPaisPedidoExpor);
			}
		}

		if(this.pedidoexporConstantesFunciones.resaltarFK_IdResponsablePedidoExpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdResponsablePedidoExpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdResponsablePedidoExpor);
			}
		}

		if(this.pedidoexporConstantesFunciones.resaltarFK_IdSubClientePedidoExpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdSubClientePedidoExpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdSubClientePedidoExpor);
			}
		}

		if(this.pedidoexporConstantesFunciones.resaltarFK_IdTipoCambioPedidoExpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdTipoCambioPedidoExpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdTipoCambioPedidoExpor);
			}
		}

		if(this.pedidoexporConstantesFunciones.resaltarFK_IdTipoPrecioPedidoExpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdTipoPrecioPedidoExpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdTipoPrecioPedidoExpor);
			}
		}

		if(this.pedidoexporConstantesFunciones.resaltarFK_IdTransportePedidoExpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdTransportePedidoExpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdTransportePedidoExpor);
			}
		}

		if(this.pedidoexporConstantesFunciones.resaltarFK_IdTransportistaPedidoExpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdTransportistaPedidoExpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdTransportistaPedidoExpor);
			}
		}

		if(this.pedidoexporConstantesFunciones.resaltarFK_IdVendedorPedidoExpor!=null) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdVendedorPedidoExpor);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdVendedorPedidoExpor);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioPedidoExpor() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasPedidoExpor.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdCentroCostoPedidoExpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoexporConstantesFunciones.mostrarFK_IdCentroCostoPedidoExpor);
			if(!this.pedidoexporConstantesFunciones.mostrarFK_IdCentroCostoPedidoExpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoExpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdClientePedidoExpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoexporConstantesFunciones.mostrarFK_IdClientePedidoExpor);
			if(!this.pedidoexporConstantesFunciones.mostrarFK_IdClientePedidoExpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoExpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdConsignatarioPedidoExpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoexporConstantesFunciones.mostrarFK_IdConsignatarioPedidoExpor);
			if(!this.pedidoexporConstantesFunciones.mostrarFK_IdConsignatarioPedidoExpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoExpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdConsultorPedidoExpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoexporConstantesFunciones.mostrarFK_IdConsultorPedidoExpor);
			if(!this.pedidoexporConstantesFunciones.mostrarFK_IdConsultorPedidoExpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoExpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdEmpleadoPedidoExpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoexporConstantesFunciones.mostrarFK_IdEmpleadoPedidoExpor);
			if(!this.pedidoexporConstantesFunciones.mostrarFK_IdEmpleadoPedidoExpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoExpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdEstadoPedidoExporPedidoExpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoexporConstantesFunciones.mostrarFK_IdEstadoPedidoExporPedidoExpor);
			if(!this.pedidoexporConstantesFunciones.mostrarFK_IdEstadoPedidoExporPedidoExpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoExpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdFormatoPedidoExpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoexporConstantesFunciones.mostrarFK_IdFormatoPedidoExpor);
			if(!this.pedidoexporConstantesFunciones.mostrarFK_IdFormatoPedidoExpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoExpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdPaisPedidoExpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoexporConstantesFunciones.mostrarFK_IdPaisPedidoExpor);
			if(!this.pedidoexporConstantesFunciones.mostrarFK_IdPaisPedidoExpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoExpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdResponsablePedidoExpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoexporConstantesFunciones.mostrarFK_IdResponsablePedidoExpor);
			if(!this.pedidoexporConstantesFunciones.mostrarFK_IdResponsablePedidoExpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoExpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdSubClientePedidoExpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoexporConstantesFunciones.mostrarFK_IdSubClientePedidoExpor);
			if(!this.pedidoexporConstantesFunciones.mostrarFK_IdSubClientePedidoExpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoExpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdTipoCambioPedidoExpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoexporConstantesFunciones.mostrarFK_IdTipoCambioPedidoExpor);
			if(!this.pedidoexporConstantesFunciones.mostrarFK_IdTipoCambioPedidoExpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoExpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdTipoPrecioPedidoExpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoexporConstantesFunciones.mostrarFK_IdTipoPrecioPedidoExpor);
			if(!this.pedidoexporConstantesFunciones.mostrarFK_IdTipoPrecioPedidoExpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoExpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdTransportePedidoExpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoexporConstantesFunciones.mostrarFK_IdTransportePedidoExpor);
			if(!this.pedidoexporConstantesFunciones.mostrarFK_IdTransportePedidoExpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoExpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdTransportistaPedidoExpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoexporConstantesFunciones.mostrarFK_IdTransportistaPedidoExpor);
			if(!this.pedidoexporConstantesFunciones.mostrarFK_IdTransportistaPedidoExpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoExpor.remove(index);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdVendedorPedidoExpor);
			jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.pedidoexporConstantesFunciones.mostrarFK_IdVendedorPedidoExpor);
			if(!this.pedidoexporConstantesFunciones.mostrarFK_IdVendedorPedidoExpor && index>-1) {
				this.jTabbedPaneBusquedasPedidoExpor.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioPedidoExpor() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasPedidoExpor.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdCentroCostoPedidoExpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoexporConstantesFunciones.activarFK_IdCentroCostoPedidoExpor);
				this.jTabbedPaneBusquedasPedidoExpor.setEnabledAt(index,this.pedidoexporConstantesFunciones.activarFK_IdCentroCostoPedidoExpor);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdClientePedidoExpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoexporConstantesFunciones.activarFK_IdClientePedidoExpor);
				this.jTabbedPaneBusquedasPedidoExpor.setEnabledAt(index,this.pedidoexporConstantesFunciones.activarFK_IdClientePedidoExpor);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdConsignatarioPedidoExpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoexporConstantesFunciones.activarFK_IdConsignatarioPedidoExpor);
				this.jTabbedPaneBusquedasPedidoExpor.setEnabledAt(index,this.pedidoexporConstantesFunciones.activarFK_IdConsignatarioPedidoExpor);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdConsultorPedidoExpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoexporConstantesFunciones.activarFK_IdConsultorPedidoExpor);
				this.jTabbedPaneBusquedasPedidoExpor.setEnabledAt(index,this.pedidoexporConstantesFunciones.activarFK_IdConsultorPedidoExpor);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdEmpleadoPedidoExpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoexporConstantesFunciones.activarFK_IdEmpleadoPedidoExpor);
				this.jTabbedPaneBusquedasPedidoExpor.setEnabledAt(index,this.pedidoexporConstantesFunciones.activarFK_IdEmpleadoPedidoExpor);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdEstadoPedidoExporPedidoExpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoexporConstantesFunciones.activarFK_IdEstadoPedidoExporPedidoExpor);
				this.jTabbedPaneBusquedasPedidoExpor.setEnabledAt(index,this.pedidoexporConstantesFunciones.activarFK_IdEstadoPedidoExporPedidoExpor);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdFormatoPedidoExpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoexporConstantesFunciones.activarFK_IdFormatoPedidoExpor);
				this.jTabbedPaneBusquedasPedidoExpor.setEnabledAt(index,this.pedidoexporConstantesFunciones.activarFK_IdFormatoPedidoExpor);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdPaisPedidoExpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoexporConstantesFunciones.activarFK_IdPaisPedidoExpor);
				this.jTabbedPaneBusquedasPedidoExpor.setEnabledAt(index,this.pedidoexporConstantesFunciones.activarFK_IdPaisPedidoExpor);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdResponsablePedidoExpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoexporConstantesFunciones.activarFK_IdResponsablePedidoExpor);
				this.jTabbedPaneBusquedasPedidoExpor.setEnabledAt(index,this.pedidoexporConstantesFunciones.activarFK_IdResponsablePedidoExpor);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdSubClientePedidoExpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoexporConstantesFunciones.activarFK_IdSubClientePedidoExpor);
				this.jTabbedPaneBusquedasPedidoExpor.setEnabledAt(index,this.pedidoexporConstantesFunciones.activarFK_IdSubClientePedidoExpor);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdTipoCambioPedidoExpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoexporConstantesFunciones.activarFK_IdTipoCambioPedidoExpor);
				this.jTabbedPaneBusquedasPedidoExpor.setEnabledAt(index,this.pedidoexporConstantesFunciones.activarFK_IdTipoCambioPedidoExpor);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdTipoPrecioPedidoExpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoexporConstantesFunciones.activarFK_IdTipoPrecioPedidoExpor);
				this.jTabbedPaneBusquedasPedidoExpor.setEnabledAt(index,this.pedidoexporConstantesFunciones.activarFK_IdTipoPrecioPedidoExpor);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdTransportePedidoExpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoexporConstantesFunciones.activarFK_IdTransportePedidoExpor);
				this.jTabbedPaneBusquedasPedidoExpor.setEnabledAt(index,this.pedidoexporConstantesFunciones.activarFK_IdTransportePedidoExpor);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdTransportistaPedidoExpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoexporConstantesFunciones.activarFK_IdTransportistaPedidoExpor);
				this.jTabbedPaneBusquedasPedidoExpor.setEnabledAt(index,this.pedidoexporConstantesFunciones.activarFK_IdTransportistaPedidoExpor);
			}

			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdVendedorPedidoExpor);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.pedidoexporConstantesFunciones.activarFK_IdVendedorPedidoExpor);
				this.jTabbedPaneBusquedasPedidoExpor.setEnabledAt(index,this.pedidoexporConstantesFunciones.activarFK_IdVendedorPedidoExpor);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaPedidoExpor(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdCentroCosto")) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdCentroCostoPedidoExpor);

			this.jTabbedPaneBusquedasPedidoExpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);

			this.pedidoexporConstantesFunciones.setResaltarFK_IdCentroCostoPedidoExpor(resaltar);

			jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdCentroCostoPedidoExpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdCliente")) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdClientePedidoExpor);

			this.jTabbedPaneBusquedasPedidoExpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);

			this.pedidoexporConstantesFunciones.setResaltarFK_IdClientePedidoExpor(resaltar);

			jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdClientePedidoExpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdConsignatario")) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdConsignatarioPedidoExpor);

			this.jTabbedPaneBusquedasPedidoExpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);

			this.pedidoexporConstantesFunciones.setResaltarFK_IdConsignatarioPedidoExpor(resaltar);

			jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdConsignatarioPedidoExpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdConsultor")) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdConsultorPedidoExpor);

			this.jTabbedPaneBusquedasPedidoExpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);

			this.pedidoexporConstantesFunciones.setResaltarFK_IdConsultorPedidoExpor(resaltar);

			jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdConsultorPedidoExpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmpleado")) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdEmpleadoPedidoExpor);

			this.jTabbedPaneBusquedasPedidoExpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);

			this.pedidoexporConstantesFunciones.setResaltarFK_IdEmpleadoPedidoExpor(resaltar);

			jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdEmpleadoPedidoExpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEstadoPedidoExpor")) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdEstadoPedidoExporPedidoExpor);

			this.jTabbedPaneBusquedasPedidoExpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);

			this.pedidoexporConstantesFunciones.setResaltarFK_IdEstadoPedidoExporPedidoExpor(resaltar);

			jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdEstadoPedidoExporPedidoExpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdFormato")) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdFormatoPedidoExpor);

			this.jTabbedPaneBusquedasPedidoExpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);

			this.pedidoexporConstantesFunciones.setResaltarFK_IdFormatoPedidoExpor(resaltar);

			jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdFormatoPedidoExpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdPais")) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdPaisPedidoExpor);

			this.jTabbedPaneBusquedasPedidoExpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);

			this.pedidoexporConstantesFunciones.setResaltarFK_IdPaisPedidoExpor(resaltar);

			jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdPaisPedidoExpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdResponsable")) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdResponsablePedidoExpor);

			this.jTabbedPaneBusquedasPedidoExpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);

			this.pedidoexporConstantesFunciones.setResaltarFK_IdResponsablePedidoExpor(resaltar);

			jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdResponsablePedidoExpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdSubCliente")) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdSubClientePedidoExpor);

			this.jTabbedPaneBusquedasPedidoExpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);

			this.pedidoexporConstantesFunciones.setResaltarFK_IdSubClientePedidoExpor(resaltar);

			jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdSubClientePedidoExpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoCambio")) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdTipoCambioPedidoExpor);

			this.jTabbedPaneBusquedasPedidoExpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);

			this.pedidoexporConstantesFunciones.setResaltarFK_IdTipoCambioPedidoExpor(resaltar);

			jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdTipoCambioPedidoExpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoPrecio")) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdTipoPrecioPedidoExpor);

			this.jTabbedPaneBusquedasPedidoExpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);

			this.pedidoexporConstantesFunciones.setResaltarFK_IdTipoPrecioPedidoExpor(resaltar);

			jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdTipoPrecioPedidoExpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransporte")) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdTransportePedidoExpor);

			this.jTabbedPaneBusquedasPedidoExpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);

			this.pedidoexporConstantesFunciones.setResaltarFK_IdTransportePedidoExpor(resaltar);

			jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdTransportePedidoExpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransportista")) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdTransportistaPedidoExpor);

			this.jTabbedPaneBusquedasPedidoExpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);

			this.pedidoexporConstantesFunciones.setResaltarFK_IdTransportistaPedidoExpor(resaltar);

			jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdTransportistaPedidoExpor);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdVendedor")) {
			index= this.jTabbedPaneBusquedasPedidoExpor.indexOfComponent(this.jPanelFK_IdVendedorPedidoExpor);

			this.jTabbedPaneBusquedasPedidoExpor.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasPedidoExpor.getComponent(index);

			this.pedidoexporConstantesFunciones.setResaltarFK_IdVendedorPedidoExpor(resaltar);

			jPanel.setBorder(this.pedidoexporConstantesFunciones.resaltarFK_IdVendedorPedidoExpor);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarPedidoExpor.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioPedidoExpor() throws Exception {

		if(this.jInternalFrameDetalleFormPedidoExpor==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioPedidoExpor();
		this.updateVisibilidadResaltarControlesFormularioPedidoExpor();
		this.updateHabilitarResaltarControlesFormularioPedidoExpor();
		
	}
	
	public void updateBorderResaltarControlesFormularioPedidoExpor() throws Exception {
		if(this.jInternalFrameDetalleFormPedidoExpor==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.pedidoexporConstantesFunciones.resaltaridPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jLabelidPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltaridPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_empresaPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empresaPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_empresaPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_sucursalPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sucursalPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_sucursalPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_ejercicioPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_ejercicioPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_ejercicioPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_periodoPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_periodoPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_periodoPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_anioPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_anioPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_anioPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_mesPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_mesPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_mesPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_usuarioPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_usuarioPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_usuarioPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarnumeroPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumeroPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarnumeroPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarnumero_preimpresoPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumero_preimpresoPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarnumero_preimpresoPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarfecha_emisionPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfecha_emisionPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarfecha_emisionPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarfecha_vencimientoPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfecha_vencimientoPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarfecha_vencimientoPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_monedaPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_monedaPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_monedaPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarcotizacionPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldcotizacionPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarcotizacionPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_empleadoPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empleadoPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_empleadoPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_tipo_precioPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_precioPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_tipo_precioPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_formatoPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_formatoPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_formatoPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltardireccionPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextAreadireccionPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltardireccionPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_clientePedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_clientePedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_clientePedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltartelefonoPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtelefonoPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltartelefonoPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarrucPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldrucPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarrucPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_paisPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_paisPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_paisPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarlugar_entregaPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldlugar_entregaPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarlugar_entregaPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarembarquePedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextAreaembarquePedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarembarquePedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarnegociacionPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextAreanegociacionPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarnegociacionPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_transportePedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportePedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_transportePedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_vendedorPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_vendedorPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_vendedorPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarforma_pagoPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextAreaforma_pagoPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarforma_pagoPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_sub_clientePedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sub_clientePedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_sub_clientePedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_consignatarioPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consignatarioPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_consignatarioPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_consultorPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consultorPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_consultorPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarordenPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldordenPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarordenPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_estado_pedidoPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_estado_pedidoPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_estado_pedidoPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltardescripcionPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextAreadescripcionPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltardescripcionPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarmontoPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldmontoPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarmontoPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarsaldoPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsaldoPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarsaldoPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltardisponiblePedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFielddisponiblePedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltardisponiblePedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltardescuento_porcentajePedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFielddescuento_porcentajePedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltardescuento_porcentajePedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltartotal_con_ivaPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_con_ivaPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltartotal_con_ivaPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarsumanPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsumanPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarsumanPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltardescuento_valorPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFielddescuento_valorPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltardescuento_valorPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltartotal_sin_ivaPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_sin_ivaPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltartotal_sin_ivaPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltartotal_descuentoPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_descuentoPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltartotal_descuentoPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarfletePedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldfletePedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarfletePedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltartotalPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotalPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltartotalPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarsubtotalPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsubtotalPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarsubtotalPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarsegurosPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsegurosPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarsegurosPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarivaPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldivaPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarivaPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarfinanciamientoPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldfinanciamientoPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarfinanciamientoPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarmonto_retencionPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldmonto_retencionPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarmonto_retencionPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarotroPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldotroPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarotroPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltaricePedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldicePedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltaricePedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarfechaPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfechaPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarfechaPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarfecha_servidorPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfecha_servidorPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarfecha_servidorPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_tipo_cambioPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_cambioPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_tipo_cambioPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarnumero_fuePedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumero_fuePedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarnumero_fuePedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_centro_costoPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_centro_costoPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_centro_costoPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_responsablePedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_responsablePedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_responsablePedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarhora_inicioPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jSpinnerhora_inicioPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarhora_inicioPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarhora_finPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jSpinnerhora_finPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarhora_finPedidoExpor);}
		if(this.pedidoexporConstantesFunciones.resaltarid_transportistaPedidoExpor!=null && this.jInternalFrameDetalleFormPedidoExpor!=null) {this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportistaPedidoExpor.setBorder(this.pedidoexporConstantesFunciones.resaltarid_transportistaPedidoExpor);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioPedidoExpor() throws Exception {		
		if(this.jInternalFrameDetalleFormPedidoExpor==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
	
		//this.jInternalFrameDetalleFormPedidoExpor.jLabelidPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostraridPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelidPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostraridPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empresaPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_empresaPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_empresaPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_empresaPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sucursalPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_sucursalPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_sucursalPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_sucursalPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_ejercicioPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_ejercicioPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_ejercicioPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_ejercicioPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_periodoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_periodoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_periodoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_periodoPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_anioPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_anioPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_anioPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_anioPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_mesPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_mesPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_mesPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_mesPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_usuarioPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_usuarioPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_usuarioPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_usuarioPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumeroPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarnumeroPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelnumeroPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarnumeroPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumero_preimpresoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarnumero_preimpresoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelnumero_preimpresoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarnumero_preimpresoPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfecha_emisionPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarfecha_emisionPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelfecha_emisionPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarfecha_emisionPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfecha_vencimientoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarfecha_vencimientoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelfecha_vencimientoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarfecha_vencimientoPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_monedaPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_monedaPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_monedaPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_monedaPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldcotizacionPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarcotizacionPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelcotizacionPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarcotizacionPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empleadoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_empleadoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_empleadoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_empleadoPedidoExpor);
			this.jInternalFrameDetalleFormPedidoExpor.jButtonid_empleadoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_empleadoPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_precioPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_tipo_precioPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_tipo_precioPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_tipo_precioPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_formatoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_formatoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_formatoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_formatoPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextAreadireccionPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrardireccionPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPaneldireccionPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrardireccionPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_clientePedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_clientePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_clientePedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_clientePedidoExpor);
			this.jInternalFrameDetalleFormPedidoExpor.jButtonid_clientePedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_clientePedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtelefonoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrartelefonoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPaneltelefonoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrartelefonoPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldrucPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarrucPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelrucPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarrucPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_paisPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_paisPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_paisPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_paisPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldlugar_entregaPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarlugar_entregaPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanellugar_entregaPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarlugar_entregaPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextAreaembarquePedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarembarquePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelembarquePedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarembarquePedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextAreanegociacionPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarnegociacionPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelnegociacionPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarnegociacionPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportePedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_transportePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_transportePedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_transportePedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_vendedorPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_vendedorPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_vendedorPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_vendedorPedidoExpor);
			this.jInternalFrameDetalleFormPedidoExpor.jButtonid_vendedorPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_vendedorPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextAreaforma_pagoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarforma_pagoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelforma_pagoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarforma_pagoPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sub_clientePedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_sub_clientePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_sub_clientePedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_sub_clientePedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consignatarioPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_consignatarioPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_consignatarioPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_consignatarioPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consultorPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_consultorPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_consultorPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_consultorPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldordenPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarordenPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelordenPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarordenPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_estado_pedidoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_estado_pedidoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_estado_pedidoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_estado_pedidoPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextAreadescripcionPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrardescripcionPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPaneldescripcionPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrardescripcionPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldmontoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarmontoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelmontoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarmontoPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsaldoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarsaldoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelsaldoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarsaldoPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFielddisponiblePedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrardisponiblePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPaneldisponiblePedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrardisponiblePedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFielddescuento_porcentajePedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrardescuento_porcentajePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPaneldescuento_porcentajePedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrardescuento_porcentajePedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_con_ivaPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrartotal_con_ivaPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPaneltotal_con_ivaPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrartotal_con_ivaPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsumanPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarsumanPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelsumanPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarsumanPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFielddescuento_valorPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrardescuento_valorPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPaneldescuento_valorPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrardescuento_valorPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_sin_ivaPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrartotal_sin_ivaPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPaneltotal_sin_ivaPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrartotal_sin_ivaPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_descuentoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrartotal_descuentoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPaneltotal_descuentoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrartotal_descuentoPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldfletePedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarfletePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelfletePedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarfletePedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotalPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrartotalPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPaneltotalPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrartotalPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsubtotalPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarsubtotalPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelsubtotalPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarsubtotalPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsegurosPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarsegurosPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelsegurosPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarsegurosPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldivaPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarivaPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelivaPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarivaPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldfinanciamientoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarfinanciamientoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelfinanciamientoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarfinanciamientoPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldmonto_retencionPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarmonto_retencionPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelmonto_retencionPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarmonto_retencionPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldotroPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarotroPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelotroPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarotroPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldicePedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostraricePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelicePedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostraricePedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfechaPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarfechaPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelfechaPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarfechaPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfecha_servidorPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarfecha_servidorPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelfecha_servidorPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarfecha_servidorPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_cambioPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_tipo_cambioPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_tipo_cambioPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_tipo_cambioPedidoExpor);
			this.jInternalFrameDetalleFormPedidoExpor.jButtonid_tipo_cambioPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_tipo_cambioPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumero_fuePedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarnumero_fuePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelnumero_fuePedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarnumero_fuePedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_centro_costoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_centro_costoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_centro_costoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_centro_costoPedidoExpor);
			this.jInternalFrameDetalleFormPedidoExpor.jButtonid_centro_costoPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_centro_costoPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_responsablePedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_responsablePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_responsablePedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_responsablePedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jSpinnerhora_inicioPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarhora_inicioPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelhora_inicioPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarhora_inicioPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jSpinnerhora_finPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarhora_finPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelhora_finPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarhora_finPedidoExpor);
		//this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportistaPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_transportistaPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jPanelid_transportistaPedidoExpor.setVisible(this.pedidoexporConstantesFunciones.mostrarid_transportistaPedidoExpor);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioPedidoExpor() throws Exception {
		if(this.jInternalFrameDetalleFormPedidoExpor==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormPedidoExpor!=null) {
	
		this.jInternalFrameDetalleFormPedidoExpor.jLabelidPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activaridPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empresaPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_empresaPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sucursalPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_sucursalPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_ejercicioPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_ejercicioPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_periodoPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_periodoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_anioPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_anioPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_mesPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_mesPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_usuarioPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_usuarioPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumeroPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarnumeroPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumero_preimpresoPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarnumero_preimpresoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfecha_emisionPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarfecha_emisionPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfecha_vencimientoPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarfecha_vencimientoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_monedaPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_monedaPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldcotizacionPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarcotizacionPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_empleadoPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_empleadoPedidoExpor);
			this.jInternalFrameDetalleFormPedidoExpor.jButtonid_empleadoPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_empleadoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_precioPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_tipo_precioPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_formatoPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_formatoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextAreadireccionPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activardireccionPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_clientePedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_clientePedidoExpor);
			this.jInternalFrameDetalleFormPedidoExpor.jButtonid_clientePedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_clientePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtelefonoPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activartelefonoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldrucPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarrucPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_paisPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_paisPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldlugar_entregaPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarlugar_entregaPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextAreaembarquePedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarembarquePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextAreanegociacionPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarnegociacionPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportePedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_transportePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_vendedorPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_vendedorPedidoExpor);
			this.jInternalFrameDetalleFormPedidoExpor.jButtonid_vendedorPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_vendedorPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextAreaforma_pagoPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarforma_pagoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_sub_clientePedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_sub_clientePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consignatarioPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_consignatarioPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_consultorPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_consultorPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldordenPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarordenPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_estado_pedidoPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_estado_pedidoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextAreadescripcionPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activardescripcionPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldmontoPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarmontoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsaldoPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarsaldoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFielddisponiblePedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activardisponiblePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFielddescuento_porcentajePedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activardescuento_porcentajePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_con_ivaPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activartotal_con_ivaPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsumanPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarsumanPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFielddescuento_valorPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activardescuento_valorPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_sin_ivaPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activartotal_sin_ivaPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotal_descuentoPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activartotal_descuentoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldfletePedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarfletePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldtotalPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activartotalPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsubtotalPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarsubtotalPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldsegurosPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarsegurosPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldivaPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarivaPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldfinanciamientoPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarfinanciamientoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldmonto_retencionPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarmonto_retencionPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldotroPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarotroPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldicePedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activaricePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfechaPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarfechaPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jDateChooserfecha_servidorPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarfecha_servidorPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_tipo_cambioPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_tipo_cambioPedidoExpor);
			this.jInternalFrameDetalleFormPedidoExpor.jButtonid_tipo_cambioPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_tipo_cambioPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jTextFieldnumero_fuePedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarnumero_fuePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_centro_costoPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_centro_costoPedidoExpor);
			this.jInternalFrameDetalleFormPedidoExpor.jButtonid_centro_costoPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_centro_costoPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_responsablePedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_responsablePedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jSpinnerhora_inicioPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarhora_inicioPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jSpinnerhora_finPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarhora_finPedidoExpor);
		this.jInternalFrameDetalleFormPedidoExpor.jComboBoxid_transportistaPedidoExpor.setEnabled(this.pedidoexporConstantesFunciones.activarid_transportistaPedidoExpor);
		}
	}
	
		
}