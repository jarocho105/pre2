/*
*AVISO LEGAL
Â© Copyright
*Este programa esta protegido por la ley de derechos de autor.
*La reproduccion o distribucion ilicita de este programa o de cualquiera de
*sus partes esta penado por la ley con severas sanciones civiles y penales,
*y seran objeto de todas las sanciones legales que correspondan.

*Su contenido no puede copiarse para fines comerciales o de otras,
*ni puede mostrarse, incluso en una version modificada, en otros sitios Web.
Solo esta permitido colocar hipervinculos al sitio web.
*/
package com.bydan.erp.contabilidad.presentation.swing.jinternalframes;




import com.bydan.erp.seguridad.business.entity.Usuario;
import com.bydan.erp.seguridad.business.entity.ResumenUsuario;
import com.bydan.erp.seguridad.business.entity.Opcion;
import com.bydan.erp.seguridad.business.entity.PerfilOpcion;
import com.bydan.erp.seguridad.business.entity.PerfilCampo;
import com.bydan.erp.seguridad.business.entity.PerfilAccion;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralSg;
import com.bydan.erp.seguridad.business.entity.ParametroGeneralUsuario;
import com.bydan.erp.seguridad.business.entity.Modulo;
import com.bydan.erp.seguridad.business.entity.Accion;

import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneralAdditional;
import com.bydan.erp.seguridad.util.SistemaParameterReturnGeneral;


//import com.bydan.erp.seguridad.business.entity.PerfilAccion;


import com.bydan.erp.seguridad.util.SistemaConstantesFunciones;
import com.bydan.erp.seguridad.util.SistemaConstantesFuncionesAdditional;
import com.bydan.erp.seguridad.business.logic.SistemaLogicAdditional;

import com.bydan.erp.contabilidad.util.AsientoContableCajaChicaConstantesFunciones;
import com.bydan.erp.contabilidad.util.AsientoContableCajaChicaParameterReturnGeneral;
//import com.bydan.erp.contabilidad.util.AsientoContableCajaChicaParameterGeneral;
//import com.bydan.erp.contabilidad.presentation.report.source.AsientoContableCajaChicaBean;
import com.bydan.framework.erp.business.dataaccess.ConstantesSql;
import com.bydan.framework.erp.business.entity.Classe;
import com.bydan.framework.erp.business.entity.DatoGeneral;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterGeneral;
import com.bydan.framework.erp.business.entity.OrderBy;
import com.bydan.framework.erp.business.entity.DatoGeneralMinimo;
import com.bydan.framework.erp.business.entity.GeneralEntity;
import com.bydan.framework.erp.business.entity.Mensajes;
import com.bydan.framework.erp.business.entity.GeneralEntityParameterReturnGeneral;
//import com.bydan.framework.erp.business.entity.MaintenanceType;
import com.bydan.framework.erp.util.MaintenanceType;
import com.bydan.framework.erp.util.FuncionesReporte;
import com.bydan.framework.erp.business.logic.DatosCliente;
import com.bydan.framework.erp.business.logic.Pagination;

import com.bydan.erp.contabilidad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralTotalModel;
import com.bydan.framework.erp.presentation.desktop.swing.TablaGeneralOrderByModel;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverter;
import com.bydan.framework.erp.presentation.desktop.swing.DateConverterFromDate;
import com.bydan.framework.erp.presentation.desktop.swing.DateRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.DateEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.BooleanEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.TextFieldRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.RunnableProceso;
import com.bydan.framework.erp.presentation.desktop.swing.*;
//import com.bydan.framework.erp.presentation.desktop.swing.TextFieldEditorRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.HeaderRenderer;
import com.bydan.framework.erp.presentation.desktop.swing.JInternalFrameBase;
import com.bydan.framework.erp.presentation.desktop.swing.FuncionesSwing;
import com.bydan.framework.erp.presentation.desktop.swing.MainJFrame;
import com.bydan.framework.erp.resources.imagenes.AuxiliarImagenes;
import com.bydan.erp.contabilidad.resources.reportes.AuxiliarReportes;


import com.bydan.erp.contabilidad.util.*;
import com.bydan.erp.contabilidad.business.logic.*;

import com.bydan.erp.seguridad.business.logic.*;
import com.bydan.erp.nomina.business.logic.*;
import com.bydan.erp.cartera.business.logic.*;
import com.bydan.erp.tesoreria.business.logic.*;

//EJB

//PARAMETROS


//EJB PARAMETROS

import com.bydan.framework.erp.business.logic.*;
import com.bydan.framework.erp.util.*;

import com.bydan.erp.contabilidad.business.entity.*;
//import com.bydan.framework.erp.business.entity.ConexionBeanFace;
//import com.bydan.framework.erp.business.entity.Mensajes;


import com.bydan.erp.seguridad.presentation.swing.jinternalframes.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.*;

import com.bydan.erp.seguridad.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.nomina.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.cartera.presentation.swing.jinternalframes.auxiliar.*;
import com.bydan.erp.tesoreria.presentation.swing.jinternalframes.auxiliar.*;






import javax.imageio.ImageIO;
import java.net.NetworkInterface;
import java.net.InterfaceAddress;
import java.net.InetAddress;
import javax.naming.InitialContext;
import java.lang.Long;
import java.util.Date;
import java.util.Enumeration;
import java.util.Iterator;
import java.util.Set;
import java.util.HashSet;
import java.util.List;
import java.util.ArrayList;
import java.io.Serializable;
import java.util.Hashtable;
import java.util.Collections;
import java.io.File;
import java.io.FileInputStream;
import java.io.BufferedWriter;
import java.io.FileWriter;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.HashMap;
import java.util.Map;
import java.io.PrintWriter;
import java.sql.SQLException;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.parsers.ParserConfigurationException;
import javax.xml.transform.stream.StreamSource;

import org.xml.sax.EntityResolver;
import org.xml.sax.InputSource;
import org.xml.sax.SAXException;

import org.w3c.dom.Document;
import org.w3c.dom.Document;
import org.w3c.dom.NodeList;
import org.w3c.dom.Node;
import org.w3c.dom.Element;

import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

import org.apache.poi.ss.usermodel.Workbook;
import org.apache.poi.ss.usermodel.Sheet;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellStyle;
import org.apache.poi.ss.usermodel.IndexedColors;
import org.apache.poi.ss.util.CellRangeAddress;

import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;


import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JRRuntimeException;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.engine.export.JRHtmlExporter;
import net.sf.jasperreports.j2ee.servlets.BaseHttpServlet;
import net.sf.jasperreports.engine.JRExporterParameter;
import net.sf.jasperreports.engine.data.JRBeanArrayDataSource;
import net.sf.jasperreports.engine.data.JRBeanCollectionDataSource;
import net.sf.jasperreports.view.JasperViewer;

import org.apache.log4j.Logger;

import com.bydan.framework.erp.business.entity.Reporte;


//VALIDACION
import org.hibernate.validator.ClassValidator;
import org.hibernate.validator.InvalidValue;

import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperPrintManager;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.JasperRunManager;
import net.sf.jasperreports.engine.export.JExcelApiExporter;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.JRRtfExporter;
import net.sf.jasperreports.engine.export.JRXlsExporter;
import net.sf.jasperreports.engine.export.JRXlsExporterParameter;
import net.sf.jasperreports.engine.util.JRSaver;
import net.sf.jasperreports.engine.xml.JRXmlWriter;


import com.bydan.erp.contabilidad.presentation.web.jsf.sessionbean.*;

import java.util.EventObject;
import javax.swing.*;
import javax.swing.border.Border;
import javax.swing.border.TitledBorder;
import javax.swing.border.EmptyBorder;
import javax.swing.event.*;
import javax.swing.table.AbstractTableModel;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableCellRenderer;
import java.awt.*;
import java.awt.event.*;

import org.jdesktop.beansbinding.Binding.SyncFailure;
import org.jdesktop.beansbinding.BindingListener;
import org.jdesktop.beansbinding.Bindings;
import org.jdesktop.beansbinding.BeanProperty;
import org.jdesktop.beansbinding.ELProperty;
import org.jdesktop.beansbinding.AutoBinding.UpdateStrategy;
import org.jdesktop.beansbinding.PropertyStateEvent;
import org.jdesktop.swingbinding.JComboBoxBinding;
import org.jdesktop.swingbinding.SwingBindings;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeEvent;

import com.toedter.calendar.JDateChooser;


import com.bydan.erp.seguridad.business.entity.*;
import com.bydan.erp.nomina.business.entity.*;
import com.bydan.erp.cartera.business.entity.*;
import com.bydan.erp.tesoreria.business.entity.*;
import com.bydan.erp.seguridad.util.*;
import com.bydan.erp.nomina.util.*;
import com.bydan.erp.cartera.util.*;
import com.bydan.erp.tesoreria.util.*;
import com.bydan.erp.seguridad.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.nomina.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.cartera.presentation.web.jsf.sessionbean.*;
import com.bydan.erp.tesoreria.presentation.web.jsf.sessionbean.*;


@SuppressWarnings("unused")
public class AsientoContableCajaChicaBeanSwingJInternalFrame extends AsientoContableCajaChicaJInternalFrame implements WindowListener,WindowFocusListener
{				
	
	public static final long serialVersionUID = 1L;
	
	public static Logger logger = Logger.getLogger(AsientoContableCajaChicaBeanSwingJInternalFrame.class);  
	
	public static ClassValidator<AsientoContableCajaChica> asientocontablecajachicaValidator = new ClassValidator<AsientoContableCajaChica>(AsientoContableCajaChica.class);
	
	public InvalidValue[] invalidValues=null;
		

	//Ejb Foreign Keys
	
	public AsientoContableCajaChica asientocontablecajachica;	
	public AsientoContableCajaChica asientocontablecajachicaAux;
	public AsientoContableCajaChica asientocontablecajachicaAnterior;//USADO PARA MANEJAR FOCUS GAINED,LOST
	public AsientoContableCajaChica asientocontablecajachicaTotales;
	public Long idAsientoContableCajaChicaActual;
	public Long iIdNuevoAsientoContableCajaChica=0L;
	public int rowIndexActual=0;
	
	
	
	
	public String sFinalQueryComboEmpresa="";

	public List<Empresa> empresasForeignKey;

	public List<Empresa> getempresasForeignKey() {
		return empresasForeignKey;
	}

	public void setempresasForeignKey(List<Empresa> empresasForeignKey) {
		this.empresasForeignKey = empresasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empresa empresaForeignKey;

	public Empresa getempresaForeignKey() {
		return empresaForeignKey;
	}

	public void setempresaForeignKey(Empresa empresaForeignKey) {
		this.empresaForeignKey = empresaForeignKey;
	}

	public String sFinalQueryComboSucursal="";

	public List<Sucursal> sucursalsForeignKey;

	public List<Sucursal> getsucursalsForeignKey() {
		return sucursalsForeignKey;
	}

	public void setsucursalsForeignKey(List<Sucursal> sucursalsForeignKey) {
		this.sucursalsForeignKey = sucursalsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Sucursal sucursalForeignKey;

	public Sucursal getsucursalForeignKey() {
		return sucursalForeignKey;
	}

	public void setsucursalForeignKey(Sucursal sucursalForeignKey) {
		this.sucursalForeignKey = sucursalForeignKey;
	}

	public String sFinalQueryComboEjercicio="";

	public List<Ejercicio> ejerciciosForeignKey;

	public List<Ejercicio> getejerciciosForeignKey() {
		return ejerciciosForeignKey;
	}

	public void setejerciciosForeignKey(List<Ejercicio> ejerciciosForeignKey) {
		this.ejerciciosForeignKey = ejerciciosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Ejercicio ejercicioForeignKey;

	public Ejercicio getejercicioForeignKey() {
		return ejercicioForeignKey;
	}

	public void setejercicioForeignKey(Ejercicio ejercicioForeignKey) {
		this.ejercicioForeignKey = ejercicioForeignKey;
	}

	public String sFinalQueryComboPeriodo="";

	public List<Periodo> periodosForeignKey;

	public List<Periodo> getperiodosForeignKey() {
		return periodosForeignKey;
	}

	public void setperiodosForeignKey(List<Periodo> periodosForeignKey) {
		this.periodosForeignKey = periodosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Periodo periodoForeignKey;

	public Periodo getperiodoForeignKey() {
		return periodoForeignKey;
	}

	public void setperiodoForeignKey(Periodo periodoForeignKey) {
		this.periodoForeignKey = periodoForeignKey;
	}

	public String sFinalQueryComboUsuario="";

	public List<Usuario> usuariosForeignKey;

	public List<Usuario> getusuariosForeignKey() {
		return usuariosForeignKey;
	}

	public void setusuariosForeignKey(List<Usuario> usuariosForeignKey) {
		this.usuariosForeignKey = usuariosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Usuario usuarioForeignKey;

	public Usuario getusuarioForeignKey() {
		return usuarioForeignKey;
	}

	public void setusuarioForeignKey(Usuario usuarioForeignKey) {
		this.usuarioForeignKey = usuarioForeignKey;
	}

	public String sFinalQueryComboAnio="";

	public List<Anio> aniosForeignKey;

	public List<Anio> getaniosForeignKey() {
		return aniosForeignKey;
	}

	public void setaniosForeignKey(List<Anio> aniosForeignKey) {
		this.aniosForeignKey = aniosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Anio anioForeignKey;

	public Anio getanioForeignKey() {
		return anioForeignKey;
	}

	public void setanioForeignKey(Anio anioForeignKey) {
		this.anioForeignKey = anioForeignKey;
	}

	public String sFinalQueryComboMes="";

	public List<Mes> messForeignKey;

	public List<Mes> getmessForeignKey() {
		return messForeignKey;
	}

	public void setmessForeignKey(List<Mes> messForeignKey) {
		this.messForeignKey = messForeignKey;
	}

	//OBJETO FK ACTUAL
	public Mes mesForeignKey;

	public Mes getmesForeignKey() {
		return mesForeignKey;
	}

	public void setmesForeignKey(Mes mesForeignKey) {
		this.mesForeignKey = mesForeignKey;
	}

	public String sFinalQueryComboMoneda="";

	public List<Moneda> monedasForeignKey;

	public List<Moneda> getmonedasForeignKey() {
		return monedasForeignKey;
	}

	public void setmonedasForeignKey(List<Moneda> monedasForeignKey) {
		this.monedasForeignKey = monedasForeignKey;
	}

	//OBJETO FK ACTUAL
	public Moneda monedaForeignKey;

	public Moneda getmonedaForeignKey() {
		return monedaForeignKey;
	}

	public void setmonedaForeignKey(Moneda monedaForeignKey) {
		this.monedaForeignKey = monedaForeignKey;
	}

	public String sFinalQueryComboEmpleado="";

	public List<Empleado> empleadosForeignKey;

	public List<Empleado> getempleadosForeignKey() {
		return empleadosForeignKey;
	}

	public void setempleadosForeignKey(List<Empleado> empleadosForeignKey) {
		this.empleadosForeignKey = empleadosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Empleado empleadoForeignKey;

	public Empleado getempleadoForeignKey() {
		return empleadoForeignKey;
	}

	public void setempleadoForeignKey(Empleado empleadoForeignKey) {
		this.empleadoForeignKey = empleadoForeignKey;
	}

	public String sFinalQueryComboEstadoAsientoContableCajaChica="";

	public List<EstadoAsientoContableCajaChica> estadoasientocontablecajachicasForeignKey;

	public List<EstadoAsientoContableCajaChica> getestadoasientocontablecajachicasForeignKey() {
		return estadoasientocontablecajachicasForeignKey;
	}

	public void setestadoasientocontablecajachicasForeignKey(List<EstadoAsientoContableCajaChica> estadoasientocontablecajachicasForeignKey) {
		this.estadoasientocontablecajachicasForeignKey = estadoasientocontablecajachicasForeignKey;
	}

	//OBJETO FK ACTUAL
	public EstadoAsientoContableCajaChica estadoasientocontablecajachicaForeignKey;

	public EstadoAsientoContableCajaChica getestadoasientocontablecajachicaForeignKey() {
		return estadoasientocontablecajachicaForeignKey;
	}

	public void setestadoasientocontablecajachicaForeignKey(EstadoAsientoContableCajaChica estadoasientocontablecajachicaForeignKey) {
		this.estadoasientocontablecajachicaForeignKey = estadoasientocontablecajachicaForeignKey;
	}

	public String sFinalQueryComboCliente="";

	public List<Cliente> clientesForeignKey;

	public List<Cliente> getclientesForeignKey() {
		return clientesForeignKey;
	}

	public void setclientesForeignKey(List<Cliente> clientesForeignKey) {
		this.clientesForeignKey = clientesForeignKey;
	}

	//OBJETO FK ACTUAL
	public Cliente clienteForeignKey;

	public Cliente getclienteForeignKey() {
		return clienteForeignKey;
	}

	public void setclienteForeignKey(Cliente clienteForeignKey) {
		this.clienteForeignKey = clienteForeignKey;
	}

	public String sFinalQueryComboTransaccion="";

	public List<Transaccion> transaccionsForeignKey;

	public List<Transaccion> gettransaccionsForeignKey() {
		return transaccionsForeignKey;
	}

	public void settransaccionsForeignKey(List<Transaccion> transaccionsForeignKey) {
		this.transaccionsForeignKey = transaccionsForeignKey;
	}

	//OBJETO FK ACTUAL
	public Transaccion transaccionForeignKey;

	public Transaccion gettransaccionForeignKey() {
		return transaccionForeignKey;
	}

	public void settransaccionForeignKey(Transaccion transaccionForeignKey) {
		this.transaccionForeignKey = transaccionForeignKey;
	}

	public String sFinalQueryComboTipoDocumento="";

	public List<TipoDocumento> tipodocumentosForeignKey;

	public List<TipoDocumento> gettipodocumentosForeignKey() {
		return tipodocumentosForeignKey;
	}

	public void settipodocumentosForeignKey(List<TipoDocumento> tipodocumentosForeignKey) {
		this.tipodocumentosForeignKey = tipodocumentosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoDocumento tipodocumentoForeignKey;

	public TipoDocumento gettipodocumentoForeignKey() {
		return tipodocumentoForeignKey;
	}

	public void settipodocumentoForeignKey(TipoDocumento tipodocumentoForeignKey) {
		this.tipodocumentoForeignKey = tipodocumentoForeignKey;
	}

	public String sFinalQueryComboCuentaContable="";

	public List<CuentaContable> cuentacontablesForeignKey;

	public List<CuentaContable> getcuentacontablesForeignKey() {
		return cuentacontablesForeignKey;
	}

	public void setcuentacontablesForeignKey(List<CuentaContable> cuentacontablesForeignKey) {
		this.cuentacontablesForeignKey = cuentacontablesForeignKey;
	}

	//OBJETO FK ACTUAL
	public CuentaContable cuentacontableForeignKey;

	public CuentaContable getcuentacontableForeignKey() {
		return cuentacontableForeignKey;
	}

	public void setcuentacontableForeignKey(CuentaContable cuentacontableForeignKey) {
		this.cuentacontableForeignKey = cuentacontableForeignKey;
	}

	public String sFinalQueryComboModulo="";

	public List<Modulo> modulosForeignKey;

	public List<Modulo> getmodulosForeignKey() {
		return modulosForeignKey;
	}

	public void setmodulosForeignKey(List<Modulo> modulosForeignKey) {
		this.modulosForeignKey = modulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public Modulo moduloForeignKey;

	public Modulo getmoduloForeignKey() {
		return moduloForeignKey;
	}

	public void setmoduloForeignKey(Modulo moduloForeignKey) {
		this.moduloForeignKey = moduloForeignKey;
	}

	public String sFinalQueryComboTipoMovimiento="";

	public List<TipoMovimiento> tipomovimientosForeignKey;

	public List<TipoMovimiento> gettipomovimientosForeignKey() {
		return tipomovimientosForeignKey;
	}

	public void settipomovimientosForeignKey(List<TipoMovimiento> tipomovimientosForeignKey) {
		this.tipomovimientosForeignKey = tipomovimientosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoMovimiento tipomovimientoForeignKey;

	public TipoMovimiento gettipomovimientoForeignKey() {
		return tipomovimientoForeignKey;
	}

	public void settipomovimientoForeignKey(TipoMovimiento tipomovimientoForeignKey) {
		this.tipomovimientoForeignKey = tipomovimientoForeignKey;
	}

	public String sFinalQueryComboTipoTransaccionModulo="";

	public List<TipoTransaccionModulo> tipotransaccionmodulosForeignKey;

	public List<TipoTransaccionModulo> gettipotransaccionmodulosForeignKey() {
		return tipotransaccionmodulosForeignKey;
	}

	public void settipotransaccionmodulosForeignKey(List<TipoTransaccionModulo> tipotransaccionmodulosForeignKey) {
		this.tipotransaccionmodulosForeignKey = tipotransaccionmodulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoTransaccionModulo tipotransaccionmoduloForeignKey;

	public TipoTransaccionModulo gettipotransaccionmoduloForeignKey() {
		return tipotransaccionmoduloForeignKey;
	}

	public void settipotransaccionmoduloForeignKey(TipoTransaccionModulo tipotransaccionmoduloForeignKey) {
		this.tipotransaccionmoduloForeignKey = tipotransaccionmoduloForeignKey;
	}

	public String sFinalQueryComboTipoMovimientoModulo="";

	public List<TipoMovimientoModulo> tipomovimientomodulosForeignKey;

	public List<TipoMovimientoModulo> gettipomovimientomodulosForeignKey() {
		return tipomovimientomodulosForeignKey;
	}

	public void settipomovimientomodulosForeignKey(List<TipoMovimientoModulo> tipomovimientomodulosForeignKey) {
		this.tipomovimientomodulosForeignKey = tipomovimientomodulosForeignKey;
	}

	//OBJETO FK ACTUAL
	public TipoMovimientoModulo tipomovimientomoduloForeignKey;

	public TipoMovimientoModulo gettipomovimientomoduloForeignKey() {
		return tipomovimientomoduloForeignKey;
	}

	public void settipomovimientomoduloForeignKey(TipoMovimientoModulo tipomovimientomoduloForeignKey) {
		this.tipomovimientomoduloForeignKey = tipomovimientomoduloForeignKey;
	}

		
	
	
	
	//BUSQUEDA INTERNA FK
	public Long idEmpleadoActual=0L;

	public Long getidEmpleadoActual() {
		return idEmpleadoActual;
	}

	public void setidEmpleadoActual(Long idEmpleadoActual) {
		this.idEmpleadoActual= idEmpleadoActual;
	}
	public Long idClienteActual=0L;

	public Long getidClienteActual() {
		return idClienteActual;
	}

	public void setidClienteActual(Long idClienteActual) {
		this.idClienteActual= idClienteActual;
	}
	public Long idCuentaContableActual=0L;

	public Long getidCuentaContableActual() {
		return idCuentaContableActual;
	}

	public void setidCuentaContableActual(Long idCuentaContableActual) {
		this.idCuentaContableActual= idCuentaContableActual;
	}
	
	

	public Boolean isTienePermisosDetalleAsientoContableCajaChica=false;

	public Boolean getIsTienePermisosDetalleAsientoContableCajaChica() {
		return isTienePermisosDetalleAsientoContableCajaChica;
	}

	public void setIsTienePermisosDetalleAsientoContableCajaChica(Boolean isTienePermisosDetalleAsientoContableCajaChica) {
		this.isTienePermisosDetalleAsientoContableCajaChica= isTienePermisosDetalleAsientoContableCajaChica;
	}

	
	
	//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
	public String sFinalQueryGeneral="";
	public Boolean isEntroOnLoad=false;
	public Boolean isErrorGuardar=false;
	
	public Boolean isGuardarCambiosEnLote=false;
	public Boolean isCargarCombosDependencia=false;
	public Boolean isSeleccionarTodos=false;
	public Boolean isSeleccionados=false;
	public Boolean conGraficoReporte=false;
	
	public Boolean isPostAccionNuevo=false;
	public Boolean isPostAccionSinCerrar=false;
	public Boolean isPostAccionSinMensaje=false;
	
	
	public Boolean esControlTabla=false;
	
	public Boolean isPermisoTodoAsientoContableCajaChica;
	public Boolean isPermisoNuevoAsientoContableCajaChica;
	public Boolean isPermisoActualizarAsientoContableCajaChica;
	public Boolean isPermisoActualizarOriginalAsientoContableCajaChica;
	public Boolean isPermisoEliminarAsientoContableCajaChica;
	public Boolean isPermisoGuardarCambiosAsientoContableCajaChica;
	public Boolean isPermisoConsultaAsientoContableCajaChica;
	public Boolean isPermisoBusquedaAsientoContableCajaChica;
	public Boolean isPermisoReporteAsientoContableCajaChica;
	public Boolean isPermisoPaginacionMedioAsientoContableCajaChica;
	public Boolean isPermisoPaginacionAltoAsientoContableCajaChica;
	public Boolean isPermisoPaginacionTodoAsientoContableCajaChica;
	public Boolean isPermisoCopiarAsientoContableCajaChica;
	public Boolean isPermisoVerFormAsientoContableCajaChica;
	public Boolean isPermisoDuplicarAsientoContableCajaChica;
	public Boolean isPermisoOrdenAsientoContableCajaChica;
	
	
	public ArrayList<DatoGeneral> arrDatoGeneral;
	public ArrayList<String> arrDatoGeneralNo;
	ArrayList<Classe> classesActual=new ArrayList<Classe>();
	
	public List<Accion> accions;	
	public List<Accion> accionsFormulario;
	
	
	public ArrayList<DatoGeneralMinimo> arrDatoGeneralMinimos;
	
	public ArrayList<Reporte> tiposArchivosReportes;
	public ArrayList<Reporte> tiposArchivosReportesDinamico;
	public ArrayList<Reporte> tiposReportes;
	public ArrayList<Reporte> tiposReportesDinamico;
	public ArrayList<Reporte> tiposGraficosReportes;
	public ArrayList<Reporte> tiposPaginacion;
	public ArrayList<Reporte> tiposRelaciones;
	public ArrayList<Reporte> tiposAcciones;
	public ArrayList<Reporte> tiposAccionesFormulario;
	public ArrayList<Reporte> tiposSeleccionar;
	
	public ArrayList<Reporte> tiposColumnasSelect;
	public ArrayList<Reporte> tiposRelacionesSelect;
	
	
	public Integer iNumeroPaginacion;
	public Integer iNumeroPaginacionPagina;
	public Pagination pagination;
	public DatosCliente datosCliente;
	public DatosDeep datosDeep;
	public String sTipoArchivoReporte="";
	public String sTipoArchivoReporteDinamico="";
	public String sTipoReporte="";
	public String sTipoReporteDinamico="";
	public String sTipoGraficoReporte="";
	public String sTipoPaginacion="";
	public String sTipoRelacion="";
	public String sTipoAccion="";
	public String sTipoAccionFormulario="";
	public String sTipoSeleccionar="";	
	public String sDetalleReporte="";
	public Boolean isMostrarNumeroPaginacion;
	public String sTipoReporteExtra="";
	public String sValorCampoGeneral="";
	public Boolean esReporteDinamico=false;
	public Boolean esReporteAccionProceso=false;
	public Boolean esRecargarFks=false;
	public String sPathReporteDinamico="";
	
	public AsientoContableCajaChicaParameterReturnGeneral asientocontablecajachicaReturnGeneral;
	public AsientoContableCajaChicaParameterReturnGeneral asientocontablecajachicaParameterGeneral;
	
	

	public DetalleAsientoContableCajaChicaLogic detalleasientocontablecajachicaLogic=null;

	public DetalleAsientoContableCajaChicaLogic getDetalleAsientoContableCajaChicaLogic() {
		return detalleasientocontablecajachicaLogic;
	}

	public void setDetalleAsientoContableCajaChicaLogic(DetalleAsientoContableCajaChicaLogic detalleasientocontablecajachicaLogic) {
		this.detalleasientocontablecajachicaLogic = detalleasientocontablecajachicaLogic;
	}
 	
	public JasperPrint jasperPrint = null;
	
	public Long lIdUsuarioSesion=0L;				
	
	public Boolean isEsNuevoAsientoContableCajaChica=false;
	public Boolean esParaAccionDesdeFormularioAsientoContableCajaChica=false;
	public Boolean isEsMantenimientoRelacionesRelacionadoUnico=false;
	public Boolean isEsMantenimientoRelaciones=false;
	public Boolean isEsMantenimientoRelacionado=false;	
	public Boolean isContieneImagenes=false;
		
	//public Boolean conTotales=false; //Viene heredado de JInternalFrameBase
	//public Boolean esParaBusquedaForeignKey=false;
	
	
	protected AsientoContableCajaChicaSessionBeanAdditional asientocontablecajachicaSessionBeanAdditional=null;
	
	public AsientoContableCajaChicaSessionBeanAdditional getAsientoContableCajaChicaSessionBeanAdditional() {
		return this.asientocontablecajachicaSessionBeanAdditional;
	}
	
	public void setAsientoContableCajaChicaSessionBeanAdditional(AsientoContableCajaChicaSessionBeanAdditional asientocontablecajachicaSessionBeanAdditional) {
		try {
			this.asientocontablecajachicaSessionBeanAdditional=asientocontablecajachicaSessionBeanAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	protected AsientoContableCajaChicaBeanSwingJInternalFrameAdditional asientocontablecajachicaBeanSwingJInternalFrameAdditional=null;
	//public class AsientoContableCajaChicaBeanSwingJInternalFrame
	
	public AsientoContableCajaChicaBeanSwingJInternalFrameAdditional getAsientoContableCajaChicaBeanSwingJInternalFrameAdditional() {
		return this.asientocontablecajachicaBeanSwingJInternalFrameAdditional;
	}
	
	public void setAsientoContableCajaChicaBeanSwingJInternalFrameAdditional(AsientoContableCajaChicaBeanSwingJInternalFrameAdditional asientocontablecajachicaBeanSwingJInternalFrameAdditional) {
		try {
			this.asientocontablecajachicaBeanSwingJInternalFrameAdditional=asientocontablecajachicaBeanSwingJInternalFrameAdditional;
		} catch(Exception e) {
			;
		}
	}
	
	
	
	
	//ESTA EN PADRE
	
	//public AsientoContableCajaChicaLogic asientocontablecajachicaLogic;
	public SistemaLogicAdditional sistemaLogicAdditional;
	
	
	public AsientoContableCajaChica asientocontablecajachicaBean;
	public AsientoContableCajaChicaConstantesFunciones asientocontablecajachicaConstantesFunciones;
	//public AsientoContableCajaChicaParameterReturnGeneral asientocontablecajachicaReturnGeneral;
	
	//FK
	
	public EmpresaLogic empresaLogic;
	public SucursalLogic sucursalLogic;
	public EjercicioLogic ejercicioLogic;
	public PeriodoLogic periodoLogic;
	public UsuarioLogic usuarioLogic;
	public AnioLogic anioLogic;
	public MesLogic mesLogic;
	public MonedaLogic monedaLogic;
	public EmpleadoLogic empleadoLogic;
	public EstadoAsientoContableCajaChicaLogic estadoasientocontablecajachicaLogic;
	public ClienteLogic clienteLogic;
	public TransaccionLogic transaccionLogic;
	public TipoDocumentoLogic tipodocumentoLogic;
	public CuentaContableLogic cuentacontableLogic;
	public ModuloLogic moduloLogic;
	public TipoMovimientoLogic tipomovimientoLogic;
	public TipoTransaccionModuloLogic tipotransaccionmoduloLogic;
	public TipoMovimientoModuloLogic tipomovimientomoduloLogic;
	
	//PARAMETROS
	
	
	//public List<AsientoContableCajaChica> asientocontablecajachicas;	
	//public List<AsientoContableCajaChica> asientocontablecajachicasEliminados;
	//public List<AsientoContableCajaChica> asientocontablecajachicasAux;
	
	public String sAccionMantenimiento="";
	public String sAccionBusqueda="";
	public String sAccionAdicional="";
	public String sUltimaBusqueda="";
	
	public Mensaje mensaje;
	
	
	public String sVisibilidadTablaBusquedas="";					
	public String sVisibilidadTablaElementos="";	
	public String sVisibilidadTablaAcciones="";			
	
	public Boolean isVisibilidadCeldaNuevoAsientoContableCajaChica=false;
	public Boolean isVisibilidadCeldaDuplicarAsientoContableCajaChica=true;
	public Boolean isVisibilidadCeldaCopiarAsientoContableCajaChica=true;
	public Boolean isVisibilidadCeldaVerFormAsientoContableCajaChica=true;
	public Boolean isVisibilidadCeldaOrdenAsientoContableCajaChica=true;
	public Boolean isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica=false;
	public Boolean isVisibilidadCeldaModificarAsientoContableCajaChica=false;
	public Boolean isVisibilidadCeldaActualizarAsientoContableCajaChica=false;
	public Boolean isVisibilidadCeldaEliminarAsientoContableCajaChica=false;
	public Boolean isVisibilidadCeldaCancelarAsientoContableCajaChica=false;
	public Boolean isVisibilidadCeldaGuardarAsientoContableCajaChica=false;	
	public Boolean isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica=false;	
	
	
	public Boolean isVisibilidadFK_IdAnio=false;
	public Boolean isVisibilidadFK_IdCliente=false;
	public Boolean isVisibilidadFK_IdCuentaContable=false;
	public Boolean isVisibilidadFK_IdEjercicio=false;
	public Boolean isVisibilidadFK_IdEmpleado=false;
	public Boolean isVisibilidadFK_IdEmpresa=false;
	public Boolean isVisibilidadFK_IdEstadoAsientoContableCajaChica=false;
	public Boolean isVisibilidadFK_IdMes=false;
	public Boolean isVisibilidadFK_IdModulo=false;
	public Boolean isVisibilidadFK_IdMoneda=false;
	public Boolean isVisibilidadFK_IdPeriodo=false;
	public Boolean isVisibilidadFK_IdSucursal=false;
	public Boolean isVisibilidadFK_IdTipoDocumento=false;
	public Boolean isVisibilidadFK_IdTipoMovimiento=false;
	public Boolean isVisibilidadFK_IdTipoMovimientoModulo=false;
	public Boolean isVisibilidadFK_IdTipoTransaccionModulo=false;
	public Boolean isVisibilidadFK_IdTransaccion=false;
	public Boolean isVisibilidadFK_IdUsuario=false;
	
	public Long getiIdNuevoAsientoContableCajaChica() {
		return this.iIdNuevoAsientoContableCajaChica;
	}

	public void setiIdNuevoAsientoContableCajaChica(Long iIdNuevoAsientoContableCajaChica) {
		this.iIdNuevoAsientoContableCajaChica = iIdNuevoAsientoContableCajaChica;
	}
	
	public Long getidAsientoContableCajaChicaActual() {
		return this.idAsientoContableCajaChicaActual;
	}

	public void setidAsientoContableCajaChicaActual(Long idAsientoContableCajaChicaActual) {
		this.idAsientoContableCajaChicaActual = idAsientoContableCajaChicaActual;
	}
	
	public int getrowIndexActual() {
		return this.rowIndexActual;
	}

	public void setrowIndexActual(int rowIndexActual) {
		this.rowIndexActual=rowIndexActual;
	}
	
	
	public AsientoContableCajaChica getasientocontablecajachica() {
		return this.asientocontablecajachica;
	}

	public void setasientocontablecajachica(AsientoContableCajaChica asientocontablecajachica) {
		this.asientocontablecajachica = asientocontablecajachica;
	}
	
	public AsientoContableCajaChica getasientocontablecajachicaAux() {
		return this.asientocontablecajachicaAux;
	}

	public void setasientocontablecajachicaAux(AsientoContableCajaChica asientocontablecajachicaAux) {
		this.asientocontablecajachicaAux = asientocontablecajachicaAux;
	}				
	
	public AsientoContableCajaChica getasientocontablecajachicaAnterior() {
		return this.asientocontablecajachicaAnterior;
	}

	public void setasientocontablecajachicaAnterior(AsientoContableCajaChica asientocontablecajachicaAnterior) {
		this.asientocontablecajachicaAnterior = asientocontablecajachicaAnterior;
	}	
	
	public AsientoContableCajaChica getasientocontablecajachicaTotales() {
		return this.asientocontablecajachicaTotales;
	}

	public void setasientocontablecajachicaTotales(AsientoContableCajaChica asientocontablecajachicaTotales) {
		this.asientocontablecajachicaTotales = asientocontablecajachicaTotales;
	}	
	
	public AsientoContableCajaChica getasientocontablecajachicaBean() {
		return this.asientocontablecajachicaBean;
	}

	public void setasientocontablecajachicaBean(AsientoContableCajaChica asientocontablecajachicaBean) {
		this.asientocontablecajachicaBean = asientocontablecajachicaBean;
	}	
	
	public AsientoContableCajaChicaParameterReturnGeneral getasientocontablecajachicaReturnGeneral() {
		return this.asientocontablecajachicaReturnGeneral;
	}

	public void setasientocontablecajachicaReturnGeneral(AsientoContableCajaChicaParameterReturnGeneral asientocontablecajachicaReturnGeneral) {
		this.asientocontablecajachicaReturnGeneral = asientocontablecajachicaReturnGeneral;
	}	
	
	
	public Long id_anioFK_IdAnio=null;

	public Long getid_anioFK_IdAnio() {
		return this.id_anioFK_IdAnio;
	}

	public void setid_anioFK_IdAnio(Long id_anioFK_IdAnio) {
		this.id_anioFK_IdAnio = id_anioFK_IdAnio;
	}

	public Long id_clienteFK_IdCliente=-1L;

	public Long getid_clienteFK_IdCliente() {
		return this.id_clienteFK_IdCliente;
	}

	public void setid_clienteFK_IdCliente(Long id_clienteFK_IdCliente) {
		this.id_clienteFK_IdCliente = id_clienteFK_IdCliente;
	}

	public Long id_cuenta_contableFK_IdCuentaContable=-1L;

	public Long getid_cuenta_contableFK_IdCuentaContable() {
		return this.id_cuenta_contableFK_IdCuentaContable;
	}

	public void setid_cuenta_contableFK_IdCuentaContable(Long id_cuenta_contableFK_IdCuentaContable) {
		this.id_cuenta_contableFK_IdCuentaContable = id_cuenta_contableFK_IdCuentaContable;
	}

	public Long id_ejercicioFK_IdEjercicio=-1L;

	public Long getid_ejercicioFK_IdEjercicio() {
		return this.id_ejercicioFK_IdEjercicio;
	}

	public void setid_ejercicioFK_IdEjercicio(Long id_ejercicioFK_IdEjercicio) {
		this.id_ejercicioFK_IdEjercicio = id_ejercicioFK_IdEjercicio;
	}

	public Long id_empleadoFK_IdEmpleado=-1L;

	public Long getid_empleadoFK_IdEmpleado() {
		return this.id_empleadoFK_IdEmpleado;
	}

	public void setid_empleadoFK_IdEmpleado(Long id_empleadoFK_IdEmpleado) {
		this.id_empleadoFK_IdEmpleado = id_empleadoFK_IdEmpleado;
	}

	public Long id_empresaFK_IdEmpresa=-1L;

	public Long getid_empresaFK_IdEmpresa() {
		return this.id_empresaFK_IdEmpresa;
	}

	public void setid_empresaFK_IdEmpresa(Long id_empresaFK_IdEmpresa) {
		this.id_empresaFK_IdEmpresa = id_empresaFK_IdEmpresa;
	}

	public Long id_estado_asiento_contableFK_IdEstadoAsientoContableCajaChica=-1L;

	public Long getid_estado_asiento_contableFK_IdEstadoAsientoContableCajaChica() {
		return this.id_estado_asiento_contableFK_IdEstadoAsientoContableCajaChica;
	}

	public void setid_estado_asiento_contableFK_IdEstadoAsientoContableCajaChica(Long id_estado_asiento_contableFK_IdEstadoAsientoContableCajaChica) {
		this.id_estado_asiento_contableFK_IdEstadoAsientoContableCajaChica = id_estado_asiento_contableFK_IdEstadoAsientoContableCajaChica;
	}

	public Long id_mesFK_IdMes=null;

	public Long getid_mesFK_IdMes() {
		return this.id_mesFK_IdMes;
	}

	public void setid_mesFK_IdMes(Long id_mesFK_IdMes) {
		this.id_mesFK_IdMes = id_mesFK_IdMes;
	}

	public Long id_moduloFK_IdModulo=-1L;

	public Long getid_moduloFK_IdModulo() {
		return this.id_moduloFK_IdModulo;
	}

	public void setid_moduloFK_IdModulo(Long id_moduloFK_IdModulo) {
		this.id_moduloFK_IdModulo = id_moduloFK_IdModulo;
	}

	public Long id_monedaFK_IdMoneda=-1L;

	public Long getid_monedaFK_IdMoneda() {
		return this.id_monedaFK_IdMoneda;
	}

	public void setid_monedaFK_IdMoneda(Long id_monedaFK_IdMoneda) {
		this.id_monedaFK_IdMoneda = id_monedaFK_IdMoneda;
	}

	public Long id_periodoFK_IdPeriodo=-1L;

	public Long getid_periodoFK_IdPeriodo() {
		return this.id_periodoFK_IdPeriodo;
	}

	public void setid_periodoFK_IdPeriodo(Long id_periodoFK_IdPeriodo) {
		this.id_periodoFK_IdPeriodo = id_periodoFK_IdPeriodo;
	}

	public Long id_sucursalFK_IdSucursal=-1L;

	public Long getid_sucursalFK_IdSucursal() {
		return this.id_sucursalFK_IdSucursal;
	}

	public void setid_sucursalFK_IdSucursal(Long id_sucursalFK_IdSucursal) {
		this.id_sucursalFK_IdSucursal = id_sucursalFK_IdSucursal;
	}

	public Long id_tipo_documentoFK_IdTipoDocumento=-1L;

	public Long getid_tipo_documentoFK_IdTipoDocumento() {
		return this.id_tipo_documentoFK_IdTipoDocumento;
	}

	public void setid_tipo_documentoFK_IdTipoDocumento(Long id_tipo_documentoFK_IdTipoDocumento) {
		this.id_tipo_documentoFK_IdTipoDocumento = id_tipo_documentoFK_IdTipoDocumento;
	}

	public Long id_tipo_movimientoFK_IdTipoMovimiento=-1L;

	public Long getid_tipo_movimientoFK_IdTipoMovimiento() {
		return this.id_tipo_movimientoFK_IdTipoMovimiento;
	}

	public void setid_tipo_movimientoFK_IdTipoMovimiento(Long id_tipo_movimientoFK_IdTipoMovimiento) {
		this.id_tipo_movimientoFK_IdTipoMovimiento = id_tipo_movimientoFK_IdTipoMovimiento;
	}

	public Long id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo=-1L;

	public Long getid_tipo_movimiento_moduloFK_IdTipoMovimientoModulo() {
		return this.id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo;
	}

	public void setid_tipo_movimiento_moduloFK_IdTipoMovimientoModulo(Long id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo) {
		this.id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo = id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo;
	}

	public Long id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo=null;

	public Long getid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo() {
		return this.id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo;
	}

	public void setid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo(Long id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo) {
		this.id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo = id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo;
	}

	public Long id_transaccionFK_IdTransaccion=-1L;

	public Long getid_transaccionFK_IdTransaccion() {
		return this.id_transaccionFK_IdTransaccion;
	}

	public void setid_transaccionFK_IdTransaccion(Long id_transaccionFK_IdTransaccion) {
		this.id_transaccionFK_IdTransaccion = id_transaccionFK_IdTransaccion;
	}

	public Long id_usuarioFK_IdUsuario=-1L;

	public Long getid_usuarioFK_IdUsuario() {
		return this.id_usuarioFK_IdUsuario;
	}

	public void setid_usuarioFK_IdUsuario(Long id_usuarioFK_IdUsuario) {
		this.id_usuarioFK_IdUsuario = id_usuarioFK_IdUsuario;
	}

		
	
	//ELEMENTOS TABLAS PARAMETOS
	
	
	
	
	
	
	//ELEMENTOS TABLAS PARAMETOS_FIN
	
	
	public AsientoContableCajaChicaLogic getAsientoContableCajaChicaLogic()	{		
		return asientocontablecajachicaLogic;
	}

	public void setAsientoContableCajaChicaLogic(AsientoContableCajaChicaLogic asientocontablecajachicaLogic) {
		this.asientocontablecajachicaLogic = asientocontablecajachicaLogic;
	}
	
	
	public void setsFinalQueryGeneral(String sFinalQueryGeneral) {
		this.sFinalQueryGeneral=sFinalQueryGeneral;
	}
	
	public String getsFinalQueryGeneral() {
		return this.sFinalQueryGeneral;
	}
		
	public Boolean getIsGuardarCambiosEnLote() {
		return isGuardarCambiosEnLote;
	}

	public void setIsGuardarCambiosEnLote(Boolean isGuardarCambiosEnLote) {
		this.isGuardarCambiosEnLote = isGuardarCambiosEnLote;
	}
	
	public Boolean getIsCargarCombosDependencia() {
		return isCargarCombosDependencia;
	}

	public void setIsCargarCombosDependencia(Boolean isCargarCombosDependencia) {
		this.isCargarCombosDependencia = isCargarCombosDependencia;
	}
	
	public Boolean getIsEsNuevoAsientoContableCajaChica() {
		return isEsNuevoAsientoContableCajaChica;
	}

	public void setIsEsNuevoAsientoContableCajaChica(Boolean isEsNuevoAsientoContableCajaChica) {
		this.isEsNuevoAsientoContableCajaChica = isEsNuevoAsientoContableCajaChica;
	}

	public Boolean getEsParaAccionDesdeFormularioAsientoContableCajaChica() {
		return esParaAccionDesdeFormularioAsientoContableCajaChica;
	}
	
	public void setEsParaAccionDesdeFormularioAsientoContableCajaChica(Boolean esParaAccionDesdeFormularioAsientoContableCajaChica) {
		this.esParaAccionDesdeFormularioAsientoContableCajaChica = esParaAccionDesdeFormularioAsientoContableCajaChica;
	}
	
	public Boolean getIsEsMantenimientoRelacionesRelacionadoUnico() {
		return isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public void setIsEsMantenimientoRelacionesRelacionadoUnico(Boolean isEsMantenimientoRelacionesRelacionadoUnico) {
		this.isEsMantenimientoRelacionesRelacionadoUnico = isEsMantenimientoRelacionesRelacionadoUnico;
	}

	public Boolean getIsEsMantenimientoRelaciones() {
		return isEsMantenimientoRelaciones;
	}

	public void setIsEsMantenimientoRelaciones(Boolean isEsMantenimientoRelaciones) {
		this.isEsMantenimientoRelaciones = isEsMantenimientoRelaciones;
	}

	public Boolean getIsEsMantenimientoRelacionado() {
		return isEsMantenimientoRelacionado;
	}

	public void setIsEsMantenimientoRelacionado(Boolean isEsMantenimientoRelacionado) {
		this.isEsMantenimientoRelacionado = isEsMantenimientoRelacionado;
	}

	public Boolean getesParaBusquedaForeignKey() {
		return esParaBusquedaForeignKey;
	}

	public void setesParaBusquedaForeignKey(Boolean esParaBusquedaForeignKey) {
		this.esParaBusquedaForeignKey = esParaBusquedaForeignKey;
	}

	public Boolean getIsContieneImagenes() {
		return isContieneImagenes;
	}

	public void setIsContieneImagenes(Boolean isContieneImagenes) {
		this.isContieneImagenes = isContieneImagenes;
	}		
	
	
	public void cargarCombosEmpresasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empresasForeignKey=new ArrayList<Empresa>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpresaLogic empresaLogic=new EmpresaLogic();

			//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

			if(this.asientocontablecajachicaSessionBean==null) {
				this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empresaLogic.getEmpresaDataAccess().setIsForForeingKeyData(true);

					empresaLogic.getTodosEmpresasWithConnection(sFinalQuery,new Pagination());

					this.empresasForeignKey=empresaLogic.getEmpresas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpresa(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empresaLogic.getEntityWithConnection(asientocontablecajachicaSessionBean.getlidEmpresaActual());
					this.empresasForeignKey.add(empresaLogic.getEmpresa());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosSucursalsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.sucursalsForeignKey=new ArrayList<Sucursal>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			SucursalLogic sucursalLogic=new SucursalLogic();

			//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

			if(this.asientocontablecajachicaSessionBean==null) {
				this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//sucursalLogic.getSucursalDataAccess().setIsForForeingKeyData(true);

					sucursalLogic.getTodosSucursalsWithConnection(sFinalQuery,new Pagination());

					this.sucursalsForeignKey=sucursalLogic.getSucursals();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaSucursal(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					sucursalLogic.getEntityWithConnection(asientocontablecajachicaSessionBean.getlidSucursalActual());
					this.sucursalsForeignKey.add(sucursalLogic.getSucursal());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEjerciciosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EjercicioLogic ejercicioLogic=new EjercicioLogic();

			//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

			if(this.asientocontablecajachicaSessionBean==null) {
				this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//ejercicioLogic.getEjercicioDataAccess().setIsForForeingKeyData(true);

					ejercicioLogic.getTodosEjerciciosWithConnection(sFinalQuery,new Pagination());

					this.ejerciciosForeignKey=ejercicioLogic.getEjercicios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEjercicio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					ejercicioLogic.getEntityWithConnection(asientocontablecajachicaSessionBean.getlidEjercicioActual());
					this.ejerciciosForeignKey.add(ejercicioLogic.getEjercicio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosPeriodosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.periodosForeignKey=new ArrayList<Periodo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			PeriodoLogic periodoLogic=new PeriodoLogic();

			//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

			if(this.asientocontablecajachicaSessionBean==null) {
				this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//periodoLogic.getPeriodoDataAccess().setIsForForeingKeyData(true);

					periodoLogic.getTodosPeriodosWithConnection(sFinalQuery,new Pagination());

					this.periodosForeignKey=periodoLogic.getPeriodos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaPeriodo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					periodoLogic.getEntityWithConnection(asientocontablecajachicaSessionBean.getlidPeriodoActual());
					this.periodosForeignKey.add(periodoLogic.getPeriodo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosUsuariosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.usuariosForeignKey=new ArrayList<Usuario>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			UsuarioLogic usuarioLogic=new UsuarioLogic();

			//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

			if(this.asientocontablecajachicaSessionBean==null) {
				this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//usuarioLogic.getUsuarioDataAccess().setIsForForeingKeyData(true);

					usuarioLogic.getTodosUsuariosWithConnection(sFinalQuery,new Pagination());

					this.usuariosForeignKey=usuarioLogic.getUsuarios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaUsuario(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					usuarioLogic.getEntityWithConnection(asientocontablecajachicaSessionBean.getlidUsuarioActual());
					this.usuariosForeignKey.add(usuarioLogic.getUsuario());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosAniosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.aniosForeignKey=new ArrayList<Anio>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			AnioLogic anioLogic=new AnioLogic();

			//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

			if(this.asientocontablecajachicaSessionBean==null) {
				this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//anioLogic.getAnioDataAccess().setIsForForeingKeyData(true);

					anioLogic.getTodosAniosWithConnection(sFinalQuery,new Pagination());

					this.aniosForeignKey=anioLogic.getAnios();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaAnio(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					anioLogic.getEntityWithConnection(asientocontablecajachicaSessionBean.getlidAnioActual());
					this.aniosForeignKey.add(anioLogic.getAnio());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMessForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.messForeignKey=new ArrayList<Mes>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MesLogic mesLogic=new MesLogic();

			//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

			if(this.asientocontablecajachicaSessionBean==null) {
				this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//mesLogic.getMesDataAccess().setIsForForeingKeyData(true);

					mesLogic.getTodosMessWithConnection(sFinalQuery,new Pagination());

					this.messForeignKey=mesLogic.getMess();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMes(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					mesLogic.getEntityWithConnection(asientocontablecajachicaSessionBean.getlidMesActual());
					this.messForeignKey.add(mesLogic.getMes());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosMonedasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.monedasForeignKey=new ArrayList<Moneda>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			MonedaLogic monedaLogic=new MonedaLogic();

			//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

			if(this.asientocontablecajachicaSessionBean==null) {
				this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//monedaLogic.getMonedaDataAccess().setIsForForeingKeyData(true);

					monedaLogic.getTodosMonedasWithConnection(sFinalQuery,new Pagination());

					this.monedasForeignKey=monedaLogic.getMonedas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaMoneda(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					monedaLogic.getEntityWithConnection(asientocontablecajachicaSessionBean.getlidMonedaActual());
					this.monedasForeignKey.add(monedaLogic.getMoneda());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEmpleadosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.empleadosForeignKey=new ArrayList<Empleado>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EmpleadoLogic empleadoLogic=new EmpleadoLogic();

			//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

			if(this.asientocontablecajachicaSessionBean==null) {
				this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//empleadoLogic.getEmpleadoDataAccess().setIsForForeingKeyData(true);

					empleadoLogic.getTodosEmpleadosWithConnection(sFinalQuery,new Pagination());

					this.empleadosForeignKey=empleadoLogic.getEmpleados();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEmpleado(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(asientocontablecajachicaSessionBean.getlidEmpleadoActual());
					this.empleadosForeignKey.add(empleadoLogic.getEmpleado());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosEstadoAsientoContableCajaChicasForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.estadoasientocontablecajachicasForeignKey=new ArrayList<EstadoAsientoContableCajaChica>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			EstadoAsientoContableCajaChicaLogic estadoasientocontablecajachicaLogic=new EstadoAsientoContableCajaChicaLogic();

			//estadoasientocontablecajachicaLogic.getEstadoAsientoContableCajaChicaDataAccess().setIsForForeingKeyData(true);

			if(this.asientocontablecajachicaSessionBean==null) {
				this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionEstadoAsientoContableCajaChica()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//estadoasientocontablecajachicaLogic.getEstadoAsientoContableCajaChicaDataAccess().setIsForForeingKeyData(true);

					estadoasientocontablecajachicaLogic.getTodosEstadoAsientoContableCajaChicasWithConnection(sFinalQuery,new Pagination());

					this.estadoasientocontablecajachicasForeignKey=estadoasientocontablecajachicaLogic.getEstadoAsientoContableCajaChicas();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaEstadoAsientoContableCajaChica(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					estadoasientocontablecajachicaLogic.getEntityWithConnection(asientocontablecajachicaSessionBean.getlidEstadoAsientoContableCajaChicaActual());
					this.estadoasientocontablecajachicasForeignKey.add(estadoasientocontablecajachicaLogic.getEstadoAsientoContableCajaChica());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosClientesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.clientesForeignKey=new ArrayList<Cliente>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ClienteLogic clienteLogic=new ClienteLogic();

			//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

			if(this.asientocontablecajachicaSessionBean==null) {
				this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//clienteLogic.getClienteDataAccess().setIsForForeingKeyData(true);

					clienteLogic.getTodosClientesWithConnection(sFinalQuery,new Pagination());

					this.clientesForeignKey=clienteLogic.getClientes();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCliente(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(asientocontablecajachicaSessionBean.getlidClienteActual());
					this.clientesForeignKey.add(clienteLogic.getCliente());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTransaccionsForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.transaccionsForeignKey=new ArrayList<Transaccion>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TransaccionLogic transaccionLogic=new TransaccionLogic();

			//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

			if(this.asientocontablecajachicaSessionBean==null) {
				this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//transaccionLogic.getTransaccionDataAccess().setIsForForeingKeyData(true);

					transaccionLogic.getTodosTransaccionsWithConnection(sFinalQuery,new Pagination());

					this.transaccionsForeignKey=transaccionLogic.getTransaccions();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTransaccion(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					transaccionLogic.getEntityWithConnection(asientocontablecajachicaSessionBean.getlidTransaccionActual());
					this.transaccionsForeignKey.add(transaccionLogic.getTransaccion());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoDocumentosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipodocumentosForeignKey=new ArrayList<TipoDocumento>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoDocumentoLogic tipodocumentoLogic=new TipoDocumentoLogic();

			//tipodocumentoLogic.getTipoDocumentoDataAccess().setIsForForeingKeyData(true);

			if(this.asientocontablecajachicaSessionBean==null) {
				this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumento()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipodocumentoLogic.getTipoDocumentoDataAccess().setIsForForeingKeyData(true);

					tipodocumentoLogic.getTodosTipoDocumentosWithConnection(sFinalQuery,new Pagination());

					this.tipodocumentosForeignKey=tipodocumentoLogic.getTipoDocumentos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoDocumento(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipodocumentoLogic.getEntityWithConnection(asientocontablecajachicaSessionBean.getlidTipoDocumentoActual());
					this.tipodocumentosForeignKey.add(tipodocumentoLogic.getTipoDocumento());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosCuentaContablesForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			CuentaContableLogic cuentacontableLogic=new CuentaContableLogic();

			//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

			if(this.asientocontablecajachicaSessionBean==null) {
				this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//cuentacontableLogic.getCuentaContableDataAccess().setIsForForeingKeyData(true);

					cuentacontableLogic.getTodosCuentaContablesWithConnection(sFinalQuery,new Pagination());

					this.cuentacontablesForeignKey=cuentacontableLogic.getCuentaContables();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaCuentaContable(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(asientocontablecajachicaSessionBean.getlidCuentaContableActual());
					this.cuentacontablesForeignKey.add(cuentacontableLogic.getCuentaContable());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.modulosForeignKey=new ArrayList<Modulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			ModuloLogic moduloLogic=new ModuloLogic();

			//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

			if(this.asientocontablecajachicaSessionBean==null) {
				this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//moduloLogic.getModuloDataAccess().setIsForForeingKeyData(true);

					moduloLogic.getTodosModulosWithConnection(sFinalQuery,new Pagination());

					this.modulosForeignKey=moduloLogic.getModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					moduloLogic.getEntityWithConnection(asientocontablecajachicaSessionBean.getlidModuloActual());
					this.modulosForeignKey.add(moduloLogic.getModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoMovimientosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipomovimientosForeignKey=new ArrayList<TipoMovimiento>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoMovimientoLogic tipomovimientoLogic=new TipoMovimientoLogic();

			//tipomovimientoLogic.getTipoMovimientoDataAccess().setIsForForeingKeyData(true);

			if(this.asientocontablecajachicaSessionBean==null) {
				this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTipoMovimiento()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipomovimientoLogic.getTipoMovimientoDataAccess().setIsForForeingKeyData(true);

					tipomovimientoLogic.getTodosTipoMovimientosWithConnection(sFinalQuery,new Pagination());

					this.tipomovimientosForeignKey=tipomovimientoLogic.getTipoMovimientos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoMovimiento(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipomovimientoLogic.getEntityWithConnection(asientocontablecajachicaSessionBean.getlidTipoMovimientoActual());
					this.tipomovimientosForeignKey.add(tipomovimientoLogic.getTipoMovimiento());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoTransaccionModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipotransaccionmodulosForeignKey=new ArrayList<TipoTransaccionModulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoTransaccionModuloLogic tipotransaccionmoduloLogic=new TipoTransaccionModuloLogic();

			//tipotransaccionmoduloLogic.getTipoTransaccionModuloDataAccess().setIsForForeingKeyData(true);

			if(this.asientocontablecajachicaSessionBean==null) {
				this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTipoTransaccionModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipotransaccionmoduloLogic.getTipoTransaccionModuloDataAccess().setIsForForeingKeyData(true);

					tipotransaccionmoduloLogic.getTodosTipoTransaccionModulosWithConnection(sFinalQuery,new Pagination());

					this.tipotransaccionmodulosForeignKey=tipotransaccionmoduloLogic.getTipoTransaccionModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoTransaccionModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipotransaccionmoduloLogic.getEntityWithConnection(asientocontablecajachicaSessionBean.getlidTipoTransaccionModuloActual());
					this.tipotransaccionmodulosForeignKey.add(tipotransaccionmoduloLogic.getTipoTransaccionModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public void cargarCombosTipoMovimientoModulosForeignKeyLista(String sFinalQuery)throws Exception
	{
		try
		{
			this.tipomovimientomodulosForeignKey=new ArrayList<TipoMovimientoModulo>();

			ArrayList<Classe> clases=new ArrayList<Classe>();
			ArrayList<String> arrClasses=new ArrayList<String>();
			Classe classe=new Classe();
			DatosDeep datosDeep=new DatosDeep(false,DeepLoadType.INCLUDE,clases,"");

			TipoMovimientoModuloLogic tipomovimientomoduloLogic=new TipoMovimientoModuloLogic();

			//tipomovimientomoduloLogic.getTipoMovimientoModuloDataAccess().setIsForForeingKeyData(true);

			if(this.asientocontablecajachicaSessionBean==null) {
				this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTipoMovimientoModulo()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//tipomovimientomoduloLogic.getTipoMovimientoModuloDataAccess().setIsForForeingKeyData(true);

					tipomovimientomoduloLogic.getTodosTipoMovimientoModulosWithConnection(sFinalQuery,new Pagination());

					this.tipomovimientomodulosForeignKey=tipomovimientomoduloLogic.getTipoMovimientoModulos();

				} else if(Constantes.ISUSAEJBREMOTE) {

				} else if(Constantes.ISUSAEJBHOME) {
				}


				//ARCHITECTURE
			} else {
				if(!this.conCargarMinimo) {
					this.setVisibilidadBusquedasParaTipoMovimientoModulo(true);
				}
				//ARCHITECTURE

				if(Constantes.ISUSAEJBLOGICLAYER) {
					tipomovimientomoduloLogic.getEntityWithConnection(asientocontablecajachicaSessionBean.getlidTipoMovimientoModuloActual());
					this.tipomovimientomodulosForeignKey.add(tipomovimientomoduloLogic.getTipoMovimientoModulo());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	
	public void setActualEmpresaForeignKey(Long idEmpresaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empresaTemp!=null) {

					if(this.asientocontablecajachica!=null) {
						this.asientocontablecajachica.setEmpresa(empresaTemp);
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empresaAsientoContableCajaChica.setSelectedItem(empresaTemp);
					}
				} else {
					//jComboBoxid_empresaAsientoContableCajaChica.setSelectedItem(empresaTemp);
					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empresaAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empresaAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpresaForeignKeyDescripcion(Long idEmpresaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}


			sDescripcion=EmpresaConstantesFunciones.getEmpresaDescripcion(empresaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpresaForeignKeyGenerico(Long idEmpresaSeleccionado,JComboBox jComboBoxid_empresaAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaTemp=null;

			for(Empresa empresaAux:empresasForeignKey) {
				if(empresaAux.getId()!=null && empresaAux.getId().equals(idEmpresaSeleccionado)) {
					empresaTemp=empresaAux;
					break;
				}
			}

			if(empresaTemp!=null) {
				jComboBoxid_empresaAsientoContableCajaChicaGenerico.setSelectedItem(empresaTemp);
			} else {
				if(jComboBoxid_empresaAsientoContableCajaChicaGenerico!=null && jComboBoxid_empresaAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_empresaAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualSucursalForeignKey(Long idSucursalSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(sucursalTemp!=null) {

					if(this.asientocontablecajachica!=null) {
						this.asientocontablecajachica.setSucursal(sucursalTemp);
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_sucursalAsientoContableCajaChica.setSelectedItem(sucursalTemp);
					}
				} else {
					//jComboBoxid_sucursalAsientoContableCajaChica.setSelectedItem(sucursalTemp);
					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_sucursalAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_sucursalAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualSucursalForeignKeyDescripcion(Long idSucursalSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}


			sDescripcion=SucursalConstantesFunciones.getSucursalDescripcion(sucursalTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualSucursalForeignKeyGenerico(Long idSucursalSeleccionado,JComboBox jComboBoxid_sucursalAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalTemp=null;

			for(Sucursal sucursalAux:sucursalsForeignKey) {
				if(sucursalAux.getId()!=null && sucursalAux.getId().equals(idSucursalSeleccionado)) {
					sucursalTemp=sucursalAux;
					break;
				}
			}

			if(sucursalTemp!=null) {
				jComboBoxid_sucursalAsientoContableCajaChicaGenerico.setSelectedItem(sucursalTemp);
			} else {
				if(jComboBoxid_sucursalAsientoContableCajaChicaGenerico!=null && jComboBoxid_sucursalAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_sucursalAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEjercicioForeignKey(Long idEjercicioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(ejercicioTemp!=null) {

					if(this.asientocontablecajachica!=null) {
						this.asientocontablecajachica.setEjercicio(ejercicioTemp);
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_ejercicioAsientoContableCajaChica.setSelectedItem(ejercicioTemp);
					}
				} else {
					//jComboBoxid_ejercicioAsientoContableCajaChica.setSelectedItem(ejercicioTemp);
					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_ejercicioAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_ejercicioAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEjercicioForeignKeyDescripcion(Long idEjercicioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}


			sDescripcion=EjercicioConstantesFunciones.getEjercicioDescripcion(ejercicioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEjercicioForeignKeyGenerico(Long idEjercicioSeleccionado,JComboBox jComboBoxid_ejercicioAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioTemp=null;

			for(Ejercicio ejercicioAux:ejerciciosForeignKey) {
				if(ejercicioAux.getId()!=null && ejercicioAux.getId().equals(idEjercicioSeleccionado)) {
					ejercicioTemp=ejercicioAux;
					break;
				}
			}

			if(ejercicioTemp!=null) {
				jComboBoxid_ejercicioAsientoContableCajaChicaGenerico.setSelectedItem(ejercicioTemp);
			} else {
				if(jComboBoxid_ejercicioAsientoContableCajaChicaGenerico!=null && jComboBoxid_ejercicioAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_ejercicioAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualPeriodoForeignKey(Long idPeriodoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(periodoTemp!=null) {

					if(this.asientocontablecajachica!=null) {
						this.asientocontablecajachica.setPeriodo(periodoTemp);
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_periodoAsientoContableCajaChica.setSelectedItem(periodoTemp);
					}
				} else {
					//jComboBoxid_periodoAsientoContableCajaChica.setSelectedItem(periodoTemp);
					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_periodoAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_periodoAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualPeriodoForeignKeyDescripcion(Long idPeriodoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}


			sDescripcion=PeriodoConstantesFunciones.getPeriodoDescripcion(periodoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualPeriodoForeignKeyGenerico(Long idPeriodoSeleccionado,JComboBox jComboBoxid_periodoAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Periodo  periodoTemp=null;

			for(Periodo periodoAux:periodosForeignKey) {
				if(periodoAux.getId()!=null && periodoAux.getId().equals(idPeriodoSeleccionado)) {
					periodoTemp=periodoAux;
					break;
				}
			}

			if(periodoTemp!=null) {
				jComboBoxid_periodoAsientoContableCajaChicaGenerico.setSelectedItem(periodoTemp);
			} else {
				if(jComboBoxid_periodoAsientoContableCajaChicaGenerico!=null && jComboBoxid_periodoAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_periodoAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualUsuarioForeignKey(Long idUsuarioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(usuarioTemp!=null) {

					if(this.asientocontablecajachica!=null) {
						this.asientocontablecajachica.setUsuario(usuarioTemp);
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_usuarioAsientoContableCajaChica.setSelectedItem(usuarioTemp);
					}
				} else {
					//jComboBoxid_usuarioAsientoContableCajaChica.setSelectedItem(usuarioTemp);
					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_usuarioAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_usuarioAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualUsuarioForeignKeyDescripcion(Long idUsuarioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}


			sDescripcion=UsuarioConstantesFunciones.getUsuarioDescripcion(usuarioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualUsuarioForeignKeyGenerico(Long idUsuarioSeleccionado,JComboBox jComboBoxid_usuarioAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioTemp=null;

			for(Usuario usuarioAux:usuariosForeignKey) {
				if(usuarioAux.getId()!=null && usuarioAux.getId().equals(idUsuarioSeleccionado)) {
					usuarioTemp=usuarioAux;
					break;
				}
			}

			if(usuarioTemp!=null) {
				jComboBoxid_usuarioAsientoContableCajaChicaGenerico.setSelectedItem(usuarioTemp);
			} else {
				if(jComboBoxid_usuarioAsientoContableCajaChicaGenerico!=null && jComboBoxid_usuarioAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_usuarioAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualAnioForeignKey(Long idAnioSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(anioTemp!=null) {

					if(this.asientocontablecajachica!=null) {
						this.asientocontablecajachica.setAnio(anioTemp);
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_anioAsientoContableCajaChica.setSelectedItem(anioTemp);
					}
				} else {
					//jComboBoxid_anioAsientoContableCajaChica.setSelectedItem(anioTemp);
					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_anioAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_anioAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualAnioForeignKeyDescripcion(Long idAnioSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}


			sDescripcion=AnioConstantesFunciones.getAnioDescripcion(anioTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualAnioForeignKeyGenerico(Long idAnioSeleccionado,JComboBox jComboBoxid_anioAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Anio  anioTemp=null;

			for(Anio anioAux:aniosForeignKey) {
				if(anioAux.getId()!=null && anioAux.getId().equals(idAnioSeleccionado)) {
					anioTemp=anioAux;
					break;
				}
			}

			if(anioTemp!=null) {
				jComboBoxid_anioAsientoContableCajaChicaGenerico.setSelectedItem(anioTemp);
			} else {
				if(jComboBoxid_anioAsientoContableCajaChicaGenerico!=null && jComboBoxid_anioAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_anioAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMesForeignKey(Long idMesSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(mesTemp!=null) {

					if(this.asientocontablecajachica!=null) {
						this.asientocontablecajachica.setMes(mesTemp);
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_mesAsientoContableCajaChica.setSelectedItem(mesTemp);
					}
				} else {
					//jComboBoxid_mesAsientoContableCajaChica.setSelectedItem(mesTemp);
					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_mesAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_mesAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMesForeignKeyDescripcion(Long idMesSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}


			sDescripcion=MesConstantesFunciones.getMesDescripcion(mesTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMesForeignKeyGenerico(Long idMesSeleccionado,JComboBox jComboBoxid_mesAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Mes  mesTemp=null;

			for(Mes mesAux:messForeignKey) {
				if(mesAux.getId()!=null && mesAux.getId().equals(idMesSeleccionado)) {
					mesTemp=mesAux;
					break;
				}
			}

			if(mesTemp!=null) {
				jComboBoxid_mesAsientoContableCajaChicaGenerico.setSelectedItem(mesTemp);
			} else {
				if(jComboBoxid_mesAsientoContableCajaChicaGenerico!=null && jComboBoxid_mesAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_mesAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualMonedaForeignKey(Long idMonedaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(monedaTemp!=null) {

					if(this.asientocontablecajachica!=null) {
						this.asientocontablecajachica.setMoneda(monedaTemp);
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_monedaAsientoContableCajaChica.setSelectedItem(monedaTemp);
					}
				} else {
					//jComboBoxid_monedaAsientoContableCajaChica.setSelectedItem(monedaTemp);
					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_monedaAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_monedaAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualMonedaForeignKeyDescripcion(Long idMonedaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}


			sDescripcion=MonedaConstantesFunciones.getMonedaDescripcion(monedaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualMonedaForeignKeyGenerico(Long idMonedaSeleccionado,JComboBox jComboBoxid_monedaAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Moneda  monedaTemp=null;

			for(Moneda monedaAux:monedasForeignKey) {
				if(monedaAux.getId()!=null && monedaAux.getId().equals(idMonedaSeleccionado)) {
					monedaTemp=monedaAux;
					break;
				}
			}

			if(monedaTemp!=null) {
				jComboBoxid_monedaAsientoContableCajaChicaGenerico.setSelectedItem(monedaTemp);
			} else {
				if(jComboBoxid_monedaAsientoContableCajaChicaGenerico!=null && jComboBoxid_monedaAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_monedaAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEmpleadoForeignKey(Long idEmpleadoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(empleadoTemp!=null) {

					if(this.asientocontablecajachica!=null) {
						this.asientocontablecajachica.setEmpleado(empleadoTemp);
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empleadoAsientoContableCajaChica.setSelectedItem(empleadoTemp);
					}
				} else {
					//jComboBoxid_empleadoAsientoContableCajaChica.setSelectedItem(empleadoTemp);
					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empleadoAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empleadoAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){
					if(empleadoTemp!=null && jComboBoxid_empleadoFK_IdEmpleadoAsientoContableCajaChica!=null) {
						jComboBoxid_empleadoFK_IdEmpleadoAsientoContableCajaChica.setSelectedItem(empleadoTemp);
					} else {
						if(jComboBoxid_empleadoFK_IdEmpleadoAsientoContableCajaChica!=null) {
							//jComboBoxid_empleadoFK_IdEmpleadoAsientoContableCajaChica.setSelectedItem(empleadoTemp);
							if(jComboBoxid_empleadoFK_IdEmpleadoAsientoContableCajaChica.getItemCount()>0) {
								jComboBoxid_empleadoFK_IdEmpleadoAsientoContableCajaChica.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEmpleadoForeignKeyDescripcion(Long idEmpleadoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}


			sDescripcion=EmpleadoConstantesFunciones.getEmpleadoDescripcion(empleadoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEmpleadoForeignKeyGenerico(Long idEmpleadoSeleccionado,JComboBox jComboBoxid_empleadoAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoTemp=null;

			for(Empleado empleadoAux:empleadosForeignKey) {
				if(empleadoAux.getId()!=null && empleadoAux.getId().equals(idEmpleadoSeleccionado)) {
					empleadoTemp=empleadoAux;
					break;
				}
			}

			if(empleadoTemp!=null) {
				jComboBoxid_empleadoAsientoContableCajaChicaGenerico.setSelectedItem(empleadoTemp);
			} else {
				if(jComboBoxid_empleadoAsientoContableCajaChicaGenerico!=null && jComboBoxid_empleadoAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_empleadoAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualEstadoAsientoContableCajaChicaForeignKey(Long idEstadoAsientoContableCajaChicaSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			EstadoAsientoContableCajaChica  estadoasientocontablecajachicaTemp=null;

			for(EstadoAsientoContableCajaChica estadoasientocontablecajachicaAux:estadoasientocontablecajachicasForeignKey) {
				if(estadoasientocontablecajachicaAux.getId()!=null && estadoasientocontablecajachicaAux.getId().equals(idEstadoAsientoContableCajaChicaSeleccionado)) {
					estadoasientocontablecajachicaTemp=estadoasientocontablecajachicaAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(estadoasientocontablecajachicaTemp!=null) {

					if(this.asientocontablecajachica!=null) {
						this.asientocontablecajachica.setEstadoAsientoContableCajaChica(estadoasientocontablecajachicaTemp);
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_estado_asiento_contableAsientoContableCajaChica.setSelectedItem(estadoasientocontablecajachicaTemp);
					}
				} else {
					//jComboBoxid_estado_asiento_contableAsientoContableCajaChica.setSelectedItem(estadoasientocontablecajachicaTemp);
					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_estado_asiento_contableAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_estado_asiento_contableAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualEstadoAsientoContableCajaChicaForeignKeyDescripcion(Long idEstadoAsientoContableCajaChicaSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			EstadoAsientoContableCajaChica  estadoasientocontablecajachicaTemp=null;

			for(EstadoAsientoContableCajaChica estadoasientocontablecajachicaAux:estadoasientocontablecajachicasForeignKey) {
				if(estadoasientocontablecajachicaAux.getId()!=null && estadoasientocontablecajachicaAux.getId().equals(idEstadoAsientoContableCajaChicaSeleccionado)) {
					estadoasientocontablecajachicaTemp=estadoasientocontablecajachicaAux;
					break;
				}
			}


			sDescripcion=EstadoAsientoContableCajaChicaConstantesFunciones.getEstadoAsientoContableCajaChicaDescripcion(estadoasientocontablecajachicaTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualEstadoAsientoContableCajaChicaForeignKeyGenerico(Long idEstadoAsientoContableCajaChicaSeleccionado,JComboBox jComboBoxid_estado_asiento_contableAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			EstadoAsientoContableCajaChica  estadoasientocontablecajachicaTemp=null;

			for(EstadoAsientoContableCajaChica estadoasientocontablecajachicaAux:estadoasientocontablecajachicasForeignKey) {
				if(estadoasientocontablecajachicaAux.getId()!=null && estadoasientocontablecajachicaAux.getId().equals(idEstadoAsientoContableCajaChicaSeleccionado)) {
					estadoasientocontablecajachicaTemp=estadoasientocontablecajachicaAux;
					break;
				}
			}

			if(estadoasientocontablecajachicaTemp!=null) {
				jComboBoxid_estado_asiento_contableAsientoContableCajaChicaGenerico.setSelectedItem(estadoasientocontablecajachicaTemp);
			} else {
				if(jComboBoxid_estado_asiento_contableAsientoContableCajaChicaGenerico!=null && jComboBoxid_estado_asiento_contableAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_estado_asiento_contableAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualClienteForeignKey(Long idClienteSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(clienteTemp!=null) {

					if(this.asientocontablecajachica!=null) {
						this.asientocontablecajachica.setCliente(clienteTemp);
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_clienteAsientoContableCajaChica.setSelectedItem(clienteTemp);
					}
				} else {
					//jComboBoxid_clienteAsientoContableCajaChica.setSelectedItem(clienteTemp);
					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_clienteAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_clienteAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){
					if(clienteTemp!=null && jComboBoxid_clienteFK_IdClienteAsientoContableCajaChica!=null) {
						jComboBoxid_clienteFK_IdClienteAsientoContableCajaChica.setSelectedItem(clienteTemp);
					} else {
						if(jComboBoxid_clienteFK_IdClienteAsientoContableCajaChica!=null) {
							//jComboBoxid_clienteFK_IdClienteAsientoContableCajaChica.setSelectedItem(clienteTemp);
							if(jComboBoxid_clienteFK_IdClienteAsientoContableCajaChica.getItemCount()>0) {
								jComboBoxid_clienteFK_IdClienteAsientoContableCajaChica.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualClienteForeignKeyDescripcion(Long idClienteSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}


			sDescripcion=ClienteConstantesFunciones.getClienteDescripcion(clienteTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualClienteForeignKeyGenerico(Long idClienteSeleccionado,JComboBox jComboBoxid_clienteAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Cliente  clienteTemp=null;

			for(Cliente clienteAux:clientesForeignKey) {
				if(clienteAux.getId()!=null && clienteAux.getId().equals(idClienteSeleccionado)) {
					clienteTemp=clienteAux;
					break;
				}
			}

			if(clienteTemp!=null) {
				jComboBoxid_clienteAsientoContableCajaChicaGenerico.setSelectedItem(clienteTemp);
			} else {
				if(jComboBoxid_clienteAsientoContableCajaChicaGenerico!=null && jComboBoxid_clienteAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_clienteAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTransaccionForeignKey(Long idTransaccionSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(transaccionTemp!=null) {

					if(this.asientocontablecajachica!=null) {
						this.asientocontablecajachica.setTransaccion(transaccionTemp);
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_transaccionAsientoContableCajaChica.setSelectedItem(transaccionTemp);
					}
				} else {
					//jComboBoxid_transaccionAsientoContableCajaChica.setSelectedItem(transaccionTemp);
					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_transaccionAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_transaccionAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTransaccion") || sFormularioTipoBusqueda.equals("Todos")){
					if(transaccionTemp!=null && jComboBoxid_transaccionFK_IdTransaccionAsientoContableCajaChica!=null) {
						jComboBoxid_transaccionFK_IdTransaccionAsientoContableCajaChica.setSelectedItem(transaccionTemp);
					} else {
						if(jComboBoxid_transaccionFK_IdTransaccionAsientoContableCajaChica!=null) {
							//jComboBoxid_transaccionFK_IdTransaccionAsientoContableCajaChica.setSelectedItem(transaccionTemp);
							if(jComboBoxid_transaccionFK_IdTransaccionAsientoContableCajaChica.getItemCount()>0) {
								jComboBoxid_transaccionFK_IdTransaccionAsientoContableCajaChica.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTransaccionForeignKeyDescripcion(Long idTransaccionSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}


			sDescripcion=TransaccionConstantesFunciones.getTransaccionDescripcion(transaccionTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTransaccionForeignKeyGenerico(Long idTransaccionSeleccionado,JComboBox jComboBoxid_transaccionAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionTemp=null;

			for(Transaccion transaccionAux:transaccionsForeignKey) {
				if(transaccionAux.getId()!=null && transaccionAux.getId().equals(idTransaccionSeleccionado)) {
					transaccionTemp=transaccionAux;
					break;
				}
			}

			if(transaccionTemp!=null) {
				jComboBoxid_transaccionAsientoContableCajaChicaGenerico.setSelectedItem(transaccionTemp);
			} else {
				if(jComboBoxid_transaccionAsientoContableCajaChicaGenerico!=null && jComboBoxid_transaccionAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_transaccionAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoDocumentoForeignKey(Long idTipoDocumentoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentoTemp=null;

			for(TipoDocumento tipodocumentoAux:tipodocumentosForeignKey) {
				if(tipodocumentoAux.getId()!=null && tipodocumentoAux.getId().equals(idTipoDocumentoSeleccionado)) {
					tipodocumentoTemp=tipodocumentoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipodocumentoTemp!=null) {

					if(this.asientocontablecajachica!=null) {
						this.asientocontablecajachica.setTipoDocumento(tipodocumentoTemp);
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_documentoAsientoContableCajaChica.setSelectedItem(tipodocumentoTemp);
					}
				} else {
					//jComboBoxid_tipo_documentoAsientoContableCajaChica.setSelectedItem(tipodocumentoTemp);
					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_documentoAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_documentoAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoDocumento") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipodocumentoTemp!=null && jComboBoxid_tipo_documentoFK_IdTipoDocumentoAsientoContableCajaChica!=null) {
						jComboBoxid_tipo_documentoFK_IdTipoDocumentoAsientoContableCajaChica.setSelectedItem(tipodocumentoTemp);
					} else {
						if(jComboBoxid_tipo_documentoFK_IdTipoDocumentoAsientoContableCajaChica!=null) {
							//jComboBoxid_tipo_documentoFK_IdTipoDocumentoAsientoContableCajaChica.setSelectedItem(tipodocumentoTemp);
							if(jComboBoxid_tipo_documentoFK_IdTipoDocumentoAsientoContableCajaChica.getItemCount()>0) {
								jComboBoxid_tipo_documentoFK_IdTipoDocumentoAsientoContableCajaChica.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoDocumentoForeignKeyDescripcion(Long idTipoDocumentoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoDocumento  tipodocumentoTemp=null;

			for(TipoDocumento tipodocumentoAux:tipodocumentosForeignKey) {
				if(tipodocumentoAux.getId()!=null && tipodocumentoAux.getId().equals(idTipoDocumentoSeleccionado)) {
					tipodocumentoTemp=tipodocumentoAux;
					break;
				}
			}


			sDescripcion=TipoDocumentoConstantesFunciones.getTipoDocumentoDescripcion(tipodocumentoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoDocumentoForeignKeyGenerico(Long idTipoDocumentoSeleccionado,JComboBox jComboBoxid_tipo_documentoAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentoTemp=null;

			for(TipoDocumento tipodocumentoAux:tipodocumentosForeignKey) {
				if(tipodocumentoAux.getId()!=null && tipodocumentoAux.getId().equals(idTipoDocumentoSeleccionado)) {
					tipodocumentoTemp=tipodocumentoAux;
					break;
				}
			}

			if(tipodocumentoTemp!=null) {
				jComboBoxid_tipo_documentoAsientoContableCajaChicaGenerico.setSelectedItem(tipodocumentoTemp);
			} else {
				if(jComboBoxid_tipo_documentoAsientoContableCajaChicaGenerico!=null && jComboBoxid_tipo_documentoAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_tipo_documentoAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualCuentaContableForeignKey(Long idCuentaContableSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(cuentacontableTemp!=null) {

					if(this.asientocontablecajachica!=null) {
						this.asientocontablecajachica.setCuentaContable(cuentacontableTemp);
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_cuenta_contableAsientoContableCajaChica.setSelectedItem(cuentacontableTemp);
					}
				} else {
					//jComboBoxid_cuenta_contableAsientoContableCajaChica.setSelectedItem(cuentacontableTemp);
					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_cuenta_contableAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_cuenta_contableAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualCuentaContableForeignKeyDescripcion(Long idCuentaContableSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}


			sDescripcion=CuentaContableConstantesFunciones.getCuentaContableDescripcion(cuentacontableTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualCuentaContableForeignKeyGenerico(Long idCuentaContableSeleccionado,JComboBox jComboBoxid_cuenta_contableAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableTemp=null;

			for(CuentaContable cuentacontableAux:cuentacontablesForeignKey) {
				if(cuentacontableAux.getId()!=null && cuentacontableAux.getId().equals(idCuentaContableSeleccionado)) {
					cuentacontableTemp=cuentacontableAux;
					break;
				}
			}

			if(cuentacontableTemp!=null) {
				jComboBoxid_cuenta_contableAsientoContableCajaChicaGenerico.setSelectedItem(cuentacontableTemp);
			} else {
				if(jComboBoxid_cuenta_contableAsientoContableCajaChicaGenerico!=null && jComboBoxid_cuenta_contableAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_cuenta_contableAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualModuloForeignKey(Long idModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(moduloTemp!=null) {

					if(this.asientocontablecajachica!=null) {
						this.asientocontablecajachica.setModulo(moduloTemp);
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_moduloAsientoContableCajaChica.setSelectedItem(moduloTemp);
					}
				} else {
					//jComboBoxid_moduloAsientoContableCajaChica.setSelectedItem(moduloTemp);
					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_moduloAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_moduloAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualModuloForeignKeyDescripcion(Long idModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}


			sDescripcion=ModuloConstantesFunciones.getModuloDescripcion(moduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualModuloForeignKeyGenerico(Long idModuloSeleccionado,JComboBox jComboBoxid_moduloAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Modulo  moduloTemp=null;

			for(Modulo moduloAux:modulosForeignKey) {
				if(moduloAux.getId()!=null && moduloAux.getId().equals(idModuloSeleccionado)) {
					moduloTemp=moduloAux;
					break;
				}
			}

			if(moduloTemp!=null) {
				jComboBoxid_moduloAsientoContableCajaChicaGenerico.setSelectedItem(moduloTemp);
			} else {
				if(jComboBoxid_moduloAsientoContableCajaChicaGenerico!=null && jComboBoxid_moduloAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_moduloAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoMovimientoForeignKey(Long idTipoMovimientoSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoMovimiento  tipomovimientoTemp=null;

			for(TipoMovimiento tipomovimientoAux:tipomovimientosForeignKey) {
				if(tipomovimientoAux.getId()!=null && tipomovimientoAux.getId().equals(idTipoMovimientoSeleccionado)) {
					tipomovimientoTemp=tipomovimientoAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipomovimientoTemp!=null) {

					if(this.asientocontablecajachica!=null) {
						this.asientocontablecajachica.setTipoMovimiento(tipomovimientoTemp);
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimientoAsientoContableCajaChica.setSelectedItem(tipomovimientoTemp);
					}
				} else {
					//jComboBoxid_tipo_movimientoAsientoContableCajaChica.setSelectedItem(tipomovimientoTemp);
					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimientoAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimientoAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoMovimientoForeignKeyDescripcion(Long idTipoMovimientoSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoMovimiento  tipomovimientoTemp=null;

			for(TipoMovimiento tipomovimientoAux:tipomovimientosForeignKey) {
				if(tipomovimientoAux.getId()!=null && tipomovimientoAux.getId().equals(idTipoMovimientoSeleccionado)) {
					tipomovimientoTemp=tipomovimientoAux;
					break;
				}
			}


			sDescripcion=TipoMovimientoConstantesFunciones.getTipoMovimientoDescripcion(tipomovimientoTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoMovimientoForeignKeyGenerico(Long idTipoMovimientoSeleccionado,JComboBox jComboBoxid_tipo_movimientoAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			TipoMovimiento  tipomovimientoTemp=null;

			for(TipoMovimiento tipomovimientoAux:tipomovimientosForeignKey) {
				if(tipomovimientoAux.getId()!=null && tipomovimientoAux.getId().equals(idTipoMovimientoSeleccionado)) {
					tipomovimientoTemp=tipomovimientoAux;
					break;
				}
			}

			if(tipomovimientoTemp!=null) {
				jComboBoxid_tipo_movimientoAsientoContableCajaChicaGenerico.setSelectedItem(tipomovimientoTemp);
			} else {
				if(jComboBoxid_tipo_movimientoAsientoContableCajaChicaGenerico!=null && jComboBoxid_tipo_movimientoAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_tipo_movimientoAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoTransaccionModuloForeignKey(Long idTipoTransaccionModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloTemp=null;

			for(TipoTransaccionModulo tipotransaccionmoduloAux:tipotransaccionmodulosForeignKey) {
				if(tipotransaccionmoduloAux.getId()!=null && tipotransaccionmoduloAux.getId().equals(idTipoTransaccionModuloSeleccionado)) {
					tipotransaccionmoduloTemp=tipotransaccionmoduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipotransaccionmoduloTemp!=null) {

					if(this.asientocontablecajachica!=null) {
						this.asientocontablecajachica.setTipoTransaccionModulo(tipotransaccionmoduloTemp);
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChica.setSelectedItem(tipotransaccionmoduloTemp);
					}
				} else {
					//jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChica.setSelectedItem(tipotransaccionmoduloTemp);
					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoTransaccionModulo") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipotransaccionmoduloTemp!=null && jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloAsientoContableCajaChica!=null) {
						jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloAsientoContableCajaChica.setSelectedItem(tipotransaccionmoduloTemp);
					} else {
						if(jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloAsientoContableCajaChica!=null) {
							//jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloAsientoContableCajaChica.setSelectedItem(tipotransaccionmoduloTemp);
							if(jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloAsientoContableCajaChica.getItemCount()>0) {
								jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloAsientoContableCajaChica.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoTransaccionModuloForeignKeyDescripcion(Long idTipoTransaccionModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloTemp=null;

			for(TipoTransaccionModulo tipotransaccionmoduloAux:tipotransaccionmodulosForeignKey) {
				if(tipotransaccionmoduloAux.getId()!=null && tipotransaccionmoduloAux.getId().equals(idTipoTransaccionModuloSeleccionado)) {
					tipotransaccionmoduloTemp=tipotransaccionmoduloAux;
					break;
				}
			}


			sDescripcion=TipoTransaccionModuloConstantesFunciones.getTipoTransaccionModuloDescripcion(tipotransaccionmoduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoTransaccionModuloForeignKeyGenerico(Long idTipoTransaccionModuloSeleccionado,JComboBox jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloTemp=null;

			for(TipoTransaccionModulo tipotransaccionmoduloAux:tipotransaccionmodulosForeignKey) {
				if(tipotransaccionmoduloAux.getId()!=null && tipotransaccionmoduloAux.getId().equals(idTipoTransaccionModuloSeleccionado)) {
					tipotransaccionmoduloTemp=tipotransaccionmoduloAux;
					break;
				}
			}

			if(tipotransaccionmoduloTemp!=null) {
				jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChicaGenerico.setSelectedItem(tipotransaccionmoduloTemp);
			} else {
				if(jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChicaGenerico!=null && jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	public void setActualTipoMovimientoModuloForeignKey(Long idTipoMovimientoModuloSeleccionado,Boolean conCombosBusquedas,String sFormularioTipoBusqueda)throws Exception
	{
		try
		{
			TipoMovimientoModulo  tipomovimientomoduloTemp=null;

			for(TipoMovimientoModulo tipomovimientomoduloAux:tipomovimientomodulosForeignKey) {
				if(tipomovimientomoduloAux.getId()!=null && tipomovimientomoduloAux.getId().equals(idTipoMovimientoModuloSeleccionado)) {
					tipomovimientomoduloTemp=tipomovimientomoduloAux;
					break;
				}
			}

			if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){
				if(tipomovimientomoduloTemp!=null) {

					if(this.asientocontablecajachica!=null) {
						this.asientocontablecajachica.setTipoMovimientoModulo(tipomovimientomoduloTemp);
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChica.setSelectedItem(tipomovimientomoduloTemp);
					}
				} else {
					//jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChica.setSelectedItem(tipomovimientomoduloTemp);
					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChica.getItemCount()>0) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChica.setSelectedIndex(0);
						}
					}
				}
			}

			if(conCombosBusquedas) {

		//BYDAN_BUSQUEDAS
						
				if(sFormularioTipoBusqueda.equals("FK_IdTipoMovimientoModulo") || sFormularioTipoBusqueda.equals("Todos")){
					if(tipomovimientomoduloTemp!=null && jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloAsientoContableCajaChica!=null) {
						jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloAsientoContableCajaChica.setSelectedItem(tipomovimientomoduloTemp);
					} else {
						if(jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloAsientoContableCajaChica!=null) {
							//jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloAsientoContableCajaChica.setSelectedItem(tipomovimientomoduloTemp);
							if(jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloAsientoContableCajaChica.getItemCount()>0) {
								jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloAsientoContableCajaChica.setSelectedIndex(0);
							}
						}
					}
				}

					}

		}
		catch(Exception e)
		{
			throw e;
		}
	}

	public String getActualTipoMovimientoModuloForeignKeyDescripcion(Long idTipoMovimientoModuloSeleccionado)throws Exception
	{
		String sDescripcion="";

		try
		{
			TipoMovimientoModulo  tipomovimientomoduloTemp=null;

			for(TipoMovimientoModulo tipomovimientomoduloAux:tipomovimientomodulosForeignKey) {
				if(tipomovimientomoduloAux.getId()!=null && tipomovimientomoduloAux.getId().equals(idTipoMovimientoModuloSeleccionado)) {
					tipomovimientomoduloTemp=tipomovimientomoduloAux;
					break;
				}
			}


			sDescripcion=TipoMovimientoModuloConstantesFunciones.getTipoMovimientoModuloDescripcion(tipomovimientomoduloTemp);
		}
		catch(Exception e)
		{
			throw e;
		}

		return sDescripcion;
	}

	@SuppressWarnings("rawtypes")
	public void setActualTipoMovimientoModuloForeignKeyGenerico(Long idTipoMovimientoModuloSeleccionado,JComboBox jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			TipoMovimientoModulo  tipomovimientomoduloTemp=null;

			for(TipoMovimientoModulo tipomovimientomoduloAux:tipomovimientomodulosForeignKey) {
				if(tipomovimientomoduloAux.getId()!=null && tipomovimientomoduloAux.getId().equals(idTipoMovimientoModuloSeleccionado)) {
					tipomovimientomoduloTemp=tipomovimientomoduloAux;
					break;
				}
			}

			if(tipomovimientomoduloTemp!=null) {
				jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChicaGenerico.setSelectedItem(tipomovimientomoduloTemp);
			} else {
				if(jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChicaGenerico!=null && jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChicaGenerico.getItemCount()>0) {
					jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChicaGenerico.setSelectedIndex(0);
				}
			}

		}
		catch(Exception e)
		{
			throw e;
		}

	}

	
	
	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpresaForeignKey(AsientoContableCajaChica asientocontablecajachica,JComboBox jComboBoxid_empresaAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Empresa  empresaAux=new Empresa();

			if(jComboBoxid_empresaAsientoContableCajaChicaGenerico==null) {
				empresaAux=(Empresa)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empresaAsientoContableCajaChica.getSelectedItem();
			} else {
				empresaAux=(Empresa)jComboBoxid_empresaAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(empresaAux!=null && empresaAux.getId()!=null) {
				asientocontablecajachica.setid_empresa(empresaAux.getId());
				asientocontablecajachica.setempresa_descripcion(AsientoContableCajaChicaConstantesFunciones.getEmpresaDescripcion(empresaAux));
				asientocontablecajachica.setEmpresa(empresaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarSucursalForeignKey(AsientoContableCajaChica asientocontablecajachica,JComboBox jComboBoxid_sucursalAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Sucursal  sucursalAux=new Sucursal();

			if(jComboBoxid_sucursalAsientoContableCajaChicaGenerico==null) {
				sucursalAux=(Sucursal)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_sucursalAsientoContableCajaChica.getSelectedItem();
			} else {
				sucursalAux=(Sucursal)jComboBoxid_sucursalAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(sucursalAux!=null && sucursalAux.getId()!=null) {
				asientocontablecajachica.setid_sucursal(sucursalAux.getId());
				asientocontablecajachica.setsucursal_descripcion(AsientoContableCajaChicaConstantesFunciones.getSucursalDescripcion(sucursalAux));
				asientocontablecajachica.setSucursal(sucursalAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEjercicioForeignKey(AsientoContableCajaChica asientocontablecajachica,JComboBox jComboBoxid_ejercicioAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Ejercicio  ejercicioAux=new Ejercicio();

			if(jComboBoxid_ejercicioAsientoContableCajaChicaGenerico==null) {
				ejercicioAux=(Ejercicio)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_ejercicioAsientoContableCajaChica.getSelectedItem();
			} else {
				ejercicioAux=(Ejercicio)jComboBoxid_ejercicioAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(ejercicioAux!=null && ejercicioAux.getId()!=null) {
				asientocontablecajachica.setid_ejercicio(ejercicioAux.getId());
				asientocontablecajachica.setejercicio_descripcion(AsientoContableCajaChicaConstantesFunciones.getEjercicioDescripcion(ejercicioAux));
				asientocontablecajachica.setEjercicio(ejercicioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarPeriodoForeignKey(AsientoContableCajaChica asientocontablecajachica,JComboBox jComboBoxid_periodoAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Periodo  periodoAux=new Periodo();

			if(jComboBoxid_periodoAsientoContableCajaChicaGenerico==null) {
				periodoAux=(Periodo)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_periodoAsientoContableCajaChica.getSelectedItem();
			} else {
				periodoAux=(Periodo)jComboBoxid_periodoAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(periodoAux!=null && periodoAux.getId()!=null) {
				if(periodoAux.getid_estado_periodo().equals(0L)) {
					throw new Exception("Periodo INACTIVO, NO PUEDE GUARDAR LA INFORMACION CONSULTE CON EL ADMINISTRADOR");
				}

				asientocontablecajachica.setid_periodo(periodoAux.getId());
				asientocontablecajachica.setperiodo_descripcion(AsientoContableCajaChicaConstantesFunciones.getPeriodoDescripcion(periodoAux));
				asientocontablecajachica.setPeriodo(periodoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarUsuarioForeignKey(AsientoContableCajaChica asientocontablecajachica,JComboBox jComboBoxid_usuarioAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Usuario  usuarioAux=new Usuario();

			if(jComboBoxid_usuarioAsientoContableCajaChicaGenerico==null) {
				usuarioAux=(Usuario)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_usuarioAsientoContableCajaChica.getSelectedItem();
			} else {
				usuarioAux=(Usuario)jComboBoxid_usuarioAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(usuarioAux!=null && usuarioAux.getId()!=null) {
				asientocontablecajachica.setid_usuario(usuarioAux.getId());
				asientocontablecajachica.setusuario_descripcion(AsientoContableCajaChicaConstantesFunciones.getUsuarioDescripcion(usuarioAux));
				asientocontablecajachica.setUsuario(usuarioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarAnioForeignKey(AsientoContableCajaChica asientocontablecajachica,JComboBox jComboBoxid_anioAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Anio  anioAux=new Anio();

			if(jComboBoxid_anioAsientoContableCajaChicaGenerico==null) {
				anioAux=(Anio)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_anioAsientoContableCajaChica.getSelectedItem();
			} else {
				anioAux=(Anio)jComboBoxid_anioAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(anioAux!=null) {
				asientocontablecajachica.setid_anio(anioAux.getId());
				asientocontablecajachica.setanio_descripcion(AsientoContableCajaChicaConstantesFunciones.getAnioDescripcion(anioAux));
				asientocontablecajachica.setAnio(anioAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMesForeignKey(AsientoContableCajaChica asientocontablecajachica,JComboBox jComboBoxid_mesAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Mes  mesAux=new Mes();

			if(jComboBoxid_mesAsientoContableCajaChicaGenerico==null) {
				mesAux=(Mes)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_mesAsientoContableCajaChica.getSelectedItem();
			} else {
				mesAux=(Mes)jComboBoxid_mesAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(mesAux!=null) {
				asientocontablecajachica.setid_mes(mesAux.getId());
				asientocontablecajachica.setmes_descripcion(AsientoContableCajaChicaConstantesFunciones.getMesDescripcion(mesAux));
				asientocontablecajachica.setMes(mesAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarMonedaForeignKey(AsientoContableCajaChica asientocontablecajachica,JComboBox jComboBoxid_monedaAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Moneda  monedaAux=new Moneda();

			if(jComboBoxid_monedaAsientoContableCajaChicaGenerico==null) {
				monedaAux=(Moneda)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_monedaAsientoContableCajaChica.getSelectedItem();
			} else {
				monedaAux=(Moneda)jComboBoxid_monedaAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(monedaAux!=null && monedaAux.getId()!=null) {
				asientocontablecajachica.setid_moneda(monedaAux.getId());
				asientocontablecajachica.setmoneda_descripcion(AsientoContableCajaChicaConstantesFunciones.getMonedaDescripcion(monedaAux));
				asientocontablecajachica.setMoneda(monedaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEmpleadoForeignKey(AsientoContableCajaChica asientocontablecajachica,JComboBox jComboBoxid_empleadoAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Empleado  empleadoAux=new Empleado();

			if(jComboBoxid_empleadoAsientoContableCajaChicaGenerico==null) {
				empleadoAux=(Empleado)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empleadoAsientoContableCajaChica.getSelectedItem();
			} else {
				empleadoAux=(Empleado)jComboBoxid_empleadoAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(empleadoAux!=null && empleadoAux.getId()!=null) {
				asientocontablecajachica.setid_empleado(empleadoAux.getId());
				asientocontablecajachica.setempleado_descripcion(AsientoContableCajaChicaConstantesFunciones.getEmpleadoDescripcion(empleadoAux));
				asientocontablecajachica.setEmpleado(empleadoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarEstadoAsientoContableCajaChicaForeignKey(AsientoContableCajaChica asientocontablecajachica,JComboBox jComboBoxid_estado_asiento_contableAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			EstadoAsientoContableCajaChica  estadoasientocontablecajachicaAux=new EstadoAsientoContableCajaChica();

			if(jComboBoxid_estado_asiento_contableAsientoContableCajaChicaGenerico==null) {
				estadoasientocontablecajachicaAux=(EstadoAsientoContableCajaChica)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_estado_asiento_contableAsientoContableCajaChica.getSelectedItem();
			} else {
				estadoasientocontablecajachicaAux=(EstadoAsientoContableCajaChica)jComboBoxid_estado_asiento_contableAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(estadoasientocontablecajachicaAux!=null && estadoasientocontablecajachicaAux.getId()!=null) {
				asientocontablecajachica.setid_estado_asiento_contable(estadoasientocontablecajachicaAux.getId());
				asientocontablecajachica.setestadoasientocontablecajachica_descripcion(AsientoContableCajaChicaConstantesFunciones.getEstadoAsientoContableCajaChicaDescripcion(estadoasientocontablecajachicaAux));
				asientocontablecajachica.setEstadoAsientoContableCajaChica(estadoasientocontablecajachicaAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarClienteForeignKey(AsientoContableCajaChica asientocontablecajachica,JComboBox jComboBoxid_clienteAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Cliente  clienteAux=new Cliente();

			if(jComboBoxid_clienteAsientoContableCajaChicaGenerico==null) {
				clienteAux=(Cliente)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_clienteAsientoContableCajaChica.getSelectedItem();
			} else {
				clienteAux=(Cliente)jComboBoxid_clienteAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(clienteAux!=null && clienteAux.getId()!=null) {
				asientocontablecajachica.setid_cliente(clienteAux.getId());
				asientocontablecajachica.setcliente_descripcion(AsientoContableCajaChicaConstantesFunciones.getClienteDescripcion(clienteAux));
				asientocontablecajachica.setCliente(clienteAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTransaccionForeignKey(AsientoContableCajaChica asientocontablecajachica,JComboBox jComboBoxid_transaccionAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Transaccion  transaccionAux=new Transaccion();

			if(jComboBoxid_transaccionAsientoContableCajaChicaGenerico==null) {
				transaccionAux=(Transaccion)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_transaccionAsientoContableCajaChica.getSelectedItem();
			} else {
				transaccionAux=(Transaccion)jComboBoxid_transaccionAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(transaccionAux!=null && transaccionAux.getId()!=null) {
				asientocontablecajachica.setid_transaccion(transaccionAux.getId());
				asientocontablecajachica.settransaccion_descripcion(AsientoContableCajaChicaConstantesFunciones.getTransaccionDescripcion(transaccionAux));
				asientocontablecajachica.setTransaccion(transaccionAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoDocumentoForeignKey(AsientoContableCajaChica asientocontablecajachica,JComboBox jComboBoxid_tipo_documentoAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			TipoDocumento  tipodocumentoAux=new TipoDocumento();

			if(jComboBoxid_tipo_documentoAsientoContableCajaChicaGenerico==null) {
				tipodocumentoAux=(TipoDocumento)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_documentoAsientoContableCajaChica.getSelectedItem();
			} else {
				tipodocumentoAux=(TipoDocumento)jComboBoxid_tipo_documentoAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(tipodocumentoAux!=null && tipodocumentoAux.getId()!=null) {
				asientocontablecajachica.setid_tipo_documento(tipodocumentoAux.getId());
				asientocontablecajachica.settipodocumento_descripcion(AsientoContableCajaChicaConstantesFunciones.getTipoDocumentoDescripcion(tipodocumentoAux));
				asientocontablecajachica.setTipoDocumento(tipodocumentoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarCuentaContableForeignKey(AsientoContableCajaChica asientocontablecajachica,JComboBox jComboBoxid_cuenta_contableAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			CuentaContable  cuentacontableAux=new CuentaContable();

			if(jComboBoxid_cuenta_contableAsientoContableCajaChicaGenerico==null) {
				cuentacontableAux=(CuentaContable)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_cuenta_contableAsientoContableCajaChica.getSelectedItem();
			} else {
				cuentacontableAux=(CuentaContable)jComboBoxid_cuenta_contableAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(cuentacontableAux!=null && cuentacontableAux.getId()!=null) {
				asientocontablecajachica.setid_cuenta_contable(cuentacontableAux.getId());
				asientocontablecajachica.setcuentacontable_descripcion(AsientoContableCajaChicaConstantesFunciones.getCuentaContableDescripcion(cuentacontableAux));
				asientocontablecajachica.setCuentaContable(cuentacontableAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarModuloForeignKey(AsientoContableCajaChica asientocontablecajachica,JComboBox jComboBoxid_moduloAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			Modulo  moduloAux=new Modulo();

			if(jComboBoxid_moduloAsientoContableCajaChicaGenerico==null) {
				moduloAux=(Modulo)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_moduloAsientoContableCajaChica.getSelectedItem();
			} else {
				moduloAux=(Modulo)jComboBoxid_moduloAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(moduloAux!=null && moduloAux.getId()!=null) {
				asientocontablecajachica.setid_modulo(moduloAux.getId());
				asientocontablecajachica.setmodulo_descripcion(AsientoContableCajaChicaConstantesFunciones.getModuloDescripcion(moduloAux));
				asientocontablecajachica.setModulo(moduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoMovimientoForeignKey(AsientoContableCajaChica asientocontablecajachica,JComboBox jComboBoxid_tipo_movimientoAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			TipoMovimiento  tipomovimientoAux=new TipoMovimiento();

			if(jComboBoxid_tipo_movimientoAsientoContableCajaChicaGenerico==null) {
				tipomovimientoAux=(TipoMovimiento)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimientoAsientoContableCajaChica.getSelectedItem();
			} else {
				tipomovimientoAux=(TipoMovimiento)jComboBoxid_tipo_movimientoAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(tipomovimientoAux!=null && tipomovimientoAux.getId()!=null) {
				asientocontablecajachica.setid_tipo_movimiento(tipomovimientoAux.getId());
				asientocontablecajachica.settipomovimiento_descripcion(AsientoContableCajaChicaConstantesFunciones.getTipoMovimientoDescripcion(tipomovimientoAux));
				asientocontablecajachica.setTipoMovimiento(tipomovimientoAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoTransaccionModuloForeignKey(AsientoContableCajaChica asientocontablecajachica,JComboBox jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			TipoTransaccionModulo  tipotransaccionmoduloAux=new TipoTransaccionModulo();

			if(jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChicaGenerico==null) {
				tipotransaccionmoduloAux=(TipoTransaccionModulo)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChica.getSelectedItem();
			} else {
				tipotransaccionmoduloAux=(TipoTransaccionModulo)jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(tipotransaccionmoduloAux!=null) {
				asientocontablecajachica.setid_tipo_transaccion_modulo(tipotransaccionmoduloAux.getId());
				asientocontablecajachica.settipotransaccionmodulo_descripcion(AsientoContableCajaChicaConstantesFunciones.getTipoTransaccionModuloDescripcion(tipotransaccionmoduloAux));
				asientocontablecajachica.setTipoTransaccionModulo(tipotransaccionmoduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	@SuppressWarnings("rawtypes")
	public void setActualParaGuardarTipoMovimientoModuloForeignKey(AsientoContableCajaChica asientocontablecajachica,JComboBox jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChicaGenerico)throws Exception
	{
		try
		{
			TipoMovimientoModulo  tipomovimientomoduloAux=new TipoMovimientoModulo();

			if(jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChicaGenerico==null) {
				tipomovimientomoduloAux=(TipoMovimientoModulo)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChica.getSelectedItem();
			} else {
				tipomovimientomoduloAux=(TipoMovimientoModulo)jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChicaGenerico.getSelectedItem();
			}

			if(tipomovimientomoduloAux!=null && tipomovimientomoduloAux.getId()!=null) {
				asientocontablecajachica.setid_tipo_movimiento_modulo(tipomovimientomoduloAux.getId());
				asientocontablecajachica.settipomovimientomodulo_descripcion(AsientoContableCajaChicaConstantesFunciones.getTipoMovimientoModuloDescripcion(tipomovimientomoduloAux));
				asientocontablecajachica.setTipoMovimientoModulo(tipomovimientomoduloAux);			}
		}
		catch(Exception e)
		{
			throw e;
		}
	}

	
	


		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpresasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpresa=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empresaAsientoContableCajaChica.removeAllItems();

							for(Empresa empresa:this.empresasForeignKey) {
								this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empresaAsientoContableCajaChica.addItem(empresa);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
					}

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameSucursalsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingSucursal=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_sucursalAsientoContableCajaChica.removeAllItems();

							for(Sucursal sucursal:this.sucursalsForeignKey) {
								this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_sucursalAsientoContableCajaChica.addItem(sucursal);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
					}

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEjerciciosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEjercicio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_ejercicioAsientoContableCajaChica.removeAllItems();

							for(Ejercicio ejercicio:this.ejerciciosForeignKey) {
								this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_ejercicioAsientoContableCajaChica.addItem(ejercicio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
					}

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFramePeriodosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingPeriodo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_periodoAsientoContableCajaChica.removeAllItems();

							for(Periodo periodo:this.periodosForeignKey) {
								this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_periodoAsientoContableCajaChica.addItem(periodo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
					}

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameUsuariosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingUsuario=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_usuarioAsientoContableCajaChica.removeAllItems();

							for(Usuario usuario:this.usuariosForeignKey) {
								this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_usuarioAsientoContableCajaChica.addItem(usuario);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
					}

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameAniosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingAnio=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_anioAsientoContableCajaChica.removeAllItems();

							for(Anio anio:this.aniosForeignKey) {
								this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_anioAsientoContableCajaChica.addItem(anio);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
					}

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMessForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMes=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_mesAsientoContableCajaChica.removeAllItems();

							for(Mes mes:this.messForeignKey) {
								this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_mesAsientoContableCajaChica.addItem(mes);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
					}

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameMonedasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingMoneda=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_monedaAsientoContableCajaChica.removeAllItems();

							for(Moneda moneda:this.monedasForeignKey) {
								this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_monedaAsientoContableCajaChica.addItem(moneda);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
					}

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEmpleadosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEmpleado=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empleadoAsientoContableCajaChica.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empleadoAsientoContableCajaChica.addItem(empleado);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
					}

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdEmpleado") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoAsientoContableCajaChica.removeAllItems();

							for(Empleado empleado:this.empleadosForeignKey) {
								this.jComboBoxid_empleadoFK_IdEmpleadoAsientoContableCajaChica.addItem(empleado);
							}
						}

						if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameEstadoAsientoContableCajaChicasForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingEstadoAsientoContableCajaChica=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_estado_asiento_contableAsientoContableCajaChica.removeAllItems();

							for(EstadoAsientoContableCajaChica estadoasientocontablecajachica:this.estadoasientocontablecajachicasForeignKey) {
								this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_estado_asiento_contableAsientoContableCajaChica.addItem(estadoasientocontablecajachica);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
					}

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameClientesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCliente=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_clienteAsientoContableCajaChica.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_clienteAsientoContableCajaChica.addItem(cliente);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
					}

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdCliente") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_clienteFK_IdClienteAsientoContableCajaChica.removeAllItems();

							for(Cliente cliente:this.clientesForeignKey) {
								this.jComboBoxid_clienteFK_IdClienteAsientoContableCajaChica.addItem(cliente);
							}
						}

						if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTransaccionsForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTransaccion=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_transaccionAsientoContableCajaChica.removeAllItems();

							for(Transaccion transaccion:this.transaccionsForeignKey) {
								this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_transaccionAsientoContableCajaChica.addItem(transaccion);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
					}

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTransaccion") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_transaccionFK_IdTransaccionAsientoContableCajaChica.removeAllItems();

							for(Transaccion transaccion:this.transaccionsForeignKey) {
								this.jComboBoxid_transaccionFK_IdTransaccionAsientoContableCajaChica.addItem(transaccion);
							}
						}

						if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoDocumentosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoDocumento=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_documentoAsientoContableCajaChica.removeAllItems();

							for(TipoDocumento tipodocumento:this.tipodocumentosForeignKey) {
								this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_documentoAsientoContableCajaChica.addItem(tipodocumento);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
					}

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoDocumento") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_documentoFK_IdTipoDocumentoAsientoContableCajaChica.removeAllItems();

							for(TipoDocumento tipodocumento:this.tipodocumentosForeignKey) {
								this.jComboBoxid_tipo_documentoFK_IdTipoDocumentoAsientoContableCajaChica.addItem(tipodocumento);
							}
						}

						if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameCuentaContablesForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingCuentaContable=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_cuenta_contableAsientoContableCajaChica.removeAllItems();

							for(CuentaContable cuentacontable:this.cuentacontablesForeignKey) {
								this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_cuenta_contableAsientoContableCajaChica.addItem(cuentacontable);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
					}

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_moduloAsientoContableCajaChica.removeAllItems();

							for(Modulo modulo:this.modulosForeignKey) {
								this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_moduloAsientoContableCajaChica.addItem(modulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
					}

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoMovimientosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoMovimiento=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimientoAsientoContableCajaChica.removeAllItems();

							for(TipoMovimiento tipomovimiento:this.tipomovimientosForeignKey) {
								this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimientoAsientoContableCajaChica.addItem(tipomovimiento);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
					}

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {


				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoTransaccionModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoTransaccionModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChica.removeAllItems();

							for(TipoTransaccionModulo tipotransaccionmodulo:this.tipotransaccionmodulosForeignKey) {
								this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChica.addItem(tipotransaccionmodulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
					}

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoTransaccionModulo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloAsientoContableCajaChica.removeAllItems();

							for(TipoTransaccionModulo tipotransaccionmodulo:this.tipotransaccionmodulosForeignKey) {
								this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloAsientoContableCajaChica.addItem(tipotransaccionmodulo);
							}
						}

						if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

		@SuppressWarnings({ "unchecked", "rawtypes" })
		public void cargarCombosFrameTipoMovimientoModulosForeignKey(String sFormularioTipoBusqueda)throws Exception {
			try {

				JComboBoxBinding jComboBoxBindingTipoMovimientoModulo=null;

				if(sFormularioTipoBusqueda.equals("Formulario") || sFormularioTipoBusqueda.equals("Todos")){

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChica.removeAllItems();

							for(TipoMovimientoModulo tipomovimientomodulo:this.tipomovimientomodulosForeignKey) {
								this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChica.addItem(tipomovimientomodulo);
							}
						}
					}

					if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { 
					}

					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
					}
				}


				if(!this.conCargarMinimo) {

					if(sFormularioTipoBusqueda.equals("FK_IdTipoMovimientoModulo") || sFormularioTipoBusqueda.equals("Todos")){

						//BYDAN_BUSQUEDAS
						
						if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						} else {
							this.jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloAsientoContableCajaChica.removeAllItems();

							for(TipoMovimientoModulo tipomovimientomodulo:this.tipomovimientomodulosForeignKey) {
								this.jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloAsientoContableCajaChica.addItem(tipomovimientomodulo);
							}
						}

						if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
						}

						
					}

				}

			}  catch(Exception e) {
				throw e;
			}
		}

	


		public void setSelectedItemCombosFrameEmpresaForeignKey(Empresa empresa,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empresaAsientoContableCajaChica.setSelectedItem(empresa);
						}
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empresaAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameSucursalForeignKey(Sucursal sucursal,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_sucursalAsientoContableCajaChica.setSelectedItem(sucursal);
						}
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_sucursalAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEjercicioForeignKey(Ejercicio ejercicio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_ejercicioAsientoContableCajaChica.setSelectedItem(ejercicio);
						}
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_ejercicioAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFramePeriodoForeignKey(Periodo periodo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_periodoAsientoContableCajaChica.setSelectedItem(periodo);
						}
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_periodoAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameUsuarioForeignKey(Usuario usuario,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_usuarioAsientoContableCajaChica.setSelectedItem(usuario);
						}
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_usuarioAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameAnioForeignKey(Anio anio,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_anioAsientoContableCajaChica.setSelectedItem(anio);
						}
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_anioAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMesForeignKey(Mes mes,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_mesAsientoContableCajaChica.setSelectedItem(mes);
						}
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_mesAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameMonedaForeignKey(Moneda moneda,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_monedaAsientoContableCajaChica.setSelectedItem(moneda);
						}
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_monedaAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEmpleadoForeignKey(Empleado empleado,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empleadoAsientoContableCajaChica.setSelectedItem(empleado);
						}
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empleadoAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_empleadoFK_IdEmpleadoAsientoContableCajaChica.setSelectedItem(empleado);
						} else {
							this.jComboBoxid_empleadoFK_IdEmpleadoAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameEstadoAsientoContableCajaChicaForeignKey(EstadoAsientoContableCajaChica estadoasientocontablecajachica,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_estado_asiento_contableAsientoContableCajaChica.setSelectedItem(estadoasientocontablecajachica);
						}
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_estado_asiento_contableAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameClienteForeignKey(Cliente cliente,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_clienteAsientoContableCajaChica.setSelectedItem(cliente);
						}
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_clienteAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_clienteFK_IdClienteAsientoContableCajaChica.setSelectedItem(cliente);
						} else {
							this.jComboBoxid_clienteFK_IdClienteAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTransaccionForeignKey(Transaccion transaccion,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_transaccionAsientoContableCajaChica.setSelectedItem(transaccion);
						}
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_transaccionAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_transaccionFK_IdTransaccionAsientoContableCajaChica.setSelectedItem(transaccion);
						} else {
							this.jComboBoxid_transaccionFK_IdTransaccionAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoDocumentoForeignKey(TipoDocumento tipodocumento,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_documentoAsientoContableCajaChica.setSelectedItem(tipodocumento);
						}
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_documentoAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_documentoFK_IdTipoDocumentoAsientoContableCajaChica.setSelectedItem(tipodocumento);
						} else {
							this.jComboBoxid_tipo_documentoFK_IdTipoDocumentoAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameCuentaContableForeignKey(CuentaContable cuentacontable,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_cuenta_contableAsientoContableCajaChica.setSelectedItem(cuentacontable);
						}
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_cuenta_contableAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameModuloForeignKey(Modulo modulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_moduloAsientoContableCajaChica.setSelectedItem(modulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_moduloAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoMovimientoForeignKey(TipoMovimiento tipomovimiento,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimientoAsientoContableCajaChica.setSelectedItem(tipomovimiento);
						}
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimientoAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoTransaccionModuloForeignKey(TipoTransaccionModulo tipotransaccionmodulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChica.setSelectedItem(tipotransaccionmodulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloAsientoContableCajaChica.setSelectedItem(tipotransaccionmodulo);
						} else {
							this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

		public void setSelectedItemCombosFrameTipoMovimientoModuloForeignKey(TipoMovimientoModulo tipomovimientomodulo,int iIndexSelected,Boolean conSelectedIndex,Boolean conFormulario,Boolean conBusqueda)throws Exception {
			try {

				if(conFormulario) {
					if(!conSelectedIndex) {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChica.setSelectedItem(tipomovimientomodulo);
						}
					} else {
						if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}
					}
				}


				if(!this.conCargarMinimo) {
					if(conBusqueda) {

					//BYDAN_BUSQUEDAS
					
						if(!conSelectedIndex) {
							this.jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloAsientoContableCajaChica.setSelectedItem(tipomovimientomodulo);
						} else {
							this.jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloAsientoContableCajaChica.setSelectedIndex(iIndexSelected);
						}

										}
				}
			} catch(Exception e) {
				throw e;
			}
		}

	


	
	public void refrescarForeignKeysDescripcionesAsientoContableCajaChica() throws Exception {
		//SI FUNCIONA DEEPLOAD ESTO VA AL ULTIMO
		if(Constantes.ISUSAEJBLOGICLAYER) {
			AsientoContableCajaChicaConstantesFunciones.refrescarForeignKeysDescripcionesAsientoContableCajaChica(this.asientocontablecajachicaLogic.getAsientoContableCajaChicas());
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			AsientoContableCajaChicaConstantesFunciones.refrescarForeignKeysDescripcionesAsientoContableCajaChica(this.asientocontablecajachicas);
		}
		
		/*
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		classes.add(new Classe(Empresa.class));
		classes.add(new Classe(Sucursal.class));
		classes.add(new Classe(Ejercicio.class));
		classes.add(new Classe(Periodo.class));
		classes.add(new Classe(Usuario.class));
		classes.add(new Classe(Anio.class));
		classes.add(new Classe(Mes.class));
		classes.add(new Classe(Moneda.class));
		classes.add(new Classe(Empleado.class));
		classes.add(new Classe(EstadoAsientoContableCajaChica.class));
		classes.add(new Classe(Cliente.class));
		classes.add(new Classe(Transaccion.class));
		classes.add(new Classe(TipoDocumento.class));
		classes.add(new Classe(CuentaContable.class));
		classes.add(new Classe(Modulo.class));
		classes.add(new Classe(TipoMovimiento.class));
		classes.add(new Classe(TipoTransaccionModulo.class));
		classes.add(new Classe(TipoMovimientoModulo.class));
			
		if(Constantes.ISUSAEJBLOGICLAYER) {
			//USA LOS OBJETOS DE LOGIC DIRECTAMENTE
			//asientocontablecajachicaLogic.setAsientoContableCajaChicas(this.asientocontablecajachicas);
			asientocontablecajachicaLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
	
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		*/				
	}	
	
	
	
	public Integer getiNumeroPaginacion() {
		return iNumeroPaginacion;
	}

	public void setiNumeroPaginacion(Integer iNumeroPaginacion) {
		this.iNumeroPaginacion= iNumeroPaginacion;
	}
	
	public Integer getiNumeroPaginacionPagina() {
		return iNumeroPaginacionPagina;
	}

	public void setiNumeroPaginacionPagina(Integer iNumeroPaginacionPagina) {
		this.iNumeroPaginacionPagina= iNumeroPaginacionPagina;
	}
	
	
	public Boolean getIsSeleccionarTodos() {
		return this.isSeleccionarTodos;
	}

	public void setIsSeleccionarTodos(Boolean isSeleccionarTodos) {
		this.isSeleccionarTodos= isSeleccionarTodos;
	}
	
	public Boolean getEsControlTabla() {
		return this.esControlTabla;
	}

	public void setEsControlTabla(Boolean esControlTabla) {
		this.esControlTabla= esControlTabla;
	}
	
	public Boolean getIsSeleccionados() {
		return this.isSeleccionados;
	}

	public void setIsSeleccionados(Boolean isSeleccionados) {
		this.isSeleccionados= isSeleccionados;
	}
	
	public Boolean getIsPostAccionNuevo() {
		return this.isPostAccionNuevo;
	}

	public void setIsPostAccionNuevo(Boolean isPostAccionNuevo) {
		this.isPostAccionNuevo= isPostAccionNuevo;
	}
	
	public Boolean getIsPostAccionSinCerrar() {
		return this.isPostAccionSinCerrar;
	}

	public void setIsPostAccionSinCerrar(Boolean isPostAccionSinCerrar) {
		this.isPostAccionSinCerrar= isPostAccionSinCerrar;
	}
	
	public Boolean getIsPostAccionSinMensaje() {
		return this.isPostAccionSinMensaje;
	}

	public void setIsPostAccionSinMensaje(Boolean isPostAccionSinMensaje) {
		this.isPostAccionSinMensaje= isPostAccionSinMensaje;
	}
	
	public Boolean getConGraficoReporte() {
		return this.conGraficoReporte;
	}

	public void setConGraficoReporte(Boolean conGraficoReporte) {
		this.conGraficoReporte= conGraficoReporte;
	}
	
	
	public ArrayList<Reporte> gettiposArchivosReportes() {
		return this.tiposArchivosReportes;
	}
	
	public void settiposArchivosReportes(ArrayList<Reporte> tiposArchivosReportes) {
		this.tiposArchivosReportes = tiposArchivosReportes;
	}
	
	//TIPOS ARCHIVOS DINAMICOS
	public ArrayList<Reporte> gettiposArchivosReportesDinamico() {
		return this.tiposArchivosReportesDinamico;
	}
	
	public void settiposArchivosReportesDinamico(ArrayList<Reporte> tiposArchivosReportesDinamico) {
		this.tiposArchivosReportesDinamico = tiposArchivosReportesDinamico;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportes() {
		return this.tiposReportes;
	}
	
	public void settiposReportes(ArrayList<Reporte> tiposReportes) {
		this.tiposReportes = tiposReportes;
	}
	
	//TIPOS REPORTES
	public ArrayList<Reporte> gettiposReportesDinamico() {
		return this.tiposReportesDinamico;
	}
	
	public void settiposReportesDinamico(ArrayList<Reporte> tiposReportesDinamico) {
		this.tiposReportesDinamico = tiposReportesDinamico;
	}
	
	//TIPOS GRAFICOS REPORTES
	public ArrayList<Reporte> gettiposGraficosReportes() {
		return this.tiposGraficosReportes;
	}
	
	public void settiposGraficosReportes(ArrayList<Reporte> tiposGraficosReportes) {
		this.tiposGraficosReportes = tiposGraficosReportes;
	}
	
	public ArrayList<Reporte> gettiposPaginacion() {
		return this.tiposPaginacion;
	}
	
	public void settiposPaginacion(ArrayList<Reporte> tiposPaginacion) {
		this.tiposPaginacion = tiposPaginacion;
	}
	
	public ArrayList<Reporte> gettiposRelaciones() {
		return this.tiposRelaciones;
	}
	
	public void settiposRelaciones(ArrayList<Reporte> tiposRelaciones) {
		this.tiposRelaciones= tiposRelaciones;
	}
	
	public ArrayList<Reporte> gettiposAcciones() {
		return this.tiposAcciones;
	}
	
	public void settiposAcciones(ArrayList<Reporte> tiposAcciones) {
		this.tiposAcciones = tiposAcciones;
	}
	
	public ArrayList<Reporte> gettiposAccionesFormulario() {
		return this.tiposAccionesFormulario;
	}
	
	public void settiposAccionesFormulario(ArrayList<Reporte> tiposAccionesFormulario) {
		this.tiposAccionesFormulario = tiposAccionesFormulario;
	}
	
	public ArrayList<Reporte> gettiposSeleccionar() {
		return this.tiposSeleccionar;
	}
	
	public void settiposSeleccionar(ArrayList<Reporte> tiposSeleccionar) {
		this.tiposSeleccionar = tiposSeleccionar;
	}
	
	public ArrayList<Reporte> gettiposColumnasSelect() {
		return this.tiposColumnasSelect;
	}
	
	public void settiposColumnasSelect(ArrayList<Reporte> tiposColumnasSelect) {
		this.tiposColumnasSelect = tiposColumnasSelect;
	}
		
	public ArrayList<Reporte> gettiposRelacionesSelect() {
		return this.tiposRelacionesSelect;
	}
	
	public void settiposRelacionesSelect(ArrayList<Reporte> tiposRelacionesSelect) {
		this.tiposRelacionesSelect = tiposRelacionesSelect;
	}
	
	public Long getIIdUsuarioSesion() {
		return lIdUsuarioSesion;
	}

	public void setIIdUsuarioSesion(Long lIdUsuarioSesion) {
		this.lIdUsuarioSesion = lIdUsuarioSesion;
	}
	
	
	public List<Accion> getAccions() {
		return this.accions;
	}

	public void setAccions(List<Accion> accions) {
		this.accions = accions;
	}
	
	public List<Accion> getAccionsFormulario() {
		return this.accionsFormulario;
	}

	public void setAccionsFormulario(List<Accion> accionsFormulario) {
		this.accionsFormulario = accionsFormulario;
	}
	
	public String getsAccionMantenimiento() {
		return sAccionMantenimiento;
	}

	public void setsAccionMantenimiento(String sAccionMantenimiento) {
		this.sAccionMantenimiento = sAccionMantenimiento;
	}

	public String getsAccionBusqueda() {
		return sAccionBusqueda;
	}

	public void setsAccionBusqueda(String sAccionBusqueda) {
		this.sAccionBusqueda = sAccionBusqueda;
	}

	public String getsAccionAdicional() {
		return sAccionAdicional;
	}

	public void setsAccionAdicional(String sAccionAdicional) {
		this.sAccionAdicional = sAccionAdicional;
	}

	public String getsUltimaBusqueda() {
		return sUltimaBusqueda;
	}

	public void setsUltimaBusqueda(String sUltimaBusqueda) {
		this.sUltimaBusqueda = sUltimaBusqueda;
	}
	
	public String getsTipoArchivoReporte() {
		return sTipoArchivoReporte;
	}

	public void setsTipoArchivoReporte(String sTipoArchivoReporte) {
		this.sTipoArchivoReporte = sTipoArchivoReporte;
	}
	
	public String getsTipoArchivoReporteDinamico() {
		return sTipoArchivoReporteDinamico;
	}

	public void setsTipoArchivoReporteDinamico(String sTipoArchivoReporteDinamico) {
		this.sTipoArchivoReporteDinamico = sTipoArchivoReporteDinamico;
	}
	
	public String getsTipoReporte() {
		return sTipoReporte;
	}

	public void setsTipoReporte(String sTipoReporte) {
		this.sTipoReporte = sTipoReporte;
	}
	
	public String getsTipoReporteDinamico() {
		return sTipoReporteDinamico;
	}

	public void setsTipoReporteDinamico(String sTipoReporteDinamico) {
		this.sTipoReporteDinamico = sTipoReporteDinamico;
	}
	
	public String getsTipoGraficoReporte() {
		return sTipoGraficoReporte;
	}

	public void setsTipoGraficoReporte(String sTipoGraficoReporte) {
		this.sTipoGraficoReporte = sTipoGraficoReporte;
	}
	
	public String getsTipoPaginacion() {
		return sTipoPaginacion;
	}

	public void setsTipoPaginacion(String sTipoPaginacion) {
		this.sTipoPaginacion = sTipoPaginacion;
	}
	
	public String getsTipoRelacion() {
		return sTipoRelacion;
	}

	public void setsTipoRelacion(String sTipoRelacion) {
		this.sTipoRelacion = sTipoRelacion;
	}
	
	public String getsTipoAccion() {
		return sTipoAccion;
	}

	public void setsTipoAccion(String sTipoAccion) {
		this.sTipoAccion = sTipoAccion;
	}
	
	public String getsTipoAccionFormulario() {
		return sTipoAccionFormulario;
	}

	public void setsTipoAccionFormulario(String sTipoAccionFormulario) {
		this.sTipoAccionFormulario = sTipoAccionFormulario;
	}
	
	public String getsTipoSeleccionar() {
		return sTipoSeleccionar;
	}

	public void setsTipoSeleccionar(String sTipoSeleccionar) {
		this.sTipoSeleccionar = sTipoSeleccionar;
	}
	
	public String getsValorCampoGeneral() {
		return sValorCampoGeneral;
	}

	public void setsValorCampoGeneral(String sValorCampoGeneral) {
		this.sValorCampoGeneral = sValorCampoGeneral;
	}			

	public String getsDetalleReporte() {
		return sDetalleReporte;
	}

	public void setsDetalleReporte(String sDetalleReporte) {
		this.sDetalleReporte = sDetalleReporte;
	}
	
	
	public String getsTipoReporteExtra() {
		return sTipoReporteExtra;
	}

	public void setsTipoReporteExtra(String sTipoReporteExtra) {
		this.sTipoReporteExtra = sTipoReporteExtra;
	}
	
	public Boolean getesReporteDinamico() {
		return esReporteDinamico;
	}	
	
	public void setesReporteDinamico(Boolean esReporteDinamico) {
		this.esReporteDinamico = esReporteDinamico;
	}
	
	public Boolean getesRecargarFks() {
		return esRecargarFks;
	}	
	
	public void setesRecargarFks(Boolean esRecargarFks) {
		this.esRecargarFks = esRecargarFks;
	}
	
	public Boolean getesReporteAccionProceso() {
		return esReporteAccionProceso;
	}	
	
	public void setesReporteAccionProceso(Boolean esReporteAccionProceso) {
		this.esReporteAccionProceso= esReporteAccionProceso;
	}
		
	public AsientoContableCajaChicaParameterReturnGeneral getAsientoContableCajaChicaParameterGeneral() {
		return this.asientocontablecajachicaParameterGeneral;
	}
	
	public void setAsientoContableCajaChicaParameterGeneral(AsientoContableCajaChicaParameterReturnGeneral asientocontablecajachicaParameterGeneral) {
		this.asientocontablecajachicaParameterGeneral = asientocontablecajachicaParameterGeneral;
	}
	
	public String getsPathReporteDinamico() {
		return sPathReporteDinamico;
	}

	public void setsPathReporteDinamico(String sPathReporteDinamico) {
		this.sPathReporteDinamico = sPathReporteDinamico;
	}
		
	public Boolean getisMostrarNumeroPaginacion() {
		return isMostrarNumeroPaginacion;
	}

	public void setisMostrarNumeroPaginacion(Boolean isMostrarNumeroPaginacion) {
		this.isMostrarNumeroPaginacion = isMostrarNumeroPaginacion;
	}
	
	public Mensaje getMensaje() {
		return mensaje;
	}

	public void setMensaje(Mensaje mensaje) {
		this.mensaje = mensaje;
	}
	
	public Boolean getIsPermisoTodoAsientoContableCajaChica() {
		return isPermisoTodoAsientoContableCajaChica;
	}

	public void setIsPermisoTodoAsientoContableCajaChica(Boolean isPermisoTodoAsientoContableCajaChica) {
		this.isPermisoTodoAsientoContableCajaChica = isPermisoTodoAsientoContableCajaChica;
	}

	public Boolean getIsPermisoNuevoAsientoContableCajaChica() {
		return isPermisoNuevoAsientoContableCajaChica;
	}

	public void setIsPermisoNuevoAsientoContableCajaChica(Boolean isPermisoNuevoAsientoContableCajaChica) {
		this.isPermisoNuevoAsientoContableCajaChica = isPermisoNuevoAsientoContableCajaChica;
	}

	public Boolean getIsPermisoActualizarAsientoContableCajaChica() {
		return isPermisoActualizarAsientoContableCajaChica;
	}

	public void setIsPermisoActualizarAsientoContableCajaChica(Boolean isPermisoActualizarAsientoContableCajaChica) {
		this.isPermisoActualizarAsientoContableCajaChica = isPermisoActualizarAsientoContableCajaChica;
	}

	public Boolean getIsPermisoEliminarAsientoContableCajaChica() {
		return isPermisoEliminarAsientoContableCajaChica;
	}

	public void setIsPermisoEliminarAsientoContableCajaChica(Boolean isPermisoEliminarAsientoContableCajaChica) {
		this.isPermisoEliminarAsientoContableCajaChica = isPermisoEliminarAsientoContableCajaChica;
	}

	public Boolean getIsPermisoGuardarCambiosAsientoContableCajaChica() {
		return isPermisoGuardarCambiosAsientoContableCajaChica;
	}

	public void setIsPermisoGuardarCambiosAsientoContableCajaChica(Boolean isPermisoGuardarCambiosAsientoContableCajaChica) {
		this.isPermisoGuardarCambiosAsientoContableCajaChica = isPermisoGuardarCambiosAsientoContableCajaChica;
	}
	
	public Boolean getIsPermisoConsultaAsientoContableCajaChica() {
		return isPermisoConsultaAsientoContableCajaChica;
	}

	public void setIsPermisoConsultaAsientoContableCajaChica(Boolean isPermisoConsultaAsientoContableCajaChica) {
		this.isPermisoConsultaAsientoContableCajaChica = isPermisoConsultaAsientoContableCajaChica;
	}

	public Boolean getIsPermisoBusquedaAsientoContableCajaChica() {
		return isPermisoBusquedaAsientoContableCajaChica;
	}

	public void setIsPermisoBusquedaAsientoContableCajaChica(Boolean isPermisoBusquedaAsientoContableCajaChica) {
		this.isPermisoBusquedaAsientoContableCajaChica = isPermisoBusquedaAsientoContableCajaChica;
	}

	public Boolean getIsPermisoReporteAsientoContableCajaChica() {
		return isPermisoReporteAsientoContableCajaChica;
	}

	public void setIsPermisoReporteAsientoContableCajaChica(Boolean isPermisoReporteAsientoContableCajaChica) {
		this.isPermisoReporteAsientoContableCajaChica = isPermisoReporteAsientoContableCajaChica;
	}
	
	public Boolean getIsPermisoPaginacionMedioAsientoContableCajaChica() {
		return isPermisoPaginacionMedioAsientoContableCajaChica;
	}

	public void setIsPermisoPaginacionMedioAsientoContableCajaChica(Boolean isPermisoPaginacionMedioAsientoContableCajaChica) {
		this.isPermisoPaginacionMedioAsientoContableCajaChica = isPermisoPaginacionMedioAsientoContableCajaChica;
	}
	
	public Boolean getIsPermisoPaginacionTodoAsientoContableCajaChica() {
		return isPermisoPaginacionTodoAsientoContableCajaChica;
	}

	public void setIsPermisoPaginacionTodoAsientoContableCajaChica(Boolean isPermisoPaginacionTodoAsientoContableCajaChica) {
		this.isPermisoPaginacionTodoAsientoContableCajaChica = isPermisoPaginacionTodoAsientoContableCajaChica;
	}
	
	public Boolean getIsPermisoPaginacionAltoAsientoContableCajaChica() {
		return isPermisoPaginacionAltoAsientoContableCajaChica;
	}

	public void setIsPermisoPaginacionAltoAsientoContableCajaChica(Boolean isPermisoPaginacionAltoAsientoContableCajaChica) {
		this.isPermisoPaginacionAltoAsientoContableCajaChica = isPermisoPaginacionAltoAsientoContableCajaChica;
	}
	
	public Boolean getIsPermisoCopiarAsientoContableCajaChica() {
		return isPermisoCopiarAsientoContableCajaChica;
	}

	public void setIsPermisoCopiarAsientoContableCajaChica(Boolean isPermisoCopiarAsientoContableCajaChica) {
		this.isPermisoCopiarAsientoContableCajaChica = isPermisoCopiarAsientoContableCajaChica;
	}
	
	public Boolean getIsPermisoVerFormAsientoContableCajaChica() {
		return isPermisoVerFormAsientoContableCajaChica;
	}

	public void setIsPermisoVerFormAsientoContableCajaChica(Boolean isPermisoVerFormAsientoContableCajaChica) {
		this.isPermisoVerFormAsientoContableCajaChica = isPermisoVerFormAsientoContableCajaChica;
	}
	
	public Boolean getIsPermisoDuplicarAsientoContableCajaChica() {
		return isPermisoDuplicarAsientoContableCajaChica;
	}

	public void setIsPermisoDuplicarAsientoContableCajaChica(Boolean isPermisoDuplicarAsientoContableCajaChica) {
		this.isPermisoDuplicarAsientoContableCajaChica = isPermisoDuplicarAsientoContableCajaChica;
	}
	
	public Boolean getIsPermisoOrdenAsientoContableCajaChica() {
		return isPermisoOrdenAsientoContableCajaChica;
	}

	public void setIsPermisoOrdenAsientoContableCajaChica(Boolean isPermisoOrdenAsientoContableCajaChica) {
		this.isPermisoOrdenAsientoContableCajaChica = isPermisoOrdenAsientoContableCajaChica;
	}
	
	public String getsVisibilidadTablaBusquedas() {
		return sVisibilidadTablaBusquedas;
	}

	public void setsVisibilidadTablaBusquedas(String sVisibilidadTablaBusquedas) {
		this.sVisibilidadTablaBusquedas = sVisibilidadTablaBusquedas;
	}
	
	public String getsVisibilidadTablaElementos() {
		return sVisibilidadTablaElementos;
	}

	public void setsVisibilidadTablaElementos(String sVisibilidadTablaElementos) {
		this.sVisibilidadTablaElementos = sVisibilidadTablaElementos;
	}

	public String getsVisibilidadTablaAcciones() {
		return sVisibilidadTablaAcciones;
	}

	public void setsVisibilidadTablaAcciones(String sVisibilidadTablaAcciones) {
		this.sVisibilidadTablaAcciones = sVisibilidadTablaAcciones;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoAsientoContableCajaChica() {
		return isVisibilidadCeldaNuevoAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaNuevoAsientoContableCajaChica(Boolean isVisibilidadCeldaNuevoAsientoContableCajaChica) {
		this.isVisibilidadCeldaNuevoAsientoContableCajaChica = isVisibilidadCeldaNuevoAsientoContableCajaChica;
	}
	
	public Boolean getIsVisibilidadCeldaDuplicarAsientoContableCajaChica() {
		return isVisibilidadCeldaDuplicarAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaDuplicarAsientoContableCajaChica(Boolean isVisibilidadCeldaDuplicarAsientoContableCajaChica) {
		this.isVisibilidadCeldaDuplicarAsientoContableCajaChica = isVisibilidadCeldaDuplicarAsientoContableCajaChica;
	}
	
	public Boolean getIsVisibilidadCeldaCopiarAsientoContableCajaChica() {
		return isVisibilidadCeldaCopiarAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaCopiarAsientoContableCajaChica(Boolean isVisibilidadCeldaCopiarAsientoContableCajaChica) {
		this.isVisibilidadCeldaCopiarAsientoContableCajaChica = isVisibilidadCeldaCopiarAsientoContableCajaChica;
	}
	
	public Boolean getIsVisibilidadCeldaVerFormAsientoContableCajaChica() {
		return isVisibilidadCeldaVerFormAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaVerFormAsientoContableCajaChica(Boolean isVisibilidadCeldaVerFormAsientoContableCajaChica) {
		this.isVisibilidadCeldaVerFormAsientoContableCajaChica = isVisibilidadCeldaVerFormAsientoContableCajaChica;
	}
	
	public Boolean getIsVisibilidadCeldaOrdenAsientoContableCajaChica() {
		return isVisibilidadCeldaOrdenAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaOrdenAsientoContableCajaChica(Boolean isVisibilidadCeldaOrdenAsientoContableCajaChica) {
		this.isVisibilidadCeldaOrdenAsientoContableCajaChica = isVisibilidadCeldaOrdenAsientoContableCajaChica;
	}
	
	public Boolean getIsVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica() {
		return isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica(Boolean isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica) {
		this.isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica = isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica;
	}
	
	public Boolean getIsVisibilidadCeldaModificarAsientoContableCajaChica() {
		return isVisibilidadCeldaModificarAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaModificarAsientoContableCajaChica(Boolean isVisibilidadCeldaModificarAsientoContableCajaChica) {
		this.isVisibilidadCeldaModificarAsientoContableCajaChica = isVisibilidadCeldaModificarAsientoContableCajaChica;
	}
	
	public Boolean getIsVisibilidadCeldaActualizarAsientoContableCajaChica() {
		return isVisibilidadCeldaActualizarAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaActualizarAsientoContableCajaChica(Boolean isVisibilidadCeldaActualizarAsientoContableCajaChica) {
		this.isVisibilidadCeldaActualizarAsientoContableCajaChica = isVisibilidadCeldaActualizarAsientoContableCajaChica;
	}

	public Boolean getIsVisibilidadCeldaEliminarAsientoContableCajaChica() {
		return isVisibilidadCeldaEliminarAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaEliminarAsientoContableCajaChica(Boolean isVisibilidadCeldaEliminarAsientoContableCajaChica) {
		this.isVisibilidadCeldaEliminarAsientoContableCajaChica = isVisibilidadCeldaEliminarAsientoContableCajaChica;
	}

	public Boolean getIsVisibilidadCeldaCancelarAsientoContableCajaChica() {
		return isVisibilidadCeldaCancelarAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaCancelarAsientoContableCajaChica(Boolean isVisibilidadCeldaCancelarAsientoContableCajaChica) {
		this.isVisibilidadCeldaCancelarAsientoContableCajaChica = isVisibilidadCeldaCancelarAsientoContableCajaChica;
	}

	public Boolean getIsVisibilidadCeldaGuardarAsientoContableCajaChica() {
		return isVisibilidadCeldaGuardarAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaGuardarAsientoContableCajaChica(Boolean isVisibilidadCeldaGuardarAsientoContableCajaChica) {
		this.isVisibilidadCeldaGuardarAsientoContableCajaChica = isVisibilidadCeldaGuardarAsientoContableCajaChica;
	}
	
	public Boolean getIsVisibilidadCeldaGuardarCambiosAsientoContableCajaChica() {
		return isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica;
	}

	public void setIsVisibilidadCeldaGuardarCambiosAsientoContableCajaChica(Boolean isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica) {
		this.isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica = isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica;
	}
		
	public AsientoContableCajaChicaSessionBean getasientocontablecajachicaSessionBean() {
		return this.asientocontablecajachicaSessionBean;
	}
	
	public void setasientocontablecajachicaSessionBean(AsientoContableCajaChicaSessionBean asientocontablecajachicaSessionBean) {
		this.asientocontablecajachicaSessionBean=asientocontablecajachicaSessionBean;
	}
	
	
	public Boolean getisVisibilidadFK_IdAnio() {
		return this.isVisibilidadFK_IdAnio;
	}

	public void setisVisibilidadFK_IdAnio(Boolean isVisibilidadFK_IdAnio) {
		this.isVisibilidadFK_IdAnio=isVisibilidadFK_IdAnio;
	}

	public Boolean getisVisibilidadFK_IdCliente() {
		return this.isVisibilidadFK_IdCliente;
	}

	public void setisVisibilidadFK_IdCliente(Boolean isVisibilidadFK_IdCliente) {
		this.isVisibilidadFK_IdCliente=isVisibilidadFK_IdCliente;
	}

	public Boolean getisVisibilidadFK_IdCuentaContable() {
		return this.isVisibilidadFK_IdCuentaContable;
	}

	public void setisVisibilidadFK_IdCuentaContable(Boolean isVisibilidadFK_IdCuentaContable) {
		this.isVisibilidadFK_IdCuentaContable=isVisibilidadFK_IdCuentaContable;
	}

	public Boolean getisVisibilidadFK_IdEjercicio() {
		return this.isVisibilidadFK_IdEjercicio;
	}

	public void setisVisibilidadFK_IdEjercicio(Boolean isVisibilidadFK_IdEjercicio) {
		this.isVisibilidadFK_IdEjercicio=isVisibilidadFK_IdEjercicio;
	}

	public Boolean getisVisibilidadFK_IdEmpleado() {
		return this.isVisibilidadFK_IdEmpleado;
	}

	public void setisVisibilidadFK_IdEmpleado(Boolean isVisibilidadFK_IdEmpleado) {
		this.isVisibilidadFK_IdEmpleado=isVisibilidadFK_IdEmpleado;
	}

	public Boolean getisVisibilidadFK_IdEmpresa() {
		return this.isVisibilidadFK_IdEmpresa;
	}

	public void setisVisibilidadFK_IdEmpresa(Boolean isVisibilidadFK_IdEmpresa) {
		this.isVisibilidadFK_IdEmpresa=isVisibilidadFK_IdEmpresa;
	}

	public Boolean getisVisibilidadFK_IdEstadoAsientoContableCajaChica() {
		return this.isVisibilidadFK_IdEstadoAsientoContableCajaChica;
	}

	public void setisVisibilidadFK_IdEstadoAsientoContableCajaChica(Boolean isVisibilidadFK_IdEstadoAsientoContableCajaChica) {
		this.isVisibilidadFK_IdEstadoAsientoContableCajaChica=isVisibilidadFK_IdEstadoAsientoContableCajaChica;
	}

	public Boolean getisVisibilidadFK_IdMes() {
		return this.isVisibilidadFK_IdMes;
	}

	public void setisVisibilidadFK_IdMes(Boolean isVisibilidadFK_IdMes) {
		this.isVisibilidadFK_IdMes=isVisibilidadFK_IdMes;
	}

	public Boolean getisVisibilidadFK_IdModulo() {
		return this.isVisibilidadFK_IdModulo;
	}

	public void setisVisibilidadFK_IdModulo(Boolean isVisibilidadFK_IdModulo) {
		this.isVisibilidadFK_IdModulo=isVisibilidadFK_IdModulo;
	}

	public Boolean getisVisibilidadFK_IdMoneda() {
		return this.isVisibilidadFK_IdMoneda;
	}

	public void setisVisibilidadFK_IdMoneda(Boolean isVisibilidadFK_IdMoneda) {
		this.isVisibilidadFK_IdMoneda=isVisibilidadFK_IdMoneda;
	}

	public Boolean getisVisibilidadFK_IdPeriodo() {
		return this.isVisibilidadFK_IdPeriodo;
	}

	public void setisVisibilidadFK_IdPeriodo(Boolean isVisibilidadFK_IdPeriodo) {
		this.isVisibilidadFK_IdPeriodo=isVisibilidadFK_IdPeriodo;
	}

	public Boolean getisVisibilidadFK_IdSucursal() {
		return this.isVisibilidadFK_IdSucursal;
	}

	public void setisVisibilidadFK_IdSucursal(Boolean isVisibilidadFK_IdSucursal) {
		this.isVisibilidadFK_IdSucursal=isVisibilidadFK_IdSucursal;
	}

	public Boolean getisVisibilidadFK_IdTipoDocumento() {
		return this.isVisibilidadFK_IdTipoDocumento;
	}

	public void setisVisibilidadFK_IdTipoDocumento(Boolean isVisibilidadFK_IdTipoDocumento) {
		this.isVisibilidadFK_IdTipoDocumento=isVisibilidadFK_IdTipoDocumento;
	}

	public Boolean getisVisibilidadFK_IdTipoMovimiento() {
		return this.isVisibilidadFK_IdTipoMovimiento;
	}

	public void setisVisibilidadFK_IdTipoMovimiento(Boolean isVisibilidadFK_IdTipoMovimiento) {
		this.isVisibilidadFK_IdTipoMovimiento=isVisibilidadFK_IdTipoMovimiento;
	}

	public Boolean getisVisibilidadFK_IdTipoMovimientoModulo() {
		return this.isVisibilidadFK_IdTipoMovimientoModulo;
	}

	public void setisVisibilidadFK_IdTipoMovimientoModulo(Boolean isVisibilidadFK_IdTipoMovimientoModulo) {
		this.isVisibilidadFK_IdTipoMovimientoModulo=isVisibilidadFK_IdTipoMovimientoModulo;
	}

	public Boolean getisVisibilidadFK_IdTipoTransaccionModulo() {
		return this.isVisibilidadFK_IdTipoTransaccionModulo;
	}

	public void setisVisibilidadFK_IdTipoTransaccionModulo(Boolean isVisibilidadFK_IdTipoTransaccionModulo) {
		this.isVisibilidadFK_IdTipoTransaccionModulo=isVisibilidadFK_IdTipoTransaccionModulo;
	}

	public Boolean getisVisibilidadFK_IdTransaccion() {
		return this.isVisibilidadFK_IdTransaccion;
	}

	public void setisVisibilidadFK_IdTransaccion(Boolean isVisibilidadFK_IdTransaccion) {
		this.isVisibilidadFK_IdTransaccion=isVisibilidadFK_IdTransaccion;
	}

	public Boolean getisVisibilidadFK_IdUsuario() {
		return this.isVisibilidadFK_IdUsuario;
	}

	public void setisVisibilidadFK_IdUsuario(Boolean isVisibilidadFK_IdUsuario) {
		this.isVisibilidadFK_IdUsuario=isVisibilidadFK_IdUsuario;
	}

	
	
	public void setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(AsientoContableCajaChica asientocontablecajachica)throws Exception {
		try {
			
				this.setActualParaGuardarEmpresaForeignKey(asientocontablecajachica,null);
				this.setActualParaGuardarSucursalForeignKey(asientocontablecajachica,null);
				this.setActualParaGuardarEjercicioForeignKey(asientocontablecajachica,null);
				this.setActualParaGuardarPeriodoForeignKey(asientocontablecajachica,null);
				this.setActualParaGuardarUsuarioForeignKey(asientocontablecajachica,null);
				this.setActualParaGuardarAnioForeignKey(asientocontablecajachica,null);
				this.setActualParaGuardarMesForeignKey(asientocontablecajachica,null);
				this.setActualParaGuardarMonedaForeignKey(asientocontablecajachica,null);
				this.setActualParaGuardarEmpleadoForeignKey(asientocontablecajachica,null);
				this.setActualParaGuardarEstadoAsientoContableCajaChicaForeignKey(asientocontablecajachica,null);
				this.setActualParaGuardarClienteForeignKey(asientocontablecajachica,null);
				this.setActualParaGuardarTransaccionForeignKey(asientocontablecajachica,null);
				this.setActualParaGuardarTipoDocumentoForeignKey(asientocontablecajachica,null);
				this.setActualParaGuardarCuentaContableForeignKey(asientocontablecajachica,null);
				this.setActualParaGuardarModuloForeignKey(asientocontablecajachica,null);
				this.setActualParaGuardarTipoMovimientoForeignKey(asientocontablecajachica,null);
				this.setActualParaGuardarTipoTransaccionModuloForeignKey(asientocontablecajachica,null);
				this.setActualParaGuardarTipoMovimientoModuloForeignKey(asientocontablecajachica,null);
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarLicenciaCliente(DatosCliente datosCliente) throws Exception {
		Boolean existe=false;
			
		try {
				InputStream reportFile=null;
				
				String sPath=this.parametroGeneralUsuario.getpath_exportar()+"erp_bydan/license/license.xml";
				
				reportFile = new FileInputStream(sPath);
				
				Document documentBuilder=null;
				
				if(this.constantes2.DOCUMENT_BUILDER==null) {
					documentBuilder=Funciones2.parseXml(reportFile);
				} else {
					documentBuilder=this.constantes2.DOCUMENT_BUILDER;
				}
				
				//GlobalSeguridad.readXml(documentBuilder);
				
				String sNamePCServerLicencia="";
				String sClaveSistemaLicencia="";
				Date dFechaServerLicencia=null;
				
				//CARGAR ELEMENTOS DE LICENCIA
				NodeList nodeList = documentBuilder.getElementsByTagName("Licencia");
				
				for (int iIndice = 0; iIndice < nodeList.getLength(); iIndice++) {
					Node node = nodeList.item(iIndice);
				
					if (node.getNodeType() == Node.ELEMENT_NODE) {
						Element element = (Element) node;
						 
						sNamePCServerLicencia=element.getElementsByTagName("NombrePc").item(0).getTextContent();
						sClaveSistemaLicencia=element.getElementsByTagName("ClaveSistema").item(0).getTextContent();
						
						existe=true;
						break;
					}
				}														
			
				
			if(existe) {
				datosCliente.setsClaveSistema(sClaveSistemaLicencia);
				
				if(!datosCliente.getsNamePCServer().equals(sNamePCServerLicencia)
					&& !datosCliente.getsNamePCServer().equals("")) {
					
					datosCliente.setsNamePCServer(sNamePCServerLicencia);
				}
			} else {
				throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
			}
		} catch(Exception e) {
			throw new Exception("NO EXISTE LICENCIA O NO ESTA BIEN FORMADO");
		}						
	}
	
	public void cargarDatosCliente() throws Exception {
		String sPrimerMacAddress="";		
		String sHostName="";		 
		String sHostIp="";		  
		String sHostUser="";
		
		
		sPrimerMacAddress=FuncionesNetwork.getPrimerMacAddress();		
		sHostName=FuncionesNetwork.getHostName();		 
		sHostIp=FuncionesNetwork.getHostIp();		  
		sHostUser=FuncionesNetwork.getHostUser();
		
		
		this.datosCliente=new DatosCliente();
		if(lIdUsuarioSesion!=null){datosCliente.setIdUsuario(this.lIdUsuarioSesion);}
		
		//SERVIDOR WEB Y TALVEZ SERVIDOR SWING WINDOWS
		this.datosCliente.setsUsuarioPCServer(sHostUser);
		this.datosCliente.setsNamePCServer(sHostName);
		this.datosCliente.setsIPPCServer(sHostIp);
		this.datosCliente.setsMacAddressPCServer(sPrimerMacAddress);
			
			//CLIENTE SWING WINDOWS
			this.datosCliente.setIsClienteWeb(false);
			
			this.datosCliente.setsUsuarioPC(sHostUser);
			this.datosCliente.setsNamePC(sHostName);
			this.datosCliente.setsIPPC(sHostIp);
			this.datosCliente.setsMacAddressPC(sPrimerMacAddress);	
			
			
			//this.cargarLicenciaCliente(this.datosCliente);
			
	}
	
	public void bugActualizarReferenciaActual(AsientoContableCajaChica asientocontablecajachica,AsientoContableCajaChica asientocontablecajachicaAux) throws Exception {
		//ARCHITECTURE		
		//EL ID NEGATIVO GUARDADO EN ORIGINAL SIRVE PARA VERIFICAR Y ACTUALIZAR EL REGISTRO NUEVO (ID,VERSIONROW)
		this.setCamposBaseDesdeOriginalAsientoContableCajaChica(asientocontablecajachica);
					
		//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
		asientocontablecajachicaAux.setId(asientocontablecajachica.getId());
		asientocontablecajachicaAux.setVersionRow(asientocontablecajachica.getVersionRow());					
	}
	
	public void ejecutarMantenimiento(MaintenanceType maintenanceType)throws Exception {	
		try	{								
			
			//this.startProcessAsientoContableCajaChica();
		
			int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();	       
			
			//PUEDE SER -1 CUANDO SE ELIMINA EN GUARDAR CAMBIOS
			if(intSelectedRow>=0 && maintenanceType!=MaintenanceType.GUARDARCAMBIOS) {
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
					
				//ARCHITECTURE
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				
				//ARCHITECTURE
				
				if(AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					//this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
				}
				
				this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
			}
			
			//LUEGO DE TRAER DATOS CORRESPONDIENTES QUE COINCIDA LISTA TABLA QUITO FILA TOTALES
			if(this.conTotales) {
				//MEJOR LO DEJO, SI EXISTE EXCEPCION SE PIEDE FILA TOTALES Y ORDEN INDICE FILA ACTUAL
				//this.quitarFilaTotales();
			}
			
			this.cargarDatosCliente();
			
			this.datosDeep=new DatosDeep();
			
			//SE CAMBIA ESTADOS CON ERROR, ENTONCES SE EJECUTA ANTES
			//this.invalidValues = asientocontablecajachicaValidator.getInvalidValues(this.asientocontablecajachica);
			
			//if(this.invalidValues==null || this.invalidValues.length<=0) {
			
			asientocontablecajachicaLogic.setDatosCliente(datosCliente);
			asientocontablecajachicaLogic.setIsConDeep(false);
			
			if(maintenanceType==MaintenanceType.NUEVO) {
				asientocontablecajachicaAux=new  AsientoContableCajaChica();
				
				asientocontablecajachicaAux.setIsNew(true);
				asientocontablecajachicaAux.setIsChanged(true);
				
				asientocontablecajachicaAux.setAsientoContableCajaChicaOriginal(this.asientocontablecajachica);
				
				asientocontablecajachicaAux.setId(this.asientocontablecajachica.getId());	
				asientocontablecajachicaAux.setVersionRow(this.asientocontablecajachica.getVersionRow());	
				asientocontablecajachicaAux.setid_empresa(this.asientocontablecajachica.getid_empresa());	
				asientocontablecajachicaAux.setid_sucursal(this.asientocontablecajachica.getid_sucursal());	
				asientocontablecajachicaAux.setid_ejercicio(this.asientocontablecajachica.getid_ejercicio());	
				asientocontablecajachicaAux.setid_periodo(this.asientocontablecajachica.getid_periodo());	
				asientocontablecajachicaAux.setid_usuario(this.asientocontablecajachica.getid_usuario());	
				asientocontablecajachicaAux.setid_anio(this.asientocontablecajachica.getid_anio());	
				asientocontablecajachicaAux.setid_mes(this.asientocontablecajachica.getid_mes());	
				asientocontablecajachicaAux.setsecuencial(this.asientocontablecajachica.getsecuencial());	
				asientocontablecajachicaAux.setid_moneda(this.asientocontablecajachica.getid_moneda());	
				asientocontablecajachicaAux.setfecha(this.asientocontablecajachica.getfecha());	
				asientocontablecajachicaAux.setid_empleado(this.asientocontablecajachica.getid_empleado());	
				asientocontablecajachicaAux.setid_estado_asiento_contable(this.asientocontablecajachica.getid_estado_asiento_contable());	
				asientocontablecajachicaAux.setes_proveedor(this.asientocontablecajachica.getes_proveedor());	
				asientocontablecajachicaAux.setid_cliente(this.asientocontablecajachica.getid_cliente());	
				asientocontablecajachicaAux.setid_transaccion(this.asientocontablecajachica.getid_transaccion());	
				asientocontablecajachicaAux.setid_tipo_documento(this.asientocontablecajachica.getid_tipo_documento());	
				asientocontablecajachicaAux.setid_cuenta_contable(this.asientocontablecajachica.getid_cuenta_contable());	
				asientocontablecajachicaAux.setdetalle(this.asientocontablecajachica.getdetalle());	
				asientocontablecajachicaAux.setid_modulo(this.asientocontablecajachica.getid_modulo());	
				asientocontablecajachicaAux.setid_tipo_movimiento(this.asientocontablecajachica.getid_tipo_movimiento());	
				asientocontablecajachicaAux.setid_tipo_transaccion_modulo(this.asientocontablecajachica.getid_tipo_transaccion_modulo());	
				asientocontablecajachicaAux.setid_tipo_movimiento_modulo(this.asientocontablecajachica.getid_tipo_movimiento_modulo());	
								
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.asientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(asientocontablecajachicaAux,asientocontablecajachicaLogic.getAsientoContableCajaChicas());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(asientocontablecajachicaAux,asientocontablecajachicas);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote  && !this.asientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicaLogic.saveAsientoContableCajaChicas();//WithConnection
						//asientocontablecajachicaLogic.getSetVersionRowAsientoContableCajaChicas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE		
					
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.asientocontablecajachica,asientocontablecajachicaAux);
					
					this.refrescarForeignKeysDescripcionesAsientoContableCajaChica();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.asientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().addAll(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicas.addAll(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicasEliminados);
						}
						//ARCHITECTURE	
						
						if(!this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
												
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								asientocontablecajachicaLogic.saveAsientoContableCajaChicaRelaciones(asientocontablecajachicaAux,this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());//WithConnection
								//asientocontablecajachicaLogic.getSetVersionRowAsientoContableCajaChicas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.asientocontablecajachica,asientocontablecajachicaAux);
					
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(new ArrayList<DetalleAsientoContableCajaChica>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicas= new ArrayList<DetalleAsientoContableCajaChica>();
							}
							//ARCHITECTURE	
						} else {
							
							

							if(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.quitarFilaTotales();}
							asientocontablecajachicaAux.setDetalleAsientoContableCajaChicas(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.asientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones() 
									|| this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(asientocontablecajachicaAux,asientocontablecajachicaLogic.getAsientoContableCajaChicas());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(asientocontablecajachicaAux,asientocontablecajachicas);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.asientocontablecajachica,asientocontablecajachicaAux);												
						}
					}
				}
			} else if(maintenanceType==MaintenanceType.ACTUALIZAR) {
				asientocontablecajachicaAux=new  AsientoContableCajaChica();
				
				//PUEDE QUE SE ACTUALIZE ALGUN REGISTRO NUEVO
				if(!this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado() 
					|| (this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado() && this.asientocontablecajachica.getId()>=0)) {
						
					asientocontablecajachicaAux.setIsNew(false);
				}
				
				asientocontablecajachicaAux.setIsDeleted(false);
			
				asientocontablecajachicaAux.setId(this.asientocontablecajachica.getId());	
				asientocontablecajachicaAux.setVersionRow(this.asientocontablecajachica.getVersionRow());	
				asientocontablecajachicaAux.setid_empresa(this.asientocontablecajachica.getid_empresa());	
				asientocontablecajachicaAux.setid_sucursal(this.asientocontablecajachica.getid_sucursal());	
				asientocontablecajachicaAux.setid_ejercicio(this.asientocontablecajachica.getid_ejercicio());	
				asientocontablecajachicaAux.setid_periodo(this.asientocontablecajachica.getid_periodo());	
				asientocontablecajachicaAux.setid_usuario(this.asientocontablecajachica.getid_usuario());	
				asientocontablecajachicaAux.setid_anio(this.asientocontablecajachica.getid_anio());	
				asientocontablecajachicaAux.setid_mes(this.asientocontablecajachica.getid_mes());	
				asientocontablecajachicaAux.setsecuencial(this.asientocontablecajachica.getsecuencial());	
				asientocontablecajachicaAux.setid_moneda(this.asientocontablecajachica.getid_moneda());	
				asientocontablecajachicaAux.setfecha(this.asientocontablecajachica.getfecha());	
				asientocontablecajachicaAux.setid_empleado(this.asientocontablecajachica.getid_empleado());	
				asientocontablecajachicaAux.setid_estado_asiento_contable(this.asientocontablecajachica.getid_estado_asiento_contable());	
				asientocontablecajachicaAux.setes_proveedor(this.asientocontablecajachica.getes_proveedor());	
				asientocontablecajachicaAux.setid_cliente(this.asientocontablecajachica.getid_cliente());	
				asientocontablecajachicaAux.setid_transaccion(this.asientocontablecajachica.getid_transaccion());	
				asientocontablecajachicaAux.setid_tipo_documento(this.asientocontablecajachica.getid_tipo_documento());	
				asientocontablecajachicaAux.setid_cuenta_contable(this.asientocontablecajachica.getid_cuenta_contable());	
				asientocontablecajachicaAux.setdetalle(this.asientocontablecajachica.getdetalle());	
				asientocontablecajachicaAux.setid_modulo(this.asientocontablecajachica.getid_modulo());	
				asientocontablecajachicaAux.setid_tipo_movimiento(this.asientocontablecajachica.getid_tipo_movimiento());	
				asientocontablecajachicaAux.setid_tipo_transaccion_modulo(this.asientocontablecajachica.getid_tipo_transaccion_modulo());	
				asientocontablecajachicaAux.setid_tipo_movimiento_modulo(this.asientocontablecajachica.getid_tipo_movimiento_modulo());	
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(asientocontablecajachicaAux,asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(asientocontablecajachicaAux,asientocontablecajachicas);
				}
				//ARCHITECTURE
				
				if(!isGuardarCambiosEnLote && !this.asientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicaLogic.saveAsientoContableCajaChicas();//WithConnection
						//asientocontablecajachicaLogic.getSetVersionRowAsientoContableCajaChicas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
					
					//TALVEZ ESTA DEMAS POR SER UPDATE
					//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
					this.bugActualizarReferenciaActual(this.asientocontablecajachica,asientocontablecajachicaAux);
					
					this.refrescarForeignKeysDescripcionesAsientoContableCajaChica();
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.asientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().addAll(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicas.addAll(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicasEliminados);
						}
						//ARCHITECTURE
						
						if(!this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								asientocontablecajachicaLogic.saveAsientoContableCajaChicaRelaciones(asientocontablecajachicaAux,this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());//WithConnection
								//asientocontablecajachicaLogic.getSetVersionRowAsientoContableCajaChicas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							this.bugActualizarReferenciaActual(this.asientocontablecajachica,asientocontablecajachicaAux);
					
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(new ArrayList<DetalleAsientoContableCajaChica>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicas= new ArrayList<DetalleAsientoContableCajaChica>();
							}
							//ARCHITECTURE
						} else {
							
							

							if(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.quitarFilaTotales();}
							asientocontablecajachicaAux.setDetalleAsientoContableCajaChicas(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								if(this.asientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones() 
									|| this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado())	{
									actualizarLista(asientocontablecajachicaAux,asientocontablecajachicaLogic.getAsientoContableCajaChicas());
								}
							} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
								actualizarLista(asientocontablecajachicaAux,asientocontablecajachicas);
							}
							//ARCHITECTURE
							
							//AQUI EL ID NEGATIVO ES EL ID BUSCADO, YA QUE NO SE GENERA OTRO EN LA DB POR INGRESAR UNO NUEVO							
							//TALVEZ ESTA DEMAS POR SER UPDATE
							//POR BUG: EL OBJETO ACTUAL SE PERDIA, POR LO QUE SE GUARDA TAMBIEN VALORES EN AUX Y LUEGO DESPUES DEL MENSAJE SE HACE REFERENCIA EL OBJETO ACTUAL AL AUX
							//this.bugActualizarReferenciaActual(this.asientocontablecajachica,asientocontablecajachicaAux);
					
						}
					}
				}				
			} else if(maintenanceType==MaintenanceType.ELIMINAR) {
				asientocontablecajachicaAux=new  AsientoContableCajaChica();
				
				asientocontablecajachicaAux.setIsNew(false);
				asientocontablecajachicaAux.setIsChanged(false);
				
				asientocontablecajachicaAux.setIsDeleted(true);
				
				asientocontablecajachicaAux.setId(this.asientocontablecajachica.getId());	
				asientocontablecajachicaAux.setVersionRow(this.asientocontablecajachica.getVersionRow());	
				asientocontablecajachicaAux.setid_empresa(this.asientocontablecajachica.getid_empresa());	
				asientocontablecajachicaAux.setid_sucursal(this.asientocontablecajachica.getid_sucursal());	
				asientocontablecajachicaAux.setid_ejercicio(this.asientocontablecajachica.getid_ejercicio());	
				asientocontablecajachicaAux.setid_periodo(this.asientocontablecajachica.getid_periodo());	
				asientocontablecajachicaAux.setid_usuario(this.asientocontablecajachica.getid_usuario());	
				asientocontablecajachicaAux.setid_anio(this.asientocontablecajachica.getid_anio());	
				asientocontablecajachicaAux.setid_mes(this.asientocontablecajachica.getid_mes());	
				asientocontablecajachicaAux.setsecuencial(this.asientocontablecajachica.getsecuencial());	
				asientocontablecajachicaAux.setid_moneda(this.asientocontablecajachica.getid_moneda());	
				asientocontablecajachicaAux.setfecha(this.asientocontablecajachica.getfecha());	
				asientocontablecajachicaAux.setid_empleado(this.asientocontablecajachica.getid_empleado());	
				asientocontablecajachicaAux.setid_estado_asiento_contable(this.asientocontablecajachica.getid_estado_asiento_contable());	
				asientocontablecajachicaAux.setes_proveedor(this.asientocontablecajachica.getes_proveedor());	
				asientocontablecajachicaAux.setid_cliente(this.asientocontablecajachica.getid_cliente());	
				asientocontablecajachicaAux.setid_transaccion(this.asientocontablecajachica.getid_transaccion());	
				asientocontablecajachicaAux.setid_tipo_documento(this.asientocontablecajachica.getid_tipo_documento());	
				asientocontablecajachicaAux.setid_cuenta_contable(this.asientocontablecajachica.getid_cuenta_contable());	
				asientocontablecajachicaAux.setdetalle(this.asientocontablecajachica.getdetalle());	
				asientocontablecajachicaAux.setid_modulo(this.asientocontablecajachica.getid_modulo());	
				asientocontablecajachicaAux.setid_tipo_movimiento(this.asientocontablecajachica.getid_tipo_movimiento());	
				asientocontablecajachicaAux.setid_tipo_transaccion_modulo(this.asientocontablecajachica.getid_tipo_transaccion_modulo());	
				asientocontablecajachicaAux.setid_tipo_movimiento_modulo(this.asientocontablecajachica.getid_tipo_movimiento_modulo());	
				
				if(this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
					//ELEMENTO ACTUAL NO SE HA INGRESADO AL SISTEMA, NO SE PUEDE ELIMINAR ALGO QUE NO EXISTE
					if(this.asientocontablecajachicaAux.getId()>=0) {	
						this.asientocontablecajachicasEliminados.add(asientocontablecajachicaAux);											
					}
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					actualizarLista(asientocontablecajachicaAux,asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(asientocontablecajachicaAux,asientocontablecajachicas);
				}
				//ARCHITECTURE
				
				
				if(!isGuardarCambiosEnLote && !this.asientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones() 
						&& !this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado())	{
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicaLogic.saveAsientoContableCajaChicas();//WithConnection
						//asientocontablecajachicaLogic.getSetVersionRowAsientoContableCajaChicas();//WithConnection
					} else if(Constantes.ISUSAEJBREMOTE) {
					} else if(Constantes.ISUSAEJBHOME) {
					}	
					//ARCHITECTURE
				} else {
					//CUANDO ES MANTENIMIENTO MAESTRO DETALLE
					if(this.asientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones()) {
						//GUARDAR RELACIONES
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							
							this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas().addAll(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicasEliminados);
						} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
							this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicas.addAll(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicasEliminados);
						}
						//ARCHITECTURE
						
						
						if(!this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
							//QUITAR FILA TOTAL
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
							
								if(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.quitarFilaTotales();*/}
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
							
								if(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.conTotales) {/*this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.quitarFilaTotales();*/}	
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								asientocontablecajachicaLogic.saveAsientoContableCajaChicaRelaciones(asientocontablecajachicaAux,this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());//WithConnection
								//asientocontablecajachicaLogic.getSetVersionRowAsientoContableCajaChicas();//WithConnection
							} else if(Constantes.ISUSAEJBREMOTE) {
							} else if(Constantes.ISUSAEJBHOME) {
							}
							//ARCHITECTURE
							
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								
							this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(new ArrayList<DetalleAsientoContableCajaChica>());
							} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
								
							this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicas= new ArrayList<DetalleAsientoContableCajaChica>();
							}
							//ARCHITECTURE
						}
					}  else {
							
						

							if(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.conTotales) {this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.quitarFilaTotales();}
							asientocontablecajachicaAux.setDetalleAsientoContableCajaChicas(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
								
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							if(this.asientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones() 
								|| this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado())	{
								actualizarLista(asientocontablecajachicaAux,asientocontablecajachicaLogic.getAsientoContableCajaChicas());
							}
						} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
							actualizarLista(asientocontablecajachicaAux,asientocontablecajachicas);
						}
						//ARCHITECTURE
					}
				}				
			} else if(maintenanceType==MaintenanceType.GUARDARCAMBIOS) {		
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().addAll(this.asientocontablecajachicasEliminados);
					
					asientocontablecajachicaLogic.saveAsientoContableCajaChicas();//WithConnection
					//asientocontablecajachicaLogic.getSetVersionRowAsientoContableCajaChicas();//WithConnection
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}	
				//ARCHITECTURE
				this.refrescarForeignKeysDescripcionesAsientoContableCajaChica();
				
				this.asientocontablecajachicasEliminados= new ArrayList<AsientoContableCajaChica>();		
			}
			
			if(this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
				 this.crearFilaTotales();
			}
			
			
									
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				if(!this.isPostAccionSinMensaje) {
					JOptionPane.showMessageDialog(this,"Asiento Contable Caja Chica GUARDADO CORRECTAMENTE","MANTENIMIENTO DE Asiento Contable Caja Chica",JOptionPane.INFORMATION_MESSAGE);
					if(maintenanceType==MaintenanceType.NUEVO || maintenanceType==MaintenanceType.ACTUALIZAR) {
						//CUANDO ES NUEVO SE PIERDE REFERENCIA NO SE PORQUE
						this.asientocontablecajachica=asientocontablecajachicaAux;
					}
				}
			}
			
			this.isErrorGuardar=false;
			
			this.inicializarInvalidValues();
		/*
		} else {
			this.mostrarInvalidValues();	
		}
		*/
			
		} catch(Exception e) {
			this.isErrorGuardar=true;
			
			this.crearFilaTotales();
			
			throw e;
		} finally {
      		//this.finishProcessAsientoContableCajaChica();
      	}
		
	}	
	
	public void actualizarRelaciones(AsientoContableCajaChica asientocontablecajachicaLocal) throws Exception {
		
		if(this.asientocontablecajachicaSessionBean.getConGuardarRelaciones()) {			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
			
				asientocontablecajachicaLocal.setDetalleAsientoContableCajaChicas(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
			
			} else {
			
				asientocontablecajachicaLocal.setDetalleAsientoContableCajaChicas(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicas);	
			}
		}
	}
	
	public void actualizarRelacionFkPadreActual(AsientoContableCajaChica asientocontablecajachicaLocal) throws Exception {	
		if(this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {			
			
		
			if(this.jInternalFrameParent.getClass().equals(EmpresaDetalleFormJInternalFrame.class)) {
				EmpresaBeanSwingJInternalFrame empresaBeanSwingJInternalFrameLocal=(EmpresaBeanSwingJInternalFrame) ((EmpresaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empresaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpresa(empresaBeanSwingJInternalFrameLocal.getempresa(),true);
				empresaBeanSwingJInternalFrameLocal.actualizarLista(empresaBeanSwingJInternalFrameLocal.empresa,this.empresasForeignKey);

				empresaBeanSwingJInternalFrameLocal.actualizarRelaciones(empresaBeanSwingJInternalFrameLocal.empresa);

				asientocontablecajachicaLocal.setEmpresa(empresaBeanSwingJInternalFrameLocal.empresa);

				this.addItemDefectoCombosForeignKeyEmpresa();
				this.cargarCombosFrameEmpresasForeignKey("Formulario");
				this.setActualEmpresaForeignKey(empresaBeanSwingJInternalFrameLocal.empresa.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(SucursalDetalleFormJInternalFrame.class)) {
				SucursalBeanSwingJInternalFrame sucursalBeanSwingJInternalFrameLocal=(SucursalBeanSwingJInternalFrame) ((SucursalDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				sucursalBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoSucursal(sucursalBeanSwingJInternalFrameLocal.getsucursal(),true);
				sucursalBeanSwingJInternalFrameLocal.actualizarLista(sucursalBeanSwingJInternalFrameLocal.sucursal,this.sucursalsForeignKey);

				sucursalBeanSwingJInternalFrameLocal.actualizarRelaciones(sucursalBeanSwingJInternalFrameLocal.sucursal);

				asientocontablecajachicaLocal.setSucursal(sucursalBeanSwingJInternalFrameLocal.sucursal);

				this.addItemDefectoCombosForeignKeySucursal();
				this.cargarCombosFrameSucursalsForeignKey("Formulario");
				this.setActualSucursalForeignKey(sucursalBeanSwingJInternalFrameLocal.sucursal.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EjercicioDetalleFormJInternalFrame.class)) {
				EjercicioBeanSwingJInternalFrame ejercicioBeanSwingJInternalFrameLocal=(EjercicioBeanSwingJInternalFrame) ((EjercicioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				ejercicioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEjercicio(ejercicioBeanSwingJInternalFrameLocal.getejercicio(),true);
				ejercicioBeanSwingJInternalFrameLocal.actualizarLista(ejercicioBeanSwingJInternalFrameLocal.ejercicio,this.ejerciciosForeignKey);

				ejercicioBeanSwingJInternalFrameLocal.actualizarRelaciones(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				asientocontablecajachicaLocal.setEjercicio(ejercicioBeanSwingJInternalFrameLocal.ejercicio);

				this.addItemDefectoCombosForeignKeyEjercicio();
				this.cargarCombosFrameEjerciciosForeignKey("Formulario");
				this.setActualEjercicioForeignKey(ejercicioBeanSwingJInternalFrameLocal.ejercicio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(PeriodoDetalleFormJInternalFrame.class)) {
				PeriodoBeanSwingJInternalFrame periodoBeanSwingJInternalFrameLocal=(PeriodoBeanSwingJInternalFrame) ((PeriodoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				periodoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoPeriodo(periodoBeanSwingJInternalFrameLocal.getperiodo(),true);
				periodoBeanSwingJInternalFrameLocal.actualizarLista(periodoBeanSwingJInternalFrameLocal.periodo,this.periodosForeignKey);

				periodoBeanSwingJInternalFrameLocal.actualizarRelaciones(periodoBeanSwingJInternalFrameLocal.periodo);

				asientocontablecajachicaLocal.setPeriodo(periodoBeanSwingJInternalFrameLocal.periodo);

				this.addItemDefectoCombosForeignKeyPeriodo();
				this.cargarCombosFramePeriodosForeignKey("Formulario");
				this.setActualPeriodoForeignKey(periodoBeanSwingJInternalFrameLocal.periodo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(UsuarioDetalleFormJInternalFrame.class)) {
				UsuarioBeanSwingJInternalFrame usuarioBeanSwingJInternalFrameLocal=(UsuarioBeanSwingJInternalFrame) ((UsuarioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				usuarioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoUsuario(usuarioBeanSwingJInternalFrameLocal.getusuario(),true);
				usuarioBeanSwingJInternalFrameLocal.actualizarLista(usuarioBeanSwingJInternalFrameLocal.usuario,this.usuariosForeignKey);

				usuarioBeanSwingJInternalFrameLocal.actualizarRelaciones(usuarioBeanSwingJInternalFrameLocal.usuario);

				asientocontablecajachicaLocal.setUsuario(usuarioBeanSwingJInternalFrameLocal.usuario);

				this.addItemDefectoCombosForeignKeyUsuario();
				this.cargarCombosFrameUsuariosForeignKey("Formulario");
				this.setActualUsuarioForeignKey(usuarioBeanSwingJInternalFrameLocal.usuario.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(AnioDetalleFormJInternalFrame.class)) {
				AnioBeanSwingJInternalFrame anioBeanSwingJInternalFrameLocal=(AnioBeanSwingJInternalFrame) ((AnioDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				anioBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoAnio(anioBeanSwingJInternalFrameLocal.getanio(),true);
				anioBeanSwingJInternalFrameLocal.actualizarLista(anioBeanSwingJInternalFrameLocal.anio,this.aniosForeignKey);

				anioBeanSwingJInternalFrameLocal.actualizarRelaciones(anioBeanSwingJInternalFrameLocal.anio);

				asientocontablecajachicaLocal.setAnio(anioBeanSwingJInternalFrameLocal.anio);

				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey("Formulario");
				this.setActualAnioForeignKey(anioBeanSwingJInternalFrameLocal.anio.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MesDetalleFormJInternalFrame.class)) {
				MesBeanSwingJInternalFrame mesBeanSwingJInternalFrameLocal=(MesBeanSwingJInternalFrame) ((MesDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				mesBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMes(mesBeanSwingJInternalFrameLocal.getmes(),true);
				mesBeanSwingJInternalFrameLocal.actualizarLista(mesBeanSwingJInternalFrameLocal.mes,this.messForeignKey);

				mesBeanSwingJInternalFrameLocal.actualizarRelaciones(mesBeanSwingJInternalFrameLocal.mes);

				asientocontablecajachicaLocal.setMes(mesBeanSwingJInternalFrameLocal.mes);

				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey("Formulario");
				this.setActualMesForeignKey(mesBeanSwingJInternalFrameLocal.mes.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(MonedaDetalleFormJInternalFrame.class)) {
				MonedaBeanSwingJInternalFrame monedaBeanSwingJInternalFrameLocal=(MonedaBeanSwingJInternalFrame) ((MonedaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				monedaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoMoneda(monedaBeanSwingJInternalFrameLocal.getmoneda(),true);
				monedaBeanSwingJInternalFrameLocal.actualizarLista(monedaBeanSwingJInternalFrameLocal.moneda,this.monedasForeignKey);

				monedaBeanSwingJInternalFrameLocal.actualizarRelaciones(monedaBeanSwingJInternalFrameLocal.moneda);

				asientocontablecajachicaLocal.setMoneda(monedaBeanSwingJInternalFrameLocal.moneda);

				this.addItemDefectoCombosForeignKeyMoneda();
				this.cargarCombosFrameMonedasForeignKey("Formulario");
				this.setActualMonedaForeignKey(monedaBeanSwingJInternalFrameLocal.moneda.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EmpleadoDetalleFormJInternalFrame.class)) {
				EmpleadoBeanSwingJInternalFrame empleadoBeanSwingJInternalFrameLocal=(EmpleadoBeanSwingJInternalFrame) ((EmpleadoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				empleadoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEmpleado(empleadoBeanSwingJInternalFrameLocal.getempleado(),true);
				empleadoBeanSwingJInternalFrameLocal.actualizarLista(empleadoBeanSwingJInternalFrameLocal.empleado,this.empleadosForeignKey);

				empleadoBeanSwingJInternalFrameLocal.actualizarRelaciones(empleadoBeanSwingJInternalFrameLocal.empleado);

				asientocontablecajachicaLocal.setEmpleado(empleadoBeanSwingJInternalFrameLocal.empleado);

				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey("Formulario");
				this.setActualEmpleadoForeignKey(empleadoBeanSwingJInternalFrameLocal.empleado.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(EstadoAsientoContableCajaChicaDetalleFormJInternalFrame.class)) {
				EstadoAsientoContableCajaChicaBeanSwingJInternalFrame estadoasientocontablecajachicaBeanSwingJInternalFrameLocal=(EstadoAsientoContableCajaChicaBeanSwingJInternalFrame) ((EstadoAsientoContableCajaChicaDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				estadoasientocontablecajachicaBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoEstadoAsientoContableCajaChica(estadoasientocontablecajachicaBeanSwingJInternalFrameLocal.getestadoasientocontablecajachica(),true);
				estadoasientocontablecajachicaBeanSwingJInternalFrameLocal.actualizarLista(estadoasientocontablecajachicaBeanSwingJInternalFrameLocal.estadoasientocontablecajachica,this.estadoasientocontablecajachicasForeignKey);

				estadoasientocontablecajachicaBeanSwingJInternalFrameLocal.actualizarRelaciones(estadoasientocontablecajachicaBeanSwingJInternalFrameLocal.estadoasientocontablecajachica);

				asientocontablecajachicaLocal.setEstadoAsientoContableCajaChica(estadoasientocontablecajachicaBeanSwingJInternalFrameLocal.estadoasientocontablecajachica);

				this.addItemDefectoCombosForeignKeyEstadoAsientoContableCajaChica();
				this.cargarCombosFrameEstadoAsientoContableCajaChicasForeignKey("Formulario");
				this.setActualEstadoAsientoContableCajaChicaForeignKey(estadoasientocontablecajachicaBeanSwingJInternalFrameLocal.estadoasientocontablecajachica.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ClienteDetalleFormJInternalFrame.class)) {
				ClienteBeanSwingJInternalFrame clienteBeanSwingJInternalFrameLocal=(ClienteBeanSwingJInternalFrame) ((ClienteDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				clienteBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCliente(clienteBeanSwingJInternalFrameLocal.getcliente(),true);
				clienteBeanSwingJInternalFrameLocal.actualizarLista(clienteBeanSwingJInternalFrameLocal.cliente,this.clientesForeignKey);

				clienteBeanSwingJInternalFrameLocal.actualizarRelaciones(clienteBeanSwingJInternalFrameLocal.cliente);

				asientocontablecajachicaLocal.setCliente(clienteBeanSwingJInternalFrameLocal.cliente);

				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey("Formulario");
				this.setActualClienteForeignKey(clienteBeanSwingJInternalFrameLocal.cliente.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TransaccionDetalleFormJInternalFrame.class)) {
				TransaccionBeanSwingJInternalFrame transaccionBeanSwingJInternalFrameLocal=(TransaccionBeanSwingJInternalFrame) ((TransaccionDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				transaccionBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTransaccion(transaccionBeanSwingJInternalFrameLocal.gettransaccion(),true);
				transaccionBeanSwingJInternalFrameLocal.actualizarLista(transaccionBeanSwingJInternalFrameLocal.transaccion,this.transaccionsForeignKey);

				transaccionBeanSwingJInternalFrameLocal.actualizarRelaciones(transaccionBeanSwingJInternalFrameLocal.transaccion);

				asientocontablecajachicaLocal.setTransaccion(transaccionBeanSwingJInternalFrameLocal.transaccion);

				this.addItemDefectoCombosForeignKeyTransaccion();
				this.cargarCombosFrameTransaccionsForeignKey("Formulario");
				this.setActualTransaccionForeignKey(transaccionBeanSwingJInternalFrameLocal.transaccion.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoDocumentoDetalleFormJInternalFrame.class)) {
				TipoDocumentoBeanSwingJInternalFrame tipodocumentoBeanSwingJInternalFrameLocal=(TipoDocumentoBeanSwingJInternalFrame) ((TipoDocumentoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipodocumentoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoDocumento(tipodocumentoBeanSwingJInternalFrameLocal.gettipodocumento(),true);
				tipodocumentoBeanSwingJInternalFrameLocal.actualizarLista(tipodocumentoBeanSwingJInternalFrameLocal.tipodocumento,this.tipodocumentosForeignKey);

				tipodocumentoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipodocumentoBeanSwingJInternalFrameLocal.tipodocumento);

				asientocontablecajachicaLocal.setTipoDocumento(tipodocumentoBeanSwingJInternalFrameLocal.tipodocumento);

				this.addItemDefectoCombosForeignKeyTipoDocumento();
				this.cargarCombosFrameTipoDocumentosForeignKey("Formulario");
				this.setActualTipoDocumentoForeignKey(tipodocumentoBeanSwingJInternalFrameLocal.tipodocumento.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(CuentaContableDetalleFormJInternalFrame.class)) {
				CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrameLocal=(CuentaContableBeanSwingJInternalFrame) ((CuentaContableDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				cuentacontableBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoCuentaContable(cuentacontableBeanSwingJInternalFrameLocal.getcuentacontable(),true);
				cuentacontableBeanSwingJInternalFrameLocal.actualizarLista(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable,this.cuentacontablesForeignKey);

				cuentacontableBeanSwingJInternalFrameLocal.actualizarRelaciones(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable);

				asientocontablecajachicaLocal.setCuentaContable(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable);

				this.addItemDefectoCombosForeignKeyCuentaContable();
				this.cargarCombosFrameCuentaContablesForeignKey("Formulario");
				this.setActualCuentaContableForeignKey(cuentacontableBeanSwingJInternalFrameLocal.cuentacontable.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(ModuloDetalleFormJInternalFrame.class)) {
				ModuloBeanSwingJInternalFrame moduloBeanSwingJInternalFrameLocal=(ModuloBeanSwingJInternalFrame) ((ModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				moduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoModulo(moduloBeanSwingJInternalFrameLocal.getmodulo(),true);
				moduloBeanSwingJInternalFrameLocal.actualizarLista(moduloBeanSwingJInternalFrameLocal.modulo,this.modulosForeignKey);

				moduloBeanSwingJInternalFrameLocal.actualizarRelaciones(moduloBeanSwingJInternalFrameLocal.modulo);

				asientocontablecajachicaLocal.setModulo(moduloBeanSwingJInternalFrameLocal.modulo);

				this.addItemDefectoCombosForeignKeyModulo();
				this.cargarCombosFrameModulosForeignKey("Formulario");
				this.setActualModuloForeignKey(moduloBeanSwingJInternalFrameLocal.modulo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoMovimientoDetalleFormJInternalFrame.class)) {
				TipoMovimientoBeanSwingJInternalFrame tipomovimientoBeanSwingJInternalFrameLocal=(TipoMovimientoBeanSwingJInternalFrame) ((TipoMovimientoDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipomovimientoBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoMovimiento(tipomovimientoBeanSwingJInternalFrameLocal.gettipomovimiento(),true);
				tipomovimientoBeanSwingJInternalFrameLocal.actualizarLista(tipomovimientoBeanSwingJInternalFrameLocal.tipomovimiento,this.tipomovimientosForeignKey);

				tipomovimientoBeanSwingJInternalFrameLocal.actualizarRelaciones(tipomovimientoBeanSwingJInternalFrameLocal.tipomovimiento);

				asientocontablecajachicaLocal.setTipoMovimiento(tipomovimientoBeanSwingJInternalFrameLocal.tipomovimiento);

				this.addItemDefectoCombosForeignKeyTipoMovimiento();
				this.cargarCombosFrameTipoMovimientosForeignKey("Formulario");
				this.setActualTipoMovimientoForeignKey(tipomovimientoBeanSwingJInternalFrameLocal.tipomovimiento.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoTransaccionModuloDetalleFormJInternalFrame.class)) {
				TipoTransaccionModuloBeanSwingJInternalFrame tipotransaccionmoduloBeanSwingJInternalFrameLocal=(TipoTransaccionModuloBeanSwingJInternalFrame) ((TipoTransaccionModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipotransaccionmoduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoTransaccionModulo(tipotransaccionmoduloBeanSwingJInternalFrameLocal.gettipotransaccionmodulo(),true);
				tipotransaccionmoduloBeanSwingJInternalFrameLocal.actualizarLista(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo,this.tipotransaccionmodulosForeignKey);

				tipotransaccionmoduloBeanSwingJInternalFrameLocal.actualizarRelaciones(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo);

				asientocontablecajachicaLocal.setTipoTransaccionModulo(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo);

				this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
				this.cargarCombosFrameTipoTransaccionModulosForeignKey("Formulario");
				this.setActualTipoTransaccionModuloForeignKey(tipotransaccionmoduloBeanSwingJInternalFrameLocal.tipotransaccionmodulo.getId(),false,"Formulario");
			}
			 else if(this.jInternalFrameParent.getClass().equals(TipoMovimientoModuloDetalleFormJInternalFrame.class)) {
				TipoMovimientoModuloBeanSwingJInternalFrame tipomovimientomoduloBeanSwingJInternalFrameLocal=(TipoMovimientoModuloBeanSwingJInternalFrame) ((TipoMovimientoModuloDetalleFormJInternalFrame) this.jInternalFrameParent).jInternalFrameParent;

				tipomovimientomoduloBeanSwingJInternalFrameLocal.setVariablesFormularioToObjetoActualTodoTipoMovimientoModulo(tipomovimientomoduloBeanSwingJInternalFrameLocal.gettipomovimientomodulo(),true);
				tipomovimientomoduloBeanSwingJInternalFrameLocal.actualizarLista(tipomovimientomoduloBeanSwingJInternalFrameLocal.tipomovimientomodulo,this.tipomovimientomodulosForeignKey);

				tipomovimientomoduloBeanSwingJInternalFrameLocal.actualizarRelaciones(tipomovimientomoduloBeanSwingJInternalFrameLocal.tipomovimientomodulo);

				asientocontablecajachicaLocal.setTipoMovimientoModulo(tipomovimientomoduloBeanSwingJInternalFrameLocal.tipomovimientomodulo);

				this.addItemDefectoCombosForeignKeyTipoMovimientoModulo();
				this.cargarCombosFrameTipoMovimientoModulosForeignKey("Formulario");
				this.setActualTipoMovimientoModuloForeignKey(tipomovimientomoduloBeanSwingJInternalFrameLocal.tipomovimientomodulo.getId(),false,"Formulario");
			}
		
		}
	}
	
	public Boolean validarAsientoContableCajaChicaActual() throws Exception {
		Boolean estaValidado=false;
		this.inicializarInvalidValues();
		
		/*
		int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE ||Constantes.ISUSAEJBHOME) {
			this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
		}
		//ARCHITECTURE
		*/
		
		this.invalidValues = asientocontablecajachicaValidator.getInvalidValues(this.asientocontablecajachica);
					
		if(this.invalidValues==null || this.invalidValues.length<=0) {
			estaValidado=true;
		} else {
			this.mostrarInvalidValues();	
		}
		
		return estaValidado;
	}
	
	public void actualizarLista(AsientoContableCajaChica asientocontablecajachica,List<AsientoContableCajaChica> asientocontablecajachicas) throws Exception {
		try	{		
			AsientoContableCajaChicaConstantesFunciones.actualizarLista(asientocontablecajachica,asientocontablecajachicas,this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado());		
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void actualizarSelectedLista(AsientoContableCajaChica asientocontablecajachica,List<AsientoContableCajaChica> asientocontablecajachicas) throws Exception {
		try	{			
			AsientoContableCajaChicaConstantesFunciones.actualizarSelectedLista(asientocontablecajachica,asientocontablecajachicas);
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public Boolean tieneElementosSeleccionados() throws Exception {
		Boolean tiene=false;
		
		List<AsientoContableCajaChica> asientocontablecajachicasLocal=null;
		
		try	{			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				asientocontablecajachicasLocal=this.asientocontablecajachicaLogic.getAsientoContableCajaChicas();
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				asientocontablecajachicasLocal=this.asientocontablecajachicas;
			}
			//ARCHITECTURE
		
			for(AsientoContableCajaChica asientocontablecajachicaLocal:asientocontablecajachicasLocal) {
				if(this.permiteMantenimiento(asientocontablecajachicaLocal) && asientocontablecajachicaLocal.getIsSelected()) {
					tiene=true;
					break;
				}
			}
		} catch(Exception e) {
			throw e;
		}
		
		return tiene;
	}			
	
	public void mostrarInvalidValues() throws Exception {
		String sMensaje="";
				
		for (InvalidValue invalidValue : this.invalidValues) {
			sMensaje+="\r\n"+AsientoContableCajaChicaConstantesFunciones.getAsientoContableCajaChicaLabelDesdeNombre(invalidValue.getPropertyName())+"->"+invalidValue.getMessage();
			
			//MOSTRAR CAMPOS INVALIDOS
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.IDEMPRESA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_empresaAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.IDSUCURSAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_sucursalAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.IDEJERCICIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_ejercicioAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.IDPERIODO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_periodoAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.IDUSUARIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_usuarioAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.IDANIO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_anioAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.IDMES)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_mesAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.SECUENCIAL)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelsecuencialAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.IDMONEDA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_monedaAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.FECHA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelfechaAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.IDEMPLEADO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_empleadoAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.IDESTADOASIENTOCONTABLECAJACHICA)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_estado_asiento_contableAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.ESPROVEEDOR)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabeles_proveedorAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.IDCLIENTE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_clienteAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.IDTRANSACCION)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_transaccionAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.IDTIPODOCUMENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_tipo_documentoAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.IDCUENTACONTABLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_cuenta_contableAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.DETALLE)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabeldetalleAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.IDMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_moduloAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.IDTIPOMOVIMIENTO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_tipo_movimientoAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.IDTIPOTRANSACCIONMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_tipo_transaccion_moduloAsientoContableCajaChica,invalidValue.getMessage());}
			if(invalidValue.getPropertyName().equals(AsientoContableCajaChicaConstantesFunciones.IDTIPOMOVIMIENTOMODULO)) {FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_tipo_movimiento_moduloAsientoContableCajaChica,invalidValue.getMessage());}
        }
		
		
		if(!sMensaje.equals("")) {
			//JOptionPane.showMessageDialog(this,sMensaje,"VALIDACION ",JOptionPane.ERROR_MESSAGE);
			throw new Exception(sMensaje);			
		}
		
		/*
		System.out.println(invalidValue);
        System.out.println("message=" + invalidValue.getMessage());
        System.out.println("propertyName=" + invalidValue.getPropertyName());
        System.out.println("propertyPath=" + invalidValue.getPropertyPath());
        System.out.println("value=" + invalidValue.getValue());
        */
	}		
	
	public void inicializarInvalidValues() throws Exception {
		String sMensaje="";	
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
		
		//MOSTRAR CAMPOS INVALIDOS
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_empresaAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_sucursalAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_ejercicioAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_periodoAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_usuarioAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_anioAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_mesAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelsecuencialAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_monedaAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelfechaAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_empleadoAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_estado_asiento_contableAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabeles_proveedorAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_clienteAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_transaccionAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_tipo_documentoAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_cuenta_contableAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabeldetalleAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_moduloAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_tipo_movimientoAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_tipo_transaccion_moduloAsientoContableCajaChica,"");
		FuncionesSwing.mostrarCampoMensajeInvalido(true,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelid_tipo_movimiento_moduloAsientoContableCajaChica,"");
		
		}
	}
	
	
	
	public void actualizarObjetoPadreFk(String sTipo)  throws Exception {
		if(sTipo.equals("XXXAuxiliar")) {
		
		}
		
		 else  if(sTipo.equals("DetalleAsientoContableCajaChica")) {
			if(this.asientocontablecajachica==null) {
				this.asientocontablecajachica= new AsientoContableCajaChica();
			}

			if(this.asientocontablecajachicaSessionBean.getConGuardarRelaciones()) { //&& this.isEsNuevoAsientoContableCajaChica
				this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);//false
				this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);

				this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.getdetalleasientocontablecajachica().setAsientoContableCajaChica(this.asientocontablecajachica);
			}

			return;
		}
	}
	
	public void nuevoPreparar() throws Exception {
		this.nuevoPreparar(false);
	}
	
	public void nuevoPreparar(Boolean esNuevoGuardarCambios) throws Exception {
		this.iIdNuevoAsientoContableCajaChica--;	
		
		
		this.asientocontablecajachicaAux=new AsientoContableCajaChica();
		
		this.asientocontablecajachicaAux.setId(this.iIdNuevoAsientoContableCajaChica);
		this.asientocontablecajachicaAux.setIsChanged(true);
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().add(this.asientocontablecajachicaAux);
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.asientocontablecajachicas.add(this.asientocontablecajachicaAux);
		}
		//ARCHITECTURE
		
		this.asientocontablecajachica=this.asientocontablecajachicaAux;
		
		if(AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			this.setVariablesObjetoActualToFormularioAsientoContableCajaChica(this.asientocontablecajachica);
			this.setVariablesObjetoActualToFormularioForeignKeyAsientoContableCajaChica(this.asientocontablecajachica);
		}
				
		//this.setDefaultControlesAsientoContableCajaChica();
		
		this.inicializarInvalidValues();
				
		//SELECCIONA ITEM DEFECTO-->SET O SELECTED INDEX
		this.setItemDefectoCombosForeignKeyAsientoContableCajaChica();
		
		
		//INICIALIZA VARIABLES COMBOS GLOBALES A FORMULARIO(ParametroGeneralUsuario)
		this.setVariablesGlobalesCombosForeignKeyAsientoContableCajaChica();
		
		//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
		//this.setVariablesGlobalesAuxiliaresCombosForeignKeyAsientoContableCajaChica();
		
		//SI TIENE FOREIGN KEY CON CAMPO esDefecto=true, SE ACTUALIZA A OBJETO ACTUAL
		this.setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualAsientoContableCajaChica(this.asientocontablecajachicaBean,this.asientocontablecajachica,false,false);
		
		//ACTUALIZA VALORES PARA EL OBJETO ACTUAL ANTES DE ENVIARLO A ACTUALIZAR
		this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				
		ArrayList<Classe> classes=new ArrayList<Classe>();
		
		if(this.jInternalFrameParent!=null) {
			this.jInternalFrameParent.actualizarObjetoPadreFk(AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}	
		
		
		if(this.asientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
			classes=AsientoContableCajaChicaConstantesFunciones.getClassesRelationshipsOfAsientoContableCajaChica(new ArrayList<Classe>(),DeepLoadType.NONE);
		}
		
		this.classesActual=new ArrayList<Classe>();
		this.classesActual.addAll(classes);
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {						
			this.asientocontablecajachicaReturnGeneral=asientocontablecajachicaLogic.procesarEventosAsientoContableCajaChicasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,EventoGlobalTipo.FORM_RECARGAR,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.asientocontablecajachicaLogic.getAsientoContableCajaChicas(),this.asientocontablecajachica,this.asientocontablecajachicaParameterGeneral,this.isEsNuevoAsientoContableCajaChica,classes);//this.asientocontablecajachicaLogic.getAsientoContableCajaChica()
						
		} else if(Constantes.ISUSAEJBREMOTE) {
						
		} else if(Constantes.ISUSAEJBHOME) {
		}
		//ARCHITECTURE
		
		//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
		//this.setVariablesObjetoReturnGeneralToBeanAsientoContableCajaChica(this.asientocontablecajachicaReturnGeneral,this.asientocontablecajachicaBean,false);
		
		if(this.asientocontablecajachicaReturnGeneral.getConRecargarPropiedades()) {
			//INICIALIZA VARIABLES COMBOS NORMALES (FK)
			this.setVariablesObjetoActualToFormularioForeignKeyAsientoContableCajaChica(this.asientocontablecajachicaReturnGeneral.getAsientoContableCajaChica());
			
			//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
			this.setVariablesObjetoActualToFormularioAsientoContableCajaChica(this.asientocontablecajachicaReturnGeneral.getAsientoContableCajaChica());
		}
		
		if(this.asientocontablecajachicaReturnGeneral.getConRecargarRelaciones()) {
			//INICIALIZA VARIABLES RELACIONES A FORMULARIO
			this.setVariablesRelacionesObjetoActualToFormularioAsientoContableCajaChica(this.asientocontablecajachicaReturnGeneral.getAsientoContableCajaChica(),classes);//this.asientocontablecajachicaBean);	
		}
			
		//ACTUALIZA VARIABLES FORMULARIO A OBJETO ACTUAL (PARA NUEVO TABLA O GUARDAR CAMBIOS
		if(esNuevoGuardarCambios) {
			this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,false);
		}
		
		//INICIALIZA VARIABLES COMBOS DEFAULT DEL PROYECTO(|DEFAULT para FK)
		//this.setVariablesDefaultCombosForeignKeyAsientoContableCajaChica();
		
		//INICIALIZA VARIABLES COMBOS PARAMETRO DEL PROYECTO(|VALORPARAM Era para ParametroModulo, ahora en logic)
		//this.setVariablesParametroCombosForeignKeyAsientoContableCajaChica();						
		
		if(!esNuevoGuardarCambios) {
			//INICIALIZA VARIABLES POR OPCION MENU
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.RecargarFormAsientoContableCajaChica(this,"NUEVO_PREPARAR","",this.arrDatoGeneral);
		
			//NO FUNCIONA BINDINGS			
			this.inicializarActualizarBindingAsientoContableCajaChica(false);
						
			if(asientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
				//DEBERIA YA ESTAR CARGADO LOS COMBOS Y SI SE NECESITA ALGO MAS SE DEBE CREAR FUNCION LIMITADA
				//SI DEBE TRAER Y RESETEAR TABLA
				

				if(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado() && DetalleAsientoContableCajaChicaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetalleAsientoContableCajaChicaActionPerformed(null,-1,false,true,null);
				}				
			}
				
			//SI ES MANUAL
			if(AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualAsientoContableCajaChica();
			}
			
			this.actualizarVisualTableDatosAsientoContableCajaChica();
			
			this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(this.getIndiceNuevoAsientoContableCajaChica(), this.getIndiceNuevoAsientoContableCajaChica());
			
			this.seleccionarFilaTablaAsientoContableCajaChicaActual();
						
			this.actualizarEstadoCeldasBotonesAsientoContableCajaChica("a", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		}		
	}
	
	public void habilitarDeshabilitarControlesAsientoContableCajaChica(Boolean isHabilitar) throws Exception {
		
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jTextFieldsecuencialAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activarsecuencialAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jDateChooserfechaAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activarfechaAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jCheckBoxes_proveedorAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activares_proveedorAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jTextAreadetalleAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activardetalleAsientoContableCajaChica);	
		//
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empresaAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activarid_empresaAsientoContableCajaChica);//
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_sucursalAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activarid_sucursalAsientoContableCajaChica);//
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_ejercicioAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activarid_ejercicioAsientoContableCajaChica);//
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_periodoAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activarid_periodoAsientoContableCajaChica);//
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_usuarioAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activarid_usuarioAsientoContableCajaChica);//
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_anioAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activarid_anioAsientoContableCajaChica);//
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_mesAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activarid_mesAsientoContableCajaChica);//
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_monedaAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activarid_monedaAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empleadoAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activarid_empleadoAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_estado_asiento_contableAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activarid_estado_asiento_contableAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_clienteAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activarid_clienteAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_transaccionAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activarid_transaccionAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_documentoAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activarid_tipo_documentoAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_cuenta_contableAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activarid_cuenta_contableAsientoContableCajaChica);//
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_moduloAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activarid_moduloAsientoContableCajaChica);//
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimientoAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activarid_tipo_movimientoAsientoContableCajaChica);//
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activarid_tipo_transaccion_moduloAsientoContableCajaChica);//
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChica.setEnabled(isHabilitar && this.asientocontablecajachicaConstantesFunciones.activarid_tipo_movimiento_moduloAsientoContableCajaChica);
	};
	
	public void setDefaultControlesAsientoContableCajaChica() throws Exception {
			
	};
	
	
	public void habilitarDeshabilitarTipoMantenimientoAsientoContableCajaChica(Boolean esRelaciones) throws Exception {
		if(esRelaciones) {
			//this.asientocontablecajachicaSessionBean.setConGuardarRelaciones(true);			
			this.asientocontablecajachicaSessionBean.setEstaModoGuardarRelaciones(true);				
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jTabbedPaneRelacionesAsientoContableCajaChica.setVisible(true);
			
			

			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaSessionBean.setEsGuardarRelacionado(true);
				//this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.getContentPane().setVisible(true);
			}		
		} else {
			//this.asientocontablecajachicaSessionBean.setConGuardarRelaciones(false);			
			this.asientocontablecajachicaSessionBean.setEstaModoGuardarRelaciones(false);						
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jTabbedPaneRelacionesAsientoContableCajaChica.setVisible(false);
			
			

			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame!=null) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaSessionBean.setEsGuardarRelacionado(false);
				//this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.getContentPane().setVisible(false);
			}
		}
	};
	
	public int getIndiceNuevoAsientoContableCajaChica() throws Exception {
		int iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(AsientoContableCajaChica asientocontablecajachicaAux:this.asientocontablecajachicaLogic.getAsientoContableCajaChicas()) {
				if(asientocontablecajachicaAux.getId().equals(this.iIdNuevoAsientoContableCajaChica)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(AsientoContableCajaChica asientocontablecajachicaAux:this.asientocontablecajachicas) {
				if(asientocontablecajachicaAux.getId().equals(this.iIdNuevoAsientoContableCajaChica)) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndice-1;
		}
		
		return iIndice;
	}
	
	public int getIndiceActualAsientoContableCajaChica(AsientoContableCajaChica asientocontablecajachica,Integer iIndiceActual) throws Exception {
		Integer iIndice=0;
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(AsientoContableCajaChica asientocontablecajachicaAux:this.asientocontablecajachicaLogic.getAsientoContableCajaChicas()) {
				if(asientocontablecajachicaAux.getId().equals(asientocontablecajachica.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(AsientoContableCajaChica asientocontablecajachicaAux:this.asientocontablecajachicas) {
				if(asientocontablecajachicaAux.getId().equals(asientocontablecajachica.getId())) {
					existe=true;
					break;
				}
				
				iIndice++;
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
			iIndice=iIndiceActual;
		}
		
		return iIndice;
	}
	
	public void setCamposBaseDesdeOriginalAsientoContableCajaChica(AsientoContableCajaChica asientocontablecajachicaOriginal) throws Exception {
		Boolean existe=false;
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(AsientoContableCajaChica asientocontablecajachicaAux:this.asientocontablecajachicaLogic.getAsientoContableCajaChicas()) {
				if(asientocontablecajachicaAux.getAsientoContableCajaChicaOriginal().getId().equals(asientocontablecajachicaOriginal.getId())) {
					existe=true;
					asientocontablecajachicaOriginal.setId(asientocontablecajachicaAux.getId());
					asientocontablecajachicaOriginal.setVersionRow(asientocontablecajachicaAux.getVersionRow());
					break;
				}
				
			}
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(AsientoContableCajaChica asientocontablecajachicaAux:this.asientocontablecajachicas) {
				if(asientocontablecajachicaAux.getAsientoContableCajaChicaOriginal().getId().equals(asientocontablecajachicaOriginal.getId())) {
					existe=true;
					asientocontablecajachicaOriginal.setId(asientocontablecajachicaAux.getId());
					asientocontablecajachicaOriginal.setVersionRow(asientocontablecajachicaAux.getVersionRow());
					break;
				}				
			}
		}
		//ARCHITECTURE
		
		if(!existe) {
			//SI NO EXISTE TOMA LA ULTIMA FILA
		}
	}
	
	public void cancelarNuevosAsientoContableCajaChica(Boolean esParaCancelar) throws Exception {
		asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
		asientocontablecajachicaAux=new AsientoContableCajaChica();
		
		if(!this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(AsientoContableCajaChica asientocontablecajachicaAux:this.asientocontablecajachicaLogic.getAsientoContableCajaChicas()) {
					if(asientocontablecajachicaAux.getId()<0) {
						asientocontablecajachicasAux.add(asientocontablecajachicaAux);
					}		
				}
				this.iIdNuevoAsientoContableCajaChica=0L;
				this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().removeAll(asientocontablecajachicasAux);
					
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(AsientoContableCajaChica asientocontablecajachicaAux:this.asientocontablecajachicas) {
					if(asientocontablecajachicaAux.getId()<0) {
						asientocontablecajachicasAux.add(asientocontablecajachicaAux);
					}		
				}
				this.iIdNuevoAsientoContableCajaChica=0L;
				this.asientocontablecajachicas.removeAll(asientocontablecajachicasAux);
			}	
		} else {			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				if(esParaCancelar && this.isEsNuevoAsientoContableCajaChica 
					&& this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().size()>0
					) {
					asientocontablecajachicaAux=this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().get(this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().size() - 1);
				
					if(asientocontablecajachicaAux.getId()<0) {
						this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().remove(asientocontablecajachicaAux);
					}
				}
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				if(esParaCancelar && this.isEsNuevoAsientoContableCajaChica && this.asientocontablecajachicas.size()>0) {
					asientocontablecajachicaAux=this.asientocontablecajachicas.get(this.asientocontablecajachicas.size() - 1);
				
					if(asientocontablecajachicaAux.getId()<0) {
						this.asientocontablecajachicas.remove(asientocontablecajachicaAux);
					}
				}
			}	
		}
	}
	
	public void cancelarNuevoAsientoContableCajaChica(Boolean esParaCancelar) throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			if(asientocontablecajachica.getId()<0) {
				this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().remove(this.asientocontablecajachica);
			}					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			if(asientocontablecajachica.getId()<0) {
				this.asientocontablecajachicas.remove(this.asientocontablecajachica);
			}
		}			
	}
	
	public void setEstadosInicialesAsientoContableCajaChica(List<AsientoContableCajaChica> asientocontablecajachicasAux) throws Exception {
		AsientoContableCajaChicaConstantesFunciones.setEstadosInicialesAsientoContableCajaChica(asientocontablecajachicasAux);
	}
	
	public void setEstadosInicialesAsientoContableCajaChica(AsientoContableCajaChica asientocontablecajachicaAux) throws Exception {
		AsientoContableCajaChicaConstantesFunciones.setEstadosInicialesAsientoContableCajaChica(asientocontablecajachicaAux);		
	}
	
	public void nuevo() throws Exception {
		try	{
			//ESTA VALIDADO EN FUNCION ACTUALIZAR
			//if(this.validarAsientoContableCajaChicaActual()) {
				this.ejecutarMantenimiento(MaintenanceType.NUEVO);
				
				this.actualizarEstadoCeldasBotonesAsientoContableCajaChica("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
				
			//}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void actualizar() throws Exception {
		try	{
			if(this.validarAsientoContableCajaChicaActual()) {
				if(!this.isEsNuevoAsientoContableCajaChica) {
					this.ejecutarMantenimiento(MaintenanceType.ACTUALIZAR);
					
					this.actualizarEstadoCeldasBotonesAsientoContableCajaChica("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
					
				} else {					
					this.nuevo();
					this.isEsNuevoAsientoContableCajaChica=false;
				}
				
				//SE CANCELA AL FINAL DEL PROCESO JBUTTONACTUALIZAR
				//this.cancelar(false);
			}		
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void eliminar() throws Exception {
		try	{	
			if(this.validarAsientoContableCajaChicaActual()) {
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE ELIMINAR EL/LA Asiento Contable Caja Chica ?", "MANTENIMIENTO DE Asiento Contable Caja Chica", JOptionPane.OK_CANCEL_OPTION) == 0) {
					this.ejecutarMantenimiento(MaintenanceType.ELIMINAR);			
					this.actualizarEstadoCeldasBotonesAsientoContableCajaChica("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
				}
			
			}
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void guardarCambios() throws Exception {
		try	{
			this.ejecutarMantenimiento(MaintenanceType.GUARDARCAMBIOS);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarAsignar(AsientoContableCajaChica asientocontablecajachica) throws Exception {
		AsientoContableCajaChicaConstantesFunciones.seleccionarAsignar(this.asientocontablecajachica,asientocontablecajachica);
	}
	
	public void seleccionar() throws Exception {
		try	{
			//ACTUALIZO EL PERMISO ACTUALIZAR CON EL PERMISO ACTUALIZAR ORIGINAL ESTE PERMISO SE UTILIZA PARA EL NUEVO TAMBIEN
			this.isPermisoActualizarAsientoContableCajaChica=this.isPermisoActualizarOriginalAsientoContableCajaChica;
			
			
			this.seleccionarAsignar(asientocontablecajachica);
			
			

			idEmpleadoActual=asientocontablecajachica.getid_empleado();
			this.seleccionarEmpleadoActual();

			idClienteActual=asientocontablecajachica.getid_cliente();
			this.seleccionarClienteActual();

			idCuentaContableActual=asientocontablecajachica.getid_cuenta_contable();
			this.seleccionarCuentaContableActual();
			
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			AsientoContableCajaChicaConstantesFunciones.quitarEspaciosAsientoContableCajaChica(this.asientocontablecajachica,this.arrDatoGeneral);
			
			
			this.actualizarEstadoCeldasBotonesAsientoContableCajaChica("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarBusqueda(Long id) throws Exception {
		try	{
			this.asientocontablecajachicaSessionBean.setsFuncionBusquedaRapida(this.asientocontablecajachicaSessionBean.getsFuncionBusquedaRapida().replace("TO_REPLACE", id.toString()));
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	//BUSQUEDA INTERNA FK
	public void seleccionarEmpleadoActual() throws Exception {
		try	{
			Empleado empleadoAux=new Empleado();

			if(this.idEmpleadoActual != null && this.idEmpleadoActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					empleadoLogic.getEntityWithConnection(this.idEmpleadoActual);
					empleadoAux= empleadoLogic.getEmpleado();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				empleadosForeignKey=new ArrayList<Empleado>();
				empleadosForeignKey.add(empleadoAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarClienteActual() throws Exception {
		try	{
			Cliente clienteAux=new Cliente();

			if(this.idClienteActual != null && this.idClienteActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					clienteLogic.getEntityWithConnection(this.idClienteActual);
					clienteAux= clienteLogic.getCliente();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				clientesForeignKey=new ArrayList<Cliente>();
				clientesForeignKey.add(clienteAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	public void seleccionarCuentaContableActual() throws Exception {
		try	{
			CuentaContable cuentacontableAux=new CuentaContable();

			if(this.idCuentaContableActual != null && this.idCuentaContableActual>0) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					cuentacontableLogic.getEntityWithConnection(this.idCuentaContableActual);
					cuentacontableAux= cuentacontableLogic.getCuentaContable();
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE

				cuentacontablesForeignKey=new ArrayList<CuentaContable>();
				cuentacontablesForeignKey.add(cuentacontableAux);
			}

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}
	
	public void cancelar() throws Exception {
		this.cancelar(true);
	}
	
	public void cancelar(Boolean esParaCancelar) throws Exception {
		try {
														
			
			//SE UTILIZA COLUMNA ELIMINAR EN TABLA
			if(this.isEsNuevoAsientoContableCajaChica) {
				//NO CANCELA TODOS NUEVOS POR FUNCIONALIDAD GUARDAR CAMBIOS
				//this.cancelarNuevosAsientoContableCajaChica(esParaCancelar);				
				this.cancelarNuevoAsientoContableCajaChica(esParaCancelar);								
			}
			
			this.asientocontablecajachica=new AsientoContableCajaChica();
			
			this.inicializarAsientoContableCajaChica();
			
			this.actualizarEstadoCeldasBotonesAsientoContableCajaChica("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);			
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void inicializarAsientoContableCajaChica() throws Exception {
		try {
			AsientoContableCajaChicaConstantesFunciones.inicializarAsientoContableCajaChica(this.asientocontablecajachica);
			
			} catch(Exception e) {
			throw e;
		}
	}
	
	public void anteriores()throws Exception {
		try	{
			//this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			
			if(this.iNumeroPaginacionPagina-this.iNumeroPaginacion<this.iNumeroPaginacion) {
				this.iNumeroPaginacionPagina=0;		
			} else {
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina-this.iNumeroPaginacion;
			}
			
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void siguientes()throws Exception {
		try	{			
			if(this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().size()>0) {
					
				this.iNumeroPaginacionPagina=this.iNumeroPaginacionPagina+this.iNumeroPaginacion;
			}
				
			this.procesarBusqueda(this.sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void generarReporteAsientoContableCajaChicas(String sAccionBusqueda,List<AsientoContableCajaChica> asientocontablecajachicasParaReportes) throws Exception {
		//HttpSession httpSession = httpServletRequest.getSession();
		Long iIdUsuarioSesion=0L;	
		
		
		if(usuarioActual==null) {
			this.usuarioActual=new Usuario();
		}
		
		iIdUsuarioSesion=usuarioActual.getId();
		
		String sPathReportes="";
		
		InputStream reportFile=null;
		InputStream imageFile=null;
			
		imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		String sPathReporteFinal="";
		
		if(!esReporteAccionProceso) {
			if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
				if(!this.esReporteDinamico) {
					sPathReporteFinal="AsientoContableCajaChica"+this.sTipoReporteExtra+"Design.jasper";
					reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
				} else {
					sPathReporteFinal=this.sPathReporteDinamico;
					reportFile = new FileInputStream(sPathReporteFinal);
				}
			} else {
				sPathReporteFinal="AsientoContableCajaChicaMasterRelaciones"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);
				//sPathReportes=reportFile.getPath().replace("AsientoContableCajaChicaMasterRelacionesDesign.jasper", "");
			}
		} else {
				sPathReporteFinal="AsientoContableCajaChica"+this.sTipoReporteExtra+"Design.jasper";
				reportFile = AuxiliarReportes.class.getResourceAsStream(sPathReporteFinal);	
		}
		
		if(reportFile==null) {
			throw new JRRuntimeException(sPathReporteFinal+" no existe");
		}
		
		String sUsuario="";
		
		if(usuarioActual!=null) {
			sUsuario=usuarioActual.getuser_name();
		}
		
		Map<String, Object> parameters = new HashMap<String, Object>();
		parameters.put("usuario", sUsuario);
		
		parameters.put("titulo", Funciones.GetTituloSistemaReporte(this.parametroGeneralSg,this.moduloActual,this.usuarioActual));
		parameters.put("subtitulo", "Reporte De  Asiento Contable Caja Chicas");		
		parameters.put("busquedapor", AsientoContableCajaChicaConstantesFunciones.getNombreIndice(sAccionBusqueda)+sDetalleReporte);
		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			parameters.put("SUBREPORT_DIR", sPathReportes);
		}
		
		parameters.put("con_grafico", this.conGraficoReporte);
		
		JasperReport jasperReport = (JasperReport)JRLoader.loadObject(reportFile);
				
		this.cargarDatosCliente();
		
		ArrayList<Classe> classes=new ArrayList<Classe>();		
		
		if(this.sTipoReporte.equals("RELACIONES")) {//isEsReporteRelaciones
			
			classes.add(new Classe(DetalleAsientoContableCajaChica.class));
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {		
				try	{
					
					AsientoContableCajaChicaLogic asientocontablecajachicaLogicAuxiliar=new AsientoContableCajaChicaLogic();
					asientocontablecajachicaLogicAuxiliar.setDatosCliente(asientocontablecajachicaLogic.getDatosCliente());				
					asientocontablecajachicaLogicAuxiliar.setAsientoContableCajaChicas(asientocontablecajachicasParaReportes);
					
					asientocontablecajachicaLogicAuxiliar.cargarRelacionesLoteForeignKeyAsientoContableCajaChicaWithConnection(); //deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes, "");
					
					asientocontablecajachicasParaReportes=asientocontablecajachicaLogicAuxiliar.getAsientoContableCajaChicas();
					
					//asientocontablecajachicaLogic.getNewConnexionToDeep();
					
					//for (AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasParaReportes) {
					//	asientocontablecajachicaLogic.deepLoad(asientocontablecajachica, false, DeepLoadType.INCLUDE, classes);
					//}						
					//asientocontablecajachicaLogic.commitNewConnexionToDeep();
					
						
				} catch(Exception e) {
					throw e;
					
				} finally {
					//asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			//ARCHITECTURE		
			
		
			
			

			InputStream reportFileDetalleAsientoContableCajaChica = AuxiliarReportes.class.getResourceAsStream("DetalleAsientoContableCajaChicaDetalleRelacionesDesign.jasper");
			parameters.put("subreport_detalleasientocontablecajachica", reportFileDetalleAsientoContableCajaChica);
		} else {
			//FK DEBERIA TRAERSE DE ANTEMANO
			
		}
								
		
		//CLASSES PARA REPORTES OBJETOS RELACIONADOS
		if(!this.sTipoReporte.equals("RELACIONES")) {//!isEsReporteRelaciones
			classes=new ArrayList<Classe>();
		}
		
		JRBeanArrayDataSource jrbeanArrayDataSourceAsientoContableCajaChica=null;
		
		if(this.sTipoReporteExtra!=null && !this.sTipoReporteExtra.equals("")) {
			AsientoContableCajaChicaConstantesFunciones.S_TIPOREPORTE_EXTRA=this.sTipoReporteExtra;
		} else {
			AsientoContableCajaChicaConstantesFunciones.S_TIPOREPORTE_EXTRA="";
		}
		
		jrbeanArrayDataSourceAsientoContableCajaChica=new JRBeanArrayDataSource(AsientoContableCajaChicaJInternalFrame.TraerAsientoContableCajaChicaBeans(asientocontablecajachicasParaReportes,classes).toArray());
		
		jasperPrint = JasperFillManager.fillReport(jasperReport,parameters,jrbeanArrayDataSourceAsientoContableCajaChica);
				
		
		String sPathDest=Constantes.SUNIDAD_ARCHIVOS+":/"+Constantes.SCONTEXTSERVER+"/"+AsientoContableCajaChicaConstantesFunciones.SCHEMA+"/reportes";
		
		File filePathDest = new File(sPathDest);
		
		if(!filePathDest.exists()) {
			filePathDest.mkdirs();				
		}
				
		String sDestFileName=sPathDest+"/"+AsientoContableCajaChicaConstantesFunciones.CLASSNAME;
				
		if(this.sTipoArchivoReporte=="VISUALIZAR") {
			JasperViewer jasperViewer = new JasperViewer(jasperPrint,false) ;
			jasperViewer.setVisible(true) ; 

		} else if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML") {	
			//JasperFillManager.fillReportToFile(reportFile.getAbsolutePath(),parameters, new JRBeanArrayDataSource(AsientoContableCajaChicaBean.TraerAsientoContableCajaChicaBeans(asientocontablecajachicasParaReportes).toArray()));
							
			if(this.sTipoArchivoReporte=="HTML") {
				sDestFileName+=".html";
				JasperExportManager.exportReportToHtmlFile(jasperPrint,sDestFileName);
					
			} else if(this.sTipoArchivoReporte=="PDF") {
				sDestFileName+=".pdf";
				JasperExportManager.exportReportToPdfFile(jasperPrint,sDestFileName);
			} else {
				sDestFileName+=".xml";
				JasperExportManager.exportReportToXmlFile(jasperPrint,sDestFileName, false);
			}	
			
		} else if(this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {
				
			if(this.sTipoArchivoReporte=="WORD") {
				sDestFileName+=".rtf";
					
				JRRtfExporter exporter = new JRRtfExporter();
		
				exporter.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporter.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
		
				exporter.exportReport();
				
			} else	{
				sDestFileName+=".xls";
					
				JRXlsExporter exporterXls = new JRXlsExporter();
		
				exporterXls.setParameter(JRExporterParameter.JASPER_PRINT, jasperPrint);
				exporterXls.setParameter(JRExporterParameter.OUTPUT_FILE_NAME, sDestFileName);
				exporterXls.setParameter(JRXlsExporterParameter.IS_ONE_PAGE_PER_SHEET, Boolean.TRUE);
		
				exporterXls.exportReport();
			}
			
		} else if(this.sTipoArchivoReporte=="EXCEL2"||this.sTipoArchivoReporte=="EXCEL2_2") {
			//sDestFileName+=".xlsx";
			
			if(this.sTipoReporte.equals("NORMAL")) {
				this.generarExcelReporteAsientoContableCajaChicas(sAccionBusqueda,sTipoArchivoReporte,asientocontablecajachicasParaReportes);
			
			} else if(this.sTipoReporte.equals("FORMULARIO")){
				this.generarExcelReporteVerticalAsientoContableCajaChicas(sAccionBusqueda,sTipoArchivoReporte,asientocontablecajachicasParaReportes,false);
			
			} else if(this.sTipoReporte.equals("DINAMICO")){
				
				if(this.sTipoReporteDinamico.equals("NORMAL")) {
					
					this.jButtonGenerarExcelReporteDinamicoAsientoContableCajaChicaActionPerformed(null);
					//this.generarExcelReporteAsientoContableCajaChicas(sAccionBusqueda,sTipoArchivoReporte,asientocontablecajachicasParaReportes);
					
				
				} else if(this.sTipoReporteDinamico.equals("FORMULARIO")){
					this.generarExcelReporteVerticalAsientoContableCajaChicas(sAccionBusqueda,sTipoArchivoReporte,asientocontablecajachicasParaReportes,true);
				
				} else if(this.sTipoReporteDinamico.equals("RELACIONES")){
					this.generarExcelReporteRelacionesAsientoContableCajaChicas(sAccionBusqueda,sTipoArchivoReporte,asientocontablecajachicasParaReportes,true);
				}
				
			} else if(this.sTipoReporte.equals("RELACIONES")){
				this.generarExcelReporteRelacionesAsientoContableCajaChicas(sAccionBusqueda,sTipoArchivoReporte,asientocontablecajachicasParaReportes,false);
			}
		}
		
		if(this.sTipoArchivoReporte=="HTML"||this.sTipoArchivoReporte=="PDF"||this.sTipoArchivoReporte=="XML"||this.sTipoArchivoReporte=="WORD"||this.sTipoArchivoReporte=="EXCEL") {				
			JOptionPane.showMessageDialog(this,"REPORTE "+sDestFileName+" GENERADO SATISFACTORIAMENTE","REPORTES ",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteAsientoContableCajaChicas(String sAccionBusqueda,String sTipoArchivoReporte,List<AsientoContableCajaChica> asientocontablecajachicasParaReportes) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"asientocontablecajachica";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("AsientoContableCajaChicas");
         
        int iRow = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderAsientoContableCajaChica("NORMAL",row,workbook);
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux=null;
		
		int i=0;
		
      	for(AsientoContableCajaChica asientocontablecajachica : asientocontablecajachicasParaReportes) {            
			row = sheet.createRow(iRow++);
			iCell = 0;
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				cellStyleDataAux=cellStyleData;
			}
			
			AsientoContableCajaChicaConstantesFunciones.generarExcelReporteDataAsientoContableCajaChica("NORMAL",row,workbook,asientocontablecajachica,cellStyleDataAux);
		
			
			/*
            Cell cell0 = row.createCell(0);
            cell0.setCellValue(country.getName());
            Cell cell1 = row.createCell(1);
            cell1.setCellValue(country.getShortCode());
			*/
			
			i++;
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Asiento Contable Caja Chica",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteHeaderAsientoContableCajaChica(String sTipo,Row row,Workbook workbook) {
		
		AsientoContableCajaChicaConstantesFunciones.generarExcelReporteHeaderAsientoContableCajaChica(sTipo,row,workbook);
		
		/*
		Cell cell=null;
		int iCell=0;
		
		CellStyle cellStyle = workbook.createCellStyle();
		cellStyle.setFillBackgroundColor(IndexedColors.GREEN.getIndex());
		cellStyle.setFillPattern(CellStyle.ALIGN_FILL);
		*/
		
	}
	
	public void generarExcelReporteVerticalAsientoContableCajaChicas(String sAccionBusqueda,String sTipoArchivoReporte,List<AsientoContableCajaChica> asientocontablecajachicasParaReportes,Boolean paraDinamico) throws Exception {
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"asientocontablecajachica_vertical";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("AsientoContableCajaChicas");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		CellStyle cellStyle = Funciones2.getStyleTitulo(workbook,"ZEBRA");;
		
		CellStyle cellStyleTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL_VERTICAL");
		
		
		for(AsientoContableCajaChica asientocontablecajachica : asientocontablecajachicasParaReportes) {
			row = sheet.createRow(iRow++);
			iRowLast=iRow - 1;
			
			cell = row.createCell(0);
			cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.getAsientoContableCajaChicaDescripcion(asientocontablecajachica));
			cell.setCellStyle(cellStyleTitulo);
			
			sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
	
			


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(asientocontablecajachica.getempresa_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(asientocontablecajachica.getsucursal_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(asientocontablecajachica.getejercicio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(asientocontablecajachica.getperiodo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_IDUSUARIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDUSUARIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(asientocontablecajachica.getusuario_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(asientocontablecajachica.getanio_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_IDMES))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDMES);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(asientocontablecajachica.getmes_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_SECUENCIAL))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_SECUENCIAL);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(asientocontablecajachica.getsecuencial());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_IDMONEDA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDMONEDA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(asientocontablecajachica.getmoneda_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_FECHA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_FECHA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(asientocontablecajachica.getfecha());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPLEADO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPLEADO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(asientocontablecajachica.getempleado_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_IDESTADOASIENTOCONTABLECAJACHICA))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDESTADOASIENTOCONTABLECAJACHICA);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(asientocontablecajachica.getestadoasientocontablecajachica_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(Funciones2.getDescripcionBoolean(asientocontablecajachica.getes_proveedor()));


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_IDCLIENTE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDCLIENTE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(asientocontablecajachica.getcliente_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(asientocontablecajachica.gettransaccion_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPODOCUMENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPODOCUMENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(asientocontablecajachica.gettipodocumento_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_IDCUENTACONTABLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDCUENTACONTABLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(asientocontablecajachica.getcuentacontable_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(asientocontablecajachica.getdetalle());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(asientocontablecajachica.getmodulo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(asientocontablecajachica.gettipomovimiento_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(asientocontablecajachica.gettipotransaccionmodulo_descripcion());


			}


			if(!paraDinamico || (paraDinamico && this.existeColumnaReporteDinamico(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO))) {
				row = sheet.createRow(iRow++);

				cell = row.createCell(0);
				cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO);
				cell.setCellStyle(cellStyle);

				cell = row.createCell(1);
				cell.setCellValue(asientocontablecajachica.gettipomovimientomodulo_descripcion());


			}						
        }
        
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Asiento Contable Caja Chica",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	public void generarExcelReporteRelacionesAsientoContableCajaChicas(String sAccionBusqueda,String sTipoArchivoReporte,List<AsientoContableCajaChica> asientocontablecajachicasParaReportes,Boolean paraDinamico) throws Exception {
		
		ArrayList<Classe> classes=new ArrayList<Classe>();
		List<AsientoContableCajaChica> asientocontablecajachicasRespaldo=null;
		
		classes=AsientoContableCajaChicaConstantesFunciones.getClassesRelationshipsOfAsientoContableCajaChica(new ArrayList<Classe>(),DeepLoadType.NONE,false);
					
		this.datosDeep=new DatosDeep();
		
		this.datosDeep.setIsDeep(false);
		this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
		this.datosDeep.setClases(classes);
			
		this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
		this.datosCliente.setIsConDeep(true);	
		this.datosCliente.setIsConExportar(false);
		
						
		this.asientocontablecajachicaLogic.setDatosCliente(this.datosCliente);
		this.asientocontablecajachicaLogic.setDatosDeep(this.datosDeep);
		this.asientocontablecajachicaLogic.setIsConDeep(true);
		
		asientocontablecajachicasRespaldo=this.asientocontablecajachicaLogic.getAsientoContableCajaChicas();
		
		this.asientocontablecajachicaLogic.setAsientoContableCajaChicas(asientocontablecajachicasParaReportes);	
		this.asientocontablecajachicaLogic.deepLoadsWithConnection(false, DeepLoadType.INCLUDE, classes,"");
		
		asientocontablecajachicasParaReportes=this.asientocontablecajachicaLogic.getAsientoContableCajaChicas();
		this.asientocontablecajachicaLogic.setAsientoContableCajaChicas(asientocontablecajachicasRespaldo);
		
		
	 	Workbook workbook = null;
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"asientocontablecajachica_relacion";
		
		if(sTipoArchivoReporte=="EXCEL2") {
			workbook = new HSSFWorkbook();
			sPath+=".xls";
		
		} else if(sTipoArchivoReporte=="EXCEL2_2") {
			workbook = new XSSFWorkbook();
			sPath+=".xlsx";			
		}
		
		
		
		Sheet sheet = workbook.createSheet("AsientoContableCajaChicas");
         
        int iRow = 0;
		int iRowLast = 0;
		int iCell = 0;
		Row row =null;
		Cell cell=null;
		
		row = sheet.createRow(iRow++);
		
		this.generarExcelReporteHeaderAsientoContableCajaChica("NORMAL",row,workbook);
		
		int i=0;
		int i2=0;
		
		CellStyle cellStyleData = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataTitulo = Funciones2.getStyleTitulo(workbook,"PRINCIPAL");
		CellStyle cellStyleDataZebra = Funciones2.getStyleTitulo(workbook,"ZEBRA");
		CellStyle cellStyleDataAux =null;
		CellStyle cellStyleDataAuxHijo =null;
		
		for(AsientoContableCajaChica asientocontablecajachica : asientocontablecajachicasParaReportes) {			
			if(i!=0) {
				row = sheet.createRow(iRow++);				
				this.generarExcelReporteHeaderAsientoContableCajaChica("NORMAL",row,workbook);
			}
			
			cellStyleDataAux=null;
			
			if(i%2==0) {
				//cellStyleDataAux=cellStyleData;
			}
			
			row = sheet.createRow(iRow++);						
			AsientoContableCajaChicaConstantesFunciones.generarExcelReporteDataAsientoContableCajaChica("NORMAL",row,workbook,asientocontablecajachica,cellStyleDataAux);
		
			
			


				//DetalleAsientoContableCajaChica
			if(!paraDinamico || (paraDinamico && this.existeRelacionReporteDinamico(DetalleAsientoContableCajaChicaConstantesFunciones.SCLASSWEBTITULO))) {

				if(asientocontablecajachica.getDetalleAsientoContableCajaChicas()!=null && asientocontablecajachica.getDetalleAsientoContableCajaChicas().size()>0) {
					row = sheet.createRow(iRow++);

					iCell=1;iRowLast=iRow-1; cell = row.createCell(iCell++);cell.setCellStyle(cellStyleDataTitulo);sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,1,5));
					cell.setCellValue(DetalleAsientoContableCajaChicaConstantesFunciones.SCLASSWEBTITULO);

					row = sheet.createRow(iRow++);
					DetalleAsientoContableCajaChicaConstantesFunciones.generarExcelReporteHeaderDetalleAsientoContableCajaChica("RELACIONADO",row,workbook);
				}

				if(asientocontablecajachica.getDetalleAsientoContableCajaChicas()!=null) {
					i2=0;
					for(DetalleAsientoContableCajaChica detalleasientocontablecajachica : asientocontablecajachica.getDetalleAsientoContableCajaChicas()) {
						row = sheet.createRow(iRow++);

						cellStyleDataAuxHijo=null;
						if(i2%2==0) {
							cellStyleDataAuxHijo=cellStyleData;
						}

						DetalleAsientoContableCajaChicaConstantesFunciones.generarExcelReporteDataDetalleAsientoContableCajaChica("RELACIONADO",row,workbook,detalleasientocontablecajachica,cellStyleDataAuxHijo);
						i2++;
					}
				}
			}
			
			i++;
        }
        
		/*
		row = sheet.createRow(iRow++);
		iRowLast=iRow - 1;
			
		cell = row.createCell(0);
		cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.getAsientoContableCajaChicaDescripcion(asientocontablecajachica));
		cell.setCellStyle(cellStyleTitulo);
			
		sheet.addMergedRegion(new CellRangeAddress(iRowLast,iRowLast,0,2));			
		*/
		
			
		
        FileOutputStream fileOutputStream = new FileOutputStream(sPath);
		
        workbook.write(fileOutputStream);
		
        fileOutputStream.close();
		
		Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
		if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
			JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Asiento Contable Caja Chica",JOptionPane.INFORMATION_MESSAGE);
		}
	}
	
	
	public Boolean existeColumnaReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public Boolean existeRelacionReporteDinamico(String sColumna) {
		Boolean existe=false;
		
		Reporte reporte=new Reporte();
		
		
		for(int index:this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjListRelacionesSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjListRelacionesSelectReporte().getModel().getElementAt(index);
			
			if(sColumna.equals(reporte.getsCodigo())) {
				existe=true;
				break;
			}
		
		}
		
		
		return existe;
	}
	
	public void startProcessAsientoContableCajaChica() throws Exception {		
		this.startProcessAsientoContableCajaChica(true);
	}
	
	public void startProcessAsientoContableCajaChica(Boolean conSplash) throws Exception {		
		//FuncionesSwing.enableDisablePanels(false,this.jTabbedPaneBusquedasAsientoContableCajaChica ,this.jPanelParametrosReportesAsientoContableCajaChica, this.jScrollPanelDatosAsientoContableCajaChica,this.jPanelPaginacionAsientoContableCajaChica, this.jScrollPanelDatosEdicionAsientoContableCajaChica, this.jPanelAccionesAsientoContableCajaChica,this.jPanelAccionesFormularioAsientoContableCajaChica,this.jmenuBarAsientoContableCajaChica,this.jmenuBarDetalleAsientoContableCajaChica,this.jTtoolBarAsientoContableCajaChica,this.jTtoolBarDetalleAsientoContableCajaChica);		
		
		final JTabbedPane jTabbedPaneBusquedasAsientoContableCajaChica=this.jTabbedPaneBusquedasAsientoContableCajaChica; 
		
		final JPanel jPanelParametrosReportesAsientoContableCajaChica=this.jPanelParametrosReportesAsientoContableCajaChica;
		//final JScrollPane jScrollPanelDatosAsientoContableCajaChica=this.jScrollPanelDatosAsientoContableCajaChica;
		final JTable jTableDatosAsientoContableCajaChica=this.jTableDatosAsientoContableCajaChica;		
		final JPanel jPanelPaginacionAsientoContableCajaChica=this.jPanelPaginacionAsientoContableCajaChica;
		//final JScrollPane jScrollPanelDatosEdicionAsientoContableCajaChica=this.jScrollPanelDatosEdicionAsientoContableCajaChica;
		final JPanel jPanelAccionesAsientoContableCajaChica=this.jPanelAccionesAsientoContableCajaChica;
		
		JPanel jPanelCamposAuxiliarAsientoContableCajaChica=new JPanelMe();
		JPanel jPanelAccionesFormularioAuxiliarAsientoContableCajaChica=new JPanelMe();
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
			jPanelCamposAuxiliarAsientoContableCajaChica=this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelCamposAsientoContableCajaChica;
			jPanelAccionesFormularioAuxiliarAsientoContableCajaChica=this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelAccionesFormularioAsientoContableCajaChica;
		}
		
		final JPanel jPanelCamposAsientoContableCajaChica=jPanelCamposAuxiliarAsientoContableCajaChica;
		final JPanel jPanelAccionesFormularioAsientoContableCajaChica=jPanelAccionesFormularioAuxiliarAsientoContableCajaChica;
		
		
		final JMenuBar jmenuBarAsientoContableCajaChica=this.jmenuBarAsientoContableCajaChica;
		final JToolBar jTtoolBarAsientoContableCajaChica=this.jTtoolBarAsientoContableCajaChica;		
		
		
		JMenuBar jmenuBarDetalleAuxiliarAsientoContableCajaChica=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarAsientoContableCajaChica=new JToolBar();		
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
			jmenuBarDetalleAuxiliarAsientoContableCajaChica=this.jInternalFrameDetalleFormAsientoContableCajaChica.jmenuBarDetalleAsientoContableCajaChica;
			jTtoolBarDetalleAuxiliarAsientoContableCajaChica=this.jInternalFrameDetalleFormAsientoContableCajaChica.jTtoolBarDetalleAsientoContableCajaChica;
		}
		
		final JMenuBar jmenuBarDetalleAsientoContableCajaChica=jmenuBarDetalleAuxiliarAsientoContableCajaChica;
		final JToolBar jTtoolBarDetalleAsientoContableCajaChica=jTtoolBarDetalleAuxiliarAsientoContableCajaChica;		
		
		
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("START");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasAsientoContableCajaChica;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesAsientoContableCajaChica;
			processRunnable.jTableDatos=jTableDatosAsientoContableCajaChica;
			processRunnable.jPanelCampos=jPanelCamposAsientoContableCajaChica;
			processRunnable.jPanelPaginacion=jPanelPaginacionAsientoContableCajaChica;
			processRunnable.jPanelAcciones=jPanelAccionesAsientoContableCajaChica;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioAsientoContableCajaChica;
			
			
			processRunnable.jmenuBar=jmenuBarAsientoContableCajaChica;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleAsientoContableCajaChica;
			processRunnable.jTtoolBar=jTtoolBarAsientoContableCajaChica;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleAsientoContableCajaChica;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasAsientoContableCajaChica ,jPanelParametrosReportesAsientoContableCajaChica,jTableDatosAsientoContableCajaChica, /*jScrollPanelDatosAsientoContableCajaChica,*/jPanelCamposAsientoContableCajaChica,jPanelPaginacionAsientoContableCajaChica, /*jScrollPanelDatosEdicionAsientoContableCajaChica,*/ jPanelAccionesAsientoContableCajaChica,jPanelAccionesFormularioAsientoContableCajaChica,jmenuBarAsientoContableCajaChica,jmenuBarDetalleAsientoContableCajaChica,jTtoolBarAsientoContableCajaChica,jTtoolBarDetalleAsientoContableCajaChica);
		
			startProcess();//this.
		}
						
		/*
		if(conSplash) {
			SwingUtilities.invokeLater(new Runnable() {
			      public void run() {
			    	  try {
							FuncionesSwing.enableDisablePanels(false,jTabbedPaneBusquedasAsientoContableCajaChica ,jPanelParametrosReportesAsientoContableCajaChica, jScrollPanelDatosAsientoContableCajaChica,jPanelPaginacionAsientoContableCajaChica, jScrollPanelDatosEdicionAsientoContableCajaChica, jPanelAccionesAsientoContableCajaChica,jPanelAccionesFormularioAsientoContableCajaChica,jmenuBarAsientoContableCajaChica,jmenuBarDetalleAsientoContableCajaChica,jTtoolBarAsientoContableCajaChica,jTtoolBarDetalleAsientoContableCajaChica);
						
							startProcess();//this.
							
						} catch (Exception e) {
							// TODO Auto-generated catch block
							e.printStackTrace();
						}
			      }
			});
		}
		*/
	}
	
	public void finishProcessAsientoContableCajaChica() {// throws Exception 
		this.finishProcessAsientoContableCajaChica(true);
	}
	
	public void finishProcessAsientoContableCajaChica(Boolean conSplash) {// throws Exception 
		//FuncionesSwing.enableDisablePanels(true,this.jTabbedPaneBusquedasAsientoContableCajaChica ,this.jPanelParametrosReportesAsientoContableCajaChica, this.jScrollPanelDatosAsientoContableCajaChica,this.jPanelPaginacionAsientoContableCajaChica, this.jScrollPanelDatosEdicionAsientoContableCajaChica, this.jPanelAccionesAsientoContableCajaChica,this.jPanelAccionesFormularioAsientoContableCajaChica,this.jmenuBarAsientoContableCajaChica,this.jmenuBarDetalleAsientoContableCajaChica,this.jTtoolBarAsientoContableCajaChica,this.jTtoolBarDetalleAsientoContableCajaChica);		
		
		final JTabbedPane jTabbedPaneBusquedasAsientoContableCajaChica=this.jTabbedPaneBusquedasAsientoContableCajaChica; 
		
		final JPanel jPanelParametrosReportesAsientoContableCajaChica=this.jPanelParametrosReportesAsientoContableCajaChica;
		//final JScrollPane jScrollPanelDatosAsientoContableCajaChica=this.jScrollPanelDatosAsientoContableCajaChica;
		final JTable jTableDatosAsientoContableCajaChica=this.jTableDatosAsientoContableCajaChica;		
		final JPanel jPanelPaginacionAsientoContableCajaChica=this.jPanelPaginacionAsientoContableCajaChica;
		//final JScrollPane jScrollPanelDatosEdicionAsientoContableCajaChica=this.jScrollPanelDatosEdicionAsientoContableCajaChica;
		final JPanel jPanelAccionesAsientoContableCajaChica=this.jPanelAccionesAsientoContableCajaChica;
		
		JPanel jPanelCamposAuxiliarAsientoContableCajaChica=new JPanel();
		JPanel jPanelAccionesFormularioAuxiliarAsientoContableCajaChica=new JPanel();
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
			jPanelCamposAuxiliarAsientoContableCajaChica=this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelCamposAsientoContableCajaChica;
			jPanelAccionesFormularioAuxiliarAsientoContableCajaChica=this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelAccionesFormularioAsientoContableCajaChica;
		}
		
		final JPanel jPanelCamposAsientoContableCajaChica=jPanelCamposAuxiliarAsientoContableCajaChica;
		final JPanel jPanelAccionesFormularioAsientoContableCajaChica=jPanelAccionesFormularioAuxiliarAsientoContableCajaChica;
		
		
		final JMenuBar jmenuBarAsientoContableCajaChica=this.jmenuBarAsientoContableCajaChica;		
		final JToolBar jTtoolBarAsientoContableCajaChica=this.jTtoolBarAsientoContableCajaChica;
				
		JMenuBar jmenuBarDetalleAuxiliarAsientoContableCajaChica=new JMenuBar();
		JToolBar jTtoolBarDetalleAuxiliarAsientoContableCajaChica=new JToolBar();
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
			jmenuBarDetalleAuxiliarAsientoContableCajaChica=this.jInternalFrameDetalleFormAsientoContableCajaChica.jmenuBarDetalleAsientoContableCajaChica;
			jTtoolBarDetalleAuxiliarAsientoContableCajaChica=this.jInternalFrameDetalleFormAsientoContableCajaChica.jTtoolBarDetalleAsientoContableCajaChica;		
		}
		
		final JMenuBar jmenuBarDetalleAsientoContableCajaChica=jmenuBarDetalleAuxiliarAsientoContableCajaChica;
		final JToolBar jTtoolBarDetalleAsientoContableCajaChica=jTtoolBarDetalleAuxiliarAsientoContableCajaChica;
		
		
		
		if(Constantes2.CON_PROCESO_HILO) {
			Thread threadRunnableProcess;
			ProcessRunnable processRunnable;
			
			processRunnable=new ProcessRunnable();
			
			processRunnable.setsTipo("END");
			processRunnable.setDesktop(jDesktopPane);
			processRunnable.setModuloActual(moduloActual);
			processRunnable.setModuloUsuarioSeleccionado(moduloActual);
			processRunnable.setOpcionActual(opcionActual);
			processRunnable.setParametroGeneralSg(parametroGeneralSg);
			processRunnable.setParametroGeneralUsuario(parametroGeneralUsuario);
			processRunnable.setResumenUsuarioActual(resumenUsuarioActual);
			processRunnable.setUsuarioActual(usuarioActual);
			
			processRunnable.jTabbedPaneBusquedas=jTabbedPaneBusquedasAsientoContableCajaChica;
			processRunnable.jPanelParametrosReportes=jPanelParametrosReportesAsientoContableCajaChica;
			processRunnable.jTableDatos=jTableDatosAsientoContableCajaChica;
			processRunnable.jPanelCampos=jPanelCamposAsientoContableCajaChica;
			processRunnable.jPanelPaginacion=jPanelPaginacionAsientoContableCajaChica;
			processRunnable.jPanelAcciones=jPanelAccionesAsientoContableCajaChica;
			processRunnable.jPanelAccionesFormulario=jPanelAccionesFormularioAsientoContableCajaChica;
			
			
			processRunnable.jmenuBar=jmenuBarAsientoContableCajaChica;
			processRunnable.jmenuBarDetalle=jmenuBarDetalleAsientoContableCajaChica;
			processRunnable.jTtoolBar=jTtoolBarAsientoContableCajaChica;
			processRunnable.jTtoolBarDetalle=jTtoolBarDetalleAsientoContableCajaChica;
			processRunnable.jInternalFrameBase=this;
			
			//processRunnable.CargarObjetosRendimientoCriticoModuloInventario();
			
			
			threadRunnableProcess=new Thread(processRunnable);//.start();
					
			threadRunnableProcess.start();
			
		} else {
			if(conSplash) {
				SwingUtilities.invokeLater(new RunnableProceso(true,this,jTabbedPaneBusquedasAsientoContableCajaChica ,jPanelParametrosReportesAsientoContableCajaChica, jTableDatosAsientoContableCajaChica,/*jScrollPanelDatosAsientoContableCajaChica,*/jPanelCamposAsientoContableCajaChica,jPanelPaginacionAsientoContableCajaChica, /*jScrollPanelDatosEdicionAsientoContableCajaChica,*/ jPanelAccionesAsientoContableCajaChica,jPanelAccionesFormularioAsientoContableCajaChica,jmenuBarAsientoContableCajaChica,jmenuBarDetalleAsientoContableCajaChica,jTtoolBarAsientoContableCajaChica,jTtoolBarDetalleAsientoContableCajaChica));
			}
		}						
	}
	
	/*
	public void habilitarDeshabilitarControlesAsientoContableCajaChica(Boolean esHabilitar,Boolean conDetalle) {
		this.habilitarDeshabilitarToolBarAsientoContableCajaChica(esHabilitar,conDetalle);
		this.habilitarDeshabilitarMenuAsientoContableCajaChica(esHabilitar,conDetalle);
	}
	
	public void habilitarDeshabilitarToolBarAsientoContableCajaChica(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jTtoolBarAsientoContableCajaChica,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jTtoolBarDetalleAsientoContableCajaChica,esHabilitar,1,1);
		}
	}
	
	public void habilitarDeshabilitarMenuAsientoContableCajaChica(Boolean esHabilitar,Boolean conDetalle) {
		FuncionesSwing.enableDisableComponents(this.jmenuBarAsientoContableCajaChica,esHabilitar,1,1);
		
		if(conDetalle) {
			FuncionesSwing.enableDisableComponents(this.jmenuBarDetalleAsientoContableCajaChica,esHabilitar,1,1);
		}
	}
	*/
	
	
	
	public void procesarBusqueda(String sAccionBusqueda) throws Exception {		
		String  finalQueryPaginacion=this.asientocontablecajachicaConstantesFunciones.getsFinalQueryAsientoContableCajaChica();
		String  finalQueryPaginacionTodos=this.asientocontablecajachicaConstantesFunciones.getsFinalQueryAsientoContableCajaChica();
		
		Boolean esBusqueda=false;
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!sAccionBusqueda.equals("Todos"))	{
			esBusqueda=true;
		}
		
		this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
		this.arrDatoGeneralNo= new  ArrayList<String>();
		
		ArrayList<String> arrColumnasGlobalesNo=AsientoContableCajaChicaConstantesFunciones.getArrayColumnasGlobalesNoAsientoContableCajaChica(this.arrDatoGeneral);
		ArrayList<String> arrColumnasGlobales=AsientoContableCajaChicaConstantesFunciones.getArrayColumnasGlobalesAsientoContableCajaChica(this.arrDatoGeneral,arrColumnasGlobalesNo);
		
			//SE CAMBIA FUNCIONALIDAD DE MODULO POR ALGUNO PRIORITARIO
			Modulo moduloActualAux=new Modulo();
			
			moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);
			
		String  finalQueryGlobal="";
		
		finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,!esBusqueda,esBusqueda,arrColumnasGlobales,AsientoContableCajaChicaConstantesFunciones.TABLENAME);
		
		String sOrderBy="";
		
		
		sOrderBy=Funciones2.getFinalQueryOrderBy(this.arrOrderBy);
		
		
		if(!sOrderBy.equals("")) {			
			finalQueryPaginacion=sOrderBy;
			finalQueryPaginacionTodos=sOrderBy;
		}
		
		
		//INICIALIZA ELIMINADOS
		this.asientocontablecajachicasEliminados= new ArrayList<AsientoContableCajaChica>();
		
		if(!this.isEntroOnLoad) {
			this.onLoad();
		}/* else {
			this.isEntroOnLoad=false;
		}*/
		
		
		
				
		try	{		
			
			//this.startProcessAsientoContableCajaChica();
		
				///*AsientoContableCajaChicaSessionBean*/this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			
			if(this.asientocontablecajachicaSessionBean==null) {
				this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}
			
			//ACTUALIZA EL TAMANIO DE PAGINACION DESDE EL COMBO
			if(this.sTipoPaginacion!=null && !this.sTipoPaginacion.equals("")) {
				if(!this.sTipoPaginacion.equals("TODOS")) {
					this.iNumeroPaginacion=Integer.parseInt(this.sTipoPaginacion);
				} else {
					this.iNumeroPaginacion=-1;
					this.iNumeroPaginacionPagina=-1;
				}
			} else {
				if(this.iNumeroPaginacion==null || (this.iNumeroPaginacion!=null && this.iNumeroPaginacion<=0)) {
					this.iNumeroPaginacion=AsientoContableCajaChicaConstantesFunciones.INUMEROPAGINACION;
				}
			}
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);
			
			this.cargarDatosCliente();
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			classes=AsientoContableCajaChicaConstantesFunciones.getClassesForeignKeysOfAsientoContableCajaChica(new ArrayList<Classe>(),DeepLoadType.NONE);
			
		
			this.datosDeep=new DatosDeep();
			this.datosDeep.setIsDeep(false);
			this.datosDeep.setDeepLoadType(DeepLoadType.INCLUDE);
			this.datosDeep.setClases(classes);
			
			this.datosCliente.setDatosDeepParametros(false, DeepLoadType.INCLUDE, classes, "");
			this.datosCliente.setIsConDeep(true);
			
			if(false) {//this.conExportar
				this.datosCliente.setIsConExportar(true);
				this.datosCliente.setDatosExportarParametros(Funciones2.getTipoExportar(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getcon_exportar_cabecera(),Funciones2.getTipoDelimiter(this.parametroGeneralUsuario),this.parametroGeneralUsuario.getpath_exportar()+"/asientocontablecajachica."+Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario));
			} else {
				this.datosCliente.setIsConExportar(false);
			}
			
			asientocontablecajachicasAux= new ArrayList<AsientoContableCajaChica>();
			
				
			asientocontablecajachicaLogic.setDatosCliente(this.datosCliente);
			asientocontablecajachicaLogic.setDatosDeep(this.datosDeep);
			asientocontablecajachicaLogic.setIsConDeep(true);
			
			
			asientocontablecajachicaLogic.getAsientoContableCajaChicaDataAccess().setIsForForeingsKeysDataRelationships(true);
			
			if(sAccionBusqueda.equals("Todos") || sAccionBusqueda.equals("Query"))	{	
				if(sAccionBusqueda.equals("Todos")) {
					//FALTA:PARA BUSQUEDAS POR CAMPO EN FORMULARIO
					//this.sFinalQueryGeneral="";
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacionTodos );
					
					asientocontablecajachicaLogic.getTodosAsientoContableCajaChicas(finalQueryGlobal,pagination);
					
					//asientocontablecajachicaLogic.getTodosAsientoContableCajaChicasWithConnection(finalQueryGlobal,pagination);										
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
				
				if(asientocontablecajachicaLogic.getAsientoContableCajaChicas()==null|| asientocontablecajachicaLogic.getAsientoContableCajaChicas().size()==0)	{
					
				
				}
				
				if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(-1);
						this.pagination.setiMaxResults(-1);
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							asientocontablecajachicasAux= new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicasAux.addAll(asientocontablecajachicaLogic.getAsientoContableCajaChicas());						
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicasAux= new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicasAux.addAll(asientocontablecajachicas);
						}
						//ARCHITECTURE
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							asientocontablecajachicaLogic.getTodosAsientoContableCajaChicas(finalQueryGlobal+"",this.pagination);												
							
							//asientocontablecajachicaLogic.getTodosAsientoContableCajaChicasWithConnection(finalQueryGlobal+"",this.pagination);												
						} else if(Constantes.ISUSAEJBREMOTE) {
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
					}
					
					this.generarReporteAsientoContableCajaChicas("Todos",asientocontablecajachicaLogic.getAsientoContableCajaChicas() );
					
					if(false) {//isMostrarTodosResultadosReporte						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {	
							asientocontablecajachicaLogic.setAsientoContableCajaChicas(new ArrayList<AsientoContableCajaChica>());					
							asientocontablecajachicaLogic.getAsientoContableCajaChicas().addAll(asientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicas=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicas.addAll(asientocontablecajachicasAux);
						}
						//ARCHITECTURE
						
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);														
					}
				}
			}
			else if(sAccionBusqueda.equals("PorId")) {
				Long idAsientoContableCajaChica=0L;
				
				if(this.idActual!=null && this.idActual!=0L) {
					idAsientoContableCajaChica=this.idActual;
				
				} else if(this.idAsientoContableCajaChicaActual!=null && this.idAsientoContableCajaChicaActual!=0L) {
					idAsientoContableCajaChica=idAsientoContableCajaChicaActual;
				}
				
					
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndicePorId(idAsientoContableCajaChica);
				
				this.asientocontablecajachicas=new ArrayList<AsientoContableCajaChica>();
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {					
					asientocontablecajachicaLogic.getEntity(idAsientoContableCajaChica);
					
					//asientocontablecajachicaLogic.getEntityWithConnection(idAsientoContableCajaChica);
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
								
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontablecajachicaLogic.setAsientoContableCajaChicas(new ArrayList<AsientoContableCajaChica>());
					asientocontablecajachicaLogic.getAsientoContableCajaChicas().add(asientocontablecajachicaLogic.getAsientoContableCajaChica());
				
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.asientocontablecajachicas=new ArrayList<AsientoContableCajaChica>();
					this.asientocontablecajachicas.add(asientocontablecajachica);
				}
				
				if(asientocontablecajachicaLogic.getAsientoContableCajaChica()==null)	{
					
				
				}			
			}
			
		
			else if(sAccionBusqueda.equals("FK_IdCliente")) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=asientocontablecajachicaLogic.getAsientoContableCajaChicas()==null||asientocontablecajachicaLogic.getAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=asientocontablecajachicas==null|| asientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
						asientocontablecajachicasAux.addAll(asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicasAux.addAll(asientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdCliente(finalQueryGlobal,pagination,id_clienteFK_IdCliente);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdCliente(id_clienteFK_IdCliente);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAsientoContableCajaChicas("FK_IdCliente",asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAsientoContableCajaChicas("FK_IdCliente",asientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicaLogic.setAsientoContableCajaChicas(new ArrayList<AsientoContableCajaChica>());
						asientocontablecajachicaLogic.getAsientoContableCajaChicas().addAll(asientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicas=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicas.addAll(asientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEjercicio")) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=asientocontablecajachicaLogic.getAsientoContableCajaChicas()==null||asientocontablecajachicaLogic.getAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=asientocontablecajachicas==null|| asientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
						asientocontablecajachicasAux.addAll(asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicasAux.addAll(asientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdEjercicio(finalQueryGlobal,pagination,id_ejercicioFK_IdEjercicio);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEjercicio(id_ejercicioFK_IdEjercicio);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAsientoContableCajaChicas("FK_IdEjercicio",asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAsientoContableCajaChicas("FK_IdEjercicio",asientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicaLogic.setAsientoContableCajaChicas(new ArrayList<AsientoContableCajaChica>());
						asientocontablecajachicaLogic.getAsientoContableCajaChicas().addAll(asientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicas=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicas.addAll(asientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpleado")) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=asientocontablecajachicaLogic.getAsientoContableCajaChicas()==null||asientocontablecajachicaLogic.getAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=asientocontablecajachicas==null|| asientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
						asientocontablecajachicasAux.addAll(asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicasAux.addAll(asientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdEmpleado(finalQueryGlobal,pagination,id_empleadoFK_IdEmpleado);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEmpleado(id_empleadoFK_IdEmpleado);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAsientoContableCajaChicas("FK_IdEmpleado",asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAsientoContableCajaChicas("FK_IdEmpleado",asientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicaLogic.setAsientoContableCajaChicas(new ArrayList<AsientoContableCajaChica>());
						asientocontablecajachicaLogic.getAsientoContableCajaChicas().addAll(asientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicas=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicas.addAll(asientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdEmpresa")) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=asientocontablecajachicaLogic.getAsientoContableCajaChicas()==null||asientocontablecajachicaLogic.getAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=asientocontablecajachicas==null|| asientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
						asientocontablecajachicasAux.addAll(asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicasAux.addAll(asientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdEmpresa(finalQueryGlobal,pagination,id_empresaFK_IdEmpresa);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdEmpresa(id_empresaFK_IdEmpresa);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAsientoContableCajaChicas("FK_IdEmpresa",asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAsientoContableCajaChicas("FK_IdEmpresa",asientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicaLogic.setAsientoContableCajaChicas(new ArrayList<AsientoContableCajaChica>());
						asientocontablecajachicaLogic.getAsientoContableCajaChicas().addAll(asientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicas=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicas.addAll(asientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdModulo")) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=asientocontablecajachicaLogic.getAsientoContableCajaChicas()==null||asientocontablecajachicaLogic.getAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=asientocontablecajachicas==null|| asientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
						asientocontablecajachicasAux.addAll(asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicasAux.addAll(asientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdModulo(finalQueryGlobal,pagination,id_moduloFK_IdModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdModulo(id_moduloFK_IdModulo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAsientoContableCajaChicas("FK_IdModulo",asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAsientoContableCajaChicas("FK_IdModulo",asientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicaLogic.setAsientoContableCajaChicas(new ArrayList<AsientoContableCajaChica>());
						asientocontablecajachicaLogic.getAsientoContableCajaChicas().addAll(asientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicas=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicas.addAll(asientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdPeriodo")) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=asientocontablecajachicaLogic.getAsientoContableCajaChicas()==null||asientocontablecajachicaLogic.getAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=asientocontablecajachicas==null|| asientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
						asientocontablecajachicasAux.addAll(asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicasAux.addAll(asientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdPeriodo(finalQueryGlobal,pagination,id_periodoFK_IdPeriodo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdPeriodo(id_periodoFK_IdPeriodo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAsientoContableCajaChicas("FK_IdPeriodo",asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAsientoContableCajaChicas("FK_IdPeriodo",asientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicaLogic.setAsientoContableCajaChicas(new ArrayList<AsientoContableCajaChica>());
						asientocontablecajachicaLogic.getAsientoContableCajaChicas().addAll(asientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicas=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicas.addAll(asientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdSucursal")) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=asientocontablecajachicaLogic.getAsientoContableCajaChicas()==null||asientocontablecajachicaLogic.getAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=asientocontablecajachicas==null|| asientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
						asientocontablecajachicasAux.addAll(asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicasAux.addAll(asientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdSucursal(finalQueryGlobal,pagination,id_sucursalFK_IdSucursal);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdSucursal(id_sucursalFK_IdSucursal);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAsientoContableCajaChicas("FK_IdSucursal",asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAsientoContableCajaChicas("FK_IdSucursal",asientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicaLogic.setAsientoContableCajaChicas(new ArrayList<AsientoContableCajaChica>());
						asientocontablecajachicaLogic.getAsientoContableCajaChicas().addAll(asientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicas=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicas.addAll(asientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoDocumento")) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoDocumento(id_tipo_documentoFK_IdTipoDocumento);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdTipoDocumento(finalQueryGlobal,pagination,id_tipo_documentoFK_IdTipoDocumento);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoDocumento(id_tipo_documentoFK_IdTipoDocumento);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoDocumento(id_tipo_documentoFK_IdTipoDocumento);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=asientocontablecajachicaLogic.getAsientoContableCajaChicas()==null||asientocontablecajachicaLogic.getAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=asientocontablecajachicas==null|| asientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
						asientocontablecajachicasAux.addAll(asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicasAux.addAll(asientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdTipoDocumento(finalQueryGlobal,pagination,id_tipo_documentoFK_IdTipoDocumento);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoDocumento(id_tipo_documentoFK_IdTipoDocumento);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoDocumento(id_tipo_documentoFK_IdTipoDocumento);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAsientoContableCajaChicas("FK_IdTipoDocumento",asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAsientoContableCajaChicas("FK_IdTipoDocumento",asientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicaLogic.setAsientoContableCajaChicas(new ArrayList<AsientoContableCajaChica>());
						asientocontablecajachicaLogic.getAsientoContableCajaChicas().addAll(asientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicas=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicas.addAll(asientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoMovimientoModulo")) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoMovimientoModulo(id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdTipoMovimientoModulo(finalQueryGlobal,pagination,id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoMovimientoModulo(id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoMovimientoModulo(id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=asientocontablecajachicaLogic.getAsientoContableCajaChicas()==null||asientocontablecajachicaLogic.getAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=asientocontablecajachicas==null|| asientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
						asientocontablecajachicasAux.addAll(asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicasAux.addAll(asientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdTipoMovimientoModulo(finalQueryGlobal,pagination,id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoMovimientoModulo(id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoMovimientoModulo(id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAsientoContableCajaChicas("FK_IdTipoMovimientoModulo",asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAsientoContableCajaChicas("FK_IdTipoMovimientoModulo",asientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicaLogic.setAsientoContableCajaChicas(new ArrayList<AsientoContableCajaChica>());
						asientocontablecajachicaLogic.getAsientoContableCajaChicas().addAll(asientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicas=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicas.addAll(asientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTipoTransaccionModulo")) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdTipoTransaccionModulo(finalQueryGlobal,pagination,id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=asientocontablecajachicaLogic.getAsientoContableCajaChicas()==null||asientocontablecajachicaLogic.getAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=asientocontablecajachicas==null|| asientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
						asientocontablecajachicasAux.addAll(asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicasAux.addAll(asientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdTipoTransaccionModulo(finalQueryGlobal,pagination,id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTipoTransaccionModulo(id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAsientoContableCajaChicas("FK_IdTipoTransaccionModulo",asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAsientoContableCajaChicas("FK_IdTipoTransaccionModulo",asientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicaLogic.setAsientoContableCajaChicas(new ArrayList<AsientoContableCajaChica>());
						asientocontablecajachicaLogic.getAsientoContableCajaChicas().addAll(asientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicas=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicas.addAll(asientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdTransaccion")) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdTransaccion(finalQueryGlobal,pagination,id_transaccionFK_IdTransaccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=asientocontablecajachicaLogic.getAsientoContableCajaChicas()==null||asientocontablecajachicaLogic.getAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=asientocontablecajachicas==null|| asientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
						asientocontablecajachicasAux.addAll(asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicasAux.addAll(asientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdTransaccion(finalQueryGlobal,pagination,id_transaccionFK_IdTransaccion);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdTransaccion(id_transaccionFK_IdTransaccion);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAsientoContableCajaChicas("FK_IdTransaccion",asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAsientoContableCajaChicas("FK_IdTransaccion",asientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicaLogic.setAsientoContableCajaChicas(new ArrayList<AsientoContableCajaChica>());
						asientocontablecajachicaLogic.getAsientoContableCajaChicas().addAll(asientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicas=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicas.addAll(asientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			}
			else if(sAccionBusqueda.equals("FK_IdUsuario")) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {

					finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,finalQueryPaginacion);

					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);

				
				}
				//ARCHITECTURE

				Boolean isNoExiste=false;
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					isNoExiste=asientocontablecajachicaLogic.getAsientoContableCajaChicas()==null||asientocontablecajachicaLogic.getAsientoContableCajaChicas().size()==0;
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					isNoExiste=asientocontablecajachicas==null|| asientocontablecajachicas.size()==0;
				}
				//ARCHITECTURE

		if(false && sTipoArchivoReporte!=""&&sTipoArchivoReporte!=null) {//this.isTipoArchivoReporte
			if(false) {//isMostrarTodosResultadosReporte
				this.pagination.setiFirstResult(-1);
				this.pagination.setiMaxResults(-1);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
						asientocontablecajachicasAux.addAll(asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicasAux=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicasAux.addAll(asientocontablecajachicas);
				}
				//ARCHITECTURE
								
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
							finalQueryGlobal=Funciones.GetFinalQueryAppendBusqueda(finalQueryGlobal, this.sFinalQueryGeneral,"");
							asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdUsuario(finalQueryGlobal,pagination,id_usuarioFK_IdUsuario);
				} else if(Constantes.ISUSAEJBREMOTE) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				} else if(Constantes.ISUSAEJBHOME) {
				this.sDetalleReporte=AsientoContableCajaChicaConstantesFunciones.getDetalleIndiceFK_IdUsuario(id_usuarioFK_IdUsuario);
						
				}
				//ARCHITECTURE
					}
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					generarReporteAsientoContableCajaChicas("FK_IdUsuario",asientocontablecajachicaLogic.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					generarReporteAsientoContableCajaChicas("FK_IdUsuario",asientocontablecajachicas);
				}
				//ARCHITECTURE

					if(false) {//isMostrarTodosResultadosReporte
						this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
						this.pagination.setiMaxResults(this.iNumeroPaginacion);

						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicaLogic.setAsientoContableCajaChicas(new ArrayList<AsientoContableCajaChica>());
						asientocontablecajachicaLogic.getAsientoContableCajaChicas().addAll(asientocontablecajachicasAux);
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicas=new ArrayList<AsientoContableCajaChica>();
							asientocontablecajachicas.addAll(asientocontablecajachicasAux);
						}
						//ARCHITECTURE
					}
				}

			} 
		
		
		
		this.redimensionarTablaDatos();
		//this.refrescarForeignKeysDescripcionesAsientoContableCajaChica();
		
		
		if(this.conTotales) {
			this.crearFilaTotales();
		}		
		} catch (JRException e) {
			throw e;
		} catch(Exception e) {
			throw e;
      	} finally {
      		//this.finishProcessAsientoContableCajaChica();
      	}
		
	}				
	
	public void redimensionarTablaDatos() throws Exception {
		int iSizeTabla=0;
				
		iSizeTabla=this.getSizeTablaDatos();
		
		//ARCHITECTURE
		/*
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=asientocontablecajachicaLogic.getAsientoContableCajaChicas().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=asientocontablecajachicas.size();
		}
		*/
		//ARCHITECTURE
											
		this.redimensionarTablaDatos(iSizeTabla);		
	}
	
	public Integer getSizeTablaDatos() throws Exception {
		Integer iSizeTabla=0;
				
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {	
			iSizeTabla=asientocontablecajachicaLogic.getAsientoContableCajaChicas().size();
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			iSizeTabla=asientocontablecajachicas.size();
		}
		//ARCHITECTURE
											
		return iSizeTabla;		
	}
	
			
	public Boolean permiteMantenimiento(AsientoContableCajaChica asientocontablecajachica) {
		Boolean permite=true;
		
		if(this.asientocontablecajachica.getsType().equals(Constantes2.S_TOTALES)) {
			permite=false;
		}
		
		return permite;
	}
	
	public void traerValoresTablaTotales() throws Exception {
	}
	
	
	public void traerValoresTablaOrderBy() throws Exception {
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.arrOrderBy=AsientoContableCajaChicaConstantesFunciones.getOrderByListaAsientoContableCajaChica();							
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			this.arrOrderBy=AsientoContableCajaChicaConstantesFunciones.getOrderByListaAsientoContableCajaChica();
		}		
	}
	
	
	public Boolean existeFilaTotales() throws Exception {
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicaLogic.getAsientoContableCajaChicas()) {
				if(asientocontablecajachica.getsType().equals(Constantes2.S_TOTALES)) {
					asientocontablecajachicaTotales=asientocontablecajachica;
					existe=true;
					break;
				}
			}
								
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(AsientoContableCajaChica asientocontablecajachica:this.asientocontablecajachicas) {
				if(asientocontablecajachica.getsType().equals(Constantes2.S_TOTALES)) {
					asientocontablecajachicaTotales=asientocontablecajachica;
					existe=true;
					break;
				}
			}
		}
		
		return existe;
	}
	
	public void crearFilaTotales() throws Exception {
		Boolean existe=false;
		
		existe=this.existeFilaTotales();
		
		if(!existe) {
			//SI NO ES UNO A UNO SE CREA FILA TOTALES
			this.asientocontablecajachicaAux=new AsientoContableCajaChica();
			this.asientocontablecajachicaAux.setsType(Constantes2.S_TOTALES);
			this.asientocontablecajachicaAux.setIsNew(false);
			this.asientocontablecajachicaAux.setIsChanged(false);
			this.asientocontablecajachicaAux.setIsDeleted(false);
				
			if(Constantes.ISUSAEJBLOGICLAYER) {
				AsientoContableCajaChicaConstantesFunciones.TotalizarValoresFilaAsientoContableCajaChica(this.asientocontablecajachicaLogic.getAsientoContableCajaChicas(),this.asientocontablecajachicaAux);
				
				this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().add(this.asientocontablecajachicaAux);
				
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
				AsientoContableCajaChicaConstantesFunciones.TotalizarValoresFilaAsientoContableCajaChica(this.asientocontablecajachicas,this.asientocontablecajachicaAux);
				
				this.asientocontablecajachicas.add(this.asientocontablecajachicaAux);
			}
		}
	}
	
	public void quitarFilaTotales() throws Exception {
		asientocontablecajachicaTotales=new AsientoContableCajaChica();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().remove(asientocontablecajachicaTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			existe=this.existeFilaTotales();
			
			if(existe) {
				this.asientocontablecajachicas.remove(asientocontablecajachicaTotales);
			}
		}
	}
	
	public void actualizarFilaTotales() throws Exception {
		asientocontablecajachicaTotales=new AsientoContableCajaChica();
		Boolean existe=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicaLogic.getAsientoContableCajaChicas()) {
				if(asientocontablecajachica.getsType().equals(Constantes2.S_TOTALES)) {
					asientocontablecajachicaTotales=asientocontablecajachica;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				AsientoContableCajaChicaConstantesFunciones.TotalizarValoresFilaAsientoContableCajaChica(this.asientocontablecajachicaLogic.getAsientoContableCajaChicas(),asientocontablecajachicaTotales);
			}			
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			for(AsientoContableCajaChica asientocontablecajachica:this.asientocontablecajachicas) {
				if(asientocontablecajachica.getsType().equals(Constantes2.S_TOTALES)) {
					asientocontablecajachicaTotales=asientocontablecajachica;
					existe=true;
					break;
				}
			}
			
			if(existe) {
				AsientoContableCajaChicaConstantesFunciones.TotalizarValoresFilaAsientoContableCajaChica(this.asientocontablecajachicas,asientocontablecajachicaTotales);
			}
		}
	}		
	
	public void recargarInformacion()throws Exception {
		try {
			sAccionBusqueda="Todos";
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}	
	}		
	
	
	public void getAsientoContableCajaChicasFK_IdAnio()throws Exception {
		try {
			sAccionBusqueda="FK_IdAnio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAsientoContableCajaChicasFK_IdCliente()throws Exception {
		try {
			sAccionBusqueda="FK_IdCliente";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAsientoContableCajaChicasFK_IdCuentaContable()throws Exception {
		try {
			sAccionBusqueda="FK_IdCuentaContable";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAsientoContableCajaChicasFK_IdEjercicio()throws Exception {
		try {
			sAccionBusqueda="FK_IdEjercicio";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAsientoContableCajaChicasFK_IdEmpleado()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpleado";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAsientoContableCajaChicasFK_IdEmpresa()throws Exception {
		try {
			sAccionBusqueda="FK_IdEmpresa";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAsientoContableCajaChicasFK_IdEstadoAsientoContableCajaChica()throws Exception {
		try {
			sAccionBusqueda="FK_IdEstadoAsientoContableCajaChica";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAsientoContableCajaChicasFK_IdMes()throws Exception {
		try {
			sAccionBusqueda="FK_IdMes";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAsientoContableCajaChicasFK_IdModulo()throws Exception {
		try {
			sAccionBusqueda="FK_IdModulo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAsientoContableCajaChicasFK_IdMoneda()throws Exception {
		try {
			sAccionBusqueda="FK_IdMoneda";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAsientoContableCajaChicasFK_IdPeriodo()throws Exception {
		try {
			sAccionBusqueda="FK_IdPeriodo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAsientoContableCajaChicasFK_IdSucursal()throws Exception {
		try {
			sAccionBusqueda="FK_IdSucursal";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAsientoContableCajaChicasFK_IdTipoDocumento()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoDocumento";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAsientoContableCajaChicasFK_IdTipoMovimiento()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoMovimiento";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAsientoContableCajaChicasFK_IdTipoMovimientoModulo()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoMovimientoModulo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAsientoContableCajaChicasFK_IdTipoTransaccionModulo()throws Exception {
		try {
			sAccionBusqueda="FK_IdTipoTransaccionModulo";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAsientoContableCajaChicasFK_IdTransaccion()throws Exception {
		try {
			sAccionBusqueda="FK_IdTransaccion";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	public void getAsientoContableCajaChicasFK_IdUsuario()throws Exception {
		try {
			sAccionBusqueda="FK_IdUsuario";
			this.iNumeroPaginacionPagina=0;
			this.procesarBusqueda(sAccionBusqueda);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
	}

	
	
	public void getAsientoContableCajaChicasFK_IdAnio(String sFinalQuery,Long id_anio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdAnio(sFinalQuery,this.pagination,id_anio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAsientoContableCajaChicasFK_IdCliente(String sFinalQuery,Long id_cliente)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdCliente(sFinalQuery,this.pagination,id_cliente);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAsientoContableCajaChicasFK_IdCuentaContable(String sFinalQuery,Long id_cuenta_contable)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdCuentaContable(sFinalQuery,this.pagination,id_cuenta_contable);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAsientoContableCajaChicasFK_IdEjercicio(String sFinalQuery,Long id_ejercicio)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdEjercicio(sFinalQuery,this.pagination,id_ejercicio);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAsientoContableCajaChicasFK_IdEmpleado(String sFinalQuery,Long id_empleado)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdEmpleado(sFinalQuery,this.pagination,id_empleado);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAsientoContableCajaChicasFK_IdEmpresa(String sFinalQuery,Long id_empresa)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdEmpresa(sFinalQuery,this.pagination,id_empresa);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAsientoContableCajaChicasFK_IdEstadoAsientoContableCajaChica(String sFinalQuery,Long id_estado_asiento_contable)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdEstadoAsientoContableCajaChica(sFinalQuery,this.pagination,id_estado_asiento_contable);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAsientoContableCajaChicasFK_IdMes(String sFinalQuery,Long id_mes)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdMes(sFinalQuery,this.pagination,id_mes);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAsientoContableCajaChicasFK_IdModulo(String sFinalQuery,Long id_modulo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdModulo(sFinalQuery,this.pagination,id_modulo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAsientoContableCajaChicasFK_IdMoneda(String sFinalQuery,Long id_moneda)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdMoneda(sFinalQuery,this.pagination,id_moneda);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAsientoContableCajaChicasFK_IdPeriodo(String sFinalQuery,Long id_periodo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdPeriodo(sFinalQuery,this.pagination,id_periodo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAsientoContableCajaChicasFK_IdSucursal(String sFinalQuery,Long id_sucursal)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdSucursal(sFinalQuery,this.pagination,id_sucursal);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAsientoContableCajaChicasFK_IdTipoDocumento(String sFinalQuery,Long id_tipo_documento)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdTipoDocumento(sFinalQuery,this.pagination,id_tipo_documento);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAsientoContableCajaChicasFK_IdTipoMovimiento(String sFinalQuery,Long id_tipo_movimiento)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdTipoMovimiento(sFinalQuery,this.pagination,id_tipo_movimiento);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAsientoContableCajaChicasFK_IdTipoMovimientoModulo(String sFinalQuery,Long id_tipo_movimiento_modulo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdTipoMovimientoModulo(sFinalQuery,this.pagination,id_tipo_movimiento_modulo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAsientoContableCajaChicasFK_IdTipoTransaccionModulo(String sFinalQuery,Long id_tipo_transaccion_modulo)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdTipoTransaccionModulo(sFinalQuery,this.pagination,id_tipo_transaccion_modulo);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAsientoContableCajaChicasFK_IdTransaccion(String sFinalQuery,Long id_transaccion)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdTransaccion(sFinalQuery,this.pagination,id_transaccion);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	public void getAsientoContableCajaChicasFK_IdUsuario(String sFinalQuery,Long id_usuario)throws Exception {
		try {
			
			this.pagination=new Pagination();
			this.pagination.setiFirstResult(this.iNumeroPaginacionPagina);
			this.pagination.setiMaxResults(this.iNumeroPaginacion);

				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontablecajachicaLogic.getAsientoContableCajaChicasFK_IdUsuario(sFinalQuery,this.pagination,id_usuario);
				
				} else if(Constantes.ISUSAEJBREMOTE) {
				
				} else if(Constantes.ISUSAEJBHOME) {
				
				}
				//ARCHITECTURE
		} catch(Exception e) {
			throw e;
		}
	}

	
	public void onLoad()throws Exception {		
		try {		
			isEntroOnLoad=true;
			//INTENTA TRAER DATOS DE BUSQUEDA ANTERIOR
			this.traerDatosBusquedaDesdeSession();
					
			//SINO SE CUMPLE VIENE DE PADRE FOREIGN O BUSQUEDA ANTIGUA
			if(this.sAccionBusqueda.equals("")) {
				this.sAccionBusqueda="Todos";
			}
								
			this.procesarBusqueda(sAccionBusqueda);
			
		} catch (Exception e) {
			throw e;
		}
	}		
	
	public void inicializarPermisosAsientoContableCajaChica() {
		this.isPermisoTodoAsientoContableCajaChica=false;
		this.isPermisoNuevoAsientoContableCajaChica=false;
		this.isPermisoActualizarAsientoContableCajaChica=false;
		this.isPermisoActualizarOriginalAsientoContableCajaChica=false;
		this.isPermisoEliminarAsientoContableCajaChica=false;
		this.isPermisoGuardarCambiosAsientoContableCajaChica=false;
		this.isPermisoConsultaAsientoContableCajaChica=false;
		this.isPermisoBusquedaAsientoContableCajaChica=false;
		this.isPermisoReporteAsientoContableCajaChica=false;		
		this.isPermisoOrdenAsientoContableCajaChica=false;		
		this.isPermisoPaginacionMedioAsientoContableCajaChica=false;		
		this.isPermisoPaginacionAltoAsientoContableCajaChica=false;
		this.isPermisoPaginacionTodoAsientoContableCajaChica=false;
		this.isPermisoCopiarAsientoContableCajaChica=false;		
		this.isPermisoVerFormAsientoContableCajaChica=false;		
		this.isPermisoDuplicarAsientoContableCajaChica=false;		
		this.isPermisoOrdenAsientoContableCajaChica=false;		
	}
	
	public void setPermisosUsuarioAsientoContableCajaChica(Boolean isPermiso) {
		this.isPermisoTodoAsientoContableCajaChica=isPermiso;
		this.isPermisoNuevoAsientoContableCajaChica=isPermiso;
		this.isPermisoActualizarAsientoContableCajaChica=isPermiso;
		this.isPermisoActualizarOriginalAsientoContableCajaChica=isPermiso;
		this.isPermisoEliminarAsientoContableCajaChica=isPermiso;
		this.isPermisoGuardarCambiosAsientoContableCajaChica=isPermiso;
		this.isPermisoConsultaAsientoContableCajaChica=isPermiso;
		this.isPermisoBusquedaAsientoContableCajaChica=isPermiso;
		this.isPermisoReporteAsientoContableCajaChica=isPermiso;
		this.isPermisoOrdenAsientoContableCajaChica=isPermiso;		
		this.isPermisoPaginacionMedioAsientoContableCajaChica=isPermiso;		
		this.isPermisoPaginacionAltoAsientoContableCajaChica=isPermiso;		
		this.isPermisoPaginacionTodoAsientoContableCajaChica=isPermiso;		
		this.isPermisoCopiarAsientoContableCajaChica=isPermiso;		
		this.isPermisoVerFormAsientoContableCajaChica=isPermiso;		
		this.isPermisoDuplicarAsientoContableCajaChica=isPermiso;
		this.isPermisoOrdenAsientoContableCajaChica=isPermiso;
	}
	
	public void setPermisosMantenimientoUsuarioAsientoContableCajaChica(Boolean isPermiso) {
		//this.isPermisoTodoAsientoContableCajaChica=isPermiso;
		this.isPermisoNuevoAsientoContableCajaChica=isPermiso;
		this.isPermisoActualizarAsientoContableCajaChica=isPermiso;
		this.isPermisoActualizarOriginalAsientoContableCajaChica=isPermiso;
		this.isPermisoEliminarAsientoContableCajaChica=isPermiso;
		this.isPermisoGuardarCambiosAsientoContableCajaChica=isPermiso;
		//this.isPermisoConsultaAsientoContableCajaChica=isPermiso;
		//this.isPermisoBusquedaAsientoContableCajaChica=isPermiso;
		//this.isPermisoReporteAsientoContableCajaChica=isPermiso;
		//this.isPermisoOrdenAsientoContableCajaChica=isPermiso;		
		//this.isPermisoPaginacionMedioAsientoContableCajaChica=isPermiso;		
		//this.isPermisoPaginacionAltoAsientoContableCajaChica=isPermiso;		
		//this.isPermisoPaginacionTodoAsientoContableCajaChica=isPermiso;		
		//this.isPermisoCopiarAsientoContableCajaChica=isPermiso;		
		//this.isPermisoDuplicarAsientoContableCajaChica=isPermiso;
		//this.isPermisoOrdenAsientoContableCajaChica=isPermiso;
	}
	
	public void inicializarSetPermisosUsuarioAsientoContableCajaChicaClasesRelacionadas() throws Exception {
		ArrayList<String> arrPaginas=new ArrayList<String>();		
		ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
		
		arrPaginas.add(DetalleAsientoContableCajaChicaConstantesFunciones.SNOMBREOPCION);
		
		if(AsientoContableCajaChicaJInternalFrame.CON_LLAMADA_SIMPLE) {
			this.opcionsRelacionadas.addAll(this.sistemaReturnGeneral.getOpcionsRelacionadas());
			
		} else {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				opcionsFinal=sistemaLogicAdditional.tienePermisosOpcionesEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, arrPaginas);
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
			
			this.opcionsRelacionadas.addAll(opcionsFinal);
		}
		
		

		this.isTienePermisosDetalleAsientoContableCajaChica=false;
		this.isTienePermisosDetalleAsientoContableCajaChica=this.verificarGetPermisosUsuarioOpcionAsientoContableCajaChicaClaseRelacionada(this.opcionsRelacionadas,DetalleAsientoContableCajaChicaConstantesFunciones.SNOMBREOPCION);
		
	}
	
	public Boolean tienePermisosUsuarioEnPaginaWebAsientoContableCajaChica(String sPagina) throws Exception {
		Boolean tienePermisos=false;
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			tienePermisos=sistemaLogicAdditional.tienePermisosEnPaginaWeb(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, sPagina);
		} else if(Constantes.ISUSAEJBREMOTE) {
		} else if(Constantes.ISUSAEJBHOME) {
		}
		
		return tienePermisos;
	}
	
	public void inicializarSetPermisosUsuarioAsientoContableCajaChicaClasesRelacionadas(Boolean conPermiso) throws Exception {
		
		this.isTienePermisosDetalleAsientoContableCajaChica=conPermiso;
	}
	
	public Boolean verificarGetPermisosUsuarioAsientoContableCajaChicaClaseRelacionada(ArrayList<String> arrPaginasFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioClaseRelacionada(arrPaginasFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public Boolean verificarGetPermisosUsuarioOpcionAsientoContableCajaChicaClaseRelacionada(List<Opcion> opcionsFinal,String sPaginaActual) throws Exception {
		Boolean verificado=false;
		
		verificado=Funciones2.verificarGetPermisosUsuarioOpcionClaseRelacionada(opcionsFinal,sPaginaActual);				
		
		return verificado;
	}
	
	public void actualizarTabsSetPermisosUsuarioAsientoContableCajaChicaClasesRelacionadas() throws Exception {
		

		if(!this.isTienePermisosDetalleAsientoContableCajaChica && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jTabbedPaneRelacionesAsientoContableCajaChica.remove(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.getContentPane());
		}
	}
	
	public void setPermisosUsuarioAsientoContableCajaChica() throws Exception {
		
		PerfilOpcion perfilOpcionUsuario=new PerfilOpcion();		
		Long idOpcion=this.opcionActual.getId();
		
		if(AsientoContableCajaChicaJInternalFrame.CON_LLAMADA_SIMPLE) {
			perfilOpcionUsuario=this.sistemaReturnGeneral.getPerfilOpcion();
			
		} else {
			if(this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
				idOpcion=0L;
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				perfilOpcionUsuario=sistemaLogicAdditional.traerPermisosPaginaWebPerfilOpcion(this.usuarioActual, Constantes.LIDSISTEMAACTUAL, AsientoContableCajaChicaConstantesFunciones.SNOMBREOPCION,idOpcion);				
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}
		}
		
		if(perfilOpcionUsuario!=null && perfilOpcionUsuario.getId()>0) {
			this.isPermisoNuevoAsientoContableCajaChica=perfilOpcionUsuario.getingreso()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarAsientoContableCajaChica=perfilOpcionUsuario.getmodificacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoActualizarOriginalAsientoContableCajaChica=this.isPermisoActualizarAsientoContableCajaChica;
			this.isPermisoEliminarAsientoContableCajaChica=perfilOpcionUsuario.geteliminacion()||perfilOpcionUsuario.gettodo();
			this.isPermisoGuardarCambiosAsientoContableCajaChica=perfilOpcionUsuario.getguardar_cambios()||perfilOpcionUsuario.gettodo();
			this.isPermisoConsultaAsientoContableCajaChica=perfilOpcionUsuario.getconsulta()||perfilOpcionUsuario.gettodo();
			this.isPermisoBusquedaAsientoContableCajaChica=perfilOpcionUsuario.getbusqueda()||perfilOpcionUsuario.gettodo();
			this.isPermisoTodoAsientoContableCajaChica=perfilOpcionUsuario.gettodo()||perfilOpcionUsuario.gettodo();
			this.isPermisoReporteAsientoContableCajaChica=perfilOpcionUsuario.getreporte()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenAsientoContableCajaChica=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionMedioAsientoContableCajaChica=perfilOpcionUsuario.getpaginacion_medio()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionAltoAsientoContableCajaChica=perfilOpcionUsuario.getpaginacion_alto()||perfilOpcionUsuario.gettodo();
			this.isPermisoPaginacionTodoAsientoContableCajaChica=perfilOpcionUsuario.getpaginacion_todo()||perfilOpcionUsuario.gettodo();
			this.isPermisoCopiarAsientoContableCajaChica=perfilOpcionUsuario.getcopiar()||perfilOpcionUsuario.gettodo();
			this.isPermisoVerFormAsientoContableCajaChica=true;//perfilOpcionUsuario.getver_form()||perfilOpcionUsuario.gettodo();
			this.isPermisoDuplicarAsientoContableCajaChica=perfilOpcionUsuario.getduplicar()||perfilOpcionUsuario.gettodo();
			this.isPermisoOrdenAsientoContableCajaChica=perfilOpcionUsuario.getorden()||perfilOpcionUsuario.gettodo();
			
			if(this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
				this.opcionActual.setId(perfilOpcionUsuario.getid_opcion());
				
				this.jTableDatosAsientoContableCajaChica.setToolTipText(this.jTableDatosAsientoContableCajaChica.getToolTipText()+"_"+perfilOpcionUsuario.getid_opcion());		
			}
		} else {
			this.setPermisosUsuarioAsientoContableCajaChica(false);
		}
		
		//SI SE NECESITA PONER TODOS LOS PERMISOS POR DEFECTO
		//
		
	}
	
	public void setAccionesUsuarioAsientoContableCajaChica(Boolean esParaAccionesFormulario) throws Exception {		
		Reporte reporte=null;
		
		if(!esParaAccionesFormulario) {
			this.accions=new ArrayList<Accion>();
			
			if(AsientoContableCajaChicaJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accions=this.sistemaReturnGeneral.getAccions();
				
				
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accions=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,false);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accions.size()>0) {			
				for(Accion accion:this.accions) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
		
		
					this.tiposAcciones.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAcciones.add(reporte);
			
		} else {
			//ACCIONES FORMULARIO
			this.accionsFormulario=new ArrayList<Accion>();
			
			if(AsientoContableCajaChicaJInternalFrame.CON_LLAMADA_SIMPLE) {
				this.accionsFormulario=this.sistemaReturnGeneral.getAccionsFormulario();
			
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.accionsFormulario=sistemaLogicAdditional.getAccionesUsuario(this.usuarioActual,this.opcionActual,true);				
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}
			
			if(this.accionsFormulario.size()>0) {			
				for(Accion accion:this.accionsFormulario) {
					reporte=new Reporte();
					reporte.setsCodigo(accion.getcodigo());
					reporte.setsDescripcion(accion.getnombre());
					
					this.tiposAccionesFormulario.add(reporte);
				}
			}	
			
			

			reporte=new Reporte();
			reporte.setsCodigo("");
			reporte.setsDescripcion("");

			this.tiposAccionesFormulario.add(reporte);
		}				
	}	 	
	
	public void setRelacionesUsuarioAsientoContableCajaChica() throws Exception {
		Reporte reporte=null;
		
		

		if(this.isTienePermisosDetalleAsientoContableCajaChica && this.asientocontablecajachicaConstantesFunciones.mostrarDetalleAsientoContableCajaChicaAsientoContableCajaChica && !AsientoContableCajaChicaConstantesFunciones.ISGUARDARREL) {

			reporte=new Reporte();
			reporte.setsCodigo("Detalle Asiento Contable Caja Chica");
			reporte.setsDescripcion("Detalle Asiento Contable Caja Chica");
			this.tiposRelaciones.add(reporte);
		}
		
		
		//ORDENAR ALFABETICAMENTE
		Collections.sort(this.tiposRelaciones, new ReporteComparator());
		/*
		reporte=new Reporte();
		reporte.setsCodigo(accion.getcodigo());
		reporte.setsDescripcion(accion.getnombre());
			
		this.tiposRelaciones.add(reporte);
		*/
	}	
	
		
	@SuppressWarnings({ "unchecked", "rawtypes" } )
	public void inicializarCombosForeignKeyAsientoContableCajaChicaListas()throws Exception {
		try	{						
			
				this.empresasForeignKey=new ArrayList();
				this.sucursalsForeignKey=new ArrayList();
				this.ejerciciosForeignKey=new ArrayList();
				this.periodosForeignKey=new ArrayList();
				this.usuariosForeignKey=new ArrayList();
				this.aniosForeignKey=new ArrayList();
				this.messForeignKey=new ArrayList();
				this.monedasForeignKey=new ArrayList();
				this.empleadosForeignKey=new ArrayList();
				this.estadoasientocontablecajachicasForeignKey=new ArrayList();
				this.clientesForeignKey=new ArrayList();
				this.transaccionsForeignKey=new ArrayList();
				this.tipodocumentosForeignKey=new ArrayList();
				this.cuentacontablesForeignKey=new ArrayList();
				this.modulosForeignKey=new ArrayList();
				this.tipomovimientosForeignKey=new ArrayList();
				this.tipotransaccionmodulosForeignKey=new ArrayList();
				this.tipomovimientomodulosForeignKey=new ArrayList();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void cargarCombosTodosForeignKeyAsientoContableCajaChicaListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			String sFinalQueryCombo="";
			
			Modulo  moduloActualAux=new Modulo();
			
			if(AsientoContableCajaChicaJInternalFrame.ISLOAD_FKLOTE) {
				this.cargarCombosLoteForeignKeyAsientoContableCajaChicaListas(false);
			} else {
			
				this.cargarCombosForeignKeyEmpresaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeySucursalListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEjercicioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyPeriodoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyUsuarioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyMonedaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyEstadoAsientoContableCajaChicaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTransaccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoDocumentoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyCuentaContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoMovimientoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoTransaccionModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.cargarCombosForeignKeyTipoMovimientoModuloListas(cargarCombosDependencia,sFinalQueryCombo);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	

	public void cargarCombosForeignKeyEmpresaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpresaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeySucursalListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=SucursalConstantesFunciones.SFINALQUERY;

				this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEjercicioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EjercicioConstantesFunciones.SFINALQUERY;

				this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyPeriodoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=PeriodoConstantesFunciones.SFINALQUERY;

				this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyUsuarioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=UsuarioConstantesFunciones.SFINALQUERY;

				this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyAnioListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=AnioConstantesFunciones.SFINALQUERY;

				this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMesListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.messForeignKey==null||this.messForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MesConstantesFunciones.SFINALQUERY;

				this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMonedaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=MonedaConstantesFunciones.SFINALQUERY;

				this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleadoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EmpleadoConstantesFunciones.SFINALQUERY;

				this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoAsientoContableCajaChicaListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.estadoasientocontablecajachicasForeignKey==null||this.estadoasientocontablecajachicasForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=EstadoAsientoContableCajaChicaConstantesFunciones.getArrayColumnasGlobalesEstadoAsientoContableCajaChica(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoAsientoContableCajaChicaConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=EstadoAsientoContableCajaChicaConstantesFunciones.SFINALQUERY;

				this.cargarCombosEstadoAsientoContableCajaChicasForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyClienteListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ClienteConstantesFunciones.SFINALQUERY;

				this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccionListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.transaccionsForeignKey==null||this.transaccionsForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
				moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TransaccionConstantesFunciones.SFINALQUERY;

				this.cargarCombosTransaccionsForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDocumentoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipodocumentosForeignKey==null||this.tipodocumentosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoDocumentoConstantesFunciones.getArrayColumnasGlobalesTipoDocumento(this.arrDatoGeneral,this.arrDatoGeneralNo);
				moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TipoDocumentoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoDocumentoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoDocumentosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContableListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.cuentacontablesForeignKey==null||this.cuentacontablesForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=CuentaContableConstantesFunciones.SFINALQUERY;

				this.cargarCombosCuentaContablesForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=ModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoMovimientoListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipomovimientosForeignKey==null||this.tipomovimientosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoMovimientoConstantesFunciones.getArrayColumnasGlobalesTipoMovimiento(this.arrDatoGeneral,this.arrDatoGeneralNo);
				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoMovimientoConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoMovimientoConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoMovimientosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTransaccionModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipotransaccionmodulosForeignKey==null||this.tipotransaccionmodulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoTransaccionModuloConstantesFunciones.getArrayColumnasGlobalesTipoTransaccionModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TipoTransaccionModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoTransaccionModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoTransaccionModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoMovimientoModuloListas(Boolean cargarCombosDependencia,String sFinalQuery)throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();

			String  finalQueryGlobal="";

			Modulo  moduloActualAux=new Modulo();

			if((this.tipomovimientomodulosForeignKey==null||this.tipomovimientomodulosForeignKey.size()<=0)) {
				this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
				this.arrDatoGeneralNo= new  ArrayList<String>();

				arrColumnasGlobales=TipoMovimientoModuloConstantesFunciones.getArrayColumnasGlobalesTipoMovimientoModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
				moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

				finalQueryGlobal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TipoMovimientoModuloConstantesFunciones.TABLENAME);

				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, sFinalQuery);
				finalQueryGlobal=Funciones.GetFinalQueryAppend(finalQueryGlobal, "");

				finalQueryGlobal+=TipoMovimientoModuloConstantesFunciones.SFINALQUERY;

				this.cargarCombosTipoMovimientoModulosForeignKeyLista(finalQueryGlobal);
			}

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void cargarCombosLoteForeignKeyAsientoContableCajaChicaListas(Boolean cargarCombosDependencia)throws Exception {
		try	{
			
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			Modulo  moduloActualAux=new Modulo();
			
			
			AsientoContableCajaChicaParameterReturnGeneral asientocontablecajachicaReturnGeneral=new AsientoContableCajaChicaParameterReturnGeneral();
						
			


				String finalQueryGlobalEmpresa="";

				if(((this.empresasForeignKey==null||this.empresasForeignKey.size()<=0) && this.asientocontablecajachicaConstantesFunciones.cargarid_empresaAsientoContableCajaChica)
					 || (this.esRecargarFks && this.asientocontablecajachicaConstantesFunciones.cargarid_empresaAsientoContableCajaChica)) {

					if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpresaConstantesFunciones.getArrayColumnasGlobalesEmpresa(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpresa=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpresaConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpresa=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpresa, "");
						finalQueryGlobalEmpresa+=EmpresaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpresasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpresa=" WHERE " + ConstantesSql.ID + "="+asientocontablecajachicaSessionBean.getlidEmpresaActual();
					}
				} else {
					finalQueryGlobalEmpresa="NONE";
				}


				String finalQueryGlobalSucursal="";

				if(((this.sucursalsForeignKey==null||this.sucursalsForeignKey.size()<=0) && this.asientocontablecajachicaConstantesFunciones.cargarid_sucursalAsientoContableCajaChica)
					 || (this.esRecargarFks && this.asientocontablecajachicaConstantesFunciones.cargarid_sucursalAsientoContableCajaChica)) {

					if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=SucursalConstantesFunciones.getArrayColumnasGlobalesSucursal(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalSucursal=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,SucursalConstantesFunciones.TABLENAME);

						finalQueryGlobalSucursal=Funciones.GetFinalQueryAppend(finalQueryGlobalSucursal, "");
						finalQueryGlobalSucursal+=SucursalConstantesFunciones.SFINALQUERY;

						//this.cargarCombosSucursalsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalSucursal=" WHERE " + ConstantesSql.ID + "="+asientocontablecajachicaSessionBean.getlidSucursalActual();
					}
				} else {
					finalQueryGlobalSucursal="NONE";
				}


				String finalQueryGlobalEjercicio="";

				if(((this.ejerciciosForeignKey==null||this.ejerciciosForeignKey.size()<=0) && this.asientocontablecajachicaConstantesFunciones.cargarid_ejercicioAsientoContableCajaChica)
					 || (this.esRecargarFks && this.asientocontablecajachicaConstantesFunciones.cargarid_ejercicioAsientoContableCajaChica)) {

					if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EjercicioConstantesFunciones.getArrayColumnasGlobalesEjercicio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEjercicio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EjercicioConstantesFunciones.TABLENAME);

						finalQueryGlobalEjercicio=Funciones.GetFinalQueryAppend(finalQueryGlobalEjercicio, "");
						finalQueryGlobalEjercicio+=EjercicioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEjerciciosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEjercicio=" WHERE " + ConstantesSql.ID + "="+asientocontablecajachicaSessionBean.getlidEjercicioActual();
					}
				} else {
					finalQueryGlobalEjercicio="NONE";
				}


				String finalQueryGlobalPeriodo="";

				if(((this.periodosForeignKey==null||this.periodosForeignKey.size()<=0) && this.asientocontablecajachicaConstantesFunciones.cargarid_periodoAsientoContableCajaChica)
					 || (this.esRecargarFks && this.asientocontablecajachicaConstantesFunciones.cargarid_periodoAsientoContableCajaChica)) {

					if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=PeriodoConstantesFunciones.getArrayColumnasGlobalesPeriodo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalPeriodo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,PeriodoConstantesFunciones.TABLENAME);

						finalQueryGlobalPeriodo=Funciones.GetFinalQueryAppend(finalQueryGlobalPeriodo, "");
						finalQueryGlobalPeriodo+=PeriodoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosPeriodosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalPeriodo=" WHERE " + ConstantesSql.ID + "="+asientocontablecajachicaSessionBean.getlidPeriodoActual();
					}
				} else {
					finalQueryGlobalPeriodo="NONE";
				}


				String finalQueryGlobalUsuario="";

				if(((this.usuariosForeignKey==null||this.usuariosForeignKey.size()<=0) && this.asientocontablecajachicaConstantesFunciones.cargarid_usuarioAsientoContableCajaChica)
					 || (this.esRecargarFks && this.asientocontablecajachicaConstantesFunciones.cargarid_usuarioAsientoContableCajaChica)) {

					if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=UsuarioConstantesFunciones.getArrayColumnasGlobalesUsuario(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalUsuario=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,UsuarioConstantesFunciones.TABLENAME);

						finalQueryGlobalUsuario=Funciones.GetFinalQueryAppend(finalQueryGlobalUsuario, "");
						finalQueryGlobalUsuario+=UsuarioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosUsuariosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalUsuario=" WHERE " + ConstantesSql.ID + "="+asientocontablecajachicaSessionBean.getlidUsuarioActual();
					}
				} else {
					finalQueryGlobalUsuario="NONE";
				}


				String finalQueryGlobalAnio="";

				if(((this.aniosForeignKey==null||this.aniosForeignKey.size()<=0) && this.asientocontablecajachicaConstantesFunciones.cargarid_anioAsientoContableCajaChica)
					 || (this.esRecargarFks && this.asientocontablecajachicaConstantesFunciones.cargarid_anioAsientoContableCajaChica)) {

					if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=AnioConstantesFunciones.getArrayColumnasGlobalesAnio(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalAnio=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,AnioConstantesFunciones.TABLENAME);

						finalQueryGlobalAnio=Funciones.GetFinalQueryAppend(finalQueryGlobalAnio, "");
						finalQueryGlobalAnio+=AnioConstantesFunciones.SFINALQUERY;

						//this.cargarCombosAniosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalAnio=" WHERE " + ConstantesSql.ID + "="+asientocontablecajachicaSessionBean.getlidAnioActual();
					}
				} else {
					finalQueryGlobalAnio="NONE";
				}


				String finalQueryGlobalMes="";

				if(((this.messForeignKey==null||this.messForeignKey.size()<=0) && this.asientocontablecajachicaConstantesFunciones.cargarid_mesAsientoContableCajaChica)
					 || (this.esRecargarFks && this.asientocontablecajachicaConstantesFunciones.cargarid_mesAsientoContableCajaChica)) {

					if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MesConstantesFunciones.getArrayColumnasGlobalesMes(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMes=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MesConstantesFunciones.TABLENAME);

						finalQueryGlobalMes=Funciones.GetFinalQueryAppend(finalQueryGlobalMes, "");
						finalQueryGlobalMes+=MesConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMessForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMes=" WHERE " + ConstantesSql.ID + "="+asientocontablecajachicaSessionBean.getlidMesActual();
					}
				} else {
					finalQueryGlobalMes="NONE";
				}


				String finalQueryGlobalMoneda="";

				if(((this.monedasForeignKey==null||this.monedasForeignKey.size()<=0) && this.asientocontablecajachicaConstantesFunciones.cargarid_monedaAsientoContableCajaChica)
					 || (this.esRecargarFks && this.asientocontablecajachicaConstantesFunciones.cargarid_monedaAsientoContableCajaChica)) {

					if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=MonedaConstantesFunciones.getArrayColumnasGlobalesMoneda(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalMoneda=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,MonedaConstantesFunciones.TABLENAME);

						finalQueryGlobalMoneda=Funciones.GetFinalQueryAppend(finalQueryGlobalMoneda, "");
						finalQueryGlobalMoneda+=MonedaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosMonedasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalMoneda=" WHERE " + ConstantesSql.ID + "="+asientocontablecajachicaSessionBean.getlidMonedaActual();
					}
				} else {
					finalQueryGlobalMoneda="NONE";
				}


				String finalQueryGlobalEmpleado="";

				if(((this.empleadosForeignKey==null||this.empleadosForeignKey.size()<=0) && this.asientocontablecajachicaConstantesFunciones.cargarid_empleadoAsientoContableCajaChica)
					 || (this.esRecargarFks && this.asientocontablecajachicaConstantesFunciones.cargarid_empleadoAsientoContableCajaChica)) {

					if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EmpleadoConstantesFunciones.getArrayColumnasGlobalesEmpleado(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEmpleado=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EmpleadoConstantesFunciones.TABLENAME);

						finalQueryGlobalEmpleado=Funciones.GetFinalQueryAppend(finalQueryGlobalEmpleado, "");
						finalQueryGlobalEmpleado+=EmpleadoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEmpleadosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEmpleado=" WHERE " + ConstantesSql.ID + "="+asientocontablecajachicaSessionBean.getlidEmpleadoActual();
					}
				} else {
					finalQueryGlobalEmpleado="NONE";
				}


				String finalQueryGlobalEstadoAsientoContableCajaChica="";

				if(((this.estadoasientocontablecajachicasForeignKey==null||this.estadoasientocontablecajachicasForeignKey.size()<=0) && this.asientocontablecajachicaConstantesFunciones.cargarid_estado_asiento_contableAsientoContableCajaChica)
					 || (this.esRecargarFks && this.asientocontablecajachicaConstantesFunciones.cargarid_estado_asiento_contableAsientoContableCajaChica)) {

					if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionEstadoAsientoContableCajaChica()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=EstadoAsientoContableCajaChicaConstantesFunciones.getArrayColumnasGlobalesEstadoAsientoContableCajaChica(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalEstadoAsientoContableCajaChica=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,EstadoAsientoContableCajaChicaConstantesFunciones.TABLENAME);

						finalQueryGlobalEstadoAsientoContableCajaChica=Funciones.GetFinalQueryAppend(finalQueryGlobalEstadoAsientoContableCajaChica, "");
						finalQueryGlobalEstadoAsientoContableCajaChica+=EstadoAsientoContableCajaChicaConstantesFunciones.SFINALQUERY;

						//this.cargarCombosEstadoAsientoContableCajaChicasForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalEstadoAsientoContableCajaChica=" WHERE " + ConstantesSql.ID + "="+asientocontablecajachicaSessionBean.getlidEstadoAsientoContableCajaChicaActual();
					}
				} else {
					finalQueryGlobalEstadoAsientoContableCajaChica="NONE";
				}


				String finalQueryGlobalCliente="";

				if(((this.clientesForeignKey==null||this.clientesForeignKey.size()<=0) && this.asientocontablecajachicaConstantesFunciones.cargarid_clienteAsientoContableCajaChica)
					 || (this.esRecargarFks && this.asientocontablecajachicaConstantesFunciones.cargarid_clienteAsientoContableCajaChica)) {

					if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ClienteConstantesFunciones.getArrayColumnasGlobalesCliente(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCliente=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,ClienteConstantesFunciones.TABLENAME);

						finalQueryGlobalCliente=Funciones.GetFinalQueryAppend(finalQueryGlobalCliente, "");
						finalQueryGlobalCliente+=ClienteConstantesFunciones.SFINALQUERY;

						//this.cargarCombosClientesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCliente=" WHERE " + ConstantesSql.ID + "="+asientocontablecajachicaSessionBean.getlidClienteActual();
					}
				} else {
					finalQueryGlobalCliente="NONE";
				}


				String finalQueryGlobalTransaccion="";

				if(((this.transaccionsForeignKey==null||this.transaccionsForeignKey.size()<=0) && this.asientocontablecajachicaConstantesFunciones.cargarid_transaccionAsientoContableCajaChica)
					 || (this.esRecargarFks && this.asientocontablecajachicaConstantesFunciones.cargarid_transaccionAsientoContableCajaChica)) {

					if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TransaccionConstantesFunciones.getArrayColumnasGlobalesTransaccion(this.arrDatoGeneral,this.arrDatoGeneralNo);
						moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

						finalQueryGlobalTransaccion=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TransaccionConstantesFunciones.TABLENAME);

						finalQueryGlobalTransaccion=Funciones.GetFinalQueryAppend(finalQueryGlobalTransaccion, "");
						finalQueryGlobalTransaccion+=TransaccionConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTransaccionsForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTransaccion=" WHERE " + ConstantesSql.ID + "="+asientocontablecajachicaSessionBean.getlidTransaccionActual();
					}
				} else {
					finalQueryGlobalTransaccion="NONE";
				}


				String finalQueryGlobalTipoDocumento="";

				if(((this.tipodocumentosForeignKey==null||this.tipodocumentosForeignKey.size()<=0) && this.asientocontablecajachicaConstantesFunciones.cargarid_tipo_documentoAsientoContableCajaChica)
					 || (this.esRecargarFks && this.asientocontablecajachicaConstantesFunciones.cargarid_tipo_documentoAsientoContableCajaChica)) {

					if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumento()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoDocumentoConstantesFunciones.getArrayColumnasGlobalesTipoDocumento(this.arrDatoGeneral,this.arrDatoGeneralNo);
						moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

						finalQueryGlobalTipoDocumento=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TipoDocumentoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoDocumento=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoDocumento, "");
						finalQueryGlobalTipoDocumento+=TipoDocumentoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoDocumentosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoDocumento=" WHERE " + ConstantesSql.ID + "="+asientocontablecajachicaSessionBean.getlidTipoDocumentoActual();
					}
				} else {
					finalQueryGlobalTipoDocumento="NONE";
				}


				String finalQueryGlobalCuentaContable="";

				if(((this.cuentacontablesForeignKey==null||this.cuentacontablesForeignKey.size()<=0) && this.asientocontablecajachicaConstantesFunciones.cargarid_cuenta_contableAsientoContableCajaChica)
					 || (this.esRecargarFks && this.asientocontablecajachicaConstantesFunciones.cargarid_cuenta_contableAsientoContableCajaChica)) {

					if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();

						this.arrDatoGeneralNo.add("id_modulo");

						arrColumnasGlobales=CuentaContableConstantesFunciones.getArrayColumnasGlobalesCuentaContable(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalCuentaContable=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,CuentaContableConstantesFunciones.TABLENAME);

						finalQueryGlobalCuentaContable=Funciones.GetFinalQueryAppend(finalQueryGlobalCuentaContable, "");
						finalQueryGlobalCuentaContable+=CuentaContableConstantesFunciones.SFINALQUERY;

						//this.cargarCombosCuentaContablesForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalCuentaContable=" WHERE " + ConstantesSql.ID + "="+asientocontablecajachicaSessionBean.getlidCuentaContableActual();
					}
				} else {
					finalQueryGlobalCuentaContable="NONE";
				}


				String finalQueryGlobalModulo="";

				if(((this.modulosForeignKey==null||this.modulosForeignKey.size()<=0) && this.asientocontablecajachicaConstantesFunciones.cargarid_moduloAsientoContableCajaChica)
					 || (this.esRecargarFks && this.asientocontablecajachicaConstantesFunciones.cargarid_moduloAsientoContableCajaChica)) {

					if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=ModuloConstantesFunciones.getArrayColumnasGlobalesModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

						finalQueryGlobalModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,ModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalModulo, "");
						finalQueryGlobalModulo+=ModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalModulo=" WHERE " + ConstantesSql.ID + "="+asientocontablecajachicaSessionBean.getlidModuloActual();
					}
				} else {
					finalQueryGlobalModulo="NONE";
				}


				String finalQueryGlobalTipoMovimiento="";

				if(((this.tipomovimientosForeignKey==null||this.tipomovimientosForeignKey.size()<=0) && this.asientocontablecajachicaConstantesFunciones.cargarid_tipo_movimientoAsientoContableCajaChica)
					 || (this.esRecargarFks && this.asientocontablecajachicaConstantesFunciones.cargarid_tipo_movimientoAsientoContableCajaChica)) {

					if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTipoMovimiento()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoMovimientoConstantesFunciones.getArrayColumnasGlobalesTipoMovimiento(this.arrDatoGeneral,this.arrDatoGeneralNo);
						finalQueryGlobalTipoMovimiento=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,this.moduloActual,true,false,arrColumnasGlobales,TipoMovimientoConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoMovimiento=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoMovimiento, "");
						finalQueryGlobalTipoMovimiento+=TipoMovimientoConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoMovimientosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoMovimiento=" WHERE " + ConstantesSql.ID + "="+asientocontablecajachicaSessionBean.getlidTipoMovimientoActual();
					}
				} else {
					finalQueryGlobalTipoMovimiento="NONE";
				}


				String finalQueryGlobalTipoTransaccionModulo="";

				if(((this.tipotransaccionmodulosForeignKey==null||this.tipotransaccionmodulosForeignKey.size()<=0) && this.asientocontablecajachicaConstantesFunciones.cargarid_tipo_transaccion_moduloAsientoContableCajaChica)
					 || (this.esRecargarFks && this.asientocontablecajachicaConstantesFunciones.cargarid_tipo_transaccion_moduloAsientoContableCajaChica)) {

					if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTipoTransaccionModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoTransaccionModuloConstantesFunciones.getArrayColumnasGlobalesTipoTransaccionModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

						finalQueryGlobalTipoTransaccionModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TipoTransaccionModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoTransaccionModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoTransaccionModulo, "");
						finalQueryGlobalTipoTransaccionModulo+=TipoTransaccionModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoTransaccionModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoTransaccionModulo=" WHERE " + ConstantesSql.ID + "="+asientocontablecajachicaSessionBean.getlidTipoTransaccionModuloActual();
					}
				} else {
					finalQueryGlobalTipoTransaccionModulo="NONE";
				}


				String finalQueryGlobalTipoMovimientoModulo="";

				if(((this.tipomovimientomodulosForeignKey==null||this.tipomovimientomodulosForeignKey.size()<=0) && this.asientocontablecajachicaConstantesFunciones.cargarid_tipo_movimiento_moduloAsientoContableCajaChica)
					 || (this.esRecargarFks && this.asientocontablecajachicaConstantesFunciones.cargarid_tipo_movimiento_moduloAsientoContableCajaChica)) {

					if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTipoMovimientoModulo()) {

						this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
						this.arrDatoGeneralNo= new  ArrayList<String>();


						arrColumnasGlobales=TipoMovimientoModuloConstantesFunciones.getArrayColumnasGlobalesTipoMovimientoModulo(this.arrDatoGeneral,this.arrDatoGeneralNo);
						moduloActualAux.setId(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR);

						finalQueryGlobalTipoMovimientoModulo=Funciones.GetWhereGlobalConstants(this.parametroGeneralUsuario,moduloActualAux,true,false,arrColumnasGlobales,TipoMovimientoModuloConstantesFunciones.TABLENAME);

						finalQueryGlobalTipoMovimientoModulo=Funciones.GetFinalQueryAppend(finalQueryGlobalTipoMovimientoModulo, "");
						finalQueryGlobalTipoMovimientoModulo+=TipoMovimientoModuloConstantesFunciones.SFINALQUERY;

						//this.cargarCombosTipoMovimientoModulosForeignKeyLista(finalQueryGlobal);
					} else {
						finalQueryGlobalTipoMovimientoModulo=" WHERE " + ConstantesSql.ID + "="+asientocontablecajachicaSessionBean.getlidTipoMovimientoModuloActual();
					}
				} else {
					finalQueryGlobalTipoMovimientoModulo="NONE";
				}
			
			//ARCHITECTURE			
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				asientocontablecajachicaReturnGeneral=asientocontablecajachicaLogic.cargarCombosLoteForeignKeyAsientoContableCajaChica(finalQueryGlobalEmpresa,finalQueryGlobalSucursal,finalQueryGlobalEjercicio,finalQueryGlobalPeriodo,finalQueryGlobalUsuario,finalQueryGlobalAnio,finalQueryGlobalMes,finalQueryGlobalMoneda,finalQueryGlobalEmpleado,finalQueryGlobalEstadoAsientoContableCajaChica,finalQueryGlobalCliente,finalQueryGlobalTransaccion,finalQueryGlobalTipoDocumento,finalQueryGlobalCuentaContable,finalQueryGlobalModulo,finalQueryGlobalTipoMovimiento,finalQueryGlobalTipoTransaccionModulo,finalQueryGlobalTipoMovimientoModulo);//WithConnection
			} else if(Constantes.ISUSAEJBREMOTE) {
			} else if(Constantes.ISUSAEJBHOME) {
			}			
			//ARCHITECTURE
			
			

			if(!finalQueryGlobalEmpresa.equals("NONE")) {
				this.empresasForeignKey=asientocontablecajachicaReturnGeneral.getempresasForeignKey();
			}

			if(!finalQueryGlobalSucursal.equals("NONE")) {
				this.sucursalsForeignKey=asientocontablecajachicaReturnGeneral.getsucursalsForeignKey();
			}

			if(!finalQueryGlobalEjercicio.equals("NONE")) {
				this.ejerciciosForeignKey=asientocontablecajachicaReturnGeneral.getejerciciosForeignKey();
			}

			if(!finalQueryGlobalPeriodo.equals("NONE")) {
				this.periodosForeignKey=asientocontablecajachicaReturnGeneral.getperiodosForeignKey();
			}

			if(!finalQueryGlobalUsuario.equals("NONE")) {
				this.usuariosForeignKey=asientocontablecajachicaReturnGeneral.getusuariosForeignKey();
			}

			if(!finalQueryGlobalAnio.equals("NONE")) {
				this.aniosForeignKey=asientocontablecajachicaReturnGeneral.getaniosForeignKey();
			}

			if(!finalQueryGlobalMes.equals("NONE")) {
				this.messForeignKey=asientocontablecajachicaReturnGeneral.getmessForeignKey();
			}

			if(!finalQueryGlobalMoneda.equals("NONE")) {
				this.monedasForeignKey=asientocontablecajachicaReturnGeneral.getmonedasForeignKey();
			}

			if(!finalQueryGlobalEmpleado.equals("NONE")) {
				this.empleadosForeignKey=asientocontablecajachicaReturnGeneral.getempleadosForeignKey();
			}

			if(!finalQueryGlobalEstadoAsientoContableCajaChica.equals("NONE")) {
				this.estadoasientocontablecajachicasForeignKey=asientocontablecajachicaReturnGeneral.getestadoasientocontablecajachicasForeignKey();
			}

			if(!finalQueryGlobalCliente.equals("NONE")) {
				this.clientesForeignKey=asientocontablecajachicaReturnGeneral.getclientesForeignKey();
			}

			if(!finalQueryGlobalTransaccion.equals("NONE")) {
				this.transaccionsForeignKey=asientocontablecajachicaReturnGeneral.gettransaccionsForeignKey();
			}

			if(!finalQueryGlobalTipoDocumento.equals("NONE")) {
				this.tipodocumentosForeignKey=asientocontablecajachicaReturnGeneral.gettipodocumentosForeignKey();
			}

			if(!finalQueryGlobalCuentaContable.equals("NONE")) {
				this.cuentacontablesForeignKey=asientocontablecajachicaReturnGeneral.getcuentacontablesForeignKey();
			}

			if(!finalQueryGlobalModulo.equals("NONE")) {
				this.modulosForeignKey=asientocontablecajachicaReturnGeneral.getmodulosForeignKey();
			}

			if(!finalQueryGlobalTipoMovimiento.equals("NONE")) {
				this.tipomovimientosForeignKey=asientocontablecajachicaReturnGeneral.gettipomovimientosForeignKey();
			}

			if(!finalQueryGlobalTipoTransaccionModulo.equals("NONE")) {
				this.tipotransaccionmodulosForeignKey=asientocontablecajachicaReturnGeneral.gettipotransaccionmodulosForeignKey();
			}

			if(!finalQueryGlobalTipoMovimientoModulo.equals("NONE")) {
				this.tipomovimientomodulosForeignKey=asientocontablecajachicaReturnGeneral.gettipomovimientomodulosForeignKey();
			}
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void addItemDefectoCombosTodosForeignKeyAsientoContableCajaChica()throws Exception {
		try {
			
			this.addItemDefectoCombosForeignKeyEmpresa();
			this.addItemDefectoCombosForeignKeySucursal();
			this.addItemDefectoCombosForeignKeyEjercicio();
			this.addItemDefectoCombosForeignKeyPeriodo();
			this.addItemDefectoCombosForeignKeyUsuario();
			this.addItemDefectoCombosForeignKeyAnio();
			this.addItemDefectoCombosForeignKeyMes();
			this.addItemDefectoCombosForeignKeyMoneda();
			this.addItemDefectoCombosForeignKeyEmpleado();
			this.addItemDefectoCombosForeignKeyEstadoAsientoContableCajaChica();
			this.addItemDefectoCombosForeignKeyCliente();
			this.addItemDefectoCombosForeignKeyTransaccion();
			this.addItemDefectoCombosForeignKeyTipoDocumento();
			this.addItemDefectoCombosForeignKeyCuentaContable();
			this.addItemDefectoCombosForeignKeyModulo();
			this.addItemDefectoCombosForeignKeyTipoMovimiento();
			this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
			this.addItemDefectoCombosForeignKeyTipoMovimientoModulo();
		} catch(Exception e) {
			throw e;
		}		
	}
	
	



	public void addItemDefectoCombosForeignKeyEmpresa()throws Exception {
		try {
			if(this.asientocontablecajachicaSessionBean==null) {
				this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionEmpresa()) {
				Empresa empresa=new Empresa();
				EmpresaConstantesFunciones.setEmpresaDescripcion(empresa,Constantes.SMENSAJE_ESCOJA_OPCION);
				empresa.setId(null);

				if(!EmpresaConstantesFunciones.ExisteEnLista(this.empresasForeignKey,empresa,true)) {

					this.empresasForeignKey.add(0,empresa);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeySucursal()throws Exception {
		try {

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionSucursal()) {
				Sucursal sucursal=new Sucursal();
				SucursalConstantesFunciones.setSucursalDescripcion(sucursal,Constantes.SMENSAJE_ESCOJA_OPCION);
				sucursal.setId(null);

				if(!SucursalConstantesFunciones.ExisteEnLista(this.sucursalsForeignKey,sucursal,true)) {

					this.sucursalsForeignKey.add(0,sucursal);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEjercicio()throws Exception {
		try {

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionEjercicio()) {
				Ejercicio ejercicio=new Ejercicio();
				EjercicioConstantesFunciones.setEjercicioDescripcion(ejercicio,Constantes.SMENSAJE_ESCOJA_OPCION);
				ejercicio.setId(null);

				if(!EjercicioConstantesFunciones.ExisteEnLista(this.ejerciciosForeignKey,ejercicio,true)) {

					this.ejerciciosForeignKey.add(0,ejercicio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyPeriodo()throws Exception {
		try {

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionPeriodo()) {
				Periodo periodo=new Periodo();
				PeriodoConstantesFunciones.setPeriodoDescripcion(periodo,Constantes.SMENSAJE_ESCOJA_OPCION);
				periodo.setId(null);

				if(!PeriodoConstantesFunciones.ExisteEnLista(this.periodosForeignKey,periodo,true)) {

					this.periodosForeignKey.add(0,periodo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyUsuario()throws Exception {
		try {

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionUsuario()) {
				Usuario usuario=new Usuario();
				UsuarioConstantesFunciones.setUsuarioDescripcion(usuario,Constantes.SMENSAJE_ESCOJA_OPCION);
				usuario.setId(null);

				if(!UsuarioConstantesFunciones.ExisteEnLista(this.usuariosForeignKey,usuario,true)) {

					this.usuariosForeignKey.add(0,usuario);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyAnio()throws Exception {
		try {

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionAnio()) {
				Anio anio=new Anio();
				AnioConstantesFunciones.setAnioDescripcion(anio,Constantes.SMENSAJE_ESCOJA_OPCION);
				anio.setId(null);

				if(!AnioConstantesFunciones.ExisteEnLista(this.aniosForeignKey,anio,true)) {

					this.aniosForeignKey.add(0,anio);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMes()throws Exception {
		try {

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionMes()) {
				Mes mes=new Mes();
				MesConstantesFunciones.setMesDescripcion(mes,Constantes.SMENSAJE_ESCOJA_OPCION);
				mes.setId(null);

				if(!MesConstantesFunciones.ExisteEnLista(this.messForeignKey,mes,true)) {

					this.messForeignKey.add(0,mes);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyMoneda()throws Exception {
		try {

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionMoneda()) {
				Moneda moneda=new Moneda();
				MonedaConstantesFunciones.setMonedaDescripcion(moneda,Constantes.SMENSAJE_ESCOJA_OPCION);
				moneda.setId(null);

				if(!MonedaConstantesFunciones.ExisteEnLista(this.monedasForeignKey,moneda,true)) {

					this.monedasForeignKey.add(0,moneda);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEmpleado()throws Exception {
		try {

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionEmpleado()) {
				Empleado empleado=new Empleado();
				EmpleadoConstantesFunciones.setEmpleadoDescripcion(empleado,Constantes.SMENSAJE_ESCOJA_OPCION);
				empleado.setId(null);

				if(!EmpleadoConstantesFunciones.ExisteEnLista(this.empleadosForeignKey,empleado,true)) {

					this.empleadosForeignKey.add(0,empleado);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyEstadoAsientoContableCajaChica()throws Exception {
		try {

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionEstadoAsientoContableCajaChica()) {
				EstadoAsientoContableCajaChica estadoasientocontablecajachica=new EstadoAsientoContableCajaChica();
				EstadoAsientoContableCajaChicaConstantesFunciones.setEstadoAsientoContableCajaChicaDescripcion(estadoasientocontablecajachica,Constantes.SMENSAJE_ESCOJA_OPCION);
				estadoasientocontablecajachica.setId(null);

				if(!EstadoAsientoContableCajaChicaConstantesFunciones.ExisteEnLista(this.estadoasientocontablecajachicasForeignKey,estadoasientocontablecajachica,true)) {

					this.estadoasientocontablecajachicasForeignKey.add(0,estadoasientocontablecajachica);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCliente()throws Exception {
		try {

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionCliente()) {
				Cliente cliente=new Cliente();
				ClienteConstantesFunciones.setClienteDescripcion(cliente,Constantes.SMENSAJE_ESCOJA_OPCION);
				cliente.setId(null);

				if(!ClienteConstantesFunciones.ExisteEnLista(this.clientesForeignKey,cliente,true)) {

					this.clientesForeignKey.add(0,cliente);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTransaccion()throws Exception {
		try {

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTransaccion()) {
				Transaccion transaccion=new Transaccion();
				TransaccionConstantesFunciones.setTransaccionDescripcion(transaccion,Constantes.SMENSAJE_ESCOJA_OPCION);
				transaccion.setId(null);

				if(!TransaccionConstantesFunciones.ExisteEnLista(this.transaccionsForeignKey,transaccion,true)) {

					this.transaccionsForeignKey.add(0,transaccion);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoDocumento()throws Exception {
		try {

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTipoDocumento()) {
				TipoDocumento tipodocumento=new TipoDocumento();
				TipoDocumentoConstantesFunciones.setTipoDocumentoDescripcion(tipodocumento,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipodocumento.setId(null);

				if(!TipoDocumentoConstantesFunciones.ExisteEnLista(this.tipodocumentosForeignKey,tipodocumento,true)) {

					this.tipodocumentosForeignKey.add(0,tipodocumento);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyCuentaContable()throws Exception {
		try {

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionCuentaContable()) {
				CuentaContable cuentacontable=new CuentaContable();
				CuentaContableConstantesFunciones.setCuentaContableDescripcion(cuentacontable,Constantes.SMENSAJE_ESCOJA_OPCION);
				cuentacontable.setId(null);

				if(!CuentaContableConstantesFunciones.ExisteEnLista(this.cuentacontablesForeignKey,cuentacontable,true)) {

					this.cuentacontablesForeignKey.add(0,cuentacontable);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyModulo()throws Exception {
		try {

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionModulo()) {
				Modulo modulo=new Modulo();
				ModuloConstantesFunciones.setModuloDescripcion(modulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				modulo.setId(null);

				if(!ModuloConstantesFunciones.ExisteEnLista(this.modulosForeignKey,modulo,true)) {

					this.modulosForeignKey.add(0,modulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoMovimiento()throws Exception {
		try {

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTipoMovimiento()) {
				TipoMovimiento tipomovimiento=new TipoMovimiento();
				TipoMovimientoConstantesFunciones.setTipoMovimientoDescripcion(tipomovimiento,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipomovimiento.setId(null);

				if(!TipoMovimientoConstantesFunciones.ExisteEnLista(this.tipomovimientosForeignKey,tipomovimiento,true)) {

					this.tipomovimientosForeignKey.add(0,tipomovimiento);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoTransaccionModulo()throws Exception {
		try {

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTipoTransaccionModulo()) {
				TipoTransaccionModulo tipotransaccionmodulo=new TipoTransaccionModulo();
				TipoTransaccionModuloConstantesFunciones.setTipoTransaccionModuloDescripcion(tipotransaccionmodulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipotransaccionmodulo.setId(null);

				if(!TipoTransaccionModuloConstantesFunciones.ExisteEnLista(this.tipotransaccionmodulosForeignKey,tipotransaccionmodulo,true)) {

					this.tipotransaccionmodulosForeignKey.add(0,tipotransaccionmodulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}

	public void addItemDefectoCombosForeignKeyTipoMovimientoModulo()throws Exception {
		try {

			if(!this.asientocontablecajachicaSessionBean.getisBusquedaDesdeForeignKeySesionTipoMovimientoModulo()) {
				TipoMovimientoModulo tipomovimientomodulo=new TipoMovimientoModulo();
				TipoMovimientoModuloConstantesFunciones.setTipoMovimientoModuloDescripcion(tipomovimientomodulo,Constantes.SMENSAJE_ESCOJA_OPCION);
				tipomovimientomodulo.setId(null);

				if(!TipoMovimientoModuloConstantesFunciones.ExisteEnLista(this.tipomovimientomodulosForeignKey,tipomovimientomodulo,true)) {

					this.tipomovimientomodulosForeignKey.add(0,tipomovimientomodulo);
				}
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void initActionsCombosTodosForeignKeyAsientoContableCajaChica()throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	public void initActionsCombosTodosForeignKeyAsientoContableCajaChica(String sFormularioTipoBusqueda)throws Exception {
		try {
			
		} catch(Exception e) {
			throw e;
		}		
	}
	
	


	
	


	
	public void setVariablesGlobalesCombosForeignKeyAsientoContableCajaChica()throws Exception {	
		try {
			if(this.parametroGeneralUsuario!=null && this.parametroGeneralUsuario.getId()>0) {
			
				this.setActualEmpresaForeignKey(this.parametroGeneralUsuario.getid_empresa(),false,"Formulario");
				this.setActualSucursalForeignKey(this.parametroGeneralUsuario.getid_sucursal(),false,"Formulario");
				this.setActualEjercicioForeignKey(this.parametroGeneralUsuario.getid_ejercicio(),false,"Formulario");
				this.setActualPeriodoForeignKey(this.parametroGeneralUsuario.getid_periodo(),false,"Formulario");
				this.setActualUsuarioForeignKey(this.parametroGeneralUsuario.getid_usuario(),false,"Formulario");
				this.setActualMonedaForeignKey(this.parametroGeneralUsuario.getid_moneda(),false,"Formulario");
				this.setActualModuloForeignKey(ModuloConstantesFuncionesAdditional.LID_MODULO_CUENTAS_POR_COBRAR,false,"Formulario");
			
			
				this.asientocontablecajachica.setfecha(this.parametroGeneralUsuario.getfecha_sistema());
			}
			
			//INICIALIZA VARIABLES COMBOS GLOBALES AUXILIARES A FORMULARIO(Anio,Mes)
			this.setVariablesGlobalesAuxiliaresCombosForeignKeyAsientoContableCajaChica();
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToFormularioForeignKeyAsientoContableCajaChica(AsientoContableCajaChica asientocontablecajachica)throws Exception {	
		try {
			
			this.setActualEmpleadoForeignKey(asientocontablecajachica.getid_empleado(),false,"Formulario");
			this.setActualEstadoAsientoContableCajaChicaForeignKey(asientocontablecajachica.getid_estado_asiento_contable(),false,"Formulario");
			this.setActualClienteForeignKey(asientocontablecajachica.getid_cliente(),false,"Formulario");
			this.setActualTransaccionForeignKey(asientocontablecajachica.getid_transaccion(),false,"Formulario");
			this.setActualTipoDocumentoForeignKey(asientocontablecajachica.getid_tipo_documento(),false,"Formulario");
			this.setActualCuentaContableForeignKey(asientocontablecajachica.getid_cuenta_contable(),false,"Formulario");
			this.setActualTipoMovimientoForeignKey(asientocontablecajachica.getid_tipo_movimiento(),false,"Formulario");
			this.setActualTipoTransaccionModuloForeignKey(asientocontablecajachica.getid_tipo_transaccion_modulo(),false,"Formulario");
			this.setActualTipoMovimientoModuloForeignKey(asientocontablecajachica.getid_tipo_movimiento_modulo(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesObjetoActualToListasForeignKeyAsientoContableCajaChica(AsientoContableCajaChica asientocontablecajachica,String sTipoEvento)throws Exception {	
		try {
			
			

				if(asientocontablecajachica.getEmpleado()!=null && !sTipoEvento.equals("id_empleadoAsientoContableCajaChica")) { //sTipoEvento Evita Bucle Infinito

					this.empleadosForeignKey=new ArrayList<Empleado>();
					this.empleadosForeignKey.add(asientocontablecajachica.getEmpleado());

					this.addItemDefectoCombosForeignKeyEmpleado();
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}

				if(asientocontablecajachica.getCliente()!=null && !sTipoEvento.equals("id_clienteAsientoContableCajaChica")) { //sTipoEvento Evita Bucle Infinito

					this.clientesForeignKey=new ArrayList<Cliente>();
					this.clientesForeignKey.add(asientocontablecajachica.getCliente());

					this.addItemDefectoCombosForeignKeyCliente();
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				if(asientocontablecajachica.getCuentaContable()!=null && !sTipoEvento.equals("id_cuenta_contableAsientoContableCajaChica")) { //sTipoEvento Evita Bucle Infinito

					this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();
					this.cuentacontablesForeignKey.add(asientocontablecajachica.getCuentaContable());

					this.addItemDefectoCombosForeignKeyCuentaContable();
					this.cargarCombosFrameCuentaContablesForeignKey("Todos");
				}
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	/*
	public void setVariablesCombosFromBeanForeignKeyAsientoContableCajaChica()throws Exception {	
		try {
			
			this.setActualEmpleadoForeignKey(this.asientocontablecajachicaConstantesFunciones.getid_empleado(),false,"Formulario");
			this.setActualEstadoAsientoContableCajaChicaForeignKey(this.asientocontablecajachicaConstantesFunciones.getid_estado_asiento_contable(),false,"Formulario");
			this.setActualClienteForeignKey(this.asientocontablecajachicaConstantesFunciones.getid_cliente(),false,"Formulario");
			this.setActualTransaccionForeignKey(this.asientocontablecajachicaConstantesFunciones.getid_transaccion(),false,"Formulario");
			this.setActualTipoDocumentoForeignKey(this.asientocontablecajachicaConstantesFunciones.getid_tipo_documento(),false,"Formulario");
			this.setActualCuentaContableForeignKey(this.asientocontablecajachicaConstantesFunciones.getid_cuenta_contable(),false,"Formulario");
			this.setActualTipoMovimientoForeignKey(this.asientocontablecajachicaConstantesFunciones.getid_tipo_movimiento(),false,"Formulario");
			this.setActualTipoTransaccionModuloForeignKey(this.asientocontablecajachicaConstantesFunciones.getid_tipo_transaccion_modulo(),false,"Formulario");
			this.setActualTipoMovimientoModuloForeignKey(this.asientocontablecajachicaConstantesFunciones.getid_tipo_movimiento_modulo(),false,"Formulario");			
		} catch(Exception e) {
			throw e;
		}
	}
	*/
	
	public void setVariablesGlobalesAuxiliaresCombosForeignKeyAsientoContableCajaChica()throws Exception {	
		try {
			

				if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
					Ejercicio ejercicioActual=(Ejercicio)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_ejercicioAsientoContableCajaChica.getSelectedItem();
					this.setActualAnioForeignKey(ejercicioActual.getid_anio(),false,"Formulario");
				}

				if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
					Periodo periodoActual=(Periodo)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_periodoAsientoContableCajaChica.getSelectedItem();
					this.setActualMesForeignKey(periodoActual.getid_mes(),false,"Formulario");
				}

				this.setActualUsuarioForeignKey(this.usuarioActual.getId(),false,"Formulario");
		
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesDefaultCombosForeignKeyAsientoContableCajaChica()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void setVariablesParametroCombosForeignKeyAsientoContableCajaChica()throws Exception {	
		try {
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	public void cargarCombosParametroAsientoContableCajaChica()throws Exception {
		try	{
			ArrayList<String> arrColumnasGlobales=new ArrayList<String>();
			String  finalQueryGlobal="";
			
			//this.cargarDatosCliente();
			
			
			
		} catch(Exception e) {
			throw e;
		}		
	}
		
	public void cargarCombosFrameForeignKeyAsientoContableCajaChica()throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey("Todos");
			this.cargarCombosFrameSucursalsForeignKey("Todos");
			this.cargarCombosFrameEjerciciosForeignKey("Todos");
			this.cargarCombosFramePeriodosForeignKey("Todos");
			this.cargarCombosFrameUsuariosForeignKey("Todos");
			this.cargarCombosFrameAniosForeignKey("Todos");
			this.cargarCombosFrameMessForeignKey("Todos");
			this.cargarCombosFrameMonedasForeignKey("Todos");
			this.cargarCombosFrameEmpleadosForeignKey("Todos");
			this.cargarCombosFrameEstadoAsientoContableCajaChicasForeignKey("Todos");
			this.cargarCombosFrameClientesForeignKey("Todos");
			this.cargarCombosFrameTransaccionsForeignKey("Todos");
			this.cargarCombosFrameTipoDocumentosForeignKey("Todos");
			this.cargarCombosFrameCuentaContablesForeignKey("Todos");
			this.cargarCombosFrameModulosForeignKey("Todos");
			this.cargarCombosFrameTipoMovimientosForeignKey("Todos");
			this.cargarCombosFrameTipoTransaccionModulosForeignKey("Todos");
			this.cargarCombosFrameTipoMovimientoModulosForeignKey("Todos");

		} catch(Exception e) {
			throw e;
		}		
	}		
	
	public void cargarCombosFrameForeignKeyAsientoContableCajaChica(String sFormularioTipoBusqueda)throws Exception {
		try {
			

			this.cargarCombosFrameEmpresasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameSucursalsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEjerciciosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFramePeriodosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameUsuariosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameMonedasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameEstadoAsientoContableCajaChicasForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTransaccionsForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoDocumentosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameCuentaContablesForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameModulosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoMovimientosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoTransaccionModulosForeignKey(sFormularioTipoBusqueda);
			this.cargarCombosFrameTipoMovimientoModulosForeignKey(sFormularioTipoBusqueda);

		} catch(Exception e) {
			throw e;
		}		
	}	
	
	public void setItemDefectoCombosForeignKeyAsientoContableCajaChica()throws Exception {
		try {
			



			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empresaAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empresaAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empresaAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_sucursalAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_sucursalAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_sucursalAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_ejercicioAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_ejercicioAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_ejercicioAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_periodoAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_periodoAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_periodoAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_usuarioAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_usuarioAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_usuarioAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_anioAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_anioAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_anioAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_mesAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_mesAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_mesAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_monedaAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_monedaAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_monedaAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empleadoAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empleadoAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empleadoAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_estado_asiento_contableAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_estado_asiento_contableAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_estado_asiento_contableAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_clienteAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_clienteAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_clienteAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_transaccionAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_transaccionAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_transaccionAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_documentoAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_documentoAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_documentoAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_cuenta_contableAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_cuenta_contableAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_cuenta_contableAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_moduloAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_moduloAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_moduloAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimientoAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimientoAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimientoAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChica.setSelectedIndex(0);
			}

			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChica.getItemCount()>0) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChica.setSelectedIndex(0);
			}
		} catch(Exception e) {
			throw e;
		}		
	}		
	
	




































	
	

	public AsientoContableCajaChicaBeanSwingJInternalFrame() throws Exception {
		super(false,PaginaTipo.PRINCIPAL);
	}
	
	public AsientoContableCajaChicaBeanSwingJInternalFrame(Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
	}
	
	public AsientoContableCajaChicaBeanSwingJInternalFrame(Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,PaginaTipo paginaTipo) throws Exception {
		super(cargarRelaciones,paginaTipo);
		
		this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean(); 
		this.asientocontablecajachicaConstantesFunciones=new AsientoContableCajaChicaConstantesFunciones(); 
		this.asientocontablecajachicaBean=new AsientoContableCajaChica();//(this.asientocontablecajachicaConstantesFunciones); 		
		this.asientocontablecajachicaReturnGeneral=new AsientoContableCajaChicaParameterReturnGeneral(); 
		
		this.asientocontablecajachicaSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
		this.asientocontablecajachicaSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
				
	}
	
	public AsientoContableCajaChicaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,cargarTodosDatos);
	}
		
	public AsientoContableCajaChicaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,Boolean cargarRelaciones,Boolean cargarTodosDatos,PaginaTipo paginaTipo) throws Exception {
		this(blncargarCombostrForeignKey,blnCargarInformacionInicial,jdesktopPane,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo,false,false,cargarRelaciones,cargarTodosDatos);
	}	
	
	public AsientoContableCajaChicaBeanSwingJInternalFrame(Boolean blncargarCombostrForeignKey,Boolean blnCargarInformacionInicial,JDesktopPane jdesktopPane,Usuario usuarioActual,ResumenUsuario resumenUsuarioActual,Modulo moduloActual,Opcion opcionActual,ParametroGeneralSg parametroGeneralSg,ParametroGeneralUsuario parametroGeneralUsuario,PaginaTipo paginaTipo,Boolean conGuardarRelaciones,Boolean esGuardarRelacionado,Boolean cargarRelaciones,Boolean cargarTodosDatos) throws Exception //Boolean esParaBusquedaForeignKey
    {
		super(jdesktopPane,conGuardarRelaciones,esGuardarRelacionado,cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		try {
			
			this.permiteRecargarForm=false;
			
			this.startProcessAsientoContableCajaChica(true);
			
			Boolean esParaBusquedaForeignKey=false;//ANTES USADO COMO PARAMETRO DEL CONSTRUCTOR
			
			if(paginaTipo.equals(PaginaTipo.BUSQUEDA)) {
				esParaBusquedaForeignKey=true;
			}
			
			//OBLIGA VALIDA CON GUARDAR RELACIONES, TAMBIEN EN SWING
			conGuardarRelaciones=true;
			
			
			//SE ASIGNA EN CLASE PADRE
			/*
			this.parametroGeneralSg=parametroGeneralSg;		
			this.parametroGeneralUsuario=parametroGeneralUsuario;	
			this.usuarioActual=usuarioActual;
			this.moduloActual=moduloActual;
			*/						
			
			long start_time=0;
			long end_time=0;
			
			if(Constantes2.ISDEVELOPING2) {
				start_time = System.currentTimeMillis();
			}
			
			if(!cargarTodosDatos) {
				this.sAccionBusqueda="NINGUNO";
			}
			
			this.asientocontablecajachicaConstantesFunciones=new AsientoContableCajaChicaConstantesFunciones(); 
			this.asientocontablecajachicaBean=new AsientoContableCajaChica();//this.asientocontablecajachicaConstantesFunciones); 			
			this.asientocontablecajachicaReturnGeneral=new AsientoContableCajaChicaParameterReturnGeneral(); 
		
			AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.CargaInicialInicio(this, "NORMAL", null);
			
			this.setTitle(Funciones.GetTituloSistema(this.parametroGeneralSg,this.moduloActual,this.usuarioActual,"Asiento Contable Caja Chica Mantenimiento",paginaTipo));			
			
			this.conTotales=false;
			
			this.conTotales=true;
			
			
			this.asientocontablecajachica=new AsientoContableCajaChica();
			this.asientocontablecajachicas = new ArrayList<AsientoContableCajaChica>();
			this.asientocontablecajachicasAux = new ArrayList<AsientoContableCajaChica>();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic=new AsientoContableCajaChicaLogic();
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}
			
			//this.asientocontablecajachicaSessionBean.setConGuardarRelaciones(conGuardarRelaciones);
			//this.asientocontablecajachicaSessionBean.setEsGuardarRelacionado(esGuardarRelacionado);
			
			this.jDesktopPane=jdesktopPane;
			
			if(this.jDesktopPane.getClass().equals(JDesktopPaneMe.class)) {
				this.constantes2=((JDesktopPaneMe)this.jDesktopPane).constantes2;
			}
			
			if(!Constantes.CON_VARIAS_VENTANAS) {
    			MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameDetalleFormAsientoContableCajaChica);
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameReporteDinamicoAsientoContableCajaChica!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoAsientoContableCajaChica);	
					}
					
					if(this.jInternalFrameImportacionAsientoContableCajaChica!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionAsientoContableCajaChica);							
					}
					
				}
				
				
				if(!this.conCargarMinimo) {
					
					if(this.jInternalFrameOrderByAsientoContableCajaChica!=null) {
						MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameOrderByAsientoContableCajaChica);					
					}
					
				}
			}
			
			//DETALLE DATOS
			if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { //this.conCargarFormDetalle) {
				this.jDesktopPane.add(this.jInternalFrameDetalleFormAsientoContableCajaChica);
				this.jInternalFrameDetalleFormAsientoContableCajaChica.setVisible(false);
				this.jInternalFrameDetalleFormAsientoContableCajaChica.setSelected(false);						
			}
			
			if(!this.conCargarMinimo) {
				
				//REPORTE DINAMICO
				if(this.jInternalFrameReporteDinamicoAsientoContableCajaChica!=null) {
					this.jDesktopPane.add(this.jInternalFrameReporteDinamicoAsientoContableCajaChica);
					this.jInternalFrameReporteDinamicoAsientoContableCajaChica.setVisible(false);
					this.jInternalFrameReporteDinamicoAsientoContableCajaChica.setSelected(false);
				}
				
				//IMPORTACION
				if(this.jInternalFrameImportacionAsientoContableCajaChica!=null) {
					this.jDesktopPane.add(this.jInternalFrameImportacionAsientoContableCajaChica);
					this.jInternalFrameImportacionAsientoContableCajaChica.setVisible(false);
					this.jInternalFrameImportacionAsientoContableCajaChica.setSelected(false);
				}
				
				
			}
			
			
			if(!this.conCargarMinimo) {
				
				if(this.jInternalFrameOrderByAsientoContableCajaChica!=null) {
					this.jDesktopPane.add(this.jInternalFrameOrderByAsientoContableCajaChica);
					this.jInternalFrameOrderByAsientoContableCajaChica.setVisible(false);
					this.jInternalFrameOrderByAsientoContableCajaChica.setSelected(false);				
				}
				
			}
			
			
			//this.esParaBusquedaForeignKey=false;
			this.esParaBusquedaForeignKey=esParaBusquedaForeignKey;
			
			this.invalidValues=new InvalidValue[0];
			
			
			
			this.idAsientoContableCajaChicaActual=0L;
			this.rowIndexActual=0;
			
			
			this.iNumeroPaginacionPagina=0;
			this.iNumeroPaginacion=AsientoContableCajaChicaConstantesFunciones.INUMEROPAGINACION;
			this.pagination=new Pagination();
			this.datosCliente=new DatosCliente();
			this.lIdUsuarioSesion=0L;	
			this.sTipoArchivoReporte="";
			this.sTipoArchivoReporteDinamico="";
			this.sTipoReporte="";
			this.sTipoReporteDinamico="";
			this.sTipoPaginacion="";
			this.sTipoRelacion="";
			this.sTipoAccion="";
			this.sTipoAccionFormulario="";
			this.sTipoSeleccionar="";			
			this.sDetalleReporte="";
			this.sTipoReporteExtra="";
			this.sValorCampoGeneral="";
			this.sPathReporteDinamico="";			
			
			this.isMostrarNumeroPaginacion=false;
			this.isSeleccionarTodos=false;
			this.isSeleccionados=false;
			this.conGraficoReporte=false;
			this.isPostAccionNuevo=false;
			this.isPostAccionSinCerrar=false;
			this.isPostAccionSinMensaje=false;
			this.esReporteDinamico=false;
			this.esRecargarFks=false;
			this.esReporteAccionProceso=false;
			
			this.asientocontablecajachicaReturnGeneral=new AsientoContableCajaChicaParameterReturnGeneral();
			
			this.asientocontablecajachicaParameterGeneral=new AsientoContableCajaChicaParameterReturnGeneral();
			
			
			
			this.sistemaLogicAdditional=new SistemaLogicAdditional();
			
			this.sistemaLogicAdditional.setConnexion(this.asientocontablecajachicaLogic.getConnexion());			
			
			
			
			
			
			
			
			//VERIFICAR GLOBAL
			this.cargarDatosCliente();			
			
			
			if(!this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarLicenciaCliente(this.datosCliente,this.moduloActual,this.usuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_CONTROLGLOBAL);
					}
					
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			}			
			
			//VERIFICAR GLOBAL
			
			//VERIFICAR SESSION ACTUAL
			//this.cargarDatosCliente();
			
			this.sistemaReturnGeneral=new SistemaParameterReturnGeneral();
			
			SistemaParameterReturnGeneralAdditional.inicializarSinSeguridad(this.sistemaReturnGeneral);
			
			if(AsientoContableCajaChicaJInternalFrame.CON_LLAMADA_SIMPLE) {
				if(this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
					this.opcionActual.setId(0L);
					
					//idOpcion=0L;					
				}
				
				ArrayList<String> arrPaginas=new ArrayList<String>();		
				ArrayList<Opcion> opcionsFinal=new ArrayList<Opcion>();	
				
				arrPaginas.add(DetalleAsientoContableCajaChicaConstantesFunciones.SNOMBREOPCION);
		
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					//this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActualWithConnection(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,AsientoContableCajaChicaConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado(),this.asientocontablecajachicaSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					this.sistemaReturnGeneral=sistemaLogicAdditional.validarCargarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual,Constantes.LIDSISTEMAACTUAL,AsientoContableCajaChicaConstantesFunciones.SNOMBREOPCION,this.opcionActual,this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado(),this.asientocontablecajachicaSessionBean.getConGuardarRelaciones(),arrPaginas);
					
					if(!this.sistemaReturnGeneral.getEsValidado()) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
					//FALTA
				}
			} else { 
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					if(!sistemaLogicAdditional.validarSesionUsuarioActual(this.usuarioActual,this.datosCliente,this.resumenUsuarioActual)) {
					 	this.setVisible(false);
						throw new Exception(Mensajes.SERROR_SESIONACTUAL);
					}
				
				} else if(Constantes.ISUSAEJBREMOTE) {
					
				} else if(Constantes.ISUSAEJBHOME) {
				}
			} 
			//VERIFICAR SESSION ACTUAL
			
			
			this.sVisibilidadTablaBusquedas="table-row";
			this.sVisibilidadTablaElementos="none";
			this.sVisibilidadTablaAcciones="none";
			
			this.isVisibilidadCeldaNuevoAsientoContableCajaChica=false;
			this.isVisibilidadCeldaDuplicarAsientoContableCajaChica=true;
			this.isVisibilidadCeldaCopiarAsientoContableCajaChica=true;
			this.isVisibilidadCeldaVerFormAsientoContableCajaChica=true;
			this.isVisibilidadCeldaOrdenAsientoContableCajaChica=true;
			this.isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica=false;
			this.isVisibilidadCeldaModificarAsientoContableCajaChica=false;
			this.isVisibilidadCeldaActualizarAsientoContableCajaChica=false;
			this.isVisibilidadCeldaEliminarAsientoContableCajaChica=false;
			this.isVisibilidadCeldaCancelarAsientoContableCajaChica=false;
			this.isVisibilidadCeldaGuardarAsientoContableCajaChica=false;
			this.isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica=false;
			
			
			this.isVisibilidadFK_IdAnio=true;
			this.isVisibilidadFK_IdCliente=true;
			this.isVisibilidadFK_IdCuentaContable=true;
			this.isVisibilidadFK_IdEjercicio=true;
			this.isVisibilidadFK_IdEmpleado=true;
			this.isVisibilidadFK_IdEmpresa=true;
			this.isVisibilidadFK_IdEstadoAsientoContableCajaChica=true;
			this.isVisibilidadFK_IdMes=true;
			this.isVisibilidadFK_IdModulo=true;
			this.isVisibilidadFK_IdMoneda=true;
			this.isVisibilidadFK_IdPeriodo=true;
			this.isVisibilidadFK_IdSucursal=true;
			this.isVisibilidadFK_IdTipoDocumento=true;
			this.isVisibilidadFK_IdTipoMovimiento=true;
			this.isVisibilidadFK_IdTipoMovimientoModulo=true;
			this.isVisibilidadFK_IdTipoTransaccionModulo=true;
			this.isVisibilidadFK_IdTransaccion=true;
			this.isVisibilidadFK_IdUsuario=true;
			
			//ELEMENTOS TABLAS PARAMETOS
			
			
			
			//ELEMENTOS TABLAS PARAMETOS_FIN
			
			//this.actualizarEstadoCeldasBotonesAsientoContableCajaChica("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
						
			
			
			this.inicializarPermisosAsientoContableCajaChica();
			
			//INICIALIZAR FALSE, TALVEZ COMENTAR
			this.setPermisosUsuarioAsientoContableCajaChica(false);
			
			this.setPermisosUsuarioAsientoContableCajaChica();
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado() 
				|| (this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado() && this.asientocontablecajachicaSessionBean.getConGuardarRelaciones())) {
				
				this.inicializarSetPermisosUsuarioAsientoContableCajaChicaClasesRelacionadas();
			}
			
			if(this.asientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
				this.actualizarTabsSetPermisosUsuarioAsientoContableCajaChicaClasesRelacionadas();
			}
			
			
			
			//SOLO SE EJECUTA LA PRIMERA VEZ, BINDINGS SI FUNCIONA
			if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingBotonesPermisosAsientoContableCajaChica();
			} else {
				this.inicializarActualizarBindingBotonesPermisosManualAsientoContableCajaChica();
			}
			
			if(!this.isPermisoBusquedaAsientoContableCajaChica) {
				//BYDAN_BUSQUEDAS
				
				this.jTabbedPaneBusquedasAsientoContableCajaChica.setVisible(false);				
				
			}
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {				
				this.tiposArchivosReportes=Funciones.getListTiposArchivosReportes();
				this.tiposArchivosReportesDinamico=Funciones.getListTiposArchivosReportes();
				this.tiposReportes=Funciones.getListTiposReportes(false);
				this.tiposReportesDinamico=Funciones.getListTiposReportesDinamico(false);
				
				
				this.tiposReportes.add(new Reporte("RELACIONES","RELACIONES"));
				this.tiposReportesDinamico.add(new Reporte("RELACIONES","RELACIONES"));
				
				this.tiposGraficosReportes=Funciones2.getListTiposGraficosReportes();
				this.tiposPaginacion=Funciones2.getListTiposPaginacion(this.isPermisoPaginacionMedioAsientoContableCajaChica,this.isPermisoPaginacionMedioAsientoContableCajaChica,this.isPermisoPaginacionTodoAsientoContableCajaChica);
				this.tiposSeleccionar=Funciones2.getListTiposSeleccionar();
				this.tiposSeleccionar.addAll(AsientoContableCajaChicaConstantesFunciones.getTiposSeleccionarAsientoContableCajaChica());
				
				this.tiposColumnasSelect=AsientoContableCajaChicaConstantesFunciones.getTiposSeleccionarAsientoContableCajaChica(true);
				
				this.tiposRelacionesSelect=new ArrayList<Reporte>();								
				
				this.cargarTiposRelacionesSelectAsientoContableCajaChica();				
				//this.tiposRelacionesSelect=AsientoContableCajaChicaConstantesFunciones.getTiposRelacionesAsientoContableCajaChica(true);
				
			} else {
				this.tiposArchivosReportes=new ArrayList<Reporte>();
				this.tiposArchivosReportesDinamico=new ArrayList<Reporte>();
				this.tiposReportes=new ArrayList<Reporte>();
				this.tiposReportesDinamico=new ArrayList<Reporte>();
				this.tiposGraficosReportes=new ArrayList<Reporte>();
				this.tiposPaginacion=new ArrayList<Reporte>();
				this.tiposSeleccionar=new ArrayList<Reporte>();			
				this.tiposColumnasSelect=new ArrayList<Reporte>();	
				this.tiposRelacionesSelect=new ArrayList<Reporte>();	
			}
						
			
			//FUNCIONALIDAD_RELACIONADO
			//if(!this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
				//SE ENCUENTRA MAS ADELANTE CON ACCIONES POR USUARIO
				//ACCIONES GENERALES Y POR USUARIO
				this.tiposRelaciones=Funciones2.getListTiposRelaciones();
				this.setRelacionesUsuarioAsientoContableCajaChica();
				
				this.tiposAcciones=Funciones2.getListTiposAcciones(false,false,true);
				this.setAccionesUsuarioAsientoContableCajaChica(false);	
				
				this.tiposAccionesFormulario=Funciones2.getListTiposAccionesFormulario(false,false,true);							
				this.setAccionesUsuarioAsientoContableCajaChica(true);	
				
				this.inicializarActualizarBindingtiposArchivosReportesAccionesAsientoContableCajaChica() ;
			
			/*
			} else {
				this.tiposAcciones=new ArrayList<Reporte>();
				this.tiposAccionesFormulario=new ArrayList<Reporte>();
			}
			*/						
			
			this.inicializarInvalidValues();
						
			this.arrDatoGeneral= new  ArrayList<DatoGeneral>();
			this.arrDatoGeneralNo= new  ArrayList<String>();
			
			
			
			this.arrOrderBy= new  ArrayList<OrderBy>();
			
			
			this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
			
			
			this.traerValoresTablaOrderBy();			
			
			
			this.isGuardarCambiosEnLote=false;
			this.isCargarCombosDependencia=false;
			
			
			this.detalleasientocontablecajachicaLogic=new DetalleAsientoContableCajaChicaLogic(); 
			jasperPrint = null;												
			
			//FK
			
			this.empresaLogic=new EmpresaLogic();
			this.sucursalLogic=new SucursalLogic();
			this.ejercicioLogic=new EjercicioLogic();
			this.periodoLogic=new PeriodoLogic();
			this.usuarioLogic=new UsuarioLogic();
			this.anioLogic=new AnioLogic();
			this.mesLogic=new MesLogic();
			this.monedaLogic=new MonedaLogic();
			this.empleadoLogic=new EmpleadoLogic();
			this.estadoasientocontablecajachicaLogic=new EstadoAsientoContableCajaChicaLogic();
			this.clienteLogic=new ClienteLogic();
			this.transaccionLogic=new TransaccionLogic();
			this.tipodocumentoLogic=new TipoDocumentoLogic();
			this.cuentacontableLogic=new CuentaContableLogic();
			this.moduloLogic=new ModuloLogic();
			this.tipomovimientoLogic=new TipoMovimientoLogic();
			this.tipotransaccionmoduloLogic=new TipoTransaccionModuloLogic();
			this.tipomovimientomoduloLogic=new TipoMovimientoModuloLogic();
			
			//PARAMETROS
			
			
			/*
			if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {		
				hashtableEnv =  Funciones.getHashtableEnv();		
				initialContext = new InitialContext(hashtableEnv);	
			}
			*/
			/*
			if(Constantes.ISUSAEJBREMOTE) {
				asientocontablecajachicaImplementable= (AsientoContableCajaChicaImplementable) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+AsientoContableCajaChicaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBREMOTE);
			} else if(Constantes.ISUSAEJBHOME) {
				asientocontablecajachicaImplementableHome= (AsientoContableCajaChicaImplementableHome) initialContext.lookup(Constantes.SEJBPACKAGE+Constantes.SEJBSEPARATOR+AsientoContableCajaChicaConstantesFunciones.SEJBNAME+Constantes.SEJBSEPARATOR+Constantes.SEJBLOCAL);
			}			
			*/
			
			
			this.asientocontablecajachicas= new ArrayList<AsientoContableCajaChica>();
			this.asientocontablecajachicasEliminados= new ArrayList<AsientoContableCajaChica>();
						
			this.isEsNuevoAsientoContableCajaChica=false;
			this.esParaAccionDesdeFormularioAsientoContableCajaChica=false;
			this.isEsMantenimientoRelacionesRelacionadoUnico=false;
			this.isEsMantenimientoRelaciones=false;
			this.isEsMantenimientoRelacionado=false;
			this.isContieneImagenes=false;
			
			
			
			
			//BUSQUEDA INTERNA FK
			this.idEmpleadoActual=0L;
			this.idClienteActual=0L;
			this.idCuentaContableActual=0L;
			
			//INICIALIZAR LISTAS FK
			
			this.empresasForeignKey=new ArrayList<Empresa>() ;
			this.sucursalsForeignKey=new ArrayList<Sucursal>() ;
			this.ejerciciosForeignKey=new ArrayList<Ejercicio>() ;
			this.periodosForeignKey=new ArrayList<Periodo>() ;
			this.usuariosForeignKey=new ArrayList<Usuario>() ;
			this.aniosForeignKey=new ArrayList<Anio>() ;
			this.messForeignKey=new ArrayList<Mes>() ;
			this.monedasForeignKey=new ArrayList<Moneda>() ;
			this.empleadosForeignKey=new ArrayList<Empleado>() ;
			this.estadoasientocontablecajachicasForeignKey=new ArrayList<EstadoAsientoContableCajaChica>() ;
			this.clientesForeignKey=new ArrayList<Cliente>() ;
			this.transaccionsForeignKey=new ArrayList<Transaccion>() ;
			this.tipodocumentosForeignKey=new ArrayList<TipoDocumento>() ;
			this.cuentacontablesForeignKey=new ArrayList<CuentaContable>() ;
			this.modulosForeignKey=new ArrayList<Modulo>() ;
			this.tipomovimientosForeignKey=new ArrayList<TipoMovimiento>() ;
			this.tipotransaccionmodulosForeignKey=new ArrayList<TipoTransaccionModulo>() ;
			this.tipomovimientomodulosForeignKey=new ArrayList<TipoMovimientoModulo>() ;
			
			
			
			
			if(blncargarCombostrForeignKey) {
				this.cargarCombosForeignKeyAsientoContableCajaChica(this.isCargarCombosDependencia);
			}
			
			this.cargarCombosParametroAsientoContableCajaChica();
			
			
			
			
			
			//FUNCIONALIDAD_RELACIONADO
			if(!this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
				this.onLoad();
			}
						
			AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.RecargarVentanaSegunOpcion(this,opcionActual);
			
			/*
			if(blnCargarInformacionInicial) {
				this.recargarInformacion();
			}
			*/
			//this.iNumeroPaginacionPagina=0;
			//this.iNumeroPaginacion=AsientoContableCajaChicaConstantesFunciones.INUMEROPAGINACION;
			
			this.actualizarEstadoCeldasBotonesAsientoContableCajaChica("n", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			//SOLO LA PRIMERA VEZ HACE LOS BINDINGS, SOLO AHI FUNCIONA
			this.inicializarActualizarBindingAsientoContableCajaChica(true); 
			
			//SE REDIMENSIONA SINO NO SE ACTUALIZA
			this.redimensionarTablaDatos();
			
			
			this.initActions();
			
			;
						
			if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {//if(this.conCargarFormDetalle) {
				this.cargarMenuRelaciones();
			}
			
			//OBLIGA CARGAR DETALLE, MEJOR DESHABILITAR, FALTA TALVEZ PONER EN SELECCIONAR
			//MAYBE
			//this.updateControlesFormularioAsientoContableCajaChica();
			
			if(!this.conCargarMinimo) {
				this.updateBusquedasFormularioAsientoContableCajaChica();
			}
			
			AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.CargaInicial(this, "NORMAL", null);
			
			
			//SE REALIZA ESTO PARA QUE SE PUEDA RECORRER TAB SIN IMPORTAR ORDEN
			Boolean existeTabBusqueda=false;
			
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				
				for(int i=0; i<this.jTabbedPaneBusquedasAsientoContableCajaChica.getTabCount(); i++) {
					this.jTabbedPaneBusquedasAsientoContableCajaChica.setSelectedIndex(i);
						
					if(!existeTabBusqueda) {
						existeTabBusqueda=true;
					}
				}
					
				if(existeTabBusqueda) {
					this.jTabbedPaneBusquedasAsientoContableCajaChica.setSelectedIndex(0);
				}	
				
				
			}
			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
			
			
			if(Constantes2.ISDEVELOPING2) {
				end_time = System.currentTimeMillis();			
				String sTipo="Load Ventana";
				Funciones2.getMensajeTiempoEjecucion(start_time, end_time, sTipo,false);
			}  
			
			this.finishProcessAsientoContableCajaChica(true);
			
			this.dEnd=(double)System.currentTimeMillis();
			
			this.dDif=this.dEnd - this.dStart;
			
			if(Constantes.ISDEVELOPING) {
				System.out.println("Tiempo(ms) Carga AsientoContableCajaChica: " + this.dDif); 
			}
			
			this.permiteRecargarForm=true;
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}	 
    }
	
	public void cargarTiposRelacionesSelectAsientoContableCajaChica() {
		Reporte reporte=new Reporte();
		
	

		reporte=new Reporte();
		reporte.setsCodigo(DetalleAsientoContableCajaChicaConstantesFunciones.SCLASSWEBTITULO);
		reporte.setsDescripcion(DetalleAsientoContableCajaChicaConstantesFunciones.SCLASSWEBTITULO);
		this.tiposRelacionesSelect.add(reporte);
	}
	
	
	
	public void jTabbedPaneChangeListenerGeneral(String sTipo,ChangeEvent evt) { 	  
		Boolean procesaCargarParteTab=false;
			
		try {
			int iIndex=0;		    			
			String sTitle="";
			
			//TABBED PANE RELACIONES
			if(sTipo.equals("RelacionesAsientoContableCajaChica")) {
				iIndex=this.jInternalFrameDetalleFormAsientoContableCajaChica.jTabbedPaneRelacionesAsientoContableCajaChica.getSelectedIndex();		    
			
				sTitle=this.jInternalFrameDetalleFormAsientoContableCajaChica.jTabbedPaneRelacionesAsientoContableCajaChica.getTitleAt(iIndex);
				
				Integer intSelectedRow = 0;	
			
				intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();	
				
				

				if(sTitle.equals("Detalle Asiento Contable Caja Chicas")) {
					if(!DetalleAsientoContableCajaChicaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						procesaCargarParteTab=true;
						this.startProcessAsientoContableCajaChica();

						this.cargarParteTabPanelRelacionadaDetalleAsientoContableCajaChica(iIndex,intSelectedRow);
					}
					
				}
				
			}
			
			//TABBED PANE RELACIONES FIN(EXTRA TAB)
			;
			
  		} catch(Exception e) {
  			e.printStackTrace();
  		} finally {
			if(procesaCargarParteTab) {				
				this.finishProcessAsientoContableCajaChica();	
			}
		}
    }
	
	

	public void cargarParteTabPanelRelacionadaDetalleAsientoContableCajaChica(int iIndex,int intSelectedRow) throws Exception {
		this.jInternalFrameDetalleFormAsientoContableCajaChica.cargarSessionConBeanSwingJInternalFrameDetalleAsientoContableCajaChica(false,true,iIndex);
		this.jButtonDetalleAsientoContableCajaChicaActionPerformed(null,intSelectedRow,false,true,null);
		this.redimensionarTablaPanelRelacionadaDetalleAsientoContableCajaChica();

		//this.jTabbedPaneRelacionesAsientoContableCajaChica.updateUI();
		//this.jTabbedPaneRelacionesAsientoContableCajaChica.removeTabAt(iIndex);
		//this.jTabbedPaneRelacionesAsientoContableCajaChica.setSelectedIndex(iIndex);


	}
	
	public void jButtonRelacionActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
				 if(sTipo.equals("DetalleAsientoContableCajaChica")) {
				int row=this.jTableDatosAsientoContableCajaChica.getSelectedRow();
				jButtonDetalleAsientoContableCajaChicaActionPerformed(evt,row,true,false,null);
				}
  		} catch(Exception e) {
  			e.printStackTrace();
  		}
    }
	
	public void cargarMenuRelaciones() {	
		JMenuItem jmenuItem= new JMenuItem("General");
		String sLabelMenu="";
		
		if(!this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
			for(Reporte reporte:this.tiposRelaciones) {
			

				if(reporte.getsCodigo().equals("Detalle Asiento Contable Caja Chica")) {

					if(this.isTienePermisosDetalleAsientoContableCajaChica && this.asientocontablecajachicaConstantesFunciones.mostrarDetalleAsientoContableCajaChicaAsientoContableCajaChica && !AsientoContableCajaChicaConstantesFunciones.ISGUARDARREL) {
						if(Constantes.ISDEVELOPING) {
							sLabelMenu="Detalle Asiento Contable Caja Chicas"+"("+DetalleAsientoContableCajaChicaConstantesFunciones.CLASSNAME+")";
						}

						jmenuItem = new JMenuItem(sLabelMenu);
						//jmenuItem.setMnemonic(KeyEvent.VK_S);
						//jmenuItem.setAccelerator(KeyStroke.getKeyStroke(KeyEvent.VK_S, ActionEvent.ALT_MASK));
						jmenuItem.setActionCommand("Detalle Asiento Contable Caja Chicas");

						if(asientocontablecajachicaConstantesFunciones.resaltarDetalleAsientoContableCajaChicaAsientoContableCajaChica!=null) {
							jmenuItem.setBorderPainted(true);
							jmenuItem.setBorder(asientocontablecajachicaConstantesFunciones.resaltarDetalleAsientoContableCajaChicaAsientoContableCajaChica);
						}

						jmenuItem.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarDetalleAsientoContableCajaChicaAsientoContableCajaChica);

						jmenuItem.addActionListener (new MenuItemRelacionActionListener(this,"DetalleAsientoContableCajaChica"));

						

						this.jInternalFrameDetalleFormAsientoContableCajaChica.jmenuDetalleAsientoContableCajaChica.add(jmenuItem);

						
					}

					continue;
				}
			}
		}
	}		
	
	public void cargarCombosForeignKeyAsientoContableCajaChica(Boolean cargarCombosDependencia) throws Exception {   
		this.cargarCombosForeignKeyAsientoContableCajaChica(cargarCombosDependencia,true,true);
	}
	
	//CARGAR COMBOS EN LOTE
	public void cargarCombosForeignKeyAsientoContableCajaChica(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales) throws Exception {   
		this.cargarCombosTodosForeignKeyAsientoContableCajaChicaListas(cargarCombosDependencia);
				
		this.addItemDefectoCombosTodosForeignKeyAsientoContableCajaChica();
		
		this.cargarCombosFrameForeignKeyAsientoContableCajaChica();						
		
		if(conInitActions) {
			this.initActionsCombosTodosForeignKeyAsientoContableCajaChica();
		}
		
		if(conSetVariablesGlobales) {
			this.setVariablesGlobalesCombosForeignKeyAsientoContableCajaChica();
		}
	}
	
	

	public void cargarCombosForeignKeyAnio(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyAnioListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyAnio();
				this.cargarCombosFrameAniosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaAnio(this.aniosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyMes(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyMesListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyMes();
				this.cargarCombosFrameMessForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaMes(this.messForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEmpleado(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEmpleadoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEmpleado();
				this.cargarCombosFrameEmpleadosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEmpleado(this.empleadosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyEstadoAsientoContableCajaChica(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyEstadoAsientoContableCajaChicaListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyEstadoAsientoContableCajaChica();
				this.cargarCombosFrameEstadoAsientoContableCajaChicasForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaEstadoAsientoContableCajaChica(this.estadoasientocontablecajachicasForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCliente(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyClienteListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCliente();
				this.cargarCombosFrameClientesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCliente(this.clientesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTransaccion(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTransaccionListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTransaccion();
				this.cargarCombosFrameTransaccionsForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTransaccion(this.transaccionsForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoDocumento(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoDocumentoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoDocumento();
				this.cargarCombosFrameTipoDocumentosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoDocumento(this.tipodocumentosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyCuentaContable(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyCuentaContableListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyCuentaContable();
				this.cargarCombosFrameCuentaContablesForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaCuentaContable(this.cuentacontablesForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoMovimiento(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoMovimientoListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoMovimiento();
				this.cargarCombosFrameTipoMovimientosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoMovimiento(this.tipomovimientosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoTransaccionModulo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoTransaccionModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
				this.cargarCombosFrameTipoTransaccionModulosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoTransaccionModulo(this.tipotransaccionmodulosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}

	public void cargarCombosForeignKeyTipoMovimientoModulo(Boolean cargarCombosDependencia,Boolean conInitActions,Boolean conSetVariablesGlobales,String sFinalQueryCombo,String sFormularioTipoBusqueda) throws Exception {
		try {
				this.cargarCombosForeignKeyTipoMovimientoModuloListas(cargarCombosDependencia,sFinalQueryCombo);
				this.addItemDefectoCombosForeignKeyTipoMovimientoModulo();
				this.cargarCombosFrameTipoMovimientoModulosForeignKey(sFormularioTipoBusqueda);

				if(conInitActions) {
				}

			this.recargarComboTablaTipoMovimientoModulo(this.tipomovimientomodulosForeignKey);

		} catch(Exception e) {
			throw e;
		}
	}
	
	public void jButtonNuevoAsientoContableCajaChicaActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.FORM_RECARGAR;
			String sTipo="NUEVO_NORMAL";
			
			this.estaModoNuevo=true;
			
			if(this.asientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
				this.dStart=(double)System.currentTimeMillis();
			}
				
			//if(this.esUsoDesdeHijo) {
			//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			//}
											
			if(this.jInternalFrameDetalleFormAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}			
				
			AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
			
			
			if(jTableDatosAsientoContableCajaChica.getRowCount()>=1) {
				jTableDatosAsientoContableCajaChica.removeRowSelectionInterval(0, jTableDatosAsientoContableCajaChica.getRowCount()-1);						
			}
			
			this.isEsNuevoAsientoContableCajaChica=true;
			
			//ESTABLECE SI ES RELACIONADO O NO 
			this.habilitarDeshabilitarTipoMantenimientoAsientoContableCajaChica(esRelaciones);
			
			this.nuevoPreparar(false); 
			this.habilitarDeshabilitarControlesAsientoContableCajaChica(true);			
			//this.asientocontablecajachica=new AsientoContableCajaChica();
			//this.asientocontablecajachica.setIsChanged(true);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesAsientoContableCajaChica(false) ;						
			 
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualAsientoContableCajaChica() ;
			
			if(AsientoContableCajaChicaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleAsientoContableCajaChica(esRelaciones);
			}
					
			//Se Duplica, sin sentido
			//this.actualizarInformacion("EVENTO_NUEVO",false,this.asientocontablecajachica);	
			this.actualizarInformacion("INFO_PADRE",false,this.asientocontablecajachica);				
			
			AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.NEW,"FORM",this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
			
			if(this.asientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
				this.dEnd=(double)System.currentTimeMillis();					
				this.dDif=this.dEnd - this.dStart;
					
				if(Constantes.ISDEVELOPING) {
					System.out.println("Tiempo(ms) Nuevo Preparar AsientoContableCajaChica: " + this.dDif); 
				}
			}
			
			//false para que pueda generar eventos
			this.estaModoNuevo=false;
							
			//Con this.estaModoNuevo=false;, se permite actualizar y usar eventos control al mismo tiempo (FuncionTipo.LAST)			
			AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.LAST,ControlTipo.FORM,EventoTipo.CLIC,EventoSubTipo.NEW,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
			
		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;			
		}
	}
	
	public void jButtonDuplicarAsientoContableCajaChicaActionPerformed(ActionEvent evt,Boolean esRelaciones) throws Exception {   
		try {
			Boolean soloDuplicarUno=false;
			Boolean conSeleccionarFilaTabla=false;
			
			this.estaModoNuevo=true;
			this.estaModoDuplicar=true;
			
			ArrayList<AsientoContableCajaChica> asientocontablecajachicasSeleccionados=new ArrayList<AsientoContableCajaChica>();
			int intSelectedRow =-1;
			Integer iNumRowsSeleccionados=0;
			int[] arrNumRowsSeleccionados=null;
			
			//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
			if(conSeleccionarFilaTabla) {
				arrNumRowsSeleccionados=this.jTableDatosAsientoContableCajaChica.getSelectedRows();
				iNumRowsSeleccionados=this.jTableDatosAsientoContableCajaChica.getSelectedRows().length;			
			}
			
			asientocontablecajachicasSeleccionados=this.getAsientoContableCajaChicasSeleccionados(false);
				
			if((soloDuplicarUno && iNumRowsSeleccionados.equals(1)) || !soloDuplicarUno) {
				//LO HACE NUEVOPREPARAR
				//this.iIdNuevoAsientoContableCajaChica--;			
				//AsientoContableCajaChica asientocontablecajachicaAux= new AsientoContableCajaChica();			
				//asientocontablecajachicaAux.setId(this.iIdNuevoAsientoContableCajaChica);																
				
				//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
				//AsientoContableCajaChica asientocontablecajachicaOrigen=new AsientoContableCajaChica();
				//for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {				
				
				for(AsientoContableCajaChica asientocontablecajachicaOrigen : asientocontablecajachicasSeleccionados) {
					if(conSeleccionarFilaTabla) {
						if(!soloDuplicarUno) {
							//NO SE TOMA EN CUENTA, SI LOS SELECCIONADOS
							//intSelectedRow =iNumRowSeleccionado;
						} else {
							intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();
						}
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {
							asientocontablecajachicaOrigen =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							asientocontablecajachicaOrigen =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
						}
					}
					
					this.aumentarTamanioFilaNuevaTablaAsientoContableCajaChica();
					
					if(this.conTotales) {
						this.quitarFilaTotales();
					}
					
					this.nuevoPreparar(true);
					
					this.asientocontablecajachica.setsType("DUPLICADO");
					
					this.setCopiarVariablesObjetosAsientoContableCajaChica(asientocontablecajachicaOrigen,this.asientocontablecajachica,true,true);
					
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					
					//LO HACE NUEVOPREPARAR
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().add(this.asientocontablecajachicaAux);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachicas.add(this.asientocontablecajachicaAux);				
					}
					*/
				}
				
				this.inicializarActualizarBindingTablaAsientoContableCajaChica(false);
				
				this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(this.getIndiceNuevoAsientoContableCajaChica(), this.getIndiceNuevoAsientoContableCajaChica());
				
				int iLastRow =  this.jTableDatosAsientoContableCajaChica.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosAsientoContableCajaChica.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosAsientoContableCajaChica.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaAsientoContableCajaChica(false);
				}
			} else {
				throw new Exception("DEBE ESTAR SELECCIONADO 1 REGISTRO");
			}
			
		} catch(Exception e) {			
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {
			this.estaModoNuevo=false;
			this.estaModoDuplicar=false;
		}
	}
	
	public void jButtonCopiarAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			Boolean conSeleccionarFilaTabla=false;
			Integer iNumRowsSeleccionados=0;
			int[] intSelectedRows =null;
			int intSelectedRow =0;
			
			this.estaModoCopiar=true;
			
			ArrayList<AsientoContableCajaChica> asientocontablecajachicasSeleccionados=new ArrayList<AsientoContableCajaChica>();									
		
			AsientoContableCajaChica asientocontablecajachicaOrigen=new AsientoContableCajaChica();
			AsientoContableCajaChica asientocontablecajachicaDestino=new AsientoContableCajaChica();
				
			asientocontablecajachicasSeleccionados=this.getAsientoContableCajaChicasSeleccionados(false);
			
			if(conSeleccionarFilaTabla) {
				iNumRowsSeleccionados=this.jTableDatosAsientoContableCajaChica.getSelectedRows().length;	
			}
			
			if(iNumRowsSeleccionados.equals(2) || asientocontablecajachicasSeleccionados.size()==2) {
				if(conSeleccionarFilaTabla) {
					intSelectedRows =this.jTableDatosAsientoContableCajaChica.getSelectedRows();
					intSelectedRow = intSelectedRows[0];	
									
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicaOrigen =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						asientocontablecajachicaOrigen =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					intSelectedRow = intSelectedRows[1];
					
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						asientocontablecajachicaDestino =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						asientocontablecajachicaDestino =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				}
				
				asientocontablecajachicaOrigen =asientocontablecajachicasSeleccionados.get(0);
				asientocontablecajachicaDestino =asientocontablecajachicasSeleccionados.get(1);
				
				this.setCopiarVariablesObjetosAsientoContableCajaChica(asientocontablecajachicaOrigen,asientocontablecajachicaDestino,true,false);
				
				asientocontablecajachicaDestino.setsType("DUPLICADO");
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					actualizarLista(asientocontablecajachicaDestino,asientocontablecajachicaLogic.getAsientoContableCajaChicas());					
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(asientocontablecajachicaDestino,asientocontablecajachicas);
				}
				//ARCHITECTURE
				
				this.inicializarActualizarBindingTablaAsientoContableCajaChica(false);
				
				//this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(this.getIndiceNuevoAsientoContableCajaChica(), this.getIndiceNuevoAsientoContableCajaChica());
				
				int iLastRow =  this.jTableDatosAsientoContableCajaChica.getRowCount () - 1;
				Rectangle rectangle = this.jTableDatosAsientoContableCajaChica.getCellRect(iLastRow, 0, true);
				
				this.jTableDatosAsientoContableCajaChica.scrollRectToVisible(rectangle);
				
				//FILA TOTALES
				if(this.conTotales) {
					//this.crearFilaTotales();
					
					this.inicializarActualizarBindingTablaAsientoContableCajaChica(false);
				}
			} else {
				throw new Exception("DEBEN ESTAR SELECCIONADOS 2 REGISTROS");
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.estaModoCopiar=false;
		}
	}
	
	public void jButtonVerFormAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.jInternalFrameDetalleFormAsientoContableCajaChica.setSelected(true);
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonMostrarOcultarAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			Boolean isVisible=this.jPanelParametrosReportesAsientoContableCajaChica.isVisible();
			
			//BYDAN_BUSQUEDAS
			
			this.jTabbedPaneBusquedasAsientoContableCajaChica.setVisible(!isVisible);			
			
			
			this.jPanelParametrosReportesAsientoContableCajaChica.setVisible(!isVisible);
			this.jPanelPaginacionAsientoContableCajaChica.setVisible(!isVisible);
			this.jPanelAccionesAsientoContableCajaChica.setVisible(!isVisible);
							
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.closingInternalFrameAsientoContableCajaChica();
			
			//if(this.jInternalFrameParent==null) {
				//this.dispose();
			/*} else {
				this.setVisible(false);
	        	this.setSelected(false);	
			}*/			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarReporteDinamicoAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameReporteDinamicoAsientoContableCajaChica();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarImportacionAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameImportacionAsientoContableCajaChica();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonAbrirOrderByAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			
			this.abrirInicializarFrameOrderByAsientoContableCajaChica();
			
			this.abrirFrameOrderByAsientoContableCajaChica();
			
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonCerrarOrderByAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			
			this.cerrarFrameOrderByAsientoContableCajaChica();
			
						
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void abrirFrameDetalleAsientoContableCajaChica(Boolean esRelaciones) throws Exception {	    	        
	    try {
			//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
			//this.jDesktopPane.add(jInternalFrameDetalleFormAsientoContableCajaChica);
			
			if(!esRelaciones) {
				if(this.jInternalFrameDetalleFormAsientoContableCajaChica.isMaximum()) {
					this.jInternalFrameDetalleFormAsientoContableCajaChica.setMaximum(false);
				}								
				
	    		this.jInternalFrameDetalleFormAsientoContableCajaChica.setSize(this.jInternalFrameDetalleFormAsientoContableCajaChica.iWidthFormulario,this.jInternalFrameDetalleFormAsientoContableCajaChica.iHeightFormulario);
	    	} else {
				if(this.iWidthScroll<this.jInternalFrameDetalleFormAsientoContableCajaChica.iWidthFormularioMaximo) {
	    			this.jInternalFrameDetalleFormAsientoContableCajaChica.setSize(this.iWidthScroll,this.iHeightScroll);
				} else {
					if(!this.jInternalFrameDetalleFormAsientoContableCajaChica.isMaximum()) {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.setMaximum(true);
					}
				}
				
				if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jContentPaneDetalleAsientoContableCajaChica.getWidth() > this.getWidth()) {
					this.jInternalFrameDetalleFormAsientoContableCajaChica.jTabbedPaneRelacionesAsientoContableCajaChica.setMinimumSize(new Dimension(this.jInternalFrameDetalleFormAsientoContableCajaChica.jContentPaneDetalleAsientoContableCajaChica.getWidth(),AsientoContableCajaChicaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormAsientoContableCajaChica.jTabbedPaneRelacionesAsientoContableCajaChica.setMaximumSize(new Dimension(this.jInternalFrameDetalleFormAsientoContableCajaChica.jContentPaneDetalleAsientoContableCajaChica.getWidth(),AsientoContableCajaChicaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					this.jInternalFrameDetalleFormAsientoContableCajaChica.jTabbedPaneRelacionesAsientoContableCajaChica.setPreferredSize(new Dimension(this.jInternalFrameDetalleFormAsientoContableCajaChica.jContentPaneDetalleAsientoContableCajaChica.getWidth(),AsientoContableCajaChicaConstantesFunciones.ALTO_TABPANE_RELACIONES));
					
					Dimension dimension=new Dimension(); 
					
					

					if(DetalleAsientoContableCajaChicaJInternalFrame.ESTA_CARGADO_PORPARTE) {
						this.redimensionarTablaPanelRelacionadaDetalleAsientoContableCajaChica();
					}
					
				}
	    	}
			
		
	       	this.jInternalFrameDetalleFormAsientoContableCajaChica.setVisible(true);
	        this.jInternalFrameDetalleFormAsientoContableCajaChica.setSelected(true);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirInicializarFrameOrderByAsientoContableCajaChica() throws Exception {	    	        
	    try {
			if(this.jInternalFrameOrderByAsientoContableCajaChica==null) {
				
				if(!this.conCargarMinimo) {
					this.jInternalFrameOrderByAsientoContableCajaChica=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByAsientoContableCajaChica,false,this);
				} else {
					this.jInternalFrameOrderByAsientoContableCajaChica=new OrderByJInternalFrame(STIPO_TAMANIO_GENERAL,this.jButtonAbrirOrderByAsientoContableCajaChica,true,this);
				}
				
				this.jDesktopPane.add(this.jInternalFrameOrderByAsientoContableCajaChica);
				this.jInternalFrameOrderByAsientoContableCajaChica.setVisible(false);
				this.jInternalFrameOrderByAsientoContableCajaChica.setSelected(false);
				
				this.jInternalFrameOrderByAsientoContableCajaChica.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByAsientoContableCajaChica"));
				
				this.inicializarActualizarBindingTablaOrderByAsientoContableCajaChica();
			}
		} catch (final Exception e) {
			
		}
	}
	
	
	
	public void abrirInicializarFrameImportacionAsientoContableCajaChica() throws Exception {	    	        
	    try {
			if(this.jInternalFrameImportacionAsientoContableCajaChica==null) {
				
				this.jInternalFrameImportacionAsientoContableCajaChica=new ImportacionJInternalFrame(AsientoContableCajaChicaConstantesFunciones.SCLASSWEBTITULO,this);			
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameImportacionAsientoContableCajaChica);							
				
				this.jDesktopPane.add(this.jInternalFrameImportacionAsientoContableCajaChica);
				this.jInternalFrameImportacionAsientoContableCajaChica.setVisible(false);
				this.jInternalFrameImportacionAsientoContableCajaChica.setSelected(false);


				this.jInternalFrameImportacionAsientoContableCajaChica.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionAsientoContableCajaChica"));
				this.jInternalFrameImportacionAsientoContableCajaChica.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionAsientoContableCajaChica"));
				this.jInternalFrameImportacionAsientoContableCajaChica.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionAsientoContableCajaChica"));


			}
		} catch (final Exception e) {
			
		}
	}		
	
	
	
	public void abrirInicializarFrameReporteDinamicoAsientoContableCajaChica() throws Exception {	    	        
	    try {
			
			if(this.jInternalFrameReporteDinamicoAsientoContableCajaChica==null) {
				this.jInternalFrameReporteDinamicoAsientoContableCajaChica=new ReporteDinamicoJInternalFrame(AsientoContableCajaChicaConstantesFunciones.SCLASSWEBTITULO,this);	
				
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,this.jInternalFrameReporteDinamicoAsientoContableCajaChica);	
	
	
				this.jDesktopPane.add(this.jInternalFrameReporteDinamicoAsientoContableCajaChica);
				this.jInternalFrameReporteDinamicoAsientoContableCajaChica.setVisible(false);
				this.jInternalFrameReporteDinamicoAsientoContableCajaChica.setSelected(false);
	
	
	
				this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoAsientoContableCajaChica"));
				this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoAsientoContableCajaChica"));
				this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoAsientoContableCajaChica"));
	
				this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualAsientoContableCajaChica();
			}

		} catch (final Exception e) {
			
		}
	}	
	
	
	
		

	public void redimensionarTablaPanelRelacionadaDetalleAsientoContableCajaChica() {
		Dimension dimension=new Dimension();

		dimension=this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.jScrollPanelDatosDetalleAsientoContableCajaChica.getPreferredSize();
		dimension.setSize(this.jInternalFrameDetalleFormAsientoContableCajaChica.jContentPaneDetalleAsientoContableCajaChica.getWidth(),dimension.getHeight());

		this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.jScrollPanelDatosDetalleAsientoContableCajaChica.setMinimumSize(dimension);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.jScrollPanelDatosDetalleAsientoContableCajaChica.setMaximumSize(dimension);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.jScrollPanelDatosDetalleAsientoContableCajaChica.setPreferredSize(dimension);


	}
					
	public void cerrarFrameDetalleAsientoContableCajaChica() throws Exception {	    	        
	    try {
			//this.jDesktopPane.add(jInternalFrameDetalleFormAsientoContableCajaChica);
			
	       	this.jInternalFrameDetalleFormAsientoContableCajaChica.setVisible(false);
	        this.jInternalFrameDetalleFormAsientoContableCajaChica.setSelected(false);
			
			//this.jInternalFrameDetalleFormAsientoContableCajaChica.dispose();
			//this.jInternalFrameDetalleFormAsientoContableCajaChica=null;
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
	    }
	}
	
	
	public void abrirFrameReporteDinamicoAsientoContableCajaChica() throws Exception {	    	        
	    try {
			
			this.jInternalFrameReporteDinamicoAsientoContableCajaChica.setVisible(true);
	        this.jInternalFrameReporteDinamicoAsientoContableCajaChica.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void abrirFrameImportacionAsientoContableCajaChica() throws Exception {	    	        		
	    try {			
			this.jInternalFrameImportacionAsientoContableCajaChica.setVisible(true);
	        this.jInternalFrameImportacionAsientoContableCajaChica.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
	    }		
	}	
	
	
	
	
	
	public void abrirFrameOrderByAsientoContableCajaChica() throws Exception {	    	        		
	    try {
			this.jInternalFrameOrderByAsientoContableCajaChica.setVisible(true);
	        this.jInternalFrameOrderByAsientoContableCajaChica.setSelected(true);			
			
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameOrderByAsientoContableCajaChica() throws Exception {	    	        		
	    try {			
			this.jInternalFrameOrderByAsientoContableCajaChica.setVisible(false);
	        this.jInternalFrameOrderByAsientoContableCajaChica.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameReporteDinamicoAsientoContableCajaChica() throws Exception {			
	    try {
			this.jInternalFrameReporteDinamicoAsientoContableCajaChica.setVisible(false);
	        this.jInternalFrameReporteDinamicoAsientoContableCajaChica.setSelected(false);			
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	
	public void cerrarFrameImportacionAsientoContableCajaChica() throws Exception {	    	        		
	    try {
			this.jInternalFrameImportacionAsientoContableCajaChica.setVisible(false);
	        this.jInternalFrameImportacionAsientoContableCajaChica.setSelected(false);
		
	    } catch (final java.beans.PropertyVetoException e) {
		
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
	    }		
	}
	
	
	

				public void abrirFrameTreeCuentaContable(String sTipoProceso) { //throws Exception
					try {
						//CAUSA PROBLEMAS, SE ADICIONA EN CONSTRUCTOR, LUEGO SOLO VISIBLE true y false
						//this.jDesktopPane.add(jInternalFrameTreeCuentaContable);
						CuentaContableBeanSwingJInternalFrame cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
						cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setsTipoProceso(sTipoProceso);

						if(sTipoProceso.equals("BUSQUEDA_FK")) {
							cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.sTipoBusqueda="CuentaContable";
						}

						cuentacontableBeanSwingJInternalFrame.getTodosCuentaContableArbol();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setCuentaContables(cuentacontableBeanSwingJInternalFrame.cuentacontablesArbol);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.CargarTreeCuentaContable();
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setVisible(true);
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.setSelected(true);

						//SE CAMBIA PARENT ORIGINAL PARA QUE RETORNE EN ESTE FORMULARIO
						cuentacontableBeanSwingJInternalFrame.jInternalFrameTreeCuentaContable.jInternalFrameParent=this;
						TitledBorder titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
						TitledBorder titledBorderCuentaContable=(TitledBorder)cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

						titledBorderCuentaContable.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Cuenta Contable");


						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,cuentacontableBeanSwingJInternalFrame);
						}
						this.jDesktopPane.add(cuentacontableBeanSwingJInternalFrame);

					} catch (Exception e) {
						e.getStackTrace();
						//Funciones<%=getFrameworkDomain()%>.manageException(this, e,logger,<%=GetNombreClaseC(TablaBase.ToString())%>ConstantesFunciones.CLASSNAME);
					}
				}

				public void cerrarFrameTreeCuentaContable(CuentaContableBeanSwingJInternalFrame jInternalFrameTreeCuentaContable) throws Exception {
					try {
						//jDesktopPane.add(jInternalFrameTreeCuentaContable);
						jInternalFrameTreeCuentaContable.setVisible(false);
						jInternalFrameTreeCuentaContable.setSelected(false);
						//jInternalFrameTreeCuentaContable.dispose();
						//jInternalFrameTreeCuentaContable=null;
					} catch (final java.beans.PropertyVetoException e) {
						FuncionesSwing.manageException(this, e,logger);
					}
				}
	
	public void jButtonModificarAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try {
			this.modificarAsientoContableCajaChica(evt,-1,false);
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void modificarAsientoContableCajaChica(ActionEvent evt,int rowIndex,Boolean esRelaciones) throws Exception {   
		try {
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();
			}
			
			this.habilitarDeshabilitarControlesAsientoContableCajaChica(true);
			//this.isEsNuevoAsientoContableCajaChica=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.actualizarEstadoCeldasBotonesAsientoContableCajaChica("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesAsientoContableCajaChica(false) ;
			
			if(asientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
			

				if(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado() && DetalleAsientoContableCajaChicaJInternalFrame.ESTA_CARGADO_PORPARTE) {
					this.jButtonDetalleAsientoContableCajaChicaActionPerformed(null,intSelectedRow,false,true,null);
				}
			}
			
			if(AsientoContableCajaChicaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleAsientoContableCajaChica(esRelaciones);
			}
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualAsientoContableCajaChica(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void seleccionarFilaTablaAsientoContableCajaChicaActual() { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL
			Integer intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void seleccionarAsientoContableCajaChica(ActionEvent evt,int rowIndex) throws Exception {   
		try {
			
			if(this.jInternalFrameDetalleFormAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			int intSelectedRow = 0;	
			
			if(rowIndex>=0) {
				intSelectedRow=rowIndex;
			} else {
				intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();
			}
			
			//this.habilitarDeshabilitarControlesAsientoContableCajaChica(true);
			//this.isEsNuevoAsientoContableCajaChica=false;
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
			}
			//ARCHITECTURE
			
			this.jInternalFrameParent.setIdCombosCodigoDesdeBusquedaForeignKey(this.asientocontablecajachica.getId(),this.sTipoBusqueda);
			
			this.dispose();
			
			//this.actualizarEstadoCeldasBotonesAsientoContableCajaChica("ae", isGuardarCambiosEnLote, isEsMantenimientoRelacionado);
			
			//NO FUNCIONA BINDINGS
			/*
			this.inicializarActualizarBindingBotonesAsientoContableCajaChica(false) ;
			
			if(AsientoContableCajaChicaJInternalFrame.CON_DATOS_FRAME) {
				this.abrirFrameDetalleAsientoContableCajaChica(esRelaciones);
			}
			*/
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualAsientoContableCajaChica(false) ;
		
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}		
	
	public void setIdCombosCodigoDesdeBusquedaForeignKey(Long id,String sType)throws Exception{
		
		try {
			
			if(sType.equals("Empleado")) {
				if(!this.asientocontablecajachicaConstantesFunciones.cargarid_empleadoAsientoContableCajaChica) {
					this.cargarCombosEmpleadosForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
					this.cargarCombosFrameEmpleadosForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_empleado (id);

				this.recargarComboTablaEmpleado(this.empleadosForeignKey);

			}
			
			if(sType.equals("Cliente")) {
				if(!this.asientocontablecajachicaConstantesFunciones.cargarid_clienteAsientoContableCajaChica) {
					this.cargarCombosClientesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
					this.cargarCombosFrameClientesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cliente (id);

				this.recargarComboTablaCliente(this.clientesForeignKey);

			}
			
			if(sType.equals("CuentaContable")) {
				if(!this.asientocontablecajachicaConstantesFunciones.cargarid_cuenta_contableAsientoContableCajaChica) {
					this.cargarCombosCuentaContablesForeignKeyLista(" where id="+id);
					//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
					this.cargarCombosFrameCuentaContablesForeignKey("Todos");
				}

				this.setCombosCodigoDesdeBusquedaid_cuenta_contable (id);

				this.recargarComboTablaCuentaContable(this.cuentacontablesForeignKey);

			}
		} catch(Exception e) {
			throw e;
		}
	}
	
						
	
	public void recargarComboTablaAnio(List<Anio> aniosForeignKey)throws Exception{
		TableColumn tableColumnAnio=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO));
		TableCellEditor tableCellEditorAnio =tableColumnAnio.getCellEditor();

		AnioTableCell anioTableCellFk=(AnioTableCell)tableCellEditorAnio;

		if(anioTableCellFk!=null) {
			anioTableCellFk.setaniosForeignKey(aniosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAsientoContableCajaChica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//anioTableCellFk.setRowActual(intSelectedRow);
			//anioTableCellFk.setaniosForeignKeyActual(aniosForeignKey);
		//}


		if(anioTableCellFk!=null) {
			anioTableCellFk.RecargarAniosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaMes(List<Mes> messForeignKey)throws Exception{
		TableColumn tableColumnMes=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDMES));
		TableCellEditor tableCellEditorMes =tableColumnMes.getCellEditor();

		MesTableCell mesTableCellFk=(MesTableCell)tableCellEditorMes;

		if(mesTableCellFk!=null) {
			mesTableCellFk.setmessForeignKey(messForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAsientoContableCajaChica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//mesTableCellFk.setRowActual(intSelectedRow);
			//mesTableCellFk.setmessForeignKeyActual(messForeignKey);
		//}


		if(mesTableCellFk!=null) {
			mesTableCellFk.RecargarMessForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
		
	
	public void recargarComboTablaEmpleado(List<Empleado> empleadosForeignKey)throws Exception{
		TableColumn tableColumnEmpleado=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPLEADO));
		TableCellEditor tableCellEditorEmpleado =tableColumnEmpleado.getCellEditor();

		EmpleadoTableCell empleadoTableCellFk=(EmpleadoTableCell)tableCellEditorEmpleado;

		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.setempleadosForeignKey(empleadosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAsientoContableCajaChica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//empleadoTableCellFk.setRowActual(intSelectedRow);
			//empleadoTableCellFk.setempleadosForeignKeyActual(empleadosForeignKey);
		//}


		if(empleadoTableCellFk!=null) {
			empleadoTableCellFk.RecargarEmpleadosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaEstadoAsientoContableCajaChica(List<EstadoAsientoContableCajaChica> estadoasientocontablecajachicasForeignKey)throws Exception{
		TableColumn tableColumnEstadoAsientoContableCajaChica=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDESTADOASIENTOCONTABLECAJACHICA));
		TableCellEditor tableCellEditorEstadoAsientoContableCajaChica =tableColumnEstadoAsientoContableCajaChica.getCellEditor();

		EstadoAsientoContableCajaChicaTableCell estadoasientocontablecajachicaTableCellFk=(EstadoAsientoContableCajaChicaTableCell)tableCellEditorEstadoAsientoContableCajaChica;

		if(estadoasientocontablecajachicaTableCellFk!=null) {
			estadoasientocontablecajachicaTableCellFk.setestadoasientocontablecajachicasForeignKey(estadoasientocontablecajachicasForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAsientoContableCajaChica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//estadoasientocontablecajachicaTableCellFk.setRowActual(intSelectedRow);
			//estadoasientocontablecajachicaTableCellFk.setestadoasientocontablecajachicasForeignKeyActual(estadoasientocontablecajachicasForeignKey);
		//}


		if(estadoasientocontablecajachicaTableCellFk!=null) {
			estadoasientocontablecajachicaTableCellFk.RecargarEstadoAsientoContableCajaChicasForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCliente(List<Cliente> clientesForeignKey)throws Exception{
		TableColumn tableColumnCliente=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDCLIENTE));
		TableCellEditor tableCellEditorCliente =tableColumnCliente.getCellEditor();

		ClienteTableCell clienteTableCellFk=(ClienteTableCell)tableCellEditorCliente;

		if(clienteTableCellFk!=null) {
			clienteTableCellFk.setclientesForeignKey(clientesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAsientoContableCajaChica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//clienteTableCellFk.setRowActual(intSelectedRow);
			//clienteTableCellFk.setclientesForeignKeyActual(clientesForeignKey);
		//}


		if(clienteTableCellFk!=null) {
			clienteTableCellFk.RecargarClientesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTransaccion(List<Transaccion> transaccionsForeignKey)throws Exception{
		TableColumn tableColumnTransaccion=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION));
		TableCellEditor tableCellEditorTransaccion =tableColumnTransaccion.getCellEditor();

		TransaccionTableCell transaccionTableCellFk=(TransaccionTableCell)tableCellEditorTransaccion;

		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.settransaccionsForeignKey(transaccionsForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAsientoContableCajaChica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//transaccionTableCellFk.setRowActual(intSelectedRow);
			//transaccionTableCellFk.settransaccionsForeignKeyActual(transaccionsForeignKey);
		//}


		if(transaccionTableCellFk!=null) {
			transaccionTableCellFk.RecargarTransaccionsForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoDocumento(List<TipoDocumento> tipodocumentosForeignKey)throws Exception{
		TableColumn tableColumnTipoDocumento=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPODOCUMENTO));
		TableCellEditor tableCellEditorTipoDocumento =tableColumnTipoDocumento.getCellEditor();

		TipoDocumentoTableCell tipodocumentoTableCellFk=(TipoDocumentoTableCell)tableCellEditorTipoDocumento;

		if(tipodocumentoTableCellFk!=null) {
			tipodocumentoTableCellFk.settipodocumentosForeignKey(tipodocumentosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAsientoContableCajaChica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipodocumentoTableCellFk.setRowActual(intSelectedRow);
			//tipodocumentoTableCellFk.settipodocumentosForeignKeyActual(tipodocumentosForeignKey);
		//}


		if(tipodocumentoTableCellFk!=null) {
			tipodocumentoTableCellFk.RecargarTipoDocumentosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaCuentaContable(List<CuentaContable> cuentacontablesForeignKey)throws Exception{
		TableColumn tableColumnCuentaContable=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDCUENTACONTABLE));
		TableCellEditor tableCellEditorCuentaContable =tableColumnCuentaContable.getCellEditor();

		CuentaContableTableCell cuentacontableTableCellFk=(CuentaContableTableCell)tableCellEditorCuentaContable;

		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.setcuentacontablesForeignKey(cuentacontablesForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAsientoContableCajaChica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//cuentacontableTableCellFk.setRowActual(intSelectedRow);
			//cuentacontableTableCellFk.setcuentacontablesForeignKeyActual(cuentacontablesForeignKey);
		//}


		if(cuentacontableTableCellFk!=null) {
			cuentacontableTableCellFk.RecargarCuentaContablesForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
		
	
	public void recargarComboTablaTipoMovimiento(List<TipoMovimiento> tipomovimientosForeignKey)throws Exception{
		TableColumn tableColumnTipoMovimiento=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTO));
		TableCellEditor tableCellEditorTipoMovimiento =tableColumnTipoMovimiento.getCellEditor();

		TipoMovimientoTableCell tipomovimientoTableCellFk=(TipoMovimientoTableCell)tableCellEditorTipoMovimiento;

		if(tipomovimientoTableCellFk!=null) {
			tipomovimientoTableCellFk.settipomovimientosForeignKey(tipomovimientosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAsientoContableCajaChica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipomovimientoTableCellFk.setRowActual(intSelectedRow);
			//tipomovimientoTableCellFk.settipomovimientosForeignKeyActual(tipomovimientosForeignKey);
		//}


		if(tipomovimientoTableCellFk!=null) {
			tipomovimientoTableCellFk.RecargarTipoMovimientosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoTransaccionModulo(List<TipoTransaccionModulo> tipotransaccionmodulosForeignKey)throws Exception{
		TableColumn tableColumnTipoTransaccionModulo=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO));
		TableCellEditor tableCellEditorTipoTransaccionModulo =tableColumnTipoTransaccionModulo.getCellEditor();

		TipoTransaccionModuloTableCell tipotransaccionmoduloTableCellFk=(TipoTransaccionModuloTableCell)tableCellEditorTipoTransaccionModulo;

		if(tipotransaccionmoduloTableCellFk!=null) {
			tipotransaccionmoduloTableCellFk.settipotransaccionmodulosForeignKey(tipotransaccionmodulosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAsientoContableCajaChica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipotransaccionmoduloTableCellFk.setRowActual(intSelectedRow);
			//tipotransaccionmoduloTableCellFk.settipotransaccionmodulosForeignKeyActual(tipotransaccionmodulosForeignKey);
		//}


		if(tipotransaccionmoduloTableCellFk!=null) {
			tipotransaccionmoduloTableCellFk.RecargarTipoTransaccionModulosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	public void recargarComboTablaTipoMovimientoModulo(List<TipoMovimientoModulo> tipomovimientomodulosForeignKey)throws Exception{
		TableColumn tableColumnTipoMovimientoModulo=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO));
		TableCellEditor tableCellEditorTipoMovimientoModulo =tableColumnTipoMovimientoModulo.getCellEditor();

		TipoMovimientoModuloTableCell tipomovimientomoduloTableCellFk=(TipoMovimientoModuloTableCell)tableCellEditorTipoMovimientoModulo;

		if(tipomovimientomoduloTableCellFk!=null) {
			tipomovimientomoduloTableCellFk.settipomovimientomodulosForeignKey(tipomovimientomodulosForeignKey);
		}


		//SIEMPRE rowActual<0 , NO USADO POR EL MOMENTO
		//COMBO DE FILA ACTUAL SE ACTUALIZA, LOS DEMAS USAN EL ANTERIOR COMBO
		//int intSelectedRow = -1;
		//intSelectedRow=this.jTableDatosAsientoContableCajaChica.getSelectedRow();

		//if(intSelectedRow<=0) {
			//tipomovimientomoduloTableCellFk.setRowActual(intSelectedRow);
			//tipomovimientomoduloTableCellFk.settipomovimientomodulosForeignKeyActual(tipomovimientomodulosForeignKey);
		//}


		if(tipomovimientomoduloTableCellFk!=null) {
			tipomovimientomoduloTableCellFk.RecargarTipoMovimientoModulosForeignKey();
			//ACTUALIZA COMBOS DE TABLA-FIN
		}

	}	
	
	
	

	public void setCombosCodigoDesdeBusquedaid_empleado (Long id) throws Exception {
		this.setActualEmpleadoForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cliente (Long id) throws Exception {
		this.setActualClienteForeignKey(id,true,"Todos");

	};
	

	public void setCombosCodigoDesdeBusquedaid_cuenta_contable (Long id) throws Exception {
		this.setActualCuentaContableForeignKey(id,true,"Todos");

	};
	
	public void jButtonActualizarAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingParametrosReportesAsientoContableCajaChica(false);
			
			//if(!this.isEsNuevoAsientoContableCajaChica) {								
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();	
				
				//SE PIEDE INDICE SELECTED CON FILA TOTALES, ASEGURARSE QUE OBJETO ACTUAL ESTE EN FORMULARIO
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
			//}
				
			if(AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA) {
				this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
				this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				
			}
			
			if(this.permiteMantenimiento(this.asientocontablecajachica)) {	
				this.actualizar();
				
				if(!this.isGuardarCambiosEnLote && !this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
					
					this.isEsNuevoAsientoContableCajaChica=true;
					this.inicializarActualizarBindingTablaAsientoContableCajaChica(false);
					this.isEsNuevoAsientoContableCajaChica=false;
				
				} else {					
					
					//PARA RELACIONADO ACTUALIZAR FILA TOTALES
					this.isEsNuevoAsientoContableCajaChica=true;
					this.procesoActualizarFilaTotales(false,"MANTENIMIENTO");
					this.isEsNuevoAsientoContableCajaChica=false;
				}
						
								
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesAsientoContableCajaChica(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualAsientoContableCajaChica(false);
				
				this.habilitarDeshabilitarControlesAsientoContableCajaChica(false);
			
												
				
				if(AsientoContableCajaChicaJInternalFrame.CON_DATOS_FRAME) {
					if(!this.isPostAccionSinCerrar) {
						this.cerrarFrameDetalleAsientoContableCajaChica();
					}
				}
				
				if(this.isPostAccionNuevo) {
					this.jButtonNuevoAsientoContableCajaChicaActionPerformed(evt,asientocontablecajachicaSessionBean.getConGuardarRelaciones());
				} else {
					if(this.isPostAccionSinCerrar) {
						Integer intSelectedRowActual=this.getIndiceActualAsientoContableCajaChica(this.asientocontablecajachica,intSelectedRow);
						
						if(intSelectedRow>-1) {
							this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(intSelectedRowActual, intSelectedRowActual);
							this.jButtonIdActionPerformed(evt,intSelectedRowActual,asientocontablecajachicaSessionBean.getConGuardarRelaciones(),false);
						}
					}
				}
				
				this.cancelar(false);
				
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
			
			
			if(this.jInternalFrameParent!=null) { //&& this.isEsMantenimientoRelacionado) {
				Boolean esUsoDesdeHijoLocal=true;
				String sTipo="Formulario";
				Boolean conIrServidorAplicacionParent=false;
				Long id=this.asientocontablecajachica.getId();
				ArrayList<String> arrClasses=new ArrayList<String>();
				
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();
				
				generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
				generalEntityParameterGeneral.setsDominio("Formulario");
				generalEntityParameterGeneral.setsDominioTipo(AsientoContableCajaChica.class.getName());
				
				this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AsientoContableCajaChica.class.getName(),sTipo,"FORMULARIO",esControlTabla,conIrServidorAplicacionParent,
					id,this, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.FORM,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
					evt,generalEntityParameterGeneral,this);
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonEliminarAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {   
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}
			
			int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();	       
							
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				this.asientocontablecajachica.setIsDeleted(true);
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				this.asientocontablecajachica.setIsDeleted(true);
			}
			//ARCHITECTURE
			
			if(this.permiteMantenimiento(this.asientocontablecajachica)) {
				this.eliminar();
				
				if(!this.isGuardarCambiosEnLote && !this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
					this.procesarBusqueda(sAccionBusqueda);
				}
				
				((AsientoContableCajaChicaModel) this.jTableDatosAsientoContableCajaChica.getModel()).fireTableRowsDeleted(intSelectedRow,intSelectedRow);
				
				this.isEsNuevoAsientoContableCajaChica=true;
				this.inicializarActualizarBindingTablaAsientoContableCajaChica(false);
				this.isEsNuevoAsientoContableCajaChica=false;									
					
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingBotonesAsientoContableCajaChica(false);
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualAsientoContableCajaChica(false);
				
				this.habilitarDeshabilitarControlesAsientoContableCajaChica(false);
				
				
				
				if(AsientoContableCajaChicaJInternalFrame.CON_DATOS_FRAME) {
					this.cerrarFrameDetalleAsientoContableCajaChica();
				}
			} else {
				JOptionPane.showMessageDialog(this,"ESTE REGISTRO NO PUEDE ACTUALIZARSE","EDITAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}		
	}
		
	public void jButtonCancelarAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {                                         	   	       
	  	try {
			if(jTableDatosAsientoContableCajaChica.getRowCount()>=1) {
				jTableDatosAsientoContableCajaChica.removeRowSelectionInterval(0, jTableDatosAsientoContableCajaChica.getRowCount()-1);						
			}
						
			this.invalidValues=new InvalidValue[0];
			this.habilitarDeshabilitarControlesAsientoContableCajaChica(false);
			this.cancelar(true);			
			this.inicializarActualizarBindingTablaAsientoContableCajaChica(false);
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingBotonesAsientoContableCajaChica(false) ;
			
			//SI ES MANUAL
			//this.inicializarActualizarBindingBotonesManualAsientoContableCajaChica(false) ;
			
			this.isEsNuevoAsientoContableCajaChica=false;
			
			if(AsientoContableCajaChicaJInternalFrame.CON_DATOS_FRAME) {
				this.cerrarFrameDetalleAsientoContableCajaChica();
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jButtonGuardarCambiosAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}
			
			//this.estaModoGuardarCambios=true;
			
	    	this.guardarCambios();
			
			if(!this.isErrorGuardar) {
				this.procesarBusqueda(this.sAccionBusqueda);
				
				//NO FUNCIONA BINDINGS
				this.inicializarActualizarBindingAsientoContableCajaChica(false);
				
				//SI ES MANUAL
				if(AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {				
					//this.inicializarActualizarBindingManualAsientoContableCajaChica();				
				}
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
			
			//this.estaModoGuardarCambios=false;
		}
	}
	
	public void jButtonNuevoGuardarCambiosAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			
			this.estaModoNuevo=true;
			this.estaModoNuevoGuardarCambios=true;
			
			//LO HACE NUEVOPREPARAR
			//this.iIdNuevoAsientoContableCajaChica--;			
			//AsientoContableCajaChica asientocontablecajachicaAux= new AsientoContableCajaChica();			
			//asientocontablecajachicaAux.setId(this.iIdNuevoAsientoContableCajaChica);
			
			if(this.jInternalFrameDetalleFormAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			this.aumentarTamanioFilaNuevaTablaAsientoContableCajaChica();
			
			if(this.conTotales) {
				this.quitarFilaTotales();
			}
			
			this.nuevoPreparar(true);
			
			this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
			
			this.asientocontablecajachica.setsType("NUEVO_GUARDAR_CAMBIOS");
			
			//LO HACE NUEVOPREPARAR
			/*
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().add(this.asientocontablecajachicaAux);
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				this.asientocontablecajachicas.add(this.asientocontablecajachicaAux);				
			}
			*/
			
			this.inicializarActualizarBindingTablaAsientoContableCajaChica(false);
			
			this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(this.getIndiceNuevoAsientoContableCajaChica(), this.getIndiceNuevoAsientoContableCajaChica());
			
			int iLastRow =  this.jTableDatosAsientoContableCajaChica.getRowCount () - 1;
			Rectangle rectangle = this.jTableDatosAsientoContableCajaChica.getCellRect(iLastRow, 0, true);
			
			this.jTableDatosAsientoContableCajaChica.scrollRectToVisible(rectangle);
			
			//FILA TOTALES
			if(this.conTotales) {
				this.crearFilaTotales();
				
				this.inicializarActualizarBindingTablaAsientoContableCajaChica(false);
			}

		} catch(Exception e) {									
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoNuevo=false;
			this.estaModoNuevoGuardarCambios=false;
		}
	}		
	
	public void jButtonRecargarInformacionAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {    		
		try {
			this.iNumeroPaginacionPagina=0;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}
			
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			
	    	this.recargarInformacion();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingAsientoContableCajaChica(false);
			
			//SI ES MANUAL
			if(AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualAsientoContableCajaChica();
			}
			
			//this.abrirFrameTreeAsientoContableCajaChica();
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}	
	}
	
	
	public void jButtonGenerarImportacionAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedReader bufferedReader = null;
		String sXmlStringFile="";
		String sPath="";
		this.arrDatoGeneralMinimos= new  ArrayList<DatoGeneralMinimo>();
		DatoGeneralMinimo datoGeneralMinimo=new DatoGeneralMinimo();
		String sLine="";
		
		try {			
			if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR IMPORTACION DE Asiento Contable Caja ChicaS ?", "MANTENIMIENTO DE Asiento Contable Caja Chica", JOptionPane.OK_CANCEL_OPTION) == 0) {
				bufferedReader = new BufferedReader(new FileReader(this.jInternalFrameImportacionAsientoContableCajaChica.getFileImportacion().getAbsolutePath()));
								
				while ((sLine = bufferedReader.readLine()) != null) {
					datoGeneralMinimo=new DatoGeneralMinimo();
					datoGeneralMinimo.setsDescripcion(sLine);
					
					this.arrDatoGeneralMinimos.add(datoGeneralMinimo);
				}
				
				this.actualizarParametrosGeneralAsientoContableCajaChica();
						
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {						
					this.asientocontablecajachicaReturnGeneral=asientocontablecajachicaLogic.procesarImportacionAsientoContableCajaChicasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this.arrDatoGeneralMinimos,this.asientocontablecajachicaParameterGeneral);
						
				} else if(Constantes.ISUSAEJBREMOTE) {
						
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
						
				this.procesarAsientoContableCajaChicaReturnGeneral();
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedReader != null) {
				bufferedReader.close();
			}	
		}				
	}
	
	
	
	public void jButtonAbrirImportacionAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {    				
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {
			int iReturnArchivo = this.jInternalFrameImportacionAsientoContableCajaChica.getjFileChooserImportacion().showOpenDialog(this);
 
            if (iReturnArchivo == JFileChooser.APPROVE_OPTION) {
            	this.jInternalFrameImportacionAsientoContableCajaChica.setFileImportacion(this.jInternalFrameImportacionAsientoContableCajaChica.getjFileChooserImportacion().getSelectedFile());
            	
				this.jInternalFrameImportacionAsientoContableCajaChica.getjTextFieldPathArchivoImportacion().setText(this.jInternalFrameImportacionAsientoContableCajaChica.getFileImportacion().getName());
				
				//System.out.println("ARCHIVO ESCOGIDO: "+this.fileImportacionAsientoContableCajaChica.getName());
				
            } else {
                //System.out.println("CANCELAR SELECCION");
				this.jInternalFrameImportacionAsientoContableCajaChica.getjTextFieldPathArchivoImportacion().setText("SELECCION CANCELADA");
            }			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}		
	}
	
	
	public void jButtonGenerarReporteDinamicoAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {    		
		BufferedWriter bufferedWriter = null;
		String sXmlStringFile="";
		String sPath="";
		
		try {	
		
		ArrayList<AsientoContableCajaChica> asientocontablecajachicasSeleccionados=new ArrayList<AsientoContableCajaChica>();		

		asientocontablecajachicasSeleccionados=this.getAsientoContableCajaChicasSeleccionados(true);
		
		
		this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();
		
		this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
		
		
		this.sTipoArchivoReporte=this.sTipoArchivoReporteDinamico;
		
		//this.sTipoReporteExtra="Base";
		
			InputStream reportFile=null;
			InputStream imageFile=null;
			
			imageFile=AuxiliarImagenes.class.getResourceAsStream("LogoReporte.jpg");			
				
		
		
			reportFile = AuxiliarReportes.class.getResourceAsStream("AsientoContableCajaChicaBaseDesign.jrxml");	
			
			sPath=this.parametroGeneralUsuario.getpath_exportar()+"AsientoContableCajaChicaBaseDesign.jrxml";
			
			sXmlStringFile=Funciones2.getStringFromInputStream(reportFile);
						
			bufferedWriter = new BufferedWriter(new FileWriter(sPath));
			
			
			sXmlStringFile=this.actualizarReporteDinamico(sXmlStringFile);
			
			
			bufferedWriter.write(sXmlStringFile);
			
			bufferedWriter.close();
			
			try{JasperCompileManager.compileReportToFile(sPath);}catch(Exception e){e.printStackTrace();}
			
			this.actualizarVariablesTipoReporte(false,true,false,sPath);
			
			/*
			this.esReporteDinamico=true;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");
			this.sTipoReporteExtra="";
			*/
			
			this.generarReporteAsientoContableCajaChicas("Todos",asientocontablecajachicasSeleccionados );

			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				//DEBE APARECER EL REPORTE DIRECTAMENTE
				//JOptionPane.showMessageDialog(this,"GENERADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Asiento Contable Caja Chica",JOptionPane.INFORMATION_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {			
			if (bufferedWriter != null) {
				bufferedWriter.close();
			}	
		}
	}		
	
	
	public String actualizarReporteDinamico(String sXmlStringFile) {				
		Reporte reporte=new Reporte();
		Integer iAnchoMaximoVertical=535;//781,782
		Integer iAnchoMaximoHorizontal=782;
		Integer iAnchoSum=0;
		Integer iAnchoColumna=0;
		
		Integer iAnchoMargenes=60;
		String sWidthGrafico="535";
		
		for(int index:this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjListColumnasSelectReporte().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjListColumnasSelectReporte().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empresa_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empresa_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empresa_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empresa_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Sucursal_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Sucursal_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Sucursal_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Sucursal_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Ejercicio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Ejercicio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Ejercicio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Ejercicio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Periodo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Periodo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Periodo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Periodo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDUSUARIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Usuario_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Usuario_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Usuario_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Usuario_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Anio_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Anio_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Anio_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Anio_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDMES:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Mes_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Mes_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Mes_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Mes_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_SECUENCIAL:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cuencial_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cuencial_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cuencial_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cuencial_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDMONEDA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Moneda_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Moneda_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Moneda_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Moneda_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_FECHA:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_cha_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_cha_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_cha_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_cha_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPLEADO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Empleado_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Empleado_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Empleado_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Empleado_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDESTADOASIENTOCONTABLECAJACHICA:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_EstadoAsientoContableCajaChica_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_EstadoAsientoContableCajaChica_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_EstadoAsientoContableCajaChica_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_EstadoAsientoContableCajaChica_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR:
					iAnchoColumna=50;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Proveedor_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Proveedor_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Proveedor_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Proveedor_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDCLIENTE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Cliente_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Cliente_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Cliente_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Cliente_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Transaccion_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Transaccion_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Transaccion_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Transaccion_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPODOCUMENTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoDocumento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoDocumento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoDocumento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoDocumento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDCUENTACONTABLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_CuentaContable_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_CuentaContable_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_CuentaContable_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_CuentaContable_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_talle_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_talle_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_talle_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_talle_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_Modulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_Modulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_Modulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_Modulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoMovimiento_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoMovimiento_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoMovimiento_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoMovimiento_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoTransaccionModulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoTransaccionModulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoTransaccionModulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoTransaccionModulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO:
					iAnchoColumna=100;

					if(iAnchoSum+iAnchoColumna<=iAnchoMaximoHorizontal) {
						sXmlStringFile=sXmlStringFile.replace("<!--col_TipoMovimientoModulo_col", "");
						sXmlStringFile=sXmlStringFile.replace("col_TipoMovimientoModulo_col-->", "");

						sXmlStringFile=sXmlStringFile.replace("colancho_TipoMovimientoModulo_colancho", iAnchoColumna.toString());
						sXmlStringFile=sXmlStringFile.replace("colx_TipoMovimientoModulo_colx", iAnchoSum.toString());

						iAnchoSum+=iAnchoColumna;
					}

					break;
					
				default :
					break;
			}
		}
		
		iAnchoSum+=iAnchoMargenes;
		
		if(iAnchoSum>iAnchoMaximoVertical) {
			sXmlStringFile=sXmlStringFile.replace("595", "842");
			//sXmlStringFile=sXmlStringFile.replace("842", "595");
			sXmlStringFile=sXmlStringFile.replace("535", "782");
			sXmlStringFile=sXmlStringFile.replace("Portrait", "Landscape");			
			sWidthGrafico="782";
		
		} else {
			sXmlStringFile=sXmlStringFile.replace("842", "595");
			//sXmlStringFile=sXmlStringFile.replace("595", "842");
			sXmlStringFile=sXmlStringFile.replace("782", "535");
			sXmlStringFile=sXmlStringFile.replace("Landscape", "Portrait");
			sWidthGrafico="535";
		}
		
		if(this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjCheckBoxConGraficoDinamico().isSelected()) {
			sXmlStringFile=this.actualizarGraficoReporteDinamico(sXmlStringFile,sWidthGrafico);
		} else {
			sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "30");
		}
		
		return sXmlStringFile;
	}
	
	
	
	public String actualizarGraficoReporteDinamico(String sXmlStringFile,String sWidthGrafico) {		
		String strGrafico="";		
		String sTipo="NORMAL";
		String strCategorySeries="";
		String sNombreCampoCategoria="";
		String sNombreCampoCategoriaValor="";
		Reporte reporte=new Reporte();
		Reporte reporteCategoriaValor=new Reporte();
		Reporte reporteTipoGraficoReporte=new Reporte();
		Boolean existe=false;
		
		sXmlStringFile=sXmlStringFile.replace("colancho_summary_colancho", "280");
		
		//CATEGORIA GRAFICO				
		reporte=((Reporte)this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjComboBoxColumnaCategoriaGrafico().getSelectedItem());
				
		//TIPO GRAFICO REPORTE
		reporteTipoGraficoReporte=((Reporte)this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjComboBoxTiposGraficosReportesDinamico().getSelectedItem());
		
		String sTipoGraficoReporte=reporteTipoGraficoReporte.getsCodigo();
		
		switch(reporte.getsCodigo()) {
			
				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoria="id_empresa";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoria="id_sucursal";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoria="id_ejercicio";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoria="id_periodo";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoria="id_usuario";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoria="id_anio";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoria="id_mes";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_SECUENCIAL:
					sNombreCampoCategoria="secuencial";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoria="id_moneda";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoria="fecha";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoria="id_empleado";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDESTADOASIENTOCONTABLECAJACHICA:
					sNombreCampoCategoria="id_estado_asiento_contable";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR:
					sNombreCampoCategoria="es_proveedor";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoria="id_cliente";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION:
					sNombreCampoCategoria="id_transaccion";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPODOCUMENTO:
					sNombreCampoCategoria="id_tipo_documento";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDCUENTACONTABLE:
					sNombreCampoCategoria="id_cuenta_contable";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE:
					sNombreCampoCategoria="detalle";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoria="id_modulo";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTO:
					sNombreCampoCategoria="id_tipo_movimiento";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					sNombreCampoCategoria="id_tipo_transaccion_modulo";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO:
					sNombreCampoCategoria="id_tipo_movimiento_modulo";
					break;
					
			default :
				break;
		}		
		//CATEGORIA GRAFICO
		
		//CATEGORIA VALOR				
		reporteCategoriaValor=((Reporte)this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjComboBoxColumnaCategoriaValor().getSelectedItem());
		
		switch(reporteCategoriaValor.getsCodigo()) {
			
				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA:
					sNombreCampoCategoriaValor="id_empresa";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL:
					sNombreCampoCategoriaValor="id_sucursal";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO:
					sNombreCampoCategoriaValor="id_ejercicio";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO:
					sNombreCampoCategoriaValor="id_periodo";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDUSUARIO:
					sNombreCampoCategoriaValor="id_usuario";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO:
					sNombreCampoCategoriaValor="id_anio";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDMES:
					sNombreCampoCategoriaValor="id_mes";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_SECUENCIAL:
					sNombreCampoCategoriaValor="secuencial";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDMONEDA:
					sNombreCampoCategoriaValor="id_moneda";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_FECHA:
					sNombreCampoCategoriaValor="fecha";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPLEADO:
					sNombreCampoCategoriaValor="id_empleado";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDESTADOASIENTOCONTABLECAJACHICA:
					sNombreCampoCategoriaValor="id_estado_asiento_contable";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR:
					sNombreCampoCategoriaValor="es_proveedor";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDCLIENTE:
					sNombreCampoCategoriaValor="id_cliente";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION:
					sNombreCampoCategoriaValor="id_transaccion";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPODOCUMENTO:
					sNombreCampoCategoriaValor="id_tipo_documento";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDCUENTACONTABLE:
					sNombreCampoCategoriaValor="id_cuenta_contable";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE:
					sNombreCampoCategoriaValor="detalle";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO:
					sNombreCampoCategoriaValor="id_modulo";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTO:
					sNombreCampoCategoriaValor="id_tipo_movimiento";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					sNombreCampoCategoriaValor="id_tipo_transaccion_modulo";
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO:
					sNombreCampoCategoriaValor="id_tipo_movimiento_modulo";
					break;
					
			default :
				break;
		}	
		//CATEGORIA VALOR
		
		//VALORES GRAFICO
		for(int index:this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjListColumnasValoresGrafico().getSelectedIndices()) {
			reporte=(Reporte)this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjListColumnasValoresGrafico().getModel().getElementAt(index);
			
			switch(reporte.getsCodigo()) {
				
				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empresa",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empresa");
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Sucursal",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_sucursal");
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Ejercicio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_ejercicio");
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Periodo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_periodo");
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDUSUARIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Usuario",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_usuario");
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Anio",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_anio");
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDMES:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Mes",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_mes");
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_SECUENCIAL:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Secuencial",sNombreCampoCategoria,sNombreCampoCategoriaValor,"secuencial");
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDMONEDA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Moneda",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_moneda");
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_FECHA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Fecha",sNombreCampoCategoria,sNombreCampoCategoriaValor,"fecha");
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPLEADO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Empleado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_empleado");
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDESTADOASIENTOCONTABLECAJACHICA:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Estado",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_estado_asiento_contable");
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Es Proveedor",sNombreCampoCategoria,sNombreCampoCategoriaValor,"es_proveedor");
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDCLIENTE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cliente/Prove",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cliente");
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_transaccion");
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPODOCUMENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"T Documento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_documento");
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDCUENTACONTABLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Cta Contable",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_cuenta_contable");
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Detalle",sNombreCampoCategoria,sNombreCampoCategoriaValor,"detalle");
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Modulo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_modulo");
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Movimiento",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_movimiento");
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Tipo Transaccion",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_transaccion_modulo");
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO:
					strCategorySeries+=FuncionesReporte.getStringCategoryGraficoNormalReporte(sTipoGraficoReporte,"Movimiento Modulo",sNombreCampoCategoria,sNombreCampoCategoriaValor,"id_tipo_movimiento_modulo");
					break;
					
				default :
					break;
			}
		}
		//VALORES GRAFICO
		//if(sTipoGraficoReporte.equals("BARRAS") || sTipoGraficoReporte.equals("BARRAS_3D") || sTipoGraficoReporte.equals("BARRAS_XY") ||
		//   sTipoGraficoReporte.equals("PASTEL") || sTipoGraficoReporte.equals("PASTEL_3D") || sTipoGraficoReporte.equals("APILADO")) {
			
			existe=true;
			strGrafico=FuncionesReporte.getStringGraficoReporte(sTipoGraficoReporte,sWidthGrafico,strCategorySeries);			
		//}
		
		if(existe) {
			sXmlStringFile=sXmlStringFile.replace("<!--GRAFICO-->", strGrafico);
		}												
		
		return sXmlStringFile;
	}
	
	
	//@SuppressWarnings("deprecation")
	
	public void jButtonGenerarExcelReporteDinamicoAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {		
		ArrayList<AsientoContableCajaChica> asientocontablecajachicasSeleccionados=new ArrayList<AsientoContableCajaChica>();		
		
		asientocontablecajachicasSeleccionados=this.getAsientoContableCajaChicasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"asientocontablecajachica";//.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		Boolean existeFilas=false;
		
		Workbook workbook = null;
		FileOutputStream fileOutputStream=null;
		Reporte reporte=new Reporte();
		
		try {
			
			if(sTipoArchivoReporte=="EXCEL2") {
				workbook = new HSSFWorkbook();
				sPath+=".xls";
			
			} else if(sTipoArchivoReporte=="EXCEL2_2") {
				workbook = new XSSFWorkbook();
				sPath+=".xlsx";			
			}
		
			Sheet sheet = workbook.createSheet("AsientoContableCajaChicas");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			Row row = sheet.createRow(iRow);
			Cell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");
			
			for(int index:this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjListColumnasSelectReporte().getSelectedIndices()) {
				reporte=(Reporte)this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjListColumnasSelectReporte().getModel().getElementAt(index);
				
				switch(reporte.getsCodigo()) {
					
				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.getempresa_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.getsucursal_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.getejercicio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.getperiodo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDUSUARIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDUSUARIO);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.getusuario_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.getanio_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDMES:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDMES);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.getmes_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_SECUENCIAL:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_SECUENCIAL);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.getsecuencial());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDMONEDA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDMONEDA);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.getmoneda_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_FECHA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_FECHA);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.getfecha());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPLEADO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPLEADO);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.getempleado_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDESTADOASIENTOCONTABLECAJACHICA:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDESTADOASIENTOCONTABLECAJACHICA);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.getestadoasientocontablecajachica_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.getes_proveedor());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDCLIENTE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDCLIENTE);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.getcliente_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.gettransaccion_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPODOCUMENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPODOCUMENTO);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.gettipodocumento_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDCUENTACONTABLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDCUENTACONTABLE);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.getcuentacontable_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.getdetalle());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.getmodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTO);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.gettipomovimiento_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.gettipotransaccionmodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;

				case AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO:
					iRow=0;

					if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

					cell = row.createCell(iCell);
					cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO);
					iRow++;

					for(AsientoContableCajaChica asientocontablecajachica:asientocontablecajachicasSeleccionados) {
						if(!existeFilas) {row = sheet.createRow(iRow);} else {row=sheet.getRow(iRow);}

						cell = row.createCell(iCell);
						cell.setCellValue(asientocontablecajachica.gettipomovimientomodulo_descripcion());
						iRow++;
					}

					existeFilas=true;
					iCell++;
					break;
					
					default :
						break;
				}
			}
			
			
			//if(conCabecera) {
			//	this.getFilaCabeceraExportarExcelAsientoContableCajaChica(row);				
			//	iRow++;
			//}				
			
			//for(AsientoContableCajaChica asientocontablecajachicaAux:asientocontablecajachicasSeleccionados) {
			//	row = sheet.createRow(iRow);
				
			//	this.getFilaDatosExportarExcelAsientoContableCajaChica(asientocontablecajachicaAux,row);
				
			//	iRow++;
			//}
			
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Asiento Contable Caja Chica",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}				
	}	
	
	
	
	
	public void buscarPorId(Long idActual) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}
			
			this.idActual=idActual;
			this.iNumeroPaginacionPagina=0;
			
			this.procesarBusqueda("PorId");
				    	
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingAsientoContableCajaChica(false);
			
			//SI ES MANUAL
			if(AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
				//this.inicializarActualizarBindingManualAsientoContableCajaChica();
			}	
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger);
			
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonAnterioresAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion-=this.iNumeroPaginacion;
			/*
			if(this.iNumeroPaginacion<0) {
				this.iNumeroPaginacion=0;
			}
			*/
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}
			
			this.anteriores();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingAsientoContableCajaChica(false);
			
			//SI ES MANUAL
			if(AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualAsientoContableCajaChica();
			}
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void jButtonSiguientesAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {    		
		try	{
			//this.iNumeroPaginacion+=this.iNumeroPaginacion;
			//this.iNumeroPaginacionPagina=10;			
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}
			
			this.siguientes();
			
			//NO FUNCIONA BINDINGS
			this.inicializarActualizarBindingAsientoContableCajaChica(false);
			
			//SI ES MANUAL
			if(AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
	    		//this.inicializarActualizarBindingManualAsientoContableCajaChica();
			}		
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
			
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}
			
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}
	
	public void aumentarTamanioFilaNuevaTablaAsientoContableCajaChica() throws Exception {		
		Dimension dimensionMinimum=this.jTableDatosAsientoContableCajaChica.getMinimumSize();
		Dimension dimensionMaximum=this.jTableDatosAsientoContableCajaChica.getMaximumSize();
		Dimension dimensionPreferred=this.jTableDatosAsientoContableCajaChica.getPreferredSize();
	
		double iHeightConFilaNueva=dimensionPreferred.getHeight();
		
		iHeightConFilaNueva+=this.jTableDatosAsientoContableCajaChica.getRowHeight();
		
		dimensionMinimum.setSize(dimensionMinimum.getWidth(),iHeightConFilaNueva);
		dimensionMaximum.setSize(dimensionMaximum.getWidth(),iHeightConFilaNueva);
		dimensionPreferred.setSize(dimensionPreferred.getWidth(),iHeightConFilaNueva);
		
		this.jTableDatosAsientoContableCajaChica.setMinimumSize(dimensionMinimum);
		this.jTableDatosAsientoContableCajaChica.setMaximumSize(dimensionMaximum);
		this.jTableDatosAsientoContableCajaChica.setPreferredSize(dimensionPreferred);	
	}
	
	public void inicializarActualizarBindingAsientoContableCajaChica(Boolean esInicializar) throws Exception {
		this.inicializarActualizarBindingAsientoContableCajaChica(esInicializar,true);
	}
	
	public void inicializarActualizarBindingAsientoContableCajaChica(Boolean esInicializar,Boolean conTabla) throws Exception {		
		if(conTabla) {
			this.inicializarActualizarBindingTablaAsientoContableCajaChica(esInicializar);
		}
		
		this.inicializarActualizarBindingBotonesAsientoContableCajaChica(esInicializar);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
			try{this.inicializarActualizarBindingBusquedasAsientoContableCajaChica(esInicializar);}catch(Exception e){e.printStackTrace();}
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesAsientoContableCajaChica(esInicializar) ;
			
			this.inicializarActualizarBindingParametrosReportesAsientoContableCajaChica(esInicializar) ;
		}
		
		if(esInicializar) {
			if( !AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA ||
			   	!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
			   	
			}
		}
	}
	
	public void inicializarActualizarBindingManualAsientoContableCajaChica() throws Exception {		
		//NO SE NECESITA HACER BINDING OTRA VEZ
		//this.inicializarActualizarBindingTablaAsientoContableCajaChica();
		
		this.inicializarActualizarBindingBotonesManualAsientoContableCajaChica(true);
		
		//FUNCIONALIDAD_RELACIONADO
		if(!this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
			
			this.inicializarActualizarBindingBusquedasManualAsientoContableCajaChica();			
			
			
			//this.inicializarActualizarBindingtiposArchivosReportesAccionesAsientoContableCajaChica() ;
			
			this.inicializarActualizarBindingParametrosReportesPostAccionesManualAsientoContableCajaChica(false) ;			
			
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesPostAccionesManualAsientoContableCajaChica(Boolean esSetControles) throws Exception {
		try	{					
			if(!esSetControles) {
				this.isSeleccionarTodos=this.jCheckBoxSeleccionarTodosAsientoContableCajaChica.isSelected();
				this.isSeleccionados=this.jCheckBoxSeleccionadosAsientoContableCajaChica.isSelected();
				
				
				this.conGraficoReporte=this.jCheckBoxConGraficoReporteAsientoContableCajaChica.isSelected();															
				
				
				if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
				this.isPostAccionNuevo=this.jInternalFrameDetalleFormAsientoContableCajaChica.jCheckBoxPostAccionNuevoAsientoContableCajaChica.isSelected();
				this.isPostAccionSinCerrar=this.jInternalFrameDetalleFormAsientoContableCajaChica.jCheckBoxPostAccionSinCerrarAsientoContableCajaChica.isSelected();
				this.isPostAccionSinMensaje=this.jInternalFrameDetalleFormAsientoContableCajaChica.jCheckBoxPostAccionSinMensajeAsientoContableCajaChica.isSelected();
				}
			
			} else {
				this.jCheckBoxSeleccionarTodosAsientoContableCajaChica.setSelected(this.isSeleccionarTodos);
				this.jCheckBoxSeleccionadosAsientoContableCajaChica.setSelected(this.isSeleccionados);
				
				
				this.jCheckBoxConGraficoReporteAsientoContableCajaChica.setSelected(this.conGraficoReporte);				
				
				
				if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jCheckBoxPostAccionNuevoAsientoContableCajaChica.setSelected(this.isPostAccionNuevo);
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jCheckBoxPostAccionSinCerrarAsientoContableCajaChica.setSelected(this.isPostAccionSinCerrar);
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jCheckBoxPostAccionSinMensajeAsientoContableCajaChica.setSelected(this.isPostAccionSinMensaje);
				}
			}
			
			
			if(this.jComboBoxTiposPaginacionAsientoContableCajaChica.getSelectedItem()!=null) {
				this.sTipoPaginacion=((Reporte)this.jComboBoxTiposPaginacionAsientoContableCajaChica.getSelectedItem()).getsCodigo();			
			}
			
			
			
			if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
			this.sTipoAccionFormulario=((Reporte)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxTiposAccionesFormularioAsientoContableCajaChica.getSelectedItem()).getsCodigo();
			}
			
			
			
			if(!this.conCargarMinimo) {
				this.sTipoArchivoReporte=((Reporte)this.jComboBoxTiposArchivosReportesAsientoContableCajaChica.getSelectedItem()).getsCodigo();			
				
				if(this.jInternalFrameReporteDinamicoAsientoContableCajaChica!=null) {
					this.sTipoArchivoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjComboBoxTiposArchivosReportesDinamico().getSelectedItem()).getsCodigo();			
				}
				
				this.sTipoRelacion=((Reporte)this.jComboBoxTiposRelacionesAsientoContableCajaChica.getSelectedItem()).getsCodigo();
									
				this.sTipoAccion=((Reporte)this.jComboBoxTiposAccionesAsientoContableCajaChica.getSelectedItem()).getsCodigo();
													
				this.sTipoSeleccionar=((Reporte)this.jComboBoxTiposSeleccionarAsientoContableCajaChica.getSelectedItem()).getsCodigo();
									
				this.sTipoReporte=((Reporte)this.jComboBoxTiposReportesAsientoContableCajaChica.getSelectedItem()).getsCodigo();							
					
				if(this.jInternalFrameReporteDinamicoAsientoContableCajaChica!=null) {
					this.sTipoReporteDinamico=((Reporte)this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjComboBoxTiposReportesDinamico().getSelectedItem()).getsCodigo();							
				}
				
				this.sTipoGraficoReporte=((Reporte)this.jComboBoxTiposGraficosReportesAsientoContableCajaChica.getSelectedItem()).getsCodigo();											
			}			
			
			this.sValorCampoGeneral=this.jTextFieldValorCampoGeneralAsientoContableCajaChica.getText();						
			
			
			
		} catch(Exception e) {
			throw e;
		}
	}
	
	public void inicializarActualizarBindingParametrosReportesAsientoContableCajaChica(Boolean esInicializar) throws Exception {
		try	{	
			if(AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
				this. inicializarActualizarBindingParametrosReportesPostAccionesManualAsientoContableCajaChica(false);
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	public void inicializarActualizarBindingtiposArchivosReportesAccionesAsientoContableCajaChica() throws Exception {
		try	{
			if(AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
				this.inicializarActualizarBindingtiposArchivosReportesAccionesManualAsientoContableCajaChica();
			} else {
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleAsientoContableCajaChica() throws Exception {
		//TIPOS ACCIONES FORMULARIO	
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxTiposAccionesFormularioAsientoContableCajaChica.removeAllItems();
				
		for(Reporte reporte:this.tiposAccionesFormulario) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxTiposAccionesFormularioAsientoContableCajaChica.addItem(reporte);
		}
		
		//TIPOS ACCIONES FORMULARIO
	}
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesAccionesManualAsientoContableCajaChica() throws Exception {
		try	{
			
			//TIPOS ARCHIVOS REPORTES
			this.jComboBoxTiposArchivosReportesAsientoContableCajaChica.removeAllItems();
				
			for(Reporte reporte:this.tiposArchivosReportes) {
				this.jComboBoxTiposArchivosReportesAsientoContableCajaChica.addItem(reporte);
			}
			
			
				
			//TIPOS REPORTES
			this.jComboBoxTiposReportesAsientoContableCajaChica.removeAllItems();
				
			for(Reporte reporte:this.tiposReportes) {
				this.jComboBoxTiposReportesAsientoContableCajaChica.addItem(reporte);
			}
			
			
			//TIPOS GRAFICOS REPORTES
			this.jComboBoxTiposGraficosReportesAsientoContableCajaChica.removeAllItems();
				
			for(Reporte reporte:this.tiposGraficosReportes) {
				this.jComboBoxTiposGraficosReportesAsientoContableCajaChica.addItem(reporte);
			}
			
			
			//TIPOS PAGINACION
			this.jComboBoxTiposPaginacionAsientoContableCajaChica.removeAllItems();
				
			for(Reporte reporte:this.tiposPaginacion) {
				this.jComboBoxTiposPaginacionAsientoContableCajaChica.addItem(reporte);
			}
			
			
			if(!this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
				this.jComboBoxTiposPaginacionAsientoContableCajaChica.setSelectedItem(Funciones2.getTipoPaginacionDefecto("NORMAL",this.tiposPaginacion));
			} else {
				this.jComboBoxTiposPaginacionAsientoContableCajaChica.setSelectedItem(Funciones2.getTipoPaginacionDefecto("RELACIONADO",this.tiposPaginacion));
			}
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposRelacionesAsientoContableCajaChica.removeAllItems();
				
			for(Reporte reporte:this.tiposRelaciones) {
				this.jComboBoxTiposRelacionesAsientoContableCajaChica.addItem(reporte);
			}
			
			//TIPOS ACCIONES
				
				
			//TIPOS ACCIONES	
			this.jComboBoxTiposAccionesAsientoContableCajaChica.removeAllItems();
				
			for(Reporte reporte:this.tiposAcciones) {
				this.jComboBoxTiposAccionesAsientoContableCajaChica.addItem(reporte);
			}
			
			//TIPOS ACCIONES			
			
			
			
			//TIPOS ACCIONES FORMULARIO	
			if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxTiposAccionesFormularioAsientoContableCajaChica.removeAllItems();
				
				for(Reporte reporte:this.tiposAccionesFormulario) {
					this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxTiposAccionesFormularioAsientoContableCajaChica.addItem(reporte);
				}
				
			}
			//TIPOS ACCIONES FORMULARIO
			
			
			
			//TIPOS SELECCIONAR
			this.jComboBoxTiposSeleccionarAsientoContableCajaChica.removeAllItems();
				
			for(Reporte reporte:this.tiposSeleccionar) {
				this.jComboBoxTiposSeleccionarAsientoContableCajaChica.addItem(reporte);
			}
			
			
			if(this.tiposSeleccionar!=null && this.tiposSeleccionar.size()>1) {
				this.jComboBoxTiposSeleccionarAsientoContableCajaChica.setSelectedIndex(1);
			}
				
			//REPORTE DINAMICO
			this.inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualAsientoContableCajaChica();
							
			//TIPOS COLUMNAS SELECT
			//TIPOS SELECCIONAR
			
			
		} catch(Exception e) {
			throw e;
		}
	}		
	
	
	@SuppressWarnings("unchecked")
	public void inicializarActualizarBindingtiposArchivosReportesDinamicoAccionesManualAsientoContableCajaChica() throws Exception {
		try	{
			DefaultListModel<Reporte> defaultListModel=new DefaultListModel<Reporte>();
			
			
			//TIPOS ARCHIVOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoAsientoContableCajaChica!=null) {
				this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjComboBoxTiposArchivosReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposArchivosReportesDinamico) {
					this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjComboBoxTiposArchivosReportesDinamico().addItem(reporte);
				}
				
			}
			
			//TIPOS REPORTES DINAMICO
			if(this.jInternalFrameReporteDinamicoAsientoContableCajaChica!=null) {
				this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjComboBoxTiposReportesDinamico().removeAllItems();
					
				for(Reporte reporte:this.tiposReportesDinamico) {
					this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjComboBoxTiposReportesDinamico().addItem(reporte);
				}
				
			}
			
			defaultListModel=new DefaultListModel<Reporte>();
			
			if(this.jInternalFrameReporteDinamicoAsientoContableCajaChica!=null) {
				
				if(this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjListColumnasSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjListColumnasSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposColumnasSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjListColumnasSelectReporte().setModel(defaultListModel);									
						
				}	
					
				//TIPOS RELACIONES SELECT
				//TIPOS SELECCIONAR
				defaultListModel=new DefaultListModel<Reporte>();
				if(this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjListRelacionesSelectReporte()!=null) {
					this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjListRelacionesSelectReporte().removeAll();
						
					for(Reporte reporte:this.tiposRelacionesSelect) {
						defaultListModel.addElement(reporte);
					}						
						
					this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjListRelacionesSelectReporte().setModel(defaultListModel);									
						
				}	
				
			}
		} catch(Exception e) {
			throw e;
		}
	}	
	
	
	
	public void inicializarActualizarBindingBusquedasManualAsientoContableCajaChica()  throws Exception {				
		//BYDAN_BUSQUEDAS		
		
		if(this.jComboBoxid_clienteFK_IdClienteAsientoContableCajaChica.getSelectedItem()!=null){this.id_clienteFK_IdCliente=((Cliente)this.jComboBoxid_clienteFK_IdClienteAsientoContableCajaChica.getSelectedItem()).getId();}
		if(this.jComboBoxid_empleadoFK_IdEmpleadoAsientoContableCajaChica.getSelectedItem()!=null){this.id_empleadoFK_IdEmpleado=((Empleado)this.jComboBoxid_empleadoFK_IdEmpleadoAsientoContableCajaChica.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_documentoFK_IdTipoDocumentoAsientoContableCajaChica.getSelectedItem()!=null){this.id_tipo_documentoFK_IdTipoDocumento=((TipoDocumento)this.jComboBoxid_tipo_documentoFK_IdTipoDocumentoAsientoContableCajaChica.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloAsientoContableCajaChica.getSelectedItem()!=null){this.id_tipo_movimiento_moduloFK_IdTipoMovimientoModulo=((TipoMovimientoModulo)this.jComboBoxid_tipo_movimiento_moduloFK_IdTipoMovimientoModuloAsientoContableCajaChica.getSelectedItem()).getId();}
		if(this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloAsientoContableCajaChica.getSelectedItem()!=null){this.id_tipo_transaccion_moduloFK_IdTipoTransaccionModulo=((TipoTransaccionModulo)this.jComboBoxid_tipo_transaccion_moduloFK_IdTipoTransaccionModuloAsientoContableCajaChica.getSelectedItem()).getId();}
		if(this.jComboBoxid_transaccionFK_IdTransaccionAsientoContableCajaChica.getSelectedItem()!=null){this.id_transaccionFK_IdTransaccion=((Transaccion)this.jComboBoxid_transaccionFK_IdTransaccionAsientoContableCajaChica.getSelectedItem()).getId();}
		
	}
	
	
	
	
	public void inicializarActualizarBindingBusquedasAsientoContableCajaChica(Boolean esInicializar) throws Exception {				
		if(AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
			
			this.inicializarActualizarBindingBusquedasManualAsientoContableCajaChica();			
			
		} else {
		}
	}		
		
	public void inicializarActualizarBindingTablaAsientoContableCajaChica() throws Exception {
		this.inicializarActualizarBindingTablaAsientoContableCajaChica(false);
	}
	
	
	public void inicializarActualizarBindingTablaOrderByAsientoContableCajaChica() {
		//TABLA OrderBy	
		TableColumn tableColumn=new TableColumn();
		Integer iWidthTableDefinicionOrderBy=0;			
			
		this.jInternalFrameOrderByAsientoContableCajaChica.getjTableDatosOrderBy().setModel(new TablaGeneralOrderByModel(this.arrOrderBy));
					
		//DEFINIR RENDERERS OrderBy
		tableColumn=this.jInternalFrameOrderByAsientoContableCajaChica.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByAsientoContableCajaChica.getjTableDatosOrderBy(),OrderBy.ISSELECTED));			
		//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
					
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		iWidthTableDefinicionOrderBy+=50;
					
		tableColumn=this.jInternalFrameOrderByAsientoContableCajaChica.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByAsientoContableCajaChica.getjTableDatosOrderBy(),OrderBy.NOMBRE));
		//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
					
		tableColumn.setPreferredWidth(150); 	 
		tableColumn.setWidth(150); 	 
		tableColumn.setMinWidth(150);
		tableColumn.setMaxWidth(150);
				
		iWidthTableDefinicionOrderBy+=150;
					
		//tableColumn=this.jTableDatosAsientoContableCajaChicaOrderBy.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChicaOrderBy,OrderBy.NOMBREDB));			
		////tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
								
		tableColumn=this.jInternalFrameOrderByAsientoContableCajaChica.getjTableDatosOrderBy().getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jInternalFrameOrderByAsientoContableCajaChica.getjTableDatosOrderBy(),OrderBy.ESDESC));
		//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
												
		tableColumn.setPreferredWidth(50); 	 
		tableColumn.setWidth(50); 	 
		tableColumn.setMinWidth(50);
		tableColumn.setMaxWidth(50);
				
		((AbstractTableModel) this.jInternalFrameOrderByAsientoContableCajaChica.getjTableDatosOrderBy().getModel()).fireTableDataChanged();
				
		iWidthTableDefinicionOrderBy+=50;
	}
	
	
	
	public void inicializarActualizarBindingTablaAsientoContableCajaChica(Boolean esInicializar) throws Exception {
		Boolean isNoExiste=false;
		Integer iCountNumeroColumnasNormal=0;
		Integer iCountNumeroColumnasFk=0;
		
		this.iWidthTableDefinicion=0;
		
		int iSizeTabla=0;
		
		iSizeTabla=this.getSizeTablaDatos();
		
	if(esInicializar || ConstantesSwing.FORZAR_INICIALIZAR_TABLA) {//esInicializar
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			isNoExiste=asientocontablecajachicaLogic.getAsientoContableCajaChicas().size()==0;
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
			isNoExiste=asientocontablecajachicas.size()==0;
		}
		//ARCHITECTURE
			
		if(isNoExiste) {
			if(this.iNumeroPaginacion-this.iNumeroPaginacion>0) {
				this.iNumeroPaginacion-=this.iNumeroPaginacion;
			}
		}
		
		TableColumn tableColumn=new TableColumn();
		
		if(AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			
			//ARCHITECTURE
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.jTableDatosAsientoContableCajaChica.setModel(new AsientoContableCajaChicaModel(this.asientocontablecajachicaLogic.getAsientoContableCajaChicas(),this));
			} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
				this.jTableDatosAsientoContableCajaChica.setModel(new AsientoContableCajaChicaModel(this.asientocontablecajachicas,this));
			}
			//ARCHITECTURE
			
							
			
			
			if(this.jInternalFrameOrderByAsientoContableCajaChica!=null && this.jInternalFrameOrderByAsientoContableCajaChica.getjTableDatosOrderBy()!=null) {
				this.inicializarActualizarBindingTablaOrderByAsientoContableCajaChica();
			}
			
								
			//DEFINIR RENDERERS
			tableColumn=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,Constantes2.S_SELECCIONAR));
			//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
			tableColumn.setCellRenderer(new BooleanRenderer(true,"Seleccionar "+AsientoContableCajaChicaConstantesFunciones.SCLASSWEBTITULO,asientocontablecajachicaConstantesFunciones.resaltarSeleccionarAsientoContableCajaChica,true,false,"","",this));
			tableColumn.setCellEditor(new BooleanEditorRenderer(true,"Seleccionar "+AsientoContableCajaChicaConstantesFunciones.SCLASSWEBTITULO,asientocontablecajachicaConstantesFunciones.resaltarSeleccionarAsientoContableCajaChica,false,"","",this));			
			
			tableColumn.setPreferredWidth(50); 	 
			tableColumn.setWidth(50); 	 
			tableColumn.setMinWidth(50); 
			tableColumn.setMaxWidth(50); 
			
			this.iWidthTableDefinicion+=50;
			
			


			tableColumn=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_ID));

		if(this.asientocontablecajachicaConstantesFunciones.mostraridAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AsientoContableCajaChicaConstantesFunciones.LABEL_ID,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.asientocontablecajachicaConstantesFunciones.resaltaridAsientoContableCajaChica,this.asientocontablecajachicaConstantesFunciones.activaridAsientoContableCajaChica,this,true,"idAsientoContableCajaChica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.asientocontablecajachicaConstantesFunciones.resaltaridAsientoContableCajaChica,this.asientocontablecajachicaConstantesFunciones.activaridAsientoContableCajaChica,this,true,"idAsientoContableCajaChica","BASICO",false));

			tableColumn.setPreferredWidth(50);
			tableColumn.setWidth(50);
			tableColumn.setMinWidth(50);
			tableColumn.setMaxWidth(50);

			this.iWidthTableDefinicion+=50;
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA));

		if(this.asientocontablecajachicaConstantesFunciones.mostrarid_empresaAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EmpresaTableCell(this.empresasForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_empresaAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_empresaAsientoContableCajaChica));
			tableColumn.setCellEditor(new EmpresaTableCell(this.empresasForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_empresaAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_empresaAsientoContableCajaChica,false,"id_empresaAsientoContableCajaChica","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL));

		if(this.asientocontablecajachicaConstantesFunciones.mostrarid_sucursalAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new SucursalTableCell(this.sucursalsForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_sucursalAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_sucursalAsientoContableCajaChica));
			tableColumn.setCellEditor(new SucursalTableCell(this.sucursalsForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_sucursalAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_sucursalAsientoContableCajaChica,false,"id_sucursalAsientoContableCajaChica","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO));

		if(this.asientocontablecajachicaConstantesFunciones.mostrarid_ejercicioAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new EjercicioTableCell(this.ejerciciosForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_ejercicioAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_ejercicioAsientoContableCajaChica));
			tableColumn.setCellEditor(new EjercicioTableCell(this.ejerciciosForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_ejercicioAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_ejercicioAsientoContableCajaChica,false,"id_ejercicioAsientoContableCajaChica","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO));

		if(this.asientocontablecajachicaConstantesFunciones.mostrarid_periodoAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new PeriodoTableCell(this.periodosForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_periodoAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_periodoAsientoContableCajaChica));
			tableColumn.setCellEditor(new PeriodoTableCell(this.periodosForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_periodoAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_periodoAsientoContableCajaChica,false,"id_periodoAsientoContableCajaChica","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDUSUARIO));

		if(this.asientocontablecajachicaConstantesFunciones.mostrarid_usuarioAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AsientoContableCajaChicaConstantesFunciones.LABEL_IDUSUARIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++) && Constantes.ISDEVELOPING) {
			tableColumn.setCellRenderer(new UsuarioTableCell(this.usuariosForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_usuarioAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_usuarioAsientoContableCajaChica));
			tableColumn.setCellEditor(new UsuarioTableCell(this.usuariosForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_usuarioAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_usuarioAsientoContableCajaChica,false,"id_usuarioAsientoContableCajaChica","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO));

		if(this.asientocontablecajachicaConstantesFunciones.mostrarid_anioAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new AnioTableCell(this.aniosForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_anioAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_anioAsientoContableCajaChica));
			tableColumn.setCellEditor(new AnioTableCell(this.aniosForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_anioAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_anioAsientoContableCajaChica,true,"id_anioAsientoContableCajaChica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDMES));

		if(this.asientocontablecajachicaConstantesFunciones.mostrarid_mesAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AsientoContableCajaChicaConstantesFunciones.LABEL_IDMES,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MesTableCell(this.messForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_mesAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_mesAsientoContableCajaChica));
			tableColumn.setCellEditor(new MesTableCell(this.messForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_mesAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_mesAsientoContableCajaChica,true,"id_mesAsientoContableCajaChica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_SECUENCIAL));

		if(this.asientocontablecajachicaConstantesFunciones.mostrarsecuencialAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AsientoContableCajaChicaConstantesFunciones.LABEL_SECUENCIAL,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new TextFieldRenderer(this.asientocontablecajachicaConstantesFunciones.resaltarsecuencialAsientoContableCajaChica,this.asientocontablecajachicaConstantesFunciones.activarsecuencialAsientoContableCajaChica,this,true,"secuencialAsientoContableCajaChica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.asientocontablecajachicaConstantesFunciones.resaltarsecuencialAsientoContableCajaChica,this.asientocontablecajachicaConstantesFunciones.activarsecuencialAsientoContableCajaChica,this,true,"secuencialAsientoContableCajaChica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDMONEDA));

		if(this.asientocontablecajachicaConstantesFunciones.mostrarid_monedaAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AsientoContableCajaChicaConstantesFunciones.LABEL_IDMONEDA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new MonedaTableCell(this.monedasForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_monedaAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_monedaAsientoContableCajaChica));
			tableColumn.setCellEditor(new MonedaTableCell(this.monedasForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_monedaAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_monedaAsientoContableCajaChica,false,"id_monedaAsientoContableCajaChica","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_FECHA));

		if(this.asientocontablecajachicaConstantesFunciones.mostrarfechaAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AsientoContableCajaChicaConstantesFunciones.LABEL_FECHA,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new DateRenderer(this.asientocontablecajachicaConstantesFunciones.resaltarfechaAsientoContableCajaChica,this.asientocontablecajachicaConstantesFunciones.activarfechaAsientoContableCajaChica,this,true,"fechaAsientoContableCajaChica","BASICO"));
			tableColumn.setCellEditor(new DateEditorRenderer(this.asientocontablecajachicaConstantesFunciones.resaltarfechaAsientoContableCajaChica,this.asientocontablecajachicaConstantesFunciones.activarfechaAsientoContableCajaChica,this,true,"fechaAsientoContableCajaChica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,30);
			//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPLEADO));

		if(this.asientocontablecajachicaConstantesFunciones.mostrarid_empleadoAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPLEADO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EmpleadoTableCell(this.empleadosForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_empleadoAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_empleadoAsientoContableCajaChica));
			tableColumn.setCellEditor(new EmpleadoTableCell(this.empleadosForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_empleadoAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_empleadoAsientoContableCajaChica,true,"id_empleadoAsientoContableCajaChica","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,100);
			//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDESTADOASIENTOCONTABLECAJACHICA));

		if(this.asientocontablecajachicaConstantesFunciones.mostrarid_estado_asiento_contableAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AsientoContableCajaChicaConstantesFunciones.LABEL_IDESTADOASIENTOCONTABLECAJACHICA,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new EstadoAsientoContableCajaChicaTableCell(this.estadoasientocontablecajachicasForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_estado_asiento_contableAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_estado_asiento_contableAsientoContableCajaChica));
			tableColumn.setCellEditor(new EstadoAsientoContableCajaChicaTableCell(this.estadoasientocontablecajachicasForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_estado_asiento_contableAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_estado_asiento_contableAsientoContableCajaChica,true,"id_estado_asiento_contableAsientoContableCajaChica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR));

		if(this.asientocontablecajachicaConstantesFunciones.mostrares_proveedorAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new BooleanRenderer(this.asientocontablecajachicaConstantesFunciones.resaltares_proveedorAsientoContableCajaChica,this.asientocontablecajachicaConstantesFunciones.activares_proveedorAsientoContableCajaChica));
			tableColumn.setCellEditor(new BooleanEditorRenderer(this.asientocontablecajachicaConstantesFunciones.resaltares_proveedorAsientoContableCajaChica,this.asientocontablecajachicaConstantesFunciones.activares_proveedorAsientoContableCajaChica,this,true,"es_proveedorAsientoContableCajaChica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA);
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA);

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
			//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDCLIENTE));

		if(this.asientocontablecajachicaConstantesFunciones.mostrarid_clienteAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AsientoContableCajaChicaConstantesFunciones.LABEL_IDCLIENTE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ClienteTableCell(this.clientesForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_clienteAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_clienteAsientoContableCajaChica));
			tableColumn.setCellEditor(new ClienteTableCell(this.clientesForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_clienteAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_clienteAsientoContableCajaChica,true,"id_clienteAsientoContableCajaChica","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,75);
			//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION));

		if(this.asientocontablecajachicaConstantesFunciones.mostrarid_transaccionAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TransaccionTableCell(this.transaccionsForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_transaccionAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_transaccionAsientoContableCajaChica));
			tableColumn.setCellEditor(new TransaccionTableCell(this.transaccionsForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_transaccionAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_transaccionAsientoContableCajaChica,true,"id_transaccionAsientoContableCajaChica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,50);
			//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPODOCUMENTO));

		if(this.asientocontablecajachicaConstantesFunciones.mostrarid_tipo_documentoAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPODOCUMENTO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new TipoDocumentoTableCell(this.tipodocumentosForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_tipo_documentoAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_tipo_documentoAsientoContableCajaChica));
			tableColumn.setCellEditor(new TipoDocumentoTableCell(this.tipodocumentosForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_tipo_documentoAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_tipo_documentoAsientoContableCajaChica,true,"id_tipo_documentoAsientoContableCajaChica","BASICO"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDCUENTACONTABLE));

		if(this.asientocontablecajachicaConstantesFunciones.mostrarid_cuenta_contableAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AsientoContableCajaChicaConstantesFunciones.LABEL_IDCUENTACONTABLE,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new CuentaContableTableCell(this.cuentacontablesForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_cuenta_contableAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_cuenta_contableAsientoContableCajaChica));
			tableColumn.setCellEditor(new CuentaContableTableCell(this.cuentacontablesForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_cuenta_contableAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_cuenta_contableAsientoContableCajaChica,true,"id_cuenta_contableAsientoContableCajaChica","CON_BUSQUEDA"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,70);
			//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE));

		if(this.asientocontablecajachicaConstantesFunciones.mostrardetalleAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE,false,iCountNumeroColumnasNormal++,iCountNumeroColumnasFk)) {
			tableColumn.setCellRenderer(new LabelRenderer(this.asientocontablecajachicaConstantesFunciones.resaltardetalleAsientoContableCajaChica,this.asientocontablecajachicaConstantesFunciones.activardetalleAsientoContableCajaChica,this,true,"detalleAsientoContableCajaChica","BASICO"));
			tableColumn.setCellEditor(new TextFieldEditorRenderer(this.asientocontablecajachicaConstantesFunciones.resaltardetalleAsientoContableCajaChica,this.asientocontablecajachicaConstantesFunciones.activardetalleAsientoContableCajaChica,this,true,"detalleAsientoContableCajaChica","BASICO",false));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,300));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,300));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,300));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,300));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,300);
			//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}


			tableColumn=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,AsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO));

		if(this.asientocontablecajachicaConstantesFunciones.mostrarid_moduloAsientoContableCajaChica && Funciones2.permiteMostarParaBusqueda(this.esParaBusquedaForeignKey,AsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO,true,iCountNumeroColumnasNormal,iCountNumeroColumnasFk++)) {
			tableColumn.setCellRenderer(new ModuloTableCell(this.modulosForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_moduloAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_moduloAsientoContableCajaChica));
			tableColumn.setCellEditor(new ModuloTableCell(this.modulosForeignKey,this.asientocontablecajachicaConstantesFunciones.resaltarid_moduloAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarid_moduloAsientoContableCajaChica,false,"id_moduloAsientoContableCajaChica","GLOBAL"));

			tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
			tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

			this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);
			//tableColumn.addPropertyChangeListener(new AsientoContableCajaChicaPropertyChangeListener());
		} else {
			Funciones2.setTableColumnOcultar(tableColumn);
		}
			
		} else {
		}			
					
		if(!this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()
			&& !this.esParaBusquedaForeignKey) {
			

			if(this.isTienePermisosDetalleAsientoContableCajaChica && this.asientocontablecajachicaConstantesFunciones.mostrarDetalleAsientoContableCajaChicaAsientoContableCajaChica && !AsientoContableCajaChicaConstantesFunciones.ISGUARDARREL) {
				tableColumn= new TableColumn();
				tableColumn.setIdentifier("Detalle Asiento Contable Caja Chicas");
				tableColumn.setHeaderValue("Detalle Asiento Contable Caja Chicas");
				tableColumn.setCellRenderer(new DetalleAsientoContableCajaChicaTableCell(asientocontablecajachicaConstantesFunciones.resaltarDetalleAsientoContableCajaChicaAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarDetalleAsientoContableCajaChicaAsientoContableCajaChica));
				tableColumn.setCellEditor(new DetalleAsientoContableCajaChicaTableCell(asientocontablecajachicaConstantesFunciones.resaltarDetalleAsientoContableCajaChicaAsientoContableCajaChica,this,this.asientocontablecajachicaConstantesFunciones.activarDetalleAsientoContableCajaChicaAsientoContableCajaChica));

				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0));

				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_CONTROL + FuncionesSwing.getValorProporcion(Constantes.ISWING_ANCHO_CONTROL,0);

				this.jTableDatosAsientoContableCajaChica.addColumn(tableColumn);
			}
		}
		
		if(true) {
			String sLabelColumnAccion="Editar";
			String sLabelColumnAccionEli="Eli";
			
			if(this.esParaBusquedaForeignKey)  {
				sLabelColumnAccion="Seleccionar";
				
				//LO MISMO QUE ELSE
				tableColumn= new TableColumn();
				tableColumn.setIdentifier(sLabelColumnAccion);
				tableColumn.setHeaderValue(sLabelColumnAccion);
				tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()));
				tableColumn.setCellEditor(new IdTableCell(this,false,false,this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()));
	
				tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				this.jTableDatosAsientoContableCajaChica.addColumn(tableColumn);
			
			} else {				
				
				//LO MISMO QUE IF
				
				//tableColumn= new TableColumn();
				//tableColumn.setIdentifier(sLabelColumnAccion);
				//tableColumn.setHeaderValue(sLabelColumnAccion);
				//tableColumn.setCellRenderer(new IdTableCell(this,false,false,this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()));
				//tableColumn.setCellEditor(new IdTableCell(this,false,false,this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()));
		
				//tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
				//tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				//tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
				
				//this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
				//this.jTableDatosAsientoContableCajaChica.addColumn(tableColumn);				
					
				//ELIMINAR
				if(this.isPermisoEliminarAsientoContableCajaChica && this.isPermisoGuardarCambiosAsientoContableCajaChica) {
					//tableColumn= new TableColumn();
					//tableColumn.setIdentifier(Constantes2.S_ELI);
					//tableColumn.setHeaderValue(sLabelColumnAccionEli);
					//tableColumn.setCellRenderer(new IdTableCell(this,false,true,this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()));
					//tableColumn.setCellEditor(new IdTableCell(this,false,true,this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()));
			
					//tableColumn.setPreferredWidth(65); 	 
					//tableColumn.setWidth(65); 	 
					//tableColumn.setMinWidth(65); 
					//tableColumn.setMaxWidth(65);
					
					//this.iWidthTableDefinicion+=65;
						
					//this.jTableDatosAsientoContableCajaChica.addColumn(tableColumn);
				}
			}			
						
			if(this.conMaximoRelaciones && this.asientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
				if(this.conFuncionalidadRelaciones) {
					tableColumn= new TableColumn();
					tableColumn.setIdentifier("Editar Rel");
					tableColumn.setHeaderValue("Editar Rel");
					tableColumn.setCellRenderer(new IdTableCell(this,true,false));
					tableColumn.setCellEditor(new IdTableCell(this,true,false));
		
					tableColumn.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
					tableColumn.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					tableColumn.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 
					
					this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
				
					this.jTableDatosAsientoContableCajaChica.addColumn(tableColumn);
				}
			}
			
			/*
			tableColumn= new TableColumn();
			tableColumn.setIdentifier(Constantes2.S_SELECCIONAR);
			tableColumn.setHeaderValue(Constantes2.S_SELECCIONAR);
			tableColumn.setCellRenderer(new IdSeleccionarTableCell(this));
			tableColumn.setCellEditor(new IdSeleccionarTableCell(this));
			
			tableColumn.setPreferredWidth(30); 	 
			tableColumn.setWidth(30); 	 
			tableColumn.setMinWidth(30); 
			
			this.iWidthTableDefinicion+=30;
			
			this.jTableDatosAsientoContableCajaChica.addColumn(tableColumn);
			*/
		}
		
		Integer iUltimaColumna=0;//1
		Integer iNuevaPosicionColumna=0;
		
		
		//PERMITE ELIMINAR SIMPLE
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarAsientoContableCajaChica && this.isPermisoGuardarCambiosAsientoContableCajaChica) {
				//iUltimaColumna++;
			}	
		}
		
		//PERMITE EDITAR SIMPLE
		//iUltimaColumna++;	
		
				
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.asientocontablecajachicaSessionBean.getConGuardarRelaciones()) {			
				//PERMITE EDITAR RELACIONES
				iUltimaColumna++;//2
			}
		}
		
		//MOVIA SELECCIONAR
		//iUltimaColumna++;
		
		if(!this.esParaBusquedaForeignKey)  {
			if(this.isPermisoEliminarAsientoContableCajaChica && this.isPermisoGuardarCambiosAsientoContableCajaChica) {
				////REUBICA ELIMINAR SIMPLE
				//jTableDatosAsientoContableCajaChica.moveColumn(this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3
					
				//iUltimaColumna--;
			}
		}
		//REUBICA EDITAR SIMPLE
		//jTableDatosAsientoContableCajaChica.moveColumn(this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1,-2 o -3				
		
		
		if(this.conFuncionalidadRelaciones) {
			if(this.conMaximoRelaciones && this.asientocontablecajachicaSessionBean.getConGuardarRelaciones()) {	
				if(iUltimaColumna>1) {
					iUltimaColumna--;
				}
				
				//iNuevaPosicionColumna++;
				
				//REUBICA EDITAR RELACIONES
				jTableDatosAsientoContableCajaChica.moveColumn(this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1
			}
		}
		
		
		//REUBICABA SELECCIONAR
		/*
		if(iUltimaColumna>1) {
			iUltimaColumna--;
		}
		
		//iNuevaPosicionColumna++;
			
		//REUBICA SELECCIONAR FILA CHECK
		jTableDatosAsientoContableCajaChica.moveColumn(this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumnCount()-iUltimaColumna, iNuevaPosicionColumna++);//-1		
		*/
		
		//DEFINEN HEADERS
		final TableCellRenderer tableHeaderDefaultCellRenderer = this.jTableDatosAsientoContableCajaChica.getTableHeader().getDefaultRenderer();
		
		this.jTableDatosAsientoContableCajaChica.getTableHeader().setDefaultRenderer(new TableCellRendererHeader(this.jTableDatosAsientoContableCajaChica,tableHeaderDefaultCellRenderer));
	    
		TableColumn column=null;
		
		if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA) {
			for(int i = 0; i < this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumnCount(); i++) { 
				column = this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(i); 
				
				if(column.getIdentifier()!=null) {
					//SI SE UTILIZA UN HEADER ES GENERICO
					//column.setHeaderRenderer(new HeaderRenderer(column.getIdentifier().toString()));
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_ELI)) {
					continue;
				}
				
				if(column.getIdentifier()!=null && column.getIdentifier().equals(Constantes2.S_SELECCIONAR)) {
					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(50); 	 
						column.setWidth(50); 	 
						column.setMinWidth(50); 	
						column.setMaxWidth(50); 
						
						this.iWidthTableDefinicion+=50;
					}
					
				} else {
					if(!AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA) {
						column.setPreferredWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setWidth(Constantes.ISWING_ANCHO_COLUMNA); 	 
						column.setMinWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						column.setMaxWidth(Constantes.ISWING_ANCHO_COLUMNA); 	
						
						this.iWidthTableDefinicion+=Constantes.ISWING_ANCHO_COLUMNA;
					}
				}
			}
		}
		
		this.jTableDatosAsientoContableCajaChica.setSelectionBackground(FuncionesSwing.getColorSelectedBackground());
		this.jTableDatosAsientoContableCajaChica.setSelectionForeground(FuncionesSwing.getColorSelectedForeground());
		
		/*
		this.jTableDatosAsientoContableCajaChica.setDefaultRenderer(Object.class, new DefaultTableCellRenderer() {
			private static final long serialVersionUID = 1L;
			
		    @Override
		    public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
		        final Component component= super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
		        //POR DEFECTO ES MEJOR, SE PIERDE DATOS AL SELECCIONAR BLANCO LETRAS BLANCAS
				component.setBackground(row % 2 == 0 ? FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR) : Funciones2.getColorFilaTabla2()); //FuncionesSwing.getColorTextFields(Constantes2.S_FONDOCONTROL_COLOR)
				component.setForeground(Funciones2.getColorTextoFilaTabla1());
				
				try {
		        	int iSize=-999;
		        	
		        	if(conTotales) {
						//FILA TOTALES OTRO COLOR, SI TABLA NO ES UNO A UNO
			        	if(Constantes.ISUSAEJBLOGICLAYER) {
							iSize=asientocontablecajachicaLogic.getAsientoContableCajaChicas().size()-1;
								
						} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
							iSize=asientocontablecajachicas.size()-1;
						}
						
						if(iSize==row) {
							component.setBackground(Funciones2.getColorFilaTablaTotales());
						}
		        	}
					
					//POR EFICIENCIA NO UTILIZAR					
					//if (component instanceof JComponent) {
		            //    JComponent jcomponent = (JComponent) component;		                 		                
		        	//}				
					
				} catch (Exception e) {
					e.printStackTrace();
				}
				
		        return component;
		    }
		});
		*/
		
		//ESTA EN LA DEFINICION DE LA TABLA
		//this.jTableDatosAsientoContableCajaChica.setRowHeight(Constantes.ISWING_ALTO_FILA_TABLA);
		
		/*
		column=this.jTableDatosAsientoContableCajaChica.getColumnModel().getColumn(Funciones2.getColumnIndexByName(this.jTableDatosSistema,Constantes2.S_SELECCIONAR));
		
		if(column!=null) {
			column.setPreferredWidth(25); 	 
			column.setWidth(25); 	 
			column.setMinWidth(25); 	
		}
		*/
			
			//CopyTableToTableTotal();
		} else {
			
			this.actualizarVisualTableDatosAsientoContableCajaChica();
			
		}
	}
	
	/*
	//COPY_TABLES
	/* FALTARIA RESOLVER:
	   1 SOLO SCROLL PARA 2 TABLAS
	   COPIA EXACTA DE COLUMNAS DE UNA TABLA A OTRA, SI SE MODIFICA TAMANIO TAMBIEN LA OTRA
	*/
	
	public void jButtonIdActionPerformed(ActionEvent evt,int rowIndex,Boolean esRelaciones,Boolean esEliminar) { 
		try {
			if(!esEliminar) {
				this.estaModoSeleccionar=true;
				
				//this.isEsNuevoAsientoContableCajaChica=false;
					
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
			
				if(this.asientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
					this.dStart=(double)System.currentTimeMillis();
				}
				
				if(this.jInternalFrameDetalleFormAsientoContableCajaChica==null) {
					this.inicializarFormDetalle();
				}
				
				this.inicializarInvalidValues();
				
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosAsientoContableCajaChica.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosAsientoContableCajaChica.getSelectedRow();	       
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//PUEDE SER PARA DUPLICADO O NUEVO TABLA
				
				if(this.asientocontablecajachica.getsType().equals("DUPLICADO")
				   || this.asientocontablecajachica.getsType().equals("NUEVO_GUARDAR_CAMBIOS")) {
					
					this.isEsNuevoAsientoContableCajaChica=true;
				
				} else {
					this.isEsNuevoAsientoContableCajaChica=false;	
				}
				
				//CONTROL VERSION ANTERIOR
				/*
				if(!this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
					if(this.asientocontablecajachica.getId()>=0 && !this.asientocontablecajachica.getIsNew()) {						
						this.isEsNuevoAsientoContableCajaChica=false;
						
					} else {
						this.isEsNuevoAsientoContableCajaChica=true;
					}
					
				} else {
					//CONTROLAR PARA RELACIONADO
				}
				*/
				
				//ESTABLECE SI ES RELACIONADO O NO 
				this.habilitarDeshabilitarTipoMantenimientoAsientoContableCajaChica(esRelaciones);						
				
				this.seleccionarAsientoContableCajaChica(evt,null,rowIndex);
				
				//SELECCIONA ACTUAL PERO AUN NO SE HA INGRESADO AL SISTEMA
				//SE DESHABILITA POR GUARDAR CAMBIOS
				/*
				if(this.asientocontablecajachica.getId()<0) {
					this.isEsNuevoAsientoContableCajaChica=true;
				}
				*/
				
				if(!this.esParaBusquedaForeignKey) {
					this.modificarAsientoContableCajaChica(evt,rowIndex,esRelaciones);
				} else {
					this.seleccionarAsientoContableCajaChica(evt,rowIndex);
				}	
				
				if(this.asientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
					this.dEnd=(double)System.currentTimeMillis();					
					this.dDif=this.dEnd - this.dStart;
					
					if(Constantes.ISDEVELOPING) {
						System.out.println("Tiempo(ms) Seleccion AsientoContableCajaChica: " + this.dDif); 
					}
				}								
				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.FORM,EventoTipo.LOAD,EventoSubTipo.SELECTED,"FORM",this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
				
			} else {
				this.estaModoEliminarGuardarCambios=true;
				
				this.seleccionarAsientoContableCajaChica(evt,null,rowIndex);
				
				if(this.permiteMantenimiento(this.asientocontablecajachica)) {
					if(this.asientocontablecajachica.getId()>0) {
						this.asientocontablecajachica.setIsDeleted(true);
						
						this.asientocontablecajachicasEliminados.add(this.asientocontablecajachica);
					}
					
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().remove(this.asientocontablecajachica);
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachicas.remove(this.asientocontablecajachica);				
					}
					
					
					((AsientoContableCajaChicaModel) this.jTableDatosAsientoContableCajaChica.getModel()).fireTableRowsDeleted(rowIndex,rowIndex);
					
					this.actualizarFilaTotales();
					
					this.inicializarActualizarBindingTablaAsientoContableCajaChica(false);					
				}								
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
			
		} finally {
			this.estaModoSeleccionar=false;				
			this.estaModoEliminarGuardarCambios=false;
		}
	}
	
	
	public void seleccionarAsientoContableCajaChica(ActionEvent evt,javax.swing.event.ListSelectionEvent evt2,int rowIndex) throws Exception { 
		try {
			//SI PUEDE SER NUEVO Y SELECCIONAR (PARA DUPLICAR Y NUEVO TABLA)
			//if(!this.isEsNuevoAsientoContableCajaChica) {
			
			if(this.jInternalFrameDetalleFormAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
				int intSelectedRow = 0;
				
				if(rowIndex>=0) {
					intSelectedRow=rowIndex;
					this.jTableDatosAsientoContableCajaChica.getSelectionModel().setSelectionInterval(intSelectedRow, intSelectedRow);
				} else {	
					intSelectedRow=this.jTableDatosAsientoContableCajaChica.getSelectedRow();	       
				}
				
				//CUANDO SE RECARGA TABLA TAMBIEN SE SELECCIONA PERO CON -1 POR LO QUE SE NECESITA VALIDAR ANTES
				if(intSelectedRow<0) {
					return;
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				
				if(AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesObjetoActualToFormularioAsientoContableCajaChica(this.asientocontablecajachica);
				}
				
				//ARCHITECTURE
				try {
					

					//Empresa
					if(!this.asientocontablecajachicaConstantesFunciones.cargarid_empresaAsientoContableCajaChica || this.asientocontablecajachicaConstantesFunciones.event_dependid_empresaAsientoContableCajaChica) {
						//this.cargarCombosEmpresasForeignKeyLista(" where id="+this.asientocontablecajachica.getid_empresa());
									//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
						this.empresasForeignKey=new ArrayList<Empresa>();

						if(asientocontablecajachica.getEmpresa()!=null) {
							this.empresasForeignKey.add(asientocontablecajachica.getEmpresa());
						}

						this.addItemDefectoCombosForeignKeyEmpresa();
						this.cargarCombosFrameEmpresasForeignKey("Todos");
					}
					this.setActualEmpresaForeignKey(this.asientocontablecajachica.getid_empresa(),false,"Formulario");

					//Sucursal
					if(!this.asientocontablecajachicaConstantesFunciones.cargarid_sucursalAsientoContableCajaChica || this.asientocontablecajachicaConstantesFunciones.event_dependid_sucursalAsientoContableCajaChica) {
						//this.cargarCombosSucursalsForeignKeyLista(" where id="+this.asientocontablecajachica.getid_sucursal());
									//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
						this.sucursalsForeignKey=new ArrayList<Sucursal>();

						if(asientocontablecajachica.getSucursal()!=null) {
							this.sucursalsForeignKey.add(asientocontablecajachica.getSucursal());
						}

						this.addItemDefectoCombosForeignKeySucursal();
						this.cargarCombosFrameSucursalsForeignKey("Todos");
					}
					this.setActualSucursalForeignKey(this.asientocontablecajachica.getid_sucursal(),false,"Formulario");

					//Ejercicio
					if(!this.asientocontablecajachicaConstantesFunciones.cargarid_ejercicioAsientoContableCajaChica || this.asientocontablecajachicaConstantesFunciones.event_dependid_ejercicioAsientoContableCajaChica) {
						//this.cargarCombosEjerciciosForeignKeyLista(" where id="+this.asientocontablecajachica.getid_ejercicio());
									//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
						this.ejerciciosForeignKey=new ArrayList<Ejercicio>();

						if(asientocontablecajachica.getEjercicio()!=null) {
							this.ejerciciosForeignKey.add(asientocontablecajachica.getEjercicio());
						}

						this.addItemDefectoCombosForeignKeyEjercicio();
						this.cargarCombosFrameEjerciciosForeignKey("Todos");
					}
					this.setActualEjercicioForeignKey(this.asientocontablecajachica.getid_ejercicio(),false,"Formulario");

					//Periodo
					if(!this.asientocontablecajachicaConstantesFunciones.cargarid_periodoAsientoContableCajaChica || this.asientocontablecajachicaConstantesFunciones.event_dependid_periodoAsientoContableCajaChica) {
						//this.cargarCombosPeriodosForeignKeyLista(" where id="+this.asientocontablecajachica.getid_periodo());
									//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
						this.periodosForeignKey=new ArrayList<Periodo>();

						if(asientocontablecajachica.getPeriodo()!=null) {
							this.periodosForeignKey.add(asientocontablecajachica.getPeriodo());
						}

						this.addItemDefectoCombosForeignKeyPeriodo();
						this.cargarCombosFramePeriodosForeignKey("Todos");
					}
					this.setActualPeriodoForeignKey(this.asientocontablecajachica.getid_periodo(),false,"Formulario");

					//Usuario
					if(!this.asientocontablecajachicaConstantesFunciones.cargarid_usuarioAsientoContableCajaChica || this.asientocontablecajachicaConstantesFunciones.event_dependid_usuarioAsientoContableCajaChica) {
						//this.cargarCombosUsuariosForeignKeyLista(" where id="+this.asientocontablecajachica.getid_usuario());
									//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
						this.usuariosForeignKey=new ArrayList<Usuario>();

						if(asientocontablecajachica.getUsuario()!=null) {
							this.usuariosForeignKey.add(asientocontablecajachica.getUsuario());
						}

						this.addItemDefectoCombosForeignKeyUsuario();
						this.cargarCombosFrameUsuariosForeignKey("Todos");
					}
					this.setActualUsuarioForeignKey(this.asientocontablecajachica.getid_usuario(),false,"Formulario");

					//Anio
					if(!this.asientocontablecajachicaConstantesFunciones.cargarid_anioAsientoContableCajaChica || this.asientocontablecajachicaConstantesFunciones.event_dependid_anioAsientoContableCajaChica) {
						//this.cargarCombosAniosForeignKeyLista(" where id="+this.asientocontablecajachica.getid_anio());
									//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
						this.aniosForeignKey=new ArrayList<Anio>();

						if(asientocontablecajachica.getAnio()!=null) {
							this.aniosForeignKey.add(asientocontablecajachica.getAnio());
						}

						this.addItemDefectoCombosForeignKeyAnio();
						this.cargarCombosFrameAniosForeignKey("Todos");
					}
					this.setActualAnioForeignKey(this.asientocontablecajachica.getid_anio(),false,"Formulario");

					//Mes
					if(!this.asientocontablecajachicaConstantesFunciones.cargarid_mesAsientoContableCajaChica || this.asientocontablecajachicaConstantesFunciones.event_dependid_mesAsientoContableCajaChica) {
						//this.cargarCombosMessForeignKeyLista(" where id="+this.asientocontablecajachica.getid_mes());
									//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
						this.messForeignKey=new ArrayList<Mes>();

						if(asientocontablecajachica.getMes()!=null) {
							this.messForeignKey.add(asientocontablecajachica.getMes());
						}

						this.addItemDefectoCombosForeignKeyMes();
						this.cargarCombosFrameMessForeignKey("Todos");
					}
					this.setActualMesForeignKey(this.asientocontablecajachica.getid_mes(),false,"Formulario");

					//Moneda
					if(!this.asientocontablecajachicaConstantesFunciones.cargarid_monedaAsientoContableCajaChica || this.asientocontablecajachicaConstantesFunciones.event_dependid_monedaAsientoContableCajaChica) {
						//this.cargarCombosMonedasForeignKeyLista(" where id="+this.asientocontablecajachica.getid_moneda());
									//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
						this.monedasForeignKey=new ArrayList<Moneda>();

						if(asientocontablecajachica.getMoneda()!=null) {
							this.monedasForeignKey.add(asientocontablecajachica.getMoneda());
						}

						this.addItemDefectoCombosForeignKeyMoneda();
						this.cargarCombosFrameMonedasForeignKey("Todos");
					}
					this.setActualMonedaForeignKey(this.asientocontablecajachica.getid_moneda(),false,"Formulario");

					//Empleado
					if(!this.asientocontablecajachicaConstantesFunciones.cargarid_empleadoAsientoContableCajaChica || this.asientocontablecajachicaConstantesFunciones.event_dependid_empleadoAsientoContableCajaChica) {
						//this.cargarCombosEmpleadosForeignKeyLista(" where id="+this.asientocontablecajachica.getid_empleado());
									//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
						this.empleadosForeignKey=new ArrayList<Empleado>();

						if(asientocontablecajachica.getEmpleado()!=null) {
							this.empleadosForeignKey.add(asientocontablecajachica.getEmpleado());
						}

						this.addItemDefectoCombosForeignKeyEmpleado();
						this.cargarCombosFrameEmpleadosForeignKey("Todos");
					}
					this.setActualEmpleadoForeignKey(this.asientocontablecajachica.getid_empleado(),false,"Formulario");

					//EstadoAsientoContableCajaChica
					if(!this.asientocontablecajachicaConstantesFunciones.cargarid_estado_asiento_contableAsientoContableCajaChica || this.asientocontablecajachicaConstantesFunciones.event_dependid_estado_asiento_contableAsientoContableCajaChica) {
						//this.cargarCombosEstadoAsientoContableCajaChicasForeignKeyLista(" where id="+this.asientocontablecajachica.getid_estado_asiento_contable());
									//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
						this.estadoasientocontablecajachicasForeignKey=new ArrayList<EstadoAsientoContableCajaChica>();

						if(asientocontablecajachica.getEstadoAsientoContableCajaChica()!=null) {
							this.estadoasientocontablecajachicasForeignKey.add(asientocontablecajachica.getEstadoAsientoContableCajaChica());
						}

						this.addItemDefectoCombosForeignKeyEstadoAsientoContableCajaChica();
						this.cargarCombosFrameEstadoAsientoContableCajaChicasForeignKey("Todos");
					}
					this.setActualEstadoAsientoContableCajaChicaForeignKey(this.asientocontablecajachica.getid_estado_asiento_contable(),false,"Formulario");

					//Cliente
					if(!this.asientocontablecajachicaConstantesFunciones.cargarid_clienteAsientoContableCajaChica || this.asientocontablecajachicaConstantesFunciones.event_dependid_clienteAsientoContableCajaChica) {
						//this.cargarCombosClientesForeignKeyLista(" where id="+this.asientocontablecajachica.getid_cliente());
									//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
						this.clientesForeignKey=new ArrayList<Cliente>();

						if(asientocontablecajachica.getCliente()!=null) {
							this.clientesForeignKey.add(asientocontablecajachica.getCliente());
						}

						this.addItemDefectoCombosForeignKeyCliente();
						this.cargarCombosFrameClientesForeignKey("Todos");
					}
					this.setActualClienteForeignKey(this.asientocontablecajachica.getid_cliente(),false,"Formulario");

					//Transaccion
					if(!this.asientocontablecajachicaConstantesFunciones.cargarid_transaccionAsientoContableCajaChica || this.asientocontablecajachicaConstantesFunciones.event_dependid_transaccionAsientoContableCajaChica) {
						//this.cargarCombosTransaccionsForeignKeyLista(" where id="+this.asientocontablecajachica.getid_transaccion());
									//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
						this.transaccionsForeignKey=new ArrayList<Transaccion>();

						if(asientocontablecajachica.getTransaccion()!=null) {
							this.transaccionsForeignKey.add(asientocontablecajachica.getTransaccion());
						}

						this.addItemDefectoCombosForeignKeyTransaccion();
						this.cargarCombosFrameTransaccionsForeignKey("Todos");
					}
					this.setActualTransaccionForeignKey(this.asientocontablecajachica.getid_transaccion(),false,"Formulario");

					//TipoDocumento
					if(!this.asientocontablecajachicaConstantesFunciones.cargarid_tipo_documentoAsientoContableCajaChica || this.asientocontablecajachicaConstantesFunciones.event_dependid_tipo_documentoAsientoContableCajaChica) {
						//this.cargarCombosTipoDocumentosForeignKeyLista(" where id="+this.asientocontablecajachica.getid_tipo_documento());
									//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
						this.tipodocumentosForeignKey=new ArrayList<TipoDocumento>();

						if(asientocontablecajachica.getTipoDocumento()!=null) {
							this.tipodocumentosForeignKey.add(asientocontablecajachica.getTipoDocumento());
						}

						this.addItemDefectoCombosForeignKeyTipoDocumento();
						this.cargarCombosFrameTipoDocumentosForeignKey("Todos");
					}
					this.setActualTipoDocumentoForeignKey(this.asientocontablecajachica.getid_tipo_documento(),false,"Formulario");

					//CuentaContable
					if(!this.asientocontablecajachicaConstantesFunciones.cargarid_cuenta_contableAsientoContableCajaChica || this.asientocontablecajachicaConstantesFunciones.event_dependid_cuenta_contableAsientoContableCajaChica) {
						//this.cargarCombosCuentaContablesForeignKeyLista(" where id="+this.asientocontablecajachica.getid_cuenta_contable());
									//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
						this.cuentacontablesForeignKey=new ArrayList<CuentaContable>();

						if(asientocontablecajachica.getCuentaContable()!=null) {
							this.cuentacontablesForeignKey.add(asientocontablecajachica.getCuentaContable());
						}

						this.addItemDefectoCombosForeignKeyCuentaContable();
						this.cargarCombosFrameCuentaContablesForeignKey("Todos");
					}
					this.setActualCuentaContableForeignKey(this.asientocontablecajachica.getid_cuenta_contable(),false,"Formulario");

					//Modulo
					if(!this.asientocontablecajachicaConstantesFunciones.cargarid_moduloAsientoContableCajaChica || this.asientocontablecajachicaConstantesFunciones.event_dependid_moduloAsientoContableCajaChica) {
						//this.cargarCombosModulosForeignKeyLista(" where id="+this.asientocontablecajachica.getid_modulo());
									//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
						this.modulosForeignKey=new ArrayList<Modulo>();

						if(asientocontablecajachica.getModulo()!=null) {
							this.modulosForeignKey.add(asientocontablecajachica.getModulo());
						}

						this.addItemDefectoCombosForeignKeyModulo();
						this.cargarCombosFrameModulosForeignKey("Todos");
					}
					this.setActualModuloForeignKey(this.asientocontablecajachica.getid_modulo(),false,"Formulario");

					//TipoMovimiento
					if(!this.asientocontablecajachicaConstantesFunciones.cargarid_tipo_movimientoAsientoContableCajaChica || this.asientocontablecajachicaConstantesFunciones.event_dependid_tipo_movimientoAsientoContableCajaChica) {
						//this.cargarCombosTipoMovimientosForeignKeyLista(" where id="+this.asientocontablecajachica.getid_tipo_movimiento());
									//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
						this.tipomovimientosForeignKey=new ArrayList<TipoMovimiento>();

						if(asientocontablecajachica.getTipoMovimiento()!=null) {
							this.tipomovimientosForeignKey.add(asientocontablecajachica.getTipoMovimiento());
						}

						this.addItemDefectoCombosForeignKeyTipoMovimiento();
						this.cargarCombosFrameTipoMovimientosForeignKey("Todos");
					}
					this.setActualTipoMovimientoForeignKey(this.asientocontablecajachica.getid_tipo_movimiento(),false,"Formulario");

					//TipoTransaccionModulo
					if(!this.asientocontablecajachicaConstantesFunciones.cargarid_tipo_transaccion_moduloAsientoContableCajaChica || this.asientocontablecajachicaConstantesFunciones.event_dependid_tipo_transaccion_moduloAsientoContableCajaChica) {
						//this.cargarCombosTipoTransaccionModulosForeignKeyLista(" where id="+this.asientocontablecajachica.getid_tipo_transaccion_modulo());
									//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
						this.tipotransaccionmodulosForeignKey=new ArrayList<TipoTransaccionModulo>();

						if(asientocontablecajachica.getTipoTransaccionModulo()!=null) {
							this.tipotransaccionmodulosForeignKey.add(asientocontablecajachica.getTipoTransaccionModulo());
						}

						this.addItemDefectoCombosForeignKeyTipoTransaccionModulo();
						this.cargarCombosFrameTipoTransaccionModulosForeignKey("Todos");
					}
					this.setActualTipoTransaccionModuloForeignKey(this.asientocontablecajachica.getid_tipo_transaccion_modulo(),false,"Formulario");

					//TipoMovimientoModulo
					if(!this.asientocontablecajachicaConstantesFunciones.cargarid_tipo_movimiento_moduloAsientoContableCajaChica || this.asientocontablecajachicaConstantesFunciones.event_dependid_tipo_movimiento_moduloAsientoContableCajaChica) {
						//this.cargarCombosTipoMovimientoModulosForeignKeyLista(" where id="+this.asientocontablecajachica.getid_tipo_movimiento_modulo());
									//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
						this.tipomovimientomodulosForeignKey=new ArrayList<TipoMovimientoModulo>();

						if(asientocontablecajachica.getTipoMovimientoModulo()!=null) {
							this.tipomovimientomodulosForeignKey.add(asientocontablecajachica.getTipoMovimientoModulo());
						}

						this.addItemDefectoCombosForeignKeyTipoMovimientoModulo();
						this.cargarCombosFrameTipoMovimientoModulosForeignKey("Todos");
					}
					this.setActualTipoMovimientoModuloForeignKey(this.asientocontablecajachica.getid_tipo_movimiento_modulo(),false,"Formulario");
				} catch(Exception e) {
					throw e;
				}
				
				this.actualizarEstadoCeldasBotonesAsientoContableCajaChica("s", this.isGuardarCambiosEnLote, this.isEsMantenimientoRelacionado);
				
				//NO FUNCIONA BINDING PERO SE MANTIENE
				this.inicializarActualizarBindingBotonesAsientoContableCajaChica(false) ;
				
				//SI ES MANUAL
				//this.inicializarActualizarBindingBotonesManualAsientoContableCajaChica() ;
			//}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesObjetoActualToFormularioTodoAsientoContableCajaChica(AsientoContableCajaChica asientocontablecajachica) throws Exception { 
		this.setVariablesObjetoActualToFormularioTodoAsientoContableCajaChica(asientocontablecajachica,false,"NINGUNO");
	}
	
	public void setVariablesObjetoActualToFormularioTodoAsientoContableCajaChica(AsientoContableCajaChica asientocontablecajachica,Boolean conCargarListasDesdeObjetoActual,String sTipoEvento) throws Exception { 
		this.setVariablesObjetoActualToFormularioAsientoContableCajaChica(asientocontablecajachica);
		
		if(conCargarListasDesdeObjetoActual) {
			this.setVariablesObjetoActualToListasForeignKeyAsientoContableCajaChica(asientocontablecajachica,sTipoEvento);
		}
		
		this.setVariablesObjetoActualToFormularioForeignKeyAsientoContableCajaChica(asientocontablecajachica);
	}
	
	public void setVariablesObjetoActualToFormularioAsientoContableCajaChica(AsientoContableCajaChica asientocontablecajachica) throws Exception { 
		try {			
			Image imageActual=null;
			ImageIcon imageIcon = null;
			
			if(this.jInternalFrameDetalleFormAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelidAsientoContableCajaChica.setText(asientocontablecajachica.getId().toString());
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jTextFieldsecuencialAsientoContableCajaChica.setText(asientocontablecajachica.getsecuencial().toString());
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jDateChooserfechaAsientoContableCajaChica.setDate(asientocontablecajachica.getfecha());
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jCheckBoxes_proveedorAsientoContableCajaChica.setSelected(asientocontablecajachica.getes_proveedor());
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jTextAreadetalleAsientoContableCajaChica.setText(asientocontablecajachica.getdetalle());
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
		
	public void actualizarInformacion(String sTipo,AsientoContableCajaChica asientocontablecajachicaLocal) throws Exception {
		this.actualizarInformacion(sTipo,false,asientocontablecajachicaLocal);
	}	
	
	public void actualizarInformacion(String sTipo,Boolean conParametroObjeto,AsientoContableCajaChica asientocontablecajachicaLocal) throws Exception {
		
		if(!conParametroObjeto) {
			if(!this.getEsControlTabla()) {
				asientocontablecajachicaLocal=this.asientocontablecajachica;
			} else {
				asientocontablecajachicaLocal=this.asientocontablecajachicaAnterior;
			}
		}
		
		if(this.permiteMantenimiento(asientocontablecajachicaLocal)) {
			if(sTipo.equals("EVENTO_CONTROL")) { // || sTipo.equals("EVENTO_NUEVO")
				if(!this.esControlTabla) {
					this.setVariablesFormularioToObjetoActualTodoAsientoContableCajaChica(asientocontablecajachicaLocal,true);
					
					if(asientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
						this.actualizarRelaciones(asientocontablecajachicaLocal);
					}
				}
			
			} else if(sTipo.equals("INFO_PADRE")) {
				
				if(this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
					this.actualizarRelacionFkPadreActual(asientocontablecajachicaLocal);
				}
			}
		}
	}
	
	public void setVariablesFormularioToObjetoActualTodoAsientoContableCajaChica(AsientoContableCajaChica asientocontablecajachica,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(asientocontablecajachica,conColumnasBase);
		this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(asientocontablecajachica);
	}
	
	public void setVariablesFormularioToObjetoActualAsientoContableCajaChica(AsientoContableCajaChica asientocontablecajachica,Boolean conColumnasBase) throws Exception { 
		this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(asientocontablecajachica,conColumnasBase,true);
	}
	
	public void setVariablesFormularioToObjetoActualAsientoContableCajaChica(AsientoContableCajaChica asientocontablecajachica,Boolean conColumnasBase,Boolean conInicializarInvalidValues) throws Exception { 
		String sMensajeCampoActual="";
		Boolean estaValidado=true;
		try {
			
			if(this.jInternalFrameDetalleFormAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {
				this.inicializarFormDetalle();
			}
			
			if(conInicializarInvalidValues) {
				this.inicializarInvalidValues();
			}
			
			

		try {
			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelidAsientoContableCajaChica.getText()==null || this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelidAsientoContableCajaChica.getText()=="" || this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelidAsientoContableCajaChica.getText()=="Id") {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelidAsientoContableCajaChica.setText("0");
			}

			if(conColumnasBase) {asientocontablecajachica.setId(Long.parseLong(this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelidAsientoContableCajaChica.getText()));}
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+AsientoContableCajaChicaConstantesFunciones.LABEL_ID+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelIdAsientoContableCajaChica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			asientocontablecajachica.setsecuencial(Long.parseLong(this.jInternalFrameDetalleFormAsientoContableCajaChica.jTextFieldsecuencialAsientoContableCajaChica.getText()));
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+AsientoContableCajaChicaConstantesFunciones.LABEL_SECUENCIAL+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelsecuencialAsientoContableCajaChica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			asientocontablecajachica.setfecha(this.jInternalFrameDetalleFormAsientoContableCajaChica.jDateChooserfechaAsientoContableCajaChica.getDate());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+AsientoContableCajaChicaConstantesFunciones.LABEL_FECHA+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelfechaAsientoContableCajaChica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			asientocontablecajachica.setes_proveedor(this.jInternalFrameDetalleFormAsientoContableCajaChica.jCheckBoxes_proveedorAsientoContableCajaChica.isSelected());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+AsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabeles_proveedorAsientoContableCajaChica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}

		try {
			asientocontablecajachica.setdetalle(this.jInternalFrameDetalleFormAsientoContableCajaChica.jTextAreadetalleAsientoContableCajaChica.getText());
		} catch(Exception e) {
			estaValidado=false;
			sMensajeCampoActual+="\r\n"+AsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE+"-->"+ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR;FuncionesSwing.mostrarCampoMensajeInvalido(false,this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabeldetalleAsientoContableCajaChica,ConstantesMensajes.SMENSAJEEXCEPCION_VALIDACIONVALOR);
		}
			
			if(!estaValidado) {
				throw new Exception(sMensajeCampoActual);
			}
		} catch(NumberFormatException e) {
			throw new Exception(sMensajeCampoActual);
			//FuncionesSwing.manageException(this, e,logger,MovimientoInventarioConstantesFunciones.CLASSNAME);
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setVariablesForeignKeyObjetoBeanDefectoActualToObjetoActualAsientoContableCajaChica(AsientoContableCajaChica asientocontablecajachicaBean,AsientoContableCajaChica asientocontablecajachica,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setCopiarVariablesObjetosAsientoContableCajaChica(AsientoContableCajaChica asientocontablecajachicaOrigen,AsientoContableCajaChica asientocontablecajachica,Boolean conDefault,Boolean conColumnasBase) throws Exception { 
		try {
			
			if(conColumnasBase) {if(conDefault || (!conDefault && asientocontablecajachicaOrigen.getId()!=null && !asientocontablecajachicaOrigen.getId().equals(0L))) {asientocontablecajachica.setId(asientocontablecajachicaOrigen.getId());}}
			if(conDefault || (!conDefault && asientocontablecajachicaOrigen.getsecuencial()!=null && !asientocontablecajachicaOrigen.getsecuencial().equals(0L))) {asientocontablecajachica.setsecuencial(asientocontablecajachicaOrigen.getsecuencial());}
			if(conDefault || (!conDefault && asientocontablecajachicaOrigen.getfecha()!=null && !asientocontablecajachicaOrigen.getfecha().equals(new Date()))) {asientocontablecajachica.setfecha(asientocontablecajachicaOrigen.getfecha());}
			if(conDefault || (!conDefault && asientocontablecajachicaOrigen.getes_proveedor()!=null && !asientocontablecajachicaOrigen.getes_proveedor().equals(false))) {asientocontablecajachica.setes_proveedor(asientocontablecajachicaOrigen.getes_proveedor());}
			if(conDefault || (!conDefault && asientocontablecajachicaOrigen.getdetalle()!=null && !asientocontablecajachicaOrigen.getdetalle().equals(""))) {asientocontablecajachica.setdetalle(asientocontablecajachicaOrigen.getdetalle());}
			
		} catch(Exception e) {
			throw e;
			//FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	/*
	public void setVariablesObjetoBeanActualToFormularioAsientoContableCajaChica(AsientoContableCajaChica asientocontablecajachica) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelidAsientoContableCajaChica.setText(asientocontablecajachica.getId().toString());
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jTextFieldsecuencialAsientoContableCajaChica.setText(asientocontablecajachica.getsecuencial().toString());
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jDateChooserfechaAsientoContableCajaChica.setDate(asientocontablecajachica.getfecha());
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jCheckBoxes_proveedorAsientoContableCajaChica.setSelected(asientocontablecajachica.getes_proveedor());
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jTextAreadetalleAsientoContableCajaChica.setText(asientocontablecajachica.getdetalle());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoBeanActualToFormularioAsientoContableCajaChica(AsientoContableCajaChicaBean asientocontablecajachicaBean) throws Exception { 
		try {
			
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelidAsientoContableCajaChica.setText(asientocontablecajachicaBean.getId().toString());
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jTextFieldsecuencialAsientoContableCajaChica.setText(asientocontablecajachicaBean.getsecuencial().toString());
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jDateChooserfechaAsientoContableCajaChica.setDate(asientocontablecajachicaBean.getfecha());
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jCheckBoxes_proveedorAsientoContableCajaChica.setSelected(asientocontablecajachicaBean.getes_proveedor());
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jTextAreadetalleAsientoContableCajaChica.setText(asientocontablecajachicaBean.getdetalle());
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesObjetoReturnGeneralToBeanAsientoContableCajaChica(AsientoContableCajaChicaParameterReturnGeneral asientocontablecajachicaReturnGeneral,AsientoContableCajaChicaBean asientocontablecajachicaBean,Boolean conDefault) throws Exception { 
		try {
			AsientoContableCajaChica asientocontablecajachicaLocal=new AsientoContableCajaChica();
			
			asientocontablecajachicaLocal=asientocontablecajachicaReturnGeneral.getAsientoContableCajaChica();
			
			
			if(conColumnasBase) {if(conDefault || (!conDefault && asientocontablecajachicaLocal.getId()!=null && !asientocontablecajachicaLocal.getId().equals(0L))) {asientocontablecajachicaBean.setId(asientocontablecajachicaLocal.getId());}}
			if(conDefault || (!conDefault && asientocontablecajachicaLocal.getsecuencial()!=null && !asientocontablecajachicaLocal.getsecuencial().equals(0L))) {asientocontablecajachicaBean.setsecuencial(asientocontablecajachicaLocal.getsecuencial());}
			if(conDefault || (!conDefault && asientocontablecajachicaLocal.getfecha()!=null && !asientocontablecajachicaLocal.getfecha().equals(new Date()))) {asientocontablecajachicaBean.setfecha(asientocontablecajachicaLocal.getfecha());}
			if(conDefault || (!conDefault && asientocontablecajachicaLocal.getes_proveedor()!=null && !asientocontablecajachicaLocal.getes_proveedor().equals(false))) {asientocontablecajachicaBean.setes_proveedor(asientocontablecajachicaLocal.getes_proveedor());}
			if(conDefault || (!conDefault && asientocontablecajachicaLocal.getdetalle()!=null && !asientocontablecajachicaLocal.getdetalle().equals(""))) {asientocontablecajachicaBean.setdetalle(asientocontablecajachicaLocal.getdetalle());}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	@SuppressWarnings("rawtypes")
	public static void setActualComboBoxAsientoContableCajaChicaGenerico(Long idAsientoContableCajaChicaSeleccionado,JComboBox jComboBoxAsientoContableCajaChica,List<AsientoContableCajaChica> asientocontablecajachicasLocal)throws Exception {
		try {
			AsientoContableCajaChica  asientocontablecajachicaTemp=null;

			for(AsientoContableCajaChica asientocontablecajachicaAux:asientocontablecajachicasLocal) {
				if(asientocontablecajachicaAux.getId()!=null && asientocontablecajachicaAux.getId().equals(idAsientoContableCajaChicaSeleccionado)) {
					asientocontablecajachicaTemp=asientocontablecajachicaAux;
					break;
				}
			}

			jComboBoxAsientoContableCajaChica.setSelectedItem(asientocontablecajachicaTemp);

		} catch(Exception e) {
			throw e;
		}
	}
	
	@SuppressWarnings("rawtypes")
	public static void setHotKeysComboBoxAsientoContableCajaChicaGenerico(JComboBox jComboBoxAsientoContableCajaChica,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda)throws Exception {
		try {
			//GLOBAL(id_empresa,id_sucursal,id_ejercicio)
			//BASICO(normal)
			//CON_BUSQUEDA(Permite buscar Fk)
			
			String sKeyStrokeName="";
			KeyStroke keyStrokeControl=null;
			
			if(!sTipoBusqueda.equals("GLOBAL")) {
				
				//BUSCAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSCAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSCAR");
				
				jComboBoxAsientoContableCajaChica.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxAsientoContableCajaChica.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Busqueda"));
				//BUSCAR
				
				
				//ACTUALIZAR
				sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_ACTUALIZAR");
				keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_ACTUALIZAR");
				
				jComboBoxAsientoContableCajaChica.getInputMap().put(keyStrokeControl, sKeyStrokeName);
				jComboBoxAsientoContableCajaChica.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction+"Update"));
				//ACTUALIZAR
				
				if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxAsientoContableCajaChica.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
						jComboBoxAsientoContableCajaChica.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));						
					}
					
					/*
					if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
						jComboBoxAsientoContableCajaChica.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					} else {
						jComboBoxAsientoContableCajaChica.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
					}
					*/
				}								
				
				//CON_BUSQUEDA								
				if(sTipoBusqueda.contains("CON_BUSQUEDA")) {
					sKeyStrokeName = FuncionesSwing.getKeyNameControl("CONTROL_BUSQUEDA");
					keyStrokeControl=FuncionesSwing.getKeyStrokeControl("CONTROL_BUSQUEDA");
							
					jComboBoxAsientoContableCajaChica.getInputMap().put(keyStrokeControl, sKeyStrokeName);
					jComboBoxAsientoContableCajaChica.getActionMap().put(sKeyStrokeName, new ButtonAbstractAction(jInternalFrameBase,sNombreHotKeyAbstractAction));
				}
				//CON_BUSQUEDA
				
				
			}
		} catch(Exception e) {
			throw e;
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	@SuppressWarnings("rawtypes")
	public void setHotKeysComboBoxGenerico(JComboBox jComboBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		if(sTipoBusqueda.contains("CON_EVENT_CHANGE")) {
			if(Constantes2.CON_COMBOBOX_ITEMLISTENER) {
				jComboBox.addItemListener(new ComboBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			} else {
				jComboBox.addActionListener(new ComboBoxActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
				jComboBox.addFocusListener(new ComboBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
			}
		}
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextFieldGenerico(JTextField jTextField,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextField.addFocusListener(new TextFieldFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		jTextField.addActionListener(new TextFieldActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJTextAreaGenerico(JTextArea jTextArea,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jTextArea.addFocusListener(new TextAreaFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jTextArea.addActionListener(new TextAreaActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJLabelGenerico(JLabel jLabel,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jLabel.addFocusListener(new LabelFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//NO EXISTE
		//jLabel.addActionListener(new LabelActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJCheckBoxGenerico(JCheckBox jCheckBox,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jCheckBox.addFocusListener(new CheckBoxFocusListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
		
		//SI SE DEFINE AL CAMBIAR VALOR, ESTE NUEVO VALOR NO SE ENVIA AL EVENTO
		//jCheckBox.addItemListener(new CheckBoxItemListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJDateChooserGenerico(JDateChooser jDateChooser,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		FuncionesSwing.addDateListener(jDateChooser, jInternalFrameBase, sNombreHotKeyAbstractAction);
	}
	
	//PARA INICIALIZAR CONTROLES DE TABLA
	public void setHotKeysJButtonGenerico(JButton jButton,JInternalFrameBase jInternalFrameBase,String sNombreHotKeyAbstractAction,String sTipoBusqueda) {
		jButton.addActionListener(new ButtonActionListener(jInternalFrameBase,sNombreHotKeyAbstractAction));
	}
	
	public void jButtonRelacionActionPerformed(String sTipo,ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado) {
		//ABRIR RELACIONES
		try {
			
		if(sTipo.equals("DetalleAsientoContableCajaChica")) {
			jButtonDetalleAsientoContableCajaChicaActionPerformed(evt,rowIndex,true,false,null);
		}
		} catch (Exception e) {
			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public String getDescripcionFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		String sDescripcion="";
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			asientocontablecajachica=(AsientoContableCajaChica) asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			asientocontablecajachica =(AsientoContableCajaChica) asientocontablecajachicas.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		if(sTipo.equals("Empresa")) {
			//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
			if(!asientocontablecajachica.getIsNew() && !asientocontablecajachica.getIsChanged() && !asientocontablecajachica.getIsDeleted()) {
				sDescripcion=asientocontablecajachica.getempresa_descripcion();
			} else {
				//sDescripcion=this.getActualEmpresaForeignKeyDescripcion((Long)value);
				sDescripcion=asientocontablecajachica.getempresa_descripcion();
			}
		}

		if(sTipo.equals("Sucursal")) {
			//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
			if(!asientocontablecajachica.getIsNew() && !asientocontablecajachica.getIsChanged() && !asientocontablecajachica.getIsDeleted()) {
				sDescripcion=asientocontablecajachica.getsucursal_descripcion();
			} else {
				//sDescripcion=this.getActualSucursalForeignKeyDescripcion((Long)value);
				sDescripcion=asientocontablecajachica.getsucursal_descripcion();
			}
		}

		if(sTipo.equals("Ejercicio")) {
			//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
			if(!asientocontablecajachica.getIsNew() && !asientocontablecajachica.getIsChanged() && !asientocontablecajachica.getIsDeleted()) {
				sDescripcion=asientocontablecajachica.getejercicio_descripcion();
			} else {
				//sDescripcion=this.getActualEjercicioForeignKeyDescripcion((Long)value);
				sDescripcion=asientocontablecajachica.getejercicio_descripcion();
			}
		}

		if(sTipo.equals("Periodo")) {
			//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
			if(!asientocontablecajachica.getIsNew() && !asientocontablecajachica.getIsChanged() && !asientocontablecajachica.getIsDeleted()) {
				sDescripcion=asientocontablecajachica.getperiodo_descripcion();
			} else {
				//sDescripcion=this.getActualPeriodoForeignKeyDescripcion((Long)value);
				sDescripcion=asientocontablecajachica.getperiodo_descripcion();
			}
		}

		if(sTipo.equals("Usuario")) {
			//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
			if(!asientocontablecajachica.getIsNew() && !asientocontablecajachica.getIsChanged() && !asientocontablecajachica.getIsDeleted()) {
				sDescripcion=asientocontablecajachica.getusuario_descripcion();
			} else {
				//sDescripcion=this.getActualUsuarioForeignKeyDescripcion((Long)value);
				sDescripcion=asientocontablecajachica.getusuario_descripcion();
			}
		}

		if(sTipo.equals("Anio")) {
			//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
			if(!asientocontablecajachica.getIsNew() && !asientocontablecajachica.getIsChanged() && !asientocontablecajachica.getIsDeleted()) {
				sDescripcion=asientocontablecajachica.getanio_descripcion();
			} else {
				//sDescripcion=this.getActualAnioForeignKeyDescripcion((Long)value);
				sDescripcion=asientocontablecajachica.getanio_descripcion();
			}
		}

		if(sTipo.equals("Mes")) {
			//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
			if(!asientocontablecajachica.getIsNew() && !asientocontablecajachica.getIsChanged() && !asientocontablecajachica.getIsDeleted()) {
				sDescripcion=asientocontablecajachica.getmes_descripcion();
			} else {
				//sDescripcion=this.getActualMesForeignKeyDescripcion((Long)value);
				sDescripcion=asientocontablecajachica.getmes_descripcion();
			}
		}

		if(sTipo.equals("Moneda")) {
			//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
			if(!asientocontablecajachica.getIsNew() && !asientocontablecajachica.getIsChanged() && !asientocontablecajachica.getIsDeleted()) {
				sDescripcion=asientocontablecajachica.getmoneda_descripcion();
			} else {
				//sDescripcion=this.getActualMonedaForeignKeyDescripcion((Long)value);
				sDescripcion=asientocontablecajachica.getmoneda_descripcion();
			}
		}

		if(sTipo.equals("Empleado")) {
			//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
			if(!asientocontablecajachica.getIsNew() && !asientocontablecajachica.getIsChanged() && !asientocontablecajachica.getIsDeleted()) {
				sDescripcion=asientocontablecajachica.getempleado_descripcion();
			} else {
				//sDescripcion=this.getActualEmpleadoForeignKeyDescripcion((Long)value);
				sDescripcion=asientocontablecajachica.getempleado_descripcion();
			}
		}

		if(sTipo.equals("EstadoAsientoContableCajaChica")) {
			//sDescripcion=this.getActualEstadoAsientoContableCajaChicaForeignKeyDescripcion((Long)value);
			if(!asientocontablecajachica.getIsNew() && !asientocontablecajachica.getIsChanged() && !asientocontablecajachica.getIsDeleted()) {
				sDescripcion=asientocontablecajachica.getestadoasientocontablecajachica_descripcion();
			} else {
				//sDescripcion=this.getActualEstadoAsientoContableCajaChicaForeignKeyDescripcion((Long)value);
				sDescripcion=asientocontablecajachica.getestadoasientocontablecajachica_descripcion();
			}
		}

		if(sTipo.equals("Cliente")) {
			//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
			if(!asientocontablecajachica.getIsNew() && !asientocontablecajachica.getIsChanged() && !asientocontablecajachica.getIsDeleted()) {
				sDescripcion=asientocontablecajachica.getcliente_descripcion();
			} else {
				//sDescripcion=this.getActualClienteForeignKeyDescripcion((Long)value);
				sDescripcion=asientocontablecajachica.getcliente_descripcion();
			}
		}

		if(sTipo.equals("Transaccion")) {
			//sDescripcion=this.getActualTransaccionForeignKeyDescripcion((Long)value);
			if(!asientocontablecajachica.getIsNew() && !asientocontablecajachica.getIsChanged() && !asientocontablecajachica.getIsDeleted()) {
				sDescripcion=asientocontablecajachica.gettransaccion_descripcion();
			} else {
				//sDescripcion=this.getActualTransaccionForeignKeyDescripcion((Long)value);
				sDescripcion=asientocontablecajachica.gettransaccion_descripcion();
			}
		}

		if(sTipo.equals("TipoDocumento")) {
			//sDescripcion=this.getActualTipoDocumentoForeignKeyDescripcion((Long)value);
			if(!asientocontablecajachica.getIsNew() && !asientocontablecajachica.getIsChanged() && !asientocontablecajachica.getIsDeleted()) {
				sDescripcion=asientocontablecajachica.gettipodocumento_descripcion();
			} else {
				//sDescripcion=this.getActualTipoDocumentoForeignKeyDescripcion((Long)value);
				sDescripcion=asientocontablecajachica.gettipodocumento_descripcion();
			}
		}

		if(sTipo.equals("CuentaContable")) {
			//sDescripcion=this.getActualCuentaContableForeignKeyDescripcion((Long)value);
			if(!asientocontablecajachica.getIsNew() && !asientocontablecajachica.getIsChanged() && !asientocontablecajachica.getIsDeleted()) {
				sDescripcion=asientocontablecajachica.getcuentacontable_descripcion();
			} else {
				//sDescripcion=this.getActualCuentaContableForeignKeyDescripcion((Long)value);
				sDescripcion=asientocontablecajachica.getcuentacontable_descripcion();
			}
		}

		if(sTipo.equals("Modulo")) {
			//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
			if(!asientocontablecajachica.getIsNew() && !asientocontablecajachica.getIsChanged() && !asientocontablecajachica.getIsDeleted()) {
				sDescripcion=asientocontablecajachica.getmodulo_descripcion();
			} else {
				//sDescripcion=this.getActualModuloForeignKeyDescripcion((Long)value);
				sDescripcion=asientocontablecajachica.getmodulo_descripcion();
			}
		}

		if(sTipo.equals("TipoMovimiento")) {
			//sDescripcion=this.getActualTipoMovimientoForeignKeyDescripcion((Long)value);
			if(!asientocontablecajachica.getIsNew() && !asientocontablecajachica.getIsChanged() && !asientocontablecajachica.getIsDeleted()) {
				sDescripcion=asientocontablecajachica.gettipomovimiento_descripcion();
			} else {
				//sDescripcion=this.getActualTipoMovimientoForeignKeyDescripcion((Long)value);
				sDescripcion=asientocontablecajachica.gettipomovimiento_descripcion();
			}
		}

		if(sTipo.equals("TipoTransaccionModulo")) {
			//sDescripcion=this.getActualTipoTransaccionModuloForeignKeyDescripcion((Long)value);
			if(!asientocontablecajachica.getIsNew() && !asientocontablecajachica.getIsChanged() && !asientocontablecajachica.getIsDeleted()) {
				sDescripcion=asientocontablecajachica.gettipotransaccionmodulo_descripcion();
			} else {
				//sDescripcion=this.getActualTipoTransaccionModuloForeignKeyDescripcion((Long)value);
				sDescripcion=asientocontablecajachica.gettipotransaccionmodulo_descripcion();
			}
		}

		if(sTipo.equals("TipoMovimientoModulo")) {
			//sDescripcion=this.getActualTipoMovimientoModuloForeignKeyDescripcion((Long)value);
			if(!asientocontablecajachica.getIsNew() && !asientocontablecajachica.getIsChanged() && !asientocontablecajachica.getIsDeleted()) {
				sDescripcion=asientocontablecajachica.gettipomovimientomodulo_descripcion();
			} else {
				//sDescripcion=this.getActualTipoMovimientoModuloForeignKeyDescripcion((Long)value);
				sDescripcion=asientocontablecajachica.gettipomovimientomodulo_descripcion();
			}
		}

		
		return sDescripcion;
	}
	
	public Color getColorFk(String sTipo,JTable table,Object value,int intSelectedRow) throws Exception {
		//DESCRIPCIONES FK		
		Color color=Color.WHITE;
		
		AsientoContableCajaChica asientocontablecajachicaRow=new AsientoContableCajaChica();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			asientocontablecajachicaRow=(AsientoContableCajaChica) asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[table.convertRowIndexToModel(intSelectedRow)];
		} else if(Constantes.ISUSAEJBREMOTE) {
			asientocontablecajachicaRow=(AsientoContableCajaChica) asientocontablecajachicas.toArray()[table.convertRowIndexToModel(intSelectedRow)];
		}
					
		
		
		return color;
	}
	
	
	
	
	public void jButtonDetalleAsientoContableCajaChicaActionPerformed(ActionEvent evt,int rowIndex,Boolean conInicializar,Boolean esRelacionado,AsientoContableCajaChica asientocontablecajachica) throws Exception {
			try {

				if(this.jInternalFrameDetalleFormAsientoContableCajaChica==null) {
					this.inicializarFormDetalle();
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				int intSelectedRow =rowIndex;

				if(intSelectedRow!=-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica = (AsientoContableCajaChica)this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE) {
						this.asientocontablecajachica = (AsientoContableCajaChica)this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
				} else {
					if(asientocontablecajachica!=null) {
						this.asientocontablecajachica = asientocontablecajachica;
					} else {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}
				}

				if(this.isTienePermisosDetalleAsientoContableCajaChica && this.permiteMantenimiento(this.asientocontablecajachica)) {
					DetalleAsientoContableCajaChicaBeanSwingJInternalFrame detalleasientocontablecajachicaBeanSwingJInternalFrame=null;

					if(conInicializar) {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFramePopup=new DetalleAsientoContableCajaChicaBeanSwingJInternalFrame(false,false,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.SECUNDARIO,false,false,true,false);
						this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFramePopup.setJInternalFrameParent(this);

						detalleasientocontablecajachicaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFramePopup;
					} else {
						detalleasientocontablecajachicaBeanSwingJInternalFrame=this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame;
					}

					List<AsientoContableCajaChica> asientocontablecajachicas=new ArrayList<AsientoContableCajaChica>();
					asientocontablecajachicas.add(this.asientocontablecajachica);
					if(!esRelacionado) {
						//detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaSessionBean.setConGuardarRelaciones(false);
						//detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaSessionBean.setEsGuardarRelacionado(false);
					}

					//DESHABILITA TEMPORALMENTE EVENTOS CHANGE DE TEXTOS,COMBOS,ETC
					detalleasientocontablecajachicaBeanSwingJInternalFrame.estaModoSeleccionar=true;
					this.jInternalFrameDetalleFormAsientoContableCajaChica.cargarDetalleAsientoContableCajaChicaBeanSwingJInternalFrame(asientocontablecajachicas,this.asientocontablecajachica,detalleasientocontablecajachicaBeanSwingJInternalFrame,/*conInicializar,*/detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaSessionBean.getConGuardarRelaciones(),detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaSessionBean.getEsGuardarRelacionado());
					detalleasientocontablecajachicaBeanSwingJInternalFrame.estaModoSeleccionar=false;


					if(!esRelacionado) {
						detalleasientocontablecajachicaBeanSwingJInternalFrame.actualizarEstadoPanelsDetalleAsientoContableCajaChica("no_relacionado");

						detalleasientocontablecajachicaBeanSwingJInternalFrame.redimensionarTablaDatosConTamanio(DetalleAsientoContableCajaChicaConstantesFunciones.ITAMANIOFILATABLA + (DetalleAsientoContableCajaChicaConstantesFunciones.ITAMANIOFILATABLA/2));

						detalleasientocontablecajachicaBeanSwingJInternalFrame.setLocation(xOffset*(openFrameCount + Constantes.INUM_MAX_VENTANAS_REL_X), yOffset*(openFrameCount+Constantes.INUM_MAX_VENTANAS_REL_Y));

						TitledBorder titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
						TitledBorder titledBorderDetalleAsientoContableCajaChica=(TitledBorder)detalleasientocontablecajachicaBeanSwingJInternalFrame.jScrollPanelDatosDetalleAsientoContableCajaChica.getBorder();

						titledBorderDetalleAsientoContableCajaChica.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Detalle Asiento Contable Caja Chica");

						if(!Constantes.CON_VARIAS_VENTANAS) {
							MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,detalleasientocontablecajachicaBeanSwingJInternalFrame);
						}

						detalleasientocontablecajachicaBeanSwingJInternalFrame.setVisible(true);

						this.jDesktopPane.add(detalleasientocontablecajachicaBeanSwingJInternalFrame);

						detalleasientocontablecajachicaBeanSwingJInternalFrame.setSelected(true);
					}

				} else {
					if(!this.asientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
						JOptionPane.showMessageDialog(this,"NO TIENE PERMISOS PARA USAR LA FUNCIONALIDAD DE Detalle Asiento Contable Caja Chica",Constantes.SERROR,JOptionPane.ERROR_MESSAGE);
					}
				}
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			}

			catch(Exception e) {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}


				FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
			} finally { 
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	
	public void refrescarBindingTabla(Boolean blnSoloTabla) {
	}
	
	public void inicializarActualizarBindingBotonesManualAsientoContableCajaChica(Boolean esSetControles) {						
		if(esSetControles) {
			this.jButtonNuevoAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaNuevoAsientoContableCajaChica && this.isPermisoNuevoAsientoContableCajaChica));			
			this.jButtonDuplicarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaDuplicarAsientoContableCajaChica && this.isPermisoDuplicarAsientoContableCajaChica));			
			this.jButtonCopiarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaCopiarAsientoContableCajaChica && this.isPermisoCopiarAsientoContableCajaChica));
			this.jButtonVerFormAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaVerFormAsientoContableCajaChica && this.isPermisoVerFormAsientoContableCajaChica));
			
			this.jButtonAbrirOrderByAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaOrdenAsientoContableCajaChica && this.isPermisoOrdenAsientoContableCajaChica));			
			
			this.jButtonNuevoRelacionesAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica && this.isPermisoNuevoAsientoContableCajaChica));			
			this.jButtonNuevoGuardarCambiosAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaNuevoAsientoContableCajaChica && this.isPermisoNuevoAsientoContableCajaChica && this.isPermisoGuardarCambiosAsientoContableCajaChica));
			
			if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonModificarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaModificarAsientoContableCajaChica && this.isPermisoActualizarAsientoContableCajaChica));	
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonActualizarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaActualizarAsientoContableCajaChica && this.isPermisoActualizarAsientoContableCajaChica));	
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonEliminarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaEliminarAsientoContableCajaChica && this.isPermisoEliminarAsientoContableCajaChica));
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonCancelarAsientoContableCajaChica.setVisible(this.isVisibilidadCeldaCancelarAsientoContableCajaChica);							
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonGuardarCambiosAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaGuardarAsientoContableCajaChica && this.isPermisoGuardarCambiosAsientoContableCajaChica));			
			
			}
						
			this.jButtonGuardarCambiosTablaAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica && this.isPermisoGuardarCambiosAsientoContableCajaChica));							
			
			//TOOLBAR
			
			this.jButtonNuevoToolBarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaNuevoAsientoContableCajaChica && this.isPermisoNuevoAsientoContableCajaChica));						
			this.jButtonDuplicarToolBarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaDuplicarAsientoContableCajaChica && this.isPermisoDuplicarAsientoContableCajaChica));						
			this.jButtonCopiarToolBarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaCopiarAsientoContableCajaChica && this.isPermisoCopiarAsientoContableCajaChica));			
			this.jButtonVerFormToolBarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaVerFormAsientoContableCajaChica && this.isPermisoVerFormAsientoContableCajaChica));			
			this.jButtonAbrirOrderByToolBarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaOrdenAsientoContableCajaChica && this.isPermisoOrdenAsientoContableCajaChica));
			this.jButtonNuevoRelacionesToolBarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica && this.isPermisoNuevoAsientoContableCajaChica));			
			this.jButtonNuevoGuardarCambiosToolBarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaNuevoAsientoContableCajaChica && this.isPermisoNuevoAsientoContableCajaChica && this.isPermisoGuardarCambiosAsientoContableCajaChica));			
			
			if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonModificarToolBarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaModificarAsientoContableCajaChica && this.isPermisoActualizarAsientoContableCajaChica));	
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonActualizarToolBarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaActualizarAsientoContableCajaChica  && this.isPermisoActualizarAsientoContableCajaChica));	
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonEliminarToolBarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaEliminarAsientoContableCajaChica && this.isPermisoEliminarAsientoContableCajaChica));
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonCancelarToolBarAsientoContableCajaChica.setVisible(this.isVisibilidadCeldaCancelarAsientoContableCajaChica);				
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonGuardarCambiosToolBarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaGuardarAsientoContableCajaChica && this.isPermisoGuardarCambiosAsientoContableCajaChica));									
			}
			
			this.jButtonGuardarCambiosTablaToolBarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica && this.isPermisoGuardarCambiosAsientoContableCajaChica));									
			
			//TOOLBAR
			
			//MENUS
			
			this.jMenuItemNuevoAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaNuevoAsientoContableCajaChica && this.isPermisoNuevoAsientoContableCajaChica));			
			this.jMenuItemDuplicarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaDuplicarAsientoContableCajaChica && this.isPermisoDuplicarAsientoContableCajaChica));			
			this.jMenuItemCopiarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaCopiarAsientoContableCajaChica && this.isPermisoCopiarAsientoContableCajaChica));			
			this.jMenuItemVerFormAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaVerFormAsientoContableCajaChica && this.isPermisoVerFormAsientoContableCajaChica));			
			this.jMenuItemAbrirOrderByAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaOrdenAsientoContableCajaChica && this.isPermisoOrdenAsientoContableCajaChica));			
			//this.jMenuItemMostrarOcultarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaOrdenAsientoContableCajaChica && this.isPermisoOrdenAsientoContableCajaChica));
			this.jMenuItemDetalleAbrirOrderByAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaOrdenAsientoContableCajaChica && this.isPermisoOrdenAsientoContableCajaChica));			
			//this.jMenuItemDetalleMostrarOcultarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaOrdenAsientoContableCajaChica && this.isPermisoOrdenAsientoContableCajaChica));			
			this.jMenuItemNuevoRelacionesAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica && this.isPermisoNuevoAsientoContableCajaChica));			
			this.jMenuItemNuevoGuardarCambiosAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaNuevoAsientoContableCajaChica && this.isPermisoNuevoAsientoContableCajaChica && this.isPermisoGuardarCambiosAsientoContableCajaChica));									
			
			if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jMenuItemModificarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaModificarAsientoContableCajaChica && this.isPermisoActualizarAsientoContableCajaChica));	
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jMenuItemActualizarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaActualizarAsientoContableCajaChica && this.isPermisoActualizarAsientoContableCajaChica));	
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jMenuItemEliminarAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaEliminarAsientoContableCajaChica && this.isPermisoEliminarAsientoContableCajaChica));
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jMenuItemCancelarAsientoContableCajaChica.setVisible(this.isVisibilidadCeldaCancelarAsientoContableCajaChica);				
			}
			
			this.jMenuItemGuardarCambiosAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaGuardarAsientoContableCajaChica && this.isPermisoGuardarCambiosAsientoContableCajaChica));						
			this.jMenuItemGuardarCambiosTablaAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica && this.isPermisoGuardarCambiosAsientoContableCajaChica));						
			
			//MENUS
			
		} else {
			this.isVisibilidadCeldaNuevoAsientoContableCajaChica=this.jButtonNuevoAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaDuplicarAsientoContableCajaChica=this.jButtonDuplicarAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaCopiarAsientoContableCajaChica=this.jButtonCopiarAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaVerFormAsientoContableCajaChica=this.jButtonVerFormAsientoContableCajaChica.isVisible();
			
			this.isVisibilidadCeldaOrdenAsientoContableCajaChica=this.jButtonAbrirOrderByAsientoContableCajaChica.isVisible();			
			
			this.isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica=this.jButtonNuevoRelacionesAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaModificarAsientoContableCajaChica=this.jButtonModificarAsientoContableCajaChica.isVisible();
			
			if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
			this.isVisibilidadCeldaActualizarAsientoContableCajaChica=this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonActualizarAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaEliminarAsientoContableCajaChica=this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonEliminarAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaCancelarAsientoContableCajaChica=this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonCancelarAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaGuardarAsientoContableCajaChica=this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonGuardarCambiosAsientoContableCajaChica.isVisible();			
			}
			
			this.isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica=this.jButtonGuardarCambiosTablaAsientoContableCajaChica.isVisible();
			
			//TOOLBAR
			
			this.isVisibilidadCeldaNuevoAsientoContableCajaChica=this.jButtonNuevoToolBarAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica=this.jButtonNuevoRelacionesToolBarAsientoContableCajaChica.isVisible();
			
			if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
			this.isVisibilidadCeldaModificarAsientoContableCajaChica=this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonModificarToolBarAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaActualizarAsientoContableCajaChica=this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonActualizarToolBarAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaEliminarAsientoContableCajaChica=this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonEliminarToolBarAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaCancelarAsientoContableCajaChica=this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonCancelarToolBarAsientoContableCajaChica.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarAsientoContableCajaChica=this.jButtonGuardarCambiosToolBarAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica=this.jButtonGuardarCambiosTablaToolBarAsientoContableCajaChica.isVisible();						
			
			//TOOLBAR
			
			//MENUS
			
			this.isVisibilidadCeldaNuevoAsientoContableCajaChica=this.jMenuItemNuevoAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica=this.jMenuItemNuevoRelacionesAsientoContableCajaChica.isVisible();
			
			if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
			this.isVisibilidadCeldaModificarAsientoContableCajaChica=this.jInternalFrameDetalleFormAsientoContableCajaChica.jMenuItemModificarAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaActualizarAsientoContableCajaChica=this.jInternalFrameDetalleFormAsientoContableCajaChica.jMenuItemActualizarAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaEliminarAsientoContableCajaChica=this.jInternalFrameDetalleFormAsientoContableCajaChica.jMenuItemEliminarAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaCancelarAsientoContableCajaChica=this.jInternalFrameDetalleFormAsientoContableCajaChica.jMenuItemCancelarAsientoContableCajaChica.isVisible();
			}
			
			this.isVisibilidadCeldaGuardarAsientoContableCajaChica=this.jMenuItemGuardarCambiosAsientoContableCajaChica.isVisible();
			this.isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica=this.jMenuItemGuardarCambiosTablaAsientoContableCajaChica.isVisible();						
			
			//MENUS
		}
	}
	
	public void inicializarActualizarBindingBotonesAsientoContableCajaChica(Boolean esInicializar) {
		if(AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {			
			if(this.asientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
				//if(this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
				
				this.actualizarEstadoCeldasBotonesConGuardarRelacionesAsientoContableCajaChica();
			}
			
			this.inicializarActualizarBindingBotonesManualAsientoContableCajaChica(true);
			
		} else {	
		}
	}		
	
	public void inicializarActualizarBindingBotonesPermisosManualAsientoContableCajaChica() {
		this.jButtonNuevoAsientoContableCajaChica.setVisible(this.isPermisoNuevoAsientoContableCajaChica);			
		this.jButtonDuplicarAsientoContableCajaChica.setVisible(this.isPermisoDuplicarAsientoContableCajaChica);			
		this.jButtonCopiarAsientoContableCajaChica.setVisible(this.isPermisoCopiarAsientoContableCajaChica);			
		this.jButtonVerFormAsientoContableCajaChica.setVisible(this.isPermisoVerFormAsientoContableCajaChica);			
		
		this.jButtonAbrirOrderByAsientoContableCajaChica.setVisible(this.isPermisoOrdenAsientoContableCajaChica);					
		
		this.jButtonNuevoRelacionesAsientoContableCajaChica.setVisible(this.isPermisoNuevoAsientoContableCajaChica);			
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonModificarAsientoContableCajaChica.setVisible(this.isPermisoActualizarAsientoContableCajaChica);	
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonActualizarAsientoContableCajaChica.setVisible(this.isPermisoActualizarAsientoContableCajaChica);	
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonEliminarAsientoContableCajaChica.setVisible(this.isPermisoEliminarAsientoContableCajaChica);
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonCancelarAsientoContableCajaChica.setVisible(this.isVisibilidadCeldaCancelarAsientoContableCajaChica);						
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonGuardarCambiosAsientoContableCajaChica.setVisible(this.isPermisoGuardarCambiosAsientoContableCajaChica);							
		}
		
		this.jButtonGuardarCambiosTablaAsientoContableCajaChica.setVisible(this.isPermisoActualizarAsientoContableCajaChica);
	}
	
	public void inicializarActualizarBindingBotonesPermisosManualFormDetalleAsientoContableCajaChica() {
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonModificarAsientoContableCajaChica.setVisible(this.isPermisoActualizarAsientoContableCajaChica);	
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonActualizarAsientoContableCajaChica.setVisible(this.isPermisoActualizarAsientoContableCajaChica);	
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonEliminarAsientoContableCajaChica.setVisible(this.isPermisoEliminarAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonCancelarAsientoContableCajaChica.setVisible(this.isVisibilidadCeldaCancelarAsientoContableCajaChica);							
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonGuardarCambiosAsientoContableCajaChica.setVisible((this.isVisibilidadCeldaGuardarAsientoContableCajaChica && this.isPermisoGuardarCambiosAsientoContableCajaChica));			
	}
	
	public void inicializarActualizarBindingBotonesPermisosAsientoContableCajaChica() {
		if(AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL) {
			this.inicializarActualizarBindingBotonesPermisosManualAsientoContableCajaChica();
		} else {
		}
	}
	
	
	public void refrescarBindingBotonesAsientoContableCajaChica() {
	}
	
	public void jTableDatosAsientoContableCajaChicaListSelectionListener(javax.swing.event.ListSelectionEvent evt) throws Exception { 
		try {
			this.seleccionarAsientoContableCajaChica(null,evt,-1);
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void jButtonidAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getId()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id = "+this.asientocontablecajachica.getId().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empresaAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempresa=true;

			idTienePermisoempresa=this.tienePermisosUsuarioEnPaginaWebAsientoContableCajaChica(EmpresaConstantesFunciones.CLASSNAME);

			if(idTienePermisoempresa) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);

				this.empresaBeanSwingJInternalFrame=new EmpresaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empresaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empresaBeanSwingJInternalFrame.getEmpresaLogic().setConnexion(this.asientocontablecajachicaLogic.getConnexion());

				if(this.asientocontablecajachica.getid_empresa()!=null) {
					this.empresaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empresaBeanSwingJInternalFrame.setIdActual(this.asientocontablecajachica.getid_empresa());
					this.empresaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empresaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpresa();
				}

				JInternalFrameBase jinternalFrame =this.empresaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
				TitledBorder titledBorderempresa=(TitledBorder)this.empresaBeanSwingJInternalFrame.jScrollPanelDatosEmpresa.getBorder();

				titledBorderempresa.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Empresa");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empresaAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getid_empresa()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empresa = "+this.asientocontablecajachica.getid_empresa().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_sucursalAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisosucursal=true;

			idTienePermisosucursal=this.tienePermisosUsuarioEnPaginaWebAsientoContableCajaChica(SucursalConstantesFunciones.CLASSNAME);

			if(idTienePermisosucursal) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);

				this.sucursalBeanSwingJInternalFrame=new SucursalBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.sucursalBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.sucursalBeanSwingJInternalFrame.getSucursalLogic().setConnexion(this.asientocontablecajachicaLogic.getConnexion());

				if(this.asientocontablecajachica.getid_sucursal()!=null) {
					this.sucursalBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.sucursalBeanSwingJInternalFrame.setIdActual(this.asientocontablecajachica.getid_sucursal());
					this.sucursalBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.sucursalBeanSwingJInternalFrame.inicializarActualizarBindingTablaSucursal();
				}

				JInternalFrameBase jinternalFrame =this.sucursalBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
				TitledBorder titledBordersucursal=(TitledBorder)this.sucursalBeanSwingJInternalFrame.jScrollPanelDatosSucursal.getBorder();

				titledBordersucursal.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Sucursal");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_sucursalAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getid_sucursal()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_sucursal = "+this.asientocontablecajachica.getid_sucursal().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_ejercicioAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoejercicio=true;

			idTienePermisoejercicio=this.tienePermisosUsuarioEnPaginaWebAsientoContableCajaChica(EjercicioConstantesFunciones.CLASSNAME);

			if(idTienePermisoejercicio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);

				this.ejercicioBeanSwingJInternalFrame=new EjercicioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.ejercicioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.ejercicioBeanSwingJInternalFrame.getEjercicioLogic().setConnexion(this.asientocontablecajachicaLogic.getConnexion());

				if(this.asientocontablecajachica.getid_ejercicio()!=null) {
					this.ejercicioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.ejercicioBeanSwingJInternalFrame.setIdActual(this.asientocontablecajachica.getid_ejercicio());
					this.ejercicioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.ejercicioBeanSwingJInternalFrame.inicializarActualizarBindingTablaEjercicio();
				}

				JInternalFrameBase jinternalFrame =this.ejercicioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
				TitledBorder titledBorderejercicio=(TitledBorder)this.ejercicioBeanSwingJInternalFrame.jScrollPanelDatosEjercicio.getBorder();

				titledBorderejercicio.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Ejercicio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_ejercicioAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getid_ejercicio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_ejercicio = "+this.asientocontablecajachica.getid_ejercicio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_periodoAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoperiodo=true;

			idTienePermisoperiodo=this.tienePermisosUsuarioEnPaginaWebAsientoContableCajaChica(PeriodoConstantesFunciones.CLASSNAME);

			if(idTienePermisoperiodo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);

				this.periodoBeanSwingJInternalFrame=new PeriodoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.periodoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.periodoBeanSwingJInternalFrame.getPeriodoLogic().setConnexion(this.asientocontablecajachicaLogic.getConnexion());

				if(this.asientocontablecajachica.getid_periodo()!=null) {
					this.periodoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.periodoBeanSwingJInternalFrame.setIdActual(this.asientocontablecajachica.getid_periodo());
					this.periodoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.periodoBeanSwingJInternalFrame.inicializarActualizarBindingTablaPeriodo();
				}

				JInternalFrameBase jinternalFrame =this.periodoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
				TitledBorder titledBorderperiodo=(TitledBorder)this.periodoBeanSwingJInternalFrame.jScrollPanelDatosPeriodo.getBorder();

				titledBorderperiodo.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Periodo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_periodoAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getid_periodo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_periodo = "+this.asientocontablecajachica.getid_periodo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_usuarioAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisousuario=true;

			idTienePermisousuario=this.tienePermisosUsuarioEnPaginaWebAsientoContableCajaChica(UsuarioConstantesFunciones.CLASSNAME);

			if(idTienePermisousuario) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);

				this.usuarioBeanSwingJInternalFrame=new UsuarioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.usuarioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.usuarioBeanSwingJInternalFrame.getUsuarioLogic().setConnexion(this.asientocontablecajachicaLogic.getConnexion());

				if(this.asientocontablecajachica.getid_usuario()!=null) {
					this.usuarioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.usuarioBeanSwingJInternalFrame.setIdActual(this.asientocontablecajachica.getid_usuario());
					this.usuarioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.usuarioBeanSwingJInternalFrame.inicializarActualizarBindingTablaUsuario();
				}

				JInternalFrameBase jinternalFrame =this.usuarioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
				TitledBorder titledBorderusuario=(TitledBorder)this.usuarioBeanSwingJInternalFrame.jScrollPanelDatosUsuario.getBorder();

				titledBorderusuario.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Usuario");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_usuarioAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getid_usuario()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_usuario = "+this.asientocontablecajachica.getid_usuario().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_anioAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoanio=true;

			idTienePermisoanio=this.tienePermisosUsuarioEnPaginaWebAsientoContableCajaChica(AnioConstantesFunciones.CLASSNAME);

			if(idTienePermisoanio) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);

				this.anioBeanSwingJInternalFrame=new AnioBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.anioBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.anioBeanSwingJInternalFrame.getAnioLogic().setConnexion(this.asientocontablecajachicaLogic.getConnexion());

				if(this.asientocontablecajachica.getid_anio()!=null) {
					this.anioBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.anioBeanSwingJInternalFrame.setIdActual(this.asientocontablecajachica.getid_anio());
					this.anioBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.anioBeanSwingJInternalFrame.inicializarActualizarBindingTablaAnio();
				}

				JInternalFrameBase jinternalFrame =this.anioBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
				TitledBorder titledBorderanio=(TitledBorder)this.anioBeanSwingJInternalFrame.jScrollPanelDatosAnio.getBorder();

				titledBorderanio.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Anio");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_anioAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getid_anio()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_anio = "+this.asientocontablecajachica.getid_anio().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_mesAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomes=true;

			idTienePermisomes=this.tienePermisosUsuarioEnPaginaWebAsientoContableCajaChica(MesConstantesFunciones.CLASSNAME);

			if(idTienePermisomes) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);

				this.mesBeanSwingJInternalFrame=new MesBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.mesBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.mesBeanSwingJInternalFrame.getMesLogic().setConnexion(this.asientocontablecajachicaLogic.getConnexion());

				if(this.asientocontablecajachica.getid_mes()!=null) {
					this.mesBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.mesBeanSwingJInternalFrame.setIdActual(this.asientocontablecajachica.getid_mes());
					this.mesBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.mesBeanSwingJInternalFrame.inicializarActualizarBindingTablaMes();
				}

				JInternalFrameBase jinternalFrame =this.mesBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
				TitledBorder titledBordermes=(TitledBorder)this.mesBeanSwingJInternalFrame.jScrollPanelDatosMes.getBorder();

				titledBordermes.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Mes");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_mesAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getid_mes()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_mes = "+this.asientocontablecajachica.getid_mes().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonsecuencialAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getsecuencial()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where secuencial = "+this.asientocontablecajachica.getsecuencial().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_monedaAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomoneda=true;

			idTienePermisomoneda=this.tienePermisosUsuarioEnPaginaWebAsientoContableCajaChica(MonedaConstantesFunciones.CLASSNAME);

			if(idTienePermisomoneda) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);

				this.monedaBeanSwingJInternalFrame=new MonedaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.monedaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.monedaBeanSwingJInternalFrame.getMonedaLogic().setConnexion(this.asientocontablecajachicaLogic.getConnexion());

				if(this.asientocontablecajachica.getid_moneda()!=null) {
					this.monedaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.monedaBeanSwingJInternalFrame.setIdActual(this.asientocontablecajachica.getid_moneda());
					this.monedaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.monedaBeanSwingJInternalFrame.inicializarActualizarBindingTablaMoneda();
				}

				JInternalFrameBase jinternalFrame =this.monedaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
				TitledBorder titledBordermoneda=(TitledBorder)this.monedaBeanSwingJInternalFrame.jScrollPanelDatosMoneda.getBorder();

				titledBordermoneda.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Moneda");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_monedaAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getid_moneda()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_moneda = "+this.asientocontablecajachica.getid_moneda().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonfechaAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getfecha()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where fecha = '"+Funciones2.getStringPostgresDate(this.asientocontablecajachica.getfecha())+"' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_empleadoAsientoContableCajaChicaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="Empleado";

			if(!this.sFinalQueryGeneral_empleado.equals("")) {
				this.empleadoBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_empleado);
				this.empleadoBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.empleadoBeanSwingJInternalFrame.procesarBusqueda(this.empleadoBeanSwingJInternalFrame.sAccionBusqueda);
				this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingEmpleado(false);
			}

			if(!this.sFinalQueryComboEmpleado.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderAsientoContableCajaChica=null;
			TitledBorder titledBorderempleado=null;

			if(!this.jScrollPanelDatosAsientoContableCajaChica.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
				titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Empleado");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_empleadoAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoempleado=true;

			idTienePermisoempleado=this.tienePermisosUsuarioEnPaginaWebAsientoContableCajaChica(EmpleadoConstantesFunciones.CLASSNAME);

			if(idTienePermisoempleado) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);

				this.empleadoBeanSwingJInternalFrame=new EmpleadoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.empleadoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.empleadoBeanSwingJInternalFrame.getEmpleadoLogic().setConnexion(this.asientocontablecajachicaLogic.getConnexion());

				if(this.asientocontablecajachica.getid_empleado()!=null) {
					this.empleadoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.empleadoBeanSwingJInternalFrame.setIdActual(this.asientocontablecajachica.getid_empleado());
					this.empleadoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.empleadoBeanSwingJInternalFrame.inicializarActualizarBindingTablaEmpleado();
				}

				JInternalFrameBase jinternalFrame =this.empleadoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
				TitledBorder titledBorderempleado=(TitledBorder)this.empleadoBeanSwingJInternalFrame.jScrollPanelDatosEmpleado.getBorder();

				titledBorderempleado.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Empleado");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_empleadoAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getid_empleado()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_empleado = "+this.asientocontablecajachica.getid_empleado().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_estado_asiento_contableAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisoestadoasientocontablecajachica=true;

			idTienePermisoestadoasientocontablecajachica=this.tienePermisosUsuarioEnPaginaWebAsientoContableCajaChica(EstadoAsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			if(idTienePermisoestadoasientocontablecajachica) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);

				this.estadoasientocontablecajachicaBeanSwingJInternalFrame=new EstadoAsientoContableCajaChicaBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.estadoasientocontablecajachicaBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.estadoasientocontablecajachicaBeanSwingJInternalFrame.getEstadoAsientoContableCajaChicaLogic().setConnexion(this.asientocontablecajachicaLogic.getConnexion());

				if(this.asientocontablecajachica.getid_estado_asiento_contable()!=null) {
					this.estadoasientocontablecajachicaBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.estadoasientocontablecajachicaBeanSwingJInternalFrame.setIdActual(this.asientocontablecajachica.getid_estado_asiento_contable());
					this.estadoasientocontablecajachicaBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.estadoasientocontablecajachicaBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.estadoasientocontablecajachicaBeanSwingJInternalFrame.inicializarActualizarBindingTablaEstadoAsientoContableCajaChica();
				}

				JInternalFrameBase jinternalFrame =this.estadoasientocontablecajachicaBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
				TitledBorder titledBorderestadoasientocontablecajachica=(TitledBorder)this.estadoasientocontablecajachicaBeanSwingJInternalFrame.jScrollPanelDatosEstadoAsientoContableCajaChica.getBorder();

				titledBorderestadoasientocontablecajachica.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Estado Asiento Contable Caja Chica");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_estado_asiento_contableAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getid_estado_asiento_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_estado_asiento_contable = "+this.asientocontablecajachica.getid_estado_asiento_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtones_proveedorAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getes_proveedor()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where es_proveedor = "+this.asientocontablecajachica.getes_proveedor().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_clienteAsientoContableCajaChicaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.clienteBeanSwingJInternalFrame.sTipoBusqueda="Cliente";

			if(!this.sFinalQueryGeneral_cliente.equals("")) {
				this.clienteBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cliente);
				this.clienteBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.clienteBeanSwingJInternalFrame.procesarBusqueda(this.clienteBeanSwingJInternalFrame.sAccionBusqueda);
				this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingCliente(false);
			}

			if(!this.sFinalQueryComboCliente.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderAsientoContableCajaChica=null;
			TitledBorder titledBordercliente=null;

			if(!this.jScrollPanelDatosAsientoContableCajaChica.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
				titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Cliente");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_clienteAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocliente=true;

			idTienePermisocliente=this.tienePermisosUsuarioEnPaginaWebAsientoContableCajaChica(ClienteConstantesFunciones.CLASSNAME);

			if(idTienePermisocliente) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);

				this.clienteBeanSwingJInternalFrame=new ClienteBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.clienteBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.clienteBeanSwingJInternalFrame.getClienteLogic().setConnexion(this.asientocontablecajachicaLogic.getConnexion());

				if(this.asientocontablecajachica.getid_cliente()!=null) {
					this.clienteBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.clienteBeanSwingJInternalFrame.setIdActual(this.asientocontablecajachica.getid_cliente());
					this.clienteBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.clienteBeanSwingJInternalFrame.inicializarActualizarBindingTablaCliente();
				}

				JInternalFrameBase jinternalFrame =this.clienteBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
				TitledBorder titledBordercliente=(TitledBorder)this.clienteBeanSwingJInternalFrame.jScrollPanelDatosCliente.getBorder();

				titledBordercliente.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Cliente");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_clienteAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getid_cliente()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cliente = "+this.asientocontablecajachica.getid_cliente().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_transaccionAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotransaccion=true;

			idTienePermisotransaccion=this.tienePermisosUsuarioEnPaginaWebAsientoContableCajaChica(TransaccionConstantesFunciones.CLASSNAME);

			if(idTienePermisotransaccion) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);

				this.transaccionBeanSwingJInternalFrame=new TransaccionBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.transaccionBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.transaccionBeanSwingJInternalFrame.getTransaccionLogic().setConnexion(this.asientocontablecajachicaLogic.getConnexion());

				if(this.asientocontablecajachica.getid_transaccion()!=null) {
					this.transaccionBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.transaccionBeanSwingJInternalFrame.setIdActual(this.asientocontablecajachica.getid_transaccion());
					this.transaccionBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.transaccionBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.transaccionBeanSwingJInternalFrame.inicializarActualizarBindingTablaTransaccion();
				}

				JInternalFrameBase jinternalFrame =this.transaccionBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
				TitledBorder titledBordertransaccion=(TitledBorder)this.transaccionBeanSwingJInternalFrame.jScrollPanelDatosTransaccion.getBorder();

				titledBordertransaccion.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Transaccion");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_transaccionAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getid_transaccion()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_transaccion = "+this.asientocontablecajachica.getid_transaccion().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_documentoAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipodocumento=true;

			idTienePermisotipodocumento=this.tienePermisosUsuarioEnPaginaWebAsientoContableCajaChica(TipoDocumentoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipodocumento) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);

				this.tipodocumentoBeanSwingJInternalFrame=new TipoDocumentoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipodocumentoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipodocumentoBeanSwingJInternalFrame.getTipoDocumentoLogic().setConnexion(this.asientocontablecajachicaLogic.getConnexion());

				if(this.asientocontablecajachica.getid_tipo_documento()!=null) {
					this.tipodocumentoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipodocumentoBeanSwingJInternalFrame.setIdActual(this.asientocontablecajachica.getid_tipo_documento());
					this.tipodocumentoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipodocumentoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipodocumentoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoDocumento();
				}

				JInternalFrameBase jinternalFrame =this.tipodocumentoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
				TitledBorder titledBordertipodocumento=(TitledBorder)this.tipodocumentoBeanSwingJInternalFrame.jScrollPanelDatosTipoDocumento.getBorder();

				titledBordertipodocumento.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Tipo Documento");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_documentoAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getid_tipo_documento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_documento = "+this.asientocontablecajachica.getid_tipo_documento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_cuenta_contableAsientoContableCajaChicaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {
			this.cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.BUSQUEDA,false,false,false,true);
			this.cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);
			this.cuentacontableBeanSwingJInternalFrame.sTipoBusqueda="CuentaContable";

			if(!this.sFinalQueryGeneral_cuentacontable.equals("")) {
				this.cuentacontableBeanSwingJInternalFrame.setsFinalQueryGeneral(this.sFinalQueryGeneral_cuentacontable);
				this.cuentacontableBeanSwingJInternalFrame.sAccionBusqueda="Query";


				this.cuentacontableBeanSwingJInternalFrame.procesarBusqueda(this.cuentacontableBeanSwingJInternalFrame.sAccionBusqueda);
				this.cuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingCuentaContable(false);
			}

			if(!this.sFinalQueryComboCuentaContable.equals("") && false) {
			}


			JInternalFrameBase jinternalFrame =this.cuentacontableBeanSwingJInternalFrame;
			jinternalFrame.setAutoscrolls(true);
			//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
			jinternalFrame.setVisible(true); 


			TitledBorder titledBorderAsientoContableCajaChica=null;
			TitledBorder titledBordercuentacontable=null;

			if(!this.jScrollPanelDatosAsientoContableCajaChica.getBorder().getClass().equals(EmptyBorder.class)) {
				titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
				titledBordercuentacontable=(TitledBorder)this.cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontable.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Cuenta Contable");
			}

			if(!Constantes.CON_VARIAS_VENTANAS) {
				MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
			}

			this.jDesktopPane.add(jinternalFrame);

			jinternalFrame.setSelected(true);

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}

	public void jButtonid_cuenta_contableAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisocuentacontable=true;

			idTienePermisocuentacontable=this.tienePermisosUsuarioEnPaginaWebAsientoContableCajaChica(CuentaContableConstantesFunciones.CLASSNAME);

			if(idTienePermisocuentacontable) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);

				this.cuentacontableBeanSwingJInternalFrame=new CuentaContableBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.cuentacontableBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.cuentacontableBeanSwingJInternalFrame.getCuentaContableLogic().setConnexion(this.asientocontablecajachicaLogic.getConnexion());

				if(this.asientocontablecajachica.getid_cuenta_contable()!=null) {
					this.cuentacontableBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.cuentacontableBeanSwingJInternalFrame.setIdActual(this.asientocontablecajachica.getid_cuenta_contable());
					this.cuentacontableBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.cuentacontableBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.cuentacontableBeanSwingJInternalFrame.inicializarActualizarBindingTablaCuentaContable();
				}

				JInternalFrameBase jinternalFrame =this.cuentacontableBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
				TitledBorder titledBordercuentacontable=(TitledBorder)this.cuentacontableBeanSwingJInternalFrame.jScrollPanelDatosCuentaContable.getBorder();

				titledBordercuentacontable.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Cuenta Contable");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_cuenta_contableAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getid_cuenta_contable()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_cuenta_contable = "+this.asientocontablecajachica.getid_cuenta_contable().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtondetalleAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getdetalle()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where detalle like '%"+this.asientocontablecajachica.getdetalle()+"%' ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_moduloAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisomodulo=true;

			idTienePermisomodulo=this.tienePermisosUsuarioEnPaginaWebAsientoContableCajaChica(ModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisomodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);

				this.moduloBeanSwingJInternalFrame=new ModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.moduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.moduloBeanSwingJInternalFrame.getModuloLogic().setConnexion(this.asientocontablecajachicaLogic.getConnexion());

				if(this.asientocontablecajachica.getid_modulo()!=null) {
					this.moduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.moduloBeanSwingJInternalFrame.setIdActual(this.asientocontablecajachica.getid_modulo());
					this.moduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.moduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaModulo();
				}

				JInternalFrameBase jinternalFrame =this.moduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
				TitledBorder titledBordermodulo=(TitledBorder)this.moduloBeanSwingJInternalFrame.jScrollPanelDatosModulo.getBorder();

				titledBordermodulo.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_moduloAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getid_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_modulo = "+this.asientocontablecajachica.getid_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_movimientoAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipomovimiento=true;

			idTienePermisotipomovimiento=this.tienePermisosUsuarioEnPaginaWebAsientoContableCajaChica(TipoMovimientoConstantesFunciones.CLASSNAME);

			if(idTienePermisotipomovimiento) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);

				this.tipomovimientoBeanSwingJInternalFrame=new TipoMovimientoBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipomovimientoBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipomovimientoBeanSwingJInternalFrame.getTipoMovimientoLogic().setConnexion(this.asientocontablecajachicaLogic.getConnexion());

				if(this.asientocontablecajachica.getid_tipo_movimiento()!=null) {
					this.tipomovimientoBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipomovimientoBeanSwingJInternalFrame.setIdActual(this.asientocontablecajachica.getid_tipo_movimiento());
					this.tipomovimientoBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipomovimientoBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipomovimientoBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoMovimiento();
				}

				JInternalFrameBase jinternalFrame =this.tipomovimientoBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
				TitledBorder titledBordertipomovimiento=(TitledBorder)this.tipomovimientoBeanSwingJInternalFrame.jScrollPanelDatosTipoMovimiento.getBorder();

				titledBordertipomovimiento.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Tipo Movimiento");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_movimientoAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getid_tipo_movimiento()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_movimiento = "+this.asientocontablecajachica.getid_tipo_movimiento().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_transaccion_moduloAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipotransaccionmodulo=true;

			idTienePermisotipotransaccionmodulo=this.tienePermisosUsuarioEnPaginaWebAsientoContableCajaChica(TipoTransaccionModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisotipotransaccionmodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);

				this.tipotransaccionmoduloBeanSwingJInternalFrame=new TipoTransaccionModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipotransaccionmoduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipotransaccionmoduloBeanSwingJInternalFrame.getTipoTransaccionModuloLogic().setConnexion(this.asientocontablecajachicaLogic.getConnexion());

				if(this.asientocontablecajachica.getid_tipo_transaccion_modulo()!=null) {
					this.tipotransaccionmoduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipotransaccionmoduloBeanSwingJInternalFrame.setIdActual(this.asientocontablecajachica.getid_tipo_transaccion_modulo());
					this.tipotransaccionmoduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipotransaccionmoduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipotransaccionmoduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoTransaccionModulo();
				}

				JInternalFrameBase jinternalFrame =this.tipotransaccionmoduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
				TitledBorder titledBordertipotransaccionmodulo=(TitledBorder)this.tipotransaccionmoduloBeanSwingJInternalFrame.jScrollPanelDatosTipoTransaccionModulo.getBorder();

				titledBordertipotransaccionmodulo.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Tipo Transaccion Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_transaccion_moduloAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getid_tipo_transaccion_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_transaccion_modulo = "+this.asientocontablecajachica.getid_tipo_transaccion_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	public void jButtonid_tipo_movimiento_moduloAsientoContableCajaChicaUpdateActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			Boolean idTienePermisotipomovimientomodulo=true;

			idTienePermisotipomovimientomodulo=this.tienePermisosUsuarioEnPaginaWebAsientoContableCajaChica(TipoMovimientoModuloConstantesFunciones.CLASSNAME);

			if(idTienePermisotipomovimientomodulo) {
				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow<0 && this.jTableDatosAsientoContableCajaChica.getRowCount()>0) {
					intSelectedRow =0;
					this.jTableDatosAsientoContableCajaChica.setRowSelectionInterval(intSelectedRow,intSelectedRow);
				}
				//ARCHITECTURE
				/*
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				*/
				//ARCHITECTURE

				this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
				this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);

				this.tipomovimientomoduloBeanSwingJInternalFrame=new TipoMovimientoModuloBeanSwingJInternalFrame(true,true,this.jDesktopPane,this.usuarioActual,this.resumenUsuarioActual,this.moduloActual,this.opcionActual,this.parametroGeneralSg,this.parametroGeneralUsuario,PaginaTipo.AUXILIAR,false,false,false,true);
				this.tipomovimientomoduloBeanSwingJInternalFrame.setJInternalFrameParent(this);

				this.tipomovimientomoduloBeanSwingJInternalFrame.getTipoMovimientoModuloLogic().setConnexion(this.asientocontablecajachicaLogic.getConnexion());

				if(this.asientocontablecajachica.getid_tipo_movimiento_modulo()!=null) {
					this.tipomovimientomoduloBeanSwingJInternalFrame.sTipoBusqueda="PorId";
					this.tipomovimientomoduloBeanSwingJInternalFrame.setIdActual(this.asientocontablecajachica.getid_tipo_movimiento_modulo());
					this.tipomovimientomoduloBeanSwingJInternalFrame.procesarBusqueda("PorId");
					this.tipomovimientomoduloBeanSwingJInternalFrame.setsAccionBusqueda("PorId");
					this.tipomovimientomoduloBeanSwingJInternalFrame.inicializarActualizarBindingTablaTipoMovimientoModulo();
				}

				JInternalFrameBase jinternalFrame =this.tipomovimientomoduloBeanSwingJInternalFrame;
				jinternalFrame.setAutoscrolls(true);
				//frame.setSize(screenSize.width-inset*7 , screenSize.height-inset*9);
				jinternalFrame.setVisible(true); 


				TitledBorder titledBorderAsientoContableCajaChica=(TitledBorder)this.jScrollPanelDatosAsientoContableCajaChica.getBorder();
				TitledBorder titledBordertipomovimientomodulo=(TitledBorder)this.tipomovimientomoduloBeanSwingJInternalFrame.jScrollPanelDatosTipoMovimientoModulo.getBorder();

				titledBordertipomovimientomodulo.setTitle(titledBorderAsientoContableCajaChica.getTitle() + " -> Tipo Movimiento Modulo");


				if(!Constantes.CON_VARIAS_VENTANAS) {
					MainJFrame.cerrarJInternalFramesExistentes(this.jDesktopPane,jinternalFrame);
				}

				this.jDesktopPane.add(jinternalFrame);

				jinternalFrame.setSelected(true);
			} else {
				throw new Exception("NO TIENE PERMISO PARA TRABAJAR CON ESTA INFORMACION");
			}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}


		} catch(Exception e) {

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}

		}
	}

	public void jButtonid_tipo_movimiento_moduloAsientoContableCajaChicaBusquedaActionPerformed(java.awt.event.ActionEvent evt) throws Exception {
		try {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
				}

				//TOCA TRAER NUEVAMENTE, YA QUE SE PIERDE REGISTRO ACTUAL
				int intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();

				if(intSelectedRow>-1) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.getasientocontablecajachica(),true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
					//ARCHITECTURE
					/*
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
						this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					*/
					//ARCHITECTURE

				} else {
					if(this.asientocontablecajachica==null) {
						this.asientocontablecajachica = new AsientoContableCajaChica();
					}

					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);
				}

				if(this.asientocontablecajachica.getid_tipo_movimiento_modulo()!=null) {

					this.sAccionBusqueda="Query";

					this.sFinalQueryGeneral=" where id_tipo_movimiento_modulo = "+this.asientocontablecajachica.getid_tipo_movimiento_modulo().toString()+" ";

					if(Constantes.ISDEVELOPING) {
						System.out.println(this.sFinalQueryGeneral);
					}

					this.procesarBusqueda(this.sAccionBusqueda);

					this.inicializarActualizarBindingAsientoContableCajaChica(false);
				}

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
				}

			} catch(Exception e) {

				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
				}

				FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

			} finally {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
				}

			}
		}

	
	
	public void jButtonFK_IdAnioAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);

			this.getAsientoContableCajaChicasFK_IdAnio();

			this.inicializarActualizarBindingAsientoContableCajaChica(false);

			//if(AsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdClienteAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);

			this.getAsientoContableCajaChicasFK_IdCliente();

			this.inicializarActualizarBindingAsientoContableCajaChica(false);

			//if(AsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdCuentaContableAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);

			this.getAsientoContableCajaChicasFK_IdCuentaContable();

			this.inicializarActualizarBindingAsientoContableCajaChica(false);

			//if(AsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEjercicioAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);

			this.getAsientoContableCajaChicasFK_IdEjercicio();

			this.inicializarActualizarBindingAsientoContableCajaChica(false);

			//if(AsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpleadoAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);

			this.getAsientoContableCajaChicasFK_IdEmpleado();

			this.inicializarActualizarBindingAsientoContableCajaChica(false);

			//if(AsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEmpresaAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);

			this.getAsientoContableCajaChicasFK_IdEmpresa();

			this.inicializarActualizarBindingAsientoContableCajaChica(false);

			//if(AsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdEstadoAsientoContableCajaChicaAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);

			this.getAsientoContableCajaChicasFK_IdEstadoAsientoContableCajaChica();

			this.inicializarActualizarBindingAsientoContableCajaChica(false);

			//if(AsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMesAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);

			this.getAsientoContableCajaChicasFK_IdMes();

			this.inicializarActualizarBindingAsientoContableCajaChica(false);

			//if(AsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdModuloAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);

			this.getAsientoContableCajaChicasFK_IdModulo();

			this.inicializarActualizarBindingAsientoContableCajaChica(false);

			//if(AsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdMonedaAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);

			this.getAsientoContableCajaChicasFK_IdMoneda();

			this.inicializarActualizarBindingAsientoContableCajaChica(false);

			//if(AsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdPeriodoAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);

			this.getAsientoContableCajaChicasFK_IdPeriodo();

			this.inicializarActualizarBindingAsientoContableCajaChica(false);

			//if(AsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdSucursalAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);

			this.getAsientoContableCajaChicasFK_IdSucursal();

			this.inicializarActualizarBindingAsientoContableCajaChica(false);

			//if(AsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoDocumentoAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);

			this.getAsientoContableCajaChicasFK_IdTipoDocumento();

			this.inicializarActualizarBindingAsientoContableCajaChica(false);

			//if(AsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoMovimientoAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);

			this.getAsientoContableCajaChicasFK_IdTipoMovimiento();

			this.inicializarActualizarBindingAsientoContableCajaChica(false);

			//if(AsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoMovimientoModuloAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);

			this.getAsientoContableCajaChicasFK_IdTipoMovimientoModulo();

			this.inicializarActualizarBindingAsientoContableCajaChica(false);

			//if(AsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTipoTransaccionModuloAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);

			this.getAsientoContableCajaChicasFK_IdTipoTransaccionModulo();

			this.inicializarActualizarBindingAsientoContableCajaChica(false);

			//if(AsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdTransaccionAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);

			this.getAsientoContableCajaChicasFK_IdTransaccion();

			this.inicializarActualizarBindingAsientoContableCajaChica(false);

			//if(AsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	public void jButtonFK_IdUsuarioAsientoContableCajaChicaActionPerformed(ActionEvent evt) throws Exception {
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.getNewConnexionToDeep("");
			}

			this.iNumeroPaginacionPagina=0;
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);

			this.getAsientoContableCajaChicasFK_IdUsuario();

			this.inicializarActualizarBindingAsientoContableCajaChica(false);

			//if(AsientoContableCajaChicaBeanSwingJInternalFrame.ISBINDING_MANUAL) {
			//this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			//}

			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.commitNewConnexionToDeep();
			}
		} catch(Exception e) {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.rollbackNewConnexionToDeep();
			}

			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);

		} finally {
			if(Constantes.ISUSAEJBLOGICLAYER) {
				this.asientocontablecajachicaLogic.closeNewConnexionToDeep();
			}
		}
	}

	
	public void closingInternalFrameAsientoContableCajaChica() {
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
		

		if(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame!=null) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.setVisible(false);
			this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.dispose();
			this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame=null;
		}

		if(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFramePopup!=null) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFramePopup.setVisible(false);
			this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFramePopup.dispose();
			this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFramePopup=null;
		}	
		
		
		}
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.setVisible(false);	    			
			this.jInternalFrameDetalleFormAsientoContableCajaChica.dispose();
			this.jInternalFrameDetalleFormAsientoContableCajaChica=null;
		}
		
		
		if(this.jInternalFrameReporteDinamicoAsientoContableCajaChica!=null) {
			this.jInternalFrameReporteDinamicoAsientoContableCajaChica.setVisible(false);	    			
			this.jInternalFrameReporteDinamicoAsientoContableCajaChica.dispose();
			this.jInternalFrameReporteDinamicoAsientoContableCajaChica=null;
		}
		
		if(this.jInternalFrameImportacionAsientoContableCajaChica!=null) {
			this.jInternalFrameImportacionAsientoContableCajaChica.setVisible(false);	    			
			this.jInternalFrameImportacionAsientoContableCajaChica.dispose();
			this.jInternalFrameImportacionAsientoContableCajaChica=null;
		}		
		
		
		this.setVisible(false);
		this.dispose();
		//this=null;
	}
	
	
	
	public void jButtonActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {			
			this.startProcessAsientoContableCajaChica();
			
			AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
			
			
			if(sTipo.equals("NuevoAsientoContableCajaChica")) {
				jButtonNuevoAsientoContableCajaChicaActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarAsientoContableCajaChica")) {
				jButtonDuplicarAsientoContableCajaChicaActionPerformed(evt,false);
			} else if(sTipo.equals("CopiarAsientoContableCajaChica")) {
				jButtonCopiarAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("VerFormAsientoContableCajaChica")) {
				jButtonVerFormAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("NuevoToolBarAsientoContableCajaChica")) {
				jButtonNuevoAsientoContableCajaChicaActionPerformed(evt,false);
			} else if(sTipo.equals("DuplicarToolBarAsientoContableCajaChica")) {
				jButtonDuplicarAsientoContableCajaChicaActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemNuevoAsientoContableCajaChica")) {
				jButtonNuevoAsientoContableCajaChicaActionPerformed(evt,false);
			} else if(sTipo.equals("MenuItemDuplicarAsientoContableCajaChica")) {
				jButtonDuplicarAsientoContableCajaChicaActionPerformed(evt,false);
			} else if(sTipo.equals("NuevoRelacionesAsientoContableCajaChica")) {
				jButtonNuevoAsientoContableCajaChicaActionPerformed(evt,true);
			} else if(sTipo.equals("NuevoRelacionesToolBarAsientoContableCajaChica")) {
				jButtonNuevoAsientoContableCajaChicaActionPerformed(evt,true);
			} else if(sTipo.equals("MenuItemNuevoRelacionesAsientoContableCajaChica")) {
				jButtonNuevoAsientoContableCajaChicaActionPerformed(evt,true);
			} else if(sTipo.equals("ModificarAsientoContableCajaChica")) {
				jButtonModificarAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("ModificarToolBarAsientoContableCajaChica")) {
				jButtonModificarAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemModificarAsientoContableCajaChica")) {
				jButtonModificarAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("ActualizarAsientoContableCajaChica")) {
				jButtonActualizarAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("ActualizarToolBarAsientoContableCajaChica")) {
				jButtonActualizarAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemActualizarAsientoContableCajaChica")) {
				jButtonActualizarAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("EliminarAsientoContableCajaChica")) {
				jButtonEliminarAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("EliminarToolBarAsientoContableCajaChica")) {
				jButtonEliminarAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemEliminarAsientoContableCajaChica")) {
				jButtonEliminarAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("CancelarAsientoContableCajaChica")) {
				jButtonCancelarAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("CancelarToolBarAsientoContableCajaChica")) {
				jButtonCancelarAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCancelarAsientoContableCajaChica")) {
				jButtonCancelarAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("CerrarAsientoContableCajaChica")) {
				jButtonCerrarAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("CerrarToolBarAsientoContableCajaChica")) {
				jButtonCerrarAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCerrarAsientoContableCajaChica")) {
				jButtonCerrarAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MostrarOcultarToolBarAsientoContableCajaChica")) {
				jButtonMostrarOcultarAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemDetalleCerrarAsientoContableCajaChica")) {
				jButtonCancelarAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosAsientoContableCajaChica")) {
				jButtonGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosToolBarAsientoContableCajaChica")) {
				jButtonGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("CopiarToolBarAsientoContableCajaChica")) {
				jButtonCopiarAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("VerFormToolBarAsientoContableCajaChica")) {
				jButtonVerFormAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosAsientoContableCajaChica")) {
				jButtonGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemCopiarAsientoContableCajaChica")) {
				jButtonCopiarAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemVerFormAsientoContableCajaChica")) {
				jButtonVerFormAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaAsientoContableCajaChica")) {
				jButtonGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("GuardarCambiosTablaToolBarAsientoContableCajaChica")) {
				jButtonGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemGuardarCambiosTablaAsientoContableCajaChica")) {
				jButtonGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionAsientoContableCajaChica")) {
				jButtonRecargarInformacionAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("RecargarInformacionToolBarAsientoContableCajaChica")) {
				jButtonRecargarInformacionAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemRecargarInformacionAsientoContableCajaChica")) {
				jButtonRecargarInformacionAsientoContableCajaChicaActionPerformed(evt);
			}
			else if(sTipo.equals("AnterioresAsientoContableCajaChica")) {
				jButtonAnterioresAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("AnterioresToolBarAsientoContableCajaChica")) {
				jButtonAnterioresAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAnterioreAsientoContableCajaChica")) {
				jButtonAnterioresAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("SiguientesAsientoContableCajaChica")) {
				jButtonSiguientesAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("SiguientesToolBarAsientoContableCajaChica")) {
				jButtonSiguientesAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemSiguientesAsientoContableCajaChica")) {
				jButtonSiguientesAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemAbrirOrderByAsientoContableCajaChica") || sTipo.equals("MenuItemDetalleAbrirOrderByAsientoContableCajaChica")) {
				jButtonAbrirOrderByAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemMostrarOcultarAsientoContableCajaChica") || sTipo.equals("MenuItemDetalleMostrarOcultarAsientoContableCajaChica")) {
				jButtonMostrarOcultarAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosAsientoContableCajaChica")) {
				jButtonNuevoGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("NuevoGuardarCambiosToolBarAsientoContableCajaChica")) {
				jButtonNuevoGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("MenuItemNuevoGuardarCambiosAsientoContableCajaChica")) {
				jButtonNuevoGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);
			} 
			else if(sTipo.equals("CerrarReporteDinamicoAsientoContableCajaChica")) {
				jButtonCerrarReporteDinamicoAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("GenerarReporteDinamicoAsientoContableCajaChica")) {
				jButtonGenerarReporteDinamicoAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("GenerarExcelReporteDinamicoAsientoContableCajaChica")) {
				
				jButtonGenerarExcelReporteDinamicoAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarImportacionAsientoContableCajaChica")) {
				jButtonCerrarImportacionAsientoContableCajaChicaActionPerformed(evt);
			} else if(sTipo.equals("GenerarImportacionAsientoContableCajaChica")) {
				
				jButtonGenerarImportacionAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirImportacionAsientoContableCajaChica")) {
				
				jButtonAbrirImportacionAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("TiposAccionesAsientoContableCajaChica")) {
				jComboBoxTiposAccionesAsientoContableCajaChicaActionListener(evt,false);
			} else if(sTipo.equals("TiposRelacionesAsientoContableCajaChica")) {
				jComboBoxTiposRelacionesAsientoContableCajaChicaActionListener(evt);
			} else if(sTipo.equals("TiposAccionesFormularioAsientoContableCajaChica")) {
				jComboBoxTiposAccionesAsientoContableCajaChicaActionListener(evt,true);
			} else if(sTipo.equals("TiposSeleccionarAsientoContableCajaChica")) {
				
				jComboBoxTiposSeleccionarAsientoContableCajaChicaActionListener(evt);
				
			} else if(sTipo.equals("ValorCampoGeneralAsientoContableCajaChica")) {
				jTextFieldValorCampoGeneralAsientoContableCajaChicaActionListener(evt);
			}
			
			
			else if(sTipo.equals("AbrirOrderByAsientoContableCajaChica")) {
				jButtonAbrirOrderByAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("AbrirOrderByToolBarAsientoContableCajaChica")) {
				jButtonAbrirOrderByAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarOrderByAsientoContableCajaChica")) {
				jButtonCerrarOrderByAsientoContableCajaChicaActionPerformed(evt);
			} 
						
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idAsientoContableCajaChicaBusqueda")) {
				this.jButtonidAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaAsientoContableCajaChicaUpdate")) {
				this.jButtonid_empresaAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_empresaAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalAsientoContableCajaChicaUpdate")) {
				this.jButtonid_sucursalAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_sucursalAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioAsientoContableCajaChicaUpdate")) {
				this.jButtonid_ejercicioAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_ejercicioAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoAsientoContableCajaChicaUpdate")) {
				this.jButtonid_periodoAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_periodoAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioAsientoContableCajaChicaUpdate")) {
				this.jButtonid_usuarioAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_usuarioAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioAsientoContableCajaChicaUpdate")) {
				this.jButtonid_anioAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_anioAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesAsientoContableCajaChicaUpdate")) {
				this.jButtonid_mesAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_mesAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("secuencialAsientoContableCajaChicaBusqueda")) {
				this.jButtonsecuencialAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaAsientoContableCajaChicaUpdate")) {
				this.jButtonid_monedaAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_monedaAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaAsientoContableCajaChicaBusqueda")) {
				this.jButtonfechaAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoAsientoContableCajaChica")) {
				this.jButtonid_empleadoAsientoContableCajaChicaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoAsientoContableCajaChicaUpdate")) {
				this.jButtonid_empleadoAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_empleadoAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_asiento_contableAsientoContableCajaChicaUpdate")) {
				this.jButtonid_estado_asiento_contableAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_asiento_contableAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_estado_asiento_contableAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_proveedorAsientoContableCajaChicaBusqueda")) {
				this.jButtones_proveedorAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteAsientoContableCajaChica")) {
				this.jButtonid_clienteAsientoContableCajaChicaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteAsientoContableCajaChicaUpdate")) {
				this.jButtonid_clienteAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_clienteAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccionAsientoContableCajaChicaUpdate")) {
				this.jButtonid_transaccionAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccionAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_transaccionAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_documentoAsientoContableCajaChicaUpdate")) {
				this.jButtonid_tipo_documentoAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_documentoAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_tipo_documentoAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contableAsientoContableCajaChica")) {
				this.jButtonid_cuenta_contableAsientoContableCajaChicaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contableAsientoContableCajaChicaArbol")) {
				this.abrirFrameTreeCuentaContable("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contableAsientoContableCajaChicaUpdate")) {
				this.jButtonid_cuenta_contableAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contableAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_cuenta_contableAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("detalleAsientoContableCajaChicaBusqueda")) {
				this.jButtondetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloAsientoContableCajaChicaUpdate")) {
				this.jButtonid_moduloAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_moduloAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_movimientoAsientoContableCajaChicaUpdate")) {
				this.jButtonid_tipo_movimientoAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_movimientoAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_tipo_movimientoAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloAsientoContableCajaChicaUpdate")) {
				this.jButtonid_tipo_transaccion_moduloAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_tipo_transaccion_moduloAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_movimiento_moduloAsientoContableCajaChicaUpdate")) {
				this.jButtonid_tipo_movimiento_moduloAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_movimiento_moduloAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_tipo_movimiento_moduloAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("id_clienteAsientoContableCajaChica")) {
				this.jButtonid_clienteAsientoContableCajaChicaActionPerformed(evt);
			}
			else if(sTipo.equals("id_empleadoAsientoContableCajaChica")) {
				this.jButtonid_empleadoAsientoContableCajaChicaActionPerformed(evt);
			}
			
			
			else if(sTipo.equals("FK_IdClienteAsientoContableCajaChica")) {
				this.jButtonFK_IdClienteAsientoContableCajaChicaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdEmpleadoAsientoContableCajaChica")) {
				this.jButtonFK_IdEmpleadoAsientoContableCajaChicaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoDocumentoAsientoContableCajaChica")) {
				this.jButtonFK_IdTipoDocumentoAsientoContableCajaChicaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoMovimientoModuloAsientoContableCajaChica")) {
				this.jButtonFK_IdTipoMovimientoModuloAsientoContableCajaChicaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTipoTransaccionModuloAsientoContableCajaChica")) {
				this.jButtonFK_IdTipoTransaccionModuloAsientoContableCajaChicaActionPerformed(evt);
			}
			else if(sTipo.equals("FK_IdTransaccionAsientoContableCajaChica")) {
				this.jButtonFK_IdTransaccionAsientoContableCajaChicaActionPerformed(evt);
			}
			
			;
			
			
			AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.BUTTON,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
			
  		} finally {
      		this.finishProcessAsientoContableCajaChica();
      	}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaAsientoContableCajaChicaActual();
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				JTextField jTextField=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				if(containerParent!=null && containerParent.getClass().equals(JTableMe.class)) {
					esControlTabla=true;
				}
						
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.asientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.asientocontablecajachica);
				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
				
				


				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AsientoContableCajaChica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AsientoContableCajaChica.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
				}
				
			} catch(Exception e) {
  				FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  			}
    }
	
	public Boolean existeCambioValor(ControlTipo controlTipo,String sTipo) throws Exception {
		Boolean existeCambio=true;
		
		try {
			AsientoContableCajaChica asientocontablecajachicaLocal=null;
			
			if(!this.getEsControlTabla()) {
				asientocontablecajachicaLocal=this.asientocontablecajachica;
			} else {
				asientocontablecajachicaLocal=this.asientocontablecajachicaAnterior;
			}
			
			if(controlTipo.equals(ControlTipo.TEXTBOX)) {
				


			}
		
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
		
		return existeCambio;
	}
	
	public void jTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParent=jTextField.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.asientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.asientocontablecajachica);
				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
							
				
				


				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AsientoContableCajaChica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AsientoContableCajaChica.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAsientoContableCajaChicaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaAnterior =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.asientocontablecajachicaAnterior =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	//CUANDO SE CAMBIA ALGUN FORMATO(TIPO DE LETRA,NEGRILLA,ETC)
	public void jTextFieldChangedUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextField jTextField=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextField=(JTextField)evt.getSource();
			
			containerParent=jTextField.getParent();
					
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {					
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE QUITA ALGUN CARACTER
	public void jTextFieldRemoveUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//CUANDO SE INGRESA ALGUN CARACTER
	public void jTextFieldInsertUpdateGeneral(String sTipo,JTextField jTextField,DocumentEvent evt) { 	  
		try {
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//FUNCIONA AL APLASTAR ENTER
	public void jFormattedTextFieldActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaAsientoContableCajaChicaActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				Container containerParent=null;
				Container containerParentAux=null;
				JFormattedTextField JFormattedTextField=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JFormattedTextField=(JFormattedTextField)evt.getSource();
				
				containerParentAux=JFormattedTextField.getParent();
				
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.asientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.asientocontablecajachica);
				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
								
						
				


				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AsientoContableCajaChica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AsientoContableCajaChica.class.getName(),sTipo,"DATE",esControlTabla,conIrServidorAplicacionParent,
							id,JFormattedTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextField jTextField=null;
				Container containerParent=null;
				Container containerParentAux=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextField=(JTextField)evt.getSource();
				
				containerParentAux=jTextField.getParent();
						
				if(containerParentAux!=null && containerParentAux.getClass().equals(JDateChooser.class)) {
					containerParent=containerParentAux.getParent();
				}
				
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.asientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.asientocontablecajachica);
				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
								
				
				


				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.DATE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AsientoContableCajaChica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AsientoContableCajaChica.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jTextField, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jFormattedTextFieldFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAsientoContableCajaChicaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaAnterior =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.asientocontablecajachicaAnterior =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.DATE,sTipo)) {
				this.actualizarInformacion("EVENTO_CONTROL",false,this.asientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.asientocontablecajachica);
			}	
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAsientoContableCajaChicaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaAnterior =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.asientocontablecajachicaAnterior =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jDateChooserActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAsientoContableCajaChicaActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.asientocontablecajachica);
			
			this.actualizarInformacion("INFO_PADRE",false,this.asientocontablecajachica);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }	
	
	public void jTextAreaFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.TEXTAREA,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JTextArea jTextArea=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jTextArea=(JTextArea)evt.getSource();
				
				containerParent=jTextArea.getParent();
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.asientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.asientocontablecajachica);
				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
							
				
				


				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AsientoContableCajaChica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AsientoContableCajaChica.class.getName(),sTipo,"TEXTAREA",esControlTabla,conIrServidorAplicacionParent,
							id,jTextArea, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaAsientoContableCajaChicaActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachicaAnterior =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.asientocontablecajachicaAnterior =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaChangedUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			/*
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			//System.out.println("UPDATE");
			
			Boolean esControlTabla=false;
			//JTextArea jTextArea=null;
			Container containerParent=null;
			Component componentOpposite=null;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
			
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			//jTextArea=(JTextArea)evt.getSource();
			
			containerParent=jTextArea.getParent();
			componentOpposite=null;//evt.getOppositeComponent();
			
			if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
				|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
			) {
				esControlTabla=true;
			}
			
			this.esControlTabla=esControlTabla;
			
			


			
			AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTAREA,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
			
			*/
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaRemoveUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			//System.out.println("REMOVE");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jTextAreaInsertUpdateGeneral(String sTipo,JTextArea jTextArea,DocumentEvent evt) { 	  
		try {
			
			//System.out.println("INSERT");
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jTextAreaActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAsientoContableCajaChicaActual();
			
			this.actualizarInformacion("EVENTO_CONTROL",false,this.asientocontablecajachica);
			
			this.actualizarInformacion("INFO_PADRE",false,this.asientocontablecajachica);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JLabel jLabel=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jLabel=(JLabel)evt.getSource();
				
				containerParent=jLabel.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.asientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.asientocontablecajachica);
				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
								
				
				


				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AsientoContableCajaChica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AsientoContableCajaChica.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jLabel, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.TEXTBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jLabelFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAsientoContableCajaChicaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaAnterior =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.asientocontablecajachicaAnterior =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO EXISTE O NO ES APLICABLE
	public void jLabelActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAsientoContableCajaChicaActual();
				
			this.actualizarInformacion("EVENTO_CONTROL",false,this.asientocontablecajachica);
			
			this.actualizarInformacion("INFO_PADRE",false,this.asientocontablecajachica);
				
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxItemListenerGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaAsientoContableCajaChicaActual();
				
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
							
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.asientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.asientocontablecajachica);
				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
												
				
				if(sTipo.equals("SeleccionarTodosAsientoContableCajaChica")) {
					jCheckBoxSeleccionarTodosAsientoContableCajaChicaItemListener(evt);
				
				} else if(sTipo.equals("SeleccionadosAsientoContableCajaChica")) {
					jCheckBoxSeleccionadosAsientoContableCajaChicaItemListener(evt);
				
				} else if(sTipo.equals("NuevoToolBarAsientoContableCajaChica")) {
					
				}
				
				


				
				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AsientoContableCajaChica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AsientoContableCajaChica.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}	
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl() && this.existeCambioValor(ControlTipo.CHECKBOX,sTipo)) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				Boolean esControlTabla=false;
				JCheckBox jCheckBox=null;
				Container containerParent=null;
				Component componentOpposite=null;
				
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
				
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				jCheckBox=(JCheckBox)evt.getSource();
				
				containerParent=jCheckBox.getParent();
						
				componentOpposite=evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
				
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				//this.actualizarInformacion("EVENTO_CONTROL",false,this.asientocontablecajachica);
				
				//this.actualizarInformacion("INFO_PADRE",false,this.asientocontablecajachica);
				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
												
				
				


				
				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AsientoContableCajaChica.class.getName());
					
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AsientoContableCajaChica.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jCheckBox, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaAsientoContableCajaChicaActual();
			
				//SELECCIONA FILA A OBJETO ANTERIOR
				Integer intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();
						
				if(intSelectedRow!=null && intSelectedRow>-1) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {
						this.asientocontablecajachicaAnterior =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
						this.asientocontablecajachicaAnterior =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
					}
					//ARCHITECTURE
					
					//System.out.println(this.banco);
				}
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void jCheckBoxActionPerformedGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaAsientoContableCajaChicaActual();
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.asientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.asientocontablecajachica);
				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
				
				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.CHECKBOX,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//NO SE UTILIZA, SE USA EL DE ABAJO, IGUAL SE DEJA EL CODIGO COMO RESPALDO Y ES CASI IGUAL
	//ERROR:SI SE USA,AL HACER CLIC EN EL MISMO ELEMENTO O EJECUTAR SELECTEDITEM, SIEMPRE SE EJECUTA COMO SI ESCOGIERA OTRO ELEMENTO(NO DEBERIA)
	//@SuppressWarnings("rawtypes")
	public void jComboBoxActionPerformedGeneral(String sTipo,ActionEvent evt) {		
		try {
			/*		
			EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
			
			if(this.esUsoDesdeHijo) {
				eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
			}
			
			Container containerParent=null;
			Component componentOpposite=null;
			Boolean esControlTabla=false;
				
			ArrayList<Classe> classes=new ArrayList<Classe>();
			
			AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
			JComboBox jComboBoxGenerico=null;						
			
			if(evt.getSource().getClass().equals(JComboBox.class)
				|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
					
				jComboBoxGenerico=(JComboBox)evt.getSource();
				
				containerParent=jComboBoxGenerico.getParent();
				
				componentOpposite=null;//evt.getOppositeComponent();
				
				if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
				) {					
					esControlTabla=true;
				}
				
				this.esControlTabla=esControlTabla;
			}
			
			String sFinalQueryCombo="";
			
			


			
			AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
			*/						
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}		
    }
	
	@SuppressWarnings("rawtypes")
	public void jComboBoxItemStateChangedGeneral(String sTipo,ItemEvent evt) { 	  
		try {
			if (evt.getStateChange() == ItemEvent.SELECTED && this.permiteManejarEventosControl()) {
				//SELECCIONA FILA A OBJETO ACTUAL			
				this.seleccionarFilaTablaAsientoContableCajaChicaActual();
			
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
			
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				/*
				if(this.esUsoDesdeHijo) {
					eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				}
				*/
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=null;//evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}		
					
					this.esControlTabla=esControlTabla;
				}
				
				
				this.actualizarInformacion("EVENTO_CONTROL",false,this.asientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.asientocontablecajachica);
				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
				
				
				String sFinalQueryCombo="";
				
				


				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
				
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AsientoContableCajaChica.class.getName());
								
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AsientoContableCajaChica.class.getName(),sTipo,"COMBOBOX",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	//@SuppressWarnings("rawtypes")
	public void jComboBoxFocusLostGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		//MANEJADO EN ITEMLISTENER
		/*
		try {
			if(this.permiteManejarEventosControl()) {
				EventoGlobalTipo eventoGlobalTipo=EventoGlobalTipo.CONTROL_CHANGE;
				
				
				//if(this.esUsoDesdeHijo) {
				//	eventoGlobalTipo=EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				//}
				
				
				Container containerParent=null;
				Component componentOpposite=null;
				Boolean esControlTabla=false;
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				//PARAMETROS LLAMAR FUNCION PARENT
				GeneralEntityParameterGeneral generalEntityParameterGeneral=new GeneralEntityParameterGeneral();			
				Boolean esUsoDesdeHijoLocal=false;
				Boolean conIrServidorAplicacionParent=false;	
				ArrayList<String> arrClasses=new ArrayList<String>();			
				//PARAMETROS LLAMAR FUNCION PARENT_FIN
			
				this.actualizarInformacion("EVENTO_CONTROL",false,this.asientocontablecajachica);
				
				this.actualizarInformacion("INFO_PADRE",false,this.asientocontablecajachica);
				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CLICKED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
				JComboBox jComboBoxGenerico=null;						
				
				if(evt.getSource().getClass().equals(JComboBox.class)
					|| evt.getSource().getClass().equals(JComboBoxMe.class)) {
						
					jComboBoxGenerico=(JComboBox)evt.getSource();
					
					containerParent=jComboBoxGenerico.getParent();
					
					componentOpposite=evt.getOppositeComponent();
					
					if((containerParent!=null && containerParent.getClass().equals(JTableMe.class))
					|| (componentOpposite!=null && componentOpposite.getClass().equals(JTableMe.class))
					) {					
						esControlTabla=true;
					}
					
					this.esControlTabla=esControlTabla;
				}
				
				String sFinalQueryCombo="";
				
				


				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
				
				
				if(esUsoDesdeHijoLocal) {
					Long id=0L;
					
					generalEntityParameterGeneral.setEventoGlobalTipo(EventoGlobalTipo.FORM_HIJO_ACTUALIZAR);
					generalEntityParameterGeneral.setsDominio("Formulario");
					generalEntityParameterGeneral.setsDominioTipo(AsientoContableCajaChica.class.getName());
				
					if(this.jInternalFrameParent!=null) {
						this.jInternalFrameParent.setEventoParentGeneral(esUsoDesdeHijoLocal,"Formulario",AsientoContableCajaChica.class.getName(),sTipo,"TEXTFIELD",esControlTabla,conIrServidorAplicacionParent,
							id,jComboBoxGenerico, EventoGlobalTipo.FORM_HIJO_ACTUALIZAR,ControlTipo.COMBOBOX,EventoTipo.CHANGE,EventoSubTipo.CHANGED,arrClasses,
							evt,generalEntityParameterGeneral,null);
					}
				}			
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
		
		*/
    }
	
	public void jComboBoxFocusGainedGeneral(String sTipo,java.awt.event.FocusEvent evt) { 	  
		try {
			//SELECCIONA FILA A OBJETO ACTUAL			
			this.seleccionarFilaTablaAsientoContableCajaChicaActual();
			
			//SELECCIONA FILA A OBJETO ANTERIOR
			Integer intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();
					
			if(intSelectedRow!=null && intSelectedRow>-1) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					this.asientocontablecajachicaAnterior =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
					this.asientocontablecajachicaAnterior =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
				}
				//ARCHITECTURE
				
				//System.out.println(this.banco);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }		
	
	public void tableValueChangedGeneral(String sTipo,ListSelectionEvent evt) { 	  
		try {
			if(this.permiteManejarEventosControl()) {
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
				
				if(sTipo.equals("TableDatosSeleccionarAsientoContableCajaChica")) {
					//BYDAN_DESHABILITADO
					//try {jTableDatosAsientoContableCajaChicaListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
					
					//SOLO CUANDO MOUSE ES SOLTADO
					if (!evt.getValueIsAdjusting()) {
						//SELECCIONA FILA A OBJETO ACTUAL
						Integer intSelectedRow = this.jTableDatosAsientoContableCajaChica.getSelectedRow();
						
						if(intSelectedRow!=null && intSelectedRow>-1) {
							//ARCHITECTURE
							if(Constantes.ISUSAEJBLOGICLAYER) {
								this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
							} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
								this.asientocontablecajachica =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(intSelectedRow)];
							}
							//ARCHITECTURE
							
							//System.out.println(this.asientocontablecajachica);
						}
					}
					
				} else if(sTipo.equals("jButtonCancelarAsientoContableCajaChica")) {
				
				}
				
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.CHANGE,EventoSubTipo.CHANGED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
			}
			
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void tableMouseAdapterGeneral(String sTipo,MouseEvent evt) { 	  
		try {
			AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
			
			if(sTipo.equals("DatosSeleccionarAsientoContableCajaChica")) {
				if (evt.getClickCount() == 2) {
					jButtonIdActionPerformed(null,jTableDatosAsientoContableCajaChica.getSelectedRow(),false,false);
				}	
			} else if(sTipo.equals("jButtonCancelarAsientoContableCajaChica")) {
			
			}
			
			AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.TABLE,EventoTipo.MOUSE,EventoSubTipo.CLICKED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	;
	
	public void jButtonActionPerformedTecladoGeneral(String sTipo,ActionEvent evt) { 	  
		try {
			this.startProcessAsientoContableCajaChica();
			
			AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
			
			if(sTipo.equals("NuevoAsientoContableCajaChica")) {
				jButtonNuevoAsientoContableCajaChicaActionPerformed(evt,false);
				
			} else if(sTipo.equals("DuplicarAsientoContableCajaChica")) {
				jButtonDuplicarAsientoContableCajaChicaActionPerformed(evt,false);
				
			} else if(sTipo.equals("CopiarAsientoContableCajaChica")) {
				jButtonCopiarAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("VerFormAsientoContableCajaChica")) {
				jButtonVerFormAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("NuevoRelacionesAsientoContableCajaChica")) {
				jButtonNuevoAsientoContableCajaChicaActionPerformed(evt,true);
				
			} else if(sTipo.equals("ModificarAsientoContableCajaChica")) {
				jButtonModificarAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("ActualizarAsientoContableCajaChica")) {
				jButtonActualizarAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("EliminarAsientoContableCajaChica")) {
				jButtonEliminarAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosTablaAsientoContableCajaChica")) {
				jButtonGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("CancelarAsientoContableCajaChica")) {
				jButtonCancelarAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("CerrarAsientoContableCajaChica")) {
				jButtonCerrarAsientoContableCajaChicaActionPerformed(evt);
				
			} else if(sTipo.equals("GuardarCambiosAsientoContableCajaChica")) {
				jButtonGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);
			
			} else if(sTipo.equals("NuevoGuardarCambiosAsientoContableCajaChica")) {
				jButtonNuevoGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);
			
			} else if(sTipo.equals("AbrirOrderByAsientoContableCajaChica")) {
				jButtonAbrirOrderByAsientoContableCajaChicaActionPerformed(evt);
			
			} else if(sTipo.equals("RecargarInformacionAsientoContableCajaChica")) {
				jButtonRecargarInformacionAsientoContableCajaChicaActionPerformed(evt);
			
			} else if(sTipo.equals("AnterioresAsientoContableCajaChica")) {
				jButtonAnterioresAsientoContableCajaChicaActionPerformed(evt);			
			
			}  else if(sTipo.equals("SiguientesAsientoContableCajaChica")) {
				jButtonSiguientesAsientoContableCajaChicaActionPerformed(evt);			
			} 
			
			
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("idAsientoContableCajaChicaBusqueda")) {
				this.jButtonidAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empresaAsientoContableCajaChicaUpdate")) {
				this.jButtonid_empresaAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empresaAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_empresaAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_sucursalAsientoContableCajaChicaUpdate")) {
				this.jButtonid_sucursalAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_sucursalAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_sucursalAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_ejercicioAsientoContableCajaChicaUpdate")) {
				this.jButtonid_ejercicioAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_ejercicioAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_ejercicioAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_periodoAsientoContableCajaChicaUpdate")) {
				this.jButtonid_periodoAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_periodoAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_periodoAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_usuarioAsientoContableCajaChicaUpdate")) {
				this.jButtonid_usuarioAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_usuarioAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_usuarioAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_anioAsientoContableCajaChicaUpdate")) {
				this.jButtonid_anioAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_anioAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_anioAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_mesAsientoContableCajaChicaUpdate")) {
				this.jButtonid_mesAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_mesAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_mesAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("secuencialAsientoContableCajaChicaBusqueda")) {
				this.jButtonsecuencialAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_monedaAsientoContableCajaChicaUpdate")) {
				this.jButtonid_monedaAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_monedaAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_monedaAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("fechaAsientoContableCajaChicaBusqueda")) {
				this.jButtonfechaAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_empleadoAsientoContableCajaChica")) {
				this.jButtonid_empleadoAsientoContableCajaChicaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_empleadoAsientoContableCajaChicaUpdate")) {
				this.jButtonid_empleadoAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_empleadoAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_empleadoAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_estado_asiento_contableAsientoContableCajaChicaUpdate")) {
				this.jButtonid_estado_asiento_contableAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_estado_asiento_contableAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_estado_asiento_contableAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("es_proveedorAsientoContableCajaChicaBusqueda")) {
				this.jButtones_proveedorAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_clienteAsientoContableCajaChica")) {
				this.jButtonid_clienteAsientoContableCajaChicaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_clienteAsientoContableCajaChicaUpdate")) {
				this.jButtonid_clienteAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_clienteAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_clienteAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_transaccionAsientoContableCajaChicaUpdate")) {
				this.jButtonid_transaccionAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_transaccionAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_transaccionAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_documentoAsientoContableCajaChicaUpdate")) {
				this.jButtonid_tipo_documentoAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_documentoAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_tipo_documentoAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA CAMPO
			else if(sTipo.equals("id_cuenta_contableAsientoContableCajaChica")) {
				this.jButtonid_cuenta_contableAsientoContableCajaChicaActionPerformed(evt);
			}
			//BUSQUEDA ARBOL CAMPO
			else if(sTipo.equals("id_cuenta_contableAsientoContableCajaChicaArbol")) {
				this.abrirFrameTreeCuentaContable("BUSQUEDA_FK");
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_cuenta_contableAsientoContableCajaChicaUpdate")) {
				this.jButtonid_cuenta_contableAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_cuenta_contableAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_cuenta_contableAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("detalleAsientoContableCajaChicaBusqueda")) {
				this.jButtondetalleAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_moduloAsientoContableCajaChicaUpdate")) {
				this.jButtonid_moduloAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_moduloAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_moduloAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_movimientoAsientoContableCajaChicaUpdate")) {
				this.jButtonid_tipo_movimientoAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_movimientoAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_tipo_movimientoAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloAsientoContableCajaChicaUpdate")) {
				this.jButtonid_tipo_transaccion_moduloAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_transaccion_moduloAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_tipo_transaccion_moduloAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			//ACTUALIZAR CAMPO
			else if(sTipo.equals("id_tipo_movimiento_moduloAsientoContableCajaChicaUpdate")) {
				this.jButtonid_tipo_movimiento_moduloAsientoContableCajaChicaUpdateActionPerformed(evt);
			}
			//BUSQUEDA GENERAL CAMPO
			else if(sTipo.equals("id_tipo_movimiento_moduloAsientoContableCajaChicaBusqueda")) {
				this.jButtonid_tipo_movimiento_moduloAsientoContableCajaChicaBusquedaActionPerformed(evt);
			}
			
			AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.KEY,EventoTipo.CLIC,EventoSubTipo.CLICKED,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
			
  		}  finally {
      		this.finishProcessAsientoContableCajaChica();
      	}
    }
	
	public void internalFrameClosingInternalFrameGeneral(String sTipo,InternalFrameEvent evt) { 	  
		try {
			AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
			
			if(sTipo.equals("CloseInternalFrameAsientoContableCajaChica")) {
				closingInternalFrameAsientoContableCajaChica();
				
			} else if(sTipo.equals("jButtonCancelarAsientoContableCajaChica")) {
				JInternalFrameBase jInternalFrameDetalleFormAsientoContableCajaChica = (JInternalFrameBase)evt.getSource();
	            	
	            AsientoContableCajaChicaBeanSwingJInternalFrame jInternalFrameParent=(AsientoContableCajaChicaBeanSwingJInternalFrame)jInternalFrameDetalleFormAsientoContableCajaChica.getjInternalFrameParent();
	            
				jInternalFrameParent.jButtonCancelarAsientoContableCajaChicaActionPerformed(null);
			}
			
			AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,ControlTipo.WINDOW,EventoTipo.CLIC,EventoSubTipo.CLOSING,sTipo,this.asientocontablecajachica,new Object(),this.asientocontablecajachicaParameterGeneral,this.asientocontablecajachicaReturnGeneral);
  		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	public void recargarFormAsientoContableCajaChica(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion) throws Exception {
		this.recargarFormAsientoContableCajaChica(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,false);
	}
	
	public void recargarFormAsientoContableCajaChica(String sTipo,String sDominio,EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,String sTipoGeneral,ArrayList<Classe> classes,Boolean conIrServidorAplicacion,Boolean esControlTabla) throws Exception {
		if(this.permiteRecargarForm && this.permiteMantenimiento(this.asientocontablecajachica)) {
			if(!esControlTabla) {
				if(AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA) {			
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);			
				}
				
				if(this.asientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones()) {
					this.setVariablesFormularioRelacionesToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,classes);				
				}
			
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.asientocontablecajachicaReturnGeneral=asientocontablecajachicaLogic.procesarEventosAsientoContableCajaChicasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.asientocontablecajachicaLogic.getAsientoContableCajaChicas(),this.asientocontablecajachica,this.asientocontablecajachicaParameterGeneral,this.isEsNuevoAsientoContableCajaChica,classes);//this.asientocontablecajachicaLogic.getAsientoContableCajaChica()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
					
					//ACTUALIZA VARIABLES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					//this.setVariablesObjetoReturnGeneralToBeanAsientoContableCajaChica(this.asientocontablecajachicaReturnGeneral,this.asientocontablecajachicaBean,false);
						
					//ACTUALIZA VARIABLES RELACIONES DEFECTO DESDE LOGIC A RETURN GENERAL Y LUEGO A BEAN
					if(this.asientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones()) {
						//this.setVariablesRelacionesObjetoReturnGeneralToBeanAsientoContableCajaChica(classes,this.asientocontablecajachicaReturnGeneral,this.asientocontablecajachicaBean,false);
					}
						
					if(this.asientocontablecajachicaReturnGeneral.getConRecargarPropiedades()) {
						//INICIALIZA VARIABLES COMBOS NORMALES (FK)
						this.setVariablesObjetoActualToFormularioForeignKeyAsientoContableCajaChica(this.asientocontablecajachicaReturnGeneral.getAsientoContableCajaChica());
							
						//INICIALIZA VARIABLES NORMALES A FORMULARIO(SIN FK)
						this.setVariablesObjetoActualToFormularioAsientoContableCajaChica(this.asientocontablecajachicaReturnGeneral.getAsientoContableCajaChica());	
					}
						
					if(this.asientocontablecajachicaReturnGeneral.getConRecargarRelaciones()) {
						//INICIALIZA VARIABLES RELACIONES A FORMULARIO
						this.setVariablesRelacionesObjetoActualToFormularioAsientoContableCajaChica(this.asientocontablecajachicaReturnGeneral.getAsientoContableCajaChica(),classes);//this.asientocontablecajachicaBean);	
					}									
					
				} else {				
					//INICIALIZA VARIABLES RELACIONES A FORMULARIO
					this.setVariablesRelacionesObjetoActualToFormularioAsientoContableCajaChica(this.asientocontablecajachica,classes);//this.asientocontablecajachicaBean);									
				}
			
				if(AsientoContableCajaChicaJInternalFrame.ISBINDING_MANUAL_TABLA) {
					this.setVariablesFormularioToObjetoActualAsientoContableCajaChica(this.asientocontablecajachica,true,false);
					this.setVariablesFormularioToObjetoActualForeignKeysAsientoContableCajaChica(this.asientocontablecajachica);				
				}
				
			} else {
				
				if(((controlTipo.equals(ControlTipo.TEXTBOX) || controlTipo.equals(ControlTipo.DATE)
					|| controlTipo.equals(ControlTipo.TEXTAREA) || controlTipo.equals(ControlTipo.COMBOBOX)
					)				
					&& eventoTipo.equals(EventoTipo.CHANGE)
					)
					
					|| (controlTipo.equals(ControlTipo.CHECKBOX) && eventoTipo.equals(EventoTipo.CLIC))
					
				) { // && sTipoGeneral.equals("TEXTBOX")
					
					if(this.asientocontablecajachicaAnterior!=null) {
						this.asientocontablecajachica=this.asientocontablecajachicaAnterior;
					}
				}
				
				if(conIrServidorAplicacion) {
					//ARCHITECTURE
					if(Constantes.ISUSAEJBLOGICLAYER) {						
						this.asientocontablecajachicaReturnGeneral=asientocontablecajachicaLogic.procesarEventosAsientoContableCajaChicasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.asientocontablecajachicaLogic.getAsientoContableCajaChicas(),this.asientocontablecajachica,this.asientocontablecajachicaParameterGeneral,this.isEsNuevoAsientoContableCajaChica,classes);//this.asientocontablecajachicaLogic.getAsientoContableCajaChica()//sTipoGeneral
									
					} else if(Constantes.ISUSAEJBREMOTE) {
									
					} else if(Constantes.ISUSAEJBHOME) {
					}
					//ARCHITECTURE
				}
				
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {
					//NO ENTENDIBLE PORQUE PONER
					//if(this.asientocontablecajachicaSessionBean.getEstaModoGuardarRelaciones() 
					//	|| this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado())	{
						actualizarLista(this.asientocontablecajachicaReturnGeneral.getAsientoContableCajaChica(),asientocontablecajachicaLogic.getAsientoContableCajaChicas());
					//}
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					actualizarLista(this.asientocontablecajachicaReturnGeneral.getAsientoContableCajaChica(),this.asientocontablecajachicas);
				}
				//ARCHITECTURE
				
				//this.jTableDatosAsientoContableCajaChica.repaint();
				
				//((AbstractTableModel) this.jTableDatosAsientoContableCajaChica.getModel()).fireTableDataChanged();
				
				this.actualizarVisualTableDatosAsientoContableCajaChica();
			}
		}
	}
	
	public void actualizarVisualTableDatosAsientoContableCajaChica() throws Exception {
		
		AsientoContableCajaChicaModel asientocontablecajachicaModel=(AsientoContableCajaChicaModel)this.jTableDatosAsientoContableCajaChica.getModel();
		
		if(Constantes.ISUSAEJBLOGICLAYER) {
			asientocontablecajachicaModel.asientocontablecajachicas=this.asientocontablecajachicaLogic.getAsientoContableCajaChicas();
		
		} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME ) {
			asientocontablecajachicaModel.asientocontablecajachicas=this.asientocontablecajachicas;
		}
		
		
		((AsientoContableCajaChicaModel) this.jTableDatosAsientoContableCajaChica.getModel()).fireTableDataChanged();
	}
	
	public void actualizarVisualTableDatosEventosVistaAsientoContableCajaChica() throws Exception {
		
		//ARCHITECTURE
		if(Constantes.ISUSAEJBLOGICLAYER) {
			this.actualizarLista(this.getasientocontablecajachicaAnterior(),this.asientocontablecajachicaLogic.getAsientoContableCajaChicas());
					
		} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
			this.actualizarLista(this.getasientocontablecajachicaAnterior(),this.asientocontablecajachicas);
		}
		//ARCHITECTURE
						
		this.actualizarFilaTotales();
						
		this.actualizarVisualTableDatosAsientoContableCajaChica();	
	}
	
	public void setVariablesRelacionesObjetoActualToFormularioAsientoContableCajaChica(AsientoContableCajaChica asientocontablecajachica,ArrayList<Classe> classes) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleAsientoContableCajaChica.class)) {
					this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(asientocontablecajachica.getDetalleAsientoContableCajaChicas());
					this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetalleAsientoContableCajaChica(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void setEventoParentGeneral(Boolean esUsoDesdeHijo,String sDominio,String sDominioTipo,String sTipo,String sTipoGeneral,Boolean esControlTabla,Boolean conIrServidorAplicacion,
						Long id,Component control, EventoGlobalTipo eventoGlobalTipo,ControlTipo controlTipo,EventoTipo eventoTipo,EventoSubTipo eventoSubTipo,ArrayList<String> arrClasses,
						Object evt,GeneralEntityParameterReturnGeneral generalEntityParameterGeneral,Object otro) { 	  
		try {
			
			if(this.permiteManejarEventosControl()) {
				
				//BASE COPIADO DESDE TEXTFIELLOSTFOCUS
				
				//EventoGlobalTipo.FORM_HIJO_ACTUALIZAR;
				Boolean conTodasRelaciones=false;
				
				this.esUsoDesdeHijo=esUsoDesdeHijo;
										
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.BEFORE,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.asientocontablecajachica,new Object(),generalEntityParameterGeneral,this.asientocontablecajachicaReturnGeneral);
				
				ArrayList<Classe> classes=new ArrayList<Classe>();
				
				for(String sClasse:arrClasses) {
					if(sClasse.equals("TODOS")) {
						conTodasRelaciones=true;
						break;
					}
				}
				
				if(this.asientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
					if(conTodasRelaciones) {
						classes=AsientoContableCajaChicaConstantesFunciones.getClassesRelationshipsOfAsientoContableCajaChica(new ArrayList<Classe>(),DeepLoadType.NONE);
					} else {
						classes=AsientoContableCajaChicaConstantesFunciones.getClassesRelationshipsFromStringsOfAsientoContableCajaChica(arrClasses,DeepLoadType.NONE);
					}
				}
	
				this.classesActual=new ArrayList<Classe>();
				this.classesActual.addAll(classes);
	
				this.recargarFormAsientoContableCajaChica(sTipo,sDominio,eventoGlobalTipo,controlTipo,eventoTipo,eventoSubTipo,sTipoGeneral,classes,conIrServidorAplicacion,esControlTabla);
										
				AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.procesarEventosVista(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,this,FuncionTipo.AFTER,controlTipo,eventoTipo,eventoSubTipo,sTipo,this.asientocontablecajachica,new Object(),generalEntityParameterGeneral,this.asientocontablecajachicaReturnGeneral);
			}
			
		} catch(Exception e) {
  			FuncionesSwing.manageException2(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
  		}
    }
	
	/*
	public void setVariablesRelacionesObjetoBeanActualToFormularioAsientoContableCajaChica(AsientoContableCajaChicaBean asientocontablecajachicaBean) throws Exception { 
		try {
			
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleAsientoContableCajaChica.class)) {
					this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaLogic.setDetalleAsientoContableCajaChicas(asientocontablecajachica.getDetalleAsientoContableCajaChicas());
					this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.inicializarActualizarBindingTablaDetalleAsientoContableCajaChica(false);
					break;
				}
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	*/
	
	/*
	public void setVariablesRelacionesObjetoReturnGeneralToBeanAsientoContableCajaChica(ArrayList<Classe> classes,AsientoContableCajaChicaReturnGeneral asientocontablecajachicaReturnGeneral,AsientoContableCajaChicaBean asientocontablecajachicaBean,Boolean conDefault) throws Exception {
		
			this.asientocontablecajachicaBean.setDetalleAsientoContableCajaChicas(asientocontablecajachicaReturnGeneral.getAsientoContableCajaChica().getDetalleAsientoContableCajaChicas());
	}
	*/
	
	public void setVariablesFormularioRelacionesToObjetoActualAsientoContableCajaChica(AsientoContableCajaChica asientocontablecajachica,ArrayList<Classe> classes) throws Exception {
		
			for(Classe clas:classes) {
				if(clas.clas.equals(DetalleAsientoContableCajaChica.class)) {
					asientocontablecajachica.setDetalleAsientoContableCajaChicas(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaBeanSwingJInternalFrame.detalleasientocontablecajachicaLogic.getDetalleAsientoContableCajaChicas());
					break;
				}
			}
	}
	
	public Boolean permiteManejarEventosControl() {
		Boolean permite=true;				
		
		if(this.estaModoNuevo || this.estaModoSeleccionar || this.estaModoEliminarGuardarCambios) {
			permite=false;
			
		} 
		
		//NO DEBE MEZCLARSE CONCEPTOS
		/*	
		if(!paraTabla && !this.permiteMantenimiento(this.asientocontablecajachica)) {
			System.out.println("ERROR:EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES");
				
			//JOptionPane.showMessageDialog(this,"EL OBJETO ACTUAL NO PUEDE SER FILA TOTALES","EVENTO",JOptionPane.ERROR_MESSAGE);			
		}
		*/
		
		return permite;
	}
	
	public void inicializarFormDetalle() throws Exception {
		
		this.jInternalFrameDetalleFormAsientoContableCajaChica = new AsientoContableCajaChicaDetalleFormJInternalFrame(jDesktopPane,this.asientocontablecajachicaSessionBean.getConGuardarRelaciones(),this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado(),this.cargarRelaciones,usuarioActual,resumenUsuarioActual,moduloActual,opcionActual,parametroGeneralSg,parametroGeneralUsuario,paginaTipo);
		
		this.jDesktopPane.add(this.jInternalFrameDetalleFormAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.setVisible(false);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.setSelected(false);						
		
		this.jInternalFrameDetalleFormAsientoContableCajaChica.setJInternalFrameParent(this);
		
		this.jInternalFrameDetalleFormAsientoContableCajaChica.asientocontablecajachicaLogic=this.asientocontablecajachicaLogic;
		
		this.cargarCombosFrameForeignKeyAsientoContableCajaChica("Formulario");
		
		this.inicializarActualizarBindingBotonesPermisosManualFormDetalleAsientoContableCajaChica();
		this.inicializarActualizarBindingtiposArchivosReportesAccionesManualFormDetalleAsientoContableCajaChica();
		
		this.initActionsFormDetalle();		
		
		this.initActionsCombosTodosForeignKeyAsientoContableCajaChica("Formulario");
		
		//TALVEZ conSetVariablesGlobales COMO if() 
		this.setVariablesGlobalesCombosForeignKeyAsientoContableCajaChica();
		
		this.cargarMenuRelaciones();
		
	}
	
	public void initActionsFormDetalle() {	
		
		this.jInternalFrameDetalleFormAsientoContableCajaChica.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarAsientoContableCajaChica"));
		
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonModificarAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"ModificarAsientoContableCajaChica"));

		
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonModificarToolBarAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"ModificarToolBarAsientoContableCajaChica"));
					
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jMenuItemModificarAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"MenuItemModificarAsientoContableCajaChica"));		
		
		
		
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonActualizarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"ActualizarAsientoContableCajaChica"));
		
		
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonActualizarToolBarAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"ActualizarToolBarAsientoContableCajaChica"));
						
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jMenuItemActualizarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemActualizarAsientoContableCajaChica"));		
		
		
		
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonEliminarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"EliminarAsientoContableCajaChica"));
		
		
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonEliminarToolBarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"EliminarToolBarAsientoContableCajaChica"));
								
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jMenuItemEliminarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemEliminarAsientoContableCajaChica"));		
		
		
		
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonCancelarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"CancelarAsientoContableCajaChica"));
		
		
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonCancelarToolBarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"CancelarToolBarAsientoContableCajaChica"));
					
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jMenuItemCancelarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemCancelarAsientoContableCajaChica"));		
		
		
		
		
		
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jMenuItemDetalleCerrarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarAsientoContableCajaChica"));		
		
		
		
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonGuardarCambiosToolBarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarAsientoContableCajaChica"));
		
		
		
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonGuardarCambiosToolBarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarAsientoContableCajaChica"));
		
		
		
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxTiposAccionesFormularioAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioAsientoContableCajaChica"));
		
		
				
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonidAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"idAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_empresaAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_empresaAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_sucursalAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_sucursalAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_ejercicioAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_ejercicioAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_periodoAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_periodoAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_periodoAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_usuarioAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_usuarioAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_anioAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_anioAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_anioAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_anioAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_mesAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_mesAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_mesAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_mesAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonsecuencialAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"secuencialAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_monedaAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_monedaAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_monedaAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonfechaAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"fechaAsientoContableCajaChicaBusqueda"));
		//jButtonid_empleadoAsientoContableCajaChica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoAsientoContableCajaChicaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_empleadoAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_empleadoAsientoContableCajaChica"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_empleadoAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_empleadoAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_estado_asiento_contableAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_estado_asiento_contableAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_estado_asiento_contableAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_asiento_contableAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtones_proveedorAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"es_proveedorAsientoContableCajaChicaBusqueda"));
		//jButtonid_clienteAsientoContableCajaChica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteAsientoContableCajaChicaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_clienteAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_clienteAsientoContableCajaChica"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_clienteAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_clienteAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_clienteAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_transaccionAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_transaccionAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_documentoAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documentoAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_documentoAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documentoAsientoContableCajaChicaBusqueda"));
		//jButtonid_cuenta_contableAsientoContableCajaChica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableAsientoContableCajaChicaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_cuenta_contableAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_cuenta_contableAsientoContableCajaChica"));
		//jButtonid_cuenta_contableAsientoContableCajaChicaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_cuenta_contableAsientoContableCajaChicaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableAsientoContableCajaChicaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_cuenta_contableAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_cuenta_contableAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtondetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"detalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_moduloAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_moduloAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_moduloAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_movimientoAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_movimientoAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_transaccion_moduloAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_transaccion_moduloAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_movimiento_moduloAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_movimiento_moduloAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_movimiento_moduloAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_movimiento_moduloAsientoContableCajaChicaBusqueda"));
		
		
		;

		//TABBED PANE RELACIONES
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jTabbedPaneRelacionesAsientoContableCajaChica.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesAsientoContableCajaChica"));
		
		;		
		//TABBED PANE RELACIONES FIN(EXTRA TAB)	
	}
	
	public void initActions() {				
		this.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"CloseInternalFrameAsientoContableCajaChica"));
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.addInternalFrameListener(new InternalFrameInternalFrameAdapter(this,"jButtonCancelarAsientoContableCajaChica"));
		}
		
		this.jTableDatosAsientoContableCajaChica.getSelectionModel().addListSelectionListener(new TableListSelectionListener(this,"TableDatosSeleccionarAsientoContableCajaChica"));
		
		this.jTableDatosAsientoContableCajaChica.addMouseListener(new TableMouseAdapter(this,"DatosSeleccionarAsientoContableCajaChica"));
		
		this.jButtonNuevoAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"NuevoAsientoContableCajaChica"));
		
		this.jButtonDuplicarAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"DuplicarAsientoContableCajaChica"));
		
		this.jButtonCopiarAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"CopiarAsientoContableCajaChica"));
		
		this.jButtonVerFormAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"VerFormAsientoContableCajaChica"));
		
		
		this.jButtonNuevoToolBarAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"NuevoToolBarAsientoContableCajaChica"));
			
		this.jButtonDuplicarToolBarAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"DuplicarToolBarAsientoContableCajaChica"));
			
		this.jMenuItemNuevoAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemNuevoAsientoContableCajaChica"));
			
		this.jMenuItemDuplicarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemDuplicarAsientoContableCajaChica"));		
		
		
		this.jButtonNuevoRelacionesAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"NuevoRelacionesAsientoContableCajaChica"));
		
		
		this.jButtonNuevoRelacionesToolBarAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"NuevoRelacionesToolBarAsientoContableCajaChica"));
			
		this.jMenuItemNuevoRelacionesAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"MenuItemNuevoRelacionesAsientoContableCajaChica"));		
		
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonModificarAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"ModificarAsientoContableCajaChica"));
		}
		
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonModificarToolBarAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"ModificarToolBarAsientoContableCajaChica"));
			
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jMenuItemModificarAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"MenuItemModificarAsientoContableCajaChica"));		
		}
		
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {			
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonActualizarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"ActualizarAsientoContableCajaChica"));
		}
		
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonActualizarToolBarAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"ActualizarToolBarAsientoContableCajaChica"));
				
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jMenuItemActualizarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemActualizarAsientoContableCajaChica"));		
		}
		
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonEliminarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"EliminarAsientoContableCajaChica"));
		}
		
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonEliminarToolBarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"EliminarToolBarAsientoContableCajaChica"));
						
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jMenuItemEliminarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemEliminarAsientoContableCajaChica"));		
		}
		
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonCancelarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"CancelarAsientoContableCajaChica"));
		}
		
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonCancelarToolBarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"CancelarToolBarAsientoContableCajaChica"));
			
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jMenuItemCancelarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemCancelarAsientoContableCajaChica"));		
		}
		
		this.jButtonMostrarOcultarTablaToolBarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MostrarOcultarToolBarAsientoContableCajaChica"));		
		
		
		this.jButtonCerrarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"CerrarAsientoContableCajaChica"));
		
		
		this.jButtonCerrarToolBarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"CerrarToolBarAsientoContableCajaChica"));
			
		this.jMenuItemCerrarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemCerrarAsientoContableCajaChica"));
			
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jMenuItemDetalleCerrarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemDetalleCerrarAsientoContableCajaChica"));		
		}
		
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonGuardarCambiosAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"GuardarCambiosAsientoContableCajaChica"));
		}
		
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonGuardarCambiosToolBarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"GuardarCambiosToolBarAsientoContableCajaChica"));
		}
		
		this.jButtonCopiarToolBarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"CopiarToolBarAsientoContableCajaChica"));
			
		this.jButtonVerFormToolBarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"VerFormToolBarAsientoContableCajaChica"));
		
		this.jMenuItemGuardarCambiosAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemGuardarCambiosAsientoContableCajaChica"));
			
		this.jMenuItemCopiarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemCopiarAsientoContableCajaChica"));		
		
		this.jMenuItemVerFormAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemVerFormAsientoContableCajaChica"));		
		
		
		this.jButtonGuardarCambiosTablaAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaAsientoContableCajaChica"));
		
		
		this.jButtonGuardarCambiosTablaToolBarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaToolBarAsientoContableCajaChica"));
			
		this.jMenuItemGuardarCambiosTablaAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"GuardarCambiosTablaAsientoContableCajaChica"));		
		
		
		
		this.jButtonRecargarInformacionAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"RecargarInformacionAsientoContableCajaChica"));
					
		this.jButtonRecargarInformacionToolBarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"RecargarInformacionToolBarAsientoContableCajaChica"));
		
		this.jMenuItemRecargarInformacionAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemRecargarInformacionAsientoContableCajaChica"));		
		
		
		
		this.jButtonAnterioresAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"AnterioresAsientoContableCajaChica"));
		
		
		this.jButtonAnterioresToolBarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"AnterioresToolBarAsientoContableCajaChica"));
		
		this.jMenuItemAnterioresAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemAnterioresAsientoContableCajaChica"));		
		
		
		this.jButtonSiguientesAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"SiguientesAsientoContableCajaChica"));
		
		
		this.jButtonSiguientesToolBarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"SiguientesToolBarAsientoContableCajaChica"));
			
		this.jMenuItemSiguientesAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemSiguientesAsientoContableCajaChica"));
			
		this.jMenuItemAbrirOrderByAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemAbrirOrderByAsientoContableCajaChica"));
			
		this.jMenuItemMostrarOcultarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemMostrarOcultarAsientoContableCajaChica"));
			
		this.jMenuItemDetalleAbrirOrderByAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemDetalleAbrirOrderByAsientoContableCajaChica"));
			
		this.jMenuItemDetalleMostarOcultarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemDetalleMostrarOcultarAsientoContableCajaChica"));		
		
		
		this.jButtonNuevoGuardarCambiosAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosAsientoContableCajaChica"));
		
		
		this.jButtonNuevoGuardarCambiosToolBarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"NuevoGuardarCambiosToolBarAsientoContableCajaChica"));
			
		this.jMenuItemNuevoGuardarCambiosAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"MenuItemNuevoGuardarCambiosAsientoContableCajaChica"));		
		
		
		
		//SELECCIONAR TODOS
		
		this.jCheckBoxSeleccionarTodosAsientoContableCajaChica.addItemListener(new CheckBoxItemListener(this,"SeleccionarTodosAsientoContableCajaChica"));

		this.jCheckBoxSeleccionadosAsientoContableCajaChica.addItemListener(new CheckBoxItemListener(this,"SeleccionadosAsientoContableCajaChica"));
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxTiposAccionesFormularioAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"TiposAccionesFormularioAsientoContableCajaChica"));
		}
		
		
		this.jComboBoxTiposRelacionesAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"TiposRelacionesAsientoContableCajaChica"));
			
		this.jComboBoxTiposAccionesAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"TiposAccionesAsientoContableCajaChica"));
					
		this.jComboBoxTiposSeleccionarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"TiposSeleccionarAsientoContableCajaChica"));
			
		this.jTextFieldValorCampoGeneralAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"ValorCampoGeneralAsientoContableCajaChica"));		
		
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
		
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonidAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"idAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_empresaAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_empresaAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_sucursalAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_sucursalAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_ejercicioAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_ejercicioAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_periodoAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_periodoAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_periodoAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_usuarioAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_usuarioAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_anioAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_anioAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_anioAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_anioAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_mesAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_mesAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_mesAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_mesAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonsecuencialAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"secuencialAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_monedaAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_monedaAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_monedaAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonfechaAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"fechaAsientoContableCajaChicaBusqueda"));
		//jButtonid_empleadoAsientoContableCajaChica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoAsientoContableCajaChicaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_empleadoAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_empleadoAsientoContableCajaChica"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_empleadoAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_empleadoAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_estado_asiento_contableAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_estado_asiento_contableAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_estado_asiento_contableAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_asiento_contableAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtones_proveedorAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"es_proveedorAsientoContableCajaChicaBusqueda"));
		//jButtonid_clienteAsientoContableCajaChica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteAsientoContableCajaChicaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_clienteAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_clienteAsientoContableCajaChica"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_clienteAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_clienteAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_clienteAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_transaccionAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_transaccionAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_documentoAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documentoAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_documentoAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documentoAsientoContableCajaChicaBusqueda"));
		//jButtonid_cuenta_contableAsientoContableCajaChica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableAsientoContableCajaChicaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_cuenta_contableAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_cuenta_contableAsientoContableCajaChica"));
		//jButtonid_cuenta_contableAsientoContableCajaChicaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_cuenta_contableAsientoContableCajaChicaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableAsientoContableCajaChicaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_cuenta_contableAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_cuenta_contableAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtondetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"detalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_moduloAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_moduloAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_moduloAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_movimientoAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_movimientoAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_transaccion_moduloAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_transaccion_moduloAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_movimiento_moduloAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_movimiento_moduloAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_movimiento_moduloAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_movimiento_moduloAsientoContableCajaChicaBusqueda"));
		}
		
		if(!this.conCargarMinimo) {
		//BYDAN_BUSQUEDAS
		
		
			this.jButtonFK_IdClienteAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdClienteAsientoContableCajaChica"));

			this.jButtonBuscarFK_IdClienteid_clienteAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_clienteAsientoContableCajaChica"));

			this.jButtonFK_IdEmpleadoAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoAsientoContableCajaChica"));

			this.jButtonBuscarFK_IdEmpleadoid_empleadoAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_empleadoAsientoContableCajaChica"));

			this.jButtonFK_IdTipoDocumentoAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdTipoDocumentoAsientoContableCajaChica"));

			this.jButtonFK_IdTipoMovimientoModuloAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdTipoMovimientoModuloAsientoContableCajaChica"));

			this.jButtonFK_IdTipoTransaccionModuloAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdTipoTransaccionModuloAsientoContableCajaChica"));

			this.jButtonFK_IdTransaccionAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionAsientoContableCajaChica"));
		
		
		
			//REPORTE DINAMICO
			
			if(this.jInternalFrameReporteDinamicoAsientoContableCajaChica!=null) {
				this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjButtonCerrarReporteDinamico().addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoAsientoContableCajaChica"));
				this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjButtonGenerarReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoAsientoContableCajaChica"));
				this.jInternalFrameReporteDinamicoAsientoContableCajaChica.getjButtonGenerarExcelReporteDinamico().addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoAsientoContableCajaChica"));
			}
			
			//this.jButtonCerrarReporteDinamicoAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"CerrarReporteDinamicoAsientoContableCajaChica"));				
			//this.jButtonGenerarReporteDinamicoAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"GenerarReporteDinamicoAsientoContableCajaChica"));
			//this.jButtonGenerarExcelReporteDinamicoAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"GenerarExcelReporteDinamicoAsientoContableCajaChica"));
				
				
			//IMPORTACION			
			if(this.jInternalFrameImportacionAsientoContableCajaChica!=null) {
				this.jInternalFrameImportacionAsientoContableCajaChica.getjButtonCerrarImportacion().addActionListener (new ButtonActionListener(this,"CerrarImportacionAsientoContableCajaChica"));
				this.jInternalFrameImportacionAsientoContableCajaChica.getjButtonGenerarImportacion().addActionListener (new ButtonActionListener(this,"GenerarImportacionAsientoContableCajaChica"));
				this.jInternalFrameImportacionAsientoContableCajaChica.getjButtonAbrirImportacion().addActionListener (new ButtonActionListener(this,"AbrirImportacionAsientoContableCajaChica"));
			}
			
			//ORDER BY
			this.jButtonAbrirOrderByAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"AbrirOrderByAsientoContableCajaChica"));
			
			this.jButtonAbrirOrderByToolBarAsientoContableCajaChica.addActionListener (new ButtonActionListener(this,"AbrirOrderByToolBarAsientoContableCajaChica"));			
			
			if(this.jInternalFrameOrderByAsientoContableCajaChica!=null) {
				this.jInternalFrameOrderByAsientoContableCajaChica.getjButtonCerrarOrderBy().addActionListener (new ButtonActionListener(this,"CerrarOrderByAsientoContableCajaChica"));				
			}
			
			
		}
		
		
		
		if(!this.conCargarMinimo) {
			if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			;
			}
		}
		
		
		//TABBED PANE RELACIONES
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) { //if(this.conCargarFormDetalle) {
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jTabbedPaneRelacionesAsientoContableCajaChica.addChangeListener(new TabbedPaneChangeListener(this,"RelacionesAsientoContableCajaChica"));
		
		;
		}
		//TABBED PANE RELACIONES FIN(EXTRA TAB)		
	}
	
	/*
	public void initActions() {
		String sMapKey = "";
		InputMap inputMap =null;
		
		this.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
            public void internalFrameClosing(InternalFrameEvent event) {          	
            	try {
            		closingInternalFrameAsientoContableCajaChica();
				} catch (Exception e) {
					e.printStackTrace();
				}
            }
        });
		
		this.jInternalFrameDetalleFormAsientoContableCajaChica.addInternalFrameListener(new javax.swing.event.InternalFrameAdapter() {
	        public void internalFrameClosing(InternalFrameEvent event) {
	            JInternalFrameBase jInternalFrameDetalleFormAsientoContableCajaChica = (JInternalFrameBase)event.getSource();
	            	
	            AsientoContableCajaChicaBeanSwingJInternalFrame jInternalFrameParent=(AsientoContableCajaChicaBeanSwingJInternalFrame)jInternalFrameDetalleFormAsientoContableCajaChica.getjInternalFrameParent();
	                
	            try {
					jInternalFrameParent.jButtonCancelarAsientoContableCajaChicaActionPerformed(null);
					
					//jInternalFrameParent.dispose();
					//jInternalFrameParent=null;
					
				} catch (Exception e) {
					e.printStackTrace();
				}
	        }
	    });
			
		this.jTableDatosAsientoContableCajaChica.getSelectionModel().addListSelectionListener (
	                new ListSelectionListener() {
	                    public void valueChanged(ListSelectionEvent e) {
							//BYDAN_DESHABILITADO
	                    	//try {jTableDatosAsientoContableCajaChicaListSelectionListener(e);}catch(Exception e1){e1.printStackTrace();}
	                    }
	                }
	     );
		
		this.jTableDatosAsientoContableCajaChica.addMouseListener(new MouseAdapter() {
			   public void mouseClicked(MouseEvent evt) {
				      if (evt.getClickCount() == 2) {
				    	  jButtonIdActionPerformed(null,jTableDatosAsientoContableCajaChica.getSelectedRow(),false,false);
				      }
				   }
		});
		
		this.jButtonNuevoAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoAsientoContableCajaChicaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoToolBarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoAsientoContableCajaChicaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoAsientoContableCajaChicaActionPerformed(evt,false);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoAsientoContableCajaChica";
		inputMap = this.jButtonNuevoAsientoContableCajaChica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_N , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoAsientoContableCajaChica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoAsientoContableCajaChicaActionPerformed(evt,false);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonNuevoRelacionesAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoAsientoContableCajaChicaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoRelacionesToolBarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoAsientoContableCajaChicaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoRelacionesAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoAsientoContableCajaChicaActionPerformed(evt,true);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "NuevoRelacionesAsientoContableCajaChica";
		inputMap = this.jButtonNuevoRelacionesAsientoContableCajaChica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_R , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonNuevoRelacionesAsientoContableCajaChica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonNuevoAsientoContableCajaChicaActionPerformed(evt,true);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonModificarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonModificarToolBarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemModificarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonModificarAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ModificarAsientoContableCajaChica";
		inputMap = this.jButtonModificarAsientoContableCajaChica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_M , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonModificarAsientoContableCajaChica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonModificarAsientoContableCajaChicaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonActualizarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonActualizarToolBarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemActualizarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonActualizarAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "ActualizarAsientoContableCajaChica";
		inputMap = this.jButtonActualizarAsientoContableCajaChica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonActualizarAsientoContableCajaChica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonActualizarAsientoContableCajaChicaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonEliminarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonEliminarToolBarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
				
		this.jMenuItemEliminarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonEliminarAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "EliminarAsientoContableCajaChica";
		inputMap = this.jButtonEliminarAsientoContableCajaChica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_E , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonEliminarAsientoContableCajaChica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonEliminarAsientoContableCajaChicaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCancelarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCancelarToolBarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCancelarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCancelarAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CancelarAsientoContableCajaChica";
		inputMap = this.jButtonCancelarAsientoContableCajaChica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_Q , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jButtonCancelarAsientoContableCajaChica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCancelarAsientoContableCajaChicaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonCerrarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonCerrarToolBarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemCerrarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemDetalleCerrarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  //try {jButtonCerrarAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
					try {jButtonCancelarAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "CerrarAsientoContableCajaChica";
		inputMap = this.jButtonCerrarAsientoContableCajaChica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_C , KeyEvent.ALT_MASK), sMapKey);
			
		this.jButtonCerrarAsientoContableCajaChica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonCerrarAsientoContableCajaChicaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonGuardarCambiosAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosToolBarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGuardarCambiosTablaToolBarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemGuardarCambiosTablaAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		sMapKey = "GuardarCambiosAsientoContableCajaChica";
		inputMap = this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonGuardarCambiosAsientoContableCajaChica.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW);
		inputMap.put(KeyStroke.getKeyStroke(KeyEvent.VK_G , KeyEvent.CTRL_MASK), sMapKey);
			
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonGuardarCambiosAsientoContableCajaChica.getActionMap().put(sMapKey, new AbstractAction() {
			public static final long serialVersionUID = 1L;
			public void actionPerformed(ActionEvent evt) {
			    try {jButtonGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);} catch (Exception e) {e.printStackTrace();}
			}
		});
		
		this.jButtonRecargarInformacionAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonRecargarInformacionToolBarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemRecargarInformacionAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonRecargarInformacionAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		this.jButtonAnterioresAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAnterioresToolBarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemAnterioresAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAnterioresAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonSiguientesToolBarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemSiguientesAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonSiguientesAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonNuevoGuardarCambiosToolBarAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jMenuItemNuevoGuardarCambiosAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonNuevoGuardarCambiosAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		
		//SELECCIONAR TODOS
		this.jCheckBoxSeleccionarTodosAsientoContableCajaChica.addItemListener(new ItemListener() {		
			public void itemStateChanged(ItemEvent evt) {
				try {jCheckBoxSeleccionarTodosAsientoContableCajaChicaItemListener(evt);}catch(Exception e){e.printStackTrace();}
			}
		});

		this.jComboBoxTiposAccionesAsientoContableCajaChica.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposAccionesAsientoContableCajaChicaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jComboBoxTiposSeleccionarAsientoContableCajaChica.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jComboBoxTiposSeleccionarAsientoContableCajaChicaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		this.jTextFieldValorCampoGeneralAsientoContableCajaChica.addActionListener (new ActionListener () {
			public void actionPerformed(ActionEvent e) {
				try {jTextFieldValorCampoGeneralAsientoContableCajaChicaActionListener(e);} catch (Exception e1) { e1.printStackTrace();}
			};
		});
		
		
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonidAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"idAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_empresaAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_empresaAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_empresaAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_empresaAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_sucursalAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_sucursalAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_sucursalAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_sucursalAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_ejercicioAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_ejercicioAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_ejercicioAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_ejercicioAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_periodoAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_periodoAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_periodoAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_periodoAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_usuarioAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_usuarioAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_usuarioAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_usuarioAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_anioAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_anioAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_anioAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_anioAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_mesAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_mesAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_mesAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_mesAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonsecuencialAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"secuencialAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_monedaAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_monedaAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_monedaAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_monedaAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonfechaAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"fechaAsientoContableCajaChicaBusqueda"));
		//jButtonid_empleadoAsientoContableCajaChica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_empleadoAsientoContableCajaChicaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_empleadoAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_empleadoAsientoContableCajaChica"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_empleadoAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_empleadoAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_empleadoAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_empleadoAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_estado_asiento_contableAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_estado_asiento_contableAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_estado_asiento_contableAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_estado_asiento_contableAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtones_proveedorAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"es_proveedorAsientoContableCajaChicaBusqueda"));
		//jButtonid_clienteAsientoContableCajaChica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_clienteAsientoContableCajaChicaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_clienteAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_clienteAsientoContableCajaChica"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_clienteAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_clienteAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_clienteAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_clienteAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_transaccionAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_transaccionAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_transaccionAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_transaccionAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_documentoAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_documentoAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_documentoAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_documentoAsientoContableCajaChicaBusqueda"));
		//jButtonid_cuenta_contableAsientoContableCajaChica.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			jButtonid_cuenta_contableAsientoContableCajaChicaActionPerformed(evt);
		//		}
		//	}
		//);

		//BUSQUEDA CAMPO
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_cuenta_contableAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_cuenta_contableAsientoContableCajaChica"));
		//jButtonid_cuenta_contableAsientoContableCajaChicaArbol.addActionListener (
		//	new java.awt.event.ActionListener() {
		//		public void actionPerformed(java.awt.event.ActionEvent evt) {
		//			abrirFrameTreeCuentaContable("BUSQUEDA_FK");
		//		}
		//	}
		//);

		//BUSQUEDA ARBOL CAMPO
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_cuenta_contableAsientoContableCajaChicaArbol.addActionListener(new ButtonActionListener(this,"id_cuenta_contableAsientoContableCajaChicaArbol"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_cuenta_contableAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_cuenta_contableAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_cuenta_contableAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_cuenta_contableAsientoContableCajaChicaBusqueda"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtondetalleAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"detalleAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_moduloAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_moduloAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_moduloAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_moduloAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_movimientoAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_movimientoAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_movimientoAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_transaccion_moduloAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_transaccion_moduloAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_transaccion_moduloAsientoContableCajaChicaBusqueda"));
		//ACTUALIZAR FK
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_movimiento_moduloAsientoContableCajaChicaUpdate.addActionListener(new ButtonActionListener(this,"id_tipo_movimiento_moduloAsientoContableCajaChicaUpdate"));
		//BUSQUEDA GENERAL
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_tipo_movimiento_moduloAsientoContableCajaChicaBusqueda.addActionListener(new ButtonActionListener(this,"id_tipo_movimiento_moduloAsientoContableCajaChicaBusqueda"));
		
		
		this.jButtonFK_IdClienteAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdClienteAsientoContableCajaChica"));

		this.jButtonBuscarFK_IdClienteid_clienteAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_clienteAsientoContableCajaChica"));

		this.jButtonFK_IdEmpleadoAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdEmpleadoAsientoContableCajaChica"));

		this.jButtonBuscarFK_IdEmpleadoid_empleadoAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"id_empleadoAsientoContableCajaChica"));

		this.jButtonFK_IdTipoDocumentoAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdTipoDocumentoAsientoContableCajaChica"));

		this.jButtonFK_IdTipoMovimientoModuloAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdTipoMovimientoModuloAsientoContableCajaChica"));

		this.jButtonFK_IdTipoTransaccionModuloAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdTipoTransaccionModuloAsientoContableCajaChica"));

		this.jButtonFK_IdTransaccionAsientoContableCajaChica.addActionListener(new ButtonActionListener(this,"FK_IdTransaccionAsientoContableCajaChica"));

		
		//REPORTE DINAMICO
		this.jButtonCerrarReporteDinamicoAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarReporteDinamicoAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarReporteDinamicoAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarReporteDinamicoAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarExcelReporteDinamicoAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarExcelReporteDinamicoAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		//IMPORTACION
		this.jButtonCerrarImportacionAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonCerrarImportacionAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonGenerarImportacionAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonGenerarImportacionAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
		
		this.jButtonAbrirImportacionAsientoContableCajaChica.addActionListener (
	          new java.awt.event.ActionListener() {
	              public void actionPerformed(ActionEvent evt) {
	            	  try {jButtonAbrirImportacionAsientoContableCajaChicaActionPerformed(evt);}catch(Exception e){e.printStackTrace();}
	              }
	          }
        );
	}
	*/
	
	
	public void jComboBoxTiposSeleccionarAsientoContableCajaChicaActionListener(ActionEvent evt) throws Exception {    		
		try {			
			Reporte reporte=(Reporte)this.jComboBoxTiposSeleccionarAsientoContableCajaChica.getSelectedItem();
			
			//if(reporte.getsCodigo().equals("SELECCIONAR")) {
			//}					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}	
	
	
	
	public void seleccionarTodosAsientoContableCajaChica(Boolean conSeleccionarTodos) throws Exception {    		
		try {
			if(Constantes.ISUSAEJBLOGICLAYER) {				
				for(AsientoContableCajaChica asientocontablecajachicaAux:this.asientocontablecajachicaLogic.getAsientoContableCajaChicas()) {
					asientocontablecajachicaAux.setIsSelected(conSeleccionarTodos);
				}			
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(AsientoContableCajaChica asientocontablecajachicaAux:asientocontablecajachicas) {
					asientocontablecajachicaAux.setIsSelected(conSeleccionarTodos);
				}
			}
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarTodosAsientoContableCajaChicaItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			
			if(sTipoSeleccionar.equals("COLUMNAS")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(AsientoContableCajaChica asientocontablecajachicaAux:this.asientocontablecajachicaLogic.getAsientoContableCajaChicas()) {
						asientocontablecajachicaAux.setIsSelected(this.isSeleccionarTodos);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(AsientoContableCajaChica asientocontablecajachicaAux:asientocontablecajachicas) {
						asientocontablecajachicaAux.setIsSelected(this.isSeleccionarTodos);
					}
				}
			} else {
				if(Constantes.ISUSAEJBLOGICLAYER) {
					for(AsientoContableCajaChica asientocontablecajachicaAux:this.asientocontablecajachicaLogic.getAsientoContableCajaChicas()) {
					
						if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR)) {
							existe=true;
							asientocontablecajachicaAux.setes_proveedor(this.isSeleccionarTodos);
						}
					}	
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(AsientoContableCajaChica asientocontablecajachicaAux:asientocontablecajachicas) {
						
						if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR)) {
							existe=true;
							asientocontablecajachicaAux.setes_proveedor(this.isSeleccionarTodos);
						}
					}
				}
			}
					
			if(existe) {
				this.inicializarActualizarBindingTablaAsientoContableCajaChica(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosAsientoContableCajaChica.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosAsientoContableCajaChica.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionadosAsientoContableCajaChicaItemListener(ItemEvent evt) throws Exception {    		
		try {			
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			
			//JCheckBox jCheckBox=(JCheckBox)evt.getSource();			
			//System.out.println("ok");		
			
			Boolean existe=false;
			int[] arrNumRowsSeleccionados=null;
			
			arrNumRowsSeleccionados=this.jTableDatosAsientoContableCajaChica.getSelectedRows();
			
			AsientoContableCajaChica asientocontablecajachicaLocal=new AsientoContableCajaChica();
			
			//this.seleccionarTodosAsientoContableCajaChica(false);
			
			for(Integer iNumRowSeleccionado:arrNumRowsSeleccionados) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {
					asientocontablecajachicaLocal =(AsientoContableCajaChica) this.asientocontablecajachicaLogic.getAsientoContableCajaChicas().toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(iNumRowSeleccionado)];
				} else if(Constantes.ISUSAEJBREMOTE || Constantes.ISUSAEJBHOME) {
					asientocontablecajachicaLocal =(AsientoContableCajaChica) this.asientocontablecajachicas.toArray()[this.jTableDatosAsientoContableCajaChica.convertRowIndexToModel(iNumRowSeleccionado)];
				}
				
				asientocontablecajachicaLocal.setIsSelected(this.isSeleccionados);
			}
			
			/*
			if(sTipoSeleccionar.equals("SELECCIONAR")) {
				existe=true;
				
				if(Constantes.ISUSAEJBLOGICLAYER) {				
					for(AsientoContableCajaChica asientocontablecajachicaAux:this.asientocontablecajachicaLogic.getAsientoContableCajaChicas()) {
						asientocontablecajachicaAux.setIsSelected(this.isSeleccionados);
					}			
				} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
					for(AsientoContableCajaChica asientocontablecajachicaAux:asientocontablecajachicas) {
						asientocontablecajachicaAux.setIsSelected(this.isSeleccionados);
					}
				}
			}
			*/
			
			//if(existe) {
				this.inicializarActualizarBindingTablaAsientoContableCajaChica(false);
			/*
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}	
			*/
			
			
			//TableCellRenderer tableCellRenderer=null;			
			
			//TableCellEditor tableCellEditor=null;						
						
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			/*
			for(int i = 0; i < this.jTableDatosAsientoContableCajaChica.getRowCount(); i++) {				
				tableCellRenderer=this.jTableDatosSistema.getCellRenderer(i, 2);
				tableCellEditor=this.jTableDatosSistema.getCellEditor(i, 2);
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellRenderer;				
				idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				
				idSeleccionarTableCell=(IdSeleccionarTableCell)tableCellEditor;
				
				if(idSeleccionarTableCell.jCheckBoxId!=null) {
					idSeleccionarTableCell.jCheckBoxId.setSelected(jCheckBox.isSelected());
				}
				
				//System.out.println(idSeleccionarTableCell.valor);
				
				//this.jTableDatosAsientoContableCajaChica.getModel().setValueAt(jCheckBox.isSelected(), i, Funciones2.getColumnIndexByName(this.jTableDatosAsientoContableCajaChica,Constantes2.S_SELECCIONAR));
		    } 
			*/
					
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jCheckBoxSeleccionarActualAsientoContableCajaChicaItemListener(ItemEvent evt,Long idActual) throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void ejecutarAuxiliarAsientoContableCajaChicaParaAjaxPostBack() throws Exception {    		
		try {
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jTextFieldValorCampoGeneralAsientoContableCajaChicaActionListener(ActionEvent evt) throws Exception {    		
		try {
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			
			//System.out.println(this.jTextFieldValorCampoGeneralAsientoContableCajaChica.getText());		
			
			Boolean existe=false;
			
			if(Constantes.ISUSAEJBLOGICLAYER) {
				for(AsientoContableCajaChica asientocontablecajachicaAux:this.asientocontablecajachicaLogic.getAsientoContableCajaChicas()) {
				
						if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_SECUENCIAL)) {
							existe=true;
							asientocontablecajachicaAux.setsecuencial(Long.parseLong(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							asientocontablecajachicaAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE)) {
							existe=true;
							asientocontablecajachicaAux.setdetalle(this.sValorCampoGeneral);
						}
				}	
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(AsientoContableCajaChica asientocontablecajachicaAux:asientocontablecajachicas) {
					
						if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_SECUENCIAL)) {
							existe=true;
							asientocontablecajachicaAux.setsecuencial(Long.parseLong(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_FECHA)) {
							existe=true;
							asientocontablecajachicaAux.setfecha(Funciones.ConvertToDate(this.sValorCampoGeneral));
						}
						 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE)) {
							existe=true;
							asientocontablecajachicaAux.setdetalle(this.sValorCampoGeneral);
						}
				}
			}
								
			if(existe) {
				this.inicializarActualizarBindingTablaAsientoContableCajaChica(false);
			} else {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	public void jComboBoxTiposAccionesAsientoContableCajaChicaActionListener(ActionEvent evt,Boolean esParaAccionDesdeFormulario) throws Exception {    				
		Boolean conSplash=true;
		
		try {							
		
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			
			Reporte reporte=new Reporte();
			
			this.esParaAccionDesdeFormularioAsientoContableCajaChica=esParaAccionDesdeFormulario;
			
			if(!esParaAccionDesdeFormulario) {
				
				reporte=(Reporte)this.jComboBoxTiposAccionesAsientoContableCajaChica.getSelectedItem();
				
			} else {
				reporte=(Reporte)this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxTiposAccionesFormularioAsientoContableCajaChica.getSelectedItem();
			}
			String sTipoAccionLocal=this.sTipoAccion;
			
			if(!esParaAccionDesdeFormulario) {
				sTipoAccionLocal=this.sTipoAccion;
			} else {
				sTipoAccionLocal=this.sTipoAccionFormulario;
			}
			
			if(sTipoAccionLocal.equals("GENERAR REPORTE")) {//reporte.getsCodigo().equals("GENERAR REPORTE")) {
				if(this.isPermisoReporteAsientoContableCajaChica) {				
					conSplash=true;//false;										
					
					//this.startProcessAsientoContableCajaChica(conSplash);
				
					this.generarReporteAsientoContableCajaChicasSeleccionados();
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesAsientoContableCajaChica.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxTiposAccionesFormularioAsientoContableCajaChica.setSelectedIndex(0);					
				}
			} else if(sTipoAccionLocal.equals("GENERAR REPORTE DINAMICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.mostrarReporteDinamicoAsientoContableCajaChicasSeleccionados();
				//this.jComboBoxTiposAccionesAsientoContableCajaChica.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("GENERAR_REPORTE_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoAsientoContableCajaChicasSeleccionados(false);
				//this.jComboBoxTiposAccionesAsientoContableCajaChica.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("GENERAR_REPORTE_TOTALES_GROUP_GENERICO")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//SE GENERA REPORTE SEGUN TIPO REPORTE SELECCIONADO
				//this.generarReporteGroupGenericoAsientoContableCajaChicasSeleccionados(true);
				//this.jComboBoxTiposAccionesAsientoContableCajaChica.setSelectedIndex(0);					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessAsientoContableCajaChica();
				
				this.exportarAsientoContableCajaChicasSeleccionados();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesAsientoContableCajaChica.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxTiposAccionesFormularioAsientoContableCajaChica.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("IMPORTAR_DATOS")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				this.mostrarImportacionAsientoContableCajaChicas();
				//this.importarAsientoContableCajaChicas();
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesAsientoContableCajaChica.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxTiposAccionesFormularioAsientoContableCajaChica.setSelectedIndex(0);					
				}					
			} else if(sTipoAccionLocal.equals("EXPORTAR_DATOS_EXCEL")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {
				//this.startProcessAsientoContableCajaChica();
				//SE EXPORTA SEGUN TIPO ARCHIVO SELECCIONADO
				//this.exportarExcelAsientoContableCajaChicasSeleccionados();
				//this.jComboBoxTiposAccionesAsientoContableCajaChica.setSelectedIndex(0);					
			}  else if(sTipoAccionLocal.equals("RECARGAR_FK")) {//reporte.getsCodigo().equals("GENERAR_REPORTE_GROUP_GENERICO")) {								
				if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE RECARGAR REFERENCIAS ?", "MANTENIMIENTO DE Asiento Contable Caja Chica", JOptionPane.OK_CANCEL_OPTION) == 0) {
				
				//this.startProcessAsientoContableCajaChica();
				
					if(!esParaAccionDesdeFormulario || (esParaAccionDesdeFormulario && this.isEsNuevoAsientoContableCajaChica)) {
						this.esRecargarFks=true;
						this.cargarCombosForeignKeyAsientoContableCajaChica(false,false,false);
						this.esRecargarFks=false;
						
						JOptionPane.showMessageDialog(this,"PROCESO EJECUTADO CORRECTAMENTE","MANTENIMIENTO DE Asiento Contable Caja Chica",JOptionPane.INFORMATION_MESSAGE);
					} else {
						JOptionPane.showMessageDialog(this,"ESTE PROCESO SOLO FUNCIONA AL INGRESAR UN NUEVO ELEMENTO","MANTENIMIENTO",JOptionPane.ERROR_MESSAGE);	
					}
					
					
				}
				
				if(!esParaAccionDesdeFormulario) {
					
					this.jComboBoxTiposAccionesAsientoContableCajaChica.setSelectedIndex(0);					
					
				} else {
					this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxTiposAccionesFormularioAsientoContableCajaChica.setSelectedIndex(0);					
				}	
			} 			
			else if(AsientoContableCajaChicaBeanSwingJInternalFrame.EsProcesoReporte(reporte.getsCodigo())){
				if(this.isPermisoReporteAsientoContableCajaChica) {				
					if(this.tieneElementosSeleccionados()) {
						this.quitarFilaTotales();
						
						conSplash=false;
						
						//this.startProcessAsientoContableCajaChica(conSplash);
					
						//this.actualizarParametrosGeneralAsientoContableCajaChica();
						
						this.generarReporteProcesoAccionAsientoContableCajaChicasSeleccionados(reporte.getsCodigo());
						
						if(!esParaAccionDesdeFormulario) {
							
							this.jComboBoxTiposAccionesAsientoContableCajaChica.setSelectedIndex(0);					
							
						} else {
							this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxTiposAccionesFormularioAsientoContableCajaChica.setSelectedIndex(0);					
						}
					} else {
						JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO TIENE PERMISO PARA GENERAR REPORTES","REPORTE",JOptionPane.ERROR_MESSAGE);					
				}
			} 
			else if(AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.EsProcesoAccionNormal(reporte.getsCodigo())){
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					if(JOptionPane.showConfirmDialog(this, "ESTA SEGURO DE PROCESAR "+reporte.getsDescripcion()+" EN PROCESO Asiento Contable Caja ChicaS SELECCIONADOS?", "MANTENIMIENTO DE Asiento Contable Caja Chica", JOptionPane.OK_CANCEL_OPTION) == 0) {
						//this.startProcessAsientoContableCajaChica();
				
						this.actualizarParametrosGeneralAsientoContableCajaChica();
						
						//ARCHITECTURE
						if(Constantes.ISUSAEJBLOGICLAYER) {						
							this.asientocontablecajachicaReturnGeneral=asientocontablecajachicaLogic.procesarAccionAsientoContableCajaChicasWithConnection(this.parametroGeneralUsuario,this.moduloActual,this.opcionActual,this.usuarioActual,sTipoAccionLocal,this.asientocontablecajachicaLogic.getAsientoContableCajaChicas(),this.asientocontablecajachicaParameterGeneral);
						
						} else if(Constantes.ISUSAEJBREMOTE) {
						
						} else if(Constantes.ISUSAEJBHOME) {
						}
						//ARCHITECTURE
						
						this.procesarAsientoContableCajaChicaReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesAsientoContableCajaChica.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxTiposAccionesFormularioAsientoContableCajaChica.setSelectedIndex(0);					
					}
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}				
			} 
			else {
				if(this.tieneElementosSeleccionados()) {
					this.quitarFilaTotales();
					
					this.actualizarParametrosGeneralAsientoContableCajaChica();
					
					AsientoContableCajaChicaBeanSwingJInternalFrameAdditional.ProcesarAccion(reporte.getsCodigo(),reporte.getsDescripcion(),this);
					
					this.procesarAsientoContableCajaChicaReturnGeneral();
					
					if(!esParaAccionDesdeFormulario) {
						
						this.jComboBoxTiposAccionesAsientoContableCajaChica.setSelectedIndex(0);					
						
					} else {
						this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxTiposAccionesFormularioAsientoContableCajaChica.setSelectedIndex(0);					
					}
				} else {
					JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUN ELEMENTO","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
				}
			}
		} catch(Exception e) {
			this.esRecargarFks=false;
			
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		}  finally {
      		//this.finishProcessAsientoContableCajaChica(conSplash);
      	}
	}
	
	public void jComboBoxTiposRelacionesAsientoContableCajaChicaActionListener(ActionEvent evt) throws Exception {    				
		Boolean conSplash=true;
		
		try {			
			this.startProcessAsientoContableCajaChica();
			
			if(this.jInternalFrameDetalleFormAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {			
				this.inicializarFormDetalle();
			}
			
			ArrayList<AsientoContableCajaChica> asientocontablecajachicasSeleccionados=new ArrayList<AsientoContableCajaChica>();		
			AsientoContableCajaChica asientocontablecajachica=new AsientoContableCajaChica();
			
			int rowIndex=-1;//CON ESTO SE DESHABILITA SELECCION POR INDICE
			
			this.inicializarActualizarBindingAsientoContableCajaChica(false,false);
			
			Reporte reporte=new Reporte();
			
			
			reporte=(Reporte)this.jComboBoxTiposRelacionesAsientoContableCajaChica.getSelectedItem();
			
			
			
			
			asientocontablecajachicasSeleccionados=this.getAsientoContableCajaChicasSeleccionados(true);
			//this.sTipoAccion;
			
			if(asientocontablecajachicasSeleccionados.size()==1) {
				for(AsientoContableCajaChica asientocontablecajachicaAux:asientocontablecajachicasSeleccionados) {
					asientocontablecajachica=asientocontablecajachicaAux;
				}
				
				if(this.sTipoAccion.equals("NONE")) {
				
				}
				
				else if(this.sTipoRelacion.equals("Detalle Asiento Contable Caja Chica")) {
					jButtonDetalleAsientoContableCajaChicaActionPerformed(null,rowIndex,true,false,asientocontablecajachica);
				}
			} else {
				JOptionPane.showMessageDialog(this,"SELECCIONE SOLO UN REGISTRO","RELACIONES",JOptionPane.ERROR_MESSAGE);
			}
			
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		
		}  finally {
			this.finishProcessAsientoContableCajaChica();
			
      		//this.finishProcessAsientoContableCajaChica(conSplash);
      	}
	}
			
	public static Boolean EsProcesoReporte(String sTipoProceso) throws Exception {
		Boolean esProcesoAccionRepoorte=false;

		if(sTipoProceso.contains("REPORTE_")) {
			 esProcesoAccionRepoorte=true;
		}

		return esProcesoAccionRepoorte;
	}
	
	public void procesarAsientoContableCajaChicaReturnGeneral() throws Exception {
		if(this.asientocontablecajachicaReturnGeneral.getConRetornoEstaProcesado()) {
			JOptionPane.showMessageDialog(this,this.asientocontablecajachicaReturnGeneral.getsMensajeProceso(),"PROCESO",JOptionPane.INFORMATION_MESSAGE);
		}
		
		if(this.asientocontablecajachicaReturnGeneral.getConMostrarMensaje()) {
			JOptionPane.showMessageDialog(this,this.asientocontablecajachicaReturnGeneral.getsMensajeProceso(),"PROCESO",FuncionesSwing.getColorSelectedBackground(this.asientocontablecajachicaReturnGeneral.getsTipoMensaje()));
		}
		
		if(this.asientocontablecajachicaReturnGeneral.getConRecargarInformacion()) {
			this.procesarBusqueda(this.sAccionBusqueda);
			
			this.inicializarActualizarBindingAsientoContableCajaChica(false);
		}
		
		if(this.asientocontablecajachicaReturnGeneral.getConRetornoLista() || this.asientocontablecajachicaReturnGeneral.getConRetornoObjeto()) {
			if(this.asientocontablecajachicaReturnGeneral.getConRetornoLista()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.asientocontablecajachicaLogic.setAsientoContableCajaChicas(this.asientocontablecajachicaReturnGeneral.getAsientoContableCajaChicas());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			if(this.asientocontablecajachicaReturnGeneral.getConRetornoObjeto()) {
				//ARCHITECTURE
				if(Constantes.ISUSAEJBLOGICLAYER) {	
					this.asientocontablecajachicaLogic.setAsientoContableCajaChica(this.asientocontablecajachicaReturnGeneral.getAsientoContableCajaChica());
				} else if(Constantes.ISUSAEJBREMOTE) {
				} else if(Constantes.ISUSAEJBHOME) {
				}
				//ARCHITECTURE
			}
			
			this.inicializarActualizarBindingAsientoContableCajaChica(false);
		}
	}
	
	public void actualizarParametrosGeneralAsientoContableCajaChica() throws Exception {
		
		
	}
	
	public ArrayList<AsientoContableCajaChica> getAsientoContableCajaChicasSeleccionados(Boolean conSeleccionarTodosAutomatico) throws Exception {
		ArrayList<AsientoContableCajaChica> asientocontablecajachicasSeleccionados=new ArrayList<AsientoContableCajaChica>();
		Boolean existe=false;
		
		if(!this.esParaAccionDesdeFormularioAsientoContableCajaChica) {
			if(Constantes.ISUSAEJBLOGICLAYER) {	
				
				for(AsientoContableCajaChica asientocontablecajachicaAux:asientocontablecajachicaLogic.getAsientoContableCajaChicas()) {
					if(asientocontablecajachicaAux.getIsSelected()) {
						asientocontablecajachicasSeleccionados.add(asientocontablecajachicaAux);				
					}
				}
				
			} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
				for(AsientoContableCajaChica asientocontablecajachicaAux:this.asientocontablecajachicas) {
					if(asientocontablecajachicaAux.getIsSelected()) {
						asientocontablecajachicasSeleccionados.add(asientocontablecajachicaAux);				
					}
				}
			}
			
			if(asientocontablecajachicasSeleccionados.size()>0) {
				existe=true;
			}
			
			//SI NO ESTA NINGUNO SELECCIONADO SE SELECCIONA TODOS
			if(!existe) {
				if(conSeleccionarTodosAutomatico) {
					if(Constantes.ISUSAEJBLOGICLAYER) {				
						asientocontablecajachicasSeleccionados.addAll(this.asientocontablecajachicaLogic.getAsientoContableCajaChicas());
					} else if(Constantes.ISUSAEJBREMOTE||Constantes.ISUSAEJBHOME) {
						asientocontablecajachicasSeleccionados.addAll(this.asientocontablecajachicas);				
					}
				}
			}
		} else {
			asientocontablecajachicasSeleccionados.add(this.asientocontablecajachica);
		}
		
		return asientocontablecajachicasSeleccionados;
	}
	
	public void actualizarVariablesTipoReporte(Boolean esReporteNormal,Boolean esReporteDinamico,Boolean esReporteAccionProceso,String sPath) {
		if(esReporteNormal) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=false;
			
		} else if(esReporteAccionProceso) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=false;
			this.sPathReporteDinamico="";
			this.esReporteAccionProceso=true;
			
		} else if(esReporteDinamico) {
			this.sTipoReporteExtra="";
			this.esReporteDinamico=true;
			this.esReporteAccionProceso=false;
			this.sPathReporteDinamico=sPath.replace(".jrxml",".jasper");			
		}
	}
	
	public void generarReporteAsientoContableCajaChicasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoReporte.equals("NORMAL") || this.sTipoReporte.equals("FORMULARIO")) {
			existe=true;								
			this.generarReporteNormalAsientoContableCajaChicasSeleccionados();
			
		} else if(this.sTipoReporte.equals("DINAMICO")) {
			existe=true;
			this.mostrarReporteDinamicoAsientoContableCajaChicasSeleccionados();
			
		} else if(this.sTipoReporte.equals("GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoAsientoContableCajaChicasSeleccionados(false);
			
		} else if(this.sTipoReporte.equals("TOTALES_GRUPO_GENERICO")) {
			existe=true;
			this.generarReporteGroupGenericoAsientoContableCajaChicasSeleccionados(true);
		}
		else if(this.sTipoReporte.equals("RELACIONES")) {
			//SI SE GENERA REPORTE RELACIONES
			existe=true;
			this.generarReporteRelacionesAsientoContableCajaChicasSeleccionados();
		}					
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE REPORTE VALIDO","REPORTE DE Asiento Contable Caja Chica",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void generarReporteRelacionesAsientoContableCajaChicasSeleccionados() throws Exception {
		ArrayList<AsientoContableCajaChica> asientocontablecajachicasSeleccionados=new ArrayList<AsientoContableCajaChica>();		
		
		asientocontablecajachicasSeleccionados=this.getAsientoContableCajaChicasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
					
		//this.sTipoReporteExtra="MasterRelaciones";
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		
		this.generarReporteAsientoContableCajaChicas("Todos",asientocontablecajachicasSeleccionados);
		
	}	
	
	public void generarReporteNormalAsientoContableCajaChicasSeleccionados() throws Exception {
		ArrayList<AsientoContableCajaChica> asientocontablecajachicasSeleccionados=new ArrayList<AsientoContableCajaChica>();		
		
		asientocontablecajachicasSeleccionados=this.getAsientoContableCajaChicasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
								
		if(this.sTipoReporte.equals("FORMULARIO")) {
			this.sTipoReporteExtra="Vertical";					
		}
		
		/*
		this.sTipoReporteExtra="";
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.generarReporteAsientoContableCajaChicas("Todos",asientocontablecajachicasSeleccionados);
	}		
	
	public void generarReporteProcesoAccionAsientoContableCajaChicasSeleccionados(String sProcesoReporte) throws Exception {
		ArrayList<AsientoContableCajaChica> asientocontablecajachicasSeleccionados=new ArrayList<AsientoContableCajaChica>();
		
		asientocontablecajachicasSeleccionados=this.getAsientoContableCajaChicasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(false,false,true,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		this.sTipoReporteExtra=sProcesoReporte.toLowerCase();
		
		this.esReporteAccionProceso=true;
		this.generarReporteAsientoContableCajaChicas("Todos",asientocontablecajachicasSeleccionados);
		this.esReporteAccionProceso=false;
	}
	
	
	public void mostrarReporteDinamicoAsientoContableCajaChicasSeleccionados() throws Exception {
		ArrayList<AsientoContableCajaChica> asientocontablecajachicasSeleccionados=new ArrayList<AsientoContableCajaChica>();		
		
		
		this.abrirInicializarFrameReporteDinamicoAsientoContableCajaChica();
		
		
		asientocontablecajachicasSeleccionados=this.getAsientoContableCajaChicasSeleccionados(true);
		
		this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirFrameReporteDinamicoAsientoContableCajaChica();
		
		
		//this.generarReporteAsientoContableCajaChicas("Todos",asientocontablecajachicasSeleccionados ,asientocontablecajachicaImplementable,asientocontablecajachicaImplementableHome);
	}
	
	public void mostrarImportacionAsientoContableCajaChicas() throws Exception {
		//this.sTipoReporteExtra="";
		//this.actualizarVariablesTipoReporte(true,false,false,"");
		
		
		this.abrirInicializarFrameImportacionAsientoContableCajaChica();
		
		this.abrirFrameImportacionAsientoContableCajaChica();		
		
			
		//this.generarReporteAsientoContableCajaChicas("Todos",asientocontablecajachicasSeleccionados ,asientocontablecajachicaImplementable,asientocontablecajachicaImplementableHome);
	}
	
	public void importarAsientoContableCajaChicas() throws Exception {		
	
	}
	
	public void exportarAsientoContableCajaChicasSeleccionados() throws Exception {
		Boolean existe=false;
		
		if(this.sTipoArchivoReporte.equals("EXCEL")) {
			existe=true;
			this.exportarExcelAsientoContableCajaChicasSeleccionados();
			
		} else if(this.sTipoArchivoReporte.equals("TEXTO")) {
			existe=true;
			this.exportarTextoAsientoContableCajaChicasSeleccionados();
		
		} else if(this.sTipoArchivoReporte.equals("XML")) {
			existe=true;
			this.exportarXmlAsientoContableCajaChicasSeleccionados();
		} 
		
		if(!existe) {
			JOptionPane.showMessageDialog(this,"SELECCIONE UN TIPO DE ARCHIVO VALIDO","EXPORTACION DE Asiento Contable Caja Chica",JOptionPane.ERROR_MESSAGE);
		}
	}
	
	public void exportarTextoAsientoContableCajaChicasSeleccionados() throws Exception {
		ArrayList<AsientoContableCajaChica> asientocontablecajachicasSeleccionados=new ArrayList<AsientoContableCajaChica>();		
		
		asientocontablecajachicasSeleccionados=this.getAsientoContableCajaChicasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"asientocontablecajachica."+"txt";//Funciones2.getTipoExtensionArchivoExportar(this.parametroGeneralUsuario);
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		BufferedWriter bufferedWriter = null;
		FileWriter fileWriter=null;
		
		fileWriter=new FileWriter(sPath);
		
		bufferedWriter = new BufferedWriter(fileWriter);
		
		try {
			if(conCabecera) {
				sFilaCabecera=this.getFilaCabeceraExportarAsientoContableCajaChica(sDelimiter);
				
				bufferedWriter.write(sFilaCabecera);
			}				
			
			for(AsientoContableCajaChica asientocontablecajachicaAux:asientocontablecajachicasSeleccionados) {
				sFilaDatos=this.getFilaDatosExportarAsientoContableCajaChica(asientocontablecajachicaAux,sDelimiter);
				
				bufferedWriter.write(sFilaDatos);
				
				//asientocontablecajachicaAux.setsDetalleGeneralEntityReporte(asientocontablecajachicaAux.toString());			
			}
			
			bufferedWriter.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Asiento Contable Caja Chica",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {
       		if (bufferedWriter != null) {
				bufferedWriter.close();
			}
		}
	}
	
	public String getFilaCabeceraExportarAsientoContableCajaChica(String sDelimiter) {
		String sFilaCabecera="";
		
		
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_ID;

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_VERSIONROW;
		}

		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_IDUSUARIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_IDMES;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_SECUENCIAL;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_IDMONEDA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_FECHA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPLEADO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_IDESTADOASIENTOCONTABLECAJACHICA;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_IDCLIENTE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPODOCUMENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_IDCUENTACONTABLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO;
		sFilaCabecera+=sDelimiter;
		sFilaCabecera+=AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO;
		
		return sFilaCabecera;
	}
	
	public String getFilaDatosExportarAsientoContableCajaChica(AsientoContableCajaChica asientocontablecajachica,String sDelimiter) {
		String sFilaDatos="";
		
		sFilaDatos+="\r\n";
		
		
		sFilaDatos+=asientocontablecajachica.getId().toString();

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
			sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.getVersionRow().toString();
		}

		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.getempresa_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.getsucursal_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.getejercicio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.getperiodo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.getusuario_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.getanio_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.getmes_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.getsecuencial().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.getmoneda_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.getfecha().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.getempleado_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.getestadoasientocontablecajachica_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.getes_proveedor().toString();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.getcliente_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.gettransaccion_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.gettipodocumento_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.getcuentacontable_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.getdetalle();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.getmodulo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.gettipomovimiento_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.gettipotransaccionmodulo_descripcion();
		sFilaDatos+=sDelimiter;
		sFilaDatos+=asientocontablecajachica.gettipomovimientomodulo_descripcion();
		
		return sFilaDatos;
	}
	
	//@SuppressWarnings("deprecation")
	public void exportarExcelAsientoContableCajaChicasSeleccionados() throws Exception {
		ArrayList<AsientoContableCajaChica> asientocontablecajachicasSeleccionados=new ArrayList<AsientoContableCajaChica>();		
		
		asientocontablecajachicasSeleccionados=this.getAsientoContableCajaChicasSeleccionados(true);
		
		String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"asientocontablecajachica.xls";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		FileOutputStream fileOutputStream=null;
		
		try {
			HSSFWorkbook workbook = new HSSFWorkbook();
			HSSFSheet sheet = workbook.createSheet("AsientoContableCajaChicas");
						
		    			
			Integer iRow=0;
			Integer iCell=0;
			
			HSSFRow row = sheet.createRow(iRow);
			HSSFCell cell = row.createCell(iCell);
			//cell.setCellValue("Blahblah");

			if(conCabecera) {
				this.getFilaCabeceraExportarExcelAsientoContableCajaChica(row);				
				iRow++;
			}				
			
			for(AsientoContableCajaChica asientocontablecajachicaAux:asientocontablecajachicasSeleccionados) {
				row = sheet.createRow(iRow);
				
				this.getFilaDatosExportarExcelAsientoContableCajaChica(asientocontablecajachicaAux,row);
				
				iRow++;
			}
			
			
			fileOutputStream = new FileOutputStream(new File(sPath));
		    
			workbook.write(fileOutputStream);
			
			//fileOutputStream.close();
			
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Asiento Contable Caja Chica",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			
       		if (fileOutputStream != null) {
				fileOutputStream.close();
			}			
		}
	}		
	
	public void exportarXmlAsientoContableCajaChicasSeleccionados() throws Exception {
		ArrayList<AsientoContableCajaChica> asientocontablecajachicasSeleccionados=new ArrayList<AsientoContableCajaChica>();		
		
		asientocontablecajachicasSeleccionados=this.getAsientoContableCajaChicasSeleccionados(true);
		
		//String sTipo=Funciones2.getTipoExportar(this.parametroGeneralUsuario);
		//Boolean conCabecera=this.parametroGeneralUsuario.getcon_exportar_cabecera();
		//String sDelimiter=Funciones2.getTipoDelimiter(this.parametroGeneralUsuario);
		String sPath=this.parametroGeneralUsuario.getpath_exportar()+"asientocontablecajachica.xml";
		
		String sFilaCabecera="";
		String sFilaDatos="";
		
		DocumentBuilderFactory documentBuilderFactory=null;
		DocumentBuilder documentBuilder =null;
		
		try {
			documentBuilderFactory = DocumentBuilderFactory.newInstance();
			documentBuilder = documentBuilderFactory.newDocumentBuilder();
	
			Document document = documentBuilder.newDocument();
			Element elementRoot = document.createElement("asientocontablecajachicas");
			
			document.appendChild(elementRoot);
		    			
												
			Element element = null;//document.createElement("asientocontablecajachica");
			//elementRoot.appendChild(element);
		
			for(AsientoContableCajaChica asientocontablecajachicaAux:asientocontablecajachicasSeleccionados) {
				element = document.createElement("asientocontablecajachica");
				elementRoot.appendChild(element);
			
				this.setFilaDatosExportarXmlAsientoContableCajaChica(asientocontablecajachicaAux,document,element);
			}
			
			TransformerFactory transformerFactory = TransformerFactory.newInstance();
			Transformer transformer = transformerFactory.newTransformer();
			DOMSource domSource = new DOMSource(document);
			
			StreamResult streamResult = new StreamResult(new File(sPath));
	
			transformer.transform(domSource, streamResult);
						
			Constantes2.S_PATH_ULTIMO_ARCHIVO=sPath;
			
			if(this.parametroGeneralUsuario.getcon_mensaje_confirmacion() && !this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {//Constantes.ISMOSTRARMENSAJESMANTENIMIENTO && 
				JOptionPane.showMessageDialog(this,"EXPORTADO CORRECTAMENTE:"+sPath,"MANTENIMIENTO DE Asiento Contable Caja Chica",JOptionPane.INFORMATION_MESSAGE);
			}
		} catch (Exception e) {
			throw e;
			
		} finally {			       				
		}
	}	
	
	//@SuppressWarnings("deprecation")
	public void getFilaCabeceraExportarExcelAsientoContableCajaChica(HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_ID);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_VERSIONROW);
		}

		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA);
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL);
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO);
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO);
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDUSUARIO);
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO);
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDMES);
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_SECUENCIAL);
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDMONEDA);
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_FECHA);
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPLEADO);
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDESTADOASIENTOCONTABLECAJACHICA);
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR);
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDCLIENTE);
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION);
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPODOCUMENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDCUENTACONTABLE);
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE);
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO);
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTO);
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO);
		cell = row.createCell(iColumn++);cell.setCellValue(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO);
	}
	
	//@SuppressWarnings("deprecation")
	public void getFilaDatosExportarExcelAsientoContableCajaChica(AsientoContableCajaChica asientocontablecajachica,HSSFRow row) {
		Integer iColumn=0;
		
		
		HSSFCell cell =null;
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.getId());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.getempresa_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.getsucursal_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.getejercicio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.getperiodo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.getusuario_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.getanio_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.getmes_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.getsecuencial());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.getmoneda_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.getfecha());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.getempleado_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.getestadoasientocontablecajachica_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.getes_proveedor());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.getcliente_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.gettransaccion_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.gettipodocumento_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.getcuentacontable_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.getdetalle());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.getmodulo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.gettipomovimiento_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.gettipotransaccionmodulo_descripcion());
		cell = row.createCell(iColumn++);cell.setCellValue(asientocontablecajachica.gettipomovimientomodulo_descripcion());				
	}
	
	public void setFilaDatosExportarXmlAsientoContableCajaChica(AsientoContableCajaChica asientocontablecajachica,Document document,Element element) {
		/*
		Element lastname = document.createElement("lastname");
		lastname.appendChild(document.createTextNode("mook kim"));
		element.appendChild(lastname);
		*/
		

		Element elementId = document.createElement(AsientoContableCajaChicaConstantesFunciones.ID);
		elementId.appendChild(document.createTextNode(asientocontablecajachica.getId().toString().trim()));
		element.appendChild(elementId);

		if(parametroGeneralUsuario.getcon_exportar_campo_version()){

		Element elementVersionRow = document.createElement(AsientoContableCajaChicaConstantesFunciones.VERSIONROW);
		elementVersionRow.appendChild(document.createTextNode(asientocontablecajachica.getVersionRow().toString().trim()));
		element.appendChild(elementVersionRow);
		}


		Element elementempresa_descripcion = document.createElement(AsientoContableCajaChicaConstantesFunciones.IDEMPRESA);
		elementempresa_descripcion.appendChild(document.createTextNode(asientocontablecajachica.getempresa_descripcion()));
		element.appendChild(elementempresa_descripcion);

		Element elementsucursal_descripcion = document.createElement(AsientoContableCajaChicaConstantesFunciones.IDSUCURSAL);
		elementsucursal_descripcion.appendChild(document.createTextNode(asientocontablecajachica.getsucursal_descripcion()));
		element.appendChild(elementsucursal_descripcion);

		Element elementejercicio_descripcion = document.createElement(AsientoContableCajaChicaConstantesFunciones.IDEJERCICIO);
		elementejercicio_descripcion.appendChild(document.createTextNode(asientocontablecajachica.getejercicio_descripcion()));
		element.appendChild(elementejercicio_descripcion);

		Element elementperiodo_descripcion = document.createElement(AsientoContableCajaChicaConstantesFunciones.IDPERIODO);
		elementperiodo_descripcion.appendChild(document.createTextNode(asientocontablecajachica.getperiodo_descripcion()));
		element.appendChild(elementperiodo_descripcion);

		Element elementusuario_descripcion = document.createElement(AsientoContableCajaChicaConstantesFunciones.IDUSUARIO);
		elementusuario_descripcion.appendChild(document.createTextNode(asientocontablecajachica.getusuario_descripcion()));
		element.appendChild(elementusuario_descripcion);

		Element elementanio_descripcion = document.createElement(AsientoContableCajaChicaConstantesFunciones.IDANIO);
		elementanio_descripcion.appendChild(document.createTextNode(asientocontablecajachica.getanio_descripcion()));
		element.appendChild(elementanio_descripcion);

		Element elementmes_descripcion = document.createElement(AsientoContableCajaChicaConstantesFunciones.IDMES);
		elementmes_descripcion.appendChild(document.createTextNode(asientocontablecajachica.getmes_descripcion()));
		element.appendChild(elementmes_descripcion);

		Element elementsecuencial = document.createElement(AsientoContableCajaChicaConstantesFunciones.SECUENCIAL);
		elementsecuencial.appendChild(document.createTextNode(asientocontablecajachica.getsecuencial().toString().trim()));
		element.appendChild(elementsecuencial);

		Element elementmoneda_descripcion = document.createElement(AsientoContableCajaChicaConstantesFunciones.IDMONEDA);
		elementmoneda_descripcion.appendChild(document.createTextNode(asientocontablecajachica.getmoneda_descripcion()));
		element.appendChild(elementmoneda_descripcion);

		Element elementfecha = document.createElement(AsientoContableCajaChicaConstantesFunciones.FECHA);
		elementfecha.appendChild(document.createTextNode(asientocontablecajachica.getfecha().toString().trim()));
		element.appendChild(elementfecha);

		Element elementempleado_descripcion = document.createElement(AsientoContableCajaChicaConstantesFunciones.IDEMPLEADO);
		elementempleado_descripcion.appendChild(document.createTextNode(asientocontablecajachica.getempleado_descripcion()));
		element.appendChild(elementempleado_descripcion);

		Element elementestadoasientocontablecajachica_descripcion = document.createElement(AsientoContableCajaChicaConstantesFunciones.IDESTADOASIENTOCONTABLECAJACHICA);
		elementestadoasientocontablecajachica_descripcion.appendChild(document.createTextNode(asientocontablecajachica.getestadoasientocontablecajachica_descripcion()));
		element.appendChild(elementestadoasientocontablecajachica_descripcion);

		Element elementes_proveedor = document.createElement(AsientoContableCajaChicaConstantesFunciones.ESPROVEEDOR);
		elementes_proveedor.appendChild(document.createTextNode(asientocontablecajachica.getes_proveedor().toString().trim()));
		element.appendChild(elementes_proveedor);

		Element elementcliente_descripcion = document.createElement(AsientoContableCajaChicaConstantesFunciones.IDCLIENTE);
		elementcliente_descripcion.appendChild(document.createTextNode(asientocontablecajachica.getcliente_descripcion()));
		element.appendChild(elementcliente_descripcion);

		Element elementtransaccion_descripcion = document.createElement(AsientoContableCajaChicaConstantesFunciones.IDTRANSACCION);
		elementtransaccion_descripcion.appendChild(document.createTextNode(asientocontablecajachica.gettransaccion_descripcion()));
		element.appendChild(elementtransaccion_descripcion);

		Element elementtipodocumento_descripcion = document.createElement(AsientoContableCajaChicaConstantesFunciones.IDTIPODOCUMENTO);
		elementtipodocumento_descripcion.appendChild(document.createTextNode(asientocontablecajachica.gettipodocumento_descripcion()));
		element.appendChild(elementtipodocumento_descripcion);

		Element elementcuentacontable_descripcion = document.createElement(AsientoContableCajaChicaConstantesFunciones.IDCUENTACONTABLE);
		elementcuentacontable_descripcion.appendChild(document.createTextNode(asientocontablecajachica.getcuentacontable_descripcion()));
		element.appendChild(elementcuentacontable_descripcion);

		Element elementdetalle = document.createElement(AsientoContableCajaChicaConstantesFunciones.DETALLE);
		elementdetalle.appendChild(document.createTextNode(asientocontablecajachica.getdetalle().trim()));
		element.appendChild(elementdetalle);

		Element elementmodulo_descripcion = document.createElement(AsientoContableCajaChicaConstantesFunciones.IDMODULO);
		elementmodulo_descripcion.appendChild(document.createTextNode(asientocontablecajachica.getmodulo_descripcion()));
		element.appendChild(elementmodulo_descripcion);

		Element elementtipomovimiento_descripcion = document.createElement(AsientoContableCajaChicaConstantesFunciones.IDTIPOMOVIMIENTO);
		elementtipomovimiento_descripcion.appendChild(document.createTextNode(asientocontablecajachica.gettipomovimiento_descripcion()));
		element.appendChild(elementtipomovimiento_descripcion);

		Element elementtipotransaccionmodulo_descripcion = document.createElement(AsientoContableCajaChicaConstantesFunciones.IDTIPOTRANSACCIONMODULO);
		elementtipotransaccionmodulo_descripcion.appendChild(document.createTextNode(asientocontablecajachica.gettipotransaccionmodulo_descripcion()));
		element.appendChild(elementtipotransaccionmodulo_descripcion);

		Element elementtipomovimientomodulo_descripcion = document.createElement(AsientoContableCajaChicaConstantesFunciones.IDTIPOMOVIMIENTOMODULO);
		elementtipomovimientomodulo_descripcion.appendChild(document.createTextNode(asientocontablecajachica.gettipomovimientomodulo_descripcion()));
		element.appendChild(elementtipomovimientomodulo_descripcion);
	}
	
	public void generarReporteGroupGenericoAsientoContableCajaChicasSeleccionados(Boolean soloTotales) throws Exception {
		ArrayList<AsientoContableCajaChica> asientocontablecajachicasSeleccionados=new ArrayList<AsientoContableCajaChica>();
		
		asientocontablecajachicasSeleccionados=this.getAsientoContableCajaChicasSeleccionados(true);
		
		this.actualizarVariablesTipoReporte(true,false,false,"");
		
		/*
		this.esReporteDinamico=false;
		this.sPathReporteDinamico="";
		*/
		
		if(!soloTotales) {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_GENERICO;
		} else {
			this.sTipoReporteExtra=Constantes2.S_REPORTE_EXTRA_GROUP_TOTALES_GENERICO;
		}
		
		this.setColumnaDescripcionReporteGroupGenericoAsientoContableCajaChica(asientocontablecajachicasSeleccionados);
		
		this.generarReporteAsientoContableCajaChicas("Todos",asientocontablecajachicasSeleccionados);
	}
	
	public void setColumnaDescripcionReporteGroupGenericoAsientoContableCajaChica(ArrayList<AsientoContableCajaChica> asientocontablecajachicasSeleccionados) throws Exception {    		
		try {
			//FUNCIONA CON MODEL PERO SE DANA MANTENIMIENTO
			
			Boolean existe=false;
			
			for(AsientoContableCajaChica asientocontablecajachicaAux:asientocontablecajachicasSeleccionados) {
				asientocontablecajachicaAux.setsDetalleGeneralEntityReporte(asientocontablecajachicaAux.toString());
			
				if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPRESA)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(asientocontablecajachicaAux.getempresa_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_IDSUCURSAL)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(asientocontablecajachicaAux.getsucursal_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_IDEJERCICIO)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(asientocontablecajachicaAux.getejercicio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_IDPERIODO)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(asientocontablecajachicaAux.getperiodo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_IDUSUARIO)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(asientocontablecajachicaAux.getusuario_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_IDANIO)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(asientocontablecajachicaAux.getanio_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_IDMES)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(asientocontablecajachicaAux.getmes_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_SECUENCIAL)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(asientocontablecajachicaAux.getsecuencial().toString());
				}
				 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_IDMONEDA)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(asientocontablecajachicaAux.getmoneda_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_FECHA)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getStringPostgresDate(asientocontablecajachicaAux.getfecha()));
				}
				 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_IDEMPLEADO)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(asientocontablecajachicaAux.getempleado_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_IDESTADOASIENTOCONTABLECAJACHICA)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(asientocontablecajachicaAux.getestadoasientocontablecajachica_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_ESPROVEEDOR)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(Funciones2.getDescripcionBoolean(asientocontablecajachicaAux.getes_proveedor()));
				}
				 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_IDCLIENTE)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(asientocontablecajachicaAux.getcliente_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTRANSACCION)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(asientocontablecajachicaAux.gettransaccion_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPODOCUMENTO)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(asientocontablecajachicaAux.gettipodocumento_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_IDCUENTACONTABLE)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(asientocontablecajachicaAux.getcuentacontable_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_DETALLE)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(asientocontablecajachicaAux.getdetalle());
				}
				 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_IDMODULO)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(asientocontablecajachicaAux.getmodulo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTO)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(asientocontablecajachicaAux.gettipomovimiento_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOTRANSACCIONMODULO)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(asientocontablecajachicaAux.gettipotransaccionmodulo_descripcion());
				}
				 else if(sTipoSeleccionar.equals(AsientoContableCajaChicaConstantesFunciones.LABEL_IDTIPOMOVIMIENTOMODULO)) {
					existe=true;
					asientocontablecajachicaAux.setsDescripcionGeneralEntityReporte1(asientocontablecajachicaAux.gettipomovimientomodulo_descripcion());
				}
			}	
											
			if(!existe) {
				JOptionPane.showMessageDialog(this,"NO SE HA SELECCIONADO ALGUNA COLUMNA VALIDA","SELECCIONAR",JOptionPane.ERROR_MESSAGE);
			}										
		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger,AsientoContableCajaChicaConstantesFunciones.CLASSNAME);
		}
	}
	
	
	public void actualizarEstadoCeldasBotonesAsientoContableCajaChica(String sAccion,Boolean isGuardarCambiosEnLote,Boolean isEsMantenimientoRelacionado) throws Exception {
		if(sAccion=="n") {
			if(!this.esParaBusquedaForeignKey) {
				this.isVisibilidadCeldaNuevoAsientoContableCajaChica=true;
				this.isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica=true;
				this.isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica=true;
			}
			
			this.isVisibilidadCeldaModificarAsientoContableCajaChica=false;
			this.isVisibilidadCeldaActualizarAsientoContableCajaChica=false;
			this.isVisibilidadCeldaEliminarAsientoContableCajaChica=false;
			this.isVisibilidadCeldaCancelarAsientoContableCajaChica=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarAsientoContableCajaChica=true;
				} else {
					this.isVisibilidadCeldaGuardarAsientoContableCajaChica=false;
				}
			}
		} else if(sAccion=="a") {
			this.isVisibilidadCeldaNuevoAsientoContableCajaChica=false;
			this.isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica=false;
			this.isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica=false;
			this.isVisibilidadCeldaModificarAsientoContableCajaChica=false;
			this.isVisibilidadCeldaActualizarAsientoContableCajaChica=true;
			this.isVisibilidadCeldaEliminarAsientoContableCajaChica=false;
			this.isVisibilidadCeldaCancelarAsientoContableCajaChica=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarAsientoContableCajaChica=true;
				} else {
					this.isVisibilidadCeldaGuardarAsientoContableCajaChica=false;
				}
			}
		} else if(sAccion=="ae") {
			this.isVisibilidadCeldaNuevoAsientoContableCajaChica=false;
			this.isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica=false;
			this.isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica=false;
			this.isVisibilidadCeldaModificarAsientoContableCajaChica=false;
			this.isVisibilidadCeldaActualizarAsientoContableCajaChica=true;
			this.isVisibilidadCeldaEliminarAsientoContableCajaChica=true;
			this.isVisibilidadCeldaCancelarAsientoContableCajaChica=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarAsientoContableCajaChica=true;
				} else {
					this.isVisibilidadCeldaGuardarAsientoContableCajaChica=false;
				}
			}
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {
			this.isVisibilidadCeldaNuevoAsientoContableCajaChica=false;
			this.isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica=false;
			this.isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica=false;
			this.isVisibilidadCeldaModificarAsientoContableCajaChica=false;
			this.isVisibilidadCeldaActualizarAsientoContableCajaChica=true;
			this.isVisibilidadCeldaEliminarAsientoContableCajaChica=false;
			this.isVisibilidadCeldaCancelarAsientoContableCajaChica=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarAsientoContableCajaChica=false;
				} else {
					this.isVisibilidadCeldaGuardarAsientoContableCajaChica=false;
				}
			}
		} else if(sAccion=="c") {
			this.isVisibilidadCeldaNuevoAsientoContableCajaChica=true;
			this.isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica=true;
			this.isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica=true;
			this.isVisibilidadCeldaModificarAsientoContableCajaChica=false;
			this.isVisibilidadCeldaActualizarAsientoContableCajaChica=false;
			this.isVisibilidadCeldaEliminarAsientoContableCajaChica=false;
			this.isVisibilidadCeldaCancelarAsientoContableCajaChica=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarAsientoContableCajaChica=true;
				} else {
					this.isVisibilidadCeldaGuardarAsientoContableCajaChica=false;
				}
			}
		} else if(sAccion=="t") {
			this.isVisibilidadCeldaNuevoAsientoContableCajaChica=false;
			this.isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica=false;
			this.isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica=false;
			this.isVisibilidadCeldaActualizarAsientoContableCajaChica=false;
			this.isVisibilidadCeldaEliminarAsientoContableCajaChica=false;
			this.isVisibilidadCeldaCancelarAsientoContableCajaChica=false;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarAsientoContableCajaChica=false;
				} else {
					this.isVisibilidadCeldaGuardarAsientoContableCajaChica=false;
				}
			}
		}  else if(sAccion=="s"||sAccion=="s2") {
			this.isVisibilidadCeldaNuevoAsientoContableCajaChica=false;
			this.isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica=false;
			this.isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica=false;
			this.isVisibilidadCeldaModificarAsientoContableCajaChica=true;
			this.isVisibilidadCeldaActualizarAsientoContableCajaChica=false;
			this.isVisibilidadCeldaEliminarAsientoContableCajaChica=false;
			this.isVisibilidadCeldaCancelarAsientoContableCajaChica=true;
			
			if(isEsMantenimientoRelacionado==false) {
				if(isGuardarCambiosEnLote==true) {
					this.isVisibilidadCeldaGuardarAsientoContableCajaChica=false;
				} else {
					this.isVisibilidadCeldaGuardarAsientoContableCajaChica=false;
				}
			}
		}
		
		//ACTUALIZA VISIBILIDAD PANELES
		if(AsientoContableCajaChicaJInternalFrame.CON_DATOS_FRAME && !this.esParaBusquedaForeignKey) {
			//SIEMPRE VISIBLE
			this.isVisibilidadCeldaNuevoAsientoContableCajaChica=true;
			this.isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica=true;
			this.isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica=true;
		} else {
			this.actualizarEstadoPanelsAsientoContableCajaChica(sAccion);						
		}
		
		if(this.esParaBusquedaForeignKey) {
			this.isVisibilidadCeldaCopiarAsientoContableCajaChica=false;
			//this.isVisibilidadCeldaVerFormAsientoContableCajaChica=false;
			this.isVisibilidadCeldaDuplicarAsientoContableCajaChica=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONES
		if(!asientocontablecajachicaSessionBean.getConGuardarRelaciones()) {
			this.isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica=false;
		} else {
			this.isVisibilidadCeldaNuevoAsientoContableCajaChica=false;
			this.isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica=false;
		}
		
		//SI ES MANTENIMIENTO RELACIONADO
		if(asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
			if(!asientocontablecajachicaSessionBean.getConGuardarRelaciones()) {	
				this.isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica=false;												
			}
			
			this.jButtonCerrarAsientoContableCajaChica.setVisible(false);
		}
		
		//SI NO TIENE MAXIMO DE RELACIONES PERMITIDAS
		if(!this.conMaximoRelaciones) {
			this.isVisibilidadCeldaNuevoRelacionesAsientoContableCajaChica=false;
		}
		
		if(!this.permiteMantenimiento(this.asientocontablecajachica)) {
			this.isVisibilidadCeldaActualizarAsientoContableCajaChica=false;
			this.isVisibilidadCeldaEliminarAsientoContableCajaChica=false;
		}
		
		
		
	}
	
	public void actualizarEstadoCeldasBotonesConGuardarRelacionesAsientoContableCajaChica() {
		this.isVisibilidadCeldaNuevoAsientoContableCajaChica=false;
		this.isVisibilidadCeldaGuardarCambiosAsientoContableCajaChica=false;
	}
	
	public void actualizarEstadoPanelsAsientoContableCajaChica(String sAccion) {
		if(sAccion=="n") {
			if(this.jScrollPanelDatosEdicionAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosEdicionAsientoContableCajaChica.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAsientoContableCajaChica!=null) {
				this.jTabbedPaneBusquedasAsientoContableCajaChica.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosAsientoContableCajaChica.setVisible(true);
			}
			
			if(this.jPanelPaginacionAsientoContableCajaChica!=null) {
				this.jPanelPaginacionAsientoContableCajaChica.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesAsientoContableCajaChica!=null) {
				this.jPanelParametrosReportesAsientoContableCajaChica.setVisible(true);		    
			}
			
		} else if(sAccion=="a") {				
			if(this.jScrollPanelDatosEdicionAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosEdicionAsientoContableCajaChica.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAsientoContableCajaChica!=null) {
				this.jTabbedPaneBusquedasAsientoContableCajaChica.setVisible(false);			
			}
			
			
			
			if(this.jScrollPanelDatosAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosAsientoContableCajaChica.setVisible(false);
			}
			
			if(this.jPanelPaginacionAsientoContableCajaChica!=null) {
				this.jPanelPaginacionAsientoContableCajaChica.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesAsientoContableCajaChica!=null) {
				this.jPanelParametrosReportesAsientoContableCajaChica.setVisible(false);
			}
						
		} else if(sAccion=="ae") {		
			if(this.jScrollPanelDatosEdicionAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosEdicionAsientoContableCajaChica.setVisible(true);		
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAsientoContableCajaChica!=null) {
				this.jTabbedPaneBusquedasAsientoContableCajaChica.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosAsientoContableCajaChica.setVisible(false);
			}
			
			if(this.jPanelPaginacionAsientoContableCajaChica!=null) {
				this.jPanelPaginacionAsientoContableCajaChica.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesAsientoContableCajaChica!=null) {
				this.jPanelParametrosReportesAsientoContableCajaChica.setVisible(false);
			}
						
		}
		//Para Mantenimientos de tablas relacionados con mas de columnas minimas
		else if(sAccion=="ae2") {	
			if(this.jScrollPanelDatosEdicionAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosEdicionAsientoContableCajaChica.setVisible(true);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAsientoContableCajaChica!=null) {
				this.jTabbedPaneBusquedasAsientoContableCajaChica.setVisible(false);			
			}
			
			
			if(this.jScrollPanelDatosAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosAsientoContableCajaChica.setVisible(false);
			}
			
			if(this.jPanelPaginacionAsientoContableCajaChica!=null) {
				this.jPanelPaginacionAsientoContableCajaChica.setVisible(false);
			}
			
			if(this.jPanelParametrosReportesAsientoContableCajaChica!=null) {
				this.jPanelParametrosReportesAsientoContableCajaChica.setVisible(false);
			}
						
		} else if(sAccion=="c") {	
			if(this.jScrollPanelDatosEdicionAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosEdicionAsientoContableCajaChica.setVisible(false);			
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAsientoContableCajaChica!=null) {
				this.jTabbedPaneBusquedasAsientoContableCajaChica.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosAsientoContableCajaChica.setVisible(true);
			}
			
			if(this.jPanelPaginacionAsientoContableCajaChica!=null) {
				this.jPanelPaginacionAsientoContableCajaChica.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesAsientoContableCajaChica!=null) {
				this.jPanelParametrosReportesAsientoContableCajaChica.setVisible(true);
			}
						
		} else if(sAccion=="t") {
			
			if(this.jScrollPanelDatosEdicionAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosEdicionAsientoContableCajaChica.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAsientoContableCajaChica!=null) {
				this.jTabbedPaneBusquedasAsientoContableCajaChica.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosAsientoContableCajaChica.setVisible(true);
			}
			
			if(this.jPanelPaginacionAsientoContableCajaChica!=null) {
				this.jPanelPaginacionAsientoContableCajaChica.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesAsientoContableCajaChica!=null) {
				this.jPanelParametrosReportesAsientoContableCajaChica.setVisible(true);
			}
						
		}  else if(sAccion=="s"||sAccion=="s2") {
			if(this.jScrollPanelDatosEdicionAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosEdicionAsientoContableCajaChica.setVisible(false);
			}
			
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAsientoContableCajaChica!=null) {
				this.jTabbedPaneBusquedasAsientoContableCajaChica.setVisible(true);			
			}
			
			
			if(this.jScrollPanelDatosAsientoContableCajaChica!=null) {
				this.jScrollPanelDatosAsientoContableCajaChica.setVisible(true);
			}
			
			if(this.jPanelPaginacionAsientoContableCajaChica!=null) {
				this.jPanelPaginacionAsientoContableCajaChica.setVisible(true);
			}
			
			if(this.jPanelParametrosReportesAsientoContableCajaChica!=null) {
				this.jPanelParametrosReportesAsientoContableCajaChica.setVisible(true);
			}
			
		} 
		
		if(sAccion.equals("relacionado") || this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
			if(!this.conCargarMinimo) {
				//BYDAN_BUSQUEDAS
				
				if(this.jTabbedPaneBusquedasAsientoContableCajaChica!=null) {
					this.jTabbedPaneBusquedasAsientoContableCajaChica.setVisible(false);				
				}
				
			}
			
			if(this.jPanelParametrosReportesAsientoContableCajaChica!=null) {
				this.jPanelParametrosReportesAsientoContableCajaChica.setVisible(false);
			}
		
		} else if(sAccion.equals("no_relacionado") && !this.asientocontablecajachicaSessionBean.getEsGuardarRelacionado()) {
			//BYDAN_BUSQUEDAS
			
			if(this.jTabbedPaneBusquedasAsientoContableCajaChica!=null) {
				this.jTabbedPaneBusquedasAsientoContableCajaChica.setVisible(true);			
			}
			
			if(this.jPanelParametrosReportesAsientoContableCajaChica!=null) {
				this.jPanelParametrosReportesAsientoContableCajaChica.setVisible(true);
			}
		}
	}	
	
	

	public void setVisibilidadBusquedasParaEmpresa(Boolean isParaEmpresa){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpresaNegation=!isParaEmpresa;

			this.isVisibilidadFK_IdCliente=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdClienteAsientoContableCajaChica);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdEmpleadoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoDocumento=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoDocumentoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaEmpresaNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTransaccionAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaSucursal(Boolean isParaSucursal){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaSucursalNegation=!isParaSucursal;

			this.isVisibilidadFK_IdCliente=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdClienteAsientoContableCajaChica);}

			this.isVisibilidadFK_IdEmpleado=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdEmpleadoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoDocumento=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoDocumentoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaSucursalNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTransaccionAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaEjercicio(Boolean isParaEjercicio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEjercicioNegation=!isParaEjercicio;

			this.isVisibilidadFK_IdCliente=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdClienteAsientoContableCajaChica);}

			this.isVisibilidadFK_IdEmpleado=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdEmpleadoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoDocumento=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoDocumentoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaEjercicioNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTransaccionAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaPeriodo(Boolean isParaPeriodo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaPeriodoNegation=!isParaPeriodo;

			this.isVisibilidadFK_IdCliente=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdClienteAsientoContableCajaChica);}

			this.isVisibilidadFK_IdEmpleado=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdEmpleadoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoDocumento=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoDocumentoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaPeriodoNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTransaccionAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaUsuario(Boolean isParaUsuario){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaUsuarioNegation=!isParaUsuario;

			this.isVisibilidadFK_IdCliente=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdClienteAsientoContableCajaChica);}

			this.isVisibilidadFK_IdEmpleado=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdEmpleadoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoDocumento=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoDocumentoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaUsuarioNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTransaccionAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaAnio(Boolean isParaAnio){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaAnioNegation=!isParaAnio;

			this.isVisibilidadFK_IdCliente=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdClienteAsientoContableCajaChica);}

			this.isVisibilidadFK_IdEmpleado=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdEmpleadoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoDocumento=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoDocumentoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaAnioNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTransaccionAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaMes(Boolean isParaMes){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMesNegation=!isParaMes;

			this.isVisibilidadFK_IdCliente=isParaMesNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdClienteAsientoContableCajaChica);}

			this.isVisibilidadFK_IdEmpleado=isParaMesNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdEmpleadoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoDocumento=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoDocumentoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaMesNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTransaccionAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaMoneda(Boolean isParaMoneda){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaMonedaNegation=!isParaMoneda;

			this.isVisibilidadFK_IdCliente=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdClienteAsientoContableCajaChica);}

			this.isVisibilidadFK_IdEmpleado=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdEmpleadoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoDocumento=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoDocumentoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaMonedaNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTransaccionAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaEmpleado(Boolean isParaEmpleado){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEmpleadoNegation=!isParaEmpleado;

			this.isVisibilidadFK_IdCliente=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdClienteAsientoContableCajaChica);}

			this.isVisibilidadFK_IdEmpleado=isParaEmpleado;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdEmpleadoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoDocumento=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoDocumentoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaEmpleadoNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTransaccionAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaEstadoAsientoContableCajaChica(Boolean isParaEstadoAsientoContableCajaChica){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaEstadoAsientoContableCajaChicaNegation=!isParaEstadoAsientoContableCajaChica;

			this.isVisibilidadFK_IdCliente=isParaEstadoAsientoContableCajaChicaNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdClienteAsientoContableCajaChica);}

			this.isVisibilidadFK_IdEmpleado=isParaEstadoAsientoContableCajaChicaNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdEmpleadoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoDocumento=isParaEstadoAsientoContableCajaChicaNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoDocumentoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaEstadoAsientoContableCajaChicaNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaEstadoAsientoContableCajaChicaNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaEstadoAsientoContableCajaChicaNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTransaccionAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaCliente(Boolean isParaCliente){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaClienteNegation=!isParaCliente;

			this.isVisibilidadFK_IdCliente=isParaCliente;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdClienteAsientoContableCajaChica);}

			this.isVisibilidadFK_IdEmpleado=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdEmpleadoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoDocumento=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoDocumentoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaClienteNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTransaccionAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaTransaccion(Boolean isParaTransaccion){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTransaccionNegation=!isParaTransaccion;

			this.isVisibilidadFK_IdCliente=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdClienteAsientoContableCajaChica);}

			this.isVisibilidadFK_IdEmpleado=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdEmpleadoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoDocumento=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoDocumentoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTransaccionNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaTransaccion;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTransaccionAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoDocumento(Boolean isParaTipoDocumento){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoDocumentoNegation=!isParaTipoDocumento;

			this.isVisibilidadFK_IdCliente=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdClienteAsientoContableCajaChica);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdEmpleadoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoDocumento=isParaTipoDocumento;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoDocumentoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaTipoDocumentoNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTransaccionAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaCuentaContable(Boolean isParaCuentaContable){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaCuentaContableNegation=!isParaCuentaContable;

			this.isVisibilidadFK_IdCliente=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdClienteAsientoContableCajaChica);}

			this.isVisibilidadFK_IdEmpleado=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdEmpleadoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoDocumento=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoDocumentoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaCuentaContableNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTransaccionAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaModulo(Boolean isParaModulo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaModuloNegation=!isParaModulo;

			this.isVisibilidadFK_IdCliente=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdClienteAsientoContableCajaChica);}

			this.isVisibilidadFK_IdEmpleado=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdEmpleadoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoDocumento=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoDocumentoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaModuloNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTransaccionAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoMovimiento(Boolean isParaTipoMovimiento){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoMovimientoNegation=!isParaTipoMovimiento;

			this.isVisibilidadFK_IdCliente=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdClienteAsientoContableCajaChica);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdEmpleadoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoDocumento=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoDocumentoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaTipoMovimientoNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTransaccionAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoTransaccionModulo(Boolean isParaTipoTransaccionModulo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoTransaccionModuloNegation=!isParaTipoTransaccionModulo;

			this.isVisibilidadFK_IdCliente=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdClienteAsientoContableCajaChica);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdEmpleadoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoDocumento=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoDocumentoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTipoTransaccionModulo;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaTipoTransaccionModuloNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTransaccionAsientoContableCajaChica);}
		}
		
	}

	public void setVisibilidadBusquedasParaTipoMovimientoModulo(Boolean isParaTipoMovimientoModulo){
		//BYDAN_BUSQUEDAS
		
		if(!this.conCargarMinimo) {

			Boolean isParaTipoMovimientoModuloNegation=!isParaTipoMovimientoModulo;

			this.isVisibilidadFK_IdCliente=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdCliente) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdClienteAsientoContableCajaChica);}

			this.isVisibilidadFK_IdEmpleado=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdEmpleado) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdEmpleadoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoDocumento=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdTipoDocumento) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoDocumentoAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoMovimientoModulo=isParaTipoMovimientoModulo;
			if(!this.isVisibilidadFK_IdTipoMovimientoModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTipoTransaccionModulo=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdTipoTransaccionModulo) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);}

			this.isVisibilidadFK_IdTransaccion=isParaTipoMovimientoModuloNegation;
			if(!this.isVisibilidadFK_IdTransaccion) {this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(jPanelFK_IdTransaccionAsientoContableCajaChica);}
		}
		
	}
	
	

	public String registrarSesionAsientoContableCajaChicaParaDetalleAsientoContableCajaChicas() throws Exception {
		Boolean isPaginaPopupDetalleAsientoContableCajaChica=false;

		try {

			if(this.asientocontablecajachicaSessionBean==null) {
				this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaSessionBean==null) {
				this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaSessionBean=new DetalleAsientoContableCajaChicaSessionBean();
			}

			this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaSessionBean.setsPathNavegacionActual(asientocontablecajachicaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+DetalleAsientoContableCajaChicaConstantesFunciones.SCLASSWEBTITULO);
			this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaSessionBean.setisPermiteRecargarInformacion(false);
			isPaginaPopupDetalleAsientoContableCajaChica=this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaSessionBean.getisPaginaPopup();
			this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeDetalleAsientoContableCajaChica(true);
			this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeDetalleAsientoContableCajaChica(AsientoContableCajaChicaConstantesFunciones.SNOMBREOPCION);
			this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaSessionBean.setisBusquedaDesdeForeignKeySesionAsientoContableCajaChica(true);
			this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaSessionBean.setlidAsientoContableCajaChicaActual(this.idAsientoContableCajaChicaActual);
			this.jInternalFrameDetalleFormAsientoContableCajaChica.detalleasientocontablecajachicaSessionBean.setNoMantenimiento(true);

			asientocontablecajachicaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyAsientoContableCajaChica(true);
			asientocontablecajachicaSessionBean.setlIdAsientoContableCajaChicaActualForeignKey(this.idAsientoContableCajaChicaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}

		return "";
	}
	
	

	public String registrarSesionAsientoContableCajaChicaParaBusquedaEmpleados() throws Exception {
		Boolean isPaginaPopupEmpleado=false;

		try {

			if(asientocontablecajachicaSessionBean==null) {
				asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(empleadoSessionBean==null) {
				empleadoSessionBean=new EmpleadoSessionBean();
			}

			empleadoSessionBean.setsPathNavegacionActual(asientocontablecajachicaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+EmpleadoConstantesFunciones.SCLASSWEBTITULO);
			empleadoSessionBean.setisPermiteRecargarInformacion(false);
			empleadoSessionBean.setisPaginaPopup(true);
			isPaginaPopupEmpleado=empleadoSessionBean.getisPaginaPopup();
			empleadoSessionBean.setisPaginaPopup(false);
			empleadoSessionBean.setEstaModoBusqueda(true);
			empleadoSessionBean.setsFuncionBusquedaRapida("window.opener.asientocontablecajachicaFuncionGeneral.setCombosCodigoDesdeBusquedaid_empleado(TO_REPLACE);");
			empleadoSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeEmpleado(true);
			empleadoSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeEmpleado(AsientoContableCajaChicaConstantesFunciones.SNOMBREOPCION);
			//empleadoSessionBean.setisBusquedaDesdeForeignKeySesionAsientoContableCajaChica(true);
			//empleadoSessionBean.setlidAsientoContableCajaChicaActual(this.idAsientoContableCajaChicaActual);

			asientocontablecajachicaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyAsientoContableCajaChica(true);
			asientocontablecajachicaSessionBean.setlIdAsientoContableCajaChicaActualForeignKey(this.idAsientoContableCajaChicaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionAsientoContableCajaChicaParaBusquedaClientes() throws Exception {
		Boolean isPaginaPopupCliente=false;

		try {

			if(asientocontablecajachicaSessionBean==null) {
				asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(clienteSessionBean==null) {
				clienteSessionBean=new ClienteSessionBean();
			}

			clienteSessionBean.setsPathNavegacionActual(asientocontablecajachicaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+ClienteConstantesFunciones.SCLASSWEBTITULO);
			clienteSessionBean.setisPermiteRecargarInformacion(false);
			clienteSessionBean.setisPaginaPopup(true);
			isPaginaPopupCliente=clienteSessionBean.getisPaginaPopup();
			clienteSessionBean.setisPaginaPopup(false);
			clienteSessionBean.setEstaModoBusqueda(true);
			clienteSessionBean.setsFuncionBusquedaRapida("window.opener.asientocontablecajachicaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cliente(TO_REPLACE);");
			clienteSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCliente(true);
			clienteSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCliente(AsientoContableCajaChicaConstantesFunciones.SNOMBREOPCION);
			//clienteSessionBean.setisBusquedaDesdeForeignKeySesionAsientoContableCajaChica(true);
			//clienteSessionBean.setlidAsientoContableCajaChicaActual(this.idAsientoContableCajaChicaActual);

			asientocontablecajachicaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyAsientoContableCajaChica(true);
			asientocontablecajachicaSessionBean.setlIdAsientoContableCajaChicaActualForeignKey(this.idAsientoContableCajaChicaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}

	public String registrarSesionAsientoContableCajaChicaParaBusquedaCuentaContables() throws Exception {
		Boolean isPaginaPopupCuentaContable=false;

		try {

			if(asientocontablecajachicaSessionBean==null) {
				asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
			}

			if(cuentacontableSessionBean==null) {
				cuentacontableSessionBean=new CuentaContableSessionBean();
			}

			cuentacontableSessionBean.setsPathNavegacionActual(asientocontablecajachicaSessionBean.getsPathNavegacionActual()+Constantes.SHTMLFLECHA+CuentaContableConstantesFunciones.SCLASSWEBTITULO);
			cuentacontableSessionBean.setisPermiteRecargarInformacion(false);
			cuentacontableSessionBean.setisPaginaPopup(true);
			isPaginaPopupCuentaContable=cuentacontableSessionBean.getisPaginaPopup();
			cuentacontableSessionBean.setisPaginaPopup(false);
			cuentacontableSessionBean.setEstaModoBusqueda(true);
			cuentacontableSessionBean.setsFuncionBusquedaRapida("window.opener.asientocontablecajachicaFuncionGeneral.setCombosCodigoDesdeBusquedaid_cuenta_contable(TO_REPLACE);");
			cuentacontableSessionBean.setisPermiteNavegacionHaciaForeignKeyDesdeCuentaContable(true);
			cuentacontableSessionBean.setsNombrePaginaNavegacionHaciaForeignKeyDesdeCuentaContable(AsientoContableCajaChicaConstantesFunciones.SNOMBREOPCION);
			//cuentacontableSessionBean.setisBusquedaDesdeForeignKeySesionAsientoContableCajaChica(true);
			//cuentacontableSessionBean.setlidAsientoContableCajaChicaActual(this.idAsientoContableCajaChicaActual);

			asientocontablecajachicaSessionBean.setisBusquedaDesdeForeignKeySesionForeignKeyAsientoContableCajaChica(true);
			asientocontablecajachicaSessionBean.setlIdAsientoContableCajaChicaActualForeignKey(this.idAsientoContableCajaChicaActual);

			String strPagina=Constantes.SNONE;
			SistemaLogicAdditional sistemaLogicAdditional=new SistemaLogicAdditional();

			guardarDatosBusquedaSession();

		} catch(Exception e) {
			FuncionesSwing.manageException(this, e,logger);
		}
			return "";
	}
	
	
	public void guardarDatosBusquedaSession() throws Exception {
		
		//AsientoContableCajaChicaSessionBean asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
		
		if(this.asientocontablecajachicaSessionBean==null) {
			this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
		}
		
		this.asientocontablecajachicaSessionBean.setsUltimaBusquedaAsientoContableCajaChica(this.getsAccionBusqueda());
		this.asientocontablecajachicaSessionBean.setiNumeroPaginacion(this.getiNumeroPaginacion());
		this.asientocontablecajachicaSessionBean.setiNumeroPaginacionPagina(this.getiNumeroPaginacionPagina());
		
		if(this.getsAccionBusqueda().equals("Todos")) {
			;
		}
		

		else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
			asientocontablecajachicaSessionBean.setid_cliente(this.getid_clienteFK_IdCliente());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
			asientocontablecajachicaSessionBean.setid_ejercicio(this.getid_ejercicioFK_IdEjercicio());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
			asientocontablecajachicaSessionBean.setid_empleado(this.getid_empleadoFK_IdEmpleado());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
			asientocontablecajachicaSessionBean.setid_empresa(this.getid_empresaFK_IdEmpresa());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
			asientocontablecajachicaSessionBean.setid_modulo(this.getid_moduloFK_IdModulo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
			asientocontablecajachicaSessionBean.setid_periodo(this.getid_periodoFK_IdPeriodo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
			asientocontablecajachicaSessionBean.setid_sucursal(this.getid_sucursalFK_IdSucursal());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoDocumento")) {
			asientocontablecajachicaSessionBean.setid_tipo_documento(this.getid_tipo_documentoFK_IdTipoDocumento());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoMovimientoModulo")) {
			asientocontablecajachicaSessionBean.setid_tipo_movimiento_modulo(this.getid_tipo_movimiento_moduloFK_IdTipoMovimientoModulo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTipoTransaccionModulo")) {
			asientocontablecajachicaSessionBean.setid_tipo_transaccion_modulo(this.getid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdTransaccion")) {
			asientocontablecajachicaSessionBean.setid_transaccion(this.getid_transaccionFK_IdTransaccion());	
		}
		else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
			asientocontablecajachicaSessionBean.setid_usuario(this.getid_usuarioFK_IdUsuario());	
		}
		
	}
	
	public void traerDatosBusquedaDesdeSession() throws Exception {
		//AsientoContableCajaChicaSessionBean asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
		
		if(this.asientocontablecajachicaSessionBean==null) {
			this.asientocontablecajachicaSessionBean=new AsientoContableCajaChicaSessionBean();
		}
		
		if(this.asientocontablecajachicaSessionBean.getsUltimaBusquedaAsientoContableCajaChica()!=null&&!this.asientocontablecajachicaSessionBean.getsUltimaBusquedaAsientoContableCajaChica().equals("")) {
			this.setsAccionBusqueda(asientocontablecajachicaSessionBean.getsUltimaBusquedaAsientoContableCajaChica());
			this.setiNumeroPaginacion(asientocontablecajachicaSessionBean.getiNumeroPaginacion());
			this.setiNumeroPaginacionPagina(asientocontablecajachicaSessionBean.getiNumeroPaginacionPagina());		
				
			if(this.getsAccionBusqueda().equals("Todos")) {
				;
			}
			

			 else if(this.getsAccionBusqueda().equals("FK_IdCliente")) {
				this.setid_clienteFK_IdCliente(asientocontablecajachicaSessionBean.getid_cliente());
				asientocontablecajachicaSessionBean.setid_cliente(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEjercicio")) {
				this.setid_ejercicioFK_IdEjercicio(asientocontablecajachicaSessionBean.getid_ejercicio());
				asientocontablecajachicaSessionBean.setid_ejercicio(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpleado")) {
				this.setid_empleadoFK_IdEmpleado(asientocontablecajachicaSessionBean.getid_empleado());
				asientocontablecajachicaSessionBean.setid_empleado(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdEmpresa")) {
				this.setid_empresaFK_IdEmpresa(asientocontablecajachicaSessionBean.getid_empresa());
				asientocontablecajachicaSessionBean.setid_empresa(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdModulo")) {
				this.setid_moduloFK_IdModulo(asientocontablecajachicaSessionBean.getid_modulo());
				asientocontablecajachicaSessionBean.setid_modulo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdPeriodo")) {
				this.setid_periodoFK_IdPeriodo(asientocontablecajachicaSessionBean.getid_periodo());
				asientocontablecajachicaSessionBean.setid_periodo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdSucursal")) {
				this.setid_sucursalFK_IdSucursal(asientocontablecajachicaSessionBean.getid_sucursal());
				asientocontablecajachicaSessionBean.setid_sucursal(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoDocumento")) {
				this.setid_tipo_documentoFK_IdTipoDocumento(asientocontablecajachicaSessionBean.getid_tipo_documento());
				asientocontablecajachicaSessionBean.setid_tipo_documento(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoMovimientoModulo")) {
				this.setid_tipo_movimiento_moduloFK_IdTipoMovimientoModulo(asientocontablecajachicaSessionBean.getid_tipo_movimiento_modulo());
				asientocontablecajachicaSessionBean.setid_tipo_movimiento_modulo(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTipoTransaccionModulo")) {
				this.setid_tipo_transaccion_moduloFK_IdTipoTransaccionModulo(asientocontablecajachicaSessionBean.getid_tipo_transaccion_modulo());
				asientocontablecajachicaSessionBean.setid_tipo_transaccion_modulo(null);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdTransaccion")) {
				this.setid_transaccionFK_IdTransaccion(asientocontablecajachicaSessionBean.getid_transaccion());
				asientocontablecajachicaSessionBean.setid_transaccion(-1L);
			}
			 else if(this.getsAccionBusqueda().equals("FK_IdUsuario")) {
				this.setid_usuarioFK_IdUsuario(asientocontablecajachicaSessionBean.getid_usuario());
				asientocontablecajachicaSessionBean.setid_usuario(-1L);
			}
		}
		
		this.asientocontablecajachicaSessionBean.setsUltimaBusquedaAsientoContableCajaChica("");
		this.asientocontablecajachicaSessionBean.setiNumeroPaginacion(AsientoContableCajaChicaConstantesFunciones.INUMEROPAGINACION);
		this.asientocontablecajachicaSessionBean.setiNumeroPaginacionPagina(0);
		
	}
	
	public void procesoActualizarFilaTotales(Boolean esCampoValor,String sTipo) {
		try {
			this.actualizarFilaTotales();
				
			this.traerValoresTablaTotales();
			
			this.inicializarActualizarBindingTablaAsientoContableCajaChica(false);
			
			
			
			
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	
	public void updateBusquedasFormularioAsientoContableCajaChica() {
		this.updateBorderResaltarBusquedasFormularioAsientoContableCajaChica();
		this.updateVisibilidadBusquedasFormularioAsientoContableCajaChica();
		this.updateHabilitarBusquedasFormularioAsientoContableCajaChica();
	}
	
	public void updateBorderResaltarBusquedasFormularioAsientoContableCajaChica() {					
	//BYDAN_BUSQUEDAS
		
	int index=0;
		
	if(this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponents().length>0) {
	

		if(this.asientocontablecajachicaConstantesFunciones.resaltarFK_IdClienteAsientoContableCajaChica!=null) {
			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdClienteAsientoContableCajaChica);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);
				jPanel.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarFK_IdClienteAsientoContableCajaChica);
			}
		}

		if(this.asientocontablecajachicaConstantesFunciones.resaltarFK_IdEmpleadoAsientoContableCajaChica!=null) {
			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdEmpleadoAsientoContableCajaChica);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);
				jPanel.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarFK_IdEmpleadoAsientoContableCajaChica);
			}
		}

		if(this.asientocontablecajachicaConstantesFunciones.resaltarFK_IdTipoDocumentoAsientoContableCajaChica!=null) {
			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoDocumentoAsientoContableCajaChica);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);
				jPanel.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarFK_IdTipoDocumentoAsientoContableCajaChica);
			}
		}

		if(this.asientocontablecajachicaConstantesFunciones.resaltarFK_IdTipoMovimientoModuloAsientoContableCajaChica!=null) {
			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);
				jPanel.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarFK_IdTipoMovimientoModuloAsientoContableCajaChica);
			}
		}

		if(this.asientocontablecajachicaConstantesFunciones.resaltarFK_IdTipoTransaccionModuloAsientoContableCajaChica!=null) {
			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);
				jPanel.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarFK_IdTipoTransaccionModuloAsientoContableCajaChica);
			}
		}

		if(this.asientocontablecajachicaConstantesFunciones.resaltarFK_IdTransaccionAsientoContableCajaChica!=null) {
			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTransaccionAsientoContableCajaChica);
			if(index>-1) {
				JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);
				jPanel.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarFK_IdTransaccionAsientoContableCajaChica);
			}
		}
	}	
	
	}
	
	public void updateVisibilidadBusquedasFormularioAsientoContableCajaChica() {
	//BYDAN_BUSQUEDAS
	
	int index=0;
	JPanel jPanel=null;
		
	if(this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdClienteAsientoContableCajaChica);
			jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarFK_IdClienteAsientoContableCajaChica);
			if(!this.asientocontablecajachicaConstantesFunciones.mostrarFK_IdClienteAsientoContableCajaChica && index>-1) {
				this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(index);
			}

			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdEmpleadoAsientoContableCajaChica);
			jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarFK_IdEmpleadoAsientoContableCajaChica);
			if(!this.asientocontablecajachicaConstantesFunciones.mostrarFK_IdEmpleadoAsientoContableCajaChica && index>-1) {
				this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(index);
			}

			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoDocumentoAsientoContableCajaChica);
			jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarFK_IdTipoDocumentoAsientoContableCajaChica);
			if(!this.asientocontablecajachicaConstantesFunciones.mostrarFK_IdTipoDocumentoAsientoContableCajaChica && index>-1) {
				this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(index);
			}

			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);
			jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarFK_IdTipoMovimientoModuloAsientoContableCajaChica);
			if(!this.asientocontablecajachicaConstantesFunciones.mostrarFK_IdTipoMovimientoModuloAsientoContableCajaChica && index>-1) {
				this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(index);
			}

			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);
			jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarFK_IdTipoTransaccionModuloAsientoContableCajaChica);
			if(!this.asientocontablecajachicaConstantesFunciones.mostrarFK_IdTipoTransaccionModuloAsientoContableCajaChica && index>-1) {
				this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(index);
			}

			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTransaccionAsientoContableCajaChica);
			jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);
			//NO VALE SOLO PONIENDO VISIBLE=FALSE, HAY QUE USAR REMOVE
			jPanel.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarFK_IdTransaccionAsientoContableCajaChica);
			if(!this.asientocontablecajachicaConstantesFunciones.mostrarFK_IdTransaccionAsientoContableCajaChica && index>-1) {
				this.jTabbedPaneBusquedasAsientoContableCajaChica.remove(index);
			}
	}	
	
	}
	
	public void updateHabilitarBusquedasFormularioAsientoContableCajaChica() {
	
	//BYDAN_BUSQUEDAS		
		int index=0;
		JPanel jPanel=null;
			
		if(this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponents().length>0) {
	

			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdClienteAsientoContableCajaChica);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarFK_IdClienteAsientoContableCajaChica);
				this.jTabbedPaneBusquedasAsientoContableCajaChica.setEnabledAt(index,this.asientocontablecajachicaConstantesFunciones.activarFK_IdClienteAsientoContableCajaChica);
			}

			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdEmpleadoAsientoContableCajaChica);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarFK_IdEmpleadoAsientoContableCajaChica);
				this.jTabbedPaneBusquedasAsientoContableCajaChica.setEnabledAt(index,this.asientocontablecajachicaConstantesFunciones.activarFK_IdEmpleadoAsientoContableCajaChica);
			}

			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoDocumentoAsientoContableCajaChica);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarFK_IdTipoDocumentoAsientoContableCajaChica);
				this.jTabbedPaneBusquedasAsientoContableCajaChica.setEnabledAt(index,this.asientocontablecajachicaConstantesFunciones.activarFK_IdTipoDocumentoAsientoContableCajaChica);
			}

			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarFK_IdTipoMovimientoModuloAsientoContableCajaChica);
				this.jTabbedPaneBusquedasAsientoContableCajaChica.setEnabledAt(index,this.asientocontablecajachicaConstantesFunciones.activarFK_IdTipoMovimientoModuloAsientoContableCajaChica);
			}

			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarFK_IdTipoTransaccionModuloAsientoContableCajaChica);
				this.jTabbedPaneBusquedasAsientoContableCajaChica.setEnabledAt(index,this.asientocontablecajachicaConstantesFunciones.activarFK_IdTipoTransaccionModuloAsientoContableCajaChica);
			}

			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTransaccionAsientoContableCajaChica);
			if(index>-1) {
				jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);
				//ENABLE PANE=FALSE NO FUNCIONA, ENABLEAT SI
				jPanel.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarFK_IdTransaccionAsientoContableCajaChica);
				this.jTabbedPaneBusquedasAsientoContableCajaChica.setEnabledAt(index,this.asientocontablecajachicaConstantesFunciones.activarFK_IdTransaccionAsientoContableCajaChica);
			}
		}	
	
	}
	
	
	public void resaltarPanelBusquedaAsientoContableCajaChica(String sTipoBusqueda) {
		Boolean existe=false;
		//BYDAN_BUSQUEDAS
		
		int index=0;
		Border resaltar = Funciones2.getBorderResaltar(this.parametroGeneralUsuario,"TAB");

		if(sTipoBusqueda.equals("FK_IdCliente")) {
			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdClienteAsientoContableCajaChica);

			this.jTabbedPaneBusquedasAsientoContableCajaChica.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);

			this.asientocontablecajachicaConstantesFunciones.setResaltarFK_IdClienteAsientoContableCajaChica(resaltar);

			jPanel.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarFK_IdClienteAsientoContableCajaChica);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdEmpleado")) {
			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdEmpleadoAsientoContableCajaChica);

			this.jTabbedPaneBusquedasAsientoContableCajaChica.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);

			this.asientocontablecajachicaConstantesFunciones.setResaltarFK_IdEmpleadoAsientoContableCajaChica(resaltar);

			jPanel.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarFK_IdEmpleadoAsientoContableCajaChica);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoDocumento")) {
			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoDocumentoAsientoContableCajaChica);

			this.jTabbedPaneBusquedasAsientoContableCajaChica.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);

			this.asientocontablecajachicaConstantesFunciones.setResaltarFK_IdTipoDocumentoAsientoContableCajaChica(resaltar);

			jPanel.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarFK_IdTipoDocumentoAsientoContableCajaChica);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoMovimientoModulo")) {
			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoMovimientoModuloAsientoContableCajaChica);

			this.jTabbedPaneBusquedasAsientoContableCajaChica.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);

			this.asientocontablecajachicaConstantesFunciones.setResaltarFK_IdTipoMovimientoModuloAsientoContableCajaChica(resaltar);

			jPanel.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarFK_IdTipoMovimientoModuloAsientoContableCajaChica);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTipoTransaccionModulo")) {
			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTipoTransaccionModuloAsientoContableCajaChica);

			this.jTabbedPaneBusquedasAsientoContableCajaChica.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);

			this.asientocontablecajachicaConstantesFunciones.setResaltarFK_IdTipoTransaccionModuloAsientoContableCajaChica(resaltar);

			jPanel.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarFK_IdTipoTransaccionModuloAsientoContableCajaChica);
			existe=true;
		}
		else if(sTipoBusqueda.equals("FK_IdTransaccion")) {
			index= this.jTabbedPaneBusquedasAsientoContableCajaChica.indexOfComponent(this.jPanelFK_IdTransaccionAsientoContableCajaChica);

			this.jTabbedPaneBusquedasAsientoContableCajaChica.setSelectedIndex(index);

			JPanel jPanel=(JPanel)this.jTabbedPaneBusquedasAsientoContableCajaChica.getComponent(index);

			this.asientocontablecajachicaConstantesFunciones.setResaltarFK_IdTransaccionAsientoContableCajaChica(resaltar);

			jPanel.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarFK_IdTransaccionAsientoContableCajaChica);
			existe=true;
		}
		

		if(existe) {
			
			this.jTtoolBarAsientoContableCajaChica.setBorder(resaltar);
			
		}
	}	
	
	//NO FUNCIONA
	public void windowClosed(WindowEvent e) {	
	}
		
	public void windowClosing(WindowEvent e) {	    	    
	}

	public void windowOpened(WindowEvent e) {	    
	}

	public void windowIconified(WindowEvent e) {	    
	}

	public void windowDeiconified(WindowEvent e) {	    
	}

	public void windowActivated(WindowEvent e) {	    
	}

	public void windowDeactivated(WindowEvent e) {	    
	}

	public void windowGainedFocus(WindowEvent e) {	    
	}

	public void windowLostFocus(WindowEvent e) {	    
	}
	
	public void updateControlesFormularioAsientoContableCajaChica() throws Exception {

		if(this.jInternalFrameDetalleFormAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {			
			this.inicializarFormDetalle();
		}
		
		this.updateBorderResaltarControlesFormularioAsientoContableCajaChica();
		this.updateVisibilidadResaltarControlesFormularioAsientoContableCajaChica();
		this.updateHabilitarResaltarControlesFormularioAsientoContableCajaChica();
		
	}
	
	public void updateBorderResaltarControlesFormularioAsientoContableCajaChica() throws Exception {
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
	
		if(this.asientocontablecajachicaConstantesFunciones.resaltaridAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelidAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltaridAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltarid_empresaAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empresaAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarid_empresaAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltarid_sucursalAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_sucursalAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarid_sucursalAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltarid_ejercicioAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_ejercicioAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarid_ejercicioAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltarid_periodoAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_periodoAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarid_periodoAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltarid_usuarioAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_usuarioAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarid_usuarioAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltarid_anioAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_anioAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarid_anioAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltarid_mesAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_mesAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarid_mesAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltarsecuencialAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jTextFieldsecuencialAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarsecuencialAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltarid_monedaAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_monedaAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarid_monedaAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltarfechaAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jDateChooserfechaAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarfechaAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltarid_empleadoAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empleadoAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarid_empleadoAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltarid_estado_asiento_contableAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_estado_asiento_contableAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarid_estado_asiento_contableAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltares_proveedorAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jCheckBoxes_proveedorAsientoContableCajaChica.setBorderPainted(true);this.jInternalFrameDetalleFormAsientoContableCajaChica.jCheckBoxes_proveedorAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltares_proveedorAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltarid_clienteAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_clienteAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarid_clienteAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltarid_transaccionAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_transaccionAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarid_transaccionAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltarid_tipo_documentoAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_documentoAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarid_tipo_documentoAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltarid_cuenta_contableAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_cuenta_contableAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarid_cuenta_contableAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltardetalleAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jTextAreadetalleAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltardetalleAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltarid_moduloAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_moduloAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarid_moduloAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltarid_tipo_movimientoAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimientoAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarid_tipo_movimientoAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltarid_tipo_transaccion_moduloAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarid_tipo_transaccion_moduloAsientoContableCajaChica);}
		if(this.asientocontablecajachicaConstantesFunciones.resaltarid_tipo_movimiento_moduloAsientoContableCajaChica!=null && this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChica.setBorder(this.asientocontablecajachicaConstantesFunciones.resaltarid_tipo_movimiento_moduloAsientoContableCajaChica);}
	}
	
	public void updateVisibilidadResaltarControlesFormularioAsientoContableCajaChica() throws Exception {		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
	
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelidAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostraridAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelidAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostraridAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empresaAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_empresaAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelid_empresaAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_empresaAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_sucursalAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_sucursalAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelid_sucursalAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_sucursalAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_ejercicioAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_ejercicioAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelid_ejercicioAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_ejercicioAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_periodoAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_periodoAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelid_periodoAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_periodoAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_usuarioAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_usuarioAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelid_usuarioAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_usuarioAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_anioAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_anioAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelid_anioAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_anioAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_mesAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_mesAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelid_mesAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_mesAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jTextFieldsecuencialAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarsecuencialAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelsecuencialAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarsecuencialAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_monedaAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_monedaAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelid_monedaAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_monedaAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jDateChooserfechaAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarfechaAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelfechaAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarfechaAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empleadoAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_empleadoAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelid_empleadoAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_empleadoAsientoContableCajaChica);
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_empleadoAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_empleadoAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_estado_asiento_contableAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_estado_asiento_contableAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelid_estado_asiento_contableAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_estado_asiento_contableAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jCheckBoxes_proveedorAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrares_proveedorAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPaneles_proveedorAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrares_proveedorAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_clienteAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_clienteAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelid_clienteAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_clienteAsientoContableCajaChica);
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_clienteAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_clienteAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_transaccionAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_transaccionAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelid_transaccionAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_transaccionAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_documentoAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_tipo_documentoAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelid_tipo_documentoAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_tipo_documentoAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_cuenta_contableAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_cuenta_contableAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelid_cuenta_contableAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_cuenta_contableAsientoContableCajaChica);
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_cuenta_contableAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_cuenta_contableAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jTextAreadetalleAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrardetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPaneldetalleAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrardetalleAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_moduloAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_moduloAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelid_moduloAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_moduloAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimientoAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_tipo_movimientoAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelid_tipo_movimientoAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_tipo_movimientoAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_tipo_transaccion_moduloAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelid_tipo_transaccion_moduloAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_tipo_transaccion_moduloAsientoContableCajaChica);
		//this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_tipo_movimiento_moduloAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jPanelid_tipo_movimiento_moduloAsientoContableCajaChica.setVisible(this.asientocontablecajachicaConstantesFunciones.mostrarid_tipo_movimiento_moduloAsientoContableCajaChica);
		}
	}
	
	public void updateHabilitarResaltarControlesFormularioAsientoContableCajaChica() throws Exception {
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica==null) { //if(!this.conCargarFormDetalle) {
			this.inicializarFormDetalle();
		}
		
		if(this.jInternalFrameDetalleFormAsientoContableCajaChica!=null) {
	
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jLabelidAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activaridAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empresaAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarid_empresaAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_sucursalAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarid_sucursalAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_ejercicioAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarid_ejercicioAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_periodoAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarid_periodoAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_usuarioAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarid_usuarioAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_anioAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarid_anioAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_mesAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarid_mesAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jTextFieldsecuencialAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarsecuencialAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_monedaAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarid_monedaAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jDateChooserfechaAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarfechaAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_empleadoAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarid_empleadoAsientoContableCajaChica);
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_empleadoAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarid_empleadoAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_estado_asiento_contableAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarid_estado_asiento_contableAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jCheckBoxes_proveedorAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activares_proveedorAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_clienteAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarid_clienteAsientoContableCajaChica);
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_clienteAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarid_clienteAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_transaccionAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarid_transaccionAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_documentoAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarid_tipo_documentoAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_cuenta_contableAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarid_cuenta_contableAsientoContableCajaChica);
			this.jInternalFrameDetalleFormAsientoContableCajaChica.jButtonid_cuenta_contableAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarid_cuenta_contableAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jTextAreadetalleAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activardetalleAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_moduloAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarid_moduloAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimientoAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarid_tipo_movimientoAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_transaccion_moduloAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarid_tipo_transaccion_moduloAsientoContableCajaChica);
		this.jInternalFrameDetalleFormAsientoContableCajaChica.jComboBoxid_tipo_movimiento_moduloAsientoContableCajaChica.setEnabled(this.asientocontablecajachicaConstantesFunciones.activarid_tipo_movimiento_moduloAsientoContableCajaChica);
		}
	}
	
		
}